INFO:root:Trying {}
INFO:root:Starting Step 1
INFO:root:Current state [[[[2, 3, 5, 7, 8], [1], [4], [2, 3, 6, 8], [2, 3, 5, 8], [2, 3, 5, 6], [3, 6, 7], [9], [2, 3]], [[2, 3, 5, 6, 7, 8, 9], [2, 5, 7, 9], [2, 3, 5, 7, 8, 9], [2, 3, 6, 8, 9], [1], [4], [3, 6, 7], [2, 7], [5, 8]], [[2, 3, 5, 6, 8, 9], [2, 5, 9], [2, 3, 5, 8, 9], [7], [2, 3, 5, 8, 9], [2, 3, 5, 6, 9], [1], [4], [5, 8]], [[1], [6], [2, 7], [2, 3], [2, 3, 7], [8], [4], [5], [9]], [[5, 7, 9], [8], [5, 7, 9], [1], [4], [7, 9], [2], [3], [6]], [[4], [3], [2, 9], [5], [6], [2, 9], [8], [1], [7]], [[2, 3, 5, 7, 8, 9], [2, 5, 7, 9], [6], [2, 3, 8, 9], [2, 3, 5, 7, 8, 9], [1], [3, 7, 9], [2, 7], [4]], [[2, 3, 7, 8, 9], [2, 7, 9], [1], [4], [2, 3, 7, 8, 9], [2, 3, 7, 9], [5], [6], [2, 3]], [[2, 3, 7, 9], [4], [2, 3, 5, 7, 9], [2, 3, 6, 9], [2, 3, 5, 7, 9], [2, 3, 5, 6, 7, 9], [3, 7, 9], [8], [1]]]]
INFO:root:Doing checkSmall1
INFO:root:Getting tiny MUSes, distance 1, for 1 puzlits, 1 repeats
INFO:root:Chunked 1 in [1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
INFO:root:Doing checkSmall2
INFO:root:Getting tiny MUSes, distance 2, for 1 puzlits, 1 repeats
INFO:root:Chunked 1 in [1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
INFO:root:Considering 100 * 1 jobs for minsize=3
INFO:root:Chunked 100 in [9, 9, 9, 9, 8, 8, 8, 8, 8, 8, 8, 8]
INFO:root:Considering 100 * 1 jobs for minsize=4
INFO:root:Chunked 100 in [9, 9, 9, 9, 8, 8, 8, 8, 8, 8, 8, 8]
INFO:root:XX found first (9, 1) is not 2 5
INFO:root:XX add new best (9, 1) is not 2 5 5
INFO:root:XX add new best (9, 1) is not 2 5 5
INFO:root:XX add new best (9, 1) is not 2 5 5
INFO:root:XX add new best (9, 1) is not 2 5 5
INFO:root:XX add new best (9, 1) is not 2 5 5
INFO:root:XX add new best (9, 1) is not 2 5 5
INFO:root:XX add new best (9, 1) is not 2 5 5
INFO:root:XX add new best (9, 1) is not 2 5 5
INFO:root:XX add new best (9, 1) is not 2 5 5
INFO:root:XX add new best (9, 1) is not 2 5 5
INFO:root:XX add new best (9, 1) is not 2 5 5
INFO:root:XX add new best (9, 1) is not 2 5 5
INFO:root:XX add new best (9, 1) is not 2 5 5
INFO:root:XX add new best (9, 1) is not 2 5 5
INFO:root:XX add new best (9, 1) is not 2 5 5
INFO:root:XX add new best (9, 1) is not 2 5 5
INFO:root:XX add new best (9, 1) is not 2 5 5
INFO:root:XX add new best (9, 1) is not 2 5 5
INFO:root:XX add new best (9, 1) is not 2 5 5
INFO:root:XX add new best (9, 1) is not 2 5 5
INFO:root:XX add new best (9, 1) is not 2 5 5
INFO:root:XX add new best (9, 1) is not 2 5 5
INFO:root:XX add new best (9, 1) is not 2 5 5
INFO:root:XX add new best (9, 1) is not 2 5 5
INFO:root:XX add new best (9, 1) is not 2 5 5
INFO:root:XX add new best (9, 1) is not 2 5 5
INFO:root:XX add new best (9, 1) is not 2 5 5
INFO:root:XX add new best (9, 1) is not 2 5 5
INFO:root:XX add new best (9, 1) is not 2 5 5
INFO:root:XX add new best (9, 1) is not 2 5 5
INFO:root:XX add new best (9, 1) is not 2 5 5
INFO:root:XX add new best (9, 1) is not 2 5 5
INFO:root:XX add new best (9, 1) is not 2 5 5
INFO:root:XX add new best (9, 1) is not 2 5 5
INFO:root:XX add new best (9, 1) is not 2 5 5
INFO:root:XX add new best (9, 1) is not 2 5 5
INFO:root:XX add new best (9, 1) is not 2 5 5
INFO:root:XX add new best (9, 1) is not 2 5 5
INFO:root:XX add new best (9, 1) is not 2 5 5
INFO:root:XX add new best (9, 1) is not 2 5 5
INFO:root:XX add new best (9, 1) is not 2 5 5
INFO:root:XX add new best (9, 1) is not 2 5 5
INFO:root:XX add new best (9, 1) is not 2 5 5
INFO:root:XX add new best (9, 1) is not 2 5 5
INFO:root:XX add new best (9, 1) is not 2 5 5
INFO:root:XX add new best (9, 1) is not 2 5 5
INFO:root:XX add new best (9, 1) is not 2 5 5
INFO:root:XX add new best (9, 1) is not 2 5 5
INFO:root:XX add new best (9, 1) is not 2 5 5
INFO:root:XX add new best (9, 1) is not 2 5 5
INFO:root:XX add new best (9, 1) is not 2 5 5
INFO:root:XX add new best (9, 1) is not 2 5 5
INFO:root:XX add new best (9, 1) is not 2 5 5
INFO:root:XX add new best (9, 1) is not 2 5 5
INFO:root:XX add new best (9, 1) is not 2 5 5
INFO:root:XX add new best (9, 1) is not 2 5 5
INFO:root:XX add new best (9, 1) is not 2 5 5
INFO:root:XX add new best (9, 1) is not 2 5 5
INFO:root:XX add new best (9, 1) is not 2 5 5
INFO:root:XX add new best (9, 1) is not 2 5 5
INFO:root:XX add new best (9, 1) is not 2 5 5
INFO:root:XX add new best (9, 1) is not 2 5 5
INFO:root:XX add new best (9, 1) is not 2 5 5
INFO:root:XX add new best (9, 1) is not 2 5 5
INFO:root:XX add new best (9, 1) is not 2 5 5
INFO:root:XX add new best (9, 1) is not 2 5 5
INFO:root:XX add new best (9, 1) is not 2 5 5
INFO:root:XX add new best (9, 1) is not 2 5 5
INFO:root:XX add new best (9, 1) is not 2 5 5
INFO:root:XX add new best (9, 1) is not 2 5 5
INFO:root:XX add new best (9, 1) is not 2 5 5
INFO:root:XX add new best (9, 1) is not 2 5 5
INFO:root:XX add new best (9, 1) is not 2 5 5
INFO:root:XX add new best (9, 1) is not 2 5 5
INFO:root:XX add new best (9, 1) is not 2 5 5
INFO:root:XX add new best (9, 1) is not 2 5 5
INFO:root:XX add new best (9, 1) is not 2 5 5
INFO:root:XX add new best (9, 1) is not 2 5 5
INFO:root:XX add new best (9, 1) is not 2 5 5
INFO:root:XX add new best (9, 1) is not 2 5 5
INFO:root:XX add new best (9, 1) is not 2 5 5
INFO:root:XX add new best (9, 1) is not 2 5 5
INFO:root:XX add new best (9, 1) is not 2 5 5
INFO:root:XX add new best (9, 1) is not 2 5 5
INFO:root:XX add new best (9, 1) is not 2 5 5
INFO:root:XX add new best (9, 1) is not 2 5 5
INFO:root:XX add new best (9, 1) is not 2 5 5
INFO:root:XX add new best (9, 1) is not 2 5 5
INFO:root:XX add new best (9, 1) is not 2 5 5
INFO:root:XX add new best (9, 1) is not 2 5 5
INFO:root:XX add new best (9, 1) is not 2 5 5
INFO:root:XX add new best (9, 1) is not 2 5 5
INFO:root:XX add new best (9, 1) is not 2 5 5
INFO:root:XX add new best (9, 1) is not 2 5 5
INFO:root:XX add new best (9, 1) is not 2 5 5
INFO:root:XX add new best (9, 1) is not 2 5 5
INFO:root:XX add new best (9, 1) is not 2 5 5
INFO:root:XX add new best (9, 1) is not 2 5 5
INFO:root:XX add new best (9, 1) is not 2 5 5
INFO:root:Considering 100 * 1 jobs for minsize=5
INFO:root:Chunked 100 in [9, 9, 9, 9, 8, 8, 8, 8, 8, 8, 8, 8]
INFO:root:XX add new best (9, 1) is not 2 5 5
INFO:root:XX add new best (9, 1) is not 2 5 5
INFO:root:XX add new best (9, 1) is not 2 5 5
INFO:root:XX add new best (9, 1) is not 2 5 5
INFO:root:XX add new best (9, 1) is not 2 5 5
INFO:root:XX add new best (9, 1) is not 2 5 5
INFO:root:XX add new best (9, 1) is not 2 5 5
INFO:root:XX add new best (9, 1) is not 2 5 5
INFO:root:XX add new best (9, 1) is not 2 5 5
INFO:root:XX add new best (9, 1) is not 2 5 5
INFO:root:XX add new best (9, 1) is not 2 5 5
INFO:root:XX add new best (9, 1) is not 2 5 5
INFO:root:XX add new best (9, 1) is not 2 5 5
INFO:root:XX add new best (9, 1) is not 2 5 5
INFO:root:XX add new best (9, 1) is not 2 5 5
INFO:root:XX add new best (9, 1) is not 2 5 5
INFO:root:XX add new best (9, 1) is not 2 5 5
INFO:root:XX add new best (9, 1) is not 2 5 5
INFO:root:XX add new best (9, 1) is not 2 5 5
INFO:root:XX add new best (9, 1) is not 2 5 5
INFO:root:XX add new best (9, 1) is not 2 5 5
INFO:root:XX add new best (9, 1) is not 2 5 5
INFO:root:XX add new best (9, 1) is not 2 5 5
INFO:root:XX add new best (9, 1) is not 2 5 5
INFO:root:XX add new best (9, 1) is not 2 5 5
INFO:root:XX add new best (9, 1) is not 2 5 5
INFO:root:XX add new best (9, 1) is not 2 5 5
INFO:root:XX add new best (9, 1) is not 2 5 5
INFO:root:XX add new best (9, 1) is not 2 5 5
INFO:root:XX add new best (9, 1) is not 2 5 5
INFO:root:XX add new best (9, 1) is not 2 5 5
INFO:root:XX add new best (9, 1) is not 2 5 5
INFO:root:XX add new best (9, 1) is not 2 5 5
INFO:root:XX add new best (9, 1) is not 2 5 5
INFO:root:XX add new best (9, 1) is not 2 5 5
INFO:root:XX add new best (9, 1) is not 2 5 5
INFO:root:XX add new best (9, 1) is not 2 5 5
INFO:root:XX add new best (9, 1) is not 2 5 5
INFO:root:XX add new best (9, 1) is not 2 5 5
INFO:root:XX add new best (9, 1) is not 2 5 5
INFO:root:XX add new best (9, 1) is not 2 5 5
INFO:root:XX add new best (9, 1) is not 2 5 5
INFO:root:XX add new best (9, 1) is not 2 5 5
INFO:root:XX add new best (9, 1) is not 2 5 5
INFO:root:XX add new best (9, 1) is not 2 5 5
INFO:root:XX add new best (9, 1) is not 2 5 5
INFO:root:XX add new best (9, 1) is not 2 5 5
INFO:root:XX add new best (9, 1) is not 2 5 5
INFO:root:XX add new best (9, 1) is not 2 5 5
INFO:root:XX add new best (9, 1) is not 2 5 5
INFO:root:XX add new best (9, 1) is not 2 5 5
INFO:root:XX add new best (9, 1) is not 2 5 5
INFO:root:XX add new best (9, 1) is not 2 5 5
INFO:root:XX add new best (9, 1) is not 2 5 5
INFO:root:XX add new best (9, 1) is not 2 5 5
INFO:root:XX add new best (9, 1) is not 2 5 5
INFO:root:XX add new best (9, 1) is not 2 5 5
INFO:root:XX add new best (9, 1) is not 2 5 5
INFO:root:XX add new best (9, 1) is not 2 5 5
INFO:root:XX add new best (9, 1) is not 2 5 5
INFO:root:XX add new best (9, 1) is not 2 5 5
INFO:root:XX add new best (9, 1) is not 2 5 5
INFO:root:XX add new best (9, 1) is not 2 5 5
INFO:root:XX add new best (9, 1) is not 2 5 5
INFO:root:XX add new best (9, 1) is not 2 5 5
INFO:root:XX add new best (9, 1) is not 2 5 5
INFO:root:XX add new best (9, 1) is not 2 5 5
INFO:root:XX add new best (9, 1) is not 2 5 5
INFO:root:XX add new best (9, 1) is not 2 5 5
INFO:root:XX add new best (9, 1) is not 2 5 5
INFO:root:XX add new best (9, 1) is not 2 5 5
INFO:root:XX add new best (9, 1) is not 2 5 5
INFO:root:XX add new best (9, 1) is not 2 5 5
INFO:root:XX add new best (9, 1) is not 2 5 5
INFO:root:XX add new best (9, 1) is not 2 5 5
INFO:root:XX add new best (9, 1) is not 2 5 5
INFO:root:XX add new best (9, 1) is not 2 5 5
INFO:root:XX add new best (9, 1) is not 2 5 5
INFO:root:XX add new best (9, 1) is not 2 5 5
INFO:root:XX add new best (9, 1) is not 2 5 5
INFO:root:XX add new best (9, 1) is not 2 5 5
INFO:root:XX add new best (9, 1) is not 2 5 5
INFO:root:XX add new best (9, 1) is not 2 5 5
INFO:root:XX add new best (9, 1) is not 2 5 5
INFO:root:XX add new best (9, 1) is not 2 5 5
INFO:root:XX add new best (9, 1) is not 2 5 5
INFO:root:XX add new best (9, 1) is not 2 5 5
INFO:root:XX add new best (9, 1) is not 2 5 5
INFO:root:XX add new best (9, 1) is not 2 5 5
INFO:root:XX add new best (9, 1) is not 2 5 5
INFO:root:XX add new best (9, 1) is not 2 5 5
INFO:root:XX add new best (9, 1) is not 2 5 5
INFO:root:XX add new best (9, 1) is not 2 5 5
INFO:root:XX add new best (9, 1) is not 2 5 5
INFO:root:XX add new best (9, 1) is not 2 5 5
INFO:root:XX add new best (9, 1) is not 2 5 5
INFO:root:XX add new best (9, 1) is not 2 5 5
INFO:root:XX add new best (9, 1) is not 2 5 5
INFO:root:XX add new best (9, 1) is not 2 5 5
INFO:root:XX add new best (9, 1) is not 2 5 5
INFO:root:Trace: [(5, [(9, 1) is not 2])]
INFO:root:Trace Quality: [(5, 1)]
INFO:root:Trace Sorted: [(5, 1)]
INFO:root:Finished
INFO:root:Full Trace [(5, [(9, 1) is not 2])]
INFO:root:Trying {'prechopMUSes': True}
INFO:root:Starting Step 1
INFO:root:Current state [[[[2, 3, 5, 7, 8], [1], [4], [2, 3, 6, 8], [2, 3, 5, 8], [2, 3, 5, 6], [3, 6, 7], [9], [2, 3]], [[2, 3, 5, 6, 7, 8, 9], [2, 5, 7, 9], [2, 3, 5, 7, 8, 9], [2, 3, 6, 8, 9], [1], [4], [3, 6, 7], [2, 7], [5, 8]], [[2, 3, 5, 6, 8, 9], [2, 5, 9], [2, 3, 5, 8, 9], [7], [2, 3, 5, 8, 9], [2, 3, 5, 6, 9], [1], [4], [5, 8]], [[1], [6], [2, 7], [2, 3], [2, 3, 7], [8], [4], [5], [9]], [[5, 7, 9], [8], [5, 7, 9], [1], [4], [7, 9], [2], [3], [6]], [[4], [3], [2, 9], [5], [6], [2, 9], [8], [1], [7]], [[2, 3, 5, 7, 8, 9], [2, 5, 7, 9], [6], [2, 3, 8, 9], [2, 3, 5, 7, 8, 9], [1], [3, 7, 9], [2, 7], [4]], [[2, 3, 7, 8, 9], [2, 7, 9], [1], [4], [2, 3, 7, 8, 9], [2, 3, 7, 9], [5], [6], [2, 3]], [[2, 3, 7, 9], [4], [2, 3, 5, 7, 9], [2, 3, 6, 9], [2, 3, 5, 7, 9], [2, 3, 5, 6, 7, 9], [3, 7, 9], [8], [1]]]]
INFO:root:Doing checkSmall1
INFO:root:Getting tiny MUSes, distance 1, for 1 puzlits, 1 repeats
INFO:root:Chunked 1 in [1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
INFO:root:Doing checkSmall2
INFO:root:Getting tiny MUSes, distance 2, for 1 puzlits, 1 repeats
INFO:root:Chunked 1 in [1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
INFO:root:Considering 100 * 1 jobs for minsize=3
INFO:root:Chunked 100 in [9, 9, 9, 9, 8, 8, 8, 8, 8, 8, 8, 8]
INFO:root:XX found first (9, 1) is not 2 3
INFO:root:XX add new best (9, 1) is not 2 3 3
INFO:root:XX add new best (9, 1) is not 2 3 3
INFO:root:XX add new best (9, 1) is not 2 3 3
INFO:root:XX add new best (9, 1) is not 2 3 3
INFO:root:XX add new best (9, 1) is not 2 3 3
INFO:root:XX add new best (9, 1) is not 2 3 3
INFO:root:XX add new best (9, 1) is not 2 3 3
INFO:root:XX add new best (9, 1) is not 2 3 3
INFO:root:XX add new best (9, 1) is not 2 3 3
INFO:root:XX add new best (9, 1) is not 2 3 3
INFO:root:XX add new best (9, 1) is not 2 3 3
INFO:root:XX add new best (9, 1) is not 2 3 3
INFO:root:XX add new best (9, 1) is not 2 3 3
INFO:root:XX add new best (9, 1) is not 2 3 3
INFO:root:XX add new best (9, 1) is not 2 3 3
INFO:root:XX add new best (9, 1) is not 2 3 3
INFO:root:XX add new best (9, 1) is not 2 3 3
INFO:root:XX add new best (9, 1) is not 2 3 3
INFO:root:XX add new best (9, 1) is not 2 3 3
INFO:root:XX add new best (9, 1) is not 2 3 3
INFO:root:XX add new best (9, 1) is not 2 3 3
INFO:root:XX add new best (9, 1) is not 2 3 3
INFO:root:XX add new best (9, 1) is not 2 3 3
INFO:root:XX add new best (9, 1) is not 2 3 3
INFO:root:XX add new best (9, 1) is not 2 3 3
INFO:root:XX add new best (9, 1) is not 2 3 3
INFO:root:XX add new best (9, 1) is not 2 3 3
INFO:root:XX add new best (9, 1) is not 2 3 3
INFO:root:XX add new best (9, 1) is not 2 3 3
INFO:root:XX add new best (9, 1) is not 2 3 3
INFO:root:Trace: [(3, [(9, 1) is not 2])]
INFO:root:Trace Quality: [(3, 1)]
INFO:root:Trace Sorted: [(3, 1)]
INFO:root:Finished
INFO:root:Full Trace [(3, [(9, 1) is not 2])]
INFO:root:Trying {'quarterChopMUS': True}
INFO:root:Starting Step 1
INFO:root:Current state [[[[2, 3, 5, 7, 8], [1], [4], [2, 3, 6, 8], [2, 3, 5, 8], [2, 3, 5, 6], [3, 6, 7], [9], [2, 3]], [[2, 3, 5, 6, 7, 8, 9], [2, 5, 7, 9], [2, 3, 5, 7, 8, 9], [2, 3, 6, 8, 9], [1], [4], [3, 6, 7], [2, 7], [5, 8]], [[2, 3, 5, 6, 8, 9], [2, 5, 9], [2, 3, 5, 8, 9], [7], [2, 3, 5, 8, 9], [2, 3, 5, 6, 9], [1], [4], [5, 8]], [[1], [6], [2, 7], [2, 3], [2, 3, 7], [8], [4], [5], [9]], [[5, 7, 9], [8], [5, 7, 9], [1], [4], [7, 9], [2], [3], [6]], [[4], [3], [2, 9], [5], [6], [2, 9], [8], [1], [7]], [[2, 3, 5, 7, 8, 9], [2, 5, 7, 9], [6], [2, 3, 8, 9], [2, 3, 5, 7, 8, 9], [1], [3, 7, 9], [2, 7], [4]], [[2, 3, 7, 8, 9], [2, 7, 9], [1], [4], [2, 3, 7, 8, 9], [2, 3, 7, 9], [5], [6], [2, 3]], [[2, 3, 7, 9], [4], [2, 3, 5, 7, 9], [2, 3, 6, 9], [2, 3, 5, 7, 9], [2, 3, 5, 6, 7, 9], [3, 7, 9], [8], [1]]]]
INFO:root:Doing checkSmall1
INFO:root:Getting tiny MUSes, distance 1, for 1 puzlits, 1 repeats
INFO:root:Chunked 1 in [1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
INFO:root:Doing checkSmall2
INFO:root:Getting tiny MUSes, distance 2, for 1 puzlits, 1 repeats
INFO:root:Chunked 1 in [1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
INFO:root:Considering 100 * 1 jobs for minsize=3
INFO:root:Chunked 100 in [9, 9, 9, 9, 8, 8, 8, 8, 8, 8, 8, 8]
INFO:root:XX found first (9, 1) is not 2 3
INFO:root:XX add new best (9, 1) is not 2 3 3
INFO:root:XX add new best (9, 1) is not 2 3 3
INFO:root:XX add new best (9, 1) is not 2 3 3
INFO:root:XX add new best (9, 1) is not 2 3 3
INFO:root:XX add new best (9, 1) is not 2 3 3
INFO:root:XX add new best (9, 1) is not 2 3 3
INFO:root:XX add new best (9, 1) is not 2 3 3
INFO:root:XX add new best (9, 1) is not 2 3 3
INFO:root:XX add new best (9, 1) is not 2 3 3
INFO:root:XX add new best (9, 1) is not 2 3 3
INFO:root:XX add new best (9, 1) is not 2 3 3
INFO:root:XX add new best (9, 1) is not 2 3 3
INFO:root:XX add new best (9, 1) is not 2 3 3
INFO:root:XX add new best (9, 1) is not 2 3 3
INFO:root:XX add new best (9, 1) is not 2 3 3
INFO:root:XX add new best (9, 1) is not 2 3 3
INFO:root:XX add new best (9, 1) is not 2 3 3
INFO:root:XX add new best (9, 1) is not 2 3 3
INFO:root:XX add new best (9, 1) is not 2 3 3
INFO:root:XX add new best (9, 1) is not 2 3 3
INFO:root:XX add new best (9, 1) is not 2 3 3
INFO:root:XX add new best (9, 1) is not 2 3 3
INFO:root:XX add new best (9, 1) is not 2 3 3
INFO:root:XX add new best (9, 1) is not 2 3 3
INFO:root:XX add new best (9, 1) is not 2 3 3
INFO:root:XX add new best (9, 1) is not 2 3 3
INFO:root:XX add new best (9, 1) is not 2 3 3
INFO:root:XX add new best (9, 1) is not 2 3 3
INFO:root:XX add new best (9, 1) is not 2 3 3
INFO:root:XX add new best (9, 1) is not 2 3 3
INFO:root:XX add new best (9, 1) is not 2 3 3
INFO:root:Trace: [(3, [(9, 1) is not 2])]
INFO:root:Trace Quality: [(3, 1)]
INFO:root:Trace Sorted: [(3, 1)]
INFO:root:Finished
INFO:root:Full Trace [(3, [(9, 1) is not 2])]
INFO:root:Trying {'minPrecheckMUS': True}
INFO:root:Starting Step 1
INFO:root:Current state [[[[2, 3, 5, 7, 8], [1], [4], [2, 3, 6, 8], [2, 3, 5, 8], [2, 3, 5, 6], [3, 6, 7], [9], [2, 3]], [[2, 3, 5, 6, 7, 8, 9], [2, 5, 7, 9], [2, 3, 5, 7, 8, 9], [2, 3, 6, 8, 9], [1], [4], [3, 6, 7], [2, 7], [5, 8]], [[2, 3, 5, 6, 8, 9], [2, 5, 9], [2, 3, 5, 8, 9], [7], [2, 3, 5, 8, 9], [2, 3, 5, 6, 9], [1], [4], [5, 8]], [[1], [6], [2, 7], [2, 3], [2, 3, 7], [8], [4], [5], [9]], [[5, 7, 9], [8], [5, 7, 9], [1], [4], [7, 9], [2], [3], [6]], [[4], [3], [2, 9], [5], [6], [2, 9], [8], [1], [7]], [[2, 3, 5, 7, 8, 9], [2, 5, 7, 9], [6], [2, 3, 8, 9], [2, 3, 5, 7, 8, 9], [1], [3, 7, 9], [2, 7], [4]], [[2, 3, 7, 8, 9], [2, 7, 9], [1], [4], [2, 3, 7, 8, 9], [2, 3, 7, 9], [5], [6], [2, 3]], [[2, 3, 7, 9], [4], [2, 3, 5, 7, 9], [2, 3, 6, 9], [2, 3, 5, 7, 9], [2, 3, 5, 6, 7, 9], [3, 7, 9], [8], [1]]]]
INFO:root:Doing checkSmall1
INFO:root:Getting tiny MUSes, distance 1, for 1 puzlits, 1 repeats
INFO:root:Chunked 1 in [1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
INFO:root:Doing checkSmall2
INFO:root:Getting tiny MUSes, distance 2, for 1 puzlits, 1 repeats
INFO:root:Chunked 1 in [1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
INFO:root:Considering 100 * 1 jobs for minsize=3
INFO:root:Chunked 100 in [9, 9, 9, 9, 8, 8, 8, 8, 8, 8, 8, 8]
INFO:root:XX found first (9, 1) is not 2 3
INFO:root:XX add new best (9, 1) is not 2 3 3
INFO:root:XX add new best (9, 1) is not 2 3 3
INFO:root:XX add new best (9, 1) is not 2 3 3
INFO:root:XX add new best (9, 1) is not 2 3 3
INFO:root:XX add new best (9, 1) is not 2 3 3
INFO:root:XX add new best (9, 1) is not 2 3 3
INFO:root:XX add new best (9, 1) is not 2 3 3
INFO:root:XX add new best (9, 1) is not 2 3 3
INFO:root:XX add new best (9, 1) is not 2 3 3
INFO:root:XX add new best (9, 1) is not 2 3 3
INFO:root:XX add new best (9, 1) is not 2 3 3
INFO:root:XX add new best (9, 1) is not 2 3 3
INFO:root:XX add new best (9, 1) is not 2 3 3
INFO:root:XX add new best (9, 1) is not 2 3 3
INFO:root:XX add new best (9, 1) is not 2 3 3
INFO:root:XX add new best (9, 1) is not 2 3 3
INFO:root:XX add new best (9, 1) is not 2 3 3
INFO:root:XX add new best (9, 1) is not 2 3 3
INFO:root:XX add new best (9, 1) is not 2 3 3
INFO:root:XX add new best (9, 1) is not 2 3 3
INFO:root:XX add new best (9, 1) is not 2 3 3
INFO:root:XX add new best (9, 1) is not 2 3 3
INFO:root:XX add new best (9, 1) is not 2 3 3
INFO:root:XX add new best (9, 1) is not 2 3 3
INFO:root:XX add new best (9, 1) is not 2 3 3
INFO:root:XX add new best (9, 1) is not 2 3 3
INFO:root:XX add new best (9, 1) is not 2 3 3
INFO:root:XX add new best (9, 1) is not 2 3 3
INFO:root:XX add new best (9, 1) is not 2 3 3
INFO:root:Trace: [(3, [(9, 1) is not 2])]
INFO:root:Trace Quality: [(3, 1)]
INFO:root:Trace Sorted: [(3, 1)]
INFO:root:Finished
INFO:root:Full Trace [(3, [(9, 1) is not 2])]
INFO:root:Trying {'gallopingMUSes': True}
INFO:root:Starting Step 1
INFO:root:Current state [[[[2, 3, 5, 7, 8], [1], [4], [2, 3, 6, 8], [2, 3, 5, 8], [2, 3, 5, 6], [3, 6, 7], [9], [2, 3]], [[2, 3, 5, 6, 7, 8, 9], [2, 5, 7, 9], [2, 3, 5, 7, 8, 9], [2, 3, 6, 8, 9], [1], [4], [3, 6, 7], [2, 7], [5, 8]], [[2, 3, 5, 6, 8, 9], [2, 5, 9], [2, 3, 5, 8, 9], [7], [2, 3, 5, 8, 9], [2, 3, 5, 6, 9], [1], [4], [5, 8]], [[1], [6], [2, 7], [2, 3], [2, 3, 7], [8], [4], [5], [9]], [[5, 7, 9], [8], [5, 7, 9], [1], [4], [7, 9], [2], [3], [6]], [[4], [3], [2, 9], [5], [6], [2, 9], [8], [1], [7]], [[2, 3, 5, 7, 8, 9], [2, 5, 7, 9], [6], [2, 3, 8, 9], [2, 3, 5, 7, 8, 9], [1], [3, 7, 9], [2, 7], [4]], [[2, 3, 7, 8, 9], [2, 7, 9], [1], [4], [2, 3, 7, 8, 9], [2, 3, 7, 9], [5], [6], [2, 3]], [[2, 3, 7, 9], [4], [2, 3, 5, 7, 9], [2, 3, 6, 9], [2, 3, 5, 7, 9], [2, 3, 5, 6, 7, 9], [3, 7, 9], [8], [1]]]]
INFO:root:Doing checkSmall1
INFO:root:Getting tiny MUSes, distance 1, for 1 puzlits, 1 repeats
INFO:root:Chunked 1 in [1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
INFO:root:Doing checkSmall2
INFO:root:Getting tiny MUSes, distance 2, for 1 puzlits, 1 repeats
INFO:root:Chunked 1 in [1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
INFO:root:Considering 100 * 1 jobs for minsize=3
INFO:root:Chunked 100 in [9, 9, 9, 9, 8, 8, 8, 8, 8, 8, 8, 8]
INFO:root:XX found first (9, 1) is not 2 3
INFO:root:XX add new best (9, 1) is not 2 3 3
INFO:root:XX add new best (9, 1) is not 2 3 3
INFO:root:XX add new best (9, 1) is not 2 3 3
INFO:root:XX add new best (9, 1) is not 2 3 3
INFO:root:XX add new best (9, 1) is not 2 3 3
INFO:root:XX add new best (9, 1) is not 2 3 3
INFO:root:XX add new best (9, 1) is not 2 3 3
INFO:root:XX add new best (9, 1) is not 2 3 3
INFO:root:XX add new best (9, 1) is not 2 3 3
INFO:root:XX add new best (9, 1) is not 2 3 3
INFO:root:XX add new best (9, 1) is not 2 3 3
INFO:root:XX add new best (9, 1) is not 2 3 3
INFO:root:XX add new best (9, 1) is not 2 3 3
INFO:root:XX add new best (9, 1) is not 2 3 3
INFO:root:XX add new best (9, 1) is not 2 3 3
INFO:root:XX add new best (9, 1) is not 2 3 3
INFO:root:XX add new best (9, 1) is not 2 3 3
INFO:root:XX add new best (9, 1) is not 2 3 3
INFO:root:XX add new best (9, 1) is not 2 3 3
INFO:root:XX add new best (9, 1) is not 2 3 3
INFO:root:XX add new best (9, 1) is not 2 3 3
INFO:root:XX add new best (9, 1) is not 2 3 3
INFO:root:XX add new best (9, 1) is not 2 3 3
INFO:root:XX add new best (9, 1) is not 2 3 3
INFO:root:XX add new best (9, 1) is not 2 3 3
INFO:root:XX add new best (9, 1) is not 2 3 3
INFO:root:XX add new best (9, 1) is not 2 3 3
INFO:root:XX add new best (9, 1) is not 2 3 3
INFO:root:Trace: [(3, [(9, 1) is not 2])]
INFO:root:Trace Quality: [(3, 1)]
INFO:root:Trace Sorted: [(3, 1)]
INFO:root:Finished
INFO:root:Full Trace [(3, [(9, 1) is not 2])]
INFO:root:Trying {'minPrecheckStepsMUS': True}
INFO:root:Starting Step 1
INFO:root:Current state [[[[2, 3, 5, 7, 8], [1], [4], [2, 3, 6, 8], [2, 3, 5, 8], [2, 3, 5, 6], [3, 6, 7], [9], [2, 3]], [[2, 3, 5, 6, 7, 8, 9], [2, 5, 7, 9], [2, 3, 5, 7, 8, 9], [2, 3, 6, 8, 9], [1], [4], [3, 6, 7], [2, 7], [5, 8]], [[2, 3, 5, 6, 8, 9], [2, 5, 9], [2, 3, 5, 8, 9], [7], [2, 3, 5, 8, 9], [2, 3, 5, 6, 9], [1], [4], [5, 8]], [[1], [6], [2, 7], [2, 3], [2, 3, 7], [8], [4], [5], [9]], [[5, 7, 9], [8], [5, 7, 9], [1], [4], [7, 9], [2], [3], [6]], [[4], [3], [2, 9], [5], [6], [2, 9], [8], [1], [7]], [[2, 3, 5, 7, 8, 9], [2, 5, 7, 9], [6], [2, 3, 8, 9], [2, 3, 5, 7, 8, 9], [1], [3, 7, 9], [2, 7], [4]], [[2, 3, 7, 8, 9], [2, 7, 9], [1], [4], [2, 3, 7, 8, 9], [2, 3, 7, 9], [5], [6], [2, 3]], [[2, 3, 7, 9], [4], [2, 3, 5, 7, 9], [2, 3, 6, 9], [2, 3, 5, 7, 9], [2, 3, 5, 6, 7, 9], [3, 7, 9], [8], [1]]]]
INFO:root:Doing checkSmall1
INFO:root:Getting tiny MUSes, distance 1, for 1 puzlits, 1 repeats
INFO:root:Chunked 1 in [1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
INFO:root:Doing checkSmall2
INFO:root:Getting tiny MUSes, distance 2, for 1 puzlits, 1 repeats
INFO:root:Chunked 1 in [1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
INFO:root:Considering 100 * 1 jobs for minsize=3
INFO:root:Chunked 100 in [9, 9, 9, 9, 8, 8, 8, 8, 8, 8, 8, 8]
INFO:root:XX found first (9, 1) is not 2 3
INFO:root:XX add new best (9, 1) is not 2 3 3
INFO:root:XX add new best (9, 1) is not 2 3 3
INFO:root:XX add new best (9, 1) is not 2 3 3
INFO:root:XX add new best (9, 1) is not 2 3 3
INFO:root:XX add new best (9, 1) is not 2 3 3
INFO:root:XX add new best (9, 1) is not 2 3 3
INFO:root:XX add new best (9, 1) is not 2 3 3
INFO:root:XX add new best (9, 1) is not 2 3 3
INFO:root:XX add new best (9, 1) is not 2 3 3
INFO:root:XX add new best (9, 1) is not 2 3 3
INFO:root:XX add new best (9, 1) is not 2 3 3
INFO:root:XX add new best (9, 1) is not 2 3 3
INFO:root:XX add new best (9, 1) is not 2 3 3
INFO:root:XX add new best (9, 1) is not 2 3 3
INFO:root:XX add new best (9, 1) is not 2 3 3
INFO:root:XX add new best (9, 1) is not 2 3 3
INFO:root:XX add new best (9, 1) is not 2 3 3
INFO:root:XX add new best (9, 1) is not 2 3 3
INFO:root:XX add new best (9, 1) is not 2 3 3
INFO:root:XX add new best (9, 1) is not 2 3 3
INFO:root:XX add new best (9, 1) is not 2 3 3
INFO:root:XX add new best (9, 1) is not 2 3 3
INFO:root:XX add new best (9, 1) is not 2 3 3
INFO:root:XX add new best (9, 1) is not 2 3 3
INFO:root:XX add new best (9, 1) is not 2 3 3
INFO:root:XX add new best (9, 1) is not 2 3 3
INFO:root:XX add new best (9, 1) is not 2 3 3
INFO:root:XX add new best (9, 1) is not 2 3 3
INFO:root:XX add new best (9, 1) is not 2 3 3
INFO:root:XX add new best (9, 1) is not 2 3 3
INFO:root:Trace: [(3, [(9, 1) is not 2])]
INFO:root:Trace Quality: [(3, 1)]
INFO:root:Trace Sorted: [(3, 1)]
INFO:root:Finished
INFO:root:Full Trace [(3, [(9, 1) is not 2])]
INFO:root:Trying {'gallopingMUSes': True, 'minPrecheckMUS': True}
INFO:root:Starting Step 1
INFO:root:Current state [[[[2, 3, 5, 7, 8], [1], [4], [2, 3, 6, 8], [2, 3, 5, 8], [2, 3, 5, 6], [3, 6, 7], [9], [2, 3]], [[2, 3, 5, 6, 7, 8, 9], [2, 5, 7, 9], [2, 3, 5, 7, 8, 9], [2, 3, 6, 8, 9], [1], [4], [3, 6, 7], [2, 7], [5, 8]], [[2, 3, 5, 6, 8, 9], [2, 5, 9], [2, 3, 5, 8, 9], [7], [2, 3, 5, 8, 9], [2, 3, 5, 6, 9], [1], [4], [5, 8]], [[1], [6], [2, 7], [2, 3], [2, 3, 7], [8], [4], [5], [9]], [[5, 7, 9], [8], [5, 7, 9], [1], [4], [7, 9], [2], [3], [6]], [[4], [3], [2, 9], [5], [6], [2, 9], [8], [1], [7]], [[2, 3, 5, 7, 8, 9], [2, 5, 7, 9], [6], [2, 3, 8, 9], [2, 3, 5, 7, 8, 9], [1], [3, 7, 9], [2, 7], [4]], [[2, 3, 7, 8, 9], [2, 7, 9], [1], [4], [2, 3, 7, 8, 9], [2, 3, 7, 9], [5], [6], [2, 3]], [[2, 3, 7, 9], [4], [2, 3, 5, 7, 9], [2, 3, 6, 9], [2, 3, 5, 7, 9], [2, 3, 5, 6, 7, 9], [3, 7, 9], [8], [1]]]]
INFO:root:Doing checkSmall1
INFO:root:Getting tiny MUSes, distance 1, for 1 puzlits, 1 repeats
INFO:root:Chunked 1 in [1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
INFO:root:Doing checkSmall2
INFO:root:Getting tiny MUSes, distance 2, for 1 puzlits, 1 repeats
INFO:root:Chunked 1 in [1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
INFO:root:Considering 100 * 1 jobs for minsize=3
INFO:root:Chunked 100 in [9, 9, 9, 9, 8, 8, 8, 8, 8, 8, 8, 8]
INFO:root:XX found first (9, 1) is not 2 3
INFO:root:XX add new best (9, 1) is not 2 3 3
INFO:root:XX add new best (9, 1) is not 2 3 3
INFO:root:XX add new best (9, 1) is not 2 3 3
INFO:root:XX add new best (9, 1) is not 2 3 3
INFO:root:XX add new best (9, 1) is not 2 3 3
INFO:root:XX add new best (9, 1) is not 2 3 3
INFO:root:XX add new best (9, 1) is not 2 3 3
INFO:root:XX add new best (9, 1) is not 2 3 3
INFO:root:XX add new best (9, 1) is not 2 3 3
INFO:root:XX add new best (9, 1) is not 2 3 3
INFO:root:XX add new best (9, 1) is not 2 3 3
INFO:root:XX add new best (9, 1) is not 2 3 3
INFO:root:XX add new best (9, 1) is not 2 3 3
INFO:root:XX add new best (9, 1) is not 2 3 3
INFO:root:XX add new best (9, 1) is not 2 3 3
INFO:root:XX add new best (9, 1) is not 2 3 3
INFO:root:XX add new best (9, 1) is not 2 3 3
INFO:root:XX add new best (9, 1) is not 2 3 3
INFO:root:XX add new best (9, 1) is not 2 3 3
INFO:root:XX add new best (9, 1) is not 2 3 3
INFO:root:XX add new best (9, 1) is not 2 3 3
INFO:root:XX add new best (9, 1) is not 2 3 3
INFO:root:XX add new best (9, 1) is not 2 3 3
INFO:root:XX add new best (9, 1) is not 2 3 3
INFO:root:XX add new best (9, 1) is not 2 3 3
INFO:root:XX add new best (9, 1) is not 2 3 3
INFO:root:XX add new best (9, 1) is not 2 3 3
INFO:root:XX add new best (9, 1) is not 2 3 3
INFO:root:XX add new best (9, 1) is not 2 3 3
INFO:root:XX add new best (9, 1) is not 2 3 3
INFO:root:Trace: [(3, [(9, 1) is not 2])]
INFO:root:Trace Quality: [(3, 1)]
INFO:root:Trace Sorted: [(3, 1)]
INFO:root:Finished
INFO:root:Full Trace [(3, [(9, 1) is not 2])]
INFO:root:Trying {}
INFO:root:Starting Step 1
INFO:root:Current state [[[[1, 3, 4, 8, 9], [1, 2, 4], [2, 3, 4, 8, 9], [2, 3, 4, 7, 8, 9], [6], [1, 2, 3, 4, 7, 8], [2, 7, 8], [5], [2, 4, 7, 8]], [[1, 3, 4, 8], [1, 2, 4], [5], [2, 3, 4, 7, 8], [2, 3, 7, 8], [1, 2, 3, 4, 7, 8], [6], [9], [2, 4, 7, 8]], [[6], [7], [2, 4, 8, 9], [2, 4, 5, 8, 9], [2, 8, 9], [2, 4, 5, 8], [2, 8], [1], [3]], [[1, 3, 4, 9], [8], [2, 3, 4, 9], [2, 3, 6, 7], [5], [2, 3, 6, 7], [1, 2, 3, 9], [2, 4, 6], [2, 6, 9]], [[3, 4, 5], [2, 4, 6], [7], [1], [2, 3, 8], [9], [2, 3, 5, 8], [2, 4, 6, 8], [2, 5, 6, 8]], [[1, 3, 5, 9], [1, 2, 6], [2, 3, 9], [2, 3, 6, 8], [4], [2, 3, 6, 8], [1, 2, 3, 5, 8, 9], [7], [2, 5, 6, 8, 9]], [[2], [9], [1], [4, 5, 6, 7, 8], [7, 8], [4, 5, 6, 7, 8], [5, 7, 8], [3], [5, 6, 7, 8]], [[7, 8], [5], [6], [2, 3, 7, 8, 9], [2, 3, 7, 8, 9], [2, 3, 7, 8], [4], [2, 8], [1]], [[4, 7, 8], [3], [4, 8], [2, 5, 6, 7, 8], [1], [2, 5, 6, 7, 8], [2, 5, 7, 8, 9], [2, 6, 8], [2, 5, 6, 7, 8, 9]]]]
INFO:root:Doing checkSmall1
INFO:root:Getting tiny MUSes, distance 1, for 1 puzlits, 1 repeats
INFO:root:Chunked 1 in [1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
INFO:root:Doing checkSmall2
INFO:root:Getting tiny MUSes, distance 2, for 1 puzlits, 1 repeats
INFO:root:Chunked 1 in [1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
INFO:root:Considering 100 * 1 jobs for minsize=3
INFO:root:Chunked 100 in [9, 9, 9, 9, 8, 8, 8, 8, 8, 8, 8, 8]
INFO:root:XX found first (1, 2) is not 1 3
INFO:root:XX add new best (1, 2) is not 1 3 3
INFO:root:XX add new best (1, 2) is not 1 3 3
INFO:root:XX add new best (1, 2) is not 1 3 3
INFO:root:XX add new best (1, 2) is not 1 3 3
INFO:root:XX add new best (1, 2) is not 1 3 3
INFO:root:XX add new best (1, 2) is not 1 3 3
INFO:root:XX add new best (1, 2) is not 1 3 3
INFO:root:XX add new best (1, 2) is not 1 3 3
INFO:root:XX add new best (1, 2) is not 1 3 3
INFO:root:XX add new best (1, 2) is not 1 3 3
INFO:root:XX add new best (1, 2) is not 1 3 3
INFO:root:XX add new best (1, 2) is not 1 3 3
INFO:root:XX add new best (1, 2) is not 1 3 3
INFO:root:XX add new best (1, 2) is not 1 3 3
INFO:root:XX add new best (1, 2) is not 1 3 3
INFO:root:XX add new best (1, 2) is not 1 3 3
INFO:root:XX add new best (1, 2) is not 1 3 3
INFO:root:XX add new best (1, 2) is not 1 3 3
INFO:root:XX add new best (1, 2) is not 1 3 3
INFO:root:XX add new best (1, 2) is not 1 3 3
INFO:root:XX add new best (1, 2) is not 1 3 3
INFO:root:XX add new best (1, 2) is not 1 3 3
INFO:root:XX add new best (1, 2) is not 1 3 3
INFO:root:XX add new best (1, 2) is not 1 3 3
INFO:root:XX add new best (1, 2) is not 1 3 3
INFO:root:XX add new best (1, 2) is not 1 3 3
INFO:root:XX add new best (1, 2) is not 1 3 3
INFO:root:XX add new best (1, 2) is not 1 3 3
INFO:root:XX add new best (1, 2) is not 1 3 3
INFO:root:XX add new best (1, 2) is not 1 3 3
INFO:root:XX add new best (1, 2) is not 1 3 3
INFO:root:XX add new best (1, 2) is not 1 3 3
INFO:root:XX add new best (1, 2) is not 1 3 3
INFO:root:XX add new best (1, 2) is not 1 3 3
INFO:root:XX add new best (1, 2) is not 1 3 3
INFO:root:XX add new best (1, 2) is not 1 3 3
INFO:root:XX add new best (1, 2) is not 1 3 3
INFO:root:XX add new best (1, 2) is not 1 3 3
INFO:root:XX add new best (1, 2) is not 1 3 3
INFO:root:XX add new best (1, 2) is not 1 3 3
INFO:root:XX add new best (1, 2) is not 1 3 3
INFO:root:XX add new best (1, 2) is not 1 3 3
INFO:root:XX add new best (1, 2) is not 1 3 3
INFO:root:XX add new best (1, 2) is not 1 3 3
INFO:root:XX add new best (1, 2) is not 1 3 3
INFO:root:XX add new best (1, 2) is not 1 3 3
INFO:root:XX add new best (1, 2) is not 1 3 3
INFO:root:XX add new best (1, 2) is not 1 3 3
INFO:root:XX add new best (1, 2) is not 1 3 3
INFO:root:XX add new best (1, 2) is not 1 3 3
INFO:root:XX add new best (1, 2) is not 1 3 3
INFO:root:XX add new best (1, 2) is not 1 3 3
INFO:root:XX add new best (1, 2) is not 1 3 3
INFO:root:XX add new best (1, 2) is not 1 3 3
INFO:root:XX add new best (1, 2) is not 1 3 3
INFO:root:XX add new best (1, 2) is not 1 3 3
INFO:root:XX add new best (1, 2) is not 1 3 3
INFO:root:XX add new best (1, 2) is not 1 3 3
INFO:root:XX add new best (1, 2) is not 1 3 3
INFO:root:XX add new best (1, 2) is not 1 3 3
INFO:root:XX add new best (1, 2) is not 1 3 3
INFO:root:XX add new best (1, 2) is not 1 3 3
INFO:root:XX add new best (1, 2) is not 1 3 3
INFO:root:XX add new best (1, 2) is not 1 3 3
INFO:root:XX add new best (1, 2) is not 1 3 3
INFO:root:XX add new best (1, 2) is not 1 3 3
INFO:root:XX add new best (1, 2) is not 1 3 3
INFO:root:XX add new best (1, 2) is not 1 3 3
INFO:root:XX add new best (1, 2) is not 1 3 3
INFO:root:XX add new best (1, 2) is not 1 3 3
INFO:root:XX add new best (1, 2) is not 1 3 3
INFO:root:XX add new best (1, 2) is not 1 3 3
INFO:root:XX add new best (1, 2) is not 1 3 3
INFO:root:XX add new best (1, 2) is not 1 3 3
INFO:root:XX add new best (1, 2) is not 1 3 3
INFO:root:XX add new best (1, 2) is not 1 3 3
INFO:root:XX add new best (1, 2) is not 1 3 3
INFO:root:XX add new best (1, 2) is not 1 3 3
INFO:root:XX add new best (1, 2) is not 1 3 3
INFO:root:XX add new best (1, 2) is not 1 3 3
INFO:root:XX add new best (1, 2) is not 1 3 3
INFO:root:XX add new best (1, 2) is not 1 3 3
INFO:root:XX add new best (1, 2) is not 1 3 3
INFO:root:XX add new best (1, 2) is not 1 3 3
INFO:root:XX add new best (1, 2) is not 1 3 3
INFO:root:XX add new best (1, 2) is not 1 3 3
INFO:root:XX add new best (1, 2) is not 1 3 3
INFO:root:XX add new best (1, 2) is not 1 3 3
INFO:root:XX add new best (1, 2) is not 1 3 3
INFO:root:XX add new best (1, 2) is not 1 3 3
INFO:root:XX add new best (1, 2) is not 1 3 3
INFO:root:XX add new best (1, 2) is not 1 3 3
INFO:root:XX add new best (1, 2) is not 1 3 3
INFO:root:XX add new best (1, 2) is not 1 3 3
INFO:root:XX add new best (1, 2) is not 1 3 3
INFO:root:XX add new best (1, 2) is not 1 3 3
INFO:root:XX add new best (1, 2) is not 1 3 3
INFO:root:XX add new best (1, 2) is not 1 3 3
INFO:root:XX add new best (1, 2) is not 1 3 3
INFO:root:Trace: [(3, [(1, 2) is not 1])]
INFO:root:Trace Quality: [(3, 1)]
INFO:root:Trace Sorted: [(3, 1)]
INFO:root:Finished
INFO:root:Full Trace [(3, [(1, 2) is not 1])]
INFO:root:Trying {'prechopMUSes': True}
INFO:root:Starting Step 1
INFO:root:Current state [[[[1, 3, 4, 8, 9], [1, 2, 4], [2, 3, 4, 8, 9], [2, 3, 4, 7, 8, 9], [6], [1, 2, 3, 4, 7, 8], [2, 7, 8], [5], [2, 4, 7, 8]], [[1, 3, 4, 8], [1, 2, 4], [5], [2, 3, 4, 7, 8], [2, 3, 7, 8], [1, 2, 3, 4, 7, 8], [6], [9], [2, 4, 7, 8]], [[6], [7], [2, 4, 8, 9], [2, 4, 5, 8, 9], [2, 8, 9], [2, 4, 5, 8], [2, 8], [1], [3]], [[1, 3, 4, 9], [8], [2, 3, 4, 9], [2, 3, 6, 7], [5], [2, 3, 6, 7], [1, 2, 3, 9], [2, 4, 6], [2, 6, 9]], [[3, 4, 5], [2, 4, 6], [7], [1], [2, 3, 8], [9], [2, 3, 5, 8], [2, 4, 6, 8], [2, 5, 6, 8]], [[1, 3, 5, 9], [1, 2, 6], [2, 3, 9], [2, 3, 6, 8], [4], [2, 3, 6, 8], [1, 2, 3, 5, 8, 9], [7], [2, 5, 6, 8, 9]], [[2], [9], [1], [4, 5, 6, 7, 8], [7, 8], [4, 5, 6, 7, 8], [5, 7, 8], [3], [5, 6, 7, 8]], [[7, 8], [5], [6], [2, 3, 7, 8, 9], [2, 3, 7, 8, 9], [2, 3, 7, 8], [4], [2, 8], [1]], [[4, 7, 8], [3], [4, 8], [2, 5, 6, 7, 8], [1], [2, 5, 6, 7, 8], [2, 5, 7, 8, 9], [2, 6, 8], [2, 5, 6, 7, 8, 9]]]]
INFO:root:Doing checkSmall1
INFO:root:Getting tiny MUSes, distance 1, for 1 puzlits, 1 repeats
INFO:root:Chunked 1 in [1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
INFO:root:Doing checkSmall2
INFO:root:Getting tiny MUSes, distance 2, for 1 puzlits, 1 repeats
INFO:root:Chunked 1 in [1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
INFO:root:Considering 100 * 1 jobs for minsize=3
INFO:root:Chunked 100 in [9, 9, 9, 9, 8, 8, 8, 8, 8, 8, 8, 8]
INFO:root:XX found first (1, 2) is not 1 3
INFO:root:XX add new best (1, 2) is not 1 3 3
INFO:root:XX add new best (1, 2) is not 1 3 3
INFO:root:XX add new best (1, 2) is not 1 3 3
INFO:root:XX add new best (1, 2) is not 1 3 3
INFO:root:XX add new best (1, 2) is not 1 3 3
INFO:root:XX add new best (1, 2) is not 1 3 3
INFO:root:XX add new best (1, 2) is not 1 3 3
INFO:root:XX add new best (1, 2) is not 1 3 3
INFO:root:XX add new best (1, 2) is not 1 3 3
INFO:root:XX add new best (1, 2) is not 1 3 3
INFO:root:XX add new best (1, 2) is not 1 3 3
INFO:root:XX add new best (1, 2) is not 1 3 3
INFO:root:XX add new best (1, 2) is not 1 3 3
INFO:root:XX add new best (1, 2) is not 1 3 3
INFO:root:XX add new best (1, 2) is not 1 3 3
INFO:root:XX add new best (1, 2) is not 1 3 3
INFO:root:XX add new best (1, 2) is not 1 3 3
INFO:root:XX add new best (1, 2) is not 1 3 3
INFO:root:XX add new best (1, 2) is not 1 3 3
INFO:root:XX add new best (1, 2) is not 1 3 3
INFO:root:XX add new best (1, 2) is not 1 3 3
INFO:root:XX add new best (1, 2) is not 1 3 3
INFO:root:XX add new best (1, 2) is not 1 3 3
INFO:root:XX add new best (1, 2) is not 1 3 3
INFO:root:XX add new best (1, 2) is not 1 3 3
INFO:root:XX add new best (1, 2) is not 1 3 3
INFO:root:XX add new best (1, 2) is not 1 3 3
INFO:root:XX add new best (1, 2) is not 1 3 3
INFO:root:XX add new best (1, 2) is not 1 3 3
INFO:root:XX add new best (1, 2) is not 1 3 3
INFO:root:XX add new best (1, 2) is not 1 3 3
INFO:root:XX add new best (1, 2) is not 1 3 3
INFO:root:XX add new best (1, 2) is not 1 3 3
INFO:root:XX add new best (1, 2) is not 1 3 3
INFO:root:XX add new best (1, 2) is not 1 3 3
INFO:root:XX add new best (1, 2) is not 1 3 3
INFO:root:XX add new best (1, 2) is not 1 3 3
INFO:root:XX add new best (1, 2) is not 1 3 3
INFO:root:XX add new best (1, 2) is not 1 3 3
INFO:root:XX add new best (1, 2) is not 1 3 3
INFO:root:XX add new best (1, 2) is not 1 3 3
INFO:root:XX add new best (1, 2) is not 1 3 3
INFO:root:XX add new best (1, 2) is not 1 3 3
INFO:root:XX add new best (1, 2) is not 1 3 3
INFO:root:XX add new best (1, 2) is not 1 3 3
INFO:root:XX add new best (1, 2) is not 1 3 3
INFO:root:XX add new best (1, 2) is not 1 3 3
INFO:root:XX add new best (1, 2) is not 1 3 3
INFO:root:XX add new best (1, 2) is not 1 3 3
INFO:root:XX add new best (1, 2) is not 1 3 3
INFO:root:XX add new best (1, 2) is not 1 3 3
INFO:root:XX add new best (1, 2) is not 1 3 3
INFO:root:XX add new best (1, 2) is not 1 3 3
INFO:root:XX add new best (1, 2) is not 1 3 3
INFO:root:XX add new best (1, 2) is not 1 3 3
INFO:root:Trace: [(3, [(1, 2) is not 1])]
INFO:root:Trace Quality: [(3, 1)]
INFO:root:Trace Sorted: [(3, 1)]
INFO:root:Finished
INFO:root:Full Trace [(3, [(1, 2) is not 1])]
INFO:root:Trying {'quarterChopMUS': True}
INFO:root:Starting Step 1
INFO:root:Current state [[[[1, 3, 4, 8, 9], [1, 2, 4], [2, 3, 4, 8, 9], [2, 3, 4, 7, 8, 9], [6], [1, 2, 3, 4, 7, 8], [2, 7, 8], [5], [2, 4, 7, 8]], [[1, 3, 4, 8], [1, 2, 4], [5], [2, 3, 4, 7, 8], [2, 3, 7, 8], [1, 2, 3, 4, 7, 8], [6], [9], [2, 4, 7, 8]], [[6], [7], [2, 4, 8, 9], [2, 4, 5, 8, 9], [2, 8, 9], [2, 4, 5, 8], [2, 8], [1], [3]], [[1, 3, 4, 9], [8], [2, 3, 4, 9], [2, 3, 6, 7], [5], [2, 3, 6, 7], [1, 2, 3, 9], [2, 4, 6], [2, 6, 9]], [[3, 4, 5], [2, 4, 6], [7], [1], [2, 3, 8], [9], [2, 3, 5, 8], [2, 4, 6, 8], [2, 5, 6, 8]], [[1, 3, 5, 9], [1, 2, 6], [2, 3, 9], [2, 3, 6, 8], [4], [2, 3, 6, 8], [1, 2, 3, 5, 8, 9], [7], [2, 5, 6, 8, 9]], [[2], [9], [1], [4, 5, 6, 7, 8], [7, 8], [4, 5, 6, 7, 8], [5, 7, 8], [3], [5, 6, 7, 8]], [[7, 8], [5], [6], [2, 3, 7, 8, 9], [2, 3, 7, 8, 9], [2, 3, 7, 8], [4], [2, 8], [1]], [[4, 7, 8], [3], [4, 8], [2, 5, 6, 7, 8], [1], [2, 5, 6, 7, 8], [2, 5, 7, 8, 9], [2, 6, 8], [2, 5, 6, 7, 8, 9]]]]
INFO:root:Doing checkSmall1
INFO:root:Getting tiny MUSes, distance 1, for 1 puzlits, 1 repeats
INFO:root:Chunked 1 in [1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
INFO:root:Doing checkSmall2
INFO:root:Getting tiny MUSes, distance 2, for 1 puzlits, 1 repeats
INFO:root:Chunked 1 in [1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
INFO:root:Considering 100 * 1 jobs for minsize=3
INFO:root:Chunked 100 in [9, 9, 9, 9, 8, 8, 8, 8, 8, 8, 8, 8]
INFO:root:XX found first (1, 2) is not 1 3
INFO:root:XX add new best (1, 2) is not 1 3 3
INFO:root:XX add new best (1, 2) is not 1 3 3
INFO:root:XX add new best (1, 2) is not 1 3 3
INFO:root:XX add new best (1, 2) is not 1 3 3
INFO:root:XX add new best (1, 2) is not 1 3 3
INFO:root:XX add new best (1, 2) is not 1 3 3
INFO:root:XX add new best (1, 2) is not 1 3 3
INFO:root:XX add new best (1, 2) is not 1 3 3
INFO:root:XX add new best (1, 2) is not 1 3 3
INFO:root:XX add new best (1, 2) is not 1 3 3
INFO:root:XX add new best (1, 2) is not 1 3 3
INFO:root:XX add new best (1, 2) is not 1 3 3
INFO:root:XX add new best (1, 2) is not 1 3 3
INFO:root:XX add new best (1, 2) is not 1 3 3
INFO:root:XX add new best (1, 2) is not 1 3 3
INFO:root:XX add new best (1, 2) is not 1 3 3
INFO:root:XX add new best (1, 2) is not 1 3 3
INFO:root:XX add new best (1, 2) is not 1 3 3
INFO:root:XX add new best (1, 2) is not 1 3 3
INFO:root:XX add new best (1, 2) is not 1 3 3
INFO:root:XX add new best (1, 2) is not 1 3 3
INFO:root:XX add new best (1, 2) is not 1 3 3
INFO:root:XX add new best (1, 2) is not 1 3 3
INFO:root:XX add new best (1, 2) is not 1 3 3
INFO:root:XX add new best (1, 2) is not 1 3 3
INFO:root:XX add new best (1, 2) is not 1 3 3
INFO:root:XX add new best (1, 2) is not 1 3 3
INFO:root:XX add new best (1, 2) is not 1 3 3
INFO:root:XX add new best (1, 2) is not 1 3 3
INFO:root:XX add new best (1, 2) is not 1 3 3
INFO:root:XX add new best (1, 2) is not 1 3 3
INFO:root:XX add new best (1, 2) is not 1 3 3
INFO:root:XX add new best (1, 2) is not 1 3 3
INFO:root:XX add new best (1, 2) is not 1 3 3
INFO:root:XX add new best (1, 2) is not 1 3 3
INFO:root:XX add new best (1, 2) is not 1 3 3
INFO:root:XX add new best (1, 2) is not 1 3 3
INFO:root:XX add new best (1, 2) is not 1 3 3
INFO:root:XX add new best (1, 2) is not 1 3 3
INFO:root:XX add new best (1, 2) is not 1 3 3
INFO:root:XX add new best (1, 2) is not 1 3 3
INFO:root:XX add new best (1, 2) is not 1 3 3
INFO:root:XX add new best (1, 2) is not 1 3 3
INFO:root:XX add new best (1, 2) is not 1 3 3
INFO:root:XX add new best (1, 2) is not 1 3 3
INFO:root:XX add new best (1, 2) is not 1 3 3
INFO:root:XX add new best (1, 2) is not 1 3 3
INFO:root:XX add new best (1, 2) is not 1 3 3
INFO:root:XX add new best (1, 2) is not 1 3 3
INFO:root:XX add new best (1, 2) is not 1 3 3
INFO:root:XX add new best (1, 2) is not 1 3 3
INFO:root:XX add new best (1, 2) is not 1 3 3
INFO:root:XX add new best (1, 2) is not 1 3 3
INFO:root:XX add new best (1, 2) is not 1 3 3
INFO:root:XX add new best (1, 2) is not 1 3 3
INFO:root:XX add new best (1, 2) is not 1 3 3
INFO:root:XX add new best (1, 2) is not 1 3 3
INFO:root:XX add new best (1, 2) is not 1 3 3
INFO:root:XX add new best (1, 2) is not 1 3 3
INFO:root:XX add new best (1, 2) is not 1 3 3
INFO:root:XX add new best (1, 2) is not 1 3 3
INFO:root:XX add new best (1, 2) is not 1 3 3
INFO:root:XX add new best (1, 2) is not 1 3 3
INFO:root:XX add new best (1, 2) is not 1 3 3
INFO:root:XX add new best (1, 2) is not 1 3 3
INFO:root:XX add new best (1, 2) is not 1 3 3
INFO:root:XX add new best (1, 2) is not 1 3 3
INFO:root:XX add new best (1, 2) is not 1 3 3
INFO:root:XX add new best (1, 2) is not 1 3 3
INFO:root:XX add new best (1, 2) is not 1 3 3
INFO:root:XX add new best (1, 2) is not 1 3 3
INFO:root:XX add new best (1, 2) is not 1 3 3
INFO:root:XX add new best (1, 2) is not 1 3 3
INFO:root:XX add new best (1, 2) is not 1 3 3
INFO:root:XX add new best (1, 2) is not 1 3 3
INFO:root:XX add new best (1, 2) is not 1 3 3
INFO:root:XX add new best (1, 2) is not 1 3 3
INFO:root:XX add new best (1, 2) is not 1 3 3
INFO:root:Trace: [(3, [(1, 2) is not 1])]
INFO:root:Trace Quality: [(3, 1)]
INFO:root:Trace Sorted: [(3, 1)]
INFO:root:Finished
INFO:root:Full Trace [(3, [(1, 2) is not 1])]
INFO:root:Trying {'minPrecheckMUS': True}
INFO:root:Starting Step 1
INFO:root:Current state [[[[1, 3, 4, 8, 9], [1, 2, 4], [2, 3, 4, 8, 9], [2, 3, 4, 7, 8, 9], [6], [1, 2, 3, 4, 7, 8], [2, 7, 8], [5], [2, 4, 7, 8]], [[1, 3, 4, 8], [1, 2, 4], [5], [2, 3, 4, 7, 8], [2, 3, 7, 8], [1, 2, 3, 4, 7, 8], [6], [9], [2, 4, 7, 8]], [[6], [7], [2, 4, 8, 9], [2, 4, 5, 8, 9], [2, 8, 9], [2, 4, 5, 8], [2, 8], [1], [3]], [[1, 3, 4, 9], [8], [2, 3, 4, 9], [2, 3, 6, 7], [5], [2, 3, 6, 7], [1, 2, 3, 9], [2, 4, 6], [2, 6, 9]], [[3, 4, 5], [2, 4, 6], [7], [1], [2, 3, 8], [9], [2, 3, 5, 8], [2, 4, 6, 8], [2, 5, 6, 8]], [[1, 3, 5, 9], [1, 2, 6], [2, 3, 9], [2, 3, 6, 8], [4], [2, 3, 6, 8], [1, 2, 3, 5, 8, 9], [7], [2, 5, 6, 8, 9]], [[2], [9], [1], [4, 5, 6, 7, 8], [7, 8], [4, 5, 6, 7, 8], [5, 7, 8], [3], [5, 6, 7, 8]], [[7, 8], [5], [6], [2, 3, 7, 8, 9], [2, 3, 7, 8, 9], [2, 3, 7, 8], [4], [2, 8], [1]], [[4, 7, 8], [3], [4, 8], [2, 5, 6, 7, 8], [1], [2, 5, 6, 7, 8], [2, 5, 7, 8, 9], [2, 6, 8], [2, 5, 6, 7, 8, 9]]]]
INFO:root:Doing checkSmall1
INFO:root:Getting tiny MUSes, distance 1, for 1 puzlits, 1 repeats
INFO:root:Chunked 1 in [1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
INFO:root:Doing checkSmall2
INFO:root:Getting tiny MUSes, distance 2, for 1 puzlits, 1 repeats
INFO:root:Chunked 1 in [1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
INFO:root:Considering 100 * 1 jobs for minsize=3
INFO:root:Chunked 100 in [9, 9, 9, 9, 8, 8, 8, 8, 8, 8, 8, 8]
INFO:root:XX found first (1, 2) is not 1 3
INFO:root:XX add new best (1, 2) is not 1 3 3
INFO:root:XX add new best (1, 2) is not 1 3 3
INFO:root:XX add new best (1, 2) is not 1 3 3
INFO:root:XX add new best (1, 2) is not 1 3 3
INFO:root:XX add new best (1, 2) is not 1 3 3
INFO:root:XX add new best (1, 2) is not 1 3 3
INFO:root:XX add new best (1, 2) is not 1 3 3
INFO:root:XX add new best (1, 2) is not 1 3 3
INFO:root:XX add new best (1, 2) is not 1 3 3
INFO:root:XX add new best (1, 2) is not 1 3 3
INFO:root:XX add new best (1, 2) is not 1 3 3
INFO:root:XX add new best (1, 2) is not 1 3 3
INFO:root:XX add new best (1, 2) is not 1 3 3
INFO:root:XX add new best (1, 2) is not 1 3 3
INFO:root:XX add new best (1, 2) is not 1 3 3
INFO:root:XX add new best (1, 2) is not 1 3 3
INFO:root:XX add new best (1, 2) is not 1 3 3
INFO:root:XX add new best (1, 2) is not 1 3 3
INFO:root:XX add new best (1, 2) is not 1 3 3
INFO:root:XX add new best (1, 2) is not 1 3 3
INFO:root:XX add new best (1, 2) is not 1 3 3
INFO:root:XX add new best (1, 2) is not 1 3 3
INFO:root:XX add new best (1, 2) is not 1 3 3
INFO:root:XX add new best (1, 2) is not 1 3 3
INFO:root:XX add new best (1, 2) is not 1 3 3
INFO:root:XX add new best (1, 2) is not 1 3 3
INFO:root:XX add new best (1, 2) is not 1 3 3
INFO:root:XX add new best (1, 2) is not 1 3 3
INFO:root:XX add new best (1, 2) is not 1 3 3
INFO:root:XX add new best (1, 2) is not 1 3 3
INFO:root:XX add new best (1, 2) is not 1 3 3
INFO:root:XX add new best (1, 2) is not 1 3 3
INFO:root:XX add new best (1, 2) is not 1 3 3
INFO:root:XX add new best (1, 2) is not 1 3 3
INFO:root:XX add new best (1, 2) is not 1 3 3
INFO:root:XX add new best (1, 2) is not 1 3 3
INFO:root:XX add new best (1, 2) is not 1 3 3
INFO:root:XX add new best (1, 2) is not 1 3 3
INFO:root:XX add new best (1, 2) is not 1 3 3
INFO:root:XX add new best (1, 2) is not 1 3 3
INFO:root:XX add new best (1, 2) is not 1 3 3
INFO:root:XX add new best (1, 2) is not 1 3 3
INFO:root:XX add new best (1, 2) is not 1 3 3
INFO:root:XX add new best (1, 2) is not 1 3 3
INFO:root:XX add new best (1, 2) is not 1 3 3
INFO:root:XX add new best (1, 2) is not 1 3 3
INFO:root:Trace: [(3, [(1, 2) is not 1])]
INFO:root:Trace Quality: [(3, 1)]
INFO:root:Trace Sorted: [(3, 1)]
INFO:root:Finished
INFO:root:Full Trace [(3, [(1, 2) is not 1])]
INFO:root:Trying {'gallopingMUSes': True}
INFO:root:Starting Step 1
INFO:root:Current state [[[[1, 3, 4, 8, 9], [1, 2, 4], [2, 3, 4, 8, 9], [2, 3, 4, 7, 8, 9], [6], [1, 2, 3, 4, 7, 8], [2, 7, 8], [5], [2, 4, 7, 8]], [[1, 3, 4, 8], [1, 2, 4], [5], [2, 3, 4, 7, 8], [2, 3, 7, 8], [1, 2, 3, 4, 7, 8], [6], [9], [2, 4, 7, 8]], [[6], [7], [2, 4, 8, 9], [2, 4, 5, 8, 9], [2, 8, 9], [2, 4, 5, 8], [2, 8], [1], [3]], [[1, 3, 4, 9], [8], [2, 3, 4, 9], [2, 3, 6, 7], [5], [2, 3, 6, 7], [1, 2, 3, 9], [2, 4, 6], [2, 6, 9]], [[3, 4, 5], [2, 4, 6], [7], [1], [2, 3, 8], [9], [2, 3, 5, 8], [2, 4, 6, 8], [2, 5, 6, 8]], [[1, 3, 5, 9], [1, 2, 6], [2, 3, 9], [2, 3, 6, 8], [4], [2, 3, 6, 8], [1, 2, 3, 5, 8, 9], [7], [2, 5, 6, 8, 9]], [[2], [9], [1], [4, 5, 6, 7, 8], [7, 8], [4, 5, 6, 7, 8], [5, 7, 8], [3], [5, 6, 7, 8]], [[7, 8], [5], [6], [2, 3, 7, 8, 9], [2, 3, 7, 8, 9], [2, 3, 7, 8], [4], [2, 8], [1]], [[4, 7, 8], [3], [4, 8], [2, 5, 6, 7, 8], [1], [2, 5, 6, 7, 8], [2, 5, 7, 8, 9], [2, 6, 8], [2, 5, 6, 7, 8, 9]]]]
INFO:root:Doing checkSmall1
INFO:root:Getting tiny MUSes, distance 1, for 1 puzlits, 1 repeats
INFO:root:Chunked 1 in [1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
INFO:root:Doing checkSmall2
INFO:root:Getting tiny MUSes, distance 2, for 1 puzlits, 1 repeats
INFO:root:Chunked 1 in [1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
INFO:root:Considering 100 * 1 jobs for minsize=3
INFO:root:Chunked 100 in [9, 9, 9, 9, 8, 8, 8, 8, 8, 8, 8, 8]
INFO:root:XX found first (1, 2) is not 1 3
INFO:root:XX add new best (1, 2) is not 1 3 3
INFO:root:XX add new best (1, 2) is not 1 3 3
INFO:root:XX add new best (1, 2) is not 1 3 3
INFO:root:XX add new best (1, 2) is not 1 3 3
INFO:root:XX add new best (1, 2) is not 1 3 3
INFO:root:XX add new best (1, 2) is not 1 3 3
INFO:root:XX add new best (1, 2) is not 1 3 3
INFO:root:XX add new best (1, 2) is not 1 3 3
INFO:root:XX add new best (1, 2) is not 1 3 3
INFO:root:XX add new best (1, 2) is not 1 3 3
INFO:root:XX add new best (1, 2) is not 1 3 3
INFO:root:XX add new best (1, 2) is not 1 3 3
INFO:root:XX add new best (1, 2) is not 1 3 3
INFO:root:XX add new best (1, 2) is not 1 3 3
INFO:root:XX add new best (1, 2) is not 1 3 3
INFO:root:XX add new best (1, 2) is not 1 3 3
INFO:root:XX add new best (1, 2) is not 1 3 3
INFO:root:XX add new best (1, 2) is not 1 3 3
INFO:root:XX add new best (1, 2) is not 1 3 3
INFO:root:XX add new best (1, 2) is not 1 3 3
INFO:root:XX add new best (1, 2) is not 1 3 3
INFO:root:XX add new best (1, 2) is not 1 3 3
INFO:root:XX add new best (1, 2) is not 1 3 3
INFO:root:XX add new best (1, 2) is not 1 3 3
INFO:root:XX add new best (1, 2) is not 1 3 3
INFO:root:XX add new best (1, 2) is not 1 3 3
INFO:root:XX add new best (1, 2) is not 1 3 3
INFO:root:XX add new best (1, 2) is not 1 3 3
INFO:root:XX add new best (1, 2) is not 1 3 3
INFO:root:XX add new best (1, 2) is not 1 3 3
INFO:root:XX add new best (1, 2) is not 1 3 3
INFO:root:XX add new best (1, 2) is not 1 3 3
INFO:root:XX add new best (1, 2) is not 1 3 3
INFO:root:XX add new best (1, 2) is not 1 3 3
INFO:root:XX add new best (1, 2) is not 1 3 3
INFO:root:XX add new best (1, 2) is not 1 3 3
INFO:root:XX add new best (1, 2) is not 1 3 3
INFO:root:XX add new best (1, 2) is not 1 3 3
INFO:root:XX add new best (1, 2) is not 1 3 3
INFO:root:Trace: [(3, [(1, 2) is not 1])]
INFO:root:Trace Quality: [(3, 1)]
INFO:root:Trace Sorted: [(3, 1)]
INFO:root:Finished
INFO:root:Full Trace [(3, [(1, 2) is not 1])]
INFO:root:Trying {'minPrecheckStepsMUS': True}
INFO:root:Starting Step 1
INFO:root:Current state [[[[1, 3, 4, 8, 9], [1, 2, 4], [2, 3, 4, 8, 9], [2, 3, 4, 7, 8, 9], [6], [1, 2, 3, 4, 7, 8], [2, 7, 8], [5], [2, 4, 7, 8]], [[1, 3, 4, 8], [1, 2, 4], [5], [2, 3, 4, 7, 8], [2, 3, 7, 8], [1, 2, 3, 4, 7, 8], [6], [9], [2, 4, 7, 8]], [[6], [7], [2, 4, 8, 9], [2, 4, 5, 8, 9], [2, 8, 9], [2, 4, 5, 8], [2, 8], [1], [3]], [[1, 3, 4, 9], [8], [2, 3, 4, 9], [2, 3, 6, 7], [5], [2, 3, 6, 7], [1, 2, 3, 9], [2, 4, 6], [2, 6, 9]], [[3, 4, 5], [2, 4, 6], [7], [1], [2, 3, 8], [9], [2, 3, 5, 8], [2, 4, 6, 8], [2, 5, 6, 8]], [[1, 3, 5, 9], [1, 2, 6], [2, 3, 9], [2, 3, 6, 8], [4], [2, 3, 6, 8], [1, 2, 3, 5, 8, 9], [7], [2, 5, 6, 8, 9]], [[2], [9], [1], [4, 5, 6, 7, 8], [7, 8], [4, 5, 6, 7, 8], [5, 7, 8], [3], [5, 6, 7, 8]], [[7, 8], [5], [6], [2, 3, 7, 8, 9], [2, 3, 7, 8, 9], [2, 3, 7, 8], [4], [2, 8], [1]], [[4, 7, 8], [3], [4, 8], [2, 5, 6, 7, 8], [1], [2, 5, 6, 7, 8], [2, 5, 7, 8, 9], [2, 6, 8], [2, 5, 6, 7, 8, 9]]]]
INFO:root:Doing checkSmall1
INFO:root:Getting tiny MUSes, distance 1, for 1 puzlits, 1 repeats
INFO:root:Chunked 1 in [1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
INFO:root:Doing checkSmall2
INFO:root:Getting tiny MUSes, distance 2, for 1 puzlits, 1 repeats
INFO:root:Chunked 1 in [1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
INFO:root:Considering 100 * 1 jobs for minsize=3
INFO:root:Chunked 100 in [9, 9, 9, 9, 8, 8, 8, 8, 8, 8, 8, 8]
INFO:root:XX found first (1, 2) is not 1 3
INFO:root:XX add new best (1, 2) is not 1 3 3
INFO:root:XX add new best (1, 2) is not 1 3 3
INFO:root:XX add new best (1, 2) is not 1 3 3
INFO:root:XX add new best (1, 2) is not 1 3 3
INFO:root:XX add new best (1, 2) is not 1 3 3
INFO:root:XX add new best (1, 2) is not 1 3 3
INFO:root:XX add new best (1, 2) is not 1 3 3
INFO:root:XX add new best (1, 2) is not 1 3 3
INFO:root:XX add new best (1, 2) is not 1 3 3
INFO:root:XX add new best (1, 2) is not 1 3 3
INFO:root:XX add new best (1, 2) is not 1 3 3
INFO:root:XX add new best (1, 2) is not 1 3 3
INFO:root:XX add new best (1, 2) is not 1 3 3
INFO:root:XX add new best (1, 2) is not 1 3 3
INFO:root:XX add new best (1, 2) is not 1 3 3
INFO:root:XX add new best (1, 2) is not 1 3 3
INFO:root:XX add new best (1, 2) is not 1 3 3
INFO:root:XX add new best (1, 2) is not 1 3 3
INFO:root:XX add new best (1, 2) is not 1 3 3
INFO:root:XX add new best (1, 2) is not 1 3 3
INFO:root:XX add new best (1, 2) is not 1 3 3
INFO:root:XX add new best (1, 2) is not 1 3 3
INFO:root:XX add new best (1, 2) is not 1 3 3
INFO:root:XX add new best (1, 2) is not 1 3 3
INFO:root:XX add new best (1, 2) is not 1 3 3
INFO:root:XX add new best (1, 2) is not 1 3 3
INFO:root:XX add new best (1, 2) is not 1 3 3
INFO:root:XX add new best (1, 2) is not 1 3 3
INFO:root:XX add new best (1, 2) is not 1 3 3
INFO:root:XX add new best (1, 2) is not 1 3 3
INFO:root:XX add new best (1, 2) is not 1 3 3
INFO:root:XX add new best (1, 2) is not 1 3 3
INFO:root:XX add new best (1, 2) is not 1 3 3
INFO:root:XX add new best (1, 2) is not 1 3 3
INFO:root:XX add new best (1, 2) is not 1 3 3
INFO:root:XX add new best (1, 2) is not 1 3 3
INFO:root:XX add new best (1, 2) is not 1 3 3
INFO:root:XX add new best (1, 2) is not 1 3 3
INFO:root:XX add new best (1, 2) is not 1 3 3
INFO:root:XX add new best (1, 2) is not 1 3 3
INFO:root:XX add new best (1, 2) is not 1 3 3
INFO:root:XX add new best (1, 2) is not 1 3 3
INFO:root:XX add new best (1, 2) is not 1 3 3
INFO:root:XX add new best (1, 2) is not 1 3 3
INFO:root:XX add new best (1, 2) is not 1 3 3
INFO:root:XX add new best (1, 2) is not 1 3 3
INFO:root:Trace: [(3, [(1, 2) is not 1])]
INFO:root:Trace Quality: [(3, 1)]
INFO:root:Trace Sorted: [(3, 1)]
INFO:root:Finished
INFO:root:Full Trace [(3, [(1, 2) is not 1])]
INFO:root:Trying {'gallopingMUSes': True, 'minPrecheckMUS': True}
INFO:root:Starting Step 1
INFO:root:Current state [[[[1, 3, 4, 8, 9], [1, 2, 4], [2, 3, 4, 8, 9], [2, 3, 4, 7, 8, 9], [6], [1, 2, 3, 4, 7, 8], [2, 7, 8], [5], [2, 4, 7, 8]], [[1, 3, 4, 8], [1, 2, 4], [5], [2, 3, 4, 7, 8], [2, 3, 7, 8], [1, 2, 3, 4, 7, 8], [6], [9], [2, 4, 7, 8]], [[6], [7], [2, 4, 8, 9], [2, 4, 5, 8, 9], [2, 8, 9], [2, 4, 5, 8], [2, 8], [1], [3]], [[1, 3, 4, 9], [8], [2, 3, 4, 9], [2, 3, 6, 7], [5], [2, 3, 6, 7], [1, 2, 3, 9], [2, 4, 6], [2, 6, 9]], [[3, 4, 5], [2, 4, 6], [7], [1], [2, 3, 8], [9], [2, 3, 5, 8], [2, 4, 6, 8], [2, 5, 6, 8]], [[1, 3, 5, 9], [1, 2, 6], [2, 3, 9], [2, 3, 6, 8], [4], [2, 3, 6, 8], [1, 2, 3, 5, 8, 9], [7], [2, 5, 6, 8, 9]], [[2], [9], [1], [4, 5, 6, 7, 8], [7, 8], [4, 5, 6, 7, 8], [5, 7, 8], [3], [5, 6, 7, 8]], [[7, 8], [5], [6], [2, 3, 7, 8, 9], [2, 3, 7, 8, 9], [2, 3, 7, 8], [4], [2, 8], [1]], [[4, 7, 8], [3], [4, 8], [2, 5, 6, 7, 8], [1], [2, 5, 6, 7, 8], [2, 5, 7, 8, 9], [2, 6, 8], [2, 5, 6, 7, 8, 9]]]]
INFO:root:Doing checkSmall1
INFO:root:Getting tiny MUSes, distance 1, for 1 puzlits, 1 repeats
INFO:root:Chunked 1 in [1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
INFO:root:Doing checkSmall2
INFO:root:Getting tiny MUSes, distance 2, for 1 puzlits, 1 repeats
INFO:root:Chunked 1 in [1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
INFO:root:Considering 100 * 1 jobs for minsize=3
INFO:root:Chunked 100 in [9, 9, 9, 9, 8, 8, 8, 8, 8, 8, 8, 8]
INFO:root:XX found first (1, 2) is not 1 3
INFO:root:XX add new best (1, 2) is not 1 3 3
INFO:root:XX add new best (1, 2) is not 1 3 3
INFO:root:XX add new best (1, 2) is not 1 3 3
INFO:root:XX add new best (1, 2) is not 1 3 3
INFO:root:XX add new best (1, 2) is not 1 3 3
INFO:root:XX add new best (1, 2) is not 1 3 3
INFO:root:XX add new best (1, 2) is not 1 3 3
INFO:root:XX add new best (1, 2) is not 1 3 3
INFO:root:XX add new best (1, 2) is not 1 3 3
INFO:root:XX add new best (1, 2) is not 1 3 3
INFO:root:XX add new best (1, 2) is not 1 3 3
INFO:root:XX add new best (1, 2) is not 1 3 3
INFO:root:XX add new best (1, 2) is not 1 3 3
INFO:root:XX add new best (1, 2) is not 1 3 3
INFO:root:XX add new best (1, 2) is not 1 3 3
INFO:root:XX add new best (1, 2) is not 1 3 3
INFO:root:XX add new best (1, 2) is not 1 3 3
INFO:root:XX add new best (1, 2) is not 1 3 3
INFO:root:XX add new best (1, 2) is not 1 3 3
INFO:root:XX add new best (1, 2) is not 1 3 3
INFO:root:XX add new best (1, 2) is not 1 3 3
INFO:root:XX add new best (1, 2) is not 1 3 3
INFO:root:XX add new best (1, 2) is not 1 3 3
INFO:root:XX add new best (1, 2) is not 1 3 3
INFO:root:XX add new best (1, 2) is not 1 3 3
INFO:root:XX add new best (1, 2) is not 1 3 3
INFO:root:XX add new best (1, 2) is not 1 3 3
INFO:root:XX add new best (1, 2) is not 1 3 3
INFO:root:XX add new best (1, 2) is not 1 3 3
INFO:root:XX add new best (1, 2) is not 1 3 3
INFO:root:XX add new best (1, 2) is not 1 3 3
INFO:root:XX add new best (1, 2) is not 1 3 3
INFO:root:XX add new best (1, 2) is not 1 3 3
INFO:root:XX add new best (1, 2) is not 1 3 3
INFO:root:XX add new best (1, 2) is not 1 3 3
INFO:root:XX add new best (1, 2) is not 1 3 3
INFO:root:XX add new best (1, 2) is not 1 3 3
INFO:root:XX add new best (1, 2) is not 1 3 3
INFO:root:XX add new best (1, 2) is not 1 3 3
INFO:root:XX add new best (1, 2) is not 1 3 3
INFO:root:XX add new best (1, 2) is not 1 3 3
INFO:root:XX add new best (1, 2) is not 1 3 3
INFO:root:XX add new best (1, 2) is not 1 3 3
INFO:root:XX add new best (1, 2) is not 1 3 3
INFO:root:XX add new best (1, 2) is not 1 3 3
INFO:root:XX add new best (1, 2) is not 1 3 3
INFO:root:Trace: [(3, [(1, 2) is not 1])]
INFO:root:Trace Quality: [(3, 1)]
INFO:root:Trace Sorted: [(3, 1)]
INFO:root:Finished
INFO:root:Full Trace [(3, [(1, 2) is not 1])]
INFO:root:Trying {}
INFO:root:Starting Step 1
INFO:root:Current state [[[[3], [8], [5, 9], [2], [5, 7, 9], [6], [4, 7], [1], [4, 7, 9]], [[1, 7, 9], [7, 9], [1, 5, 6, 9], [3, 5, 8, 9], [1, 3, 5, 7, 8, 9], [4], [3, 7], [6, 7, 9], [2]], [[2], [1, 6, 7, 9], [4], [3, 9], [1, 3, 7, 9], [1, 3, 7, 9], [5], [3, 6, 7, 9], [8]], [[1, 4, 7, 8, 9], [1, 7, 9], [2], [5, 8, 9], [1, 3, 4, 5, 7, 8, 9], [1, 7, 9], [6], [3, 7, 8], [1, 3, 5, 7]], [[1, 7, 8, 9], [5], [1, 6, 9], [3, 6, 8, 9], [2], [1, 3, 7, 8, 9], [3, 7, 8], [4], [1, 3, 7]], [[1, 4, 7, 8], [1, 6, 7], [3], [4, 6], [1, 4, 5, 6, 7, 8], [5, 7, 8], [9], [2], [1, 5, 7]], [[5], [2], [8], [3, 4, 6, 9], [3, 4, 6, 9], [3, 9], [1], [3, 7, 9], [3, 4, 7, 9]], [[6], [3], [7], [1], [4, 5, 8, 9], [2, 5, 8, 9], [2, 4, 8], [8, 9], [4, 9]], [[1, 9], [4], [1, 9], [7], [3, 8], [2, 3, 8], [2, 3, 8], [5], [6]]]]
INFO:root:Doing checkSmall1
INFO:root:Getting tiny MUSes, distance 1, for 1 puzlits, 1 repeats
INFO:root:Chunked 1 in [1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
INFO:root:Doing checkSmall2
INFO:root:Getting tiny MUSes, distance 2, for 1 puzlits, 1 repeats
INFO:root:Chunked 1 in [1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
INFO:root:Considering 100 * 1 jobs for minsize=3
INFO:root:Chunked 100 in [9, 9, 9, 9, 8, 8, 8, 8, 8, 8, 8, 8]
INFO:root:XX found first (4, 1) is not 1 3
INFO:root:XX add new best (4, 1) is not 1 3 3
INFO:root:XX add new best (4, 1) is not 1 3 3
INFO:root:XX add new best (4, 1) is not 1 3 3
INFO:root:XX add new best (4, 1) is not 1 3 3
INFO:root:XX add new best (4, 1) is not 1 3 3
INFO:root:XX add new best (4, 1) is not 1 3 3
INFO:root:XX add new best (4, 1) is not 1 3 3
INFO:root:XX add new best (4, 1) is not 1 3 3
INFO:root:XX add new best (4, 1) is not 1 3 3
INFO:root:XX add new best (4, 1) is not 1 3 3
INFO:root:XX add new best (4, 1) is not 1 3 3
INFO:root:XX add new best (4, 1) is not 1 3 3
INFO:root:XX add new best (4, 1) is not 1 3 3
INFO:root:XX add new best (4, 1) is not 1 3 3
INFO:root:XX add new best (4, 1) is not 1 3 3
INFO:root:XX add new best (4, 1) is not 1 3 3
INFO:root:XX add new best (4, 1) is not 1 3 3
INFO:root:XX add new best (4, 1) is not 1 3 3
INFO:root:XX add new best (4, 1) is not 1 3 3
INFO:root:XX add new best (4, 1) is not 1 3 3
INFO:root:XX add new best (4, 1) is not 1 3 3
INFO:root:XX add new best (4, 1) is not 1 3 3
INFO:root:XX add new best (4, 1) is not 1 3 3
INFO:root:XX add new best (4, 1) is not 1 3 3
INFO:root:XX add new best (4, 1) is not 1 3 3
INFO:root:XX add new best (4, 1) is not 1 3 3
INFO:root:XX add new best (4, 1) is not 1 3 3
INFO:root:XX add new best (4, 1) is not 1 3 3
INFO:root:XX add new best (4, 1) is not 1 3 3
INFO:root:XX add new best (4, 1) is not 1 3 3
INFO:root:XX add new best (4, 1) is not 1 3 3
INFO:root:XX add new best (4, 1) is not 1 3 3
INFO:root:XX add new best (4, 1) is not 1 3 3
INFO:root:XX add new best (4, 1) is not 1 3 3
INFO:root:XX add new best (4, 1) is not 1 3 3
INFO:root:XX add new best (4, 1) is not 1 3 3
INFO:root:XX add new best (4, 1) is not 1 3 3
INFO:root:XX add new best (4, 1) is not 1 3 3
INFO:root:XX add new best (4, 1) is not 1 3 3
INFO:root:XX add new best (4, 1) is not 1 3 3
INFO:root:XX add new best (4, 1) is not 1 3 3
INFO:root:XX add new best (4, 1) is not 1 3 3
INFO:root:XX add new best (4, 1) is not 1 3 3
INFO:root:XX add new best (4, 1) is not 1 3 3
INFO:root:XX add new best (4, 1) is not 1 3 3
INFO:root:XX add new best (4, 1) is not 1 3 3
INFO:root:XX add new best (4, 1) is not 1 3 3
INFO:root:XX add new best (4, 1) is not 1 3 3
INFO:root:XX add new best (4, 1) is not 1 3 3
INFO:root:XX add new best (4, 1) is not 1 3 3
INFO:root:XX add new best (4, 1) is not 1 3 3
INFO:root:XX add new best (4, 1) is not 1 3 3
INFO:root:XX add new best (4, 1) is not 1 3 3
INFO:root:XX add new best (4, 1) is not 1 3 3
INFO:root:XX add new best (4, 1) is not 1 3 3
INFO:root:XX add new best (4, 1) is not 1 3 3
INFO:root:XX add new best (4, 1) is not 1 3 3
INFO:root:XX add new best (4, 1) is not 1 3 3
INFO:root:XX add new best (4, 1) is not 1 3 3
INFO:root:XX add new best (4, 1) is not 1 3 3
INFO:root:XX add new best (4, 1) is not 1 3 3
INFO:root:XX add new best (4, 1) is not 1 3 3
INFO:root:XX add new best (4, 1) is not 1 3 3
INFO:root:XX add new best (4, 1) is not 1 3 3
INFO:root:XX add new best (4, 1) is not 1 3 3
INFO:root:XX add new best (4, 1) is not 1 3 3
INFO:root:XX add new best (4, 1) is not 1 3 3
INFO:root:XX add new best (4, 1) is not 1 3 3
INFO:root:XX add new best (4, 1) is not 1 3 3
INFO:root:XX add new best (4, 1) is not 1 3 3
INFO:root:XX add new best (4, 1) is not 1 3 3
INFO:root:XX add new best (4, 1) is not 1 3 3
INFO:root:XX add new best (4, 1) is not 1 3 3
INFO:root:XX add new best (4, 1) is not 1 3 3
INFO:root:XX add new best (4, 1) is not 1 3 3
INFO:root:XX add new best (4, 1) is not 1 3 3
INFO:root:XX add new best (4, 1) is not 1 3 3
INFO:root:XX add new best (4, 1) is not 1 3 3
INFO:root:XX add new best (4, 1) is not 1 3 3
INFO:root:XX add new best (4, 1) is not 1 3 3
INFO:root:XX add new best (4, 1) is not 1 3 3
INFO:root:XX add new best (4, 1) is not 1 3 3
INFO:root:XX add new best (4, 1) is not 1 3 3
INFO:root:XX add new best (4, 1) is not 1 3 3
INFO:root:XX add new best (4, 1) is not 1 3 3
INFO:root:XX add new best (4, 1) is not 1 3 3
INFO:root:XX add new best (4, 1) is not 1 3 3
INFO:root:XX add new best (4, 1) is not 1 3 3
INFO:root:XX add new best (4, 1) is not 1 3 3
INFO:root:XX add new best (4, 1) is not 1 3 3
INFO:root:XX add new best (4, 1) is not 1 3 3
INFO:root:XX add new best (4, 1) is not 1 3 3
INFO:root:XX add new best (4, 1) is not 1 3 3
INFO:root:XX add new best (4, 1) is not 1 3 3
INFO:root:XX add new best (4, 1) is not 1 3 3
INFO:root:XX add new best (4, 1) is not 1 3 3
INFO:root:XX add new best (4, 1) is not 1 3 3
INFO:root:XX add new best (4, 1) is not 1 3 3
INFO:root:XX add new best (4, 1) is not 1 3 3
INFO:root:Trace: [(3, [(4, 1) is not 1])]
INFO:root:Trace Quality: [(3, 1)]
INFO:root:Trace Sorted: [(3, 1)]
INFO:root:Finished
INFO:root:Full Trace [(3, [(4, 1) is not 1])]
INFO:root:Trying {'prechopMUSes': True}
INFO:root:Starting Step 1
INFO:root:Current state [[[[3], [8], [5, 9], [2], [5, 7, 9], [6], [4, 7], [1], [4, 7, 9]], [[1, 7, 9], [7, 9], [1, 5, 6, 9], [3, 5, 8, 9], [1, 3, 5, 7, 8, 9], [4], [3, 7], [6, 7, 9], [2]], [[2], [1, 6, 7, 9], [4], [3, 9], [1, 3, 7, 9], [1, 3, 7, 9], [5], [3, 6, 7, 9], [8]], [[1, 4, 7, 8, 9], [1, 7, 9], [2], [5, 8, 9], [1, 3, 4, 5, 7, 8, 9], [1, 7, 9], [6], [3, 7, 8], [1, 3, 5, 7]], [[1, 7, 8, 9], [5], [1, 6, 9], [3, 6, 8, 9], [2], [1, 3, 7, 8, 9], [3, 7, 8], [4], [1, 3, 7]], [[1, 4, 7, 8], [1, 6, 7], [3], [4, 6], [1, 4, 5, 6, 7, 8], [5, 7, 8], [9], [2], [1, 5, 7]], [[5], [2], [8], [3, 4, 6, 9], [3, 4, 6, 9], [3, 9], [1], [3, 7, 9], [3, 4, 7, 9]], [[6], [3], [7], [1], [4, 5, 8, 9], [2, 5, 8, 9], [2, 4, 8], [8, 9], [4, 9]], [[1, 9], [4], [1, 9], [7], [3, 8], [2, 3, 8], [2, 3, 8], [5], [6]]]]
INFO:root:Doing checkSmall1
INFO:root:Getting tiny MUSes, distance 1, for 1 puzlits, 1 repeats
INFO:root:Chunked 1 in [1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
INFO:root:Doing checkSmall2
INFO:root:Getting tiny MUSes, distance 2, for 1 puzlits, 1 repeats
INFO:root:Chunked 1 in [1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
INFO:root:Considering 100 * 1 jobs for minsize=3
INFO:root:Chunked 100 in [9, 9, 9, 9, 8, 8, 8, 8, 8, 8, 8, 8]
INFO:root:XX found first (4, 1) is not 1 3
INFO:root:XX add new best (4, 1) is not 1 3 3
INFO:root:XX add new best (4, 1) is not 1 3 3
INFO:root:XX add new best (4, 1) is not 1 3 3
INFO:root:XX add new best (4, 1) is not 1 3 3
INFO:root:XX add new best (4, 1) is not 1 3 3
INFO:root:XX add new best (4, 1) is not 1 3 3
INFO:root:XX add new best (4, 1) is not 1 3 3
INFO:root:XX add new best (4, 1) is not 1 3 3
INFO:root:XX add new best (4, 1) is not 1 3 3
INFO:root:XX add new best (4, 1) is not 1 3 3
INFO:root:XX add new best (4, 1) is not 1 3 3
INFO:root:XX add new best (4, 1) is not 1 3 3
INFO:root:XX add new best (4, 1) is not 1 3 3
INFO:root:XX add new best (4, 1) is not 1 3 3
INFO:root:XX add new best (4, 1) is not 1 3 3
INFO:root:XX add new best (4, 1) is not 1 3 3
INFO:root:XX add new best (4, 1) is not 1 3 3
INFO:root:XX add new best (4, 1) is not 1 3 3
INFO:root:XX add new best (4, 1) is not 1 3 3
INFO:root:XX add new best (4, 1) is not 1 3 3
INFO:root:XX add new best (4, 1) is not 1 3 3
INFO:root:XX add new best (4, 1) is not 1 3 3
INFO:root:XX add new best (4, 1) is not 1 3 3
INFO:root:XX add new best (4, 1) is not 1 3 3
INFO:root:XX add new best (4, 1) is not 1 3 3
INFO:root:XX add new best (4, 1) is not 1 3 3
INFO:root:XX add new best (4, 1) is not 1 3 3
INFO:root:XX add new best (4, 1) is not 1 3 3
INFO:root:XX add new best (4, 1) is not 1 3 3
INFO:root:XX add new best (4, 1) is not 1 3 3
INFO:root:XX add new best (4, 1) is not 1 3 3
INFO:root:Trace: [(3, [(4, 1) is not 1])]
INFO:root:Trace Quality: [(3, 1)]
INFO:root:Trace Sorted: [(3, 1)]
INFO:root:Finished
INFO:root:Full Trace [(3, [(4, 1) is not 1])]
INFO:root:Trying {'quarterChopMUS': True}
INFO:root:Starting Step 1
INFO:root:Current state [[[[3], [8], [5, 9], [2], [5, 7, 9], [6], [4, 7], [1], [4, 7, 9]], [[1, 7, 9], [7, 9], [1, 5, 6, 9], [3, 5, 8, 9], [1, 3, 5, 7, 8, 9], [4], [3, 7], [6, 7, 9], [2]], [[2], [1, 6, 7, 9], [4], [3, 9], [1, 3, 7, 9], [1, 3, 7, 9], [5], [3, 6, 7, 9], [8]], [[1, 4, 7, 8, 9], [1, 7, 9], [2], [5, 8, 9], [1, 3, 4, 5, 7, 8, 9], [1, 7, 9], [6], [3, 7, 8], [1, 3, 5, 7]], [[1, 7, 8, 9], [5], [1, 6, 9], [3, 6, 8, 9], [2], [1, 3, 7, 8, 9], [3, 7, 8], [4], [1, 3, 7]], [[1, 4, 7, 8], [1, 6, 7], [3], [4, 6], [1, 4, 5, 6, 7, 8], [5, 7, 8], [9], [2], [1, 5, 7]], [[5], [2], [8], [3, 4, 6, 9], [3, 4, 6, 9], [3, 9], [1], [3, 7, 9], [3, 4, 7, 9]], [[6], [3], [7], [1], [4, 5, 8, 9], [2, 5, 8, 9], [2, 4, 8], [8, 9], [4, 9]], [[1, 9], [4], [1, 9], [7], [3, 8], [2, 3, 8], [2, 3, 8], [5], [6]]]]
INFO:root:Doing checkSmall1
INFO:root:Getting tiny MUSes, distance 1, for 1 puzlits, 1 repeats
INFO:root:Chunked 1 in [1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
INFO:root:Doing checkSmall2
INFO:root:Getting tiny MUSes, distance 2, for 1 puzlits, 1 repeats
INFO:root:Chunked 1 in [1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
INFO:root:Considering 100 * 1 jobs for minsize=3
INFO:root:Chunked 100 in [9, 9, 9, 9, 8, 8, 8, 8, 8, 8, 8, 8]
INFO:root:XX found first (4, 1) is not 1 3
INFO:root:XX add new best (4, 1) is not 1 3 3
INFO:root:XX add new best (4, 1) is not 1 3 3
INFO:root:XX add new best (4, 1) is not 1 3 3
INFO:root:XX add new best (4, 1) is not 1 3 3
INFO:root:XX add new best (4, 1) is not 1 3 3
INFO:root:XX add new best (4, 1) is not 1 3 3
INFO:root:XX add new best (4, 1) is not 1 3 3
INFO:root:XX add new best (4, 1) is not 1 3 3
INFO:root:XX add new best (4, 1) is not 1 3 3
INFO:root:XX add new best (4, 1) is not 1 3 3
INFO:root:XX add new best (4, 1) is not 1 3 3
INFO:root:XX add new best (4, 1) is not 1 3 3
INFO:root:XX add new best (4, 1) is not 1 3 3
INFO:root:XX add new best (4, 1) is not 1 3 3
INFO:root:XX add new best (4, 1) is not 1 3 3
INFO:root:XX add new best (4, 1) is not 1 3 3
INFO:root:XX add new best (4, 1) is not 1 3 3
INFO:root:XX add new best (4, 1) is not 1 3 3
INFO:root:XX add new best (4, 1) is not 1 3 3
INFO:root:XX add new best (4, 1) is not 1 3 3
INFO:root:XX add new best (4, 1) is not 1 3 3
INFO:root:XX add new best (4, 1) is not 1 3 3
INFO:root:XX add new best (4, 1) is not 1 3 3
INFO:root:XX add new best (4, 1) is not 1 3 3
INFO:root:XX add new best (4, 1) is not 1 3 3
INFO:root:XX add new best (4, 1) is not 1 3 3
INFO:root:XX add new best (4, 1) is not 1 3 3
INFO:root:XX add new best (4, 1) is not 1 3 3
INFO:root:XX add new best (4, 1) is not 1 3 3
INFO:root:XX add new best (4, 1) is not 1 3 3
INFO:root:XX add new best (4, 1) is not 1 3 3
INFO:root:XX add new best (4, 1) is not 1 3 3
INFO:root:XX add new best (4, 1) is not 1 3 3
INFO:root:XX add new best (4, 1) is not 1 3 3
INFO:root:XX add new best (4, 1) is not 1 3 3
INFO:root:XX add new best (4, 1) is not 1 3 3
INFO:root:XX add new best (4, 1) is not 1 3 3
INFO:root:XX add new best (4, 1) is not 1 3 3
INFO:root:XX add new best (4, 1) is not 1 3 3
INFO:root:XX add new best (4, 1) is not 1 3 3
INFO:root:XX add new best (4, 1) is not 1 3 3
INFO:root:XX add new best (4, 1) is not 1 3 3
INFO:root:Trace: [(3, [(4, 1) is not 1])]
INFO:root:Trace Quality: [(3, 1)]
INFO:root:Trace Sorted: [(3, 1)]
INFO:root:Finished
INFO:root:Full Trace [(3, [(4, 1) is not 1])]
INFO:root:Trying {'minPrecheckMUS': True}
INFO:root:Starting Step 1
INFO:root:Current state [[[[3], [8], [5, 9], [2], [5, 7, 9], [6], [4, 7], [1], [4, 7, 9]], [[1, 7, 9], [7, 9], [1, 5, 6, 9], [3, 5, 8, 9], [1, 3, 5, 7, 8, 9], [4], [3, 7], [6, 7, 9], [2]], [[2], [1, 6, 7, 9], [4], [3, 9], [1, 3, 7, 9], [1, 3, 7, 9], [5], [3, 6, 7, 9], [8]], [[1, 4, 7, 8, 9], [1, 7, 9], [2], [5, 8, 9], [1, 3, 4, 5, 7, 8, 9], [1, 7, 9], [6], [3, 7, 8], [1, 3, 5, 7]], [[1, 7, 8, 9], [5], [1, 6, 9], [3, 6, 8, 9], [2], [1, 3, 7, 8, 9], [3, 7, 8], [4], [1, 3, 7]], [[1, 4, 7, 8], [1, 6, 7], [3], [4, 6], [1, 4, 5, 6, 7, 8], [5, 7, 8], [9], [2], [1, 5, 7]], [[5], [2], [8], [3, 4, 6, 9], [3, 4, 6, 9], [3, 9], [1], [3, 7, 9], [3, 4, 7, 9]], [[6], [3], [7], [1], [4, 5, 8, 9], [2, 5, 8, 9], [2, 4, 8], [8, 9], [4, 9]], [[1, 9], [4], [1, 9], [7], [3, 8], [2, 3, 8], [2, 3, 8], [5], [6]]]]
INFO:root:Doing checkSmall1
INFO:root:Getting tiny MUSes, distance 1, for 1 puzlits, 1 repeats
INFO:root:Chunked 1 in [1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
INFO:root:Doing checkSmall2
INFO:root:Getting tiny MUSes, distance 2, for 1 puzlits, 1 repeats
INFO:root:Chunked 1 in [1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
INFO:root:Considering 100 * 1 jobs for minsize=3
INFO:root:Chunked 100 in [9, 9, 9, 9, 8, 8, 8, 8, 8, 8, 8, 8]
INFO:root:XX found first (4, 1) is not 1 3
INFO:root:XX add new best (4, 1) is not 1 3 3
INFO:root:XX add new best (4, 1) is not 1 3 3
INFO:root:XX add new best (4, 1) is not 1 3 3
INFO:root:XX add new best (4, 1) is not 1 3 3
INFO:root:XX add new best (4, 1) is not 1 3 3
INFO:root:XX add new best (4, 1) is not 1 3 3
INFO:root:XX add new best (4, 1) is not 1 3 3
INFO:root:XX add new best (4, 1) is not 1 3 3
INFO:root:XX add new best (4, 1) is not 1 3 3
INFO:root:XX add new best (4, 1) is not 1 3 3
INFO:root:XX add new best (4, 1) is not 1 3 3
INFO:root:XX add new best (4, 1) is not 1 3 3
INFO:root:XX add new best (4, 1) is not 1 3 3
INFO:root:XX add new best (4, 1) is not 1 3 3
INFO:root:XX add new best (4, 1) is not 1 3 3
INFO:root:XX add new best (4, 1) is not 1 3 3
INFO:root:XX add new best (4, 1) is not 1 3 3
INFO:root:XX add new best (4, 1) is not 1 3 3
INFO:root:XX add new best (4, 1) is not 1 3 3
INFO:root:XX add new best (4, 1) is not 1 3 3
INFO:root:XX add new best (4, 1) is not 1 3 3
INFO:root:XX add new best (4, 1) is not 1 3 3
INFO:root:XX add new best (4, 1) is not 1 3 3
INFO:root:XX add new best (4, 1) is not 1 3 3
INFO:root:XX add new best (4, 1) is not 1 3 3
INFO:root:XX add new best (4, 1) is not 1 3 3
INFO:root:XX add new best (4, 1) is not 1 3 3
INFO:root:XX add new best (4, 1) is not 1 3 3
INFO:root:Trace: [(3, [(4, 1) is not 1])]
INFO:root:Trace Quality: [(3, 1)]
INFO:root:Trace Sorted: [(3, 1)]
INFO:root:Finished
INFO:root:Full Trace [(3, [(4, 1) is not 1])]
INFO:root:Trying {'gallopingMUSes': True}
INFO:root:Starting Step 1
INFO:root:Current state [[[[3], [8], [5, 9], [2], [5, 7, 9], [6], [4, 7], [1], [4, 7, 9]], [[1, 7, 9], [7, 9], [1, 5, 6, 9], [3, 5, 8, 9], [1, 3, 5, 7, 8, 9], [4], [3, 7], [6, 7, 9], [2]], [[2], [1, 6, 7, 9], [4], [3, 9], [1, 3, 7, 9], [1, 3, 7, 9], [5], [3, 6, 7, 9], [8]], [[1, 4, 7, 8, 9], [1, 7, 9], [2], [5, 8, 9], [1, 3, 4, 5, 7, 8, 9], [1, 7, 9], [6], [3, 7, 8], [1, 3, 5, 7]], [[1, 7, 8, 9], [5], [1, 6, 9], [3, 6, 8, 9], [2], [1, 3, 7, 8, 9], [3, 7, 8], [4], [1, 3, 7]], [[1, 4, 7, 8], [1, 6, 7], [3], [4, 6], [1, 4, 5, 6, 7, 8], [5, 7, 8], [9], [2], [1, 5, 7]], [[5], [2], [8], [3, 4, 6, 9], [3, 4, 6, 9], [3, 9], [1], [3, 7, 9], [3, 4, 7, 9]], [[6], [3], [7], [1], [4, 5, 8, 9], [2, 5, 8, 9], [2, 4, 8], [8, 9], [4, 9]], [[1, 9], [4], [1, 9], [7], [3, 8], [2, 3, 8], [2, 3, 8], [5], [6]]]]
INFO:root:Doing checkSmall1
INFO:root:Getting tiny MUSes, distance 1, for 1 puzlits, 1 repeats
INFO:root:Chunked 1 in [1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
INFO:root:Doing checkSmall2
INFO:root:Getting tiny MUSes, distance 2, for 1 puzlits, 1 repeats
INFO:root:Chunked 1 in [1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
INFO:root:Considering 100 * 1 jobs for minsize=3
INFO:root:Chunked 100 in [9, 9, 9, 9, 8, 8, 8, 8, 8, 8, 8, 8]
INFO:root:XX found first (4, 1) is not 1 3
INFO:root:XX add new best (4, 1) is not 1 3 3
INFO:root:XX add new best (4, 1) is not 1 3 3
INFO:root:XX add new best (4, 1) is not 1 3 3
INFO:root:XX add new best (4, 1) is not 1 3 3
INFO:root:XX add new best (4, 1) is not 1 3 3
INFO:root:XX add new best (4, 1) is not 1 3 3
INFO:root:XX add new best (4, 1) is not 1 3 3
INFO:root:XX add new best (4, 1) is not 1 3 3
INFO:root:XX add new best (4, 1) is not 1 3 3
INFO:root:XX add new best (4, 1) is not 1 3 3
INFO:root:XX add new best (4, 1) is not 1 3 3
INFO:root:XX add new best (4, 1) is not 1 3 3
INFO:root:XX add new best (4, 1) is not 1 3 3
INFO:root:XX add new best (4, 1) is not 1 3 3
INFO:root:XX add new best (4, 1) is not 1 3 3
INFO:root:XX add new best (4, 1) is not 1 3 3
INFO:root:XX add new best (4, 1) is not 1 3 3
INFO:root:XX add new best (4, 1) is not 1 3 3
INFO:root:XX add new best (4, 1) is not 1 3 3
INFO:root:Trace: [(3, [(4, 1) is not 1])]
INFO:root:Trace Quality: [(3, 1)]
INFO:root:Trace Sorted: [(3, 1)]
INFO:root:Finished
INFO:root:Full Trace [(3, [(4, 1) is not 1])]
INFO:root:Trying {'minPrecheckStepsMUS': True}
INFO:root:Starting Step 1
INFO:root:Current state [[[[3], [8], [5, 9], [2], [5, 7, 9], [6], [4, 7], [1], [4, 7, 9]], [[1, 7, 9], [7, 9], [1, 5, 6, 9], [3, 5, 8, 9], [1, 3, 5, 7, 8, 9], [4], [3, 7], [6, 7, 9], [2]], [[2], [1, 6, 7, 9], [4], [3, 9], [1, 3, 7, 9], [1, 3, 7, 9], [5], [3, 6, 7, 9], [8]], [[1, 4, 7, 8, 9], [1, 7, 9], [2], [5, 8, 9], [1, 3, 4, 5, 7, 8, 9], [1, 7, 9], [6], [3, 7, 8], [1, 3, 5, 7]], [[1, 7, 8, 9], [5], [1, 6, 9], [3, 6, 8, 9], [2], [1, 3, 7, 8, 9], [3, 7, 8], [4], [1, 3, 7]], [[1, 4, 7, 8], [1, 6, 7], [3], [4, 6], [1, 4, 5, 6, 7, 8], [5, 7, 8], [9], [2], [1, 5, 7]], [[5], [2], [8], [3, 4, 6, 9], [3, 4, 6, 9], [3, 9], [1], [3, 7, 9], [3, 4, 7, 9]], [[6], [3], [7], [1], [4, 5, 8, 9], [2, 5, 8, 9], [2, 4, 8], [8, 9], [4, 9]], [[1, 9], [4], [1, 9], [7], [3, 8], [2, 3, 8], [2, 3, 8], [5], [6]]]]
INFO:root:Doing checkSmall1
INFO:root:Getting tiny MUSes, distance 1, for 1 puzlits, 1 repeats
INFO:root:Chunked 1 in [1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
INFO:root:Doing checkSmall2
INFO:root:Getting tiny MUSes, distance 2, for 1 puzlits, 1 repeats
INFO:root:Chunked 1 in [1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
INFO:root:Considering 100 * 1 jobs for minsize=3
INFO:root:Chunked 100 in [9, 9, 9, 9, 8, 8, 8, 8, 8, 8, 8, 8]
INFO:root:XX found first (4, 1) is not 1 3
INFO:root:XX add new best (4, 1) is not 1 3 3
INFO:root:XX add new best (4, 1) is not 1 3 3
INFO:root:XX add new best (4, 1) is not 1 3 3
INFO:root:XX add new best (4, 1) is not 1 3 3
INFO:root:XX add new best (4, 1) is not 1 3 3
INFO:root:XX add new best (4, 1) is not 1 3 3
INFO:root:XX add new best (4, 1) is not 1 3 3
INFO:root:XX add new best (4, 1) is not 1 3 3
INFO:root:XX add new best (4, 1) is not 1 3 3
INFO:root:XX add new best (4, 1) is not 1 3 3
INFO:root:XX add new best (4, 1) is not 1 3 3
INFO:root:XX add new best (4, 1) is not 1 3 3
INFO:root:XX add new best (4, 1) is not 1 3 3
INFO:root:XX add new best (4, 1) is not 1 3 3
INFO:root:XX add new best (4, 1) is not 1 3 3
INFO:root:XX add new best (4, 1) is not 1 3 3
INFO:root:XX add new best (4, 1) is not 1 3 3
INFO:root:XX add new best (4, 1) is not 1 3 3
INFO:root:XX add new best (4, 1) is not 1 3 3
INFO:root:XX add new best (4, 1) is not 1 3 3
INFO:root:XX add new best (4, 1) is not 1 3 3
INFO:root:XX add new best (4, 1) is not 1 3 3
INFO:root:XX add new best (4, 1) is not 1 3 3
INFO:root:XX add new best (4, 1) is not 1 3 3
INFO:root:XX add new best (4, 1) is not 1 3 3
INFO:root:XX add new best (4, 1) is not 1 3 3
INFO:root:XX add new best (4, 1) is not 1 3 3
INFO:root:XX add new best (4, 1) is not 1 3 3
INFO:root:Trace: [(3, [(4, 1) is not 1])]
INFO:root:Trace Quality: [(3, 1)]
INFO:root:Trace Sorted: [(3, 1)]
INFO:root:Finished
INFO:root:Full Trace [(3, [(4, 1) is not 1])]
INFO:root:Trying {'gallopingMUSes': True, 'minPrecheckMUS': True}
INFO:root:Starting Step 1
INFO:root:Current state [[[[3], [8], [5, 9], [2], [5, 7, 9], [6], [4, 7], [1], [4, 7, 9]], [[1, 7, 9], [7, 9], [1, 5, 6, 9], [3, 5, 8, 9], [1, 3, 5, 7, 8, 9], [4], [3, 7], [6, 7, 9], [2]], [[2], [1, 6, 7, 9], [4], [3, 9], [1, 3, 7, 9], [1, 3, 7, 9], [5], [3, 6, 7, 9], [8]], [[1, 4, 7, 8, 9], [1, 7, 9], [2], [5, 8, 9], [1, 3, 4, 5, 7, 8, 9], [1, 7, 9], [6], [3, 7, 8], [1, 3, 5, 7]], [[1, 7, 8, 9], [5], [1, 6, 9], [3, 6, 8, 9], [2], [1, 3, 7, 8, 9], [3, 7, 8], [4], [1, 3, 7]], [[1, 4, 7, 8], [1, 6, 7], [3], [4, 6], [1, 4, 5, 6, 7, 8], [5, 7, 8], [9], [2], [1, 5, 7]], [[5], [2], [8], [3, 4, 6, 9], [3, 4, 6, 9], [3, 9], [1], [3, 7, 9], [3, 4, 7, 9]], [[6], [3], [7], [1], [4, 5, 8, 9], [2, 5, 8, 9], [2, 4, 8], [8, 9], [4, 9]], [[1, 9], [4], [1, 9], [7], [3, 8], [2, 3, 8], [2, 3, 8], [5], [6]]]]
INFO:root:Doing checkSmall1
INFO:root:Getting tiny MUSes, distance 1, for 1 puzlits, 1 repeats
INFO:root:Chunked 1 in [1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
INFO:root:Doing checkSmall2
INFO:root:Getting tiny MUSes, distance 2, for 1 puzlits, 1 repeats
INFO:root:Chunked 1 in [1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
INFO:root:Considering 100 * 1 jobs for minsize=3
INFO:root:Chunked 100 in [9, 9, 9, 9, 8, 8, 8, 8, 8, 8, 8, 8]
INFO:root:XX found first (4, 1) is not 1 3
INFO:root:XX add new best (4, 1) is not 1 3 3
INFO:root:XX add new best (4, 1) is not 1 3 3
INFO:root:XX add new best (4, 1) is not 1 3 3
INFO:root:XX add new best (4, 1) is not 1 3 3
INFO:root:XX add new best (4, 1) is not 1 3 3
INFO:root:XX add new best (4, 1) is not 1 3 3
INFO:root:XX add new best (4, 1) is not 1 3 3
INFO:root:XX add new best (4, 1) is not 1 3 3
INFO:root:XX add new best (4, 1) is not 1 3 3
INFO:root:XX add new best (4, 1) is not 1 3 3
INFO:root:XX add new best (4, 1) is not 1 3 3
INFO:root:XX add new best (4, 1) is not 1 3 3
INFO:root:XX add new best (4, 1) is not 1 3 3
INFO:root:XX add new best (4, 1) is not 1 3 3
INFO:root:XX add new best (4, 1) is not 1 3 3
INFO:root:XX add new best (4, 1) is not 1 3 3
INFO:root:XX add new best (4, 1) is not 1 3 3
INFO:root:XX add new best (4, 1) is not 1 3 3
INFO:root:XX add new best (4, 1) is not 1 3 3
INFO:root:XX add new best (4, 1) is not 1 3 3
INFO:root:XX add new best (4, 1) is not 1 3 3
INFO:root:XX add new best (4, 1) is not 1 3 3
INFO:root:XX add new best (4, 1) is not 1 3 3
INFO:root:XX add new best (4, 1) is not 1 3 3
INFO:root:XX add new best (4, 1) is not 1 3 3
INFO:root:XX add new best (4, 1) is not 1 3 3
INFO:root:XX add new best (4, 1) is not 1 3 3
INFO:root:XX add new best (4, 1) is not 1 3 3
INFO:root:Trace: [(3, [(4, 1) is not 1])]
INFO:root:Trace Quality: [(3, 1)]
INFO:root:Trace Sorted: [(3, 1)]
INFO:root:Finished
INFO:root:Full Trace [(3, [(4, 1) is not 1])]
INFO:root:Trying {}
INFO:root:Starting Step 1
INFO:root:Current state [[[[1, 4, 5, 7, 9], [1, 4, 5, 7, 8, 9], [6], [1, 3, 4, 7], [1, 3, 7, 8, 9], [7, 9], [2], [4, 5, 7, 9], [5, 7, 9]], [[4, 7, 9], [3], [2], [5], [6, 7, 9], [1], [4, 6, 9], [8], [6, 7, 9]], [[1, 2, 4, 5, 7, 9], [1, 2, 4, 5, 7, 8, 9], [1, 7, 9], [1, 4, 6, 7], [1, 6, 7, 8, 9], [2, 5, 6, 7], [4, 6, 9], [4, 5, 6, 7, 9], [3]], [[1, 2, 5, 6, 7], [2, 4, 5, 7], [5, 7], [9], [6, 7], [2, 3, 5, 6, 7], [3, 4, 6], [1, 2, 3, 6, 7], [8]], [[2, 4, 6, 7, 9], [2, 4, 6, 7, 9], [8], [1, 2, 3, 6, 7], [1, 2, 3, 6, 7], [2, 3, 6, 7], [5], [2, 3, 6, 7, 9], [2, 6, 7, 9]], [[1, 2, 5, 6, 7, 9], [1, 2, 5, 6, 7, 9], [1, 3, 5, 7, 9], [8], [2, 3, 5, 6, 9], [4], [3, 6, 9], [2, 3, 5, 6, 7, 9], [1, 2, 6, 7, 9]], [[8], [2, 5, 6, 7, 9], [3, 5, 7, 9], [2, 3, 6, 7], [4], [2, 3, 6, 9], [1], [2, 3, 5, 6, 7, 9], [2, 5, 6, 7, 9]], [[1, 2, 3, 5, 6, 9], [1, 2, 5, 6, 9], [3, 5, 9], [1, 2, 6], [2, 3, 5, 6, 9], [8], [7], [1, 2, 3, 5, 6, 9], [4]], [[1, 2, 3, 5, 6, 7, 9], [1, 2, 5, 6, 7, 9], [4], [1, 2, 6, 7], [2, 3, 5, 6, 9], [2, 3, 6, 9], [8], [1, 2, 3, 5, 6, 7, 9], [1, 2, 5, 6, 7, 9]]]]
INFO:root:Doing checkSmall1
INFO:root:Getting tiny MUSes, distance 1, for 1 puzlits, 1 repeats
INFO:root:Chunked 1 in [1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
INFO:root:Doing checkSmall2
INFO:root:Getting tiny MUSes, distance 2, for 1 puzlits, 1 repeats
INFO:root:Chunked 1 in [1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
INFO:root:Considering 100 * 1 jobs for minsize=3
INFO:root:Chunked 100 in [9, 9, 9, 9, 8, 8, 8, 8, 8, 8, 8, 8]
INFO:root:Considering 100 * 1 jobs for minsize=4
INFO:root:Chunked 100 in [9, 9, 9, 9, 8, 8, 8, 8, 8, 8, 8, 8]
INFO:root:Considering 100 * 1 jobs for minsize=5
INFO:root:Chunked 100 in [9, 9, 9, 9, 8, 8, 8, 8, 8, 8, 8, 8]
INFO:root:Considering 100 * 1 jobs for minsize=6
INFO:root:Chunked 100 in [9, 9, 9, 9, 8, 8, 8, 8, 8, 8, 8, 8]
INFO:root:Considering 100 * 1 jobs for minsize=7
INFO:root:Chunked 100 in [9, 9, 9, 9, 8, 8, 8, 8, 8, 8, 8, 8]
INFO:root:Considering 100 * 1 jobs for minsize=8
INFO:root:Chunked 100 in [9, 9, 9, 9, 8, 8, 8, 8, 8, 8, 8, 8]
INFO:root:Considering 100 * 1 jobs for minsize=9
INFO:root:Chunked 100 in [9, 9, 9, 9, 8, 8, 8, 8, 8, 8, 8, 8]
INFO:root:Considering 100 * 1 jobs for minsize=10
INFO:root:Chunked 100 in [9, 9, 9, 9, 8, 8, 8, 8, 8, 8, 8, 8]
INFO:root:Considering 100 * 1 jobs for minsize=11
INFO:root:Chunked 100 in [9, 9, 9, 9, 8, 8, 8, 8, 8, 8, 8, 8]
INFO:root:Considering 100 * 1 jobs for minsize=12
INFO:root:Chunked 100 in [9, 9, 9, 9, 8, 8, 8, 8, 8, 8, 8, 8]
INFO:root:XX found first (9, 1) is not 2 13
INFO:root:XX add new best (9, 1) is not 2 13 13
INFO:root:XX add new best (9, 1) is not 2 13 13
INFO:root:XX add new best (9, 1) is not 2 13 13
INFO:root:XX add new best (9, 1) is not 2 13 13
INFO:root:XX add new best (9, 1) is not 2 13 13
INFO:root:XX add new best (9, 1) is not 2 13 13
INFO:root:XX add new best (9, 1) is not 2 13 13
INFO:root:XX add new best (9, 1) is not 2 13 13
INFO:root:XX add new best (9, 1) is not 2 13 13
INFO:root:XX add new best (9, 1) is not 2 13 13
INFO:root:XX add new best (9, 1) is not 2 13 13
INFO:root:XX add new best (9, 1) is not 2 13 13
INFO:root:XX add new best (9, 1) is not 2 13 13
INFO:root:XX add new best (9, 1) is not 2 13 13
INFO:root:XX add new best (9, 1) is not 2 13 13
INFO:root:XX add new best (9, 1) is not 2 13 13
INFO:root:XX add new best (9, 1) is not 2 13 13
INFO:root:XX add new best (9, 1) is not 2 13 13
INFO:root:XX add new best (9, 1) is not 2 13 13
INFO:root:XX add new best (9, 1) is not 2 13 13
INFO:root:XX add new best (9, 1) is not 2 13 13
INFO:root:XX add new best (9, 1) is not 2 13 13
INFO:root:XX add new best (9, 1) is not 2 13 13
INFO:root:XX add new best (9, 1) is not 2 13 13
INFO:root:XX add new best (9, 1) is not 2 13 13
INFO:root:XX add new best (9, 1) is not 2 13 13
INFO:root:XX add new best (9, 1) is not 2 13 13
INFO:root:XX add new best (9, 1) is not 2 13 13
INFO:root:XX add new best (9, 1) is not 2 13 13
INFO:root:XX add new best (9, 1) is not 2 13 13
INFO:root:XX add new best (9, 1) is not 2 13 13
INFO:root:XX add new best (9, 1) is not 2 13 13
INFO:root:XX add new best (9, 1) is not 2 13 13
INFO:root:XX add new best (9, 1) is not 2 13 13
INFO:root:XX add new best (9, 1) is not 2 13 13
INFO:root:XX add new best (9, 1) is not 2 13 13
INFO:root:XX add new best (9, 1) is not 2 13 13
INFO:root:XX add new best (9, 1) is not 2 13 13
INFO:root:XX add new best (9, 1) is not 2 13 13
INFO:root:XX add new best (9, 1) is not 2 13 13
INFO:root:XX add new best (9, 1) is not 2 13 13
INFO:root:XX add new best (9, 1) is not 2 13 13
INFO:root:XX add new best (9, 1) is not 2 13 13
INFO:root:XX add new best (9, 1) is not 2 13 13
INFO:root:XX add new best (9, 1) is not 2 13 13
INFO:root:XX add new best (9, 1) is not 2 13 13
INFO:root:XX add new best (9, 1) is not 2 13 13
INFO:root:XX add new best (9, 1) is not 2 13 13
INFO:root:XX add new best (9, 1) is not 2 13 13
INFO:root:XX add new best (9, 1) is not 2 13 13
INFO:root:XX add new best (9, 1) is not 2 13 13
INFO:root:XX add new best (9, 1) is not 2 13 13
INFO:root:XX add new best (9, 1) is not 2 13 13
INFO:root:XX add new best (9, 1) is not 2 13 13
INFO:root:XX add new best (9, 1) is not 2 13 13
INFO:root:XX add new best (9, 1) is not 2 13 13
INFO:root:XX add new best (9, 1) is not 2 13 13
INFO:root:XX add new best (9, 1) is not 2 13 13
INFO:root:XX add new best (9, 1) is not 2 13 13
INFO:root:XX add new best (9, 1) is not 2 13 13
INFO:root:XX add new best (9, 1) is not 2 13 13
INFO:root:XX add new best (9, 1) is not 2 13 13
INFO:root:XX add new best (9, 1) is not 2 13 13
INFO:root:XX add new best (9, 1) is not 2 13 13
INFO:root:XX add new best (9, 1) is not 2 13 13
INFO:root:XX add new best (9, 1) is not 2 13 13
INFO:root:XX add new best (9, 1) is not 2 13 13
INFO:root:XX add new best (9, 1) is not 2 13 13
INFO:root:XX add new best (9, 1) is not 2 13 13
INFO:root:XX add new best (9, 1) is not 2 13 13
INFO:root:XX add new best (9, 1) is not 2 13 13
INFO:root:XX add new best (9, 1) is not 2 13 13
INFO:root:XX add new best (9, 1) is not 2 13 13
INFO:root:XX add new best (9, 1) is not 2 13 13
INFO:root:XX add new best (9, 1) is not 2 13 13
INFO:root:XX add new best (9, 1) is not 2 13 13
INFO:root:XX add new best (9, 1) is not 2 13 13
INFO:root:XX add new best (9, 1) is not 2 13 13
INFO:root:XX add new best (9, 1) is not 2 13 13
INFO:root:XX add new best (9, 1) is not 2 13 13
INFO:root:XX add new best (9, 1) is not 2 13 13
INFO:root:XX add new best (9, 1) is not 2 13 13
INFO:root:XX add new best (9, 1) is not 2 13 13
INFO:root:XX add new best (9, 1) is not 2 13 13
INFO:root:XX add new best (9, 1) is not 2 13 13
INFO:root:XX add new best (9, 1) is not 2 13 13
INFO:root:XX add new best (9, 1) is not 2 13 13
INFO:root:XX add new best (9, 1) is not 2 13 13
INFO:root:XX add new best (9, 1) is not 2 13 13
INFO:root:XX add new best (9, 1) is not 2 13 13
INFO:root:XX add new best (9, 1) is not 2 13 13
INFO:root:XX add new best (9, 1) is not 2 13 13
INFO:root:XX add new best (9, 1) is not 2 13 13
INFO:root:XX add new best (9, 1) is not 2 13 13
INFO:root:XX add new best (9, 1) is not 2 13 13
INFO:root:XX add new best (9, 1) is not 2 13 13
INFO:root:XX add new best (9, 1) is not 2 13 13
INFO:root:XX add new best (9, 1) is not 2 13 13
INFO:root:XX add new best (9, 1) is not 2 13 13
INFO:root:Considering 100 * 1 jobs for minsize=13
INFO:root:Chunked 100 in [9, 9, 9, 9, 8, 8, 8, 8, 8, 8, 8, 8]
INFO:root:XX add new best (9, 1) is not 2 13 13
INFO:root:XX add new best (9, 1) is not 2 13 13
INFO:root:XX add new best (9, 1) is not 2 13 13
INFO:root:XX add new best (9, 1) is not 2 13 13
INFO:root:XX add new best (9, 1) is not 2 13 13
INFO:root:XX add new best (9, 1) is not 2 13 13
INFO:root:XX add new best (9, 1) is not 2 13 13
INFO:root:XX add new best (9, 1) is not 2 13 13
INFO:root:XX add new best (9, 1) is not 2 13 13
INFO:root:XX add new best (9, 1) is not 2 13 13
INFO:root:XX add new best (9, 1) is not 2 13 13
INFO:root:XX add new best (9, 1) is not 2 13 13
INFO:root:XX add new best (9, 1) is not 2 13 13
INFO:root:XX add new best (9, 1) is not 2 13 13
INFO:root:XX add new best (9, 1) is not 2 13 13
INFO:root:XX add new best (9, 1) is not 2 13 13
INFO:root:XX add new best (9, 1) is not 2 13 13
INFO:root:XX add new best (9, 1) is not 2 13 13
INFO:root:XX add new best (9, 1) is not 2 13 13
INFO:root:XX add new best (9, 1) is not 2 13 13
INFO:root:XX add new best (9, 1) is not 2 13 13
INFO:root:XX add new best (9, 1) is not 2 13 13
INFO:root:XX add new best (9, 1) is not 2 13 13
INFO:root:XX add new best (9, 1) is not 2 13 13
INFO:root:XX add new best (9, 1) is not 2 13 13
INFO:root:XX add new best (9, 1) is not 2 13 13
INFO:root:XX add new best (9, 1) is not 2 13 13
INFO:root:XX add new best (9, 1) is not 2 13 13
INFO:root:XX add new best (9, 1) is not 2 13 13
INFO:root:XX add new best (9, 1) is not 2 13 13
INFO:root:XX add new best (9, 1) is not 2 13 13
INFO:root:XX add new best (9, 1) is not 2 13 13
INFO:root:XX add new best (9, 1) is not 2 13 13
INFO:root:XX add new best (9, 1) is not 2 13 13
INFO:root:XX add new best (9, 1) is not 2 13 13
INFO:root:XX add new best (9, 1) is not 2 13 13
INFO:root:XX add new best (9, 1) is not 2 13 13
INFO:root:XX add new best (9, 1) is not 2 13 13
INFO:root:XX add new best (9, 1) is not 2 13 13
INFO:root:XX add new best (9, 1) is not 2 13 13
INFO:root:XX add new best (9, 1) is not 2 13 13
INFO:root:XX add new best (9, 1) is not 2 13 13
INFO:root:XX add new best (9, 1) is not 2 13 13
INFO:root:XX add new best (9, 1) is not 2 13 13
INFO:root:XX add new best (9, 1) is not 2 13 13
INFO:root:XX add new best (9, 1) is not 2 13 13
INFO:root:XX add new best (9, 1) is not 2 13 13
INFO:root:XX add new best (9, 1) is not 2 13 13
INFO:root:XX add new best (9, 1) is not 2 13 13
INFO:root:XX add new best (9, 1) is not 2 13 13
INFO:root:XX add new best (9, 1) is not 2 13 13
INFO:root:XX add new best (9, 1) is not 2 13 13
INFO:root:XX add new best (9, 1) is not 2 13 13
INFO:root:XX add new best (9, 1) is not 2 13 13
INFO:root:XX add new best (9, 1) is not 2 13 13
INFO:root:XX add new best (9, 1) is not 2 13 13
INFO:root:XX add new best (9, 1) is not 2 13 13
INFO:root:XX add new best (9, 1) is not 2 13 13
INFO:root:XX add new best (9, 1) is not 2 13 13
INFO:root:XX add new best (9, 1) is not 2 13 13
INFO:root:XX add new best (9, 1) is not 2 13 13
INFO:root:XX add new best (9, 1) is not 2 13 13
INFO:root:XX add new best (9, 1) is not 2 13 13
INFO:root:XX add new best (9, 1) is not 2 13 13
INFO:root:XX add new best (9, 1) is not 2 13 13
INFO:root:XX add new best (9, 1) is not 2 13 13
INFO:root:XX add new best (9, 1) is not 2 13 13
INFO:root:XX add new best (9, 1) is not 2 13 13
INFO:root:XX add new best (9, 1) is not 2 13 13
INFO:root:XX add new best (9, 1) is not 2 13 13
INFO:root:XX add new best (9, 1) is not 2 13 13
INFO:root:XX add new best (9, 1) is not 2 13 13
INFO:root:XX add new best (9, 1) is not 2 13 13
INFO:root:XX add new best (9, 1) is not 2 13 13
INFO:root:XX add new best (9, 1) is not 2 13 13
INFO:root:XX add new best (9, 1) is not 2 13 13
INFO:root:XX add new best (9, 1) is not 2 13 13
INFO:root:XX add new best (9, 1) is not 2 13 13
INFO:root:XX add new best (9, 1) is not 2 13 13
INFO:root:XX add new best (9, 1) is not 2 13 13
INFO:root:XX add new best (9, 1) is not 2 13 13
INFO:root:XX add new best (9, 1) is not 2 13 13
INFO:root:XX add new best (9, 1) is not 2 13 13
INFO:root:XX add new best (9, 1) is not 2 13 13
INFO:root:XX add new best (9, 1) is not 2 13 13
INFO:root:XX add new best (9, 1) is not 2 13 13
INFO:root:XX add new best (9, 1) is not 2 13 13
INFO:root:XX add new best (9, 1) is not 2 13 13
INFO:root:XX add new best (9, 1) is not 2 13 13
INFO:root:XX add new best (9, 1) is not 2 13 13
INFO:root:XX add new best (9, 1) is not 2 13 13
INFO:root:XX add new best (9, 1) is not 2 13 13
INFO:root:XX add new best (9, 1) is not 2 13 13
INFO:root:XX add new best (9, 1) is not 2 13 13
INFO:root:XX add new best (9, 1) is not 2 13 13
INFO:root:XX add new best (9, 1) is not 2 13 13
INFO:root:XX add new best (9, 1) is not 2 13 13
INFO:root:XX add new best (9, 1) is not 2 13 13
INFO:root:XX add new best (9, 1) is not 2 13 13
INFO:root:XX add new best (9, 1) is not 2 13 13
INFO:root:Trace: [(13, [(9, 1) is not 2])]
INFO:root:Trace Quality: [(13, 1)]
INFO:root:Trace Sorted: [(13, 1)]
INFO:root:Finished
INFO:root:Full Trace [(13, [(9, 1) is not 2])]
INFO:root:Trying {'prechopMUSes': True}
INFO:root:Starting Step 1
INFO:root:Current state [[[[1, 4, 5, 7, 9], [1, 4, 5, 7, 8, 9], [6], [1, 3, 4, 7], [1, 3, 7, 8, 9], [7, 9], [2], [4, 5, 7, 9], [5, 7, 9]], [[4, 7, 9], [3], [2], [5], [6, 7, 9], [1], [4, 6, 9], [8], [6, 7, 9]], [[1, 2, 4, 5, 7, 9], [1, 2, 4, 5, 7, 8, 9], [1, 7, 9], [1, 4, 6, 7], [1, 6, 7, 8, 9], [2, 5, 6, 7], [4, 6, 9], [4, 5, 6, 7, 9], [3]], [[1, 2, 5, 6, 7], [2, 4, 5, 7], [5, 7], [9], [6, 7], [2, 3, 5, 6, 7], [3, 4, 6], [1, 2, 3, 6, 7], [8]], [[2, 4, 6, 7, 9], [2, 4, 6, 7, 9], [8], [1, 2, 3, 6, 7], [1, 2, 3, 6, 7], [2, 3, 6, 7], [5], [2, 3, 6, 7, 9], [2, 6, 7, 9]], [[1, 2, 5, 6, 7, 9], [1, 2, 5, 6, 7, 9], [1, 3, 5, 7, 9], [8], [2, 3, 5, 6, 9], [4], [3, 6, 9], [2, 3, 5, 6, 7, 9], [1, 2, 6, 7, 9]], [[8], [2, 5, 6, 7, 9], [3, 5, 7, 9], [2, 3, 6, 7], [4], [2, 3, 6, 9], [1], [2, 3, 5, 6, 7, 9], [2, 5, 6, 7, 9]], [[1, 2, 3, 5, 6, 9], [1, 2, 5, 6, 9], [3, 5, 9], [1, 2, 6], [2, 3, 5, 6, 9], [8], [7], [1, 2, 3, 5, 6, 9], [4]], [[1, 2, 3, 5, 6, 7, 9], [1, 2, 5, 6, 7, 9], [4], [1, 2, 6, 7], [2, 3, 5, 6, 9], [2, 3, 6, 9], [8], [1, 2, 3, 5, 6, 7, 9], [1, 2, 5, 6, 7, 9]]]]
INFO:root:Doing checkSmall1
INFO:root:Getting tiny MUSes, distance 1, for 1 puzlits, 1 repeats
INFO:root:Chunked 1 in [1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
INFO:root:Doing checkSmall2
INFO:root:Getting tiny MUSes, distance 2, for 1 puzlits, 1 repeats
INFO:root:Chunked 1 in [1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
INFO:root:Considering 100 * 1 jobs for minsize=3
INFO:root:Chunked 100 in [9, 9, 9, 9, 8, 8, 8, 8, 8, 8, 8, 8]
INFO:root:Considering 100 * 1 jobs for minsize=4
INFO:root:Chunked 100 in [9, 9, 9, 9, 8, 8, 8, 8, 8, 8, 8, 8]
INFO:root:Considering 100 * 1 jobs for minsize=5
INFO:root:Chunked 100 in [9, 9, 9, 9, 8, 8, 8, 8, 8, 8, 8, 8]
INFO:root:Considering 100 * 1 jobs for minsize=6
INFO:root:Chunked 100 in [9, 9, 9, 9, 8, 8, 8, 8, 8, 8, 8, 8]
INFO:root:Considering 100 * 1 jobs for minsize=7
INFO:root:Chunked 100 in [9, 9, 9, 9, 8, 8, 8, 8, 8, 8, 8, 8]
INFO:root:Considering 100 * 1 jobs for minsize=8
INFO:root:Chunked 100 in [9, 9, 9, 9, 8, 8, 8, 8, 8, 8, 8, 8]
INFO:root:Considering 100 * 1 jobs for minsize=9
INFO:root:Chunked 100 in [9, 9, 9, 9, 8, 8, 8, 8, 8, 8, 8, 8]
INFO:root:XX found first (9, 1) is not 2 10
INFO:root:XX add new best (9, 1) is not 2 10 10
INFO:root:XX add new best (9, 1) is not 2 10 10
INFO:root:XX add new best (9, 1) is not 2 10 10
INFO:root:XX add new best (9, 1) is not 2 10 10
INFO:root:XX add new best (9, 1) is not 2 10 10
INFO:root:XX add new best (9, 1) is not 2 10 10
INFO:root:XX add new best (9, 1) is not 2 10 10
INFO:root:XX add new best (9, 1) is not 2 10 10
INFO:root:XX add new best (9, 1) is not 2 10 10
INFO:root:Considering 100 * 1 jobs for minsize=10
INFO:root:Chunked 100 in [9, 9, 9, 9, 8, 8, 8, 8, 8, 8, 8, 8]
INFO:root:XX add new best (9, 1) is not 2 10 10
INFO:root:XX add new best (9, 1) is not 2 10 10
INFO:root:XX add new best (9, 1) is not 2 10 10
INFO:root:XX add new best (9, 1) is not 2 10 10
INFO:root:XX add new best (9, 1) is not 2 10 10
INFO:root:XX add new best (9, 1) is not 2 10 10
INFO:root:XX add new best (9, 1) is not 2 10 10
INFO:root:Trace: [(10, [(9, 1) is not 2])]
INFO:root:Trace Quality: [(10, 1)]
INFO:root:Trace Sorted: [(10, 1)]
INFO:root:Finished
INFO:root:Full Trace [(10, [(9, 1) is not 2])]
INFO:root:Trying {'quarterChopMUS': True}
INFO:root:Starting Step 1
INFO:root:Current state [[[[1, 4, 5, 7, 9], [1, 4, 5, 7, 8, 9], [6], [1, 3, 4, 7], [1, 3, 7, 8, 9], [7, 9], [2], [4, 5, 7, 9], [5, 7, 9]], [[4, 7, 9], [3], [2], [5], [6, 7, 9], [1], [4, 6, 9], [8], [6, 7, 9]], [[1, 2, 4, 5, 7, 9], [1, 2, 4, 5, 7, 8, 9], [1, 7, 9], [1, 4, 6, 7], [1, 6, 7, 8, 9], [2, 5, 6, 7], [4, 6, 9], [4, 5, 6, 7, 9], [3]], [[1, 2, 5, 6, 7], [2, 4, 5, 7], [5, 7], [9], [6, 7], [2, 3, 5, 6, 7], [3, 4, 6], [1, 2, 3, 6, 7], [8]], [[2, 4, 6, 7, 9], [2, 4, 6, 7, 9], [8], [1, 2, 3, 6, 7], [1, 2, 3, 6, 7], [2, 3, 6, 7], [5], [2, 3, 6, 7, 9], [2, 6, 7, 9]], [[1, 2, 5, 6, 7, 9], [1, 2, 5, 6, 7, 9], [1, 3, 5, 7, 9], [8], [2, 3, 5, 6, 9], [4], [3, 6, 9], [2, 3, 5, 6, 7, 9], [1, 2, 6, 7, 9]], [[8], [2, 5, 6, 7, 9], [3, 5, 7, 9], [2, 3, 6, 7], [4], [2, 3, 6, 9], [1], [2, 3, 5, 6, 7, 9], [2, 5, 6, 7, 9]], [[1, 2, 3, 5, 6, 9], [1, 2, 5, 6, 9], [3, 5, 9], [1, 2, 6], [2, 3, 5, 6, 9], [8], [7], [1, 2, 3, 5, 6, 9], [4]], [[1, 2, 3, 5, 6, 7, 9], [1, 2, 5, 6, 7, 9], [4], [1, 2, 6, 7], [2, 3, 5, 6, 9], [2, 3, 6, 9], [8], [1, 2, 3, 5, 6, 7, 9], [1, 2, 5, 6, 7, 9]]]]
INFO:root:Doing checkSmall1
INFO:root:Getting tiny MUSes, distance 1, for 1 puzlits, 1 repeats
INFO:root:Chunked 1 in [1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
INFO:root:Doing checkSmall2
INFO:root:Getting tiny MUSes, distance 2, for 1 puzlits, 1 repeats
INFO:root:Chunked 1 in [1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
INFO:root:Considering 100 * 1 jobs for minsize=3
INFO:root:Chunked 100 in [9, 9, 9, 9, 8, 8, 8, 8, 8, 8, 8, 8]
INFO:root:Considering 100 * 1 jobs for minsize=4
INFO:root:Chunked 100 in [9, 9, 9, 9, 8, 8, 8, 8, 8, 8, 8, 8]
INFO:root:Considering 100 * 1 jobs for minsize=5
INFO:root:Chunked 100 in [9, 9, 9, 9, 8, 8, 8, 8, 8, 8, 8, 8]
INFO:root:Considering 100 * 1 jobs for minsize=6
INFO:root:Chunked 100 in [9, 9, 9, 9, 8, 8, 8, 8, 8, 8, 8, 8]
INFO:root:Considering 100 * 1 jobs for minsize=7
INFO:root:Chunked 100 in [9, 9, 9, 9, 8, 8, 8, 8, 8, 8, 8, 8]
INFO:root:Considering 100 * 1 jobs for minsize=8
INFO:root:Chunked 100 in [9, 9, 9, 9, 8, 8, 8, 8, 8, 8, 8, 8]
INFO:root:Considering 100 * 1 jobs for minsize=9
INFO:root:Chunked 100 in [9, 9, 9, 9, 8, 8, 8, 8, 8, 8, 8, 8]
INFO:root:XX found first (9, 1) is not 2 10
INFO:root:XX add new best (9, 1) is not 2 10 10
INFO:root:XX add new best (9, 1) is not 2 10 10
INFO:root:XX add new best (9, 1) is not 2 10 10
INFO:root:XX add new best (9, 1) is not 2 10 10
INFO:root:XX add new best (9, 1) is not 2 10 10
INFO:root:XX add new best (9, 1) is not 2 10 10
INFO:root:XX add new best (9, 1) is not 2 10 10
INFO:root:XX add new best (9, 1) is not 2 10 10
INFO:root:XX add new best (9, 1) is not 2 10 10
INFO:root:XX add new best (9, 1) is not 2 10 10
INFO:root:XX add new best (9, 1) is not 2 10 10
INFO:root:XX add new best (9, 1) is not 2 10 10
INFO:root:XX add new best (9, 1) is not 2 10 10
INFO:root:XX add new best (9, 1) is not 2 10 10
INFO:root:XX add new best (9, 1) is not 2 10 10
INFO:root:XX add new best (9, 1) is not 2 10 10
INFO:root:XX add new best (9, 1) is not 2 10 10
INFO:root:XX add new best (9, 1) is not 2 10 10
INFO:root:XX add new best (9, 1) is not 2 10 10
INFO:root:XX add new best (9, 1) is not 2 10 10
INFO:root:XX add new best (9, 1) is not 2 10 10
INFO:root:XX add new best (9, 1) is not 2 10 10
INFO:root:XX add new best (9, 1) is not 2 10 10
INFO:root:XX add new best (9, 1) is not 2 10 10
INFO:root:XX add new best (9, 1) is not 2 10 10
INFO:root:XX add new best (9, 1) is not 2 10 10
INFO:root:XX add new best (9, 1) is not 2 10 10
INFO:root:XX add new best (9, 1) is not 2 10 10
INFO:root:XX add new best (9, 1) is not 2 10 10
INFO:root:XX add new best (9, 1) is not 2 10 10
INFO:root:XX add new best (9, 1) is not 2 10 10
INFO:root:XX add new best (9, 1) is not 2 10 10
INFO:root:XX add new best (9, 1) is not 2 10 10
INFO:root:XX add new best (9, 1) is not 2 10 10
INFO:root:Considering 100 * 1 jobs for minsize=10
INFO:root:Chunked 100 in [9, 9, 9, 9, 8, 8, 8, 8, 8, 8, 8, 8]
INFO:root:XX add new best (9, 1) is not 2 10 10
INFO:root:XX add new best (9, 1) is not 2 10 10
INFO:root:XX add new best (9, 1) is not 2 10 10
INFO:root:XX add new best (9, 1) is not 2 10 10
INFO:root:XX add new best (9, 1) is not 2 10 10
INFO:root:XX add new best (9, 1) is not 2 10 10
INFO:root:XX add new best (9, 1) is not 2 10 10
INFO:root:XX add new best (9, 1) is not 2 10 10
INFO:root:XX add new best (9, 1) is not 2 10 10
INFO:root:XX add new best (9, 1) is not 2 10 10
INFO:root:XX add new best (9, 1) is not 2 10 10
INFO:root:XX add new best (9, 1) is not 2 10 10
INFO:root:XX add new best (9, 1) is not 2 10 10
INFO:root:XX add new best (9, 1) is not 2 10 10
INFO:root:XX add new best (9, 1) is not 2 10 10
INFO:root:XX add new best (9, 1) is not 2 10 10
INFO:root:XX add new best (9, 1) is not 2 10 10
INFO:root:XX add new best (9, 1) is not 2 10 10
INFO:root:XX add new best (9, 1) is not 2 10 10
INFO:root:XX add new best (9, 1) is not 2 10 10
INFO:root:XX add new best (9, 1) is not 2 10 10
INFO:root:XX add new best (9, 1) is not 2 10 10
INFO:root:XX add new best (9, 1) is not 2 10 10
INFO:root:XX add new best (9, 1) is not 2 10 10
INFO:root:XX add new best (9, 1) is not 2 10 10
INFO:root:XX add new best (9, 1) is not 2 10 10
INFO:root:XX add new best (9, 1) is not 2 10 10
INFO:root:XX add new best (9, 1) is not 2 10 10
INFO:root:XX add new best (9, 1) is not 2 10 10
INFO:root:XX add new best (9, 1) is not 2 10 10
INFO:root:XX add new best (9, 1) is not 2 10 10
INFO:root:XX add new best (9, 1) is not 2 10 10
INFO:root:XX add new best (9, 1) is not 2 10 10
INFO:root:XX add new best (9, 1) is not 2 10 10
INFO:root:XX add new best (9, 1) is not 2 10 10
INFO:root:XX add new best (9, 1) is not 2 10 10
INFO:root:XX add new best (9, 1) is not 2 10 10
INFO:root:XX add new best (9, 1) is not 2 10 10
INFO:root:XX add new best (9, 1) is not 2 10 10
INFO:root:XX add new best (9, 1) is not 2 10 10
INFO:root:XX add new best (9, 1) is not 2 10 10
INFO:root:XX add new best (9, 1) is not 2 10 10
INFO:root:XX add new best (9, 1) is not 2 10 10
INFO:root:XX add new best (9, 1) is not 2 10 10
INFO:root:XX add new best (9, 1) is not 2 10 10
INFO:root:XX add new best (9, 1) is not 2 10 10
INFO:root:XX add new best (9, 1) is not 2 10 10
INFO:root:XX add new best (9, 1) is not 2 10 10
INFO:root:XX add new best (9, 1) is not 2 10 10
INFO:root:XX add new best (9, 1) is not 2 10 10
INFO:root:XX add new best (9, 1) is not 2 10 10
INFO:root:XX add new best (9, 1) is not 2 10 10
INFO:root:XX add new best (9, 1) is not 2 10 10
INFO:root:XX add new best (9, 1) is not 2 10 10
INFO:root:Trace: [(10, [(9, 1) is not 2])]
INFO:root:Trace Quality: [(10, 1)]
INFO:root:Trace Sorted: [(10, 1)]
INFO:root:Finished
INFO:root:Full Trace [(10, [(9, 1) is not 2])]
INFO:root:Trying {'minPrecheckMUS': True}
INFO:root:Starting Step 1
INFO:root:Current state [[[[1, 4, 5, 7, 9], [1, 4, 5, 7, 8, 9], [6], [1, 3, 4, 7], [1, 3, 7, 8, 9], [7, 9], [2], [4, 5, 7, 9], [5, 7, 9]], [[4, 7, 9], [3], [2], [5], [6, 7, 9], [1], [4, 6, 9], [8], [6, 7, 9]], [[1, 2, 4, 5, 7, 9], [1, 2, 4, 5, 7, 8, 9], [1, 7, 9], [1, 4, 6, 7], [1, 6, 7, 8, 9], [2, 5, 6, 7], [4, 6, 9], [4, 5, 6, 7, 9], [3]], [[1, 2, 5, 6, 7], [2, 4, 5, 7], [5, 7], [9], [6, 7], [2, 3, 5, 6, 7], [3, 4, 6], [1, 2, 3, 6, 7], [8]], [[2, 4, 6, 7, 9], [2, 4, 6, 7, 9], [8], [1, 2, 3, 6, 7], [1, 2, 3, 6, 7], [2, 3, 6, 7], [5], [2, 3, 6, 7, 9], [2, 6, 7, 9]], [[1, 2, 5, 6, 7, 9], [1, 2, 5, 6, 7, 9], [1, 3, 5, 7, 9], [8], [2, 3, 5, 6, 9], [4], [3, 6, 9], [2, 3, 5, 6, 7, 9], [1, 2, 6, 7, 9]], [[8], [2, 5, 6, 7, 9], [3, 5, 7, 9], [2, 3, 6, 7], [4], [2, 3, 6, 9], [1], [2, 3, 5, 6, 7, 9], [2, 5, 6, 7, 9]], [[1, 2, 3, 5, 6, 9], [1, 2, 5, 6, 9], [3, 5, 9], [1, 2, 6], [2, 3, 5, 6, 9], [8], [7], [1, 2, 3, 5, 6, 9], [4]], [[1, 2, 3, 5, 6, 7, 9], [1, 2, 5, 6, 7, 9], [4], [1, 2, 6, 7], [2, 3, 5, 6, 9], [2, 3, 6, 9], [8], [1, 2, 3, 5, 6, 7, 9], [1, 2, 5, 6, 7, 9]]]]
INFO:root:Doing checkSmall1
INFO:root:Getting tiny MUSes, distance 1, for 1 puzlits, 1 repeats
INFO:root:Chunked 1 in [1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
INFO:root:Doing checkSmall2
INFO:root:Getting tiny MUSes, distance 2, for 1 puzlits, 1 repeats
INFO:root:Chunked 1 in [1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
INFO:root:Considering 100 * 1 jobs for minsize=3
INFO:root:Chunked 100 in [9, 9, 9, 9, 8, 8, 8, 8, 8, 8, 8, 8]
INFO:root:Considering 100 * 1 jobs for minsize=4
INFO:root:Chunked 100 in [9, 9, 9, 9, 8, 8, 8, 8, 8, 8, 8, 8]
INFO:root:Considering 100 * 1 jobs for minsize=5
INFO:root:Chunked 100 in [9, 9, 9, 9, 8, 8, 8, 8, 8, 8, 8, 8]
INFO:root:Considering 100 * 1 jobs for minsize=6
INFO:root:Chunked 100 in [9, 9, 9, 9, 8, 8, 8, 8, 8, 8, 8, 8]
INFO:root:Considering 100 * 1 jobs for minsize=7
INFO:root:Chunked 100 in [9, 9, 9, 9, 8, 8, 8, 8, 8, 8, 8, 8]
INFO:root:Considering 100 * 1 jobs for minsize=8
INFO:root:Chunked 100 in [9, 9, 9, 9, 8, 8, 8, 8, 8, 8, 8, 8]
INFO:root:Considering 100 * 1 jobs for minsize=9
INFO:root:Chunked 100 in [9, 9, 9, 9, 8, 8, 8, 8, 8, 8, 8, 8]
INFO:root:XX found first (9, 1) is not 2 10
INFO:root:XX add new best (9, 1) is not 2 10 10
INFO:root:XX add new best (9, 1) is not 2 10 10
INFO:root:XX add new best (9, 1) is not 2 10 10
INFO:root:XX add new best (9, 1) is not 2 10 10
INFO:root:XX add new best (9, 1) is not 2 10 10
INFO:root:XX add new best (9, 1) is not 2 10 10
INFO:root:Considering 100 * 1 jobs for minsize=10
INFO:root:Chunked 100 in [9, 9, 9, 9, 8, 8, 8, 8, 8, 8, 8, 8]
INFO:root:XX add new best (9, 1) is not 2 10 10
INFO:root:XX add new best (9, 1) is not 2 10 10
INFO:root:XX add new best (9, 1) is not 2 10 10
INFO:root:XX add new best (9, 1) is not 2 10 10
INFO:root:XX add new best (9, 1) is not 2 10 10
INFO:root:XX add new best (9, 1) is not 2 10 10
INFO:root:XX add new best (9, 1) is not 2 10 10
INFO:root:XX add new best (9, 1) is not 2 10 10
INFO:root:XX add new best (9, 1) is not 2 10 10
INFO:root:Trace: [(10, [(9, 1) is not 2])]
INFO:root:Trace Quality: [(10, 1)]
INFO:root:Trace Sorted: [(10, 1)]
INFO:root:Finished
INFO:root:Full Trace [(10, [(9, 1) is not 2])]
INFO:root:Trying {'gallopingMUSes': True}
INFO:root:Starting Step 1
INFO:root:Current state [[[[1, 4, 5, 7, 9], [1, 4, 5, 7, 8, 9], [6], [1, 3, 4, 7], [1, 3, 7, 8, 9], [7, 9], [2], [4, 5, 7, 9], [5, 7, 9]], [[4, 7, 9], [3], [2], [5], [6, 7, 9], [1], [4, 6, 9], [8], [6, 7, 9]], [[1, 2, 4, 5, 7, 9], [1, 2, 4, 5, 7, 8, 9], [1, 7, 9], [1, 4, 6, 7], [1, 6, 7, 8, 9], [2, 5, 6, 7], [4, 6, 9], [4, 5, 6, 7, 9], [3]], [[1, 2, 5, 6, 7], [2, 4, 5, 7], [5, 7], [9], [6, 7], [2, 3, 5, 6, 7], [3, 4, 6], [1, 2, 3, 6, 7], [8]], [[2, 4, 6, 7, 9], [2, 4, 6, 7, 9], [8], [1, 2, 3, 6, 7], [1, 2, 3, 6, 7], [2, 3, 6, 7], [5], [2, 3, 6, 7, 9], [2, 6, 7, 9]], [[1, 2, 5, 6, 7, 9], [1, 2, 5, 6, 7, 9], [1, 3, 5, 7, 9], [8], [2, 3, 5, 6, 9], [4], [3, 6, 9], [2, 3, 5, 6, 7, 9], [1, 2, 6, 7, 9]], [[8], [2, 5, 6, 7, 9], [3, 5, 7, 9], [2, 3, 6, 7], [4], [2, 3, 6, 9], [1], [2, 3, 5, 6, 7, 9], [2, 5, 6, 7, 9]], [[1, 2, 3, 5, 6, 9], [1, 2, 5, 6, 9], [3, 5, 9], [1, 2, 6], [2, 3, 5, 6, 9], [8], [7], [1, 2, 3, 5, 6, 9], [4]], [[1, 2, 3, 5, 6, 7, 9], [1, 2, 5, 6, 7, 9], [4], [1, 2, 6, 7], [2, 3, 5, 6, 9], [2, 3, 6, 9], [8], [1, 2, 3, 5, 6, 7, 9], [1, 2, 5, 6, 7, 9]]]]
INFO:root:Doing checkSmall1
INFO:root:Getting tiny MUSes, distance 1, for 1 puzlits, 1 repeats
INFO:root:Chunked 1 in [1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
INFO:root:Doing checkSmall2
INFO:root:Getting tiny MUSes, distance 2, for 1 puzlits, 1 repeats
INFO:root:Chunked 1 in [1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
INFO:root:Considering 100 * 1 jobs for minsize=3
INFO:root:Chunked 100 in [9, 9, 9, 9, 8, 8, 8, 8, 8, 8, 8, 8]
INFO:root:Considering 100 * 1 jobs for minsize=4
INFO:root:Chunked 100 in [9, 9, 9, 9, 8, 8, 8, 8, 8, 8, 8, 8]
INFO:root:Considering 100 * 1 jobs for minsize=5
INFO:root:Chunked 100 in [9, 9, 9, 9, 8, 8, 8, 8, 8, 8, 8, 8]
INFO:root:Considering 100 * 1 jobs for minsize=6
INFO:root:Chunked 100 in [9, 9, 9, 9, 8, 8, 8, 8, 8, 8, 8, 8]
INFO:root:Considering 100 * 1 jobs for minsize=7
INFO:root:Chunked 100 in [9, 9, 9, 9, 8, 8, 8, 8, 8, 8, 8, 8]
INFO:root:Considering 100 * 1 jobs for minsize=8
INFO:root:Chunked 100 in [9, 9, 9, 9, 8, 8, 8, 8, 8, 8, 8, 8]
INFO:root:Considering 100 * 1 jobs for minsize=9
INFO:root:Chunked 100 in [9, 9, 9, 9, 8, 8, 8, 8, 8, 8, 8, 8]
INFO:root:XX found first (9, 1) is not 2 10
INFO:root:XX add new best (9, 1) is not 2 10 10
INFO:root:XX add new best (9, 1) is not 2 10 10
INFO:root:XX add new best (9, 1) is not 2 10 10
INFO:root:Considering 100 * 1 jobs for minsize=10
INFO:root:Chunked 100 in [9, 9, 9, 9, 8, 8, 8, 8, 8, 8, 8, 8]
INFO:root:XX add new best (9, 1) is not 2 10 10
INFO:root:XX add new best (9, 1) is not 2 10 10
INFO:root:XX add new best (9, 1) is not 2 10 10
INFO:root:XX add new best (9, 1) is not 2 10 10
INFO:root:Trace: [(10, [(9, 1) is not 2])]
INFO:root:Trace Quality: [(10, 1)]
INFO:root:Trace Sorted: [(10, 1)]
INFO:root:Finished
INFO:root:Full Trace [(10, [(9, 1) is not 2])]
INFO:root:Trying {'minPrecheckStepsMUS': True}
INFO:root:Starting Step 1
INFO:root:Current state [[[[1, 4, 5, 7, 9], [1, 4, 5, 7, 8, 9], [6], [1, 3, 4, 7], [1, 3, 7, 8, 9], [7, 9], [2], [4, 5, 7, 9], [5, 7, 9]], [[4, 7, 9], [3], [2], [5], [6, 7, 9], [1], [4, 6, 9], [8], [6, 7, 9]], [[1, 2, 4, 5, 7, 9], [1, 2, 4, 5, 7, 8, 9], [1, 7, 9], [1, 4, 6, 7], [1, 6, 7, 8, 9], [2, 5, 6, 7], [4, 6, 9], [4, 5, 6, 7, 9], [3]], [[1, 2, 5, 6, 7], [2, 4, 5, 7], [5, 7], [9], [6, 7], [2, 3, 5, 6, 7], [3, 4, 6], [1, 2, 3, 6, 7], [8]], [[2, 4, 6, 7, 9], [2, 4, 6, 7, 9], [8], [1, 2, 3, 6, 7], [1, 2, 3, 6, 7], [2, 3, 6, 7], [5], [2, 3, 6, 7, 9], [2, 6, 7, 9]], [[1, 2, 5, 6, 7, 9], [1, 2, 5, 6, 7, 9], [1, 3, 5, 7, 9], [8], [2, 3, 5, 6, 9], [4], [3, 6, 9], [2, 3, 5, 6, 7, 9], [1, 2, 6, 7, 9]], [[8], [2, 5, 6, 7, 9], [3, 5, 7, 9], [2, 3, 6, 7], [4], [2, 3, 6, 9], [1], [2, 3, 5, 6, 7, 9], [2, 5, 6, 7, 9]], [[1, 2, 3, 5, 6, 9], [1, 2, 5, 6, 9], [3, 5, 9], [1, 2, 6], [2, 3, 5, 6, 9], [8], [7], [1, 2, 3, 5, 6, 9], [4]], [[1, 2, 3, 5, 6, 7, 9], [1, 2, 5, 6, 7, 9], [4], [1, 2, 6, 7], [2, 3, 5, 6, 9], [2, 3, 6, 9], [8], [1, 2, 3, 5, 6, 7, 9], [1, 2, 5, 6, 7, 9]]]]
INFO:root:Doing checkSmall1
INFO:root:Getting tiny MUSes, distance 1, for 1 puzlits, 1 repeats
INFO:root:Chunked 1 in [1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
INFO:root:Doing checkSmall2
INFO:root:Getting tiny MUSes, distance 2, for 1 puzlits, 1 repeats
INFO:root:Chunked 1 in [1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
INFO:root:Considering 100 * 1 jobs for minsize=3
INFO:root:Chunked 100 in [9, 9, 9, 9, 8, 8, 8, 8, 8, 8, 8, 8]
INFO:root:Considering 100 * 1 jobs for minsize=4
INFO:root:Chunked 100 in [9, 9, 9, 9, 8, 8, 8, 8, 8, 8, 8, 8]
INFO:root:Considering 100 * 1 jobs for minsize=5
INFO:root:Chunked 100 in [9, 9, 9, 9, 8, 8, 8, 8, 8, 8, 8, 8]
INFO:root:Considering 100 * 1 jobs for minsize=6
INFO:root:Chunked 100 in [9, 9, 9, 9, 8, 8, 8, 8, 8, 8, 8, 8]
INFO:root:Considering 100 * 1 jobs for minsize=7
INFO:root:Chunked 100 in [9, 9, 9, 9, 8, 8, 8, 8, 8, 8, 8, 8]
INFO:root:Considering 100 * 1 jobs for minsize=8
INFO:root:Chunked 100 in [9, 9, 9, 9, 8, 8, 8, 8, 8, 8, 8, 8]
INFO:root:Considering 100 * 1 jobs for minsize=9
INFO:root:Chunked 100 in [9, 9, 9, 9, 8, 8, 8, 8, 8, 8, 8, 8]
INFO:root:XX found first (9, 1) is not 2 10
INFO:root:XX add new best (9, 1) is not 2 10 10
INFO:root:XX add new best (9, 1) is not 2 10 10
INFO:root:XX add new best (9, 1) is not 2 10 10
INFO:root:XX add new best (9, 1) is not 2 10 10
INFO:root:XX add new best (9, 1) is not 2 10 10
INFO:root:XX add new best (9, 1) is not 2 10 10
INFO:root:Considering 100 * 1 jobs for minsize=10
INFO:root:Chunked 100 in [9, 9, 9, 9, 8, 8, 8, 8, 8, 8, 8, 8]
INFO:root:XX add new best (9, 1) is not 2 10 10
INFO:root:XX add new best (9, 1) is not 2 10 10
INFO:root:XX add new best (9, 1) is not 2 10 10
INFO:root:XX add new best (9, 1) is not 2 10 10
INFO:root:XX add new best (9, 1) is not 2 10 10
INFO:root:XX add new best (9, 1) is not 2 10 10
INFO:root:XX add new best (9, 1) is not 2 10 10
INFO:root:XX add new best (9, 1) is not 2 10 10
INFO:root:XX add new best (9, 1) is not 2 10 10
INFO:root:Trace: [(10, [(9, 1) is not 2])]
INFO:root:Trace Quality: [(10, 1)]
INFO:root:Trace Sorted: [(10, 1)]
INFO:root:Finished
INFO:root:Full Trace [(10, [(9, 1) is not 2])]
INFO:root:Trying {'gallopingMUSes': True, 'minPrecheckMUS': True}
INFO:root:Starting Step 1
INFO:root:Current state [[[[1, 4, 5, 7, 9], [1, 4, 5, 7, 8, 9], [6], [1, 3, 4, 7], [1, 3, 7, 8, 9], [7, 9], [2], [4, 5, 7, 9], [5, 7, 9]], [[4, 7, 9], [3], [2], [5], [6, 7, 9], [1], [4, 6, 9], [8], [6, 7, 9]], [[1, 2, 4, 5, 7, 9], [1, 2, 4, 5, 7, 8, 9], [1, 7, 9], [1, 4, 6, 7], [1, 6, 7, 8, 9], [2, 5, 6, 7], [4, 6, 9], [4, 5, 6, 7, 9], [3]], [[1, 2, 5, 6, 7], [2, 4, 5, 7], [5, 7], [9], [6, 7], [2, 3, 5, 6, 7], [3, 4, 6], [1, 2, 3, 6, 7], [8]], [[2, 4, 6, 7, 9], [2, 4, 6, 7, 9], [8], [1, 2, 3, 6, 7], [1, 2, 3, 6, 7], [2, 3, 6, 7], [5], [2, 3, 6, 7, 9], [2, 6, 7, 9]], [[1, 2, 5, 6, 7, 9], [1, 2, 5, 6, 7, 9], [1, 3, 5, 7, 9], [8], [2, 3, 5, 6, 9], [4], [3, 6, 9], [2, 3, 5, 6, 7, 9], [1, 2, 6, 7, 9]], [[8], [2, 5, 6, 7, 9], [3, 5, 7, 9], [2, 3, 6, 7], [4], [2, 3, 6, 9], [1], [2, 3, 5, 6, 7, 9], [2, 5, 6, 7, 9]], [[1, 2, 3, 5, 6, 9], [1, 2, 5, 6, 9], [3, 5, 9], [1, 2, 6], [2, 3, 5, 6, 9], [8], [7], [1, 2, 3, 5, 6, 9], [4]], [[1, 2, 3, 5, 6, 7, 9], [1, 2, 5, 6, 7, 9], [4], [1, 2, 6, 7], [2, 3, 5, 6, 9], [2, 3, 6, 9], [8], [1, 2, 3, 5, 6, 7, 9], [1, 2, 5, 6, 7, 9]]]]
INFO:root:Doing checkSmall1
INFO:root:Getting tiny MUSes, distance 1, for 1 puzlits, 1 repeats
INFO:root:Chunked 1 in [1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
INFO:root:Doing checkSmall2
INFO:root:Getting tiny MUSes, distance 2, for 1 puzlits, 1 repeats
INFO:root:Chunked 1 in [1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
INFO:root:Considering 100 * 1 jobs for minsize=3
INFO:root:Chunked 100 in [9, 9, 9, 9, 8, 8, 8, 8, 8, 8, 8, 8]
INFO:root:Considering 100 * 1 jobs for minsize=4
INFO:root:Chunked 100 in [9, 9, 9, 9, 8, 8, 8, 8, 8, 8, 8, 8]
INFO:root:Considering 100 * 1 jobs for minsize=5
INFO:root:Chunked 100 in [9, 9, 9, 9, 8, 8, 8, 8, 8, 8, 8, 8]
INFO:root:Considering 100 * 1 jobs for minsize=6
INFO:root:Chunked 100 in [9, 9, 9, 9, 8, 8, 8, 8, 8, 8, 8, 8]
INFO:root:Considering 100 * 1 jobs for minsize=7
INFO:root:Chunked 100 in [9, 9, 9, 9, 8, 8, 8, 8, 8, 8, 8, 8]
INFO:root:Considering 100 * 1 jobs for minsize=8
INFO:root:Chunked 100 in [9, 9, 9, 9, 8, 8, 8, 8, 8, 8, 8, 8]
INFO:root:Considering 100 * 1 jobs for minsize=9
INFO:root:Chunked 100 in [9, 9, 9, 9, 8, 8, 8, 8, 8, 8, 8, 8]
INFO:root:XX found first (9, 1) is not 2 10
INFO:root:XX add new best (9, 1) is not 2 10 10
INFO:root:XX add new best (9, 1) is not 2 10 10
INFO:root:XX add new best (9, 1) is not 2 10 10
INFO:root:XX add new best (9, 1) is not 2 10 10
INFO:root:XX add new best (9, 1) is not 2 10 10
INFO:root:XX add new best (9, 1) is not 2 10 10
INFO:root:Considering 100 * 1 jobs for minsize=10
INFO:root:Chunked 100 in [9, 9, 9, 9, 8, 8, 8, 8, 8, 8, 8, 8]
INFO:root:XX add new best (9, 1) is not 2 10 10
INFO:root:XX add new best (9, 1) is not 2 10 10
INFO:root:XX add new best (9, 1) is not 2 10 10
INFO:root:XX add new best (9, 1) is not 2 10 10
INFO:root:XX add new best (9, 1) is not 2 10 10
INFO:root:XX add new best (9, 1) is not 2 10 10
INFO:root:XX add new best (9, 1) is not 2 10 10
INFO:root:XX add new best (9, 1) is not 2 10 10
INFO:root:XX add new best (9, 1) is not 2 10 10
INFO:root:Trace: [(10, [(9, 1) is not 2])]
INFO:root:Trace Quality: [(10, 1)]
INFO:root:Trace Sorted: [(10, 1)]
INFO:root:Finished
INFO:root:Full Trace [(10, [(9, 1) is not 2])]
INFO:root:Trying {}
INFO:root:Starting Step 1
INFO:root:Current state [[[[1, 4, 5, 7, 9], [1, 4, 5, 7, 8, 9], [6], [1, 3, 4, 7], [1, 3, 7, 8, 9], [7, 9], [2], [4, 5, 7, 9], [5, 7, 9]], [[4, 7, 9], [3], [2], [5], [6, 7, 9], [1], [4, 6, 9], [8], [6, 7, 9]], [[1, 2, 4, 5, 7, 9], [1, 2, 4, 5, 7, 8, 9], [1, 7, 9], [1, 4, 6, 7], [1, 6, 7, 8, 9], [2, 5, 6, 7], [4, 6, 9], [4, 5, 6, 7, 9], [3]], [[1, 2, 5, 6, 7], [2, 4, 5, 7], [5, 7], [9], [6, 7], [2, 3, 5, 6, 7], [3, 4, 6], [1, 2, 3, 6, 7], [8]], [[2, 4, 6, 7, 9], [2, 4, 6, 7, 9], [8], [1, 3, 6, 7], [1, 2, 3, 6, 7], [2, 3, 6, 7], [5], [2, 3, 6, 7, 9], [2, 6, 7, 9]], [[1, 2, 5, 6, 7, 9], [1, 2, 5, 6, 7, 9], [1, 3, 5, 7, 9], [8], [2, 3, 5, 6, 9], [4], [3, 6, 9], [2, 3, 5, 6, 7, 9], [1, 2, 6, 7, 9]], [[8], [5, 6, 7, 9], [3, 5, 7, 9], [3, 6, 7], [4], [2, 3, 6, 9], [1], [2, 3, 5, 6, 7, 9], [2, 5, 6, 7, 9]], [[1, 3, 5, 6, 9], [1, 5, 6, 9], [3, 5, 9], [1, 2, 6], [2, 3, 5, 6, 9], [8], [7], [1, 2, 3, 5, 6, 9], [4]], [[1, 3, 5, 6, 7, 9], [1, 5, 6, 7, 9], [4], [1, 2, 6, 7], [2, 3, 5, 6, 9], [2, 3, 6, 9], [8], [1, 2, 3, 5, 6, 7, 9], [1, 2, 5, 6, 7, 9]]]]
INFO:root:Doing checkSmall1
INFO:root:Getting tiny MUSes, distance 1, for 1 puzlits, 1 repeats
INFO:root:Chunked 1 in [1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
INFO:root:Doing checkSmall2
INFO:root:Getting tiny MUSes, distance 2, for 1 puzlits, 1 repeats
INFO:root:Chunked 1 in [1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
INFO:root:Considering 100 * 1 jobs for minsize=3
INFO:root:Chunked 100 in [9, 9, 9, 9, 8, 8, 8, 8, 8, 8, 8, 8]
INFO:root:Considering 100 * 1 jobs for minsize=4
INFO:root:Chunked 100 in [9, 9, 9, 9, 8, 8, 8, 8, 8, 8, 8, 8]
INFO:root:XX found first (1, 1) is not 4 5
INFO:root:XX add new best (1, 1) is not 4 5 5
INFO:root:XX add new best (1, 1) is not 4 5 5
INFO:root:XX add new best (1, 1) is not 4 5 5
INFO:root:XX add new best (1, 1) is not 4 5 5
INFO:root:XX add new best (1, 1) is not 4 5 5
INFO:root:XX add new best (1, 1) is not 4 5 5
INFO:root:XX add new best (1, 1) is not 4 5 5
INFO:root:XX add new best (1, 1) is not 4 5 5
INFO:root:XX add new best (1, 1) is not 4 5 5
INFO:root:XX add new best (1, 1) is not 4 5 5
INFO:root:XX add new best (1, 1) is not 4 5 5
INFO:root:XX add new best (1, 1) is not 4 5 5
INFO:root:XX add new best (1, 1) is not 4 5 5
INFO:root:XX add new best (1, 1) is not 4 5 5
INFO:root:XX add new best (1, 1) is not 4 5 5
INFO:root:XX add new best (1, 1) is not 4 5 5
INFO:root:XX add new best (1, 1) is not 4 5 5
INFO:root:XX add new best (1, 1) is not 4 5 5
INFO:root:XX add new best (1, 1) is not 4 5 5
INFO:root:XX add new best (1, 1) is not 4 5 5
INFO:root:XX add new best (1, 1) is not 4 5 5
INFO:root:XX add new best (1, 1) is not 4 5 5
INFO:root:XX add new best (1, 1) is not 4 5 5
INFO:root:XX add new best (1, 1) is not 4 5 5
INFO:root:XX add new best (1, 1) is not 4 5 5
INFO:root:XX add new best (1, 1) is not 4 5 5
INFO:root:XX add new best (1, 1) is not 4 5 5
INFO:root:XX add new best (1, 1) is not 4 5 5
INFO:root:XX add new best (1, 1) is not 4 5 5
INFO:root:XX add new best (1, 1) is not 4 5 5
INFO:root:XX add new best (1, 1) is not 4 5 5
INFO:root:XX add new best (1, 1) is not 4 5 5
INFO:root:XX add new best (1, 1) is not 4 5 5
INFO:root:XX add new best (1, 1) is not 4 5 5
INFO:root:XX add new best (1, 1) is not 4 5 5
INFO:root:XX add new best (1, 1) is not 4 5 5
INFO:root:XX add new best (1, 1) is not 4 5 5
INFO:root:XX add new best (1, 1) is not 4 5 5
INFO:root:XX add new best (1, 1) is not 4 5 5
INFO:root:XX add new best (1, 1) is not 4 5 5
INFO:root:XX add new best (1, 1) is not 4 5 5
INFO:root:XX add new best (1, 1) is not 4 5 5
INFO:root:XX add new best (1, 1) is not 4 5 5
INFO:root:XX add new best (1, 1) is not 4 5 5
INFO:root:XX add new best (1, 1) is not 4 5 5
INFO:root:XX add new best (1, 1) is not 4 5 5
INFO:root:XX add new best (1, 1) is not 4 5 5
INFO:root:XX add new best (1, 1) is not 4 5 5
INFO:root:XX add new best (1, 1) is not 4 5 5
INFO:root:XX add new best (1, 1) is not 4 5 5
INFO:root:XX add new best (1, 1) is not 4 5 5
INFO:root:XX add new best (1, 1) is not 4 5 5
INFO:root:XX add new best (1, 1) is not 4 5 5
INFO:root:XX add new best (1, 1) is not 4 5 5
INFO:root:XX add new best (1, 1) is not 4 5 5
INFO:root:XX add new best (1, 1) is not 4 5 5
INFO:root:XX add new best (1, 1) is not 4 5 5
INFO:root:XX add new best (1, 1) is not 4 5 5
INFO:root:XX add new best (1, 1) is not 4 5 5
INFO:root:XX add new best (1, 1) is not 4 5 5
INFO:root:XX add new best (1, 1) is not 4 5 5
INFO:root:XX add new best (1, 1) is not 4 5 5
INFO:root:XX add new best (1, 1) is not 4 5 5
INFO:root:XX add new best (1, 1) is not 4 5 5
INFO:root:XX add new best (1, 1) is not 4 5 5
INFO:root:XX add new best (1, 1) is not 4 5 5
INFO:root:XX add new best (1, 1) is not 4 5 5
INFO:root:XX add new best (1, 1) is not 4 5 5
INFO:root:XX add new best (1, 1) is not 4 5 5
INFO:root:XX add new best (1, 1) is not 4 5 5
INFO:root:XX add new best (1, 1) is not 4 5 5
INFO:root:XX add new best (1, 1) is not 4 5 5
INFO:root:XX add new best (1, 1) is not 4 5 5
INFO:root:XX add new best (1, 1) is not 4 5 5
INFO:root:XX add new best (1, 1) is not 4 5 5
INFO:root:XX add new best (1, 1) is not 4 5 5
INFO:root:XX add new best (1, 1) is not 4 5 5
INFO:root:XX add new best (1, 1) is not 4 5 5
INFO:root:XX add new best (1, 1) is not 4 5 5
INFO:root:XX add new best (1, 1) is not 4 5 5
INFO:root:XX add new best (1, 1) is not 4 5 5
INFO:root:XX add new best (1, 1) is not 4 5 5
INFO:root:XX add new best (1, 1) is not 4 5 5
INFO:root:XX add new best (1, 1) is not 4 5 5
INFO:root:XX add new best (1, 1) is not 4 5 5
INFO:root:XX add new best (1, 1) is not 4 5 5
INFO:root:XX add new best (1, 1) is not 4 5 5
INFO:root:XX add new best (1, 1) is not 4 5 5
INFO:root:XX add new best (1, 1) is not 4 5 5
INFO:root:XX add new best (1, 1) is not 4 5 5
INFO:root:XX add new best (1, 1) is not 4 5 5
INFO:root:XX add new best (1, 1) is not 4 5 5
INFO:root:XX add new best (1, 1) is not 4 5 5
INFO:root:XX add new best (1, 1) is not 4 5 5
INFO:root:XX add new best (1, 1) is not 4 5 5
INFO:root:XX add new best (1, 1) is not 4 5 5
INFO:root:XX add new best (1, 1) is not 4 5 5
INFO:root:XX add new best (1, 1) is not 4 5 5
INFO:root:XX add new best (1, 1) is not 4 5 5
INFO:root:Considering 100 * 1 jobs for minsize=5
INFO:root:Chunked 100 in [9, 9, 9, 9, 8, 8, 8, 8, 8, 8, 8, 8]
INFO:root:XX add new best (1, 1) is not 4 5 5
INFO:root:XX add new best (1, 1) is not 4 5 5
INFO:root:XX add new best (1, 1) is not 4 5 5
INFO:root:XX add new best (1, 1) is not 4 5 5
INFO:root:XX add new best (1, 1) is not 4 5 5
INFO:root:XX add new best (1, 1) is not 4 5 5
INFO:root:XX add new best (1, 1) is not 4 5 5
INFO:root:XX add new best (1, 1) is not 4 5 5
INFO:root:XX add new best (1, 1) is not 4 5 5
INFO:root:XX add new best (1, 1) is not 4 5 5
INFO:root:XX add new best (1, 1) is not 4 5 5
INFO:root:XX add new best (1, 1) is not 4 5 5
INFO:root:XX add new best (1, 1) is not 4 5 5
INFO:root:XX add new best (1, 1) is not 4 5 5
INFO:root:XX add new best (1, 1) is not 4 5 5
INFO:root:XX add new best (1, 1) is not 4 5 5
INFO:root:XX add new best (1, 1) is not 4 5 5
INFO:root:XX add new best (1, 1) is not 4 5 5
INFO:root:XX add new best (1, 1) is not 4 5 5
INFO:root:XX add new best (1, 1) is not 4 5 5
INFO:root:XX add new best (1, 1) is not 4 5 5
INFO:root:XX add new best (1, 1) is not 4 5 5
INFO:root:XX add new best (1, 1) is not 4 5 5
INFO:root:XX add new best (1, 1) is not 4 5 5
INFO:root:XX add new best (1, 1) is not 4 5 5
INFO:root:XX add new best (1, 1) is not 4 5 5
INFO:root:XX add new best (1, 1) is not 4 5 5
INFO:root:XX add new best (1, 1) is not 4 5 5
INFO:root:XX add new best (1, 1) is not 4 5 5
INFO:root:XX add new best (1, 1) is not 4 5 5
INFO:root:XX add new best (1, 1) is not 4 5 5
INFO:root:XX add new best (1, 1) is not 4 5 5
INFO:root:XX add new best (1, 1) is not 4 5 5
INFO:root:XX add new best (1, 1) is not 4 5 5
INFO:root:XX add new best (1, 1) is not 4 5 5
INFO:root:XX add new best (1, 1) is not 4 5 5
INFO:root:XX add new best (1, 1) is not 4 5 5
INFO:root:XX add new best (1, 1) is not 4 5 5
INFO:root:XX add new best (1, 1) is not 4 5 5
INFO:root:XX add new best (1, 1) is not 4 5 5
INFO:root:XX add new best (1, 1) is not 4 5 5
INFO:root:XX add new best (1, 1) is not 4 5 5
INFO:root:XX add new best (1, 1) is not 4 5 5
INFO:root:XX add new best (1, 1) is not 4 5 5
INFO:root:XX add new best (1, 1) is not 4 5 5
INFO:root:XX add new best (1, 1) is not 4 5 5
INFO:root:XX add new best (1, 1) is not 4 5 5
INFO:root:XX add new best (1, 1) is not 4 5 5
INFO:root:XX add new best (1, 1) is not 4 5 5
INFO:root:XX add new best (1, 1) is not 4 5 5
INFO:root:XX add new best (1, 1) is not 4 5 5
INFO:root:XX add new best (1, 1) is not 4 5 5
INFO:root:XX add new best (1, 1) is not 4 5 5
INFO:root:XX add new best (1, 1) is not 4 5 5
INFO:root:XX add new best (1, 1) is not 4 5 5
INFO:root:XX add new best (1, 1) is not 4 5 5
INFO:root:XX add new best (1, 1) is not 4 5 5
INFO:root:XX add new best (1, 1) is not 4 5 5
INFO:root:XX add new best (1, 1) is not 4 5 5
INFO:root:XX add new best (1, 1) is not 4 5 5
INFO:root:XX add new best (1, 1) is not 4 5 5
INFO:root:XX add new best (1, 1) is not 4 5 5
INFO:root:XX add new best (1, 1) is not 4 5 5
INFO:root:XX add new best (1, 1) is not 4 5 5
INFO:root:XX add new best (1, 1) is not 4 5 5
INFO:root:XX add new best (1, 1) is not 4 5 5
INFO:root:XX add new best (1, 1) is not 4 5 5
INFO:root:XX add new best (1, 1) is not 4 5 5
INFO:root:XX add new best (1, 1) is not 4 5 5
INFO:root:XX add new best (1, 1) is not 4 5 5
INFO:root:XX add new best (1, 1) is not 4 5 5
INFO:root:XX add new best (1, 1) is not 4 5 5
INFO:root:XX add new best (1, 1) is not 4 5 5
INFO:root:XX add new best (1, 1) is not 4 5 5
INFO:root:XX add new best (1, 1) is not 4 5 5
INFO:root:XX add new best (1, 1) is not 4 5 5
INFO:root:XX add new best (1, 1) is not 4 5 5
INFO:root:XX add new best (1, 1) is not 4 5 5
INFO:root:XX add new best (1, 1) is not 4 5 5
INFO:root:XX add new best (1, 1) is not 4 5 5
INFO:root:XX add new best (1, 1) is not 4 5 5
INFO:root:XX add new best (1, 1) is not 4 5 5
INFO:root:XX add new best (1, 1) is not 4 5 5
INFO:root:XX add new best (1, 1) is not 4 5 5
INFO:root:XX add new best (1, 1) is not 4 5 5
INFO:root:XX add new best (1, 1) is not 4 5 5
INFO:root:XX add new best (1, 1) is not 4 5 5
INFO:root:XX add new best (1, 1) is not 4 5 5
INFO:root:XX add new best (1, 1) is not 4 5 5
INFO:root:XX add new best (1, 1) is not 4 5 5
INFO:root:XX add new best (1, 1) is not 4 5 5
INFO:root:XX add new best (1, 1) is not 4 5 5
INFO:root:XX add new best (1, 1) is not 4 5 5
INFO:root:XX add new best (1, 1) is not 4 5 5
INFO:root:XX add new best (1, 1) is not 4 5 5
INFO:root:XX add new best (1, 1) is not 4 5 5
INFO:root:XX add new best (1, 1) is not 4 5 5
INFO:root:XX add new best (1, 1) is not 4 5 5
INFO:root:XX add new best (1, 1) is not 4 5 5
INFO:root:XX add new best (1, 1) is not 4 5 5
INFO:root:Trace: [(5, [(1, 1) is not 4])]
INFO:root:Trace Quality: [(5, 1)]
INFO:root:Trace Sorted: [(5, 1)]
INFO:root:Finished
INFO:root:Full Trace [(5, [(1, 1) is not 4])]
INFO:root:Trying {'prechopMUSes': True}
INFO:root:Starting Step 1
INFO:root:Current state [[[[1, 4, 5, 7, 9], [1, 4, 5, 7, 8, 9], [6], [1, 3, 4, 7], [1, 3, 7, 8, 9], [7, 9], [2], [4, 5, 7, 9], [5, 7, 9]], [[4, 7, 9], [3], [2], [5], [6, 7, 9], [1], [4, 6, 9], [8], [6, 7, 9]], [[1, 2, 4, 5, 7, 9], [1, 2, 4, 5, 7, 8, 9], [1, 7, 9], [1, 4, 6, 7], [1, 6, 7, 8, 9], [2, 5, 6, 7], [4, 6, 9], [4, 5, 6, 7, 9], [3]], [[1, 2, 5, 6, 7], [2, 4, 5, 7], [5, 7], [9], [6, 7], [2, 3, 5, 6, 7], [3, 4, 6], [1, 2, 3, 6, 7], [8]], [[2, 4, 6, 7, 9], [2, 4, 6, 7, 9], [8], [1, 3, 6, 7], [1, 2, 3, 6, 7], [2, 3, 6, 7], [5], [2, 3, 6, 7, 9], [2, 6, 7, 9]], [[1, 2, 5, 6, 7, 9], [1, 2, 5, 6, 7, 9], [1, 3, 5, 7, 9], [8], [2, 3, 5, 6, 9], [4], [3, 6, 9], [2, 3, 5, 6, 7, 9], [1, 2, 6, 7, 9]], [[8], [5, 6, 7, 9], [3, 5, 7, 9], [3, 6, 7], [4], [2, 3, 6, 9], [1], [2, 3, 5, 6, 7, 9], [2, 5, 6, 7, 9]], [[1, 3, 5, 6, 9], [1, 5, 6, 9], [3, 5, 9], [1, 2, 6], [2, 3, 5, 6, 9], [8], [7], [1, 2, 3, 5, 6, 9], [4]], [[1, 3, 5, 6, 7, 9], [1, 5, 6, 7, 9], [4], [1, 2, 6, 7], [2, 3, 5, 6, 9], [2, 3, 6, 9], [8], [1, 2, 3, 5, 6, 7, 9], [1, 2, 5, 6, 7, 9]]]]
INFO:root:Doing checkSmall1
INFO:root:Getting tiny MUSes, distance 1, for 1 puzlits, 1 repeats
INFO:root:Chunked 1 in [1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
INFO:root:Doing checkSmall2
INFO:root:Getting tiny MUSes, distance 2, for 1 puzlits, 1 repeats
INFO:root:Chunked 1 in [1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
INFO:root:Considering 100 * 1 jobs for minsize=3
INFO:root:Chunked 100 in [9, 9, 9, 9, 8, 8, 8, 8, 8, 8, 8, 8]
INFO:root:Considering 100 * 1 jobs for minsize=4
INFO:root:Chunked 100 in [9, 9, 9, 9, 8, 8, 8, 8, 8, 8, 8, 8]
INFO:root:XX found first (1, 1) is not 4 5
INFO:root:XX add new best (1, 1) is not 4 5 5
INFO:root:XX add new best (1, 1) is not 4 5 5
INFO:root:XX add new best (1, 1) is not 4 5 5
INFO:root:XX add new best (1, 1) is not 4 5 5
INFO:root:XX add new best (1, 1) is not 4 5 5
INFO:root:XX add new best (1, 1) is not 4 5 5
INFO:root:XX add new best (1, 1) is not 4 5 5
INFO:root:XX add new best (1, 1) is not 4 5 5
INFO:root:XX add new best (1, 1) is not 4 5 5
INFO:root:XX add new best (1, 1) is not 4 5 5
INFO:root:XX add new best (1, 1) is not 4 5 5
INFO:root:XX add new best (1, 1) is not 4 5 5
INFO:root:XX add new best (1, 1) is not 4 5 5
INFO:root:XX add new best (1, 1) is not 4 5 5
INFO:root:XX add new best (1, 1) is not 4 5 5
INFO:root:XX add new best (1, 1) is not 4 5 5
INFO:root:XX add new best (1, 1) is not 4 5 5
INFO:root:XX add new best (1, 1) is not 4 5 5
INFO:root:XX add new best (1, 1) is not 4 5 5
INFO:root:XX add new best (1, 1) is not 4 5 5
INFO:root:XX add new best (1, 1) is not 4 5 5
INFO:root:XX add new best (1, 1) is not 4 5 5
INFO:root:XX add new best (1, 1) is not 4 5 5
INFO:root:XX add new best (1, 1) is not 4 5 5
INFO:root:XX add new best (1, 1) is not 4 5 5
INFO:root:XX add new best (1, 1) is not 4 5 5
INFO:root:XX add new best (1, 1) is not 4 5 5
INFO:root:XX add new best (1, 1) is not 4 5 5
INFO:root:XX add new best (1, 1) is not 4 5 5
INFO:root:XX add new best (1, 1) is not 4 5 5
INFO:root:XX add new best (1, 1) is not 4 5 5
INFO:root:XX add new best (1, 1) is not 4 5 5
INFO:root:XX add new best (1, 1) is not 4 5 5
INFO:root:XX add new best (1, 1) is not 4 5 5
INFO:root:XX add new best (1, 1) is not 4 5 5
INFO:root:XX add new best (1, 1) is not 4 5 5
INFO:root:XX add new best (1, 1) is not 4 5 5
INFO:root:XX add new best (1, 1) is not 4 5 5
INFO:root:XX add new best (1, 1) is not 4 5 5
INFO:root:XX add new best (1, 1) is not 4 5 5
INFO:root:XX add new best (1, 1) is not 4 5 5
INFO:root:XX add new best (1, 1) is not 4 5 5
INFO:root:XX add new best (1, 1) is not 4 5 5
INFO:root:XX add new best (1, 1) is not 4 5 5
INFO:root:XX add new best (1, 1) is not 4 5 5
INFO:root:XX add new best (1, 1) is not 4 5 5
INFO:root:XX add new best (1, 1) is not 4 5 5
INFO:root:XX add new best (1, 1) is not 4 5 5
INFO:root:XX add new best (1, 1) is not 4 5 5
INFO:root:XX add new best (1, 1) is not 4 5 5
INFO:root:XX add new best (1, 1) is not 4 5 5
INFO:root:XX add new best (1, 1) is not 4 5 5
INFO:root:XX add new best (1, 1) is not 4 5 5
INFO:root:XX add new best (1, 1) is not 4 5 5
INFO:root:XX add new best (1, 1) is not 4 5 5
INFO:root:XX add new best (1, 1) is not 4 5 5
INFO:root:XX add new best (1, 1) is not 4 5 5
INFO:root:XX add new best (1, 1) is not 4 5 5
INFO:root:XX add new best (1, 1) is not 4 5 5
INFO:root:XX add new best (1, 1) is not 4 5 5
INFO:root:XX add new best (1, 1) is not 4 5 5
INFO:root:XX add new best (1, 1) is not 4 5 5
INFO:root:XX add new best (1, 1) is not 4 5 5
INFO:root:XX add new best (1, 1) is not 4 5 5
INFO:root:XX add new best (1, 1) is not 4 5 5
INFO:root:XX add new best (1, 1) is not 4 5 5
INFO:root:XX add new best (1, 1) is not 4 5 5
INFO:root:XX add new best (1, 1) is not 4 5 5
INFO:root:XX add new best (1, 1) is not 4 5 5
INFO:root:XX add new best (1, 1) is not 4 5 5
INFO:root:XX add new best (1, 1) is not 4 5 5
INFO:root:Considering 100 * 1 jobs for minsize=5
INFO:root:Chunked 100 in [9, 9, 9, 9, 8, 8, 8, 8, 8, 8, 8, 8]
INFO:root:XX add new best (1, 1) is not 4 5 5
INFO:root:XX add new best (1, 1) is not 4 5 5
INFO:root:XX add new best (1, 1) is not 4 5 5
INFO:root:XX add new best (1, 1) is not 4 5 5
INFO:root:XX add new best (1, 1) is not 4 5 5
INFO:root:XX add new best (1, 1) is not 4 5 5
INFO:root:XX add new best (1, 1) is not 4 5 5
INFO:root:XX add new best (1, 1) is not 4 5 5
INFO:root:XX add new best (1, 1) is not 4 5 5
INFO:root:XX add new best (1, 1) is not 4 5 5
INFO:root:XX add new best (1, 1) is not 4 5 5
INFO:root:XX add new best (1, 1) is not 4 5 5
INFO:root:XX add new best (1, 1) is not 4 5 5
INFO:root:XX add new best (1, 1) is not 4 5 5
INFO:root:XX add new best (1, 1) is not 4 5 5
INFO:root:XX add new best (1, 1) is not 4 5 5
INFO:root:XX add new best (1, 1) is not 4 5 5
INFO:root:XX add new best (1, 1) is not 4 5 5
INFO:root:XX add new best (1, 1) is not 4 5 5
INFO:root:XX add new best (1, 1) is not 4 5 5
INFO:root:XX add new best (1, 1) is not 4 5 5
INFO:root:XX add new best (1, 1) is not 4 5 5
INFO:root:XX add new best (1, 1) is not 4 5 5
INFO:root:XX add new best (1, 1) is not 4 5 5
INFO:root:XX add new best (1, 1) is not 4 5 5
INFO:root:XX add new best (1, 1) is not 4 5 5
INFO:root:XX add new best (1, 1) is not 4 5 5
INFO:root:XX add new best (1, 1) is not 4 5 5
INFO:root:XX add new best (1, 1) is not 4 5 5
INFO:root:XX add new best (1, 1) is not 4 5 5
INFO:root:XX add new best (1, 1) is not 4 5 5
INFO:root:XX add new best (1, 1) is not 4 5 5
INFO:root:XX add new best (1, 1) is not 4 5 5
INFO:root:XX add new best (1, 1) is not 4 5 5
INFO:root:XX add new best (1, 1) is not 4 5 5
INFO:root:XX add new best (1, 1) is not 4 5 5
INFO:root:XX add new best (1, 1) is not 4 5 5
INFO:root:XX add new best (1, 1) is not 4 5 5
INFO:root:XX add new best (1, 1) is not 4 5 5
INFO:root:XX add new best (1, 1) is not 4 5 5
INFO:root:XX add new best (1, 1) is not 4 5 5
INFO:root:XX add new best (1, 1) is not 4 5 5
INFO:root:XX add new best (1, 1) is not 4 5 5
INFO:root:XX add new best (1, 1) is not 4 5 5
INFO:root:XX add new best (1, 1) is not 4 5 5
INFO:root:XX add new best (1, 1) is not 4 5 5
INFO:root:XX add new best (1, 1) is not 4 5 5
INFO:root:XX add new best (1, 1) is not 4 5 5
INFO:root:XX add new best (1, 1) is not 4 5 5
INFO:root:XX add new best (1, 1) is not 4 5 5
INFO:root:XX add new best (1, 1) is not 4 5 5
INFO:root:XX add new best (1, 1) is not 4 5 5
INFO:root:XX add new best (1, 1) is not 4 5 5
INFO:root:XX add new best (1, 1) is not 4 5 5
INFO:root:XX add new best (1, 1) is not 4 5 5
INFO:root:XX add new best (1, 1) is not 4 5 5
INFO:root:XX add new best (1, 1) is not 4 5 5
INFO:root:XX add new best (1, 1) is not 4 5 5
INFO:root:XX add new best (1, 1) is not 4 5 5
INFO:root:XX add new best (1, 1) is not 4 5 5
INFO:root:XX add new best (1, 1) is not 4 5 5
INFO:root:XX add new best (1, 1) is not 4 5 5
INFO:root:XX add new best (1, 1) is not 4 5 5
INFO:root:XX add new best (1, 1) is not 4 5 5
INFO:root:XX add new best (1, 1) is not 4 5 5
INFO:root:XX add new best (1, 1) is not 4 5 5
INFO:root:XX add new best (1, 1) is not 4 5 5
INFO:root:XX add new best (1, 1) is not 4 5 5
INFO:root:XX add new best (1, 1) is not 4 5 5
INFO:root:Trace: [(5, [(1, 1) is not 4])]
INFO:root:Trace Quality: [(5, 1)]
INFO:root:Trace Sorted: [(5, 1)]
INFO:root:Finished
INFO:root:Full Trace [(5, [(1, 1) is not 4])]
INFO:root:Trying {'quarterChopMUS': True}
INFO:root:Starting Step 1
INFO:root:Current state [[[[1, 4, 5, 7, 9], [1, 4, 5, 7, 8, 9], [6], [1, 3, 4, 7], [1, 3, 7, 8, 9], [7, 9], [2], [4, 5, 7, 9], [5, 7, 9]], [[4, 7, 9], [3], [2], [5], [6, 7, 9], [1], [4, 6, 9], [8], [6, 7, 9]], [[1, 2, 4, 5, 7, 9], [1, 2, 4, 5, 7, 8, 9], [1, 7, 9], [1, 4, 6, 7], [1, 6, 7, 8, 9], [2, 5, 6, 7], [4, 6, 9], [4, 5, 6, 7, 9], [3]], [[1, 2, 5, 6, 7], [2, 4, 5, 7], [5, 7], [9], [6, 7], [2, 3, 5, 6, 7], [3, 4, 6], [1, 2, 3, 6, 7], [8]], [[2, 4, 6, 7, 9], [2, 4, 6, 7, 9], [8], [1, 3, 6, 7], [1, 2, 3, 6, 7], [2, 3, 6, 7], [5], [2, 3, 6, 7, 9], [2, 6, 7, 9]], [[1, 2, 5, 6, 7, 9], [1, 2, 5, 6, 7, 9], [1, 3, 5, 7, 9], [8], [2, 3, 5, 6, 9], [4], [3, 6, 9], [2, 3, 5, 6, 7, 9], [1, 2, 6, 7, 9]], [[8], [5, 6, 7, 9], [3, 5, 7, 9], [3, 6, 7], [4], [2, 3, 6, 9], [1], [2, 3, 5, 6, 7, 9], [2, 5, 6, 7, 9]], [[1, 3, 5, 6, 9], [1, 5, 6, 9], [3, 5, 9], [1, 2, 6], [2, 3, 5, 6, 9], [8], [7], [1, 2, 3, 5, 6, 9], [4]], [[1, 3, 5, 6, 7, 9], [1, 5, 6, 7, 9], [4], [1, 2, 6, 7], [2, 3, 5, 6, 9], [2, 3, 6, 9], [8], [1, 2, 3, 5, 6, 7, 9], [1, 2, 5, 6, 7, 9]]]]
INFO:root:Doing checkSmall1
INFO:root:Getting tiny MUSes, distance 1, for 1 puzlits, 1 repeats
INFO:root:Chunked 1 in [1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
INFO:root:Doing checkSmall2
INFO:root:Getting tiny MUSes, distance 2, for 1 puzlits, 1 repeats
INFO:root:Chunked 1 in [1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
INFO:root:Considering 100 * 1 jobs for minsize=3
INFO:root:Chunked 100 in [9, 9, 9, 9, 8, 8, 8, 8, 8, 8, 8, 8]
INFO:root:Considering 100 * 1 jobs for minsize=4
INFO:root:Chunked 100 in [9, 9, 9, 9, 8, 8, 8, 8, 8, 8, 8, 8]
INFO:root:XX found first (1, 1) is not 4 5
INFO:root:XX add new best (1, 1) is not 4 5 5
INFO:root:XX add new best (1, 1) is not 4 5 5
INFO:root:XX add new best (1, 1) is not 4 5 5
INFO:root:XX add new best (1, 1) is not 4 5 5
INFO:root:XX add new best (1, 1) is not 4 5 5
INFO:root:XX add new best (1, 1) is not 4 5 5
INFO:root:XX add new best (1, 1) is not 4 5 5
INFO:root:XX add new best (1, 1) is not 4 5 5
INFO:root:XX add new best (1, 1) is not 4 5 5
INFO:root:XX add new best (1, 1) is not 4 5 5
INFO:root:XX add new best (1, 1) is not 4 5 5
INFO:root:XX add new best (1, 1) is not 4 5 5
INFO:root:XX add new best (1, 1) is not 4 5 5
INFO:root:XX add new best (1, 1) is not 4 5 5
INFO:root:XX add new best (1, 1) is not 4 5 5
INFO:root:XX add new best (1, 1) is not 4 5 5
INFO:root:XX add new best (1, 1) is not 4 5 5
INFO:root:XX add new best (1, 1) is not 4 5 5
INFO:root:XX add new best (1, 1) is not 4 5 5
INFO:root:XX add new best (1, 1) is not 4 5 5
INFO:root:XX add new best (1, 1) is not 4 5 5
INFO:root:XX add new best (1, 1) is not 4 5 5
INFO:root:XX add new best (1, 1) is not 4 5 5
INFO:root:XX add new best (1, 1) is not 4 5 5
INFO:root:XX add new best (1, 1) is not 4 5 5
INFO:root:XX add new best (1, 1) is not 4 5 5
INFO:root:XX add new best (1, 1) is not 4 5 5
INFO:root:XX add new best (1, 1) is not 4 5 5
INFO:root:XX add new best (1, 1) is not 4 5 5
INFO:root:XX add new best (1, 1) is not 4 5 5
INFO:root:XX add new best (1, 1) is not 4 5 5
INFO:root:XX add new best (1, 1) is not 4 5 5
INFO:root:XX add new best (1, 1) is not 4 5 5
INFO:root:XX add new best (1, 1) is not 4 5 5
INFO:root:XX add new best (1, 1) is not 4 5 5
INFO:root:XX add new best (1, 1) is not 4 5 5
INFO:root:XX add new best (1, 1) is not 4 5 5
INFO:root:XX add new best (1, 1) is not 4 5 5
INFO:root:XX add new best (1, 1) is not 4 5 5
INFO:root:XX add new best (1, 1) is not 4 5 5
INFO:root:XX add new best (1, 1) is not 4 5 5
INFO:root:XX add new best (1, 1) is not 4 5 5
INFO:root:XX add new best (1, 1) is not 4 5 5
INFO:root:XX add new best (1, 1) is not 4 5 5
INFO:root:XX add new best (1, 1) is not 4 5 5
INFO:root:XX add new best (1, 1) is not 4 5 5
INFO:root:XX add new best (1, 1) is not 4 5 5
INFO:root:XX add new best (1, 1) is not 4 5 5
INFO:root:XX add new best (1, 1) is not 4 5 5
INFO:root:XX add new best (1, 1) is not 4 5 5
INFO:root:XX add new best (1, 1) is not 4 5 5
INFO:root:XX add new best (1, 1) is not 4 5 5
INFO:root:XX add new best (1, 1) is not 4 5 5
INFO:root:XX add new best (1, 1) is not 4 5 5
INFO:root:XX add new best (1, 1) is not 4 5 5
INFO:root:XX add new best (1, 1) is not 4 5 5
INFO:root:XX add new best (1, 1) is not 4 5 5
INFO:root:XX add new best (1, 1) is not 4 5 5
INFO:root:XX add new best (1, 1) is not 4 5 5
INFO:root:XX add new best (1, 1) is not 4 5 5
INFO:root:XX add new best (1, 1) is not 4 5 5
INFO:root:XX add new best (1, 1) is not 4 5 5
INFO:root:XX add new best (1, 1) is not 4 5 5
INFO:root:XX add new best (1, 1) is not 4 5 5
INFO:root:XX add new best (1, 1) is not 4 5 5
INFO:root:XX add new best (1, 1) is not 4 5 5
INFO:root:XX add new best (1, 1) is not 4 5 5
INFO:root:XX add new best (1, 1) is not 4 5 5
INFO:root:XX add new best (1, 1) is not 4 5 5
INFO:root:XX add new best (1, 1) is not 4 5 5
INFO:root:XX add new best (1, 1) is not 4 5 5
INFO:root:XX add new best (1, 1) is not 4 5 5
INFO:root:XX add new best (1, 1) is not 4 5 5
INFO:root:XX add new best (1, 1) is not 4 5 5
INFO:root:XX add new best (1, 1) is not 4 5 5
INFO:root:XX add new best (1, 1) is not 4 5 5
INFO:root:XX add new best (1, 1) is not 4 5 5
INFO:root:XX add new best (1, 1) is not 4 5 5
INFO:root:XX add new best (1, 1) is not 4 5 5
INFO:root:XX add new best (1, 1) is not 4 5 5
INFO:root:XX add new best (1, 1) is not 4 5 5
INFO:root:XX add new best (1, 1) is not 4 5 5
INFO:root:XX add new best (1, 1) is not 4 5 5
INFO:root:XX add new best (1, 1) is not 4 5 5
INFO:root:XX add new best (1, 1) is not 4 5 5
INFO:root:XX add new best (1, 1) is not 4 5 5
INFO:root:Considering 100 * 1 jobs for minsize=5
INFO:root:Chunked 100 in [9, 9, 9, 9, 8, 8, 8, 8, 8, 8, 8, 8]
INFO:root:XX add new best (1, 1) is not 4 5 5
INFO:root:XX add new best (1, 1) is not 4 5 5
INFO:root:XX add new best (1, 1) is not 4 5 5
INFO:root:XX add new best (1, 1) is not 4 5 5
INFO:root:XX add new best (1, 1) is not 4 5 5
INFO:root:XX add new best (1, 1) is not 4 5 5
INFO:root:XX add new best (1, 1) is not 4 5 5
INFO:root:XX add new best (1, 1) is not 4 5 5
INFO:root:XX add new best (1, 1) is not 4 5 5
INFO:root:XX add new best (1, 1) is not 4 5 5
INFO:root:XX add new best (1, 1) is not 4 5 5
INFO:root:XX add new best (1, 1) is not 4 5 5
INFO:root:XX add new best (1, 1) is not 4 5 5
INFO:root:XX add new best (1, 1) is not 4 5 5
INFO:root:XX add new best (1, 1) is not 4 5 5
INFO:root:XX add new best (1, 1) is not 4 5 5
INFO:root:XX add new best (1, 1) is not 4 5 5
INFO:root:XX add new best (1, 1) is not 4 5 5
INFO:root:XX add new best (1, 1) is not 4 5 5
INFO:root:XX add new best (1, 1) is not 4 5 5
INFO:root:XX add new best (1, 1) is not 4 5 5
INFO:root:XX add new best (1, 1) is not 4 5 5
INFO:root:XX add new best (1, 1) is not 4 5 5
INFO:root:XX add new best (1, 1) is not 4 5 5
INFO:root:XX add new best (1, 1) is not 4 5 5
INFO:root:XX add new best (1, 1) is not 4 5 5
INFO:root:XX add new best (1, 1) is not 4 5 5
INFO:root:XX add new best (1, 1) is not 4 5 5
INFO:root:XX add new best (1, 1) is not 4 5 5
INFO:root:XX add new best (1, 1) is not 4 5 5
INFO:root:XX add new best (1, 1) is not 4 5 5
INFO:root:XX add new best (1, 1) is not 4 5 5
INFO:root:XX add new best (1, 1) is not 4 5 5
INFO:root:XX add new best (1, 1) is not 4 5 5
INFO:root:XX add new best (1, 1) is not 4 5 5
INFO:root:XX add new best (1, 1) is not 4 5 5
INFO:root:XX add new best (1, 1) is not 4 5 5
INFO:root:XX add new best (1, 1) is not 4 5 5
INFO:root:XX add new best (1, 1) is not 4 5 5
INFO:root:XX add new best (1, 1) is not 4 5 5
INFO:root:XX add new best (1, 1) is not 4 5 5
INFO:root:XX add new best (1, 1) is not 4 5 5
INFO:root:XX add new best (1, 1) is not 4 5 5
INFO:root:XX add new best (1, 1) is not 4 5 5
INFO:root:XX add new best (1, 1) is not 4 5 5
INFO:root:XX add new best (1, 1) is not 4 5 5
INFO:root:XX add new best (1, 1) is not 4 5 5
INFO:root:XX add new best (1, 1) is not 4 5 5
INFO:root:XX add new best (1, 1) is not 4 5 5
INFO:root:XX add new best (1, 1) is not 4 5 5
INFO:root:XX add new best (1, 1) is not 4 5 5
INFO:root:XX add new best (1, 1) is not 4 5 5
INFO:root:XX add new best (1, 1) is not 4 5 5
INFO:root:XX add new best (1, 1) is not 4 5 5
INFO:root:XX add new best (1, 1) is not 4 5 5
INFO:root:XX add new best (1, 1) is not 4 5 5
INFO:root:XX add new best (1, 1) is not 4 5 5
INFO:root:XX add new best (1, 1) is not 4 5 5
INFO:root:XX add new best (1, 1) is not 4 5 5
INFO:root:XX add new best (1, 1) is not 4 5 5
INFO:root:XX add new best (1, 1) is not 4 5 5
INFO:root:XX add new best (1, 1) is not 4 5 5
INFO:root:XX add new best (1, 1) is not 4 5 5
INFO:root:XX add new best (1, 1) is not 4 5 5
INFO:root:XX add new best (1, 1) is not 4 5 5
INFO:root:XX add new best (1, 1) is not 4 5 5
INFO:root:XX add new best (1, 1) is not 4 5 5
INFO:root:XX add new best (1, 1) is not 4 5 5
INFO:root:XX add new best (1, 1) is not 4 5 5
INFO:root:XX add new best (1, 1) is not 4 5 5
INFO:root:XX add new best (1, 1) is not 4 5 5
INFO:root:XX add new best (1, 1) is not 4 5 5
INFO:root:XX add new best (1, 1) is not 4 5 5
INFO:root:XX add new best (1, 1) is not 4 5 5
INFO:root:XX add new best (1, 1) is not 4 5 5
INFO:root:XX add new best (1, 1) is not 4 5 5
INFO:root:XX add new best (1, 1) is not 4 5 5
INFO:root:XX add new best (1, 1) is not 4 5 5
INFO:root:XX add new best (1, 1) is not 4 5 5
INFO:root:XX add new best (1, 1) is not 4 5 5
INFO:root:XX add new best (1, 1) is not 4 5 5
INFO:root:Trace: [(5, [(1, 1) is not 4])]
INFO:root:Trace Quality: [(5, 1)]
INFO:root:Trace Sorted: [(5, 1)]
INFO:root:Finished
INFO:root:Full Trace [(5, [(1, 1) is not 4])]
INFO:root:Trying {'minPrecheckMUS': True}
INFO:root:Starting Step 1
INFO:root:Current state [[[[1, 4, 5, 7, 9], [1, 4, 5, 7, 8, 9], [6], [1, 3, 4, 7], [1, 3, 7, 8, 9], [7, 9], [2], [4, 5, 7, 9], [5, 7, 9]], [[4, 7, 9], [3], [2], [5], [6, 7, 9], [1], [4, 6, 9], [8], [6, 7, 9]], [[1, 2, 4, 5, 7, 9], [1, 2, 4, 5, 7, 8, 9], [1, 7, 9], [1, 4, 6, 7], [1, 6, 7, 8, 9], [2, 5, 6, 7], [4, 6, 9], [4, 5, 6, 7, 9], [3]], [[1, 2, 5, 6, 7], [2, 4, 5, 7], [5, 7], [9], [6, 7], [2, 3, 5, 6, 7], [3, 4, 6], [1, 2, 3, 6, 7], [8]], [[2, 4, 6, 7, 9], [2, 4, 6, 7, 9], [8], [1, 3, 6, 7], [1, 2, 3, 6, 7], [2, 3, 6, 7], [5], [2, 3, 6, 7, 9], [2, 6, 7, 9]], [[1, 2, 5, 6, 7, 9], [1, 2, 5, 6, 7, 9], [1, 3, 5, 7, 9], [8], [2, 3, 5, 6, 9], [4], [3, 6, 9], [2, 3, 5, 6, 7, 9], [1, 2, 6, 7, 9]], [[8], [5, 6, 7, 9], [3, 5, 7, 9], [3, 6, 7], [4], [2, 3, 6, 9], [1], [2, 3, 5, 6, 7, 9], [2, 5, 6, 7, 9]], [[1, 3, 5, 6, 9], [1, 5, 6, 9], [3, 5, 9], [1, 2, 6], [2, 3, 5, 6, 9], [8], [7], [1, 2, 3, 5, 6, 9], [4]], [[1, 3, 5, 6, 7, 9], [1, 5, 6, 7, 9], [4], [1, 2, 6, 7], [2, 3, 5, 6, 9], [2, 3, 6, 9], [8], [1, 2, 3, 5, 6, 7, 9], [1, 2, 5, 6, 7, 9]]]]
INFO:root:Doing checkSmall1
INFO:root:Getting tiny MUSes, distance 1, for 1 puzlits, 1 repeats
INFO:root:Chunked 1 in [1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
INFO:root:Doing checkSmall2
INFO:root:Getting tiny MUSes, distance 2, for 1 puzlits, 1 repeats
INFO:root:Chunked 1 in [1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
INFO:root:Considering 100 * 1 jobs for minsize=3
INFO:root:Chunked 100 in [9, 9, 9, 9, 8, 8, 8, 8, 8, 8, 8, 8]
INFO:root:Considering 100 * 1 jobs for minsize=4
INFO:root:Chunked 100 in [9, 9, 9, 9, 8, 8, 8, 8, 8, 8, 8, 8]
INFO:root:XX found first (1, 1) is not 4 5
INFO:root:XX add new best (1, 1) is not 4 5 5
INFO:root:XX add new best (1, 1) is not 4 5 5
INFO:root:XX add new best (1, 1) is not 4 5 5
INFO:root:XX add new best (1, 1) is not 4 5 5
INFO:root:XX add new best (1, 1) is not 4 5 5
INFO:root:XX add new best (1, 1) is not 4 5 5
INFO:root:XX add new best (1, 1) is not 4 5 5
INFO:root:XX add new best (1, 1) is not 4 5 5
INFO:root:XX add new best (1, 1) is not 4 5 5
INFO:root:XX add new best (1, 1) is not 4 5 5
INFO:root:XX add new best (1, 1) is not 4 5 5
INFO:root:XX add new best (1, 1) is not 4 5 5
INFO:root:XX add new best (1, 1) is not 4 5 5
INFO:root:XX add new best (1, 1) is not 4 5 5
INFO:root:XX add new best (1, 1) is not 4 5 5
INFO:root:XX add new best (1, 1) is not 4 5 5
INFO:root:XX add new best (1, 1) is not 4 5 5
INFO:root:XX add new best (1, 1) is not 4 5 5
INFO:root:XX add new best (1, 1) is not 4 5 5
INFO:root:XX add new best (1, 1) is not 4 5 5
INFO:root:XX add new best (1, 1) is not 4 5 5
INFO:root:XX add new best (1, 1) is not 4 5 5
INFO:root:XX add new best (1, 1) is not 4 5 5
INFO:root:XX add new best (1, 1) is not 4 5 5
INFO:root:XX add new best (1, 1) is not 4 5 5
INFO:root:XX add new best (1, 1) is not 4 5 5
INFO:root:XX add new best (1, 1) is not 4 5 5
INFO:root:XX add new best (1, 1) is not 4 5 5
INFO:root:XX add new best (1, 1) is not 4 5 5
INFO:root:XX add new best (1, 1) is not 4 5 5
INFO:root:XX add new best (1, 1) is not 4 5 5
INFO:root:XX add new best (1, 1) is not 4 5 5
INFO:root:XX add new best (1, 1) is not 4 5 5
INFO:root:XX add new best (1, 1) is not 4 5 5
INFO:root:XX add new best (1, 1) is not 4 5 5
INFO:root:XX add new best (1, 1) is not 4 5 5
INFO:root:XX add new best (1, 1) is not 4 5 5
INFO:root:XX add new best (1, 1) is not 4 5 5
INFO:root:XX add new best (1, 1) is not 4 5 5
INFO:root:XX add new best (1, 1) is not 4 5 5
INFO:root:XX add new best (1, 1) is not 4 5 5
INFO:root:XX add new best (1, 1) is not 4 5 5
INFO:root:XX add new best (1, 1) is not 4 5 5
INFO:root:XX add new best (1, 1) is not 4 5 5
INFO:root:XX add new best (1, 1) is not 4 5 5
INFO:root:XX add new best (1, 1) is not 4 5 5
INFO:root:XX add new best (1, 1) is not 4 5 5
INFO:root:XX add new best (1, 1) is not 4 5 5
INFO:root:XX add new best (1, 1) is not 4 5 5
INFO:root:XX add new best (1, 1) is not 4 5 5
INFO:root:XX add new best (1, 1) is not 4 5 5
INFO:root:XX add new best (1, 1) is not 4 5 5
INFO:root:XX add new best (1, 1) is not 4 5 5
INFO:root:XX add new best (1, 1) is not 4 5 5
INFO:root:XX add new best (1, 1) is not 4 5 5
INFO:root:XX add new best (1, 1) is not 4 5 5
INFO:root:XX add new best (1, 1) is not 4 5 5
INFO:root:XX add new best (1, 1) is not 4 5 5
INFO:root:XX add new best (1, 1) is not 4 5 5
INFO:root:XX add new best (1, 1) is not 4 5 5
INFO:root:XX add new best (1, 1) is not 4 5 5
INFO:root:XX add new best (1, 1) is not 4 5 5
INFO:root:XX add new best (1, 1) is not 4 5 5
INFO:root:Considering 100 * 1 jobs for minsize=5
INFO:root:Chunked 100 in [9, 9, 9, 9, 8, 8, 8, 8, 8, 8, 8, 8]
INFO:root:XX add new best (1, 1) is not 4 5 5
INFO:root:XX add new best (1, 1) is not 4 5 5
INFO:root:XX add new best (1, 1) is not 4 5 5
INFO:root:XX add new best (1, 1) is not 4 5 5
INFO:root:XX add new best (1, 1) is not 4 5 5
INFO:root:XX add new best (1, 1) is not 4 5 5
INFO:root:XX add new best (1, 1) is not 4 5 5
INFO:root:XX add new best (1, 1) is not 4 5 5
INFO:root:XX add new best (1, 1) is not 4 5 5
INFO:root:XX add new best (1, 1) is not 4 5 5
INFO:root:XX add new best (1, 1) is not 4 5 5
INFO:root:XX add new best (1, 1) is not 4 5 5
INFO:root:XX add new best (1, 1) is not 4 5 5
INFO:root:XX add new best (1, 1) is not 4 5 5
INFO:root:XX add new best (1, 1) is not 4 5 5
INFO:root:XX add new best (1, 1) is not 4 5 5
INFO:root:XX add new best (1, 1) is not 4 5 5
INFO:root:XX add new best (1, 1) is not 4 5 5
INFO:root:XX add new best (1, 1) is not 4 5 5
INFO:root:XX add new best (1, 1) is not 4 5 5
INFO:root:XX add new best (1, 1) is not 4 5 5
INFO:root:XX add new best (1, 1) is not 4 5 5
INFO:root:XX add new best (1, 1) is not 4 5 5
INFO:root:XX add new best (1, 1) is not 4 5 5
INFO:root:XX add new best (1, 1) is not 4 5 5
INFO:root:XX add new best (1, 1) is not 4 5 5
INFO:root:XX add new best (1, 1) is not 4 5 5
INFO:root:XX add new best (1, 1) is not 4 5 5
INFO:root:XX add new best (1, 1) is not 4 5 5
INFO:root:XX add new best (1, 1) is not 4 5 5
INFO:root:XX add new best (1, 1) is not 4 5 5
INFO:root:XX add new best (1, 1) is not 4 5 5
INFO:root:XX add new best (1, 1) is not 4 5 5
INFO:root:XX add new best (1, 1) is not 4 5 5
INFO:root:XX add new best (1, 1) is not 4 5 5
INFO:root:XX add new best (1, 1) is not 4 5 5
INFO:root:XX add new best (1, 1) is not 4 5 5
INFO:root:XX add new best (1, 1) is not 4 5 5
INFO:root:XX add new best (1, 1) is not 4 5 5
INFO:root:XX add new best (1, 1) is not 4 5 5
INFO:root:XX add new best (1, 1) is not 4 5 5
INFO:root:XX add new best (1, 1) is not 4 5 5
INFO:root:XX add new best (1, 1) is not 4 5 5
INFO:root:XX add new best (1, 1) is not 4 5 5
INFO:root:XX add new best (1, 1) is not 4 5 5
INFO:root:XX add new best (1, 1) is not 4 5 5
INFO:root:XX add new best (1, 1) is not 4 5 5
INFO:root:XX add new best (1, 1) is not 4 5 5
INFO:root:XX add new best (1, 1) is not 4 5 5
INFO:root:XX add new best (1, 1) is not 4 5 5
INFO:root:XX add new best (1, 1) is not 4 5 5
INFO:root:XX add new best (1, 1) is not 4 5 5
INFO:root:XX add new best (1, 1) is not 4 5 5
INFO:root:XX add new best (1, 1) is not 4 5 5
INFO:root:XX add new best (1, 1) is not 4 5 5
INFO:root:XX add new best (1, 1) is not 4 5 5
INFO:root:XX add new best (1, 1) is not 4 5 5
INFO:root:XX add new best (1, 1) is not 4 5 5
INFO:root:XX add new best (1, 1) is not 4 5 5
INFO:root:XX add new best (1, 1) is not 4 5 5
INFO:root:XX add new best (1, 1) is not 4 5 5
INFO:root:Trace: [(5, [(1, 1) is not 4])]
INFO:root:Trace Quality: [(5, 1)]
INFO:root:Trace Sorted: [(5, 1)]
INFO:root:Finished
INFO:root:Full Trace [(5, [(1, 1) is not 4])]
INFO:root:Trying {'gallopingMUSes': True}
INFO:root:Starting Step 1
INFO:root:Current state [[[[1, 4, 5, 7, 9], [1, 4, 5, 7, 8, 9], [6], [1, 3, 4, 7], [1, 3, 7, 8, 9], [7, 9], [2], [4, 5, 7, 9], [5, 7, 9]], [[4, 7, 9], [3], [2], [5], [6, 7, 9], [1], [4, 6, 9], [8], [6, 7, 9]], [[1, 2, 4, 5, 7, 9], [1, 2, 4, 5, 7, 8, 9], [1, 7, 9], [1, 4, 6, 7], [1, 6, 7, 8, 9], [2, 5, 6, 7], [4, 6, 9], [4, 5, 6, 7, 9], [3]], [[1, 2, 5, 6, 7], [2, 4, 5, 7], [5, 7], [9], [6, 7], [2, 3, 5, 6, 7], [3, 4, 6], [1, 2, 3, 6, 7], [8]], [[2, 4, 6, 7, 9], [2, 4, 6, 7, 9], [8], [1, 3, 6, 7], [1, 2, 3, 6, 7], [2, 3, 6, 7], [5], [2, 3, 6, 7, 9], [2, 6, 7, 9]], [[1, 2, 5, 6, 7, 9], [1, 2, 5, 6, 7, 9], [1, 3, 5, 7, 9], [8], [2, 3, 5, 6, 9], [4], [3, 6, 9], [2, 3, 5, 6, 7, 9], [1, 2, 6, 7, 9]], [[8], [5, 6, 7, 9], [3, 5, 7, 9], [3, 6, 7], [4], [2, 3, 6, 9], [1], [2, 3, 5, 6, 7, 9], [2, 5, 6, 7, 9]], [[1, 3, 5, 6, 9], [1, 5, 6, 9], [3, 5, 9], [1, 2, 6], [2, 3, 5, 6, 9], [8], [7], [1, 2, 3, 5, 6, 9], [4]], [[1, 3, 5, 6, 7, 9], [1, 5, 6, 7, 9], [4], [1, 2, 6, 7], [2, 3, 5, 6, 9], [2, 3, 6, 9], [8], [1, 2, 3, 5, 6, 7, 9], [1, 2, 5, 6, 7, 9]]]]
INFO:root:Doing checkSmall1
INFO:root:Getting tiny MUSes, distance 1, for 1 puzlits, 1 repeats
INFO:root:Chunked 1 in [1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
INFO:root:Doing checkSmall2
INFO:root:Getting tiny MUSes, distance 2, for 1 puzlits, 1 repeats
INFO:root:Chunked 1 in [1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
INFO:root:Considering 100 * 1 jobs for minsize=3
INFO:root:Chunked 100 in [9, 9, 9, 9, 8, 8, 8, 8, 8, 8, 8, 8]
INFO:root:Considering 100 * 1 jobs for minsize=4
INFO:root:Chunked 100 in [9, 9, 9, 9, 8, 8, 8, 8, 8, 8, 8, 8]
INFO:root:XX found first (1, 1) is not 4 5
INFO:root:XX add new best (1, 1) is not 4 5 5
INFO:root:XX add new best (1, 1) is not 4 5 5
INFO:root:XX add new best (1, 1) is not 4 5 5
INFO:root:XX add new best (1, 1) is not 4 5 5
INFO:root:XX add new best (1, 1) is not 4 5 5
INFO:root:XX add new best (1, 1) is not 4 5 5
INFO:root:XX add new best (1, 1) is not 4 5 5
INFO:root:XX add new best (1, 1) is not 4 5 5
INFO:root:XX add new best (1, 1) is not 4 5 5
INFO:root:XX add new best (1, 1) is not 4 5 5
INFO:root:XX add new best (1, 1) is not 4 5 5
INFO:root:XX add new best (1, 1) is not 4 5 5
INFO:root:XX add new best (1, 1) is not 4 5 5
INFO:root:XX add new best (1, 1) is not 4 5 5
INFO:root:XX add new best (1, 1) is not 4 5 5
INFO:root:XX add new best (1, 1) is not 4 5 5
INFO:root:XX add new best (1, 1) is not 4 5 5
INFO:root:XX add new best (1, 1) is not 4 5 5
INFO:root:XX add new best (1, 1) is not 4 5 5
INFO:root:XX add new best (1, 1) is not 4 5 5
INFO:root:XX add new best (1, 1) is not 4 5 5
INFO:root:XX add new best (1, 1) is not 4 5 5
INFO:root:XX add new best (1, 1) is not 4 5 5
INFO:root:XX add new best (1, 1) is not 4 5 5
INFO:root:XX add new best (1, 1) is not 4 5 5
INFO:root:XX add new best (1, 1) is not 4 5 5
INFO:root:XX add new best (1, 1) is not 4 5 5
INFO:root:XX add new best (1, 1) is not 4 5 5
INFO:root:XX add new best (1, 1) is not 4 5 5
INFO:root:XX add new best (1, 1) is not 4 5 5
INFO:root:XX add new best (1, 1) is not 4 5 5
INFO:root:XX add new best (1, 1) is not 4 5 5
INFO:root:XX add new best (1, 1) is not 4 5 5
INFO:root:XX add new best (1, 1) is not 4 5 5
INFO:root:XX add new best (1, 1) is not 4 5 5
INFO:root:XX add new best (1, 1) is not 4 5 5
INFO:root:XX add new best (1, 1) is not 4 5 5
INFO:root:XX add new best (1, 1) is not 4 5 5
INFO:root:XX add new best (1, 1) is not 4 5 5
INFO:root:XX add new best (1, 1) is not 4 5 5
INFO:root:XX add new best (1, 1) is not 4 5 5
INFO:root:XX add new best (1, 1) is not 4 5 5
INFO:root:XX add new best (1, 1) is not 4 5 5
INFO:root:XX add new best (1, 1) is not 4 5 5
INFO:root:XX add new best (1, 1) is not 4 5 5
INFO:root:XX add new best (1, 1) is not 4 5 5
INFO:root:XX add new best (1, 1) is not 4 5 5
INFO:root:XX add new best (1, 1) is not 4 5 5
INFO:root:XX add new best (1, 1) is not 4 5 5
INFO:root:XX add new best (1, 1) is not 4 5 5
INFO:root:XX add new best (1, 1) is not 4 5 5
INFO:root:XX add new best (1, 1) is not 4 5 5
INFO:root:XX add new best (1, 1) is not 4 5 5
INFO:root:XX add new best (1, 1) is not 4 5 5
INFO:root:Considering 100 * 1 jobs for minsize=5
INFO:root:Chunked 100 in [9, 9, 9, 9, 8, 8, 8, 8, 8, 8, 8, 8]
INFO:root:XX add new best (1, 1) is not 4 5 5
INFO:root:XX add new best (1, 1) is not 4 5 5
INFO:root:XX add new best (1, 1) is not 4 5 5
INFO:root:XX add new best (1, 1) is not 4 5 5
INFO:root:XX add new best (1, 1) is not 4 5 5
INFO:root:XX add new best (1, 1) is not 4 5 5
INFO:root:XX add new best (1, 1) is not 4 5 5
INFO:root:XX add new best (1, 1) is not 4 5 5
INFO:root:XX add new best (1, 1) is not 4 5 5
INFO:root:XX add new best (1, 1) is not 4 5 5
INFO:root:XX add new best (1, 1) is not 4 5 5
INFO:root:XX add new best (1, 1) is not 4 5 5
INFO:root:XX add new best (1, 1) is not 4 5 5
INFO:root:XX add new best (1, 1) is not 4 5 5
INFO:root:XX add new best (1, 1) is not 4 5 5
INFO:root:XX add new best (1, 1) is not 4 5 5
INFO:root:XX add new best (1, 1) is not 4 5 5
INFO:root:XX add new best (1, 1) is not 4 5 5
INFO:root:XX add new best (1, 1) is not 4 5 5
INFO:root:XX add new best (1, 1) is not 4 5 5
INFO:root:XX add new best (1, 1) is not 4 5 5
INFO:root:XX add new best (1, 1) is not 4 5 5
INFO:root:XX add new best (1, 1) is not 4 5 5
INFO:root:XX add new best (1, 1) is not 4 5 5
INFO:root:XX add new best (1, 1) is not 4 5 5
INFO:root:XX add new best (1, 1) is not 4 5 5
INFO:root:XX add new best (1, 1) is not 4 5 5
INFO:root:XX add new best (1, 1) is not 4 5 5
INFO:root:XX add new best (1, 1) is not 4 5 5
INFO:root:XX add new best (1, 1) is not 4 5 5
INFO:root:XX add new best (1, 1) is not 4 5 5
INFO:root:XX add new best (1, 1) is not 4 5 5
INFO:root:XX add new best (1, 1) is not 4 5 5
INFO:root:XX add new best (1, 1) is not 4 5 5
INFO:root:XX add new best (1, 1) is not 4 5 5
INFO:root:XX add new best (1, 1) is not 4 5 5
INFO:root:XX add new best (1, 1) is not 4 5 5
INFO:root:XX add new best (1, 1) is not 4 5 5
INFO:root:XX add new best (1, 1) is not 4 5 5
INFO:root:XX add new best (1, 1) is not 4 5 5
INFO:root:XX add new best (1, 1) is not 4 5 5
INFO:root:XX add new best (1, 1) is not 4 5 5
INFO:root:XX add new best (1, 1) is not 4 5 5
INFO:root:XX add new best (1, 1) is not 4 5 5
INFO:root:XX add new best (1, 1) is not 4 5 5
INFO:root:XX add new best (1, 1) is not 4 5 5
INFO:root:XX add new best (1, 1) is not 4 5 5
INFO:root:XX add new best (1, 1) is not 4 5 5
INFO:root:XX add new best (1, 1) is not 4 5 5
INFO:root:XX add new best (1, 1) is not 4 5 5
INFO:root:XX add new best (1, 1) is not 4 5 5
INFO:root:XX add new best (1, 1) is not 4 5 5
INFO:root:XX add new best (1, 1) is not 4 5 5
INFO:root:XX add new best (1, 1) is not 4 5 5
INFO:root:Trace: [(5, [(1, 1) is not 4])]
INFO:root:Trace Quality: [(5, 1)]
INFO:root:Trace Sorted: [(5, 1)]
INFO:root:Finished
INFO:root:Full Trace [(5, [(1, 1) is not 4])]
INFO:root:Trying {'minPrecheckStepsMUS': True}
INFO:root:Starting Step 1
INFO:root:Current state [[[[1, 4, 5, 7, 9], [1, 4, 5, 7, 8, 9], [6], [1, 3, 4, 7], [1, 3, 7, 8, 9], [7, 9], [2], [4, 5, 7, 9], [5, 7, 9]], [[4, 7, 9], [3], [2], [5], [6, 7, 9], [1], [4, 6, 9], [8], [6, 7, 9]], [[1, 2, 4, 5, 7, 9], [1, 2, 4, 5, 7, 8, 9], [1, 7, 9], [1, 4, 6, 7], [1, 6, 7, 8, 9], [2, 5, 6, 7], [4, 6, 9], [4, 5, 6, 7, 9], [3]], [[1, 2, 5, 6, 7], [2, 4, 5, 7], [5, 7], [9], [6, 7], [2, 3, 5, 6, 7], [3, 4, 6], [1, 2, 3, 6, 7], [8]], [[2, 4, 6, 7, 9], [2, 4, 6, 7, 9], [8], [1, 3, 6, 7], [1, 2, 3, 6, 7], [2, 3, 6, 7], [5], [2, 3, 6, 7, 9], [2, 6, 7, 9]], [[1, 2, 5, 6, 7, 9], [1, 2, 5, 6, 7, 9], [1, 3, 5, 7, 9], [8], [2, 3, 5, 6, 9], [4], [3, 6, 9], [2, 3, 5, 6, 7, 9], [1, 2, 6, 7, 9]], [[8], [5, 6, 7, 9], [3, 5, 7, 9], [3, 6, 7], [4], [2, 3, 6, 9], [1], [2, 3, 5, 6, 7, 9], [2, 5, 6, 7, 9]], [[1, 3, 5, 6, 9], [1, 5, 6, 9], [3, 5, 9], [1, 2, 6], [2, 3, 5, 6, 9], [8], [7], [1, 2, 3, 5, 6, 9], [4]], [[1, 3, 5, 6, 7, 9], [1, 5, 6, 7, 9], [4], [1, 2, 6, 7], [2, 3, 5, 6, 9], [2, 3, 6, 9], [8], [1, 2, 3, 5, 6, 7, 9], [1, 2, 5, 6, 7, 9]]]]
INFO:root:Doing checkSmall1
INFO:root:Getting tiny MUSes, distance 1, for 1 puzlits, 1 repeats
INFO:root:Chunked 1 in [1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
INFO:root:Doing checkSmall2
INFO:root:Getting tiny MUSes, distance 2, for 1 puzlits, 1 repeats
INFO:root:Chunked 1 in [1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
INFO:root:Considering 100 * 1 jobs for minsize=3
INFO:root:Chunked 100 in [9, 9, 9, 9, 8, 8, 8, 8, 8, 8, 8, 8]
INFO:root:Considering 100 * 1 jobs for minsize=4
INFO:root:Chunked 100 in [9, 9, 9, 9, 8, 8, 8, 8, 8, 8, 8, 8]
INFO:root:XX found first (1, 1) is not 4 5
INFO:root:XX add new best (1, 1) is not 4 5 5
INFO:root:XX add new best (1, 1) is not 4 5 5
INFO:root:XX add new best (1, 1) is not 4 5 5
INFO:root:XX add new best (1, 1) is not 4 5 5
INFO:root:XX add new best (1, 1) is not 4 5 5
INFO:root:XX add new best (1, 1) is not 4 5 5
INFO:root:XX add new best (1, 1) is not 4 5 5
INFO:root:XX add new best (1, 1) is not 4 5 5
INFO:root:XX add new best (1, 1) is not 4 5 5
INFO:root:XX add new best (1, 1) is not 4 5 5
INFO:root:XX add new best (1, 1) is not 4 5 5
INFO:root:XX add new best (1, 1) is not 4 5 5
INFO:root:XX add new best (1, 1) is not 4 5 5
INFO:root:XX add new best (1, 1) is not 4 5 5
INFO:root:XX add new best (1, 1) is not 4 5 5
INFO:root:XX add new best (1, 1) is not 4 5 5
INFO:root:XX add new best (1, 1) is not 4 5 5
INFO:root:XX add new best (1, 1) is not 4 5 5
INFO:root:XX add new best (1, 1) is not 4 5 5
INFO:root:XX add new best (1, 1) is not 4 5 5
INFO:root:XX add new best (1, 1) is not 4 5 5
INFO:root:XX add new best (1, 1) is not 4 5 5
INFO:root:XX add new best (1, 1) is not 4 5 5
INFO:root:XX add new best (1, 1) is not 4 5 5
INFO:root:XX add new best (1, 1) is not 4 5 5
INFO:root:XX add new best (1, 1) is not 4 5 5
INFO:root:XX add new best (1, 1) is not 4 5 5
INFO:root:XX add new best (1, 1) is not 4 5 5
INFO:root:XX add new best (1, 1) is not 4 5 5
INFO:root:XX add new best (1, 1) is not 4 5 5
INFO:root:XX add new best (1, 1) is not 4 5 5
INFO:root:XX add new best (1, 1) is not 4 5 5
INFO:root:XX add new best (1, 1) is not 4 5 5
INFO:root:XX add new best (1, 1) is not 4 5 5
INFO:root:XX add new best (1, 1) is not 4 5 5
INFO:root:XX add new best (1, 1) is not 4 5 5
INFO:root:XX add new best (1, 1) is not 4 5 5
INFO:root:XX add new best (1, 1) is not 4 5 5
INFO:root:XX add new best (1, 1) is not 4 5 5
INFO:root:XX add new best (1, 1) is not 4 5 5
INFO:root:XX add new best (1, 1) is not 4 5 5
INFO:root:XX add new best (1, 1) is not 4 5 5
INFO:root:XX add new best (1, 1) is not 4 5 5
INFO:root:XX add new best (1, 1) is not 4 5 5
INFO:root:XX add new best (1, 1) is not 4 5 5
INFO:root:XX add new best (1, 1) is not 4 5 5
INFO:root:XX add new best (1, 1) is not 4 5 5
INFO:root:XX add new best (1, 1) is not 4 5 5
INFO:root:XX add new best (1, 1) is not 4 5 5
INFO:root:XX add new best (1, 1) is not 4 5 5
INFO:root:XX add new best (1, 1) is not 4 5 5
INFO:root:XX add new best (1, 1) is not 4 5 5
INFO:root:XX add new best (1, 1) is not 4 5 5
INFO:root:XX add new best (1, 1) is not 4 5 5
INFO:root:XX add new best (1, 1) is not 4 5 5
INFO:root:XX add new best (1, 1) is not 4 5 5
INFO:root:XX add new best (1, 1) is not 4 5 5
INFO:root:XX add new best (1, 1) is not 4 5 5
INFO:root:XX add new best (1, 1) is not 4 5 5
INFO:root:XX add new best (1, 1) is not 4 5 5
INFO:root:XX add new best (1, 1) is not 4 5 5
INFO:root:XX add new best (1, 1) is not 4 5 5
INFO:root:XX add new best (1, 1) is not 4 5 5
INFO:root:Considering 100 * 1 jobs for minsize=5
INFO:root:Chunked 100 in [9, 9, 9, 9, 8, 8, 8, 8, 8, 8, 8, 8]
INFO:root:XX add new best (1, 1) is not 4 5 5
INFO:root:XX add new best (1, 1) is not 4 5 5
INFO:root:XX add new best (1, 1) is not 4 5 5
INFO:root:XX add new best (1, 1) is not 4 5 5
INFO:root:XX add new best (1, 1) is not 4 5 5
INFO:root:XX add new best (1, 1) is not 4 5 5
INFO:root:XX add new best (1, 1) is not 4 5 5
INFO:root:XX add new best (1, 1) is not 4 5 5
INFO:root:XX add new best (1, 1) is not 4 5 5
INFO:root:XX add new best (1, 1) is not 4 5 5
INFO:root:XX add new best (1, 1) is not 4 5 5
INFO:root:XX add new best (1, 1) is not 4 5 5
INFO:root:XX add new best (1, 1) is not 4 5 5
INFO:root:XX add new best (1, 1) is not 4 5 5
INFO:root:XX add new best (1, 1) is not 4 5 5
INFO:root:XX add new best (1, 1) is not 4 5 5
INFO:root:XX add new best (1, 1) is not 4 5 5
INFO:root:XX add new best (1, 1) is not 4 5 5
INFO:root:XX add new best (1, 1) is not 4 5 5
INFO:root:XX add new best (1, 1) is not 4 5 5
INFO:root:XX add new best (1, 1) is not 4 5 5
INFO:root:XX add new best (1, 1) is not 4 5 5
INFO:root:XX add new best (1, 1) is not 4 5 5
INFO:root:XX add new best (1, 1) is not 4 5 5
INFO:root:XX add new best (1, 1) is not 4 5 5
INFO:root:XX add new best (1, 1) is not 4 5 5
INFO:root:XX add new best (1, 1) is not 4 5 5
INFO:root:XX add new best (1, 1) is not 4 5 5
INFO:root:XX add new best (1, 1) is not 4 5 5
INFO:root:XX add new best (1, 1) is not 4 5 5
INFO:root:XX add new best (1, 1) is not 4 5 5
INFO:root:XX add new best (1, 1) is not 4 5 5
INFO:root:XX add new best (1, 1) is not 4 5 5
INFO:root:XX add new best (1, 1) is not 4 5 5
INFO:root:XX add new best (1, 1) is not 4 5 5
INFO:root:XX add new best (1, 1) is not 4 5 5
INFO:root:XX add new best (1, 1) is not 4 5 5
INFO:root:XX add new best (1, 1) is not 4 5 5
INFO:root:XX add new best (1, 1) is not 4 5 5
INFO:root:XX add new best (1, 1) is not 4 5 5
INFO:root:XX add new best (1, 1) is not 4 5 5
INFO:root:XX add new best (1, 1) is not 4 5 5
INFO:root:XX add new best (1, 1) is not 4 5 5
INFO:root:XX add new best (1, 1) is not 4 5 5
INFO:root:XX add new best (1, 1) is not 4 5 5
INFO:root:XX add new best (1, 1) is not 4 5 5
INFO:root:XX add new best (1, 1) is not 4 5 5
INFO:root:XX add new best (1, 1) is not 4 5 5
INFO:root:XX add new best (1, 1) is not 4 5 5
INFO:root:XX add new best (1, 1) is not 4 5 5
INFO:root:XX add new best (1, 1) is not 4 5 5
INFO:root:XX add new best (1, 1) is not 4 5 5
INFO:root:XX add new best (1, 1) is not 4 5 5
INFO:root:XX add new best (1, 1) is not 4 5 5
INFO:root:XX add new best (1, 1) is not 4 5 5
INFO:root:XX add new best (1, 1) is not 4 5 5
INFO:root:XX add new best (1, 1) is not 4 5 5
INFO:root:XX add new best (1, 1) is not 4 5 5
INFO:root:XX add new best (1, 1) is not 4 5 5
INFO:root:XX add new best (1, 1) is not 4 5 5
INFO:root:XX add new best (1, 1) is not 4 5 5
INFO:root:Trace: [(5, [(1, 1) is not 4])]
INFO:root:Trace Quality: [(5, 1)]
INFO:root:Trace Sorted: [(5, 1)]
INFO:root:Finished
INFO:root:Full Trace [(5, [(1, 1) is not 4])]
INFO:root:Trying {'gallopingMUSes': True, 'minPrecheckMUS': True}
INFO:root:Starting Step 1
INFO:root:Current state [[[[1, 4, 5, 7, 9], [1, 4, 5, 7, 8, 9], [6], [1, 3, 4, 7], [1, 3, 7, 8, 9], [7, 9], [2], [4, 5, 7, 9], [5, 7, 9]], [[4, 7, 9], [3], [2], [5], [6, 7, 9], [1], [4, 6, 9], [8], [6, 7, 9]], [[1, 2, 4, 5, 7, 9], [1, 2, 4, 5, 7, 8, 9], [1, 7, 9], [1, 4, 6, 7], [1, 6, 7, 8, 9], [2, 5, 6, 7], [4, 6, 9], [4, 5, 6, 7, 9], [3]], [[1, 2, 5, 6, 7], [2, 4, 5, 7], [5, 7], [9], [6, 7], [2, 3, 5, 6, 7], [3, 4, 6], [1, 2, 3, 6, 7], [8]], [[2, 4, 6, 7, 9], [2, 4, 6, 7, 9], [8], [1, 3, 6, 7], [1, 2, 3, 6, 7], [2, 3, 6, 7], [5], [2, 3, 6, 7, 9], [2, 6, 7, 9]], [[1, 2, 5, 6, 7, 9], [1, 2, 5, 6, 7, 9], [1, 3, 5, 7, 9], [8], [2, 3, 5, 6, 9], [4], [3, 6, 9], [2, 3, 5, 6, 7, 9], [1, 2, 6, 7, 9]], [[8], [5, 6, 7, 9], [3, 5, 7, 9], [3, 6, 7], [4], [2, 3, 6, 9], [1], [2, 3, 5, 6, 7, 9], [2, 5, 6, 7, 9]], [[1, 3, 5, 6, 9], [1, 5, 6, 9], [3, 5, 9], [1, 2, 6], [2, 3, 5, 6, 9], [8], [7], [1, 2, 3, 5, 6, 9], [4]], [[1, 3, 5, 6, 7, 9], [1, 5, 6, 7, 9], [4], [1, 2, 6, 7], [2, 3, 5, 6, 9], [2, 3, 6, 9], [8], [1, 2, 3, 5, 6, 7, 9], [1, 2, 5, 6, 7, 9]]]]
INFO:root:Doing checkSmall1
INFO:root:Getting tiny MUSes, distance 1, for 1 puzlits, 1 repeats
INFO:root:Chunked 1 in [1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
INFO:root:Doing checkSmall2
INFO:root:Getting tiny MUSes, distance 2, for 1 puzlits, 1 repeats
INFO:root:Chunked 1 in [1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
INFO:root:Considering 100 * 1 jobs for minsize=3
INFO:root:Chunked 100 in [9, 9, 9, 9, 8, 8, 8, 8, 8, 8, 8, 8]
INFO:root:Considering 100 * 1 jobs for minsize=4
INFO:root:Chunked 100 in [9, 9, 9, 9, 8, 8, 8, 8, 8, 8, 8, 8]
INFO:root:XX found first (1, 1) is not 4 5
INFO:root:XX add new best (1, 1) is not 4 5 5
INFO:root:XX add new best (1, 1) is not 4 5 5
INFO:root:XX add new best (1, 1) is not 4 5 5
INFO:root:XX add new best (1, 1) is not 4 5 5
INFO:root:XX add new best (1, 1) is not 4 5 5
INFO:root:XX add new best (1, 1) is not 4 5 5
INFO:root:XX add new best (1, 1) is not 4 5 5
INFO:root:XX add new best (1, 1) is not 4 5 5
INFO:root:XX add new best (1, 1) is not 4 5 5
INFO:root:XX add new best (1, 1) is not 4 5 5
INFO:root:XX add new best (1, 1) is not 4 5 5
INFO:root:XX add new best (1, 1) is not 4 5 5
INFO:root:XX add new best (1, 1) is not 4 5 5
INFO:root:XX add new best (1, 1) is not 4 5 5
INFO:root:XX add new best (1, 1) is not 4 5 5
INFO:root:XX add new best (1, 1) is not 4 5 5
INFO:root:XX add new best (1, 1) is not 4 5 5
INFO:root:XX add new best (1, 1) is not 4 5 5
INFO:root:XX add new best (1, 1) is not 4 5 5
INFO:root:XX add new best (1, 1) is not 4 5 5
INFO:root:XX add new best (1, 1) is not 4 5 5
INFO:root:XX add new best (1, 1) is not 4 5 5
INFO:root:XX add new best (1, 1) is not 4 5 5
INFO:root:XX add new best (1, 1) is not 4 5 5
INFO:root:XX add new best (1, 1) is not 4 5 5
INFO:root:XX add new best (1, 1) is not 4 5 5
INFO:root:XX add new best (1, 1) is not 4 5 5
INFO:root:XX add new best (1, 1) is not 4 5 5
INFO:root:XX add new best (1, 1) is not 4 5 5
INFO:root:XX add new best (1, 1) is not 4 5 5
INFO:root:XX add new best (1, 1) is not 4 5 5
INFO:root:XX add new best (1, 1) is not 4 5 5
INFO:root:XX add new best (1, 1) is not 4 5 5
INFO:root:XX add new best (1, 1) is not 4 5 5
INFO:root:XX add new best (1, 1) is not 4 5 5
INFO:root:XX add new best (1, 1) is not 4 5 5
INFO:root:XX add new best (1, 1) is not 4 5 5
INFO:root:XX add new best (1, 1) is not 4 5 5
INFO:root:XX add new best (1, 1) is not 4 5 5
INFO:root:XX add new best (1, 1) is not 4 5 5
INFO:root:XX add new best (1, 1) is not 4 5 5
INFO:root:XX add new best (1, 1) is not 4 5 5
INFO:root:XX add new best (1, 1) is not 4 5 5
INFO:root:XX add new best (1, 1) is not 4 5 5
INFO:root:XX add new best (1, 1) is not 4 5 5
INFO:root:XX add new best (1, 1) is not 4 5 5
INFO:root:XX add new best (1, 1) is not 4 5 5
INFO:root:XX add new best (1, 1) is not 4 5 5
INFO:root:XX add new best (1, 1) is not 4 5 5
INFO:root:XX add new best (1, 1) is not 4 5 5
INFO:root:XX add new best (1, 1) is not 4 5 5
INFO:root:XX add new best (1, 1) is not 4 5 5
INFO:root:XX add new best (1, 1) is not 4 5 5
INFO:root:XX add new best (1, 1) is not 4 5 5
INFO:root:XX add new best (1, 1) is not 4 5 5
INFO:root:XX add new best (1, 1) is not 4 5 5
INFO:root:XX add new best (1, 1) is not 4 5 5
INFO:root:XX add new best (1, 1) is not 4 5 5
INFO:root:XX add new best (1, 1) is not 4 5 5
INFO:root:XX add new best (1, 1) is not 4 5 5
INFO:root:XX add new best (1, 1) is not 4 5 5
INFO:root:XX add new best (1, 1) is not 4 5 5
INFO:root:XX add new best (1, 1) is not 4 5 5
INFO:root:Considering 100 * 1 jobs for minsize=5
INFO:root:Chunked 100 in [9, 9, 9, 9, 8, 8, 8, 8, 8, 8, 8, 8]
INFO:root:XX add new best (1, 1) is not 4 5 5
INFO:root:XX add new best (1, 1) is not 4 5 5
INFO:root:XX add new best (1, 1) is not 4 5 5
INFO:root:XX add new best (1, 1) is not 4 5 5
INFO:root:XX add new best (1, 1) is not 4 5 5
INFO:root:XX add new best (1, 1) is not 4 5 5
INFO:root:XX add new best (1, 1) is not 4 5 5
INFO:root:XX add new best (1, 1) is not 4 5 5
INFO:root:XX add new best (1, 1) is not 4 5 5
INFO:root:XX add new best (1, 1) is not 4 5 5
INFO:root:XX add new best (1, 1) is not 4 5 5
INFO:root:XX add new best (1, 1) is not 4 5 5
INFO:root:XX add new best (1, 1) is not 4 5 5
INFO:root:XX add new best (1, 1) is not 4 5 5
INFO:root:XX add new best (1, 1) is not 4 5 5
INFO:root:XX add new best (1, 1) is not 4 5 5
INFO:root:XX add new best (1, 1) is not 4 5 5
INFO:root:XX add new best (1, 1) is not 4 5 5
INFO:root:XX add new best (1, 1) is not 4 5 5
INFO:root:XX add new best (1, 1) is not 4 5 5
INFO:root:XX add new best (1, 1) is not 4 5 5
INFO:root:XX add new best (1, 1) is not 4 5 5
INFO:root:XX add new best (1, 1) is not 4 5 5
INFO:root:XX add new best (1, 1) is not 4 5 5
INFO:root:XX add new best (1, 1) is not 4 5 5
INFO:root:XX add new best (1, 1) is not 4 5 5
INFO:root:XX add new best (1, 1) is not 4 5 5
INFO:root:XX add new best (1, 1) is not 4 5 5
INFO:root:XX add new best (1, 1) is not 4 5 5
INFO:root:XX add new best (1, 1) is not 4 5 5
INFO:root:XX add new best (1, 1) is not 4 5 5
INFO:root:XX add new best (1, 1) is not 4 5 5
INFO:root:XX add new best (1, 1) is not 4 5 5
INFO:root:XX add new best (1, 1) is not 4 5 5
INFO:root:XX add new best (1, 1) is not 4 5 5
INFO:root:XX add new best (1, 1) is not 4 5 5
INFO:root:XX add new best (1, 1) is not 4 5 5
INFO:root:XX add new best (1, 1) is not 4 5 5
INFO:root:XX add new best (1, 1) is not 4 5 5
INFO:root:XX add new best (1, 1) is not 4 5 5
INFO:root:XX add new best (1, 1) is not 4 5 5
INFO:root:XX add new best (1, 1) is not 4 5 5
INFO:root:XX add new best (1, 1) is not 4 5 5
INFO:root:XX add new best (1, 1) is not 4 5 5
INFO:root:XX add new best (1, 1) is not 4 5 5
INFO:root:XX add new best (1, 1) is not 4 5 5
INFO:root:XX add new best (1, 1) is not 4 5 5
INFO:root:XX add new best (1, 1) is not 4 5 5
INFO:root:XX add new best (1, 1) is not 4 5 5
INFO:root:XX add new best (1, 1) is not 4 5 5
INFO:root:XX add new best (1, 1) is not 4 5 5
INFO:root:XX add new best (1, 1) is not 4 5 5
INFO:root:XX add new best (1, 1) is not 4 5 5
INFO:root:XX add new best (1, 1) is not 4 5 5
INFO:root:XX add new best (1, 1) is not 4 5 5
INFO:root:XX add new best (1, 1) is not 4 5 5
INFO:root:XX add new best (1, 1) is not 4 5 5
INFO:root:XX add new best (1, 1) is not 4 5 5
INFO:root:XX add new best (1, 1) is not 4 5 5
INFO:root:XX add new best (1, 1) is not 4 5 5
INFO:root:XX add new best (1, 1) is not 4 5 5
INFO:root:Trace: [(5, [(1, 1) is not 4])]
INFO:root:Trace Quality: [(5, 1)]
INFO:root:Trace Sorted: [(5, 1)]
INFO:root:Finished
INFO:root:Full Trace [(5, [(1, 1) is not 4])]
INFO:root:Trying {}
INFO:root:Starting Step 1
INFO:root:Current state [[[[2], [1], [4], [8], [3, 5, 9], [3, 5], [6], [3, 9], [7]], [[3, 7, 9], [3, 6], [2, 5], [3, 6, 7], [1, 2, 3, 5, 8, 9], [1, 2, 3, 8, 9], [1, 3, 5, 8], [4], [1, 3, 5, 8]], [[5], [7], [3], [4], [1, 6, 8, 9], [1, 6, 8, 9], [1, 8], [1, 8, 9], [2]], [[3, 9], [5, 6, 9], [5, 6], [1, 3, 5], [1, 3, 5, 8, 9], [4], [7], [2], [1, 3, 5, 8]], [[4], [2, 5, 9], [5, 7, 8], [1, 3, 5, 7], [1, 2, 3, 7, 8, 9], [1, 2, 3, 5, 8, 9], [1, 2, 3, 5, 8], [1, 3, 7, 8], [6]], [[1, 8], [3, 4, 5, 8], [9], [2], [1, 3, 5, 6, 7, 8], [1, 3, 5, 6, 8], [1, 3, 5, 8], [1, 3, 7, 8], [1, 3, 4, 8]], [[1, 8], [2, 3, 5, 8], [5, 6, 7, 8], [1, 3, 5, 6, 7], [1, 3, 5, 6, 7], [1, 2, 3, 5, 8], [4], [1, 3, 7, 8], [9]], [[3, 7], [2, 3, 4, 5, 8], [2, 5, 7], [1, 3, 5], [1, 3, 4, 5], [1, 2, 3, 8], [9], [6], [1, 3, 4, 8]], [[6], [2, 3, 4, 8], [1], [9], [3, 4], [7], [2, 3, 8], [5], [3, 4, 8]]]]
INFO:root:Doing checkSmall1
INFO:root:Getting tiny MUSes, distance 1, for 1 puzlits, 1 repeats
INFO:root:Chunked 1 in [1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
INFO:root:Doing checkSmall2
INFO:root:Getting tiny MUSes, distance 2, for 1 puzlits, 1 repeats
INFO:root:Chunked 1 in [1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
INFO:root:Considering 100 * 1 jobs for minsize=3
INFO:root:Chunked 100 in [9, 9, 9, 9, 8, 8, 8, 8, 8, 8, 8, 8]
INFO:root:Considering 100 * 1 jobs for minsize=4
INFO:root:Chunked 100 in [9, 9, 9, 9, 8, 8, 8, 8, 8, 8, 8, 8]
INFO:root:Considering 100 * 1 jobs for minsize=5
INFO:root:Chunked 100 in [9, 9, 9, 9, 8, 8, 8, 8, 8, 8, 8, 8]
INFO:root:XX found first (5, 5) is not 2 6
INFO:root:XX add new best (5, 5) is not 2 6 6
INFO:root:XX add new best (5, 5) is not 2 6 6
INFO:root:XX add new best (5, 5) is not 2 6 6
INFO:root:XX add new best (5, 5) is not 2 6 6
INFO:root:XX add new best (5, 5) is not 2 6 6
INFO:root:XX add new best (5, 5) is not 2 6 6
INFO:root:XX add new best (5, 5) is not 2 6 6
INFO:root:XX add new best (5, 5) is not 2 6 6
INFO:root:XX add new best (5, 5) is not 2 6 6
INFO:root:XX add new best (5, 5) is not 2 6 6
INFO:root:XX add new best (5, 5) is not 2 6 6
INFO:root:XX add new best (5, 5) is not 2 6 6
INFO:root:XX add new best (5, 5) is not 2 6 6
INFO:root:XX add new best (5, 5) is not 2 6 6
INFO:root:XX add new best (5, 5) is not 2 6 6
INFO:root:XX add new best (5, 5) is not 2 6 6
INFO:root:XX add new best (5, 5) is not 2 6 6
INFO:root:XX add new best (5, 5) is not 2 6 6
INFO:root:XX add new best (5, 5) is not 2 6 6
INFO:root:XX add new best (5, 5) is not 2 6 6
INFO:root:XX add new best (5, 5) is not 2 6 6
INFO:root:XX add new best (5, 5) is not 2 6 6
INFO:root:XX add new best (5, 5) is not 2 6 6
INFO:root:XX add new best (5, 5) is not 2 6 6
INFO:root:XX add new best (5, 5) is not 2 6 6
INFO:root:XX add new best (5, 5) is not 2 6 6
INFO:root:XX add new best (5, 5) is not 2 6 6
INFO:root:XX add new best (5, 5) is not 2 6 6
INFO:root:XX add new best (5, 5) is not 2 6 6
INFO:root:XX add new best (5, 5) is not 2 6 6
INFO:root:XX add new best (5, 5) is not 2 6 6
INFO:root:XX add new best (5, 5) is not 2 6 6
INFO:root:XX add new best (5, 5) is not 2 6 6
INFO:root:XX add new best (5, 5) is not 2 6 6
INFO:root:XX add new best (5, 5) is not 2 6 6
INFO:root:XX add new best (5, 5) is not 2 6 6
INFO:root:XX add new best (5, 5) is not 2 6 6
INFO:root:XX add new best (5, 5) is not 2 6 6
INFO:root:XX add new best (5, 5) is not 2 6 6
INFO:root:XX add new best (5, 5) is not 2 6 6
INFO:root:XX add new best (5, 5) is not 2 6 6
INFO:root:XX add new best (5, 5) is not 2 6 6
INFO:root:XX add new best (5, 5) is not 2 6 6
INFO:root:XX add new best (5, 5) is not 2 6 6
INFO:root:XX add new best (5, 5) is not 2 6 6
INFO:root:XX add new best (5, 5) is not 2 6 6
INFO:root:XX add new best (5, 5) is not 2 6 6
INFO:root:XX add new best (5, 5) is not 2 6 6
INFO:root:XX add new best (5, 5) is not 2 6 6
INFO:root:XX add new best (5, 5) is not 2 6 6
INFO:root:XX add new best (5, 5) is not 2 6 6
INFO:root:XX add new best (5, 5) is not 2 6 6
INFO:root:XX add new best (5, 5) is not 2 6 6
INFO:root:XX add new best (5, 5) is not 2 6 6
INFO:root:XX add new best (5, 5) is not 2 6 6
INFO:root:XX add new best (5, 5) is not 2 6 6
INFO:root:XX add new best (5, 5) is not 2 6 6
INFO:root:XX add new best (5, 5) is not 2 6 6
INFO:root:XX add new best (5, 5) is not 2 6 6
INFO:root:XX add new best (5, 5) is not 2 6 6
INFO:root:XX add new best (5, 5) is not 2 6 6
INFO:root:XX add new best (5, 5) is not 2 6 6
INFO:root:XX add new best (5, 5) is not 2 6 6
INFO:root:XX add new best (5, 5) is not 2 6 6
INFO:root:XX add new best (5, 5) is not 2 6 6
INFO:root:XX add new best (5, 5) is not 2 6 6
INFO:root:XX add new best (5, 5) is not 2 6 6
INFO:root:XX add new best (5, 5) is not 2 6 6
INFO:root:XX add new best (5, 5) is not 2 6 6
INFO:root:XX add new best (5, 5) is not 2 6 6
INFO:root:XX add new best (5, 5) is not 2 6 6
INFO:root:XX add new best (5, 5) is not 2 6 6
INFO:root:XX add new best (5, 5) is not 2 6 6
INFO:root:XX add new best (5, 5) is not 2 6 6
INFO:root:XX add new best (5, 5) is not 2 6 6
INFO:root:XX add new best (5, 5) is not 2 6 6
INFO:root:XX add new best (5, 5) is not 2 6 6
INFO:root:XX add new best (5, 5) is not 2 6 6
INFO:root:XX add new best (5, 5) is not 2 6 6
INFO:root:XX add new best (5, 5) is not 2 6 6
INFO:root:XX add new best (5, 5) is not 2 6 6
INFO:root:XX add new best (5, 5) is not 2 6 6
INFO:root:XX add new best (5, 5) is not 2 6 6
INFO:root:XX add new best (5, 5) is not 2 6 6
INFO:root:XX add new best (5, 5) is not 2 6 6
INFO:root:XX add new best (5, 5) is not 2 6 6
INFO:root:XX add new best (5, 5) is not 2 6 6
INFO:root:XX add new best (5, 5) is not 2 6 6
INFO:root:XX add new best (5, 5) is not 2 6 6
INFO:root:XX add new best (5, 5) is not 2 6 6
INFO:root:XX add new best (5, 5) is not 2 6 6
INFO:root:XX add new best (5, 5) is not 2 6 6
INFO:root:XX add new best (5, 5) is not 2 6 6
INFO:root:XX add new best (5, 5) is not 2 6 6
INFO:root:XX add new best (5, 5) is not 2 6 6
INFO:root:XX add new best (5, 5) is not 2 6 6
INFO:root:XX add new best (5, 5) is not 2 6 6
INFO:root:XX add new best (5, 5) is not 2 6 6
INFO:root:XX add new best (5, 5) is not 2 6 6
INFO:root:Considering 100 * 1 jobs for minsize=6
INFO:root:Chunked 100 in [9, 9, 9, 9, 8, 8, 8, 8, 8, 8, 8, 8]
INFO:root:XX add new best (5, 5) is not 2 6 6
INFO:root:XX add new best (5, 5) is not 2 6 6
INFO:root:XX add new best (5, 5) is not 2 6 6
INFO:root:XX add new best (5, 5) is not 2 6 6
INFO:root:XX add new best (5, 5) is not 2 6 6
INFO:root:XX add new best (5, 5) is not 2 6 6
INFO:root:XX add new best (5, 5) is not 2 6 6
INFO:root:XX add new best (5, 5) is not 2 6 6
INFO:root:XX add new best (5, 5) is not 2 6 6
INFO:root:XX add new best (5, 5) is not 2 6 6
INFO:root:XX add new best (5, 5) is not 2 6 6
INFO:root:XX add new best (5, 5) is not 2 6 6
INFO:root:XX add new best (5, 5) is not 2 6 6
INFO:root:XX add new best (5, 5) is not 2 6 6
INFO:root:XX add new best (5, 5) is not 2 6 6
INFO:root:XX add new best (5, 5) is not 2 6 6
INFO:root:XX add new best (5, 5) is not 2 6 6
INFO:root:XX add new best (5, 5) is not 2 6 6
INFO:root:XX add new best (5, 5) is not 2 6 6
INFO:root:XX add new best (5, 5) is not 2 6 6
INFO:root:XX add new best (5, 5) is not 2 6 6
INFO:root:XX add new best (5, 5) is not 2 6 6
INFO:root:XX add new best (5, 5) is not 2 6 6
INFO:root:XX add new best (5, 5) is not 2 6 6
INFO:root:XX add new best (5, 5) is not 2 6 6
INFO:root:XX add new best (5, 5) is not 2 6 6
INFO:root:XX add new best (5, 5) is not 2 6 6
INFO:root:XX add new best (5, 5) is not 2 6 6
INFO:root:XX add new best (5, 5) is not 2 6 6
INFO:root:XX add new best (5, 5) is not 2 6 6
INFO:root:XX add new best (5, 5) is not 2 6 6
INFO:root:XX add new best (5, 5) is not 2 6 6
INFO:root:XX add new best (5, 5) is not 2 6 6
INFO:root:XX add new best (5, 5) is not 2 6 6
INFO:root:XX add new best (5, 5) is not 2 6 6
INFO:root:XX add new best (5, 5) is not 2 6 6
INFO:root:XX add new best (5, 5) is not 2 6 6
INFO:root:XX add new best (5, 5) is not 2 6 6
INFO:root:XX add new best (5, 5) is not 2 6 6
INFO:root:XX add new best (5, 5) is not 2 6 6
INFO:root:XX add new best (5, 5) is not 2 6 6
INFO:root:XX add new best (5, 5) is not 2 6 6
INFO:root:XX add new best (5, 5) is not 2 6 6
INFO:root:XX add new best (5, 5) is not 2 6 6
INFO:root:XX add new best (5, 5) is not 2 6 6
INFO:root:XX add new best (5, 5) is not 2 6 6
INFO:root:XX add new best (5, 5) is not 2 6 6
INFO:root:XX add new best (5, 5) is not 2 6 6
INFO:root:XX add new best (5, 5) is not 2 6 6
INFO:root:XX add new best (5, 5) is not 2 6 6
INFO:root:XX add new best (5, 5) is not 2 6 6
INFO:root:XX add new best (5, 5) is not 2 6 6
INFO:root:XX add new best (5, 5) is not 2 6 6
INFO:root:XX add new best (5, 5) is not 2 6 6
INFO:root:XX add new best (5, 5) is not 2 6 6
INFO:root:XX add new best (5, 5) is not 2 6 6
INFO:root:XX add new best (5, 5) is not 2 6 6
INFO:root:XX add new best (5, 5) is not 2 6 6
INFO:root:XX add new best (5, 5) is not 2 6 6
INFO:root:XX add new best (5, 5) is not 2 6 6
INFO:root:XX add new best (5, 5) is not 2 6 6
INFO:root:XX add new best (5, 5) is not 2 6 6
INFO:root:XX add new best (5, 5) is not 2 6 6
INFO:root:XX add new best (5, 5) is not 2 6 6
INFO:root:XX add new best (5, 5) is not 2 6 6
INFO:root:XX add new best (5, 5) is not 2 6 6
INFO:root:XX add new best (5, 5) is not 2 6 6
INFO:root:XX add new best (5, 5) is not 2 6 6
INFO:root:XX add new best (5, 5) is not 2 6 6
INFO:root:XX add new best (5, 5) is not 2 6 6
INFO:root:XX add new best (5, 5) is not 2 6 6
INFO:root:XX add new best (5, 5) is not 2 6 6
INFO:root:XX add new best (5, 5) is not 2 6 6
INFO:root:XX add new best (5, 5) is not 2 6 6
INFO:root:XX add new best (5, 5) is not 2 6 6
INFO:root:XX add new best (5, 5) is not 2 6 6
INFO:root:XX add new best (5, 5) is not 2 6 6
INFO:root:XX add new best (5, 5) is not 2 6 6
INFO:root:XX add new best (5, 5) is not 2 6 6
INFO:root:XX add new best (5, 5) is not 2 6 6
INFO:root:XX add new best (5, 5) is not 2 6 6
INFO:root:XX add new best (5, 5) is not 2 6 6
INFO:root:XX add new best (5, 5) is not 2 6 6
INFO:root:XX add new best (5, 5) is not 2 6 6
INFO:root:XX add new best (5, 5) is not 2 6 6
INFO:root:XX add new best (5, 5) is not 2 6 6
INFO:root:XX add new best (5, 5) is not 2 6 6
INFO:root:XX add new best (5, 5) is not 2 6 6
INFO:root:XX add new best (5, 5) is not 2 6 6
INFO:root:XX add new best (5, 5) is not 2 6 6
INFO:root:XX add new best (5, 5) is not 2 6 6
INFO:root:XX add new best (5, 5) is not 2 6 6
INFO:root:XX add new best (5, 5) is not 2 6 6
INFO:root:XX add new best (5, 5) is not 2 6 6
INFO:root:XX add new best (5, 5) is not 2 6 6
INFO:root:XX add new best (5, 5) is not 2 6 6
INFO:root:XX add new best (5, 5) is not 2 6 6
INFO:root:XX add new best (5, 5) is not 2 6 6
INFO:root:XX add new best (5, 5) is not 2 6 6
INFO:root:XX add new best (5, 5) is not 2 6 6
INFO:root:Trace: [(6, [(5, 5) is not 2])]
INFO:root:Trace Quality: [(6, 1)]
INFO:root:Trace Sorted: [(6, 1)]
INFO:root:Finished
INFO:root:Full Trace [(6, [(5, 5) is not 2])]
INFO:root:Trying {'prechopMUSes': True}
INFO:root:Starting Step 1
INFO:root:Current state [[[[2], [1], [4], [8], [3, 5, 9], [3, 5], [6], [3, 9], [7]], [[3, 7, 9], [3, 6], [2, 5], [3, 6, 7], [1, 2, 3, 5, 8, 9], [1, 2, 3, 8, 9], [1, 3, 5, 8], [4], [1, 3, 5, 8]], [[5], [7], [3], [4], [1, 6, 8, 9], [1, 6, 8, 9], [1, 8], [1, 8, 9], [2]], [[3, 9], [5, 6, 9], [5, 6], [1, 3, 5], [1, 3, 5, 8, 9], [4], [7], [2], [1, 3, 5, 8]], [[4], [2, 5, 9], [5, 7, 8], [1, 3, 5, 7], [1, 2, 3, 7, 8, 9], [1, 2, 3, 5, 8, 9], [1, 2, 3, 5, 8], [1, 3, 7, 8], [6]], [[1, 8], [3, 4, 5, 8], [9], [2], [1, 3, 5, 6, 7, 8], [1, 3, 5, 6, 8], [1, 3, 5, 8], [1, 3, 7, 8], [1, 3, 4, 8]], [[1, 8], [2, 3, 5, 8], [5, 6, 7, 8], [1, 3, 5, 6, 7], [1, 3, 5, 6, 7], [1, 2, 3, 5, 8], [4], [1, 3, 7, 8], [9]], [[3, 7], [2, 3, 4, 5, 8], [2, 5, 7], [1, 3, 5], [1, 3, 4, 5], [1, 2, 3, 8], [9], [6], [1, 3, 4, 8]], [[6], [2, 3, 4, 8], [1], [9], [3, 4], [7], [2, 3, 8], [5], [3, 4, 8]]]]
INFO:root:Doing checkSmall1
INFO:root:Getting tiny MUSes, distance 1, for 1 puzlits, 1 repeats
INFO:root:Chunked 1 in [1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
INFO:root:Doing checkSmall2
INFO:root:Getting tiny MUSes, distance 2, for 1 puzlits, 1 repeats
INFO:root:Chunked 1 in [1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
INFO:root:Considering 100 * 1 jobs for minsize=3
INFO:root:Chunked 100 in [9, 9, 9, 9, 8, 8, 8, 8, 8, 8, 8, 8]
INFO:root:Considering 100 * 1 jobs for minsize=4
INFO:root:Chunked 100 in [9, 9, 9, 9, 8, 8, 8, 8, 8, 8, 8, 8]
INFO:root:Considering 100 * 1 jobs for minsize=5
INFO:root:Chunked 100 in [9, 9, 9, 9, 8, 8, 8, 8, 8, 8, 8, 8]
INFO:root:XX found first (5, 5) is not 2 6
INFO:root:XX add new best (5, 5) is not 2 6 6
INFO:root:XX add new best (5, 5) is not 2 6 6
INFO:root:XX add new best (5, 5) is not 2 6 6
INFO:root:XX add new best (5, 5) is not 2 6 6
INFO:root:XX add new best (5, 5) is not 2 6 6
INFO:root:XX add new best (5, 5) is not 2 6 6
INFO:root:XX add new best (5, 5) is not 2 6 6
INFO:root:XX add new best (5, 5) is not 2 6 6
INFO:root:XX add new best (5, 5) is not 2 6 6
INFO:root:XX add new best (5, 5) is not 2 6 6
INFO:root:XX add new best (5, 5) is not 2 6 6
INFO:root:XX add new best (5, 5) is not 2 6 6
INFO:root:XX add new best (5, 5) is not 2 6 6
INFO:root:XX add new best (5, 5) is not 2 6 6
INFO:root:XX add new best (5, 5) is not 2 6 6
INFO:root:XX add new best (5, 5) is not 2 6 6
INFO:root:Considering 100 * 1 jobs for minsize=6
INFO:root:Chunked 100 in [9, 9, 9, 9, 8, 8, 8, 8, 8, 8, 8, 8]
INFO:root:XX add new best (5, 5) is not 2 6 6
INFO:root:XX add new best (5, 5) is not 2 6 6
INFO:root:XX add new best (5, 5) is not 2 6 6
INFO:root:XX add new best (5, 5) is not 2 6 6
INFO:root:XX add new best (5, 5) is not 2 6 6
INFO:root:XX add new best (5, 5) is not 2 6 6
INFO:root:XX add new best (5, 5) is not 2 6 6
INFO:root:XX add new best (5, 5) is not 2 6 6
INFO:root:XX add new best (5, 5) is not 2 6 6
INFO:root:XX add new best (5, 5) is not 2 6 6
INFO:root:XX add new best (5, 5) is not 2 6 6
INFO:root:XX add new best (5, 5) is not 2 6 6
INFO:root:XX add new best (5, 5) is not 2 6 6
INFO:root:XX add new best (5, 5) is not 2 6 6
INFO:root:Trace: [(6, [(5, 5) is not 2])]
INFO:root:Trace Quality: [(6, 1)]
INFO:root:Trace Sorted: [(6, 1)]
INFO:root:Finished
INFO:root:Full Trace [(6, [(5, 5) is not 2])]
INFO:root:Trying {'quarterChopMUS': True}
INFO:root:Starting Step 1
INFO:root:Current state [[[[2], [1], [4], [8], [3, 5, 9], [3, 5], [6], [3, 9], [7]], [[3, 7, 9], [3, 6], [2, 5], [3, 6, 7], [1, 2, 3, 5, 8, 9], [1, 2, 3, 8, 9], [1, 3, 5, 8], [4], [1, 3, 5, 8]], [[5], [7], [3], [4], [1, 6, 8, 9], [1, 6, 8, 9], [1, 8], [1, 8, 9], [2]], [[3, 9], [5, 6, 9], [5, 6], [1, 3, 5], [1, 3, 5, 8, 9], [4], [7], [2], [1, 3, 5, 8]], [[4], [2, 5, 9], [5, 7, 8], [1, 3, 5, 7], [1, 2, 3, 7, 8, 9], [1, 2, 3, 5, 8, 9], [1, 2, 3, 5, 8], [1, 3, 7, 8], [6]], [[1, 8], [3, 4, 5, 8], [9], [2], [1, 3, 5, 6, 7, 8], [1, 3, 5, 6, 8], [1, 3, 5, 8], [1, 3, 7, 8], [1, 3, 4, 8]], [[1, 8], [2, 3, 5, 8], [5, 6, 7, 8], [1, 3, 5, 6, 7], [1, 3, 5, 6, 7], [1, 2, 3, 5, 8], [4], [1, 3, 7, 8], [9]], [[3, 7], [2, 3, 4, 5, 8], [2, 5, 7], [1, 3, 5], [1, 3, 4, 5], [1, 2, 3, 8], [9], [6], [1, 3, 4, 8]], [[6], [2, 3, 4, 8], [1], [9], [3, 4], [7], [2, 3, 8], [5], [3, 4, 8]]]]
INFO:root:Doing checkSmall1
INFO:root:Getting tiny MUSes, distance 1, for 1 puzlits, 1 repeats
INFO:root:Chunked 1 in [1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
INFO:root:Doing checkSmall2
INFO:root:Getting tiny MUSes, distance 2, for 1 puzlits, 1 repeats
INFO:root:Chunked 1 in [1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
INFO:root:Considering 100 * 1 jobs for minsize=3
INFO:root:Chunked 100 in [9, 9, 9, 9, 8, 8, 8, 8, 8, 8, 8, 8]
INFO:root:Considering 100 * 1 jobs for minsize=4
INFO:root:Chunked 100 in [9, 9, 9, 9, 8, 8, 8, 8, 8, 8, 8, 8]
INFO:root:Considering 100 * 1 jobs for minsize=5
INFO:root:Chunked 100 in [9, 9, 9, 9, 8, 8, 8, 8, 8, 8, 8, 8]
INFO:root:XX found first (5, 5) is not 2 6
INFO:root:XX add new best (5, 5) is not 2 6 6
INFO:root:XX add new best (5, 5) is not 2 6 6
INFO:root:XX add new best (5, 5) is not 2 6 6
INFO:root:XX add new best (5, 5) is not 2 6 6
INFO:root:XX add new best (5, 5) is not 2 6 6
INFO:root:XX add new best (5, 5) is not 2 6 6
INFO:root:XX add new best (5, 5) is not 2 6 6
INFO:root:XX add new best (5, 5) is not 2 6 6
INFO:root:XX add new best (5, 5) is not 2 6 6
INFO:root:XX add new best (5, 5) is not 2 6 6
INFO:root:XX add new best (5, 5) is not 2 6 6
INFO:root:XX add new best (5, 5) is not 2 6 6
INFO:root:XX add new best (5, 5) is not 2 6 6
INFO:root:XX add new best (5, 5) is not 2 6 6
INFO:root:XX add new best (5, 5) is not 2 6 6
INFO:root:XX add new best (5, 5) is not 2 6 6
INFO:root:XX add new best (5, 5) is not 2 6 6
INFO:root:XX add new best (5, 5) is not 2 6 6
INFO:root:XX add new best (5, 5) is not 2 6 6
INFO:root:XX add new best (5, 5) is not 2 6 6
INFO:root:XX add new best (5, 5) is not 2 6 6
INFO:root:XX add new best (5, 5) is not 2 6 6
INFO:root:XX add new best (5, 5) is not 2 6 6
INFO:root:XX add new best (5, 5) is not 2 6 6
INFO:root:XX add new best (5, 5) is not 2 6 6
INFO:root:XX add new best (5, 5) is not 2 6 6
INFO:root:XX add new best (5, 5) is not 2 6 6
INFO:root:XX add new best (5, 5) is not 2 6 6
INFO:root:XX add new best (5, 5) is not 2 6 6
INFO:root:XX add new best (5, 5) is not 2 6 6
INFO:root:XX add new best (5, 5) is not 2 6 6
INFO:root:XX add new best (5, 5) is not 2 6 6
INFO:root:XX add new best (5, 5) is not 2 6 6
INFO:root:XX add new best (5, 5) is not 2 6 6
INFO:root:XX add new best (5, 5) is not 2 6 6
INFO:root:XX add new best (5, 5) is not 2 6 6
INFO:root:XX add new best (5, 5) is not 2 6 6
INFO:root:Considering 100 * 1 jobs for minsize=6
INFO:root:Chunked 100 in [9, 9, 9, 9, 8, 8, 8, 8, 8, 8, 8, 8]
INFO:root:XX add new best (5, 5) is not 2 6 6
INFO:root:XX add new best (5, 5) is not 2 6 6
INFO:root:XX add new best (5, 5) is not 2 6 6
INFO:root:XX add new best (5, 5) is not 2 6 6
INFO:root:XX add new best (5, 5) is not 2 6 6
INFO:root:XX add new best (5, 5) is not 2 6 6
INFO:root:XX add new best (5, 5) is not 2 6 6
INFO:root:XX add new best (5, 5) is not 2 6 6
INFO:root:XX add new best (5, 5) is not 2 6 6
INFO:root:XX add new best (5, 5) is not 2 6 6
INFO:root:XX add new best (5, 5) is not 2 6 6
INFO:root:XX add new best (5, 5) is not 2 6 6
INFO:root:XX add new best (5, 5) is not 2 6 6
INFO:root:XX add new best (5, 5) is not 2 6 6
INFO:root:XX add new best (5, 5) is not 2 6 6
INFO:root:XX add new best (5, 5) is not 2 6 6
INFO:root:XX add new best (5, 5) is not 2 6 6
INFO:root:XX add new best (5, 5) is not 2 6 6
INFO:root:XX add new best (5, 5) is not 2 6 6
INFO:root:XX add new best (5, 5) is not 2 6 6
INFO:root:XX add new best (5, 5) is not 2 6 6
INFO:root:XX add new best (5, 5) is not 2 6 6
INFO:root:XX add new best (5, 5) is not 2 6 6
INFO:root:XX add new best (5, 5) is not 2 6 6
INFO:root:XX add new best (5, 5) is not 2 6 6
INFO:root:XX add new best (5, 5) is not 2 6 6
INFO:root:XX add new best (5, 5) is not 2 6 6
INFO:root:XX add new best (5, 5) is not 2 6 6
INFO:root:XX add new best (5, 5) is not 2 6 6
INFO:root:XX add new best (5, 5) is not 2 6 6
INFO:root:XX add new best (5, 5) is not 2 6 6
INFO:root:XX add new best (5, 5) is not 2 6 6
INFO:root:Trace: [(6, [(5, 5) is not 2])]
INFO:root:Trace Quality: [(6, 1)]
INFO:root:Trace Sorted: [(6, 1)]
INFO:root:Finished
INFO:root:Full Trace [(6, [(5, 5) is not 2])]
INFO:root:Trying {'minPrecheckMUS': True}
INFO:root:Starting Step 1
INFO:root:Current state [[[[2], [1], [4], [8], [3, 5, 9], [3, 5], [6], [3, 9], [7]], [[3, 7, 9], [3, 6], [2, 5], [3, 6, 7], [1, 2, 3, 5, 8, 9], [1, 2, 3, 8, 9], [1, 3, 5, 8], [4], [1, 3, 5, 8]], [[5], [7], [3], [4], [1, 6, 8, 9], [1, 6, 8, 9], [1, 8], [1, 8, 9], [2]], [[3, 9], [5, 6, 9], [5, 6], [1, 3, 5], [1, 3, 5, 8, 9], [4], [7], [2], [1, 3, 5, 8]], [[4], [2, 5, 9], [5, 7, 8], [1, 3, 5, 7], [1, 2, 3, 7, 8, 9], [1, 2, 3, 5, 8, 9], [1, 2, 3, 5, 8], [1, 3, 7, 8], [6]], [[1, 8], [3, 4, 5, 8], [9], [2], [1, 3, 5, 6, 7, 8], [1, 3, 5, 6, 8], [1, 3, 5, 8], [1, 3, 7, 8], [1, 3, 4, 8]], [[1, 8], [2, 3, 5, 8], [5, 6, 7, 8], [1, 3, 5, 6, 7], [1, 3, 5, 6, 7], [1, 2, 3, 5, 8], [4], [1, 3, 7, 8], [9]], [[3, 7], [2, 3, 4, 5, 8], [2, 5, 7], [1, 3, 5], [1, 3, 4, 5], [1, 2, 3, 8], [9], [6], [1, 3, 4, 8]], [[6], [2, 3, 4, 8], [1], [9], [3, 4], [7], [2, 3, 8], [5], [3, 4, 8]]]]
INFO:root:Doing checkSmall1
INFO:root:Getting tiny MUSes, distance 1, for 1 puzlits, 1 repeats
INFO:root:Chunked 1 in [1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
INFO:root:Doing checkSmall2
INFO:root:Getting tiny MUSes, distance 2, for 1 puzlits, 1 repeats
INFO:root:Chunked 1 in [1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
INFO:root:Considering 100 * 1 jobs for minsize=3
INFO:root:Chunked 100 in [9, 9, 9, 9, 8, 8, 8, 8, 8, 8, 8, 8]
INFO:root:Considering 100 * 1 jobs for minsize=4
INFO:root:Chunked 100 in [9, 9, 9, 9, 8, 8, 8, 8, 8, 8, 8, 8]
INFO:root:Considering 100 * 1 jobs for minsize=5
INFO:root:Chunked 100 in [9, 9, 9, 9, 8, 8, 8, 8, 8, 8, 8, 8]
INFO:root:XX found first (5, 5) is not 2 6
INFO:root:XX add new best (5, 5) is not 2 6 6
INFO:root:XX add new best (5, 5) is not 2 6 6
INFO:root:XX add new best (5, 5) is not 2 6 6
INFO:root:XX add new best (5, 5) is not 2 6 6
INFO:root:XX add new best (5, 5) is not 2 6 6
INFO:root:XX add new best (5, 5) is not 2 6 6
INFO:root:XX add new best (5, 5) is not 2 6 6
INFO:root:XX add new best (5, 5) is not 2 6 6
INFO:root:XX add new best (5, 5) is not 2 6 6
INFO:root:XX add new best (5, 5) is not 2 6 6
INFO:root:XX add new best (5, 5) is not 2 6 6
INFO:root:XX add new best (5, 5) is not 2 6 6
INFO:root:Considering 100 * 1 jobs for minsize=6
INFO:root:Chunked 100 in [9, 9, 9, 9, 8, 8, 8, 8, 8, 8, 8, 8]
INFO:root:XX add new best (5, 5) is not 2 6 6
INFO:root:XX add new best (5, 5) is not 2 6 6
INFO:root:XX add new best (5, 5) is not 2 6 6
INFO:root:XX add new best (5, 5) is not 2 6 6
INFO:root:XX add new best (5, 5) is not 2 6 6
INFO:root:XX add new best (5, 5) is not 2 6 6
INFO:root:XX add new best (5, 5) is not 2 6 6
INFO:root:XX add new best (5, 5) is not 2 6 6
INFO:root:XX add new best (5, 5) is not 2 6 6
INFO:root:XX add new best (5, 5) is not 2 6 6
INFO:root:XX add new best (5, 5) is not 2 6 6
INFO:root:XX add new best (5, 5) is not 2 6 6
INFO:root:XX add new best (5, 5) is not 2 6 6
INFO:root:XX add new best (5, 5) is not 2 6 6
INFO:root:XX add new best (5, 5) is not 2 6 6
INFO:root:Trace: [(6, [(5, 5) is not 2])]
INFO:root:Trace Quality: [(6, 1)]
INFO:root:Trace Sorted: [(6, 1)]
INFO:root:Finished
INFO:root:Full Trace [(6, [(5, 5) is not 2])]
INFO:root:Trying {'gallopingMUSes': True}
INFO:root:Starting Step 1
INFO:root:Current state [[[[2], [1], [4], [8], [3, 5, 9], [3, 5], [6], [3, 9], [7]], [[3, 7, 9], [3, 6], [2, 5], [3, 6, 7], [1, 2, 3, 5, 8, 9], [1, 2, 3, 8, 9], [1, 3, 5, 8], [4], [1, 3, 5, 8]], [[5], [7], [3], [4], [1, 6, 8, 9], [1, 6, 8, 9], [1, 8], [1, 8, 9], [2]], [[3, 9], [5, 6, 9], [5, 6], [1, 3, 5], [1, 3, 5, 8, 9], [4], [7], [2], [1, 3, 5, 8]], [[4], [2, 5, 9], [5, 7, 8], [1, 3, 5, 7], [1, 2, 3, 7, 8, 9], [1, 2, 3, 5, 8, 9], [1, 2, 3, 5, 8], [1, 3, 7, 8], [6]], [[1, 8], [3, 4, 5, 8], [9], [2], [1, 3, 5, 6, 7, 8], [1, 3, 5, 6, 8], [1, 3, 5, 8], [1, 3, 7, 8], [1, 3, 4, 8]], [[1, 8], [2, 3, 5, 8], [5, 6, 7, 8], [1, 3, 5, 6, 7], [1, 3, 5, 6, 7], [1, 2, 3, 5, 8], [4], [1, 3, 7, 8], [9]], [[3, 7], [2, 3, 4, 5, 8], [2, 5, 7], [1, 3, 5], [1, 3, 4, 5], [1, 2, 3, 8], [9], [6], [1, 3, 4, 8]], [[6], [2, 3, 4, 8], [1], [9], [3, 4], [7], [2, 3, 8], [5], [3, 4, 8]]]]
INFO:root:Doing checkSmall1
INFO:root:Getting tiny MUSes, distance 1, for 1 puzlits, 1 repeats
INFO:root:Chunked 1 in [1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
INFO:root:Doing checkSmall2
INFO:root:Getting tiny MUSes, distance 2, for 1 puzlits, 1 repeats
INFO:root:Chunked 1 in [1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
INFO:root:Considering 100 * 1 jobs for minsize=3
INFO:root:Chunked 100 in [9, 9, 9, 9, 8, 8, 8, 8, 8, 8, 8, 8]
INFO:root:Considering 100 * 1 jobs for minsize=4
INFO:root:Chunked 100 in [9, 9, 9, 9, 8, 8, 8, 8, 8, 8, 8, 8]
INFO:root:Considering 100 * 1 jobs for minsize=5
INFO:root:Chunked 100 in [9, 9, 9, 9, 8, 8, 8, 8, 8, 8, 8, 8]
INFO:root:XX found first (5, 5) is not 2 6
INFO:root:XX add new best (5, 5) is not 2 6 6
INFO:root:XX add new best (5, 5) is not 2 6 6
INFO:root:XX add new best (5, 5) is not 2 6 6
INFO:root:XX add new best (5, 5) is not 2 6 6
INFO:root:XX add new best (5, 5) is not 2 6 6
INFO:root:XX add new best (5, 5) is not 2 6 6
INFO:root:XX add new best (5, 5) is not 2 6 6
INFO:root:XX add new best (5, 5) is not 2 6 6
INFO:root:XX add new best (5, 5) is not 2 6 6
INFO:root:Considering 100 * 1 jobs for minsize=6
INFO:root:Chunked 100 in [9, 9, 9, 9, 8, 8, 8, 8, 8, 8, 8, 8]
INFO:root:XX add new best (5, 5) is not 2 6 6
INFO:root:XX add new best (5, 5) is not 2 6 6
INFO:root:XX add new best (5, 5) is not 2 6 6
INFO:root:XX add new best (5, 5) is not 2 6 6
INFO:root:XX add new best (5, 5) is not 2 6 6
INFO:root:XX add new best (5, 5) is not 2 6 6
INFO:root:XX add new best (5, 5) is not 2 6 6
INFO:root:XX add new best (5, 5) is not 2 6 6
INFO:root:XX add new best (5, 5) is not 2 6 6
INFO:root:XX add new best (5, 5) is not 2 6 6
INFO:root:XX add new best (5, 5) is not 2 6 6
INFO:root:Trace: [(6, [(5, 5) is not 2])]
INFO:root:Trace Quality: [(6, 1)]
INFO:root:Trace Sorted: [(6, 1)]
INFO:root:Finished
INFO:root:Full Trace [(6, [(5, 5) is not 2])]
INFO:root:Trying {'minPrecheckStepsMUS': True}
INFO:root:Starting Step 1
INFO:root:Current state [[[[2], [1], [4], [8], [3, 5, 9], [3, 5], [6], [3, 9], [7]], [[3, 7, 9], [3, 6], [2, 5], [3, 6, 7], [1, 2, 3, 5, 8, 9], [1, 2, 3, 8, 9], [1, 3, 5, 8], [4], [1, 3, 5, 8]], [[5], [7], [3], [4], [1, 6, 8, 9], [1, 6, 8, 9], [1, 8], [1, 8, 9], [2]], [[3, 9], [5, 6, 9], [5, 6], [1, 3, 5], [1, 3, 5, 8, 9], [4], [7], [2], [1, 3, 5, 8]], [[4], [2, 5, 9], [5, 7, 8], [1, 3, 5, 7], [1, 2, 3, 7, 8, 9], [1, 2, 3, 5, 8, 9], [1, 2, 3, 5, 8], [1, 3, 7, 8], [6]], [[1, 8], [3, 4, 5, 8], [9], [2], [1, 3, 5, 6, 7, 8], [1, 3, 5, 6, 8], [1, 3, 5, 8], [1, 3, 7, 8], [1, 3, 4, 8]], [[1, 8], [2, 3, 5, 8], [5, 6, 7, 8], [1, 3, 5, 6, 7], [1, 3, 5, 6, 7], [1, 2, 3, 5, 8], [4], [1, 3, 7, 8], [9]], [[3, 7], [2, 3, 4, 5, 8], [2, 5, 7], [1, 3, 5], [1, 3, 4, 5], [1, 2, 3, 8], [9], [6], [1, 3, 4, 8]], [[6], [2, 3, 4, 8], [1], [9], [3, 4], [7], [2, 3, 8], [5], [3, 4, 8]]]]
INFO:root:Doing checkSmall1
INFO:root:Getting tiny MUSes, distance 1, for 1 puzlits, 1 repeats
INFO:root:Chunked 1 in [1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
INFO:root:Doing checkSmall2
INFO:root:Getting tiny MUSes, distance 2, for 1 puzlits, 1 repeats
INFO:root:Chunked 1 in [1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
INFO:root:Considering 100 * 1 jobs for minsize=3
INFO:root:Chunked 100 in [9, 9, 9, 9, 8, 8, 8, 8, 8, 8, 8, 8]
INFO:root:Considering 100 * 1 jobs for minsize=4
INFO:root:Chunked 100 in [9, 9, 9, 9, 8, 8, 8, 8, 8, 8, 8, 8]
INFO:root:Considering 100 * 1 jobs for minsize=5
INFO:root:Chunked 100 in [9, 9, 9, 9, 8, 8, 8, 8, 8, 8, 8, 8]
INFO:root:XX found first (5, 5) is not 2 6
INFO:root:XX add new best (5, 5) is not 2 6 6
INFO:root:XX add new best (5, 5) is not 2 6 6
INFO:root:XX add new best (5, 5) is not 2 6 6
INFO:root:XX add new best (5, 5) is not 2 6 6
INFO:root:XX add new best (5, 5) is not 2 6 6
INFO:root:XX add new best (5, 5) is not 2 6 6
INFO:root:XX add new best (5, 5) is not 2 6 6
INFO:root:XX add new best (5, 5) is not 2 6 6
INFO:root:XX add new best (5, 5) is not 2 6 6
INFO:root:XX add new best (5, 5) is not 2 6 6
INFO:root:XX add new best (5, 5) is not 2 6 6
INFO:root:XX add new best (5, 5) is not 2 6 6
INFO:root:Considering 100 * 1 jobs for minsize=6
INFO:root:Chunked 100 in [9, 9, 9, 9, 8, 8, 8, 8, 8, 8, 8, 8]
INFO:root:XX add new best (5, 5) is not 2 6 6
INFO:root:XX add new best (5, 5) is not 2 6 6
INFO:root:XX add new best (5, 5) is not 2 6 6
INFO:root:XX add new best (5, 5) is not 2 6 6
INFO:root:XX add new best (5, 5) is not 2 6 6
INFO:root:XX add new best (5, 5) is not 2 6 6
INFO:root:XX add new best (5, 5) is not 2 6 6
INFO:root:XX add new best (5, 5) is not 2 6 6
INFO:root:XX add new best (5, 5) is not 2 6 6
INFO:root:XX add new best (5, 5) is not 2 6 6
INFO:root:XX add new best (5, 5) is not 2 6 6
INFO:root:XX add new best (5, 5) is not 2 6 6
INFO:root:XX add new best (5, 5) is not 2 6 6
INFO:root:XX add new best (5, 5) is not 2 6 6
INFO:root:XX add new best (5, 5) is not 2 6 6
INFO:root:Trace: [(6, [(5, 5) is not 2])]
INFO:root:Trace Quality: [(6, 1)]
INFO:root:Trace Sorted: [(6, 1)]
INFO:root:Finished
INFO:root:Full Trace [(6, [(5, 5) is not 2])]
INFO:root:Trying {'gallopingMUSes': True, 'minPrecheckMUS': True}
INFO:root:Starting Step 1
INFO:root:Current state [[[[2], [1], [4], [8], [3, 5, 9], [3, 5], [6], [3, 9], [7]], [[3, 7, 9], [3, 6], [2, 5], [3, 6, 7], [1, 2, 3, 5, 8, 9], [1, 2, 3, 8, 9], [1, 3, 5, 8], [4], [1, 3, 5, 8]], [[5], [7], [3], [4], [1, 6, 8, 9], [1, 6, 8, 9], [1, 8], [1, 8, 9], [2]], [[3, 9], [5, 6, 9], [5, 6], [1, 3, 5], [1, 3, 5, 8, 9], [4], [7], [2], [1, 3, 5, 8]], [[4], [2, 5, 9], [5, 7, 8], [1, 3, 5, 7], [1, 2, 3, 7, 8, 9], [1, 2, 3, 5, 8, 9], [1, 2, 3, 5, 8], [1, 3, 7, 8], [6]], [[1, 8], [3, 4, 5, 8], [9], [2], [1, 3, 5, 6, 7, 8], [1, 3, 5, 6, 8], [1, 3, 5, 8], [1, 3, 7, 8], [1, 3, 4, 8]], [[1, 8], [2, 3, 5, 8], [5, 6, 7, 8], [1, 3, 5, 6, 7], [1, 3, 5, 6, 7], [1, 2, 3, 5, 8], [4], [1, 3, 7, 8], [9]], [[3, 7], [2, 3, 4, 5, 8], [2, 5, 7], [1, 3, 5], [1, 3, 4, 5], [1, 2, 3, 8], [9], [6], [1, 3, 4, 8]], [[6], [2, 3, 4, 8], [1], [9], [3, 4], [7], [2, 3, 8], [5], [3, 4, 8]]]]
INFO:root:Doing checkSmall1
INFO:root:Getting tiny MUSes, distance 1, for 1 puzlits, 1 repeats
INFO:root:Chunked 1 in [1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
INFO:root:Doing checkSmall2
INFO:root:Getting tiny MUSes, distance 2, for 1 puzlits, 1 repeats
INFO:root:Chunked 1 in [1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
INFO:root:Considering 100 * 1 jobs for minsize=3
INFO:root:Chunked 100 in [9, 9, 9, 9, 8, 8, 8, 8, 8, 8, 8, 8]
INFO:root:Considering 100 * 1 jobs for minsize=4
INFO:root:Chunked 100 in [9, 9, 9, 9, 8, 8, 8, 8, 8, 8, 8, 8]
INFO:root:Considering 100 * 1 jobs for minsize=5
INFO:root:Chunked 100 in [9, 9, 9, 9, 8, 8, 8, 8, 8, 8, 8, 8]
INFO:root:XX found first (5, 5) is not 2 6
INFO:root:XX add new best (5, 5) is not 2 6 6
INFO:root:XX add new best (5, 5) is not 2 6 6
INFO:root:XX add new best (5, 5) is not 2 6 6
INFO:root:XX add new best (5, 5) is not 2 6 6
INFO:root:XX add new best (5, 5) is not 2 6 6
INFO:root:XX add new best (5, 5) is not 2 6 6
INFO:root:XX add new best (5, 5) is not 2 6 6
INFO:root:XX add new best (5, 5) is not 2 6 6
INFO:root:XX add new best (5, 5) is not 2 6 6
INFO:root:XX add new best (5, 5) is not 2 6 6
INFO:root:XX add new best (5, 5) is not 2 6 6
INFO:root:XX add new best (5, 5) is not 2 6 6
INFO:root:Considering 100 * 1 jobs for minsize=6
INFO:root:Chunked 100 in [9, 9, 9, 9, 8, 8, 8, 8, 8, 8, 8, 8]
INFO:root:XX add new best (5, 5) is not 2 6 6
INFO:root:XX add new best (5, 5) is not 2 6 6
INFO:root:XX add new best (5, 5) is not 2 6 6
INFO:root:XX add new best (5, 5) is not 2 6 6
INFO:root:XX add new best (5, 5) is not 2 6 6
INFO:root:XX add new best (5, 5) is not 2 6 6
INFO:root:XX add new best (5, 5) is not 2 6 6
INFO:root:XX add new best (5, 5) is not 2 6 6
INFO:root:XX add new best (5, 5) is not 2 6 6
INFO:root:XX add new best (5, 5) is not 2 6 6
INFO:root:XX add new best (5, 5) is not 2 6 6
INFO:root:XX add new best (5, 5) is not 2 6 6
INFO:root:XX add new best (5, 5) is not 2 6 6
INFO:root:XX add new best (5, 5) is not 2 6 6
INFO:root:XX add new best (5, 5) is not 2 6 6
INFO:root:Trace: [(6, [(5, 5) is not 2])]
INFO:root:Trace Quality: [(6, 1)]
INFO:root:Trace Sorted: [(6, 1)]
INFO:root:Finished
INFO:root:Full Trace [(6, [(5, 5) is not 2])]
INFO:root:Trying {}
INFO:root:Starting Step 1
INFO:root:Current state [[[[4], [1, 6], [1, 6], [1, 2, 5], [1, 2, 5, 6, 7], [2, 5, 6, 7], [9], [3], [8]], [[7, 8], [3], [2], [5, 8], [9], [4], [1], [5, 6], [5, 6, 7]], [[1, 7, 8], [9], [5], [3], [1, 6, 7, 8], [6, 7], [2], [4], [6, 7]], [[3], [7], [1, 8], [6], [2, 5, 8], [9], [5, 8], [1, 2, 5, 8], [4]], [[5], [2], [9], [4, 8], [4, 8], [1], [6], [7], [3]], [[6], [1, 8], [4], [7], [2, 5, 8], [3], [5, 8], [9], [1, 2, 5]], [[9], [5], [7], [1, 2, 4], [1, 2, 4, 6], [8], [3], [1, 2, 6], [1, 2, 6]], [[1, 8], [1, 6, 8], [3], [9], [1, 2, 5, 6, 7], [2, 5, 6, 7], [4], [1, 2, 5, 6, 8], [1, 2, 5, 6]], [[2], [4], [1, 6, 8], [1, 5], [3], [5, 6], [7], [1, 5, 6, 8], [9]]]]
INFO:root:Doing checkSmall1
INFO:root:Getting tiny MUSes, distance 1, for 1 puzlits, 1 repeats
INFO:root:Chunked 1 in [1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
INFO:root:Doing checkSmall2
INFO:root:Getting tiny MUSes, distance 2, for 1 puzlits, 1 repeats
INFO:root:Chunked 1 in [1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
INFO:root:Considering 100 * 1 jobs for minsize=3
INFO:root:Chunked 100 in [9, 9, 9, 9, 8, 8, 8, 8, 8, 8, 8, 8]
INFO:root:Considering 100 * 1 jobs for minsize=4
INFO:root:Chunked 100 in [9, 9, 9, 9, 8, 8, 8, 8, 8, 8, 8, 8]
INFO:root:Considering 100 * 1 jobs for minsize=5
INFO:root:Chunked 100 in [9, 9, 9, 9, 8, 8, 8, 8, 8, 8, 8, 8]
INFO:root:Considering 100 * 1 jobs for minsize=6
INFO:root:Chunked 100 in [9, 9, 9, 9, 8, 8, 8, 8, 8, 8, 8, 8]
INFO:root:XX found first (1, 4) is not 1 7
INFO:root:XX add new best (1, 4) is not 1 7 7
INFO:root:XX add new best (1, 4) is not 1 7 7
INFO:root:XX add new best (1, 4) is not 1 7 7
INFO:root:XX add new best (1, 4) is not 1 7 7
INFO:root:XX add new best (1, 4) is not 1 7 7
INFO:root:XX add new best (1, 4) is not 1 7 7
INFO:root:XX add new best (1, 4) is not 1 7 7
INFO:root:XX add new best (1, 4) is not 1 7 7
INFO:root:XX add new best (1, 4) is not 1 7 7
INFO:root:XX add new best (1, 4) is not 1 7 7
INFO:root:XX add new best (1, 4) is not 1 7 7
INFO:root:XX add new best (1, 4) is not 1 7 7
INFO:root:XX add new best (1, 4) is not 1 7 7
INFO:root:XX add new best (1, 4) is not 1 7 7
INFO:root:XX add new best (1, 4) is not 1 7 7
INFO:root:XX add new best (1, 4) is not 1 7 7
INFO:root:XX add new best (1, 4) is not 1 7 7
INFO:root:XX add new best (1, 4) is not 1 7 7
INFO:root:XX add new best (1, 4) is not 1 7 7
INFO:root:XX add new best (1, 4) is not 1 7 7
INFO:root:XX add new best (1, 4) is not 1 7 7
INFO:root:XX add new best (1, 4) is not 1 7 7
INFO:root:XX add new best (1, 4) is not 1 7 7
INFO:root:XX add new best (1, 4) is not 1 7 7
INFO:root:XX add new best (1, 4) is not 1 7 7
INFO:root:XX add new best (1, 4) is not 1 7 7
INFO:root:XX add new best (1, 4) is not 1 7 7
INFO:root:XX add new best (1, 4) is not 1 7 7
INFO:root:XX add new best (1, 4) is not 1 7 7
INFO:root:XX add new best (1, 4) is not 1 7 7
INFO:root:XX add new best (1, 4) is not 1 7 7
INFO:root:XX add new best (1, 4) is not 1 7 7
INFO:root:XX add new best (1, 4) is not 1 7 7
INFO:root:XX add new best (1, 4) is not 1 7 7
INFO:root:XX add new best (1, 4) is not 1 7 7
INFO:root:XX add new best (1, 4) is not 1 7 7
INFO:root:XX add new best (1, 4) is not 1 7 7
INFO:root:XX add new best (1, 4) is not 1 7 7
INFO:root:XX add new best (1, 4) is not 1 7 7
INFO:root:XX add new best (1, 4) is not 1 7 7
INFO:root:XX add new best (1, 4) is not 1 7 7
INFO:root:XX add new best (1, 4) is not 1 7 7
INFO:root:Considering 100 * 1 jobs for minsize=7
INFO:root:Chunked 100 in [9, 9, 9, 9, 8, 8, 8, 8, 8, 8, 8, 8]
INFO:root:XX add new best (1, 4) is not 1 7 7
INFO:root:XX add new best (1, 4) is not 1 7 7
INFO:root:XX add new best (1, 4) is not 1 7 7
INFO:root:XX add new best (1, 4) is not 1 7 7
INFO:root:XX add new best (1, 4) is not 1 7 7
INFO:root:XX add new best (1, 4) is not 1 7 7
INFO:root:XX add new best (1, 4) is not 1 7 7
INFO:root:XX add new best (1, 4) is not 1 7 7
INFO:root:XX add new best (1, 4) is not 1 7 7
INFO:root:XX add new best (1, 4) is not 1 7 7
INFO:root:XX add new best (1, 4) is not 1 7 7
INFO:root:XX add new best (1, 4) is not 1 7 7
INFO:root:XX add new best (1, 4) is not 1 7 7
INFO:root:XX add new best (1, 4) is not 1 7 7
INFO:root:XX add new best (1, 4) is not 1 7 7
INFO:root:XX add new best (1, 4) is not 1 7 7
INFO:root:XX add new best (1, 4) is not 1 7 7
INFO:root:XX add new best (1, 4) is not 1 7 7
INFO:root:XX add new best (1, 4) is not 1 7 7
INFO:root:XX add new best (1, 4) is not 1 7 7
INFO:root:XX add new best (1, 4) is not 1 7 7
INFO:root:XX add new best (1, 4) is not 1 7 7
INFO:root:XX add new best (1, 4) is not 1 7 7
INFO:root:XX add new best (1, 4) is not 1 7 7
INFO:root:XX add new best (1, 4) is not 1 7 7
INFO:root:XX add new best (1, 4) is not 1 7 7
INFO:root:XX add new best (1, 4) is not 1 7 7
INFO:root:XX add new best (1, 4) is not 1 7 7
INFO:root:XX add new best (1, 4) is not 1 7 7
INFO:root:XX add new best (1, 4) is not 1 7 7
INFO:root:XX add new best (1, 4) is not 1 7 7
INFO:root:XX add new best (1, 4) is not 1 7 7
INFO:root:XX add new best (1, 4) is not 1 7 7
INFO:root:XX add new best (1, 4) is not 1 7 7
INFO:root:XX add new best (1, 4) is not 1 7 7
INFO:root:XX add new best (1, 4) is not 1 7 7
INFO:root:XX add new best (1, 4) is not 1 7 7
INFO:root:XX add new best (1, 4) is not 1 7 7
INFO:root:XX add new best (1, 4) is not 1 7 7
INFO:root:XX add new best (1, 4) is not 1 7 7
INFO:root:XX add new best (1, 4) is not 1 7 7
INFO:root:XX add new best (1, 4) is not 1 7 7
INFO:root:XX add new best (1, 4) is not 1 7 7
INFO:root:XX add new best (1, 4) is not 1 7 7
INFO:root:XX add new best (1, 4) is not 1 7 7
INFO:root:XX add new best (1, 4) is not 1 7 7
INFO:root:XX add new best (1, 4) is not 1 7 7
INFO:root:XX add new best (1, 4) is not 1 7 7
INFO:root:XX add new best (1, 4) is not 1 7 7
INFO:root:XX add new best (1, 4) is not 1 7 7
INFO:root:XX add new best (1, 4) is not 1 7 7
INFO:root:XX add new best (1, 4) is not 1 7 7
INFO:root:XX add new best (1, 4) is not 1 7 7
INFO:root:XX add new best (1, 4) is not 1 7 7
INFO:root:XX add new best (1, 4) is not 1 7 7
INFO:root:XX add new best (1, 4) is not 1 7 7
INFO:root:Trace: [(7, [(1, 4) is not 1])]
INFO:root:Trace Quality: [(7, 1)]
INFO:root:Trace Sorted: [(7, 1)]
INFO:root:Finished
INFO:root:Full Trace [(7, [(1, 4) is not 1])]
INFO:root:Trying {'prechopMUSes': True}
INFO:root:Starting Step 1
INFO:root:Current state [[[[4], [1, 6], [1, 6], [1, 2, 5], [1, 2, 5, 6, 7], [2, 5, 6, 7], [9], [3], [8]], [[7, 8], [3], [2], [5, 8], [9], [4], [1], [5, 6], [5, 6, 7]], [[1, 7, 8], [9], [5], [3], [1, 6, 7, 8], [6, 7], [2], [4], [6, 7]], [[3], [7], [1, 8], [6], [2, 5, 8], [9], [5, 8], [1, 2, 5, 8], [4]], [[5], [2], [9], [4, 8], [4, 8], [1], [6], [7], [3]], [[6], [1, 8], [4], [7], [2, 5, 8], [3], [5, 8], [9], [1, 2, 5]], [[9], [5], [7], [1, 2, 4], [1, 2, 4, 6], [8], [3], [1, 2, 6], [1, 2, 6]], [[1, 8], [1, 6, 8], [3], [9], [1, 2, 5, 6, 7], [2, 5, 6, 7], [4], [1, 2, 5, 6, 8], [1, 2, 5, 6]], [[2], [4], [1, 6, 8], [1, 5], [3], [5, 6], [7], [1, 5, 6, 8], [9]]]]
INFO:root:Doing checkSmall1
INFO:root:Getting tiny MUSes, distance 1, for 1 puzlits, 1 repeats
INFO:root:Chunked 1 in [1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
INFO:root:Doing checkSmall2
INFO:root:Getting tiny MUSes, distance 2, for 1 puzlits, 1 repeats
INFO:root:Chunked 1 in [1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
INFO:root:Considering 100 * 1 jobs for minsize=3
INFO:root:Chunked 100 in [9, 9, 9, 9, 8, 8, 8, 8, 8, 8, 8, 8]
INFO:root:Considering 100 * 1 jobs for minsize=4
INFO:root:Chunked 100 in [9, 9, 9, 9, 8, 8, 8, 8, 8, 8, 8, 8]
INFO:root:XX found first (1, 4) is not 1 5
INFO:root:XX add new best (1, 4) is not 1 5 5
INFO:root:XX add new best (1, 4) is not 1 5 5
INFO:root:XX add new best (1, 4) is not 1 5 5
INFO:root:XX add new best (1, 4) is not 1 5 5
INFO:root:Considering 100 * 1 jobs for minsize=5
INFO:root:Chunked 100 in [9, 9, 9, 9, 8, 8, 8, 8, 8, 8, 8, 8]
INFO:root:XX add new best (1, 4) is not 1 5 5
INFO:root:XX add new best (1, 4) is not 1 5 5
INFO:root:XX add new best (1, 4) is not 1 5 5
INFO:root:XX add new best (1, 4) is not 1 5 5
INFO:root:XX add new best (1, 4) is not 1 5 5
INFO:root:XX add new best (1, 4) is not 1 5 5
INFO:root:XX add new best (1, 4) is not 1 5 5
INFO:root:Trace: [(5, [(1, 4) is not 1])]
INFO:root:Trace Quality: [(5, 1)]
INFO:root:Trace Sorted: [(5, 1)]
INFO:root:Finished
INFO:root:Full Trace [(5, [(1, 4) is not 1])]
INFO:root:Trying {'quarterChopMUS': True}
INFO:root:Starting Step 1
INFO:root:Current state [[[[4], [1, 6], [1, 6], [1, 2, 5], [1, 2, 5, 6, 7], [2, 5, 6, 7], [9], [3], [8]], [[7, 8], [3], [2], [5, 8], [9], [4], [1], [5, 6], [5, 6, 7]], [[1, 7, 8], [9], [5], [3], [1, 6, 7, 8], [6, 7], [2], [4], [6, 7]], [[3], [7], [1, 8], [6], [2, 5, 8], [9], [5, 8], [1, 2, 5, 8], [4]], [[5], [2], [9], [4, 8], [4, 8], [1], [6], [7], [3]], [[6], [1, 8], [4], [7], [2, 5, 8], [3], [5, 8], [9], [1, 2, 5]], [[9], [5], [7], [1, 2, 4], [1, 2, 4, 6], [8], [3], [1, 2, 6], [1, 2, 6]], [[1, 8], [1, 6, 8], [3], [9], [1, 2, 5, 6, 7], [2, 5, 6, 7], [4], [1, 2, 5, 6, 8], [1, 2, 5, 6]], [[2], [4], [1, 6, 8], [1, 5], [3], [5, 6], [7], [1, 5, 6, 8], [9]]]]
INFO:root:Doing checkSmall1
INFO:root:Getting tiny MUSes, distance 1, for 1 puzlits, 1 repeats
INFO:root:Chunked 1 in [1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
INFO:root:Doing checkSmall2
INFO:root:Getting tiny MUSes, distance 2, for 1 puzlits, 1 repeats
INFO:root:Chunked 1 in [1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
INFO:root:Considering 100 * 1 jobs for minsize=3
INFO:root:Chunked 100 in [9, 9, 9, 9, 8, 8, 8, 8, 8, 8, 8, 8]
INFO:root:Considering 100 * 1 jobs for minsize=4
INFO:root:Chunked 100 in [9, 9, 9, 9, 8, 8, 8, 8, 8, 8, 8, 8]
INFO:root:XX found first (1, 4) is not 1 5
INFO:root:XX add new best (1, 4) is not 1 5 5
INFO:root:XX add new best (1, 4) is not 1 5 5
INFO:root:XX add new best (1, 4) is not 1 5 5
INFO:root:XX add new best (1, 4) is not 1 5 5
INFO:root:XX add new best (1, 4) is not 1 5 5
INFO:root:XX add new best (1, 4) is not 1 5 5
INFO:root:Considering 100 * 1 jobs for minsize=5
INFO:root:Chunked 100 in [9, 9, 9, 9, 8, 8, 8, 8, 8, 8, 8, 8]
INFO:root:XX add new best (1, 4) is not 1 5 5
INFO:root:XX add new best (1, 4) is not 1 5 5
INFO:root:XX add new best (1, 4) is not 1 5 5
INFO:root:XX add new best (1, 4) is not 1 5 5
INFO:root:XX add new best (1, 4) is not 1 5 5
INFO:root:XX add new best (1, 4) is not 1 5 5
INFO:root:XX add new best (1, 4) is not 1 5 5
INFO:root:Trace: [(5, [(1, 4) is not 1])]
INFO:root:Trace Quality: [(5, 1)]
INFO:root:Trace Sorted: [(5, 1)]
INFO:root:Finished
INFO:root:Full Trace [(5, [(1, 4) is not 1])]
INFO:root:Trying {'minPrecheckMUS': True}
INFO:root:Starting Step 1
INFO:root:Current state [[[[4], [1, 6], [1, 6], [1, 2, 5], [1, 2, 5, 6, 7], [2, 5, 6, 7], [9], [3], [8]], [[7, 8], [3], [2], [5, 8], [9], [4], [1], [5, 6], [5, 6, 7]], [[1, 7, 8], [9], [5], [3], [1, 6, 7, 8], [6, 7], [2], [4], [6, 7]], [[3], [7], [1, 8], [6], [2, 5, 8], [9], [5, 8], [1, 2, 5, 8], [4]], [[5], [2], [9], [4, 8], [4, 8], [1], [6], [7], [3]], [[6], [1, 8], [4], [7], [2, 5, 8], [3], [5, 8], [9], [1, 2, 5]], [[9], [5], [7], [1, 2, 4], [1, 2, 4, 6], [8], [3], [1, 2, 6], [1, 2, 6]], [[1, 8], [1, 6, 8], [3], [9], [1, 2, 5, 6, 7], [2, 5, 6, 7], [4], [1, 2, 5, 6, 8], [1, 2, 5, 6]], [[2], [4], [1, 6, 8], [1, 5], [3], [5, 6], [7], [1, 5, 6, 8], [9]]]]
INFO:root:Doing checkSmall1
INFO:root:Getting tiny MUSes, distance 1, for 1 puzlits, 1 repeats
INFO:root:Chunked 1 in [1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
INFO:root:Doing checkSmall2
INFO:root:Getting tiny MUSes, distance 2, for 1 puzlits, 1 repeats
INFO:root:Chunked 1 in [1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
INFO:root:Considering 100 * 1 jobs for minsize=3
INFO:root:Chunked 100 in [9, 9, 9, 9, 8, 8, 8, 8, 8, 8, 8, 8]
INFO:root:Considering 100 * 1 jobs for minsize=4
INFO:root:Chunked 100 in [9, 9, 9, 9, 8, 8, 8, 8, 8, 8, 8, 8]
INFO:root:XX found first (1, 4) is not 1 5
INFO:root:XX add new best (1, 4) is not 1 5 5
INFO:root:XX add new best (1, 4) is not 1 5 5
INFO:root:XX add new best (1, 4) is not 1 5 5
INFO:root:XX add new best (1, 4) is not 1 5 5
INFO:root:XX add new best (1, 4) is not 1 5 5
INFO:root:XX add new best (1, 4) is not 1 5 5
INFO:root:XX add new best (1, 4) is not 1 5 5
INFO:root:XX add new best (1, 4) is not 1 5 5
INFO:root:XX add new best (1, 4) is not 1 5 5
INFO:root:XX add new best (1, 4) is not 1 5 5
INFO:root:XX add new best (1, 4) is not 1 5 5
INFO:root:Considering 100 * 1 jobs for minsize=5
INFO:root:Chunked 100 in [9, 9, 9, 9, 8, 8, 8, 8, 8, 8, 8, 8]
INFO:root:XX add new best (1, 4) is not 1 5 5
INFO:root:XX add new best (1, 4) is not 1 5 5
INFO:root:XX add new best (1, 4) is not 1 5 5
INFO:root:XX add new best (1, 4) is not 1 5 5
INFO:root:XX add new best (1, 4) is not 1 5 5
INFO:root:XX add new best (1, 4) is not 1 5 5
INFO:root:Trace: [(5, [(1, 4) is not 1])]
INFO:root:Trace Quality: [(5, 1)]
INFO:root:Trace Sorted: [(5, 1)]
INFO:root:Finished
INFO:root:Full Trace [(5, [(1, 4) is not 1])]
INFO:root:Trying {'gallopingMUSes': True}
INFO:root:Starting Step 1
INFO:root:Current state [[[[4], [1, 6], [1, 6], [1, 2, 5], [1, 2, 5, 6, 7], [2, 5, 6, 7], [9], [3], [8]], [[7, 8], [3], [2], [5, 8], [9], [4], [1], [5, 6], [5, 6, 7]], [[1, 7, 8], [9], [5], [3], [1, 6, 7, 8], [6, 7], [2], [4], [6, 7]], [[3], [7], [1, 8], [6], [2, 5, 8], [9], [5, 8], [1, 2, 5, 8], [4]], [[5], [2], [9], [4, 8], [4, 8], [1], [6], [7], [3]], [[6], [1, 8], [4], [7], [2, 5, 8], [3], [5, 8], [9], [1, 2, 5]], [[9], [5], [7], [1, 2, 4], [1, 2, 4, 6], [8], [3], [1, 2, 6], [1, 2, 6]], [[1, 8], [1, 6, 8], [3], [9], [1, 2, 5, 6, 7], [2, 5, 6, 7], [4], [1, 2, 5, 6, 8], [1, 2, 5, 6]], [[2], [4], [1, 6, 8], [1, 5], [3], [5, 6], [7], [1, 5, 6, 8], [9]]]]
INFO:root:Doing checkSmall1
INFO:root:Getting tiny MUSes, distance 1, for 1 puzlits, 1 repeats
INFO:root:Chunked 1 in [1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
INFO:root:Doing checkSmall2
INFO:root:Getting tiny MUSes, distance 2, for 1 puzlits, 1 repeats
INFO:root:Chunked 1 in [1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
INFO:root:Considering 100 * 1 jobs for minsize=3
INFO:root:Chunked 100 in [9, 9, 9, 9, 8, 8, 8, 8, 8, 8, 8, 8]
INFO:root:Considering 100 * 1 jobs for minsize=4
INFO:root:Chunked 100 in [9, 9, 9, 9, 8, 8, 8, 8, 8, 8, 8, 8]
INFO:root:XX found first (1, 4) is not 1 5
INFO:root:XX add new best (1, 4) is not 1 5 5
INFO:root:XX add new best (1, 4) is not 1 5 5
INFO:root:XX add new best (1, 4) is not 1 5 5
INFO:root:XX add new best (1, 4) is not 1 5 5
INFO:root:XX add new best (1, 4) is not 1 5 5
INFO:root:XX add new best (1, 4) is not 1 5 5
INFO:root:Considering 100 * 1 jobs for minsize=5
INFO:root:Chunked 100 in [9, 9, 9, 9, 8, 8, 8, 8, 8, 8, 8, 8]
INFO:root:XX add new best (1, 4) is not 1 5 5
INFO:root:XX add new best (1, 4) is not 1 5 5
INFO:root:XX add new best (1, 4) is not 1 5 5
INFO:root:XX add new best (1, 4) is not 1 5 5
INFO:root:Trace: [(5, [(1, 4) is not 1])]
INFO:root:Trace Quality: [(5, 1)]
INFO:root:Trace Sorted: [(5, 1)]
INFO:root:Finished
INFO:root:Full Trace [(5, [(1, 4) is not 1])]
INFO:root:Trying {'minPrecheckStepsMUS': True}
INFO:root:Starting Step 1
INFO:root:Current state [[[[4], [1, 6], [1, 6], [1, 2, 5], [1, 2, 5, 6, 7], [2, 5, 6, 7], [9], [3], [8]], [[7, 8], [3], [2], [5, 8], [9], [4], [1], [5, 6], [5, 6, 7]], [[1, 7, 8], [9], [5], [3], [1, 6, 7, 8], [6, 7], [2], [4], [6, 7]], [[3], [7], [1, 8], [6], [2, 5, 8], [9], [5, 8], [1, 2, 5, 8], [4]], [[5], [2], [9], [4, 8], [4, 8], [1], [6], [7], [3]], [[6], [1, 8], [4], [7], [2, 5, 8], [3], [5, 8], [9], [1, 2, 5]], [[9], [5], [7], [1, 2, 4], [1, 2, 4, 6], [8], [3], [1, 2, 6], [1, 2, 6]], [[1, 8], [1, 6, 8], [3], [9], [1, 2, 5, 6, 7], [2, 5, 6, 7], [4], [1, 2, 5, 6, 8], [1, 2, 5, 6]], [[2], [4], [1, 6, 8], [1, 5], [3], [5, 6], [7], [1, 5, 6, 8], [9]]]]
INFO:root:Doing checkSmall1
INFO:root:Getting tiny MUSes, distance 1, for 1 puzlits, 1 repeats
INFO:root:Chunked 1 in [1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
INFO:root:Doing checkSmall2
INFO:root:Getting tiny MUSes, distance 2, for 1 puzlits, 1 repeats
INFO:root:Chunked 1 in [1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
INFO:root:Considering 100 * 1 jobs for minsize=3
INFO:root:Chunked 100 in [9, 9, 9, 9, 8, 8, 8, 8, 8, 8, 8, 8]
INFO:root:Considering 100 * 1 jobs for minsize=4
INFO:root:Chunked 100 in [9, 9, 9, 9, 8, 8, 8, 8, 8, 8, 8, 8]
INFO:root:XX found first (1, 4) is not 1 5
INFO:root:XX add new best (1, 4) is not 1 5 5
INFO:root:XX add new best (1, 4) is not 1 5 5
INFO:root:XX add new best (1, 4) is not 1 5 5
INFO:root:XX add new best (1, 4) is not 1 5 5
INFO:root:XX add new best (1, 4) is not 1 5 5
INFO:root:XX add new best (1, 4) is not 1 5 5
INFO:root:XX add new best (1, 4) is not 1 5 5
INFO:root:XX add new best (1, 4) is not 1 5 5
INFO:root:XX add new best (1, 4) is not 1 5 5
INFO:root:XX add new best (1, 4) is not 1 5 5
INFO:root:XX add new best (1, 4) is not 1 5 5
INFO:root:Considering 100 * 1 jobs for minsize=5
INFO:root:Chunked 100 in [9, 9, 9, 9, 8, 8, 8, 8, 8, 8, 8, 8]
INFO:root:XX add new best (1, 4) is not 1 5 5
INFO:root:XX add new best (1, 4) is not 1 5 5
INFO:root:XX add new best (1, 4) is not 1 5 5
INFO:root:XX add new best (1, 4) is not 1 5 5
INFO:root:XX add new best (1, 4) is not 1 5 5
INFO:root:XX add new best (1, 4) is not 1 5 5
INFO:root:Trace: [(5, [(1, 4) is not 1])]
INFO:root:Trace Quality: [(5, 1)]
INFO:root:Trace Sorted: [(5, 1)]
INFO:root:Finished
INFO:root:Full Trace [(5, [(1, 4) is not 1])]
INFO:root:Trying {'gallopingMUSes': True, 'minPrecheckMUS': True}
INFO:root:Starting Step 1
INFO:root:Current state [[[[4], [1, 6], [1, 6], [1, 2, 5], [1, 2, 5, 6, 7], [2, 5, 6, 7], [9], [3], [8]], [[7, 8], [3], [2], [5, 8], [9], [4], [1], [5, 6], [5, 6, 7]], [[1, 7, 8], [9], [5], [3], [1, 6, 7, 8], [6, 7], [2], [4], [6, 7]], [[3], [7], [1, 8], [6], [2, 5, 8], [9], [5, 8], [1, 2, 5, 8], [4]], [[5], [2], [9], [4, 8], [4, 8], [1], [6], [7], [3]], [[6], [1, 8], [4], [7], [2, 5, 8], [3], [5, 8], [9], [1, 2, 5]], [[9], [5], [7], [1, 2, 4], [1, 2, 4, 6], [8], [3], [1, 2, 6], [1, 2, 6]], [[1, 8], [1, 6, 8], [3], [9], [1, 2, 5, 6, 7], [2, 5, 6, 7], [4], [1, 2, 5, 6, 8], [1, 2, 5, 6]], [[2], [4], [1, 6, 8], [1, 5], [3], [5, 6], [7], [1, 5, 6, 8], [9]]]]
INFO:root:Doing checkSmall1
INFO:root:Getting tiny MUSes, distance 1, for 1 puzlits, 1 repeats
INFO:root:Chunked 1 in [1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
INFO:root:Doing checkSmall2
INFO:root:Getting tiny MUSes, distance 2, for 1 puzlits, 1 repeats
INFO:root:Chunked 1 in [1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
INFO:root:Considering 100 * 1 jobs for minsize=3
INFO:root:Chunked 100 in [9, 9, 9, 9, 8, 8, 8, 8, 8, 8, 8, 8]
INFO:root:Considering 100 * 1 jobs for minsize=4
INFO:root:Chunked 100 in [9, 9, 9, 9, 8, 8, 8, 8, 8, 8, 8, 8]
INFO:root:XX found first (1, 4) is not 1 5
INFO:root:XX add new best (1, 4) is not 1 5 5
INFO:root:XX add new best (1, 4) is not 1 5 5
INFO:root:XX add new best (1, 4) is not 1 5 5
INFO:root:XX add new best (1, 4) is not 1 5 5
INFO:root:XX add new best (1, 4) is not 1 5 5
INFO:root:XX add new best (1, 4) is not 1 5 5
INFO:root:XX add new best (1, 4) is not 1 5 5
INFO:root:XX add new best (1, 4) is not 1 5 5
INFO:root:XX add new best (1, 4) is not 1 5 5
INFO:root:XX add new best (1, 4) is not 1 5 5
INFO:root:Considering 100 * 1 jobs for minsize=5
INFO:root:Chunked 100 in [9, 9, 9, 9, 8, 8, 8, 8, 8, 8, 8, 8]
INFO:root:XX add new best (1, 4) is not 1 5 5
INFO:root:XX add new best (1, 4) is not 1 5 5
INFO:root:XX add new best (1, 4) is not 1 5 5
INFO:root:XX add new best (1, 4) is not 1 5 5
INFO:root:XX add new best (1, 4) is not 1 5 5
INFO:root:XX add new best (1, 4) is not 1 5 5
INFO:root:Trace: [(5, [(1, 4) is not 1])]
INFO:root:Trace Quality: [(5, 1)]
INFO:root:Trace Sorted: [(5, 1)]
INFO:root:Finished
INFO:root:Full Trace [(5, [(1, 4) is not 1])]
INFO:root:Trying {}
INFO:root:Starting Step 1
INFO:root:Current state [[[[1, 4, 6, 7], [8], [5, 6, 7], [1, 2, 4, 5, 7], [9], [1, 2], [2, 4, 7], [3], [2, 4]], [[1, 4, 7], [3], [5, 7], [1, 2, 4, 5, 7], [1, 2, 7, 8], [1, 2, 8], [2, 4, 7], [6], [9]], [[9], [4, 7], [2], [4, 7], [6], [3], [1], [5], [8]], [[6, 7], [2], [6, 7], [8], [1, 3], [4], [5], [9], [1, 3]], [[8], [5], [1], [9], [2, 3], [7], [2, 3], [4], [6]], [[3], [9], [4], [6], [1, 2], [5], [8], [7], [1, 2]], [[5], [6], [3], [1, 2], [4], [1, 2], [9], [8], [7]], [[2], [4, 7], [7, 8, 9], [3, 7], [3, 7, 8], [6, 8, 9], [3, 4, 6], [1], [5]], [[4, 7], [1], [7, 8, 9], [3, 7], [5], [6, 8, 9], [3, 4, 6], [2], [3, 4]]]]
INFO:root:Doing checkSmall1
INFO:root:Getting tiny MUSes, distance 1, for 1 puzlits, 1 repeats
INFO:root:Chunked 1 in [1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
INFO:root:Doing checkSmall2
INFO:root:Getting tiny MUSes, distance 2, for 1 puzlits, 1 repeats
INFO:root:Chunked 1 in [1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
INFO:root:Considering 100 * 1 jobs for minsize=3
INFO:root:Chunked 100 in [9, 9, 9, 9, 8, 8, 8, 8, 8, 8, 8, 8]
INFO:root:Considering 100 * 1 jobs for minsize=4
INFO:root:Chunked 100 in [9, 9, 9, 9, 8, 8, 8, 8, 8, 8, 8, 8]
INFO:root:Considering 100 * 1 jobs for minsize=5
INFO:root:Chunked 100 in [9, 9, 9, 9, 8, 8, 8, 8, 8, 8, 8, 8]
INFO:root:Considering 100 * 1 jobs for minsize=6
INFO:root:Chunked 100 in [9, 9, 9, 9, 8, 8, 8, 8, 8, 8, 8, 8]
INFO:root:XX found first (1, 4) is not 7 7
INFO:root:XX add new best (1, 4) is not 7 7 7
INFO:root:XX add new best (1, 4) is not 7 7 7
INFO:root:XX add new best (1, 4) is not 7 7 7
INFO:root:XX add new best (1, 4) is not 7 7 7
INFO:root:XX add new best (1, 4) is not 7 7 7
INFO:root:XX add new best (1, 4) is not 7 7 7
INFO:root:XX add new best (1, 4) is not 7 7 7
INFO:root:XX add new best (1, 4) is not 7 7 7
INFO:root:XX add new best (1, 4) is not 7 7 7
INFO:root:XX add new best (1, 4) is not 7 7 7
INFO:root:XX add new best (1, 4) is not 7 7 7
INFO:root:XX add new best (1, 4) is not 7 7 7
INFO:root:XX add new best (1, 4) is not 7 7 7
INFO:root:XX add new best (1, 4) is not 7 7 7
INFO:root:XX add new best (1, 4) is not 7 7 7
INFO:root:XX add new best (1, 4) is not 7 7 7
INFO:root:XX add new best (1, 4) is not 7 7 7
INFO:root:XX add new best (1, 4) is not 7 7 7
INFO:root:XX add new best (1, 4) is not 7 7 7
INFO:root:XX add new best (1, 4) is not 7 7 7
INFO:root:XX add new best (1, 4) is not 7 7 7
INFO:root:XX add new best (1, 4) is not 7 7 7
INFO:root:XX add new best (1, 4) is not 7 7 7
INFO:root:XX add new best (1, 4) is not 7 7 7
INFO:root:XX add new best (1, 4) is not 7 7 7
INFO:root:XX add new best (1, 4) is not 7 7 7
INFO:root:XX add new best (1, 4) is not 7 7 7
INFO:root:XX add new best (1, 4) is not 7 7 7
INFO:root:XX add new best (1, 4) is not 7 7 7
INFO:root:XX add new best (1, 4) is not 7 7 7
INFO:root:XX add new best (1, 4) is not 7 7 7
INFO:root:XX add new best (1, 4) is not 7 7 7
INFO:root:XX add new best (1, 4) is not 7 7 7
INFO:root:XX add new best (1, 4) is not 7 7 7
INFO:root:XX add new best (1, 4) is not 7 7 7
INFO:root:XX add new best (1, 4) is not 7 7 7
INFO:root:XX add new best (1, 4) is not 7 7 7
INFO:root:XX add new best (1, 4) is not 7 7 7
INFO:root:XX add new best (1, 4) is not 7 7 7
INFO:root:XX add new best (1, 4) is not 7 7 7
INFO:root:XX add new best (1, 4) is not 7 7 7
INFO:root:XX add new best (1, 4) is not 7 7 7
INFO:root:XX add new best (1, 4) is not 7 7 7
INFO:root:XX add new best (1, 4) is not 7 7 7
INFO:root:XX add new best (1, 4) is not 7 7 7
INFO:root:XX add new best (1, 4) is not 7 7 7
INFO:root:XX add new best (1, 4) is not 7 7 7
INFO:root:XX add new best (1, 4) is not 7 7 7
INFO:root:XX add new best (1, 4) is not 7 7 7
INFO:root:XX add new best (1, 4) is not 7 7 7
INFO:root:XX add new best (1, 4) is not 7 7 7
INFO:root:XX add new best (1, 4) is not 7 7 7
INFO:root:XX add new best (1, 4) is not 7 7 7
INFO:root:XX add new best (1, 4) is not 7 7 7
INFO:root:XX add new best (1, 4) is not 7 7 7
INFO:root:XX add new best (1, 4) is not 7 7 7
INFO:root:XX add new best (1, 4) is not 7 7 7
INFO:root:XX add new best (1, 4) is not 7 7 7
INFO:root:XX add new best (1, 4) is not 7 7 7
INFO:root:XX add new best (1, 4) is not 7 7 7
INFO:root:XX add new best (1, 4) is not 7 7 7
INFO:root:XX add new best (1, 4) is not 7 7 7
INFO:root:XX add new best (1, 4) is not 7 7 7
INFO:root:XX add new best (1, 4) is not 7 7 7
INFO:root:XX add new best (1, 4) is not 7 7 7
INFO:root:XX add new best (1, 4) is not 7 7 7
INFO:root:XX add new best (1, 4) is not 7 7 7
INFO:root:XX add new best (1, 4) is not 7 7 7
INFO:root:XX add new best (1, 4) is not 7 7 7
INFO:root:XX add new best (1, 4) is not 7 7 7
INFO:root:XX add new best (1, 4) is not 7 7 7
INFO:root:XX add new best (1, 4) is not 7 7 7
INFO:root:XX add new best (1, 4) is not 7 7 7
INFO:root:XX add new best (1, 4) is not 7 7 7
INFO:root:XX add new best (1, 4) is not 7 7 7
INFO:root:XX add new best (1, 4) is not 7 7 7
INFO:root:XX add new best (1, 4) is not 7 7 7
INFO:root:XX add new best (1, 4) is not 7 7 7
INFO:root:XX add new best (1, 4) is not 7 7 7
INFO:root:XX add new best (1, 4) is not 7 7 7
INFO:root:XX add new best (1, 4) is not 7 7 7
INFO:root:XX add new best (1, 4) is not 7 7 7
INFO:root:XX add new best (1, 4) is not 7 7 7
INFO:root:XX add new best (1, 4) is not 7 7 7
INFO:root:XX add new best (1, 4) is not 7 7 7
INFO:root:XX add new best (1, 4) is not 7 7 7
INFO:root:XX add new best (1, 4) is not 7 7 7
INFO:root:XX add new best (1, 4) is not 7 7 7
INFO:root:XX add new best (1, 4) is not 7 7 7
INFO:root:XX add new best (1, 4) is not 7 7 7
INFO:root:XX add new best (1, 4) is not 7 7 7
INFO:root:XX add new best (1, 4) is not 7 7 7
INFO:root:XX add new best (1, 4) is not 7 7 7
INFO:root:XX add new best (1, 4) is not 7 7 7
INFO:root:XX add new best (1, 4) is not 7 7 7
INFO:root:XX add new best (1, 4) is not 7 7 7
INFO:root:XX add new best (1, 4) is not 7 7 7
INFO:root:XX add new best (1, 4) is not 7 7 7
INFO:root:XX add new best (1, 4) is not 7 7 7
INFO:root:Considering 100 * 1 jobs for minsize=7
INFO:root:Chunked 100 in [9, 9, 9, 9, 8, 8, 8, 8, 8, 8, 8, 8]
INFO:root:XX add new best (1, 4) is not 7 7 7
INFO:root:XX add new best (1, 4) is not 7 7 7
INFO:root:XX add new best (1, 4) is not 7 7 7
INFO:root:XX add new best (1, 4) is not 7 7 7
INFO:root:XX add new best (1, 4) is not 7 7 7
INFO:root:XX add new best (1, 4) is not 7 7 7
INFO:root:XX add new best (1, 4) is not 7 7 7
INFO:root:XX add new best (1, 4) is not 7 7 7
INFO:root:XX add new best (1, 4) is not 7 7 7
INFO:root:XX add new best (1, 4) is not 7 7 7
INFO:root:XX add new best (1, 4) is not 7 7 7
INFO:root:XX add new best (1, 4) is not 7 7 7
INFO:root:XX add new best (1, 4) is not 7 7 7
INFO:root:XX add new best (1, 4) is not 7 7 7
INFO:root:XX add new best (1, 4) is not 7 7 7
INFO:root:XX add new best (1, 4) is not 7 7 7
INFO:root:XX add new best (1, 4) is not 7 7 7
INFO:root:XX add new best (1, 4) is not 7 7 7
INFO:root:XX add new best (1, 4) is not 7 7 7
INFO:root:XX add new best (1, 4) is not 7 7 7
INFO:root:XX add new best (1, 4) is not 7 7 7
INFO:root:XX add new best (1, 4) is not 7 7 7
INFO:root:XX add new best (1, 4) is not 7 7 7
INFO:root:XX add new best (1, 4) is not 7 7 7
INFO:root:XX add new best (1, 4) is not 7 7 7
INFO:root:XX add new best (1, 4) is not 7 7 7
INFO:root:XX add new best (1, 4) is not 7 7 7
INFO:root:XX add new best (1, 4) is not 7 7 7
INFO:root:XX add new best (1, 4) is not 7 7 7
INFO:root:XX add new best (1, 4) is not 7 7 7
INFO:root:XX add new best (1, 4) is not 7 7 7
INFO:root:XX add new best (1, 4) is not 7 7 7
INFO:root:XX add new best (1, 4) is not 7 7 7
INFO:root:XX add new best (1, 4) is not 7 7 7
INFO:root:XX add new best (1, 4) is not 7 7 7
INFO:root:XX add new best (1, 4) is not 7 7 7
INFO:root:XX add new best (1, 4) is not 7 7 7
INFO:root:XX add new best (1, 4) is not 7 7 7
INFO:root:XX add new best (1, 4) is not 7 7 7
INFO:root:XX add new best (1, 4) is not 7 7 7
INFO:root:XX add new best (1, 4) is not 7 7 7
INFO:root:XX add new best (1, 4) is not 7 7 7
INFO:root:XX add new best (1, 4) is not 7 7 7
INFO:root:XX add new best (1, 4) is not 7 7 7
INFO:root:XX add new best (1, 4) is not 7 7 7
INFO:root:XX add new best (1, 4) is not 7 7 7
INFO:root:XX add new best (1, 4) is not 7 7 7
INFO:root:XX add new best (1, 4) is not 7 7 7
INFO:root:XX add new best (1, 4) is not 7 7 7
INFO:root:XX add new best (1, 4) is not 7 7 7
INFO:root:XX add new best (1, 4) is not 7 7 7
INFO:root:XX add new best (1, 4) is not 7 7 7
INFO:root:XX add new best (1, 4) is not 7 7 7
INFO:root:XX add new best (1, 4) is not 7 7 7
INFO:root:XX add new best (1, 4) is not 7 7 7
INFO:root:XX add new best (1, 4) is not 7 7 7
INFO:root:XX add new best (1, 4) is not 7 7 7
INFO:root:XX add new best (1, 4) is not 7 7 7
INFO:root:XX add new best (1, 4) is not 7 7 7
INFO:root:XX add new best (1, 4) is not 7 7 7
INFO:root:XX add new best (1, 4) is not 7 7 7
INFO:root:XX add new best (1, 4) is not 7 7 7
INFO:root:XX add new best (1, 4) is not 7 7 7
INFO:root:XX add new best (1, 4) is not 7 7 7
INFO:root:XX add new best (1, 4) is not 7 7 7
INFO:root:XX add new best (1, 4) is not 7 7 7
INFO:root:XX add new best (1, 4) is not 7 7 7
INFO:root:XX add new best (1, 4) is not 7 7 7
INFO:root:XX add new best (1, 4) is not 7 7 7
INFO:root:XX add new best (1, 4) is not 7 7 7
INFO:root:XX add new best (1, 4) is not 7 7 7
INFO:root:XX add new best (1, 4) is not 7 7 7
INFO:root:XX add new best (1, 4) is not 7 7 7
INFO:root:XX add new best (1, 4) is not 7 7 7
INFO:root:XX add new best (1, 4) is not 7 7 7
INFO:root:XX add new best (1, 4) is not 7 7 7
INFO:root:XX add new best (1, 4) is not 7 7 7
INFO:root:XX add new best (1, 4) is not 7 7 7
INFO:root:XX add new best (1, 4) is not 7 7 7
INFO:root:XX add new best (1, 4) is not 7 7 7
INFO:root:XX add new best (1, 4) is not 7 7 7
INFO:root:XX add new best (1, 4) is not 7 7 7
INFO:root:XX add new best (1, 4) is not 7 7 7
INFO:root:XX add new best (1, 4) is not 7 7 7
INFO:root:XX add new best (1, 4) is not 7 7 7
INFO:root:XX add new best (1, 4) is not 7 7 7
INFO:root:XX add new best (1, 4) is not 7 7 7
INFO:root:XX add new best (1, 4) is not 7 7 7
INFO:root:XX add new best (1, 4) is not 7 7 7
INFO:root:XX add new best (1, 4) is not 7 7 7
INFO:root:XX add new best (1, 4) is not 7 7 7
INFO:root:XX add new best (1, 4) is not 7 7 7
INFO:root:XX add new best (1, 4) is not 7 7 7
INFO:root:XX add new best (1, 4) is not 7 7 7
INFO:root:XX add new best (1, 4) is not 7 7 7
INFO:root:XX add new best (1, 4) is not 7 7 7
INFO:root:XX add new best (1, 4) is not 7 7 7
INFO:root:XX add new best (1, 4) is not 7 7 7
INFO:root:XX add new best (1, 4) is not 7 7 7
INFO:root:XX add new best (1, 4) is not 7 7 7
INFO:root:Trace: [(7, [(1, 4) is not 7])]
INFO:root:Trace Quality: [(7, 1)]
INFO:root:Trace Sorted: [(7, 1)]
INFO:root:Finished
INFO:root:Full Trace [(7, [(1, 4) is not 7])]
INFO:root:Trying {'prechopMUSes': True}
INFO:root:Starting Step 1
INFO:root:Current state [[[[1, 4, 6, 7], [8], [5, 6, 7], [1, 2, 4, 5, 7], [9], [1, 2], [2, 4, 7], [3], [2, 4]], [[1, 4, 7], [3], [5, 7], [1, 2, 4, 5, 7], [1, 2, 7, 8], [1, 2, 8], [2, 4, 7], [6], [9]], [[9], [4, 7], [2], [4, 7], [6], [3], [1], [5], [8]], [[6, 7], [2], [6, 7], [8], [1, 3], [4], [5], [9], [1, 3]], [[8], [5], [1], [9], [2, 3], [7], [2, 3], [4], [6]], [[3], [9], [4], [6], [1, 2], [5], [8], [7], [1, 2]], [[5], [6], [3], [1, 2], [4], [1, 2], [9], [8], [7]], [[2], [4, 7], [7, 8, 9], [3, 7], [3, 7, 8], [6, 8, 9], [3, 4, 6], [1], [5]], [[4, 7], [1], [7, 8, 9], [3, 7], [5], [6, 8, 9], [3, 4, 6], [2], [3, 4]]]]
INFO:root:Doing checkSmall1
INFO:root:Getting tiny MUSes, distance 1, for 1 puzlits, 1 repeats
INFO:root:Chunked 1 in [1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
INFO:root:Doing checkSmall2
INFO:root:Getting tiny MUSes, distance 2, for 1 puzlits, 1 repeats
INFO:root:Chunked 1 in [1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
INFO:root:Considering 100 * 1 jobs for minsize=3
INFO:root:Chunked 100 in [9, 9, 9, 9, 8, 8, 8, 8, 8, 8, 8, 8]
INFO:root:Considering 100 * 1 jobs for minsize=4
INFO:root:Chunked 100 in [9, 9, 9, 9, 8, 8, 8, 8, 8, 8, 8, 8]
INFO:root:XX found first (1, 4) is not 7 5
INFO:root:XX add new best (1, 4) is not 7 5 5
INFO:root:XX add new best (1, 4) is not 7 5 5
INFO:root:XX add new best (1, 4) is not 7 5 5
INFO:root:XX add new best (1, 4) is not 7 5 5
INFO:root:XX add new best (1, 4) is not 7 5 5
INFO:root:XX add new best (1, 4) is not 7 5 5
INFO:root:XX add new best (1, 4) is not 7 5 5
INFO:root:XX add new best (1, 4) is not 7 5 5
INFO:root:XX add new best (1, 4) is not 7 5 5
INFO:root:XX add new best (1, 4) is not 7 5 5
INFO:root:XX add new best (1, 4) is not 7 5 5
INFO:root:Considering 100 * 1 jobs for minsize=5
INFO:root:Chunked 100 in [9, 9, 9, 9, 8, 8, 8, 8, 8, 8, 8, 8]
INFO:root:XX add new best (1, 4) is not 7 5 5
INFO:root:XX add new best (1, 4) is not 7 5 5
INFO:root:XX add new best (1, 4) is not 7 5 5
INFO:root:XX add new best (1, 4) is not 7 5 5
INFO:root:XX add new best (1, 4) is not 7 5 5
INFO:root:XX add new best (1, 4) is not 7 5 5
INFO:root:XX add new best (1, 4) is not 7 5 5
INFO:root:XX add new best (1, 4) is not 7 5 5
INFO:root:XX add new best (1, 4) is not 7 5 5
INFO:root:XX add new best (1, 4) is not 7 5 5
INFO:root:XX add new best (1, 4) is not 7 5 5
INFO:root:XX add new best (1, 4) is not 7 5 5
INFO:root:XX add new best (1, 4) is not 7 5 5
INFO:root:XX add new best (1, 4) is not 7 5 5
INFO:root:XX add new best (1, 4) is not 7 5 5
INFO:root:XX add new best (1, 4) is not 7 5 5
INFO:root:XX add new best (1, 4) is not 7 5 5
INFO:root:Trace: [(5, [(1, 4) is not 7])]
INFO:root:Trace Quality: [(5, 1)]
INFO:root:Trace Sorted: [(5, 1)]
INFO:root:Finished
INFO:root:Full Trace [(5, [(1, 4) is not 7])]
INFO:root:Trying {'quarterChopMUS': True}
INFO:root:Starting Step 1
INFO:root:Current state [[[[1, 4, 6, 7], [8], [5, 6, 7], [1, 2, 4, 5, 7], [9], [1, 2], [2, 4, 7], [3], [2, 4]], [[1, 4, 7], [3], [5, 7], [1, 2, 4, 5, 7], [1, 2, 7, 8], [1, 2, 8], [2, 4, 7], [6], [9]], [[9], [4, 7], [2], [4, 7], [6], [3], [1], [5], [8]], [[6, 7], [2], [6, 7], [8], [1, 3], [4], [5], [9], [1, 3]], [[8], [5], [1], [9], [2, 3], [7], [2, 3], [4], [6]], [[3], [9], [4], [6], [1, 2], [5], [8], [7], [1, 2]], [[5], [6], [3], [1, 2], [4], [1, 2], [9], [8], [7]], [[2], [4, 7], [7, 8, 9], [3, 7], [3, 7, 8], [6, 8, 9], [3, 4, 6], [1], [5]], [[4, 7], [1], [7, 8, 9], [3, 7], [5], [6, 8, 9], [3, 4, 6], [2], [3, 4]]]]
INFO:root:Doing checkSmall1
INFO:root:Getting tiny MUSes, distance 1, for 1 puzlits, 1 repeats
INFO:root:Chunked 1 in [1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
INFO:root:Doing checkSmall2
INFO:root:Getting tiny MUSes, distance 2, for 1 puzlits, 1 repeats
INFO:root:Chunked 1 in [1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
INFO:root:Considering 100 * 1 jobs for minsize=3
INFO:root:Chunked 100 in [9, 9, 9, 9, 8, 8, 8, 8, 8, 8, 8, 8]
INFO:root:Considering 100 * 1 jobs for minsize=4
INFO:root:Chunked 100 in [9, 9, 9, 9, 8, 8, 8, 8, 8, 8, 8, 8]
INFO:root:XX found first (1, 4) is not 7 5
INFO:root:XX add new best (1, 4) is not 7 5 5
INFO:root:XX add new best (1, 4) is not 7 5 5
INFO:root:XX add new best (1, 4) is not 7 5 5
INFO:root:XX add new best (1, 4) is not 7 5 5
INFO:root:XX add new best (1, 4) is not 7 5 5
INFO:root:XX add new best (1, 4) is not 7 5 5
INFO:root:XX add new best (1, 4) is not 7 5 5
INFO:root:XX add new best (1, 4) is not 7 5 5
INFO:root:XX add new best (1, 4) is not 7 5 5
INFO:root:XX add new best (1, 4) is not 7 5 5
INFO:root:XX add new best (1, 4) is not 7 5 5
INFO:root:XX add new best (1, 4) is not 7 5 5
INFO:root:XX add new best (1, 4) is not 7 5 5
INFO:root:XX add new best (1, 4) is not 7 5 5
INFO:root:XX add new best (1, 4) is not 7 5 5
INFO:root:XX add new best (1, 4) is not 7 5 5
INFO:root:Considering 100 * 1 jobs for minsize=5
INFO:root:Chunked 100 in [9, 9, 9, 9, 8, 8, 8, 8, 8, 8, 8, 8]
INFO:root:XX add new best (1, 4) is not 7 5 5
INFO:root:XX add new best (1, 4) is not 7 5 5
INFO:root:XX add new best (1, 4) is not 7 5 5
INFO:root:XX add new best (1, 4) is not 7 5 5
INFO:root:XX add new best (1, 4) is not 7 5 5
INFO:root:XX add new best (1, 4) is not 7 5 5
INFO:root:XX add new best (1, 4) is not 7 5 5
INFO:root:XX add new best (1, 4) is not 7 5 5
INFO:root:XX add new best (1, 4) is not 7 5 5
INFO:root:XX add new best (1, 4) is not 7 5 5
INFO:root:XX add new best (1, 4) is not 7 5 5
INFO:root:XX add new best (1, 4) is not 7 5 5
INFO:root:XX add new best (1, 4) is not 7 5 5
INFO:root:XX add new best (1, 4) is not 7 5 5
INFO:root:XX add new best (1, 4) is not 7 5 5
INFO:root:XX add new best (1, 4) is not 7 5 5
INFO:root:XX add new best (1, 4) is not 7 5 5
INFO:root:XX add new best (1, 4) is not 7 5 5
INFO:root:XX add new best (1, 4) is not 7 5 5
INFO:root:Trace: [(5, [(1, 4) is not 7])]
INFO:root:Trace Quality: [(5, 1)]
INFO:root:Trace Sorted: [(5, 1)]
INFO:root:Finished
INFO:root:Full Trace [(5, [(1, 4) is not 7])]
INFO:root:Trying {'minPrecheckMUS': True}
INFO:root:Starting Step 1
INFO:root:Current state [[[[1, 4, 6, 7], [8], [5, 6, 7], [1, 2, 4, 5, 7], [9], [1, 2], [2, 4, 7], [3], [2, 4]], [[1, 4, 7], [3], [5, 7], [1, 2, 4, 5, 7], [1, 2, 7, 8], [1, 2, 8], [2, 4, 7], [6], [9]], [[9], [4, 7], [2], [4, 7], [6], [3], [1], [5], [8]], [[6, 7], [2], [6, 7], [8], [1, 3], [4], [5], [9], [1, 3]], [[8], [5], [1], [9], [2, 3], [7], [2, 3], [4], [6]], [[3], [9], [4], [6], [1, 2], [5], [8], [7], [1, 2]], [[5], [6], [3], [1, 2], [4], [1, 2], [9], [8], [7]], [[2], [4, 7], [7, 8, 9], [3, 7], [3, 7, 8], [6, 8, 9], [3, 4, 6], [1], [5]], [[4, 7], [1], [7, 8, 9], [3, 7], [5], [6, 8, 9], [3, 4, 6], [2], [3, 4]]]]
INFO:root:Doing checkSmall1
INFO:root:Getting tiny MUSes, distance 1, for 1 puzlits, 1 repeats
INFO:root:Chunked 1 in [1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
INFO:root:Doing checkSmall2
INFO:root:Getting tiny MUSes, distance 2, for 1 puzlits, 1 repeats
INFO:root:Chunked 1 in [1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
INFO:root:Considering 100 * 1 jobs for minsize=3
INFO:root:Chunked 100 in [9, 9, 9, 9, 8, 8, 8, 8, 8, 8, 8, 8]
INFO:root:Considering 100 * 1 jobs for minsize=4
INFO:root:Chunked 100 in [9, 9, 9, 9, 8, 8, 8, 8, 8, 8, 8, 8]
INFO:root:XX found first (1, 4) is not 7 5
INFO:root:XX add new best (1, 4) is not 7 5 5
INFO:root:XX add new best (1, 4) is not 7 5 5
INFO:root:XX add new best (1, 4) is not 7 5 5
INFO:root:XX add new best (1, 4) is not 7 5 5
INFO:root:XX add new best (1, 4) is not 7 5 5
INFO:root:XX add new best (1, 4) is not 7 5 5
INFO:root:XX add new best (1, 4) is not 7 5 5
INFO:root:XX add new best (1, 4) is not 7 5 5
INFO:root:XX add new best (1, 4) is not 7 5 5
INFO:root:Considering 100 * 1 jobs for minsize=5
INFO:root:Chunked 100 in [9, 9, 9, 9, 8, 8, 8, 8, 8, 8, 8, 8]
INFO:root:XX add new best (1, 4) is not 7 5 5
INFO:root:XX add new best (1, 4) is not 7 5 5
INFO:root:XX add new best (1, 4) is not 7 5 5
INFO:root:XX add new best (1, 4) is not 7 5 5
INFO:root:XX add new best (1, 4) is not 7 5 5
INFO:root:XX add new best (1, 4) is not 7 5 5
INFO:root:XX add new best (1, 4) is not 7 5 5
INFO:root:XX add new best (1, 4) is not 7 5 5
INFO:root:XX add new best (1, 4) is not 7 5 5
INFO:root:Trace: [(5, [(1, 4) is not 7])]
INFO:root:Trace Quality: [(5, 1)]
INFO:root:Trace Sorted: [(5, 1)]
INFO:root:Finished
INFO:root:Full Trace [(5, [(1, 4) is not 7])]
INFO:root:Trying {'gallopingMUSes': True}
INFO:root:Starting Step 1
INFO:root:Current state [[[[1, 4, 6, 7], [8], [5, 6, 7], [1, 2, 4, 5, 7], [9], [1, 2], [2, 4, 7], [3], [2, 4]], [[1, 4, 7], [3], [5, 7], [1, 2, 4, 5, 7], [1, 2, 7, 8], [1, 2, 8], [2, 4, 7], [6], [9]], [[9], [4, 7], [2], [4, 7], [6], [3], [1], [5], [8]], [[6, 7], [2], [6, 7], [8], [1, 3], [4], [5], [9], [1, 3]], [[8], [5], [1], [9], [2, 3], [7], [2, 3], [4], [6]], [[3], [9], [4], [6], [1, 2], [5], [8], [7], [1, 2]], [[5], [6], [3], [1, 2], [4], [1, 2], [9], [8], [7]], [[2], [4, 7], [7, 8, 9], [3, 7], [3, 7, 8], [6, 8, 9], [3, 4, 6], [1], [5]], [[4, 7], [1], [7, 8, 9], [3, 7], [5], [6, 8, 9], [3, 4, 6], [2], [3, 4]]]]
INFO:root:Doing checkSmall1
INFO:root:Getting tiny MUSes, distance 1, for 1 puzlits, 1 repeats
INFO:root:Chunked 1 in [1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
INFO:root:Doing checkSmall2
INFO:root:Getting tiny MUSes, distance 2, for 1 puzlits, 1 repeats
INFO:root:Chunked 1 in [1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
INFO:root:Considering 100 * 1 jobs for minsize=3
INFO:root:Chunked 100 in [9, 9, 9, 9, 8, 8, 8, 8, 8, 8, 8, 8]
INFO:root:Considering 100 * 1 jobs for minsize=4
INFO:root:Chunked 100 in [9, 9, 9, 9, 8, 8, 8, 8, 8, 8, 8, 8]
INFO:root:XX found first (1, 4) is not 7 5
INFO:root:XX add new best (1, 4) is not 7 5 5
INFO:root:XX add new best (1, 4) is not 7 5 5
INFO:root:XX add new best (1, 4) is not 7 5 5
INFO:root:XX add new best (1, 4) is not 7 5 5
INFO:root:XX add new best (1, 4) is not 7 5 5
INFO:root:XX add new best (1, 4) is not 7 5 5
INFO:root:Considering 100 * 1 jobs for minsize=5
INFO:root:Chunked 100 in [9, 9, 9, 9, 8, 8, 8, 8, 8, 8, 8, 8]
INFO:root:XX add new best (1, 4) is not 7 5 5
INFO:root:XX add new best (1, 4) is not 7 5 5
INFO:root:XX add new best (1, 4) is not 7 5 5
INFO:root:XX add new best (1, 4) is not 7 5 5
INFO:root:XX add new best (1, 4) is not 7 5 5
INFO:root:XX add new best (1, 4) is not 7 5 5
INFO:root:XX add new best (1, 4) is not 7 5 5
INFO:root:Trace: [(5, [(1, 4) is not 7])]
INFO:root:Trace Quality: [(5, 1)]
INFO:root:Trace Sorted: [(5, 1)]
INFO:root:Finished
INFO:root:Full Trace [(5, [(1, 4) is not 7])]
INFO:root:Trying {'minPrecheckStepsMUS': True}
INFO:root:Starting Step 1
INFO:root:Current state [[[[1, 4, 6, 7], [8], [5, 6, 7], [1, 2, 4, 5, 7], [9], [1, 2], [2, 4, 7], [3], [2, 4]], [[1, 4, 7], [3], [5, 7], [1, 2, 4, 5, 7], [1, 2, 7, 8], [1, 2, 8], [2, 4, 7], [6], [9]], [[9], [4, 7], [2], [4, 7], [6], [3], [1], [5], [8]], [[6, 7], [2], [6, 7], [8], [1, 3], [4], [5], [9], [1, 3]], [[8], [5], [1], [9], [2, 3], [7], [2, 3], [4], [6]], [[3], [9], [4], [6], [1, 2], [5], [8], [7], [1, 2]], [[5], [6], [3], [1, 2], [4], [1, 2], [9], [8], [7]], [[2], [4, 7], [7, 8, 9], [3, 7], [3, 7, 8], [6, 8, 9], [3, 4, 6], [1], [5]], [[4, 7], [1], [7, 8, 9], [3, 7], [5], [6, 8, 9], [3, 4, 6], [2], [3, 4]]]]
INFO:root:Doing checkSmall1
INFO:root:Getting tiny MUSes, distance 1, for 1 puzlits, 1 repeats
INFO:root:Chunked 1 in [1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
INFO:root:Doing checkSmall2
INFO:root:Getting tiny MUSes, distance 2, for 1 puzlits, 1 repeats
INFO:root:Chunked 1 in [1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
INFO:root:Considering 100 * 1 jobs for minsize=3
INFO:root:Chunked 100 in [9, 9, 9, 9, 8, 8, 8, 8, 8, 8, 8, 8]
INFO:root:Considering 100 * 1 jobs for minsize=4
INFO:root:Chunked 100 in [9, 9, 9, 9, 8, 8, 8, 8, 8, 8, 8, 8]
INFO:root:XX found first (1, 4) is not 7 5
INFO:root:XX add new best (1, 4) is not 7 5 5
INFO:root:XX add new best (1, 4) is not 7 5 5
INFO:root:XX add new best (1, 4) is not 7 5 5
INFO:root:XX add new best (1, 4) is not 7 5 5
INFO:root:XX add new best (1, 4) is not 7 5 5
INFO:root:XX add new best (1, 4) is not 7 5 5
INFO:root:XX add new best (1, 4) is not 7 5 5
INFO:root:XX add new best (1, 4) is not 7 5 5
INFO:root:XX add new best (1, 4) is not 7 5 5
INFO:root:Considering 100 * 1 jobs for minsize=5
INFO:root:Chunked 100 in [9, 9, 9, 9, 8, 8, 8, 8, 8, 8, 8, 8]
INFO:root:XX add new best (1, 4) is not 7 5 5
INFO:root:XX add new best (1, 4) is not 7 5 5
INFO:root:XX add new best (1, 4) is not 7 5 5
INFO:root:XX add new best (1, 4) is not 7 5 5
INFO:root:XX add new best (1, 4) is not 7 5 5
INFO:root:XX add new best (1, 4) is not 7 5 5
INFO:root:XX add new best (1, 4) is not 7 5 5
INFO:root:XX add new best (1, 4) is not 7 5 5
INFO:root:XX add new best (1, 4) is not 7 5 5
INFO:root:Trace: [(5, [(1, 4) is not 7])]
INFO:root:Trace Quality: [(5, 1)]
INFO:root:Trace Sorted: [(5, 1)]
INFO:root:Finished
INFO:root:Full Trace [(5, [(1, 4) is not 7])]
INFO:root:Trying {'gallopingMUSes': True, 'minPrecheckMUS': True}
INFO:root:Starting Step 1
INFO:root:Current state [[[[1, 4, 6, 7], [8], [5, 6, 7], [1, 2, 4, 5, 7], [9], [1, 2], [2, 4, 7], [3], [2, 4]], [[1, 4, 7], [3], [5, 7], [1, 2, 4, 5, 7], [1, 2, 7, 8], [1, 2, 8], [2, 4, 7], [6], [9]], [[9], [4, 7], [2], [4, 7], [6], [3], [1], [5], [8]], [[6, 7], [2], [6, 7], [8], [1, 3], [4], [5], [9], [1, 3]], [[8], [5], [1], [9], [2, 3], [7], [2, 3], [4], [6]], [[3], [9], [4], [6], [1, 2], [5], [8], [7], [1, 2]], [[5], [6], [3], [1, 2], [4], [1, 2], [9], [8], [7]], [[2], [4, 7], [7, 8, 9], [3, 7], [3, 7, 8], [6, 8, 9], [3, 4, 6], [1], [5]], [[4, 7], [1], [7, 8, 9], [3, 7], [5], [6, 8, 9], [3, 4, 6], [2], [3, 4]]]]
INFO:root:Doing checkSmall1
INFO:root:Getting tiny MUSes, distance 1, for 1 puzlits, 1 repeats
INFO:root:Chunked 1 in [1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
INFO:root:Doing checkSmall2
INFO:root:Getting tiny MUSes, distance 2, for 1 puzlits, 1 repeats
INFO:root:Chunked 1 in [1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
INFO:root:Considering 100 * 1 jobs for minsize=3
INFO:root:Chunked 100 in [9, 9, 9, 9, 8, 8, 8, 8, 8, 8, 8, 8]
INFO:root:Considering 100 * 1 jobs for minsize=4
INFO:root:Chunked 100 in [9, 9, 9, 9, 8, 8, 8, 8, 8, 8, 8, 8]
INFO:root:XX found first (1, 4) is not 7 5
INFO:root:XX add new best (1, 4) is not 7 5 5
INFO:root:XX add new best (1, 4) is not 7 5 5
INFO:root:XX add new best (1, 4) is not 7 5 5
INFO:root:XX add new best (1, 4) is not 7 5 5
INFO:root:XX add new best (1, 4) is not 7 5 5
INFO:root:XX add new best (1, 4) is not 7 5 5
INFO:root:XX add new best (1, 4) is not 7 5 5
INFO:root:XX add new best (1, 4) is not 7 5 5
INFO:root:XX add new best (1, 4) is not 7 5 5
INFO:root:Considering 100 * 1 jobs for minsize=5
INFO:root:Chunked 100 in [9, 9, 9, 9, 8, 8, 8, 8, 8, 8, 8, 8]
INFO:root:XX add new best (1, 4) is not 7 5 5
INFO:root:XX add new best (1, 4) is not 7 5 5
INFO:root:XX add new best (1, 4) is not 7 5 5
INFO:root:XX add new best (1, 4) is not 7 5 5
INFO:root:XX add new best (1, 4) is not 7 5 5
INFO:root:XX add new best (1, 4) is not 7 5 5
INFO:root:XX add new best (1, 4) is not 7 5 5
INFO:root:XX add new best (1, 4) is not 7 5 5
INFO:root:XX add new best (1, 4) is not 7 5 5
INFO:root:Trace: [(5, [(1, 4) is not 7])]
INFO:root:Trace Quality: [(5, 1)]
INFO:root:Trace Sorted: [(5, 1)]
INFO:root:Finished
INFO:root:Full Trace [(5, [(1, 4) is not 7])]
INFO:root:Trying {}
INFO:root:Starting Step 1
INFO:root:Current state [[[[3, 6], [7], [1, 6], [4], [1, 3, 5], [8], [1, 3, 5], [2], [9]], [[3, 6, 9], [1, 6, 9], [2], [1, 5, 7, 9], [1, 3, 5], [5, 6, 7, 9], [1, 3, 5, 8], [3, 5, 6, 8], [4]], [[8], [5], [4], [1, 9], [2], [6, 9], [1, 3], [3, 6], [7]], [[5, 6, 9], [1, 6, 9], [8], [3], [7], [4], [2], [5, 9], [1, 6]], [[4, 5, 6, 7, 9], [2], [1, 5, 6, 7, 9], [5, 8, 9], [5, 8], [5, 9], [3, 5, 8, 9], [3, 4, 5, 8, 9], [1, 6]], [[4, 5, 9], [4, 9], [3], [2], [6], [1], [7], [4, 5, 8, 9], [5, 8]], [[4, 5, 7], [4, 8], [5, 7], [5, 7, 8], [9], [3], [6], [1], [2]], [[2], [6, 8, 9], [5, 6, 7, 9], [1, 5, 7, 8], [1, 5, 8], [5, 7], [4], [5, 8, 9], [3]], [[1], [3], [5, 9], [6], [4], [2], [5, 8, 9], [7], [5, 8]]]]
INFO:root:Doing checkSmall1
INFO:root:Getting tiny MUSes, distance 1, for 1 puzlits, 1 repeats
INFO:root:Chunked 1 in [1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
INFO:root:Doing checkSmall2
INFO:root:Getting tiny MUSes, distance 2, for 1 puzlits, 1 repeats
INFO:root:Chunked 1 in [1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
INFO:root:Considering 100 * 1 jobs for minsize=3
INFO:root:Chunked 100 in [9, 9, 9, 9, 8, 8, 8, 8, 8, 8, 8, 8]
INFO:root:XX found first (5, 1) is not 5 4
INFO:root:XX add new best (5, 1) is not 5 4 4
INFO:root:XX add new best (5, 1) is not 5 4 4
INFO:root:XX add new best (5, 1) is not 5 4 4
INFO:root:XX add new best (5, 1) is not 5 4 4
INFO:root:XX add new best (5, 1) is not 5 4 4
INFO:root:XX add new best (5, 1) is not 5 4 4
INFO:root:XX add new best (5, 1) is not 5 4 4
INFO:root:XX add new best (5, 1) is not 5 4 4
INFO:root:XX add new best (5, 1) is not 5 4 4
INFO:root:XX add new best (5, 1) is not 5 4 4
INFO:root:XX add new best (5, 1) is not 5 4 4
INFO:root:XX add new best (5, 1) is not 5 4 4
INFO:root:XX add new best (5, 1) is not 5 4 4
INFO:root:XX add new best (5, 1) is not 5 4 4
INFO:root:XX add new best (5, 1) is not 5 4 4
INFO:root:XX add new best (5, 1) is not 5 4 4
INFO:root:XX add new best (5, 1) is not 5 4 4
INFO:root:XX add new best (5, 1) is not 5 4 4
INFO:root:XX add new best (5, 1) is not 5 4 4
INFO:root:XX add new best (5, 1) is not 5 4 4
INFO:root:XX add new best (5, 1) is not 5 4 4
INFO:root:XX add new best (5, 1) is not 5 4 4
INFO:root:XX add new best (5, 1) is not 5 4 4
INFO:root:XX add new best (5, 1) is not 5 4 4
INFO:root:XX add new best (5, 1) is not 5 4 4
INFO:root:XX add new best (5, 1) is not 5 4 4
INFO:root:XX add new best (5, 1) is not 5 4 4
INFO:root:XX add new best (5, 1) is not 5 4 4
INFO:root:XX add new best (5, 1) is not 5 4 4
INFO:root:XX add new best (5, 1) is not 5 4 4
INFO:root:XX add new best (5, 1) is not 5 4 4
INFO:root:XX add new best (5, 1) is not 5 4 4
INFO:root:XX add new best (5, 1) is not 5 4 4
INFO:root:XX add new best (5, 1) is not 5 4 4
INFO:root:XX add new best (5, 1) is not 5 4 4
INFO:root:XX add new best (5, 1) is not 5 4 4
INFO:root:XX add new best (5, 1) is not 5 4 4
INFO:root:XX add new best (5, 1) is not 5 4 4
INFO:root:XX add new best (5, 1) is not 5 4 4
INFO:root:XX add new best (5, 1) is not 5 4 4
INFO:root:XX add new best (5, 1) is not 5 4 4
INFO:root:XX add new best (5, 1) is not 5 4 4
INFO:root:XX add new best (5, 1) is not 5 4 4
INFO:root:XX add new best (5, 1) is not 5 4 4
INFO:root:XX add new best (5, 1) is not 5 4 4
INFO:root:XX add new best (5, 1) is not 5 4 4
INFO:root:XX add new best (5, 1) is not 5 4 4
INFO:root:XX add new best (5, 1) is not 5 4 4
INFO:root:XX add new best (5, 1) is not 5 4 4
INFO:root:XX add new best (5, 1) is not 5 4 4
INFO:root:XX add new best (5, 1) is not 5 4 4
INFO:root:XX add new best (5, 1) is not 5 4 4
INFO:root:XX add new best (5, 1) is not 5 4 4
INFO:root:XX add new best (5, 1) is not 5 4 4
INFO:root:XX add new best (5, 1) is not 5 4 4
INFO:root:XX add new best (5, 1) is not 5 4 4
INFO:root:XX add new best (5, 1) is not 5 4 4
INFO:root:XX add new best (5, 1) is not 5 4 4
INFO:root:XX add new best (5, 1) is not 5 4 4
INFO:root:XX add new best (5, 1) is not 5 4 4
INFO:root:XX add new best (5, 1) is not 5 4 4
INFO:root:XX add new best (5, 1) is not 5 4 4
INFO:root:XX add new best (5, 1) is not 5 4 4
INFO:root:XX add new best (5, 1) is not 5 4 4
INFO:root:XX add new best (5, 1) is not 5 4 4
INFO:root:XX add new best (5, 1) is not 5 4 4
INFO:root:XX add new best (5, 1) is not 5 4 4
INFO:root:XX add new best (5, 1) is not 5 4 4
INFO:root:XX add new best (5, 1) is not 5 4 4
INFO:root:XX add new best (5, 1) is not 5 4 4
INFO:root:XX add new best (5, 1) is not 5 4 4
INFO:root:XX add new best (5, 1) is not 5 4 4
INFO:root:XX add new best (5, 1) is not 5 4 4
INFO:root:XX add new best (5, 1) is not 5 4 4
INFO:root:XX add new best (5, 1) is not 5 4 4
INFO:root:XX add new best (5, 1) is not 5 4 4
INFO:root:XX add new best (5, 1) is not 5 4 4
INFO:root:XX add new best (5, 1) is not 5 4 4
INFO:root:XX add new best (5, 1) is not 5 4 4
INFO:root:XX add new best (5, 1) is not 5 4 4
INFO:root:XX add new best (5, 1) is not 5 4 4
INFO:root:XX add new best (5, 1) is not 5 4 4
INFO:root:XX add new best (5, 1) is not 5 4 4
INFO:root:XX add new best (5, 1) is not 5 4 4
INFO:root:XX add new best (5, 1) is not 5 4 4
INFO:root:XX add new best (5, 1) is not 5 4 4
INFO:root:XX add new best (5, 1) is not 5 4 4
INFO:root:XX add new best (5, 1) is not 5 4 4
INFO:root:XX add new best (5, 1) is not 5 4 4
INFO:root:XX add new best (5, 1) is not 5 4 4
INFO:root:XX add new best (5, 1) is not 5 4 4
INFO:root:XX add new best (5, 1) is not 5 4 4
INFO:root:XX add new best (5, 1) is not 5 4 4
INFO:root:XX add new best (5, 1) is not 5 4 4
INFO:root:XX add new best (5, 1) is not 5 4 4
INFO:root:XX add new best (5, 1) is not 5 4 4
INFO:root:XX add new best (5, 1) is not 5 4 4
INFO:root:XX add new best (5, 1) is not 5 4 4
INFO:root:XX add new best (5, 1) is not 5 4 4
INFO:root:Considering 100 * 1 jobs for minsize=4
INFO:root:Chunked 100 in [9, 9, 9, 9, 8, 8, 8, 8, 8, 8, 8, 8]
INFO:root:XX add new best (5, 1) is not 5 4 4
INFO:root:XX add new best (5, 1) is not 5 4 4
INFO:root:XX add new best (5, 1) is not 5 4 4
INFO:root:XX add new best (5, 1) is not 5 4 4
INFO:root:XX add new best (5, 1) is not 5 4 4
INFO:root:XX add new best (5, 1) is not 5 4 4
INFO:root:XX add new best (5, 1) is not 5 4 4
INFO:root:XX add new best (5, 1) is not 5 4 4
INFO:root:XX add new best (5, 1) is not 5 4 4
INFO:root:XX add new best (5, 1) is not 5 4 4
INFO:root:XX add new best (5, 1) is not 5 4 4
INFO:root:XX add new best (5, 1) is not 5 4 4
INFO:root:XX add new best (5, 1) is not 5 4 4
INFO:root:XX add new best (5, 1) is not 5 4 4
INFO:root:XX add new best (5, 1) is not 5 4 4
INFO:root:XX add new best (5, 1) is not 5 4 4
INFO:root:XX add new best (5, 1) is not 5 4 4
INFO:root:XX add new best (5, 1) is not 5 4 4
INFO:root:XX add new best (5, 1) is not 5 4 4
INFO:root:XX add new best (5, 1) is not 5 4 4
INFO:root:XX add new best (5, 1) is not 5 4 4
INFO:root:XX add new best (5, 1) is not 5 4 4
INFO:root:XX add new best (5, 1) is not 5 4 4
INFO:root:XX add new best (5, 1) is not 5 4 4
INFO:root:XX add new best (5, 1) is not 5 4 4
INFO:root:XX add new best (5, 1) is not 5 4 4
INFO:root:XX add new best (5, 1) is not 5 4 4
INFO:root:XX add new best (5, 1) is not 5 4 4
INFO:root:XX add new best (5, 1) is not 5 4 4
INFO:root:XX add new best (5, 1) is not 5 4 4
INFO:root:XX add new best (5, 1) is not 5 4 4
INFO:root:XX add new best (5, 1) is not 5 4 4
INFO:root:XX add new best (5, 1) is not 5 4 4
INFO:root:XX add new best (5, 1) is not 5 4 4
INFO:root:XX add new best (5, 1) is not 5 4 4
INFO:root:XX add new best (5, 1) is not 5 4 4
INFO:root:XX add new best (5, 1) is not 5 4 4
INFO:root:XX add new best (5, 1) is not 5 4 4
INFO:root:XX add new best (5, 1) is not 5 4 4
INFO:root:XX add new best (5, 1) is not 5 4 4
INFO:root:XX add new best (5, 1) is not 5 4 4
INFO:root:XX add new best (5, 1) is not 5 4 4
INFO:root:XX add new best (5, 1) is not 5 4 4
INFO:root:XX add new best (5, 1) is not 5 4 4
INFO:root:XX add new best (5, 1) is not 5 4 4
INFO:root:XX add new best (5, 1) is not 5 4 4
INFO:root:XX add new best (5, 1) is not 5 4 4
INFO:root:XX add new best (5, 1) is not 5 4 4
INFO:root:XX add new best (5, 1) is not 5 4 4
INFO:root:XX add new best (5, 1) is not 5 4 4
INFO:root:XX add new best (5, 1) is not 5 4 4
INFO:root:XX add new best (5, 1) is not 5 4 4
INFO:root:XX add new best (5, 1) is not 5 4 4
INFO:root:XX add new best (5, 1) is not 5 4 4
INFO:root:XX add new best (5, 1) is not 5 4 4
INFO:root:XX add new best (5, 1) is not 5 4 4
INFO:root:XX add new best (5, 1) is not 5 4 4
INFO:root:XX add new best (5, 1) is not 5 4 4
INFO:root:XX add new best (5, 1) is not 5 4 4
INFO:root:XX add new best (5, 1) is not 5 4 4
INFO:root:XX add new best (5, 1) is not 5 4 4
INFO:root:XX add new best (5, 1) is not 5 4 4
INFO:root:XX add new best (5, 1) is not 5 4 4
INFO:root:XX add new best (5, 1) is not 5 4 4
INFO:root:XX add new best (5, 1) is not 5 4 4
INFO:root:XX add new best (5, 1) is not 5 4 4
INFO:root:XX add new best (5, 1) is not 5 4 4
INFO:root:XX add new best (5, 1) is not 5 4 4
INFO:root:XX add new best (5, 1) is not 5 4 4
INFO:root:XX add new best (5, 1) is not 5 4 4
INFO:root:XX add new best (5, 1) is not 5 4 4
INFO:root:XX add new best (5, 1) is not 5 4 4
INFO:root:XX add new best (5, 1) is not 5 4 4
INFO:root:XX add new best (5, 1) is not 5 4 4
INFO:root:XX add new best (5, 1) is not 5 4 4
INFO:root:XX add new best (5, 1) is not 5 4 4
INFO:root:XX add new best (5, 1) is not 5 4 4
INFO:root:XX add new best (5, 1) is not 5 4 4
INFO:root:XX add new best (5, 1) is not 5 4 4
INFO:root:XX add new best (5, 1) is not 5 4 4
INFO:root:XX add new best (5, 1) is not 5 4 4
INFO:root:XX add new best (5, 1) is not 5 4 4
INFO:root:XX add new best (5, 1) is not 5 4 4
INFO:root:XX add new best (5, 1) is not 5 4 4
INFO:root:XX add new best (5, 1) is not 5 4 4
INFO:root:XX add new best (5, 1) is not 5 4 4
INFO:root:XX add new best (5, 1) is not 5 4 4
INFO:root:XX add new best (5, 1) is not 5 4 4
INFO:root:XX add new best (5, 1) is not 5 4 4
INFO:root:XX add new best (5, 1) is not 5 4 4
INFO:root:XX add new best (5, 1) is not 5 4 4
INFO:root:XX add new best (5, 1) is not 5 4 4
INFO:root:XX add new best (5, 1) is not 5 4 4
INFO:root:XX add new best (5, 1) is not 5 4 4
INFO:root:XX add new best (5, 1) is not 5 4 4
INFO:root:XX add new best (5, 1) is not 5 4 4
INFO:root:XX add new best (5, 1) is not 5 4 4
INFO:root:XX add new best (5, 1) is not 5 4 4
INFO:root:XX add new best (5, 1) is not 5 4 4
INFO:root:XX add new best (5, 1) is not 5 4 4
INFO:root:Trace: [(4, [(5, 1) is not 5])]
INFO:root:Trace Quality: [(4, 1)]
INFO:root:Trace Sorted: [(4, 1)]
INFO:root:Finished
INFO:root:Full Trace [(4, [(5, 1) is not 5])]
INFO:root:Trying {'prechopMUSes': True}
INFO:root:Starting Step 1
INFO:root:Current state [[[[3, 6], [7], [1, 6], [4], [1, 3, 5], [8], [1, 3, 5], [2], [9]], [[3, 6, 9], [1, 6, 9], [2], [1, 5, 7, 9], [1, 3, 5], [5, 6, 7, 9], [1, 3, 5, 8], [3, 5, 6, 8], [4]], [[8], [5], [4], [1, 9], [2], [6, 9], [1, 3], [3, 6], [7]], [[5, 6, 9], [1, 6, 9], [8], [3], [7], [4], [2], [5, 9], [1, 6]], [[4, 5, 6, 7, 9], [2], [1, 5, 6, 7, 9], [5, 8, 9], [5, 8], [5, 9], [3, 5, 8, 9], [3, 4, 5, 8, 9], [1, 6]], [[4, 5, 9], [4, 9], [3], [2], [6], [1], [7], [4, 5, 8, 9], [5, 8]], [[4, 5, 7], [4, 8], [5, 7], [5, 7, 8], [9], [3], [6], [1], [2]], [[2], [6, 8, 9], [5, 6, 7, 9], [1, 5, 7, 8], [1, 5, 8], [5, 7], [4], [5, 8, 9], [3]], [[1], [3], [5, 9], [6], [4], [2], [5, 8, 9], [7], [5, 8]]]]
INFO:root:Doing checkSmall1
INFO:root:Getting tiny MUSes, distance 1, for 1 puzlits, 1 repeats
INFO:root:Chunked 1 in [1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
INFO:root:Doing checkSmall2
INFO:root:Getting tiny MUSes, distance 2, for 1 puzlits, 1 repeats
INFO:root:Chunked 1 in [1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
INFO:root:Considering 100 * 1 jobs for minsize=3
INFO:root:Chunked 100 in [9, 9, 9, 9, 8, 8, 8, 8, 8, 8, 8, 8]
INFO:root:XX found first (5, 1) is not 5 4
INFO:root:XX add new best (5, 1) is not 5 4 4
INFO:root:XX add new best (5, 1) is not 5 4 4
INFO:root:XX add new best (5, 1) is not 5 4 4
INFO:root:XX add new best (5, 1) is not 5 4 4
INFO:root:XX add new best (5, 1) is not 5 4 4
INFO:root:XX add new best (5, 1) is not 5 4 4
INFO:root:XX add new best (5, 1) is not 5 4 4
INFO:root:XX add new best (5, 1) is not 5 4 4
INFO:root:XX add new best (5, 1) is not 5 4 4
INFO:root:XX add new best (5, 1) is not 5 4 4
INFO:root:XX add new best (5, 1) is not 5 4 4
INFO:root:XX add new best (5, 1) is not 5 4 4
INFO:root:XX add new best (5, 1) is not 5 4 4
INFO:root:XX add new best (5, 1) is not 5 4 4
INFO:root:XX add new best (5, 1) is not 5 4 4
INFO:root:XX add new best (5, 1) is not 5 4 4
INFO:root:XX add new best (5, 1) is not 5 4 4
INFO:root:XX add new best (5, 1) is not 5 4 4
INFO:root:XX add new best (5, 1) is not 5 4 4
INFO:root:XX add new best (5, 1) is not 5 4 4
INFO:root:Considering 100 * 1 jobs for minsize=4
INFO:root:Chunked 100 in [9, 9, 9, 9, 8, 8, 8, 8, 8, 8, 8, 8]
INFO:root:XX add new best (5, 1) is not 5 4 4
INFO:root:XX add new best (5, 1) is not 5 4 4
INFO:root:XX add new best (5, 1) is not 5 4 4
INFO:root:XX add new best (5, 1) is not 5 4 4
INFO:root:XX add new best (5, 1) is not 5 4 4
INFO:root:XX add new best (5, 1) is not 5 4 4
INFO:root:XX add new best (5, 1) is not 5 4 4
INFO:root:XX add new best (5, 1) is not 5 4 4
INFO:root:XX add new best (5, 1) is not 5 4 4
INFO:root:XX add new best (5, 1) is not 5 4 4
INFO:root:XX add new best (5, 1) is not 5 4 4
INFO:root:XX add new best (5, 1) is not 5 4 4
INFO:root:XX add new best (5, 1) is not 5 4 4
INFO:root:XX add new best (5, 1) is not 5 4 4
INFO:root:XX add new best (5, 1) is not 5 4 4
INFO:root:XX add new best (5, 1) is not 5 4 4
INFO:root:XX add new best (5, 1) is not 5 4 4
INFO:root:XX add new best (5, 1) is not 5 4 4
INFO:root:XX add new best (5, 1) is not 5 4 4
INFO:root:Trace: [(4, [(5, 1) is not 5])]
INFO:root:Trace Quality: [(4, 1)]
INFO:root:Trace Sorted: [(4, 1)]
INFO:root:Finished
INFO:root:Full Trace [(4, [(5, 1) is not 5])]
INFO:root:Trying {'quarterChopMUS': True}
INFO:root:Starting Step 1
INFO:root:Current state [[[[3, 6], [7], [1, 6], [4], [1, 3, 5], [8], [1, 3, 5], [2], [9]], [[3, 6, 9], [1, 6, 9], [2], [1, 5, 7, 9], [1, 3, 5], [5, 6, 7, 9], [1, 3, 5, 8], [3, 5, 6, 8], [4]], [[8], [5], [4], [1, 9], [2], [6, 9], [1, 3], [3, 6], [7]], [[5, 6, 9], [1, 6, 9], [8], [3], [7], [4], [2], [5, 9], [1, 6]], [[4, 5, 6, 7, 9], [2], [1, 5, 6, 7, 9], [5, 8, 9], [5, 8], [5, 9], [3, 5, 8, 9], [3, 4, 5, 8, 9], [1, 6]], [[4, 5, 9], [4, 9], [3], [2], [6], [1], [7], [4, 5, 8, 9], [5, 8]], [[4, 5, 7], [4, 8], [5, 7], [5, 7, 8], [9], [3], [6], [1], [2]], [[2], [6, 8, 9], [5, 6, 7, 9], [1, 5, 7, 8], [1, 5, 8], [5, 7], [4], [5, 8, 9], [3]], [[1], [3], [5, 9], [6], [4], [2], [5, 8, 9], [7], [5, 8]]]]
INFO:root:Doing checkSmall1
INFO:root:Getting tiny MUSes, distance 1, for 1 puzlits, 1 repeats
INFO:root:Chunked 1 in [1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
INFO:root:Doing checkSmall2
INFO:root:Getting tiny MUSes, distance 2, for 1 puzlits, 1 repeats
INFO:root:Chunked 1 in [1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
INFO:root:Considering 100 * 1 jobs for minsize=3
INFO:root:Chunked 100 in [9, 9, 9, 9, 8, 8, 8, 8, 8, 8, 8, 8]
INFO:root:XX found first (5, 1) is not 5 4
INFO:root:XX add new best (5, 1) is not 5 4 4
INFO:root:XX add new best (5, 1) is not 5 4 4
INFO:root:XX add new best (5, 1) is not 5 4 4
INFO:root:XX add new best (5, 1) is not 5 4 4
INFO:root:XX add new best (5, 1) is not 5 4 4
INFO:root:XX add new best (5, 1) is not 5 4 4
INFO:root:XX add new best (5, 1) is not 5 4 4
INFO:root:XX add new best (5, 1) is not 5 4 4
INFO:root:XX add new best (5, 1) is not 5 4 4
INFO:root:XX add new best (5, 1) is not 5 4 4
INFO:root:XX add new best (5, 1) is not 5 4 4
INFO:root:XX add new best (5, 1) is not 5 4 4
INFO:root:XX add new best (5, 1) is not 5 4 4
INFO:root:XX add new best (5, 1) is not 5 4 4
INFO:root:XX add new best (5, 1) is not 5 4 4
INFO:root:XX add new best (5, 1) is not 5 4 4
INFO:root:XX add new best (5, 1) is not 5 4 4
INFO:root:XX add new best (5, 1) is not 5 4 4
INFO:root:XX add new best (5, 1) is not 5 4 4
INFO:root:XX add new best (5, 1) is not 5 4 4
INFO:root:XX add new best (5, 1) is not 5 4 4
INFO:root:XX add new best (5, 1) is not 5 4 4
INFO:root:XX add new best (5, 1) is not 5 4 4
INFO:root:XX add new best (5, 1) is not 5 4 4
INFO:root:XX add new best (5, 1) is not 5 4 4
INFO:root:XX add new best (5, 1) is not 5 4 4
INFO:root:XX add new best (5, 1) is not 5 4 4
INFO:root:XX add new best (5, 1) is not 5 4 4
INFO:root:XX add new best (5, 1) is not 5 4 4
INFO:root:XX add new best (5, 1) is not 5 4 4
INFO:root:XX add new best (5, 1) is not 5 4 4
INFO:root:XX add new best (5, 1) is not 5 4 4
INFO:root:XX add new best (5, 1) is not 5 4 4
INFO:root:XX add new best (5, 1) is not 5 4 4
INFO:root:XX add new best (5, 1) is not 5 4 4
INFO:root:Considering 100 * 1 jobs for minsize=4
INFO:root:Chunked 100 in [9, 9, 9, 9, 8, 8, 8, 8, 8, 8, 8, 8]
INFO:root:XX add new best (5, 1) is not 5 4 4
INFO:root:XX add new best (5, 1) is not 5 4 4
INFO:root:XX add new best (5, 1) is not 5 4 4
INFO:root:XX add new best (5, 1) is not 5 4 4
INFO:root:XX add new best (5, 1) is not 5 4 4
INFO:root:XX add new best (5, 1) is not 5 4 4
INFO:root:XX add new best (5, 1) is not 5 4 4
INFO:root:XX add new best (5, 1) is not 5 4 4
INFO:root:XX add new best (5, 1) is not 5 4 4
INFO:root:XX add new best (5, 1) is not 5 4 4
INFO:root:XX add new best (5, 1) is not 5 4 4
INFO:root:XX add new best (5, 1) is not 5 4 4
INFO:root:XX add new best (5, 1) is not 5 4 4
INFO:root:XX add new best (5, 1) is not 5 4 4
INFO:root:XX add new best (5, 1) is not 5 4 4
INFO:root:XX add new best (5, 1) is not 5 4 4
INFO:root:XX add new best (5, 1) is not 5 4 4
INFO:root:XX add new best (5, 1) is not 5 4 4
INFO:root:XX add new best (5, 1) is not 5 4 4
INFO:root:XX add new best (5, 1) is not 5 4 4
INFO:root:XX add new best (5, 1) is not 5 4 4
INFO:root:XX add new best (5, 1) is not 5 4 4
INFO:root:XX add new best (5, 1) is not 5 4 4
INFO:root:XX add new best (5, 1) is not 5 4 4
INFO:root:XX add new best (5, 1) is not 5 4 4
INFO:root:XX add new best (5, 1) is not 5 4 4
INFO:root:XX add new best (5, 1) is not 5 4 4
INFO:root:Trace: [(4, [(5, 1) is not 5])]
INFO:root:Trace Quality: [(4, 1)]
INFO:root:Trace Sorted: [(4, 1)]
INFO:root:Finished
INFO:root:Full Trace [(4, [(5, 1) is not 5])]
INFO:root:Trying {'minPrecheckMUS': True}
INFO:root:Starting Step 1
INFO:root:Current state [[[[3, 6], [7], [1, 6], [4], [1, 3, 5], [8], [1, 3, 5], [2], [9]], [[3, 6, 9], [1, 6, 9], [2], [1, 5, 7, 9], [1, 3, 5], [5, 6, 7, 9], [1, 3, 5, 8], [3, 5, 6, 8], [4]], [[8], [5], [4], [1, 9], [2], [6, 9], [1, 3], [3, 6], [7]], [[5, 6, 9], [1, 6, 9], [8], [3], [7], [4], [2], [5, 9], [1, 6]], [[4, 5, 6, 7, 9], [2], [1, 5, 6, 7, 9], [5, 8, 9], [5, 8], [5, 9], [3, 5, 8, 9], [3, 4, 5, 8, 9], [1, 6]], [[4, 5, 9], [4, 9], [3], [2], [6], [1], [7], [4, 5, 8, 9], [5, 8]], [[4, 5, 7], [4, 8], [5, 7], [5, 7, 8], [9], [3], [6], [1], [2]], [[2], [6, 8, 9], [5, 6, 7, 9], [1, 5, 7, 8], [1, 5, 8], [5, 7], [4], [5, 8, 9], [3]], [[1], [3], [5, 9], [6], [4], [2], [5, 8, 9], [7], [5, 8]]]]
INFO:root:Doing checkSmall1
INFO:root:Getting tiny MUSes, distance 1, for 1 puzlits, 1 repeats
INFO:root:Chunked 1 in [1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
INFO:root:Doing checkSmall2
INFO:root:Getting tiny MUSes, distance 2, for 1 puzlits, 1 repeats
INFO:root:Chunked 1 in [1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
INFO:root:Considering 100 * 1 jobs for minsize=3
INFO:root:Chunked 100 in [9, 9, 9, 9, 8, 8, 8, 8, 8, 8, 8, 8]
INFO:root:XX found first (5, 1) is not 5 4
INFO:root:XX add new best (5, 1) is not 5 4 4
INFO:root:XX add new best (5, 1) is not 5 4 4
INFO:root:XX add new best (5, 1) is not 5 4 4
INFO:root:XX add new best (5, 1) is not 5 4 4
INFO:root:XX add new best (5, 1) is not 5 4 4
INFO:root:XX add new best (5, 1) is not 5 4 4
INFO:root:XX add new best (5, 1) is not 5 4 4
INFO:root:XX add new best (5, 1) is not 5 4 4
INFO:root:XX add new best (5, 1) is not 5 4 4
INFO:root:XX add new best (5, 1) is not 5 4 4
INFO:root:XX add new best (5, 1) is not 5 4 4
INFO:root:XX add new best (5, 1) is not 5 4 4
INFO:root:XX add new best (5, 1) is not 5 4 4
INFO:root:Considering 100 * 1 jobs for minsize=4
INFO:root:Chunked 100 in [9, 9, 9, 9, 8, 8, 8, 8, 8, 8, 8, 8]
INFO:root:XX add new best (5, 1) is not 5 4 4
INFO:root:XX add new best (5, 1) is not 5 4 4
INFO:root:XX add new best (5, 1) is not 5 4 4
INFO:root:XX add new best (5, 1) is not 5 4 4
INFO:root:XX add new best (5, 1) is not 5 4 4
INFO:root:XX add new best (5, 1) is not 5 4 4
INFO:root:XX add new best (5, 1) is not 5 4 4
INFO:root:XX add new best (5, 1) is not 5 4 4
INFO:root:XX add new best (5, 1) is not 5 4 4
INFO:root:XX add new best (5, 1) is not 5 4 4
INFO:root:XX add new best (5, 1) is not 5 4 4
INFO:root:XX add new best (5, 1) is not 5 4 4
INFO:root:XX add new best (5, 1) is not 5 4 4
INFO:root:XX add new best (5, 1) is not 5 4 4
INFO:root:XX add new best (5, 1) is not 5 4 4
INFO:root:XX add new best (5, 1) is not 5 4 4
INFO:root:XX add new best (5, 1) is not 5 4 4
INFO:root:XX add new best (5, 1) is not 5 4 4
INFO:root:XX add new best (5, 1) is not 5 4 4
INFO:root:XX add new best (5, 1) is not 5 4 4
INFO:root:XX add new best (5, 1) is not 5 4 4
INFO:root:XX add new best (5, 1) is not 5 4 4
INFO:root:XX add new best (5, 1) is not 5 4 4
INFO:root:XX add new best (5, 1) is not 5 4 4
INFO:root:XX add new best (5, 1) is not 5 4 4
INFO:root:XX add new best (5, 1) is not 5 4 4
INFO:root:XX add new best (5, 1) is not 5 4 4
INFO:root:XX add new best (5, 1) is not 5 4 4
INFO:root:XX add new best (5, 1) is not 5 4 4
INFO:root:Trace: [(4, [(5, 1) is not 5])]
INFO:root:Trace Quality: [(4, 1)]
INFO:root:Trace Sorted: [(4, 1)]
INFO:root:Finished
INFO:root:Full Trace [(4, [(5, 1) is not 5])]
INFO:root:Trying {'gallopingMUSes': True}
INFO:root:Starting Step 1
INFO:root:Current state [[[[3, 6], [7], [1, 6], [4], [1, 3, 5], [8], [1, 3, 5], [2], [9]], [[3, 6, 9], [1, 6, 9], [2], [1, 5, 7, 9], [1, 3, 5], [5, 6, 7, 9], [1, 3, 5, 8], [3, 5, 6, 8], [4]], [[8], [5], [4], [1, 9], [2], [6, 9], [1, 3], [3, 6], [7]], [[5, 6, 9], [1, 6, 9], [8], [3], [7], [4], [2], [5, 9], [1, 6]], [[4, 5, 6, 7, 9], [2], [1, 5, 6, 7, 9], [5, 8, 9], [5, 8], [5, 9], [3, 5, 8, 9], [3, 4, 5, 8, 9], [1, 6]], [[4, 5, 9], [4, 9], [3], [2], [6], [1], [7], [4, 5, 8, 9], [5, 8]], [[4, 5, 7], [4, 8], [5, 7], [5, 7, 8], [9], [3], [6], [1], [2]], [[2], [6, 8, 9], [5, 6, 7, 9], [1, 5, 7, 8], [1, 5, 8], [5, 7], [4], [5, 8, 9], [3]], [[1], [3], [5, 9], [6], [4], [2], [5, 8, 9], [7], [5, 8]]]]
INFO:root:Doing checkSmall1
INFO:root:Getting tiny MUSes, distance 1, for 1 puzlits, 1 repeats
INFO:root:Chunked 1 in [1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
INFO:root:Doing checkSmall2
INFO:root:Getting tiny MUSes, distance 2, for 1 puzlits, 1 repeats
INFO:root:Chunked 1 in [1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
INFO:root:Considering 100 * 1 jobs for minsize=3
INFO:root:Chunked 100 in [9, 9, 9, 9, 8, 8, 8, 8, 8, 8, 8, 8]
INFO:root:XX found first (5, 1) is not 5 4
INFO:root:XX add new best (5, 1) is not 5 4 4
INFO:root:XX add new best (5, 1) is not 5 4 4
INFO:root:XX add new best (5, 1) is not 5 4 4
INFO:root:XX add new best (5, 1) is not 5 4 4
INFO:root:XX add new best (5, 1) is not 5 4 4
INFO:root:XX add new best (5, 1) is not 5 4 4
INFO:root:XX add new best (5, 1) is not 5 4 4
INFO:root:XX add new best (5, 1) is not 5 4 4
INFO:root:Considering 100 * 1 jobs for minsize=4
INFO:root:Chunked 100 in [9, 9, 9, 9, 8, 8, 8, 8, 8, 8, 8, 8]
INFO:root:XX add new best (5, 1) is not 5 4 4
INFO:root:XX add new best (5, 1) is not 5 4 4
INFO:root:XX add new best (5, 1) is not 5 4 4
INFO:root:XX add new best (5, 1) is not 5 4 4
INFO:root:XX add new best (5, 1) is not 5 4 4
INFO:root:XX add new best (5, 1) is not 5 4 4
INFO:root:XX add new best (5, 1) is not 5 4 4
INFO:root:XX add new best (5, 1) is not 5 4 4
INFO:root:XX add new best (5, 1) is not 5 4 4
INFO:root:XX add new best (5, 1) is not 5 4 4
INFO:root:XX add new best (5, 1) is not 5 4 4
INFO:root:XX add new best (5, 1) is not 5 4 4
INFO:root:XX add new best (5, 1) is not 5 4 4
INFO:root:XX add new best (5, 1) is not 5 4 4
INFO:root:XX add new best (5, 1) is not 5 4 4
INFO:root:XX add new best (5, 1) is not 5 4 4
INFO:root:XX add new best (5, 1) is not 5 4 4
INFO:root:XX add new best (5, 1) is not 5 4 4
INFO:root:XX add new best (5, 1) is not 5 4 4
INFO:root:XX add new best (5, 1) is not 5 4 4
INFO:root:XX add new best (5, 1) is not 5 4 4
INFO:root:XX add new best (5, 1) is not 5 4 4
INFO:root:XX add new best (5, 1) is not 5 4 4
INFO:root:XX add new best (5, 1) is not 5 4 4
INFO:root:XX add new best (5, 1) is not 5 4 4
INFO:root:Trace: [(4, [(5, 1) is not 5])]
INFO:root:Trace Quality: [(4, 1)]
INFO:root:Trace Sorted: [(4, 1)]
INFO:root:Finished
INFO:root:Full Trace [(4, [(5, 1) is not 5])]
INFO:root:Trying {'minPrecheckStepsMUS': True}
INFO:root:Starting Step 1
INFO:root:Current state [[[[3, 6], [7], [1, 6], [4], [1, 3, 5], [8], [1, 3, 5], [2], [9]], [[3, 6, 9], [1, 6, 9], [2], [1, 5, 7, 9], [1, 3, 5], [5, 6, 7, 9], [1, 3, 5, 8], [3, 5, 6, 8], [4]], [[8], [5], [4], [1, 9], [2], [6, 9], [1, 3], [3, 6], [7]], [[5, 6, 9], [1, 6, 9], [8], [3], [7], [4], [2], [5, 9], [1, 6]], [[4, 5, 6, 7, 9], [2], [1, 5, 6, 7, 9], [5, 8, 9], [5, 8], [5, 9], [3, 5, 8, 9], [3, 4, 5, 8, 9], [1, 6]], [[4, 5, 9], [4, 9], [3], [2], [6], [1], [7], [4, 5, 8, 9], [5, 8]], [[4, 5, 7], [4, 8], [5, 7], [5, 7, 8], [9], [3], [6], [1], [2]], [[2], [6, 8, 9], [5, 6, 7, 9], [1, 5, 7, 8], [1, 5, 8], [5, 7], [4], [5, 8, 9], [3]], [[1], [3], [5, 9], [6], [4], [2], [5, 8, 9], [7], [5, 8]]]]
INFO:root:Doing checkSmall1
INFO:root:Getting tiny MUSes, distance 1, for 1 puzlits, 1 repeats
INFO:root:Chunked 1 in [1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
INFO:root:Doing checkSmall2
INFO:root:Getting tiny MUSes, distance 2, for 1 puzlits, 1 repeats
INFO:root:Chunked 1 in [1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
INFO:root:Considering 100 * 1 jobs for minsize=3
INFO:root:Chunked 100 in [9, 9, 9, 9, 8, 8, 8, 8, 8, 8, 8, 8]
INFO:root:XX found first (5, 1) is not 5 4
INFO:root:XX add new best (5, 1) is not 5 4 4
INFO:root:XX add new best (5, 1) is not 5 4 4
INFO:root:XX add new best (5, 1) is not 5 4 4
INFO:root:XX add new best (5, 1) is not 5 4 4
INFO:root:XX add new best (5, 1) is not 5 4 4
INFO:root:XX add new best (5, 1) is not 5 4 4
INFO:root:XX add new best (5, 1) is not 5 4 4
INFO:root:XX add new best (5, 1) is not 5 4 4
INFO:root:XX add new best (5, 1) is not 5 4 4
INFO:root:XX add new best (5, 1) is not 5 4 4
INFO:root:XX add new best (5, 1) is not 5 4 4
INFO:root:XX add new best (5, 1) is not 5 4 4
INFO:root:Considering 100 * 1 jobs for minsize=4
INFO:root:Chunked 100 in [9, 9, 9, 9, 8, 8, 8, 8, 8, 8, 8, 8]
INFO:root:XX add new best (5, 1) is not 5 4 4
INFO:root:XX add new best (5, 1) is not 5 4 4
INFO:root:XX add new best (5, 1) is not 5 4 4
INFO:root:XX add new best (5, 1) is not 5 4 4
INFO:root:XX add new best (5, 1) is not 5 4 4
INFO:root:XX add new best (5, 1) is not 5 4 4
INFO:root:XX add new best (5, 1) is not 5 4 4
INFO:root:XX add new best (5, 1) is not 5 4 4
INFO:root:XX add new best (5, 1) is not 5 4 4
INFO:root:XX add new best (5, 1) is not 5 4 4
INFO:root:XX add new best (5, 1) is not 5 4 4
INFO:root:XX add new best (5, 1) is not 5 4 4
INFO:root:XX add new best (5, 1) is not 5 4 4
INFO:root:XX add new best (5, 1) is not 5 4 4
INFO:root:XX add new best (5, 1) is not 5 4 4
INFO:root:XX add new best (5, 1) is not 5 4 4
INFO:root:XX add new best (5, 1) is not 5 4 4
INFO:root:XX add new best (5, 1) is not 5 4 4
INFO:root:XX add new best (5, 1) is not 5 4 4
INFO:root:XX add new best (5, 1) is not 5 4 4
INFO:root:XX add new best (5, 1) is not 5 4 4
INFO:root:XX add new best (5, 1) is not 5 4 4
INFO:root:XX add new best (5, 1) is not 5 4 4
INFO:root:XX add new best (5, 1) is not 5 4 4
INFO:root:XX add new best (5, 1) is not 5 4 4
INFO:root:XX add new best (5, 1) is not 5 4 4
INFO:root:XX add new best (5, 1) is not 5 4 4
INFO:root:XX add new best (5, 1) is not 5 4 4
INFO:root:XX add new best (5, 1) is not 5 4 4
INFO:root:Trace: [(4, [(5, 1) is not 5])]
INFO:root:Trace Quality: [(4, 1)]
INFO:root:Trace Sorted: [(4, 1)]
INFO:root:Finished
INFO:root:Full Trace [(4, [(5, 1) is not 5])]
INFO:root:Trying {'gallopingMUSes': True, 'minPrecheckMUS': True}
INFO:root:Starting Step 1
INFO:root:Current state [[[[3, 6], [7], [1, 6], [4], [1, 3, 5], [8], [1, 3, 5], [2], [9]], [[3, 6, 9], [1, 6, 9], [2], [1, 5, 7, 9], [1, 3, 5], [5, 6, 7, 9], [1, 3, 5, 8], [3, 5, 6, 8], [4]], [[8], [5], [4], [1, 9], [2], [6, 9], [1, 3], [3, 6], [7]], [[5, 6, 9], [1, 6, 9], [8], [3], [7], [4], [2], [5, 9], [1, 6]], [[4, 5, 6, 7, 9], [2], [1, 5, 6, 7, 9], [5, 8, 9], [5, 8], [5, 9], [3, 5, 8, 9], [3, 4, 5, 8, 9], [1, 6]], [[4, 5, 9], [4, 9], [3], [2], [6], [1], [7], [4, 5, 8, 9], [5, 8]], [[4, 5, 7], [4, 8], [5, 7], [5, 7, 8], [9], [3], [6], [1], [2]], [[2], [6, 8, 9], [5, 6, 7, 9], [1, 5, 7, 8], [1, 5, 8], [5, 7], [4], [5, 8, 9], [3]], [[1], [3], [5, 9], [6], [4], [2], [5, 8, 9], [7], [5, 8]]]]
INFO:root:Doing checkSmall1
INFO:root:Getting tiny MUSes, distance 1, for 1 puzlits, 1 repeats
INFO:root:Chunked 1 in [1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
INFO:root:Doing checkSmall2
INFO:root:Getting tiny MUSes, distance 2, for 1 puzlits, 1 repeats
INFO:root:Chunked 1 in [1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
INFO:root:Considering 100 * 1 jobs for minsize=3
INFO:root:Chunked 100 in [9, 9, 9, 9, 8, 8, 8, 8, 8, 8, 8, 8]
INFO:root:XX found first (5, 1) is not 5 4
INFO:root:XX add new best (5, 1) is not 5 4 4
INFO:root:XX add new best (5, 1) is not 5 4 4
INFO:root:XX add new best (5, 1) is not 5 4 4
INFO:root:XX add new best (5, 1) is not 5 4 4
INFO:root:XX add new best (5, 1) is not 5 4 4
INFO:root:XX add new best (5, 1) is not 5 4 4
INFO:root:XX add new best (5, 1) is not 5 4 4
INFO:root:XX add new best (5, 1) is not 5 4 4
INFO:root:XX add new best (5, 1) is not 5 4 4
INFO:root:XX add new best (5, 1) is not 5 4 4
INFO:root:XX add new best (5, 1) is not 5 4 4
INFO:root:XX add new best (5, 1) is not 5 4 4
INFO:root:Considering 100 * 1 jobs for minsize=4
INFO:root:Chunked 100 in [9, 9, 9, 9, 8, 8, 8, 8, 8, 8, 8, 8]
INFO:root:XX add new best (5, 1) is not 5 4 4
INFO:root:XX add new best (5, 1) is not 5 4 4
INFO:root:XX add new best (5, 1) is not 5 4 4
INFO:root:XX add new best (5, 1) is not 5 4 4
INFO:root:XX add new best (5, 1) is not 5 4 4
INFO:root:XX add new best (5, 1) is not 5 4 4
INFO:root:XX add new best (5, 1) is not 5 4 4
INFO:root:XX add new best (5, 1) is not 5 4 4
INFO:root:XX add new best (5, 1) is not 5 4 4
INFO:root:XX add new best (5, 1) is not 5 4 4
INFO:root:XX add new best (5, 1) is not 5 4 4
INFO:root:XX add new best (5, 1) is not 5 4 4
INFO:root:XX add new best (5, 1) is not 5 4 4
INFO:root:XX add new best (5, 1) is not 5 4 4
INFO:root:XX add new best (5, 1) is not 5 4 4
INFO:root:XX add new best (5, 1) is not 5 4 4
INFO:root:XX add new best (5, 1) is not 5 4 4
INFO:root:XX add new best (5, 1) is not 5 4 4
INFO:root:XX add new best (5, 1) is not 5 4 4
INFO:root:XX add new best (5, 1) is not 5 4 4
INFO:root:XX add new best (5, 1) is not 5 4 4
INFO:root:XX add new best (5, 1) is not 5 4 4
INFO:root:XX add new best (5, 1) is not 5 4 4
INFO:root:XX add new best (5, 1) is not 5 4 4
INFO:root:XX add new best (5, 1) is not 5 4 4
INFO:root:XX add new best (5, 1) is not 5 4 4
INFO:root:XX add new best (5, 1) is not 5 4 4
INFO:root:XX add new best (5, 1) is not 5 4 4
INFO:root:XX add new best (5, 1) is not 5 4 4
INFO:root:Trace: [(4, [(5, 1) is not 5])]
INFO:root:Trace Quality: [(4, 1)]
INFO:root:Trace Sorted: [(4, 1)]
INFO:root:Finished
INFO:root:Full Trace [(4, [(5, 1) is not 5])]
INFO:root:Trying {}
INFO:root:Starting Step 1
INFO:root:Current state [[[[2], [9], [4], [5], [1], [3], [7, 8], [7, 8], [6]], [[6], [5, 7], [5, 7], [8], [4], [2], [3], [1], [9]], [[3], [1, 8], [1, 8], [6], [9], [7], [2], [5], [4]], [[1, 8], [1, 2, 7, 8], [1, 2, 3, 7, 8, 9], [2, 3], [5], [6], [1, 4, 7, 8, 9], [2, 4, 7, 8, 9], [2, 3, 8]], [[1, 5], [4], [1, 5, 7, 9], [2, 3], [8], [1, 9], [1, 5, 7, 9], [6], [2, 3]], [[1, 5, 8], [1, 2, 5, 6, 8], [1, 2, 3, 5, 6, 8, 9], [4], [7], [1, 9], [1, 5, 8, 9], [2, 8, 9], [2, 3, 8]], [[7], [3], [2, 8], [1], [6], [4], [8, 9], [2, 8, 9], [5]], [[9], [2, 6, 8], [2, 6, 8], [7], [3], [5], [4, 8], [2, 4, 8], [1]], [[4], [1, 5], [1, 5], [9], [2], [8], [6], [3], [7]]]]
INFO:root:Doing checkSmall1
INFO:root:Getting tiny MUSes, distance 1, for 1 puzlits, 1 repeats
INFO:root:Chunked 1 in [1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
INFO:root:Doing checkSmall2
INFO:root:Getting tiny MUSes, distance 2, for 1 puzlits, 1 repeats
INFO:root:Chunked 1 in [1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
INFO:root:Considering 100 * 1 jobs for minsize=3
INFO:root:Chunked 100 in [9, 9, 9, 9, 8, 8, 8, 8, 8, 8, 8, 8]
INFO:root:XX found first (4, 2) is not 1 4
INFO:root:XX add new best (4, 2) is not 1 4 4
INFO:root:XX add new best (4, 2) is not 1 4 4
INFO:root:XX add new best (4, 2) is not 1 4 4
INFO:root:XX add new best (4, 2) is not 1 4 4
INFO:root:XX add new best (4, 2) is not 1 4 4
INFO:root:XX add new best (4, 2) is not 1 4 4
INFO:root:XX add new best (4, 2) is not 1 4 4
INFO:root:XX add new best (4, 2) is not 1 4 4
INFO:root:XX add new best (4, 2) is not 1 4 4
INFO:root:XX add new best (4, 2) is not 1 4 4
INFO:root:XX add new best (4, 2) is not 1 4 4
INFO:root:XX add new best (4, 2) is not 1 4 4
INFO:root:XX add new best (4, 2) is not 1 4 4
INFO:root:XX add new best (4, 2) is not 1 4 4
INFO:root:XX add new best (4, 2) is not 1 4 4
INFO:root:XX add new best (4, 2) is not 1 4 4
INFO:root:XX add new best (4, 2) is not 1 4 4
INFO:root:XX add new best (4, 2) is not 1 4 4
INFO:root:XX add new best (4, 2) is not 1 4 4
INFO:root:XX add new best (4, 2) is not 1 4 4
INFO:root:XX add new best (4, 2) is not 1 4 4
INFO:root:XX add new best (4, 2) is not 1 4 4
INFO:root:XX add new best (4, 2) is not 1 4 4
INFO:root:XX add new best (4, 2) is not 1 4 4
INFO:root:XX add new best (4, 2) is not 1 4 4
INFO:root:XX add new best (4, 2) is not 1 4 4
INFO:root:XX add new best (4, 2) is not 1 4 4
INFO:root:XX add new best (4, 2) is not 1 4 4
INFO:root:XX add new best (4, 2) is not 1 4 4
INFO:root:XX add new best (4, 2) is not 1 4 4
INFO:root:XX add new best (4, 2) is not 1 4 4
INFO:root:XX add new best (4, 2) is not 1 4 4
INFO:root:XX add new best (4, 2) is not 1 4 4
INFO:root:XX add new best (4, 2) is not 1 4 4
INFO:root:XX add new best (4, 2) is not 1 4 4
INFO:root:XX add new best (4, 2) is not 1 4 4
INFO:root:XX add new best (4, 2) is not 1 4 4
INFO:root:XX add new best (4, 2) is not 1 4 4
INFO:root:XX add new best (4, 2) is not 1 4 4
INFO:root:XX add new best (4, 2) is not 1 4 4
INFO:root:XX add new best (4, 2) is not 1 4 4
INFO:root:XX add new best (4, 2) is not 1 4 4
INFO:root:XX add new best (4, 2) is not 1 4 4
INFO:root:XX add new best (4, 2) is not 1 4 4
INFO:root:XX add new best (4, 2) is not 1 4 4
INFO:root:XX add new best (4, 2) is not 1 4 4
INFO:root:XX add new best (4, 2) is not 1 4 4
INFO:root:XX add new best (4, 2) is not 1 4 4
INFO:root:XX add new best (4, 2) is not 1 4 4
INFO:root:XX add new best (4, 2) is not 1 4 4
INFO:root:XX add new best (4, 2) is not 1 4 4
INFO:root:XX add new best (4, 2) is not 1 4 4
INFO:root:XX add new best (4, 2) is not 1 4 4
INFO:root:XX add new best (4, 2) is not 1 4 4
INFO:root:XX add new best (4, 2) is not 1 4 4
INFO:root:XX add new best (4, 2) is not 1 4 4
INFO:root:XX add new best (4, 2) is not 1 4 4
INFO:root:XX add new best (4, 2) is not 1 4 4
INFO:root:XX add new best (4, 2) is not 1 4 4
INFO:root:XX add new best (4, 2) is not 1 4 4
INFO:root:XX add new best (4, 2) is not 1 4 4
INFO:root:XX add new best (4, 2) is not 1 4 4
INFO:root:XX add new best (4, 2) is not 1 4 4
INFO:root:XX add new best (4, 2) is not 1 4 4
INFO:root:XX add new best (4, 2) is not 1 4 4
INFO:root:XX add new best (4, 2) is not 1 4 4
INFO:root:XX add new best (4, 2) is not 1 4 4
INFO:root:XX add new best (4, 2) is not 1 4 4
INFO:root:XX add new best (4, 2) is not 1 4 4
INFO:root:XX add new best (4, 2) is not 1 4 4
INFO:root:XX add new best (4, 2) is not 1 4 4
INFO:root:XX add new best (4, 2) is not 1 4 4
INFO:root:XX add new best (4, 2) is not 1 4 4
INFO:root:XX add new best (4, 2) is not 1 4 4
INFO:root:XX add new best (4, 2) is not 1 4 4
INFO:root:XX add new best (4, 2) is not 1 4 4
INFO:root:XX add new best (4, 2) is not 1 4 4
INFO:root:XX add new best (4, 2) is not 1 4 4
INFO:root:XX add new best (4, 2) is not 1 4 4
INFO:root:XX add new best (4, 2) is not 1 4 4
INFO:root:XX add new best (4, 2) is not 1 4 4
INFO:root:XX add new best (4, 2) is not 1 4 4
INFO:root:XX add new best (4, 2) is not 1 4 4
INFO:root:XX add new best (4, 2) is not 1 4 4
INFO:root:XX add new best (4, 2) is not 1 4 4
INFO:root:XX add new best (4, 2) is not 1 4 4
INFO:root:XX add new best (4, 2) is not 1 4 4
INFO:root:XX add new best (4, 2) is not 1 4 4
INFO:root:XX add new best (4, 2) is not 1 4 4
INFO:root:XX add new best (4, 2) is not 1 4 4
INFO:root:XX add new best (4, 2) is not 1 4 4
INFO:root:XX add new best (4, 2) is not 1 4 4
INFO:root:XX add new best (4, 2) is not 1 4 4
INFO:root:XX add new best (4, 2) is not 1 4 4
INFO:root:XX add new best (4, 2) is not 1 4 4
INFO:root:XX add new best (4, 2) is not 1 4 4
INFO:root:XX add new best (4, 2) is not 1 4 4
INFO:root:XX add new best (4, 2) is not 1 4 4
INFO:root:XX add new best (4, 2) is not 1 4 4
INFO:root:Considering 100 * 1 jobs for minsize=4
INFO:root:Chunked 100 in [9, 9, 9, 9, 8, 8, 8, 8, 8, 8, 8, 8]
INFO:root:XX add new best (4, 2) is not 1 4 4
INFO:root:XX add new best (4, 2) is not 1 4 4
INFO:root:XX add new best (4, 2) is not 1 4 4
INFO:root:XX add new best (4, 2) is not 1 4 4
INFO:root:XX add new best (4, 2) is not 1 4 4
INFO:root:XX add new best (4, 2) is not 1 4 4
INFO:root:XX add new best (4, 2) is not 1 4 4
INFO:root:XX add new best (4, 2) is not 1 4 4
INFO:root:XX add new best (4, 2) is not 1 4 4
INFO:root:XX add new best (4, 2) is not 1 4 4
INFO:root:XX add new best (4, 2) is not 1 4 4
INFO:root:XX add new best (4, 2) is not 1 4 4
INFO:root:XX add new best (4, 2) is not 1 4 4
INFO:root:XX add new best (4, 2) is not 1 4 4
INFO:root:XX add new best (4, 2) is not 1 4 4
INFO:root:XX add new best (4, 2) is not 1 4 4
INFO:root:XX add new best (4, 2) is not 1 4 4
INFO:root:XX add new best (4, 2) is not 1 4 4
INFO:root:XX add new best (4, 2) is not 1 4 4
INFO:root:XX add new best (4, 2) is not 1 4 4
INFO:root:XX add new best (4, 2) is not 1 4 4
INFO:root:XX add new best (4, 2) is not 1 4 4
INFO:root:XX add new best (4, 2) is not 1 4 4
INFO:root:XX add new best (4, 2) is not 1 4 4
INFO:root:XX add new best (4, 2) is not 1 4 4
INFO:root:XX add new best (4, 2) is not 1 4 4
INFO:root:XX add new best (4, 2) is not 1 4 4
INFO:root:XX add new best (4, 2) is not 1 4 4
INFO:root:XX add new best (4, 2) is not 1 4 4
INFO:root:XX add new best (4, 2) is not 1 4 4
INFO:root:XX add new best (4, 2) is not 1 4 4
INFO:root:XX add new best (4, 2) is not 1 4 4
INFO:root:XX add new best (4, 2) is not 1 4 4
INFO:root:XX add new best (4, 2) is not 1 4 4
INFO:root:XX add new best (4, 2) is not 1 4 4
INFO:root:XX add new best (4, 2) is not 1 4 4
INFO:root:XX add new best (4, 2) is not 1 4 4
INFO:root:XX add new best (4, 2) is not 1 4 4
INFO:root:XX add new best (4, 2) is not 1 4 4
INFO:root:XX add new best (4, 2) is not 1 4 4
INFO:root:XX add new best (4, 2) is not 1 4 4
INFO:root:XX add new best (4, 2) is not 1 4 4
INFO:root:XX add new best (4, 2) is not 1 4 4
INFO:root:XX add new best (4, 2) is not 1 4 4
INFO:root:XX add new best (4, 2) is not 1 4 4
INFO:root:XX add new best (4, 2) is not 1 4 4
INFO:root:XX add new best (4, 2) is not 1 4 4
INFO:root:XX add new best (4, 2) is not 1 4 4
INFO:root:XX add new best (4, 2) is not 1 4 4
INFO:root:XX add new best (4, 2) is not 1 4 4
INFO:root:XX add new best (4, 2) is not 1 4 4
INFO:root:XX add new best (4, 2) is not 1 4 4
INFO:root:XX add new best (4, 2) is not 1 4 4
INFO:root:XX add new best (4, 2) is not 1 4 4
INFO:root:XX add new best (4, 2) is not 1 4 4
INFO:root:XX add new best (4, 2) is not 1 4 4
INFO:root:XX add new best (4, 2) is not 1 4 4
INFO:root:XX add new best (4, 2) is not 1 4 4
INFO:root:XX add new best (4, 2) is not 1 4 4
INFO:root:XX add new best (4, 2) is not 1 4 4
INFO:root:XX add new best (4, 2) is not 1 4 4
INFO:root:XX add new best (4, 2) is not 1 4 4
INFO:root:XX add new best (4, 2) is not 1 4 4
INFO:root:XX add new best (4, 2) is not 1 4 4
INFO:root:XX add new best (4, 2) is not 1 4 4
INFO:root:XX add new best (4, 2) is not 1 4 4
INFO:root:XX add new best (4, 2) is not 1 4 4
INFO:root:XX add new best (4, 2) is not 1 4 4
INFO:root:XX add new best (4, 2) is not 1 4 4
INFO:root:XX add new best (4, 2) is not 1 4 4
INFO:root:XX add new best (4, 2) is not 1 4 4
INFO:root:XX add new best (4, 2) is not 1 4 4
INFO:root:XX add new best (4, 2) is not 1 4 4
INFO:root:XX add new best (4, 2) is not 1 4 4
INFO:root:XX add new best (4, 2) is not 1 4 4
INFO:root:XX add new best (4, 2) is not 1 4 4
INFO:root:XX add new best (4, 2) is not 1 4 4
INFO:root:XX add new best (4, 2) is not 1 4 4
INFO:root:XX add new best (4, 2) is not 1 4 4
INFO:root:XX add new best (4, 2) is not 1 4 4
INFO:root:XX add new best (4, 2) is not 1 4 4
INFO:root:XX add new best (4, 2) is not 1 4 4
INFO:root:XX add new best (4, 2) is not 1 4 4
INFO:root:XX add new best (4, 2) is not 1 4 4
INFO:root:XX add new best (4, 2) is not 1 4 4
INFO:root:XX add new best (4, 2) is not 1 4 4
INFO:root:XX add new best (4, 2) is not 1 4 4
INFO:root:XX add new best (4, 2) is not 1 4 4
INFO:root:XX add new best (4, 2) is not 1 4 4
INFO:root:XX add new best (4, 2) is not 1 4 4
INFO:root:XX add new best (4, 2) is not 1 4 4
INFO:root:XX add new best (4, 2) is not 1 4 4
INFO:root:XX add new best (4, 2) is not 1 4 4
INFO:root:XX add new best (4, 2) is not 1 4 4
INFO:root:XX add new best (4, 2) is not 1 4 4
INFO:root:XX add new best (4, 2) is not 1 4 4
INFO:root:XX add new best (4, 2) is not 1 4 4
INFO:root:XX add new best (4, 2) is not 1 4 4
INFO:root:XX add new best (4, 2) is not 1 4 4
INFO:root:XX add new best (4, 2) is not 1 4 4
INFO:root:Trace: [(4, [(4, 2) is not 1])]
INFO:root:Trace Quality: [(4, 1)]
INFO:root:Trace Sorted: [(4, 1)]
INFO:root:Finished
INFO:root:Full Trace [(4, [(4, 2) is not 1])]
INFO:root:Trying {'prechopMUSes': True}
INFO:root:Starting Step 1
INFO:root:Current state [[[[2], [9], [4], [5], [1], [3], [7, 8], [7, 8], [6]], [[6], [5, 7], [5, 7], [8], [4], [2], [3], [1], [9]], [[3], [1, 8], [1, 8], [6], [9], [7], [2], [5], [4]], [[1, 8], [1, 2, 7, 8], [1, 2, 3, 7, 8, 9], [2, 3], [5], [6], [1, 4, 7, 8, 9], [2, 4, 7, 8, 9], [2, 3, 8]], [[1, 5], [4], [1, 5, 7, 9], [2, 3], [8], [1, 9], [1, 5, 7, 9], [6], [2, 3]], [[1, 5, 8], [1, 2, 5, 6, 8], [1, 2, 3, 5, 6, 8, 9], [4], [7], [1, 9], [1, 5, 8, 9], [2, 8, 9], [2, 3, 8]], [[7], [3], [2, 8], [1], [6], [4], [8, 9], [2, 8, 9], [5]], [[9], [2, 6, 8], [2, 6, 8], [7], [3], [5], [4, 8], [2, 4, 8], [1]], [[4], [1, 5], [1, 5], [9], [2], [8], [6], [3], [7]]]]
INFO:root:Doing checkSmall1
INFO:root:Getting tiny MUSes, distance 1, for 1 puzlits, 1 repeats
INFO:root:Chunked 1 in [1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
INFO:root:Doing checkSmall2
INFO:root:Getting tiny MUSes, distance 2, for 1 puzlits, 1 repeats
INFO:root:Chunked 1 in [1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
INFO:root:Considering 100 * 1 jobs for minsize=3
INFO:root:Chunked 100 in [9, 9, 9, 9, 8, 8, 8, 8, 8, 8, 8, 8]
INFO:root:XX found first (4, 2) is not 1 4
INFO:root:XX add new best (4, 2) is not 1 4 4
INFO:root:XX add new best (4, 2) is not 1 4 4
INFO:root:XX add new best (4, 2) is not 1 4 4
INFO:root:XX add new best (4, 2) is not 1 4 4
INFO:root:XX add new best (4, 2) is not 1 4 4
INFO:root:XX add new best (4, 2) is not 1 4 4
INFO:root:XX add new best (4, 2) is not 1 4 4
INFO:root:XX add new best (4, 2) is not 1 4 4
INFO:root:XX add new best (4, 2) is not 1 4 4
INFO:root:XX add new best (4, 2) is not 1 4 4
INFO:root:XX add new best (4, 2) is not 1 4 4
INFO:root:XX add new best (4, 2) is not 1 4 4
INFO:root:XX add new best (4, 2) is not 1 4 4
INFO:root:XX add new best (4, 2) is not 1 4 4
INFO:root:XX add new best (4, 2) is not 1 4 4
INFO:root:XX add new best (4, 2) is not 1 4 4
INFO:root:XX add new best (4, 2) is not 1 4 4
INFO:root:XX add new best (4, 2) is not 1 4 4
INFO:root:XX add new best (4, 2) is not 1 4 4
INFO:root:XX add new best (4, 2) is not 1 4 4
INFO:root:XX add new best (4, 2) is not 1 4 4
INFO:root:XX add new best (4, 2) is not 1 4 4
INFO:root:XX add new best (4, 2) is not 1 4 4
INFO:root:XX add new best (4, 2) is not 1 4 4
INFO:root:XX add new best (4, 2) is not 1 4 4
INFO:root:XX add new best (4, 2) is not 1 4 4
INFO:root:XX add new best (4, 2) is not 1 4 4
INFO:root:XX add new best (4, 2) is not 1 4 4
INFO:root:XX add new best (4, 2) is not 1 4 4
INFO:root:Considering 100 * 1 jobs for minsize=4
INFO:root:Chunked 100 in [9, 9, 9, 9, 8, 8, 8, 8, 8, 8, 8, 8]
INFO:root:XX add new best (4, 2) is not 1 4 4
INFO:root:XX add new best (4, 2) is not 1 4 4
INFO:root:XX add new best (4, 2) is not 1 4 4
INFO:root:XX add new best (4, 2) is not 1 4 4
INFO:root:XX add new best (4, 2) is not 1 4 4
INFO:root:XX add new best (4, 2) is not 1 4 4
INFO:root:XX add new best (4, 2) is not 1 4 4
INFO:root:XX add new best (4, 2) is not 1 4 4
INFO:root:XX add new best (4, 2) is not 1 4 4
INFO:root:XX add new best (4, 2) is not 1 4 4
INFO:root:XX add new best (4, 2) is not 1 4 4
INFO:root:XX add new best (4, 2) is not 1 4 4
INFO:root:XX add new best (4, 2) is not 1 4 4
INFO:root:XX add new best (4, 2) is not 1 4 4
INFO:root:XX add new best (4, 2) is not 1 4 4
INFO:root:XX add new best (4, 2) is not 1 4 4
INFO:root:XX add new best (4, 2) is not 1 4 4
INFO:root:XX add new best (4, 2) is not 1 4 4
INFO:root:XX add new best (4, 2) is not 1 4 4
INFO:root:XX add new best (4, 2) is not 1 4 4
INFO:root:XX add new best (4, 2) is not 1 4 4
INFO:root:XX add new best (4, 2) is not 1 4 4
INFO:root:XX add new best (4, 2) is not 1 4 4
INFO:root:XX add new best (4, 2) is not 1 4 4
INFO:root:XX add new best (4, 2) is not 1 4 4
INFO:root:Trace: [(4, [(4, 2) is not 1])]
INFO:root:Trace Quality: [(4, 1)]
INFO:root:Trace Sorted: [(4, 1)]
INFO:root:Finished
INFO:root:Full Trace [(4, [(4, 2) is not 1])]
INFO:root:Trying {'quarterChopMUS': True}
INFO:root:Starting Step 1
INFO:root:Current state [[[[2], [9], [4], [5], [1], [3], [7, 8], [7, 8], [6]], [[6], [5, 7], [5, 7], [8], [4], [2], [3], [1], [9]], [[3], [1, 8], [1, 8], [6], [9], [7], [2], [5], [4]], [[1, 8], [1, 2, 7, 8], [1, 2, 3, 7, 8, 9], [2, 3], [5], [6], [1, 4, 7, 8, 9], [2, 4, 7, 8, 9], [2, 3, 8]], [[1, 5], [4], [1, 5, 7, 9], [2, 3], [8], [1, 9], [1, 5, 7, 9], [6], [2, 3]], [[1, 5, 8], [1, 2, 5, 6, 8], [1, 2, 3, 5, 6, 8, 9], [4], [7], [1, 9], [1, 5, 8, 9], [2, 8, 9], [2, 3, 8]], [[7], [3], [2, 8], [1], [6], [4], [8, 9], [2, 8, 9], [5]], [[9], [2, 6, 8], [2, 6, 8], [7], [3], [5], [4, 8], [2, 4, 8], [1]], [[4], [1, 5], [1, 5], [9], [2], [8], [6], [3], [7]]]]
INFO:root:Doing checkSmall1
INFO:root:Getting tiny MUSes, distance 1, for 1 puzlits, 1 repeats
INFO:root:Chunked 1 in [1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
INFO:root:Doing checkSmall2
INFO:root:Getting tiny MUSes, distance 2, for 1 puzlits, 1 repeats
INFO:root:Chunked 1 in [1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
INFO:root:Considering 100 * 1 jobs for minsize=3
INFO:root:Chunked 100 in [9, 9, 9, 9, 8, 8, 8, 8, 8, 8, 8, 8]
INFO:root:XX found first (4, 2) is not 1 4
INFO:root:XX add new best (4, 2) is not 1 4 4
INFO:root:XX add new best (4, 2) is not 1 4 4
INFO:root:XX add new best (4, 2) is not 1 4 4
INFO:root:XX add new best (4, 2) is not 1 4 4
INFO:root:XX add new best (4, 2) is not 1 4 4
INFO:root:XX add new best (4, 2) is not 1 4 4
INFO:root:XX add new best (4, 2) is not 1 4 4
INFO:root:XX add new best (4, 2) is not 1 4 4
INFO:root:XX add new best (4, 2) is not 1 4 4
INFO:root:XX add new best (4, 2) is not 1 4 4
INFO:root:XX add new best (4, 2) is not 1 4 4
INFO:root:XX add new best (4, 2) is not 1 4 4
INFO:root:XX add new best (4, 2) is not 1 4 4
INFO:root:XX add new best (4, 2) is not 1 4 4
INFO:root:XX add new best (4, 2) is not 1 4 4
INFO:root:XX add new best (4, 2) is not 1 4 4
INFO:root:XX add new best (4, 2) is not 1 4 4
INFO:root:XX add new best (4, 2) is not 1 4 4
INFO:root:XX add new best (4, 2) is not 1 4 4
INFO:root:XX add new best (4, 2) is not 1 4 4
INFO:root:XX add new best (4, 2) is not 1 4 4
INFO:root:XX add new best (4, 2) is not 1 4 4
INFO:root:XX add new best (4, 2) is not 1 4 4
INFO:root:XX add new best (4, 2) is not 1 4 4
INFO:root:XX add new best (4, 2) is not 1 4 4
INFO:root:XX add new best (4, 2) is not 1 4 4
INFO:root:XX add new best (4, 2) is not 1 4 4
INFO:root:XX add new best (4, 2) is not 1 4 4
INFO:root:XX add new best (4, 2) is not 1 4 4
INFO:root:XX add new best (4, 2) is not 1 4 4
INFO:root:XX add new best (4, 2) is not 1 4 4
INFO:root:XX add new best (4, 2) is not 1 4 4
INFO:root:XX add new best (4, 2) is not 1 4 4
INFO:root:XX add new best (4, 2) is not 1 4 4
INFO:root:XX add new best (4, 2) is not 1 4 4
INFO:root:XX add new best (4, 2) is not 1 4 4
INFO:root:XX add new best (4, 2) is not 1 4 4
INFO:root:XX add new best (4, 2) is not 1 4 4
INFO:root:XX add new best (4, 2) is not 1 4 4
INFO:root:XX add new best (4, 2) is not 1 4 4
INFO:root:Considering 100 * 1 jobs for minsize=4
INFO:root:Chunked 100 in [9, 9, 9, 9, 8, 8, 8, 8, 8, 8, 8, 8]
INFO:root:XX add new best (4, 2) is not 1 4 4
INFO:root:XX add new best (4, 2) is not 1 4 4
INFO:root:XX add new best (4, 2) is not 1 4 4
INFO:root:XX add new best (4, 2) is not 1 4 4
INFO:root:XX add new best (4, 2) is not 1 4 4
INFO:root:XX add new best (4, 2) is not 1 4 4
INFO:root:XX add new best (4, 2) is not 1 4 4
INFO:root:XX add new best (4, 2) is not 1 4 4
INFO:root:XX add new best (4, 2) is not 1 4 4
INFO:root:XX add new best (4, 2) is not 1 4 4
INFO:root:XX add new best (4, 2) is not 1 4 4
INFO:root:XX add new best (4, 2) is not 1 4 4
INFO:root:XX add new best (4, 2) is not 1 4 4
INFO:root:XX add new best (4, 2) is not 1 4 4
INFO:root:XX add new best (4, 2) is not 1 4 4
INFO:root:XX add new best (4, 2) is not 1 4 4
INFO:root:XX add new best (4, 2) is not 1 4 4
INFO:root:XX add new best (4, 2) is not 1 4 4
INFO:root:XX add new best (4, 2) is not 1 4 4
INFO:root:XX add new best (4, 2) is not 1 4 4
INFO:root:XX add new best (4, 2) is not 1 4 4
INFO:root:XX add new best (4, 2) is not 1 4 4
INFO:root:XX add new best (4, 2) is not 1 4 4
INFO:root:XX add new best (4, 2) is not 1 4 4
INFO:root:XX add new best (4, 2) is not 1 4 4
INFO:root:XX add new best (4, 2) is not 1 4 4
INFO:root:XX add new best (4, 2) is not 1 4 4
INFO:root:XX add new best (4, 2) is not 1 4 4
INFO:root:XX add new best (4, 2) is not 1 4 4
INFO:root:XX add new best (4, 2) is not 1 4 4
INFO:root:XX add new best (4, 2) is not 1 4 4
INFO:root:XX add new best (4, 2) is not 1 4 4
INFO:root:XX add new best (4, 2) is not 1 4 4
INFO:root:XX add new best (4, 2) is not 1 4 4
INFO:root:XX add new best (4, 2) is not 1 4 4
INFO:root:XX add new best (4, 2) is not 1 4 4
INFO:root:XX add new best (4, 2) is not 1 4 4
INFO:root:Trace: [(4, [(4, 2) is not 1])]
INFO:root:Trace Quality: [(4, 1)]
INFO:root:Trace Sorted: [(4, 1)]
INFO:root:Finished
INFO:root:Full Trace [(4, [(4, 2) is not 1])]
INFO:root:Trying {'minPrecheckMUS': True}
INFO:root:Starting Step 1
INFO:root:Current state [[[[2], [9], [4], [5], [1], [3], [7, 8], [7, 8], [6]], [[6], [5, 7], [5, 7], [8], [4], [2], [3], [1], [9]], [[3], [1, 8], [1, 8], [6], [9], [7], [2], [5], [4]], [[1, 8], [1, 2, 7, 8], [1, 2, 3, 7, 8, 9], [2, 3], [5], [6], [1, 4, 7, 8, 9], [2, 4, 7, 8, 9], [2, 3, 8]], [[1, 5], [4], [1, 5, 7, 9], [2, 3], [8], [1, 9], [1, 5, 7, 9], [6], [2, 3]], [[1, 5, 8], [1, 2, 5, 6, 8], [1, 2, 3, 5, 6, 8, 9], [4], [7], [1, 9], [1, 5, 8, 9], [2, 8, 9], [2, 3, 8]], [[7], [3], [2, 8], [1], [6], [4], [8, 9], [2, 8, 9], [5]], [[9], [2, 6, 8], [2, 6, 8], [7], [3], [5], [4, 8], [2, 4, 8], [1]], [[4], [1, 5], [1, 5], [9], [2], [8], [6], [3], [7]]]]
INFO:root:Doing checkSmall1
INFO:root:Getting tiny MUSes, distance 1, for 1 puzlits, 1 repeats
INFO:root:Chunked 1 in [1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
INFO:root:Doing checkSmall2
INFO:root:Getting tiny MUSes, distance 2, for 1 puzlits, 1 repeats
INFO:root:Chunked 1 in [1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
INFO:root:Considering 100 * 1 jobs for minsize=3
INFO:root:Chunked 100 in [9, 9, 9, 9, 8, 8, 8, 8, 8, 8, 8, 8]
INFO:root:XX found first (4, 2) is not 1 4
INFO:root:XX add new best (4, 2) is not 1 4 4
INFO:root:XX add new best (4, 2) is not 1 4 4
INFO:root:XX add new best (4, 2) is not 1 4 4
INFO:root:XX add new best (4, 2) is not 1 4 4
INFO:root:XX add new best (4, 2) is not 1 4 4
INFO:root:XX add new best (4, 2) is not 1 4 4
INFO:root:XX add new best (4, 2) is not 1 4 4
INFO:root:XX add new best (4, 2) is not 1 4 4
INFO:root:XX add new best (4, 2) is not 1 4 4
INFO:root:XX add new best (4, 2) is not 1 4 4
INFO:root:XX add new best (4, 2) is not 1 4 4
INFO:root:XX add new best (4, 2) is not 1 4 4
INFO:root:XX add new best (4, 2) is not 1 4 4
INFO:root:XX add new best (4, 2) is not 1 4 4
INFO:root:XX add new best (4, 2) is not 1 4 4
INFO:root:XX add new best (4, 2) is not 1 4 4
INFO:root:XX add new best (4, 2) is not 1 4 4
INFO:root:XX add new best (4, 2) is not 1 4 4
INFO:root:Considering 100 * 1 jobs for minsize=4
INFO:root:Chunked 100 in [9, 9, 9, 9, 8, 8, 8, 8, 8, 8, 8, 8]
INFO:root:XX add new best (4, 2) is not 1 4 4
INFO:root:XX add new best (4, 2) is not 1 4 4
INFO:root:XX add new best (4, 2) is not 1 4 4
INFO:root:XX add new best (4, 2) is not 1 4 4
INFO:root:XX add new best (4, 2) is not 1 4 4
INFO:root:XX add new best (4, 2) is not 1 4 4
INFO:root:XX add new best (4, 2) is not 1 4 4
INFO:root:XX add new best (4, 2) is not 1 4 4
INFO:root:XX add new best (4, 2) is not 1 4 4
INFO:root:XX add new best (4, 2) is not 1 4 4
INFO:root:XX add new best (4, 2) is not 1 4 4
INFO:root:XX add new best (4, 2) is not 1 4 4
INFO:root:XX add new best (4, 2) is not 1 4 4
INFO:root:XX add new best (4, 2) is not 1 4 4
INFO:root:XX add new best (4, 2) is not 1 4 4
INFO:root:XX add new best (4, 2) is not 1 4 4
INFO:root:XX add new best (4, 2) is not 1 4 4
INFO:root:XX add new best (4, 2) is not 1 4 4
INFO:root:XX add new best (4, 2) is not 1 4 4
INFO:root:XX add new best (4, 2) is not 1 4 4
INFO:root:XX add new best (4, 2) is not 1 4 4
INFO:root:XX add new best (4, 2) is not 1 4 4
INFO:root:XX add new best (4, 2) is not 1 4 4
INFO:root:XX add new best (4, 2) is not 1 4 4
INFO:root:XX add new best (4, 2) is not 1 4 4
INFO:root:XX add new best (4, 2) is not 1 4 4
INFO:root:XX add new best (4, 2) is not 1 4 4
INFO:root:Trace: [(4, [(4, 2) is not 1])]
INFO:root:Trace Quality: [(4, 1)]
INFO:root:Trace Sorted: [(4, 1)]
INFO:root:Finished
INFO:root:Full Trace [(4, [(4, 2) is not 1])]
INFO:root:Trying {'gallopingMUSes': True}
INFO:root:Starting Step 1
INFO:root:Current state [[[[2], [9], [4], [5], [1], [3], [7, 8], [7, 8], [6]], [[6], [5, 7], [5, 7], [8], [4], [2], [3], [1], [9]], [[3], [1, 8], [1, 8], [6], [9], [7], [2], [5], [4]], [[1, 8], [1, 2, 7, 8], [1, 2, 3, 7, 8, 9], [2, 3], [5], [6], [1, 4, 7, 8, 9], [2, 4, 7, 8, 9], [2, 3, 8]], [[1, 5], [4], [1, 5, 7, 9], [2, 3], [8], [1, 9], [1, 5, 7, 9], [6], [2, 3]], [[1, 5, 8], [1, 2, 5, 6, 8], [1, 2, 3, 5, 6, 8, 9], [4], [7], [1, 9], [1, 5, 8, 9], [2, 8, 9], [2, 3, 8]], [[7], [3], [2, 8], [1], [6], [4], [8, 9], [2, 8, 9], [5]], [[9], [2, 6, 8], [2, 6, 8], [7], [3], [5], [4, 8], [2, 4, 8], [1]], [[4], [1, 5], [1, 5], [9], [2], [8], [6], [3], [7]]]]
INFO:root:Doing checkSmall1
INFO:root:Getting tiny MUSes, distance 1, for 1 puzlits, 1 repeats
INFO:root:Chunked 1 in [1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
INFO:root:Doing checkSmall2
INFO:root:Getting tiny MUSes, distance 2, for 1 puzlits, 1 repeats
INFO:root:Chunked 1 in [1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
INFO:root:Considering 100 * 1 jobs for minsize=3
INFO:root:Chunked 100 in [9, 9, 9, 9, 8, 8, 8, 8, 8, 8, 8, 8]
INFO:root:XX found first (4, 2) is not 1 4
INFO:root:XX add new best (4, 2) is not 1 4 4
INFO:root:XX add new best (4, 2) is not 1 4 4
INFO:root:XX add new best (4, 2) is not 1 4 4
INFO:root:XX add new best (4, 2) is not 1 4 4
INFO:root:XX add new best (4, 2) is not 1 4 4
INFO:root:XX add new best (4, 2) is not 1 4 4
INFO:root:XX add new best (4, 2) is not 1 4 4
INFO:root:XX add new best (4, 2) is not 1 4 4
INFO:root:XX add new best (4, 2) is not 1 4 4
INFO:root:XX add new best (4, 2) is not 1 4 4
INFO:root:XX add new best (4, 2) is not 1 4 4
INFO:root:XX add new best (4, 2) is not 1 4 4
INFO:root:XX add new best (4, 2) is not 1 4 4
INFO:root:Considering 100 * 1 jobs for minsize=4
INFO:root:Chunked 100 in [9, 9, 9, 9, 8, 8, 8, 8, 8, 8, 8, 8]
INFO:root:XX add new best (4, 2) is not 1 4 4
INFO:root:XX add new best (4, 2) is not 1 4 4
INFO:root:XX add new best (4, 2) is not 1 4 4
INFO:root:XX add new best (4, 2) is not 1 4 4
INFO:root:XX add new best (4, 2) is not 1 4 4
INFO:root:XX add new best (4, 2) is not 1 4 4
INFO:root:XX add new best (4, 2) is not 1 4 4
INFO:root:XX add new best (4, 2) is not 1 4 4
INFO:root:XX add new best (4, 2) is not 1 4 4
INFO:root:XX add new best (4, 2) is not 1 4 4
INFO:root:XX add new best (4, 2) is not 1 4 4
INFO:root:XX add new best (4, 2) is not 1 4 4
INFO:root:XX add new best (4, 2) is not 1 4 4
INFO:root:XX add new best (4, 2) is not 1 4 4
INFO:root:XX add new best (4, 2) is not 1 4 4
INFO:root:XX add new best (4, 2) is not 1 4 4
INFO:root:XX add new best (4, 2) is not 1 4 4
INFO:root:XX add new best (4, 2) is not 1 4 4
INFO:root:XX add new best (4, 2) is not 1 4 4
INFO:root:XX add new best (4, 2) is not 1 4 4
INFO:root:XX add new best (4, 2) is not 1 4 4
INFO:root:XX add new best (4, 2) is not 1 4 4
INFO:root:XX add new best (4, 2) is not 1 4 4
INFO:root:Trace: [(4, [(4, 2) is not 1])]
INFO:root:Trace Quality: [(4, 1)]
INFO:root:Trace Sorted: [(4, 1)]
INFO:root:Finished
INFO:root:Full Trace [(4, [(4, 2) is not 1])]
INFO:root:Trying {'minPrecheckStepsMUS': True}
INFO:root:Starting Step 1
INFO:root:Current state [[[[2], [9], [4], [5], [1], [3], [7, 8], [7, 8], [6]], [[6], [5, 7], [5, 7], [8], [4], [2], [3], [1], [9]], [[3], [1, 8], [1, 8], [6], [9], [7], [2], [5], [4]], [[1, 8], [1, 2, 7, 8], [1, 2, 3, 7, 8, 9], [2, 3], [5], [6], [1, 4, 7, 8, 9], [2, 4, 7, 8, 9], [2, 3, 8]], [[1, 5], [4], [1, 5, 7, 9], [2, 3], [8], [1, 9], [1, 5, 7, 9], [6], [2, 3]], [[1, 5, 8], [1, 2, 5, 6, 8], [1, 2, 3, 5, 6, 8, 9], [4], [7], [1, 9], [1, 5, 8, 9], [2, 8, 9], [2, 3, 8]], [[7], [3], [2, 8], [1], [6], [4], [8, 9], [2, 8, 9], [5]], [[9], [2, 6, 8], [2, 6, 8], [7], [3], [5], [4, 8], [2, 4, 8], [1]], [[4], [1, 5], [1, 5], [9], [2], [8], [6], [3], [7]]]]
INFO:root:Doing checkSmall1
INFO:root:Getting tiny MUSes, distance 1, for 1 puzlits, 1 repeats
INFO:root:Chunked 1 in [1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
INFO:root:Doing checkSmall2
INFO:root:Getting tiny MUSes, distance 2, for 1 puzlits, 1 repeats
INFO:root:Chunked 1 in [1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
INFO:root:Considering 100 * 1 jobs for minsize=3
INFO:root:Chunked 100 in [9, 9, 9, 9, 8, 8, 8, 8, 8, 8, 8, 8]
INFO:root:XX found first (4, 2) is not 1 4
INFO:root:XX add new best (4, 2) is not 1 4 4
INFO:root:XX add new best (4, 2) is not 1 4 4
INFO:root:XX add new best (4, 2) is not 1 4 4
INFO:root:XX add new best (4, 2) is not 1 4 4
INFO:root:XX add new best (4, 2) is not 1 4 4
INFO:root:XX add new best (4, 2) is not 1 4 4
INFO:root:XX add new best (4, 2) is not 1 4 4
INFO:root:XX add new best (4, 2) is not 1 4 4
INFO:root:XX add new best (4, 2) is not 1 4 4
INFO:root:XX add new best (4, 2) is not 1 4 4
INFO:root:XX add new best (4, 2) is not 1 4 4
INFO:root:XX add new best (4, 2) is not 1 4 4
INFO:root:XX add new best (4, 2) is not 1 4 4
INFO:root:XX add new best (4, 2) is not 1 4 4
INFO:root:XX add new best (4, 2) is not 1 4 4
INFO:root:XX add new best (4, 2) is not 1 4 4
INFO:root:XX add new best (4, 2) is not 1 4 4
INFO:root:XX add new best (4, 2) is not 1 4 4
INFO:root:Considering 100 * 1 jobs for minsize=4
INFO:root:Chunked 100 in [9, 9, 9, 9, 8, 8, 8, 8, 8, 8, 8, 8]
INFO:root:XX add new best (4, 2) is not 1 4 4
INFO:root:XX add new best (4, 2) is not 1 4 4
INFO:root:XX add new best (4, 2) is not 1 4 4
INFO:root:XX add new best (4, 2) is not 1 4 4
INFO:root:XX add new best (4, 2) is not 1 4 4
INFO:root:XX add new best (4, 2) is not 1 4 4
INFO:root:XX add new best (4, 2) is not 1 4 4
INFO:root:XX add new best (4, 2) is not 1 4 4
INFO:root:XX add new best (4, 2) is not 1 4 4
INFO:root:XX add new best (4, 2) is not 1 4 4
INFO:root:XX add new best (4, 2) is not 1 4 4
INFO:root:XX add new best (4, 2) is not 1 4 4
INFO:root:XX add new best (4, 2) is not 1 4 4
INFO:root:XX add new best (4, 2) is not 1 4 4
INFO:root:XX add new best (4, 2) is not 1 4 4
INFO:root:XX add new best (4, 2) is not 1 4 4
INFO:root:XX add new best (4, 2) is not 1 4 4
INFO:root:XX add new best (4, 2) is not 1 4 4
INFO:root:XX add new best (4, 2) is not 1 4 4
INFO:root:XX add new best (4, 2) is not 1 4 4
INFO:root:XX add new best (4, 2) is not 1 4 4
INFO:root:XX add new best (4, 2) is not 1 4 4
INFO:root:XX add new best (4, 2) is not 1 4 4
INFO:root:XX add new best (4, 2) is not 1 4 4
INFO:root:XX add new best (4, 2) is not 1 4 4
INFO:root:XX add new best (4, 2) is not 1 4 4
INFO:root:XX add new best (4, 2) is not 1 4 4
INFO:root:Trace: [(4, [(4, 2) is not 1])]
INFO:root:Trace Quality: [(4, 1)]
INFO:root:Trace Sorted: [(4, 1)]
INFO:root:Finished
INFO:root:Full Trace [(4, [(4, 2) is not 1])]
INFO:root:Trying {'gallopingMUSes': True, 'minPrecheckMUS': True}
INFO:root:Starting Step 1
INFO:root:Current state [[[[2], [9], [4], [5], [1], [3], [7, 8], [7, 8], [6]], [[6], [5, 7], [5, 7], [8], [4], [2], [3], [1], [9]], [[3], [1, 8], [1, 8], [6], [9], [7], [2], [5], [4]], [[1, 8], [1, 2, 7, 8], [1, 2, 3, 7, 8, 9], [2, 3], [5], [6], [1, 4, 7, 8, 9], [2, 4, 7, 8, 9], [2, 3, 8]], [[1, 5], [4], [1, 5, 7, 9], [2, 3], [8], [1, 9], [1, 5, 7, 9], [6], [2, 3]], [[1, 5, 8], [1, 2, 5, 6, 8], [1, 2, 3, 5, 6, 8, 9], [4], [7], [1, 9], [1, 5, 8, 9], [2, 8, 9], [2, 3, 8]], [[7], [3], [2, 8], [1], [6], [4], [8, 9], [2, 8, 9], [5]], [[9], [2, 6, 8], [2, 6, 8], [7], [3], [5], [4, 8], [2, 4, 8], [1]], [[4], [1, 5], [1, 5], [9], [2], [8], [6], [3], [7]]]]
INFO:root:Doing checkSmall1
INFO:root:Getting tiny MUSes, distance 1, for 1 puzlits, 1 repeats
INFO:root:Chunked 1 in [1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
INFO:root:Doing checkSmall2
INFO:root:Getting tiny MUSes, distance 2, for 1 puzlits, 1 repeats
INFO:root:Chunked 1 in [1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
INFO:root:Considering 100 * 1 jobs for minsize=3
INFO:root:Chunked 100 in [9, 9, 9, 9, 8, 8, 8, 8, 8, 8, 8, 8]
INFO:root:XX found first (4, 2) is not 1 4
INFO:root:XX add new best (4, 2) is not 1 4 4
INFO:root:XX add new best (4, 2) is not 1 4 4
INFO:root:XX add new best (4, 2) is not 1 4 4
INFO:root:XX add new best (4, 2) is not 1 4 4
INFO:root:XX add new best (4, 2) is not 1 4 4
INFO:root:XX add new best (4, 2) is not 1 4 4
INFO:root:XX add new best (4, 2) is not 1 4 4
INFO:root:XX add new best (4, 2) is not 1 4 4
INFO:root:XX add new best (4, 2) is not 1 4 4
INFO:root:XX add new best (4, 2) is not 1 4 4
INFO:root:XX add new best (4, 2) is not 1 4 4
INFO:root:XX add new best (4, 2) is not 1 4 4
INFO:root:XX add new best (4, 2) is not 1 4 4
INFO:root:XX add new best (4, 2) is not 1 4 4
INFO:root:XX add new best (4, 2) is not 1 4 4
INFO:root:XX add new best (4, 2) is not 1 4 4
INFO:root:XX add new best (4, 2) is not 1 4 4
INFO:root:XX add new best (4, 2) is not 1 4 4
INFO:root:Considering 100 * 1 jobs for minsize=4
INFO:root:Chunked 100 in [9, 9, 9, 9, 8, 8, 8, 8, 8, 8, 8, 8]
INFO:root:XX add new best (4, 2) is not 1 4 4
INFO:root:XX add new best (4, 2) is not 1 4 4
INFO:root:XX add new best (4, 2) is not 1 4 4
INFO:root:XX add new best (4, 2) is not 1 4 4
INFO:root:XX add new best (4, 2) is not 1 4 4
INFO:root:XX add new best (4, 2) is not 1 4 4
INFO:root:XX add new best (4, 2) is not 1 4 4
INFO:root:XX add new best (4, 2) is not 1 4 4
INFO:root:XX add new best (4, 2) is not 1 4 4
INFO:root:XX add new best (4, 2) is not 1 4 4
INFO:root:XX add new best (4, 2) is not 1 4 4
INFO:root:XX add new best (4, 2) is not 1 4 4
INFO:root:XX add new best (4, 2) is not 1 4 4
INFO:root:XX add new best (4, 2) is not 1 4 4
INFO:root:XX add new best (4, 2) is not 1 4 4
INFO:root:XX add new best (4, 2) is not 1 4 4
INFO:root:XX add new best (4, 2) is not 1 4 4
INFO:root:XX add new best (4, 2) is not 1 4 4
INFO:root:XX add new best (4, 2) is not 1 4 4
INFO:root:XX add new best (4, 2) is not 1 4 4
INFO:root:XX add new best (4, 2) is not 1 4 4
INFO:root:XX add new best (4, 2) is not 1 4 4
INFO:root:XX add new best (4, 2) is not 1 4 4
INFO:root:XX add new best (4, 2) is not 1 4 4
INFO:root:XX add new best (4, 2) is not 1 4 4
INFO:root:XX add new best (4, 2) is not 1 4 4
INFO:root:XX add new best (4, 2) is not 1 4 4
INFO:root:Trace: [(4, [(4, 2) is not 1])]
INFO:root:Trace Quality: [(4, 1)]
INFO:root:Trace Sorted: [(4, 1)]
INFO:root:Finished
INFO:root:Full Trace [(4, [(4, 2) is not 1])]
INFO:root:Trying {}
INFO:root:Starting Step 1
INFO:root:Current state [[[[1, 5], [1, 2, 4, 5], [2, 4, 5, 7], [4, 5], [3], [1, 9], [7, 9], [8], [6]], [[1, 5, 6, 8], [1, 5, 6, 8], [3, 5, 6, 7, 8], [5, 6], [2], [1, 9], [7, 9], [4], [1, 3]], [[1, 6], [9], [3, 4, 6], [4, 6], [7], [8], [5], [2], [1, 3]], [[3], [7], [1], [8], [5], [6], [2], [9], [4]], [[9], [6, 8], [6, 8], [1], [4], [2], [3], [7], [5]], [[4], [2, 5], [2, 5], [3], [9], [7], [6], [1], [8]], [[2], [1, 4, 6], [4, 6], [7], [1, 6], [3], [8], [5], [9]], [[1, 8], [3], [9], [2], [1, 8], [5], [4], [6], [7]], [[7], [5, 6, 8], [5, 6, 8], [9], [6, 8], [4], [1], [3], [2]]]]
INFO:root:Doing checkSmall1
INFO:root:Getting tiny MUSes, distance 1, for 1 puzlits, 1 repeats
INFO:root:Chunked 1 in [1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
INFO:root:Doing checkSmall2
INFO:root:Getting tiny MUSes, distance 2, for 1 puzlits, 1 repeats
INFO:root:Chunked 1 in [1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
INFO:root:Considering 100 * 1 jobs for minsize=3
INFO:root:Chunked 100 in [9, 9, 9, 9, 8, 8, 8, 8, 8, 8, 8, 8]
INFO:root:Considering 100 * 1 jobs for minsize=4
INFO:root:Chunked 100 in [9, 9, 9, 9, 8, 8, 8, 8, 8, 8, 8, 8]
INFO:root:Considering 100 * 1 jobs for minsize=5
INFO:root:Chunked 100 in [9, 9, 9, 9, 8, 8, 8, 8, 8, 8, 8, 8]
INFO:root:Considering 100 * 1 jobs for minsize=6
INFO:root:Chunked 100 in [9, 9, 9, 9, 8, 8, 8, 8, 8, 8, 8, 8]
INFO:root:Considering 100 * 1 jobs for minsize=7
INFO:root:Chunked 100 in [9, 9, 9, 9, 8, 8, 8, 8, 8, 8, 8, 8]
INFO:root:Considering 100 * 1 jobs for minsize=8
INFO:root:Chunked 100 in [9, 9, 9, 9, 8, 8, 8, 8, 8, 8, 8, 8]
INFO:root:Considering 100 * 1 jobs for minsize=9
INFO:root:Chunked 100 in [9, 9, 9, 9, 8, 8, 8, 8, 8, 8, 8, 8]
INFO:root:XX found first (1, 2) is not 1 10
INFO:root:XX add new best (1, 2) is not 1 10 10
INFO:root:XX add new best (1, 2) is not 1 10 10
INFO:root:XX add new best (1, 2) is not 1 10 10
INFO:root:XX add new best (1, 2) is not 1 10 10
INFO:root:XX add new best (1, 2) is not 1 10 10
INFO:root:XX add new best (1, 2) is not 1 10 10
INFO:root:XX add new best (1, 2) is not 1 10 10
INFO:root:XX add new best (1, 2) is not 1 10 10
INFO:root:XX add new best (1, 2) is not 1 10 10
INFO:root:XX add new best (1, 2) is not 1 10 10
INFO:root:XX add new best (1, 2) is not 1 10 10
INFO:root:XX add new best (1, 2) is not 1 10 10
INFO:root:XX add new best (1, 2) is not 1 10 10
INFO:root:XX add new best (1, 2) is not 1 10 10
INFO:root:XX add new best (1, 2) is not 1 10 10
INFO:root:XX add new best (1, 2) is not 1 10 10
INFO:root:XX add new best (1, 2) is not 1 10 10
INFO:root:XX add new best (1, 2) is not 1 10 10
INFO:root:XX add new best (1, 2) is not 1 10 10
INFO:root:XX add new best (1, 2) is not 1 10 10
INFO:root:XX add new best (1, 2) is not 1 10 10
INFO:root:XX add new best (1, 2) is not 1 10 10
INFO:root:XX add new best (1, 2) is not 1 10 10
INFO:root:XX add new best (1, 2) is not 1 10 10
INFO:root:XX add new best (1, 2) is not 1 10 10
INFO:root:XX add new best (1, 2) is not 1 10 10
INFO:root:XX add new best (1, 2) is not 1 10 10
INFO:root:XX add new best (1, 2) is not 1 10 10
INFO:root:XX add new best (1, 2) is not 1 10 10
INFO:root:XX add new best (1, 2) is not 1 10 10
INFO:root:XX add new best (1, 2) is not 1 10 10
INFO:root:XX add new best (1, 2) is not 1 10 10
INFO:root:XX add new best (1, 2) is not 1 10 10
INFO:root:XX add new best (1, 2) is not 1 10 10
INFO:root:XX add new best (1, 2) is not 1 10 10
INFO:root:XX add new best (1, 2) is not 1 10 10
INFO:root:XX add new best (1, 2) is not 1 10 10
INFO:root:XX add new best (1, 2) is not 1 10 10
INFO:root:XX add new best (1, 2) is not 1 10 10
INFO:root:XX add new best (1, 2) is not 1 10 10
INFO:root:XX add new best (1, 2) is not 1 10 10
INFO:root:XX add new best (1, 2) is not 1 10 10
INFO:root:XX add new best (1, 2) is not 1 10 10
INFO:root:XX add new best (1, 2) is not 1 10 10
INFO:root:XX add new best (1, 2) is not 1 10 10
INFO:root:XX add new best (1, 2) is not 1 10 10
INFO:root:XX add new best (1, 2) is not 1 10 10
INFO:root:XX add new best (1, 2) is not 1 10 10
INFO:root:XX add new best (1, 2) is not 1 10 10
INFO:root:XX add new best (1, 2) is not 1 10 10
INFO:root:XX add new best (1, 2) is not 1 10 10
INFO:root:XX add new best (1, 2) is not 1 10 10
INFO:root:XX add new best (1, 2) is not 1 10 10
INFO:root:XX add new best (1, 2) is not 1 10 10
INFO:root:XX add new best (1, 2) is not 1 10 10
INFO:root:XX add new best (1, 2) is not 1 10 10
INFO:root:XX add new best (1, 2) is not 1 10 10
INFO:root:XX add new best (1, 2) is not 1 10 10
INFO:root:XX add new best (1, 2) is not 1 10 10
INFO:root:XX add new best (1, 2) is not 1 10 10
INFO:root:XX add new best (1, 2) is not 1 10 10
INFO:root:XX add new best (1, 2) is not 1 10 10
INFO:root:XX add new best (1, 2) is not 1 10 10
INFO:root:XX add new best (1, 2) is not 1 10 10
INFO:root:XX add new best (1, 2) is not 1 10 10
INFO:root:XX add new best (1, 2) is not 1 10 10
INFO:root:XX add new best (1, 2) is not 1 10 10
INFO:root:XX add new best (1, 2) is not 1 10 10
INFO:root:XX add new best (1, 2) is not 1 10 10
INFO:root:XX add new best (1, 2) is not 1 10 10
INFO:root:XX add new best (1, 2) is not 1 10 10
INFO:root:XX add new best (1, 2) is not 1 10 10
INFO:root:XX add new best (1, 2) is not 1 10 10
INFO:root:XX add new best (1, 2) is not 1 10 10
INFO:root:XX add new best (1, 2) is not 1 10 10
INFO:root:XX add new best (1, 2) is not 1 10 10
INFO:root:XX add new best (1, 2) is not 1 10 10
INFO:root:XX add new best (1, 2) is not 1 10 10
INFO:root:XX add new best (1, 2) is not 1 10 10
INFO:root:XX add new best (1, 2) is not 1 10 10
INFO:root:XX add new best (1, 2) is not 1 10 10
INFO:root:XX add new best (1, 2) is not 1 10 10
INFO:root:XX add new best (1, 2) is not 1 10 10
INFO:root:XX add new best (1, 2) is not 1 10 10
INFO:root:XX add new best (1, 2) is not 1 10 10
INFO:root:XX add new best (1, 2) is not 1 10 10
INFO:root:XX add new best (1, 2) is not 1 10 10
INFO:root:XX add new best (1, 2) is not 1 10 10
INFO:root:XX add new best (1, 2) is not 1 10 10
INFO:root:XX add new best (1, 2) is not 1 10 10
INFO:root:XX add new best (1, 2) is not 1 10 10
INFO:root:XX add new best (1, 2) is not 1 10 10
INFO:root:XX add new best (1, 2) is not 1 10 10
INFO:root:XX add new best (1, 2) is not 1 10 10
INFO:root:XX add new best (1, 2) is not 1 10 10
INFO:root:XX add new best (1, 2) is not 1 10 10
INFO:root:XX add new best (1, 2) is not 1 10 10
INFO:root:XX add new best (1, 2) is not 1 10 10
INFO:root:XX add new best (1, 2) is not 1 10 10
INFO:root:Considering 100 * 1 jobs for minsize=10
INFO:root:Chunked 100 in [9, 9, 9, 9, 8, 8, 8, 8, 8, 8, 8, 8]
INFO:root:XX add new best (1, 2) is not 1 10 10
INFO:root:XX add new best (1, 2) is not 1 10 10
INFO:root:XX add new best (1, 2) is not 1 10 10
INFO:root:XX add new best (1, 2) is not 1 10 10
INFO:root:XX add new best (1, 2) is not 1 10 10
INFO:root:XX add new best (1, 2) is not 1 10 10
INFO:root:XX add new best (1, 2) is not 1 10 10
INFO:root:XX add new best (1, 2) is not 1 10 10
INFO:root:XX add new best (1, 2) is not 1 10 10
INFO:root:XX add new best (1, 2) is not 1 10 10
INFO:root:XX add new best (1, 2) is not 1 10 10
INFO:root:XX add new best (1, 2) is not 1 10 10
INFO:root:XX add new best (1, 2) is not 1 10 10
INFO:root:XX add new best (1, 2) is not 1 10 10
INFO:root:XX add new best (1, 2) is not 1 10 10
INFO:root:XX add new best (1, 2) is not 1 10 10
INFO:root:XX add new best (1, 2) is not 1 10 10
INFO:root:XX add new best (1, 2) is not 1 10 10
INFO:root:XX add new best (1, 2) is not 1 10 10
INFO:root:XX add new best (1, 2) is not 1 10 10
INFO:root:XX add new best (1, 2) is not 1 10 10
INFO:root:XX add new best (1, 2) is not 1 10 10
INFO:root:XX add new best (1, 2) is not 1 10 10
INFO:root:XX add new best (1, 2) is not 1 10 10
INFO:root:XX add new best (1, 2) is not 1 10 10
INFO:root:XX add new best (1, 2) is not 1 10 10
INFO:root:XX add new best (1, 2) is not 1 10 10
INFO:root:XX add new best (1, 2) is not 1 10 10
INFO:root:XX add new best (1, 2) is not 1 10 10
INFO:root:XX add new best (1, 2) is not 1 10 10
INFO:root:XX add new best (1, 2) is not 1 10 10
INFO:root:XX add new best (1, 2) is not 1 10 10
INFO:root:XX add new best (1, 2) is not 1 10 10
INFO:root:XX add new best (1, 2) is not 1 10 10
INFO:root:XX add new best (1, 2) is not 1 10 10
INFO:root:XX add new best (1, 2) is not 1 10 10
INFO:root:XX add new best (1, 2) is not 1 10 10
INFO:root:XX add new best (1, 2) is not 1 10 10
INFO:root:XX add new best (1, 2) is not 1 10 10
INFO:root:XX add new best (1, 2) is not 1 10 10
INFO:root:XX add new best (1, 2) is not 1 10 10
INFO:root:XX add new best (1, 2) is not 1 10 10
INFO:root:XX add new best (1, 2) is not 1 10 10
INFO:root:XX add new best (1, 2) is not 1 10 10
INFO:root:XX add new best (1, 2) is not 1 10 10
INFO:root:XX add new best (1, 2) is not 1 10 10
INFO:root:XX add new best (1, 2) is not 1 10 10
INFO:root:XX add new best (1, 2) is not 1 10 10
INFO:root:XX add new best (1, 2) is not 1 10 10
INFO:root:XX add new best (1, 2) is not 1 10 10
INFO:root:XX add new best (1, 2) is not 1 10 10
INFO:root:XX add new best (1, 2) is not 1 10 10
INFO:root:XX add new best (1, 2) is not 1 10 10
INFO:root:XX add new best (1, 2) is not 1 10 10
INFO:root:XX add new best (1, 2) is not 1 10 10
INFO:root:XX add new best (1, 2) is not 1 10 10
INFO:root:XX add new best (1, 2) is not 1 10 10
INFO:root:XX add new best (1, 2) is not 1 10 10
INFO:root:XX add new best (1, 2) is not 1 10 10
INFO:root:XX add new best (1, 2) is not 1 10 10
INFO:root:XX add new best (1, 2) is not 1 10 10
INFO:root:XX add new best (1, 2) is not 1 10 10
INFO:root:XX add new best (1, 2) is not 1 10 10
INFO:root:XX add new best (1, 2) is not 1 10 10
INFO:root:XX add new best (1, 2) is not 1 10 10
INFO:root:XX add new best (1, 2) is not 1 10 10
INFO:root:XX add new best (1, 2) is not 1 10 10
INFO:root:XX add new best (1, 2) is not 1 10 10
INFO:root:XX add new best (1, 2) is not 1 10 10
INFO:root:XX add new best (1, 2) is not 1 10 10
INFO:root:XX add new best (1, 2) is not 1 10 10
INFO:root:XX add new best (1, 2) is not 1 10 10
INFO:root:XX add new best (1, 2) is not 1 10 10
INFO:root:XX add new best (1, 2) is not 1 10 10
INFO:root:XX add new best (1, 2) is not 1 10 10
INFO:root:XX add new best (1, 2) is not 1 10 10
INFO:root:XX add new best (1, 2) is not 1 10 10
INFO:root:XX add new best (1, 2) is not 1 10 10
INFO:root:XX add new best (1, 2) is not 1 10 10
INFO:root:XX add new best (1, 2) is not 1 10 10
INFO:root:XX add new best (1, 2) is not 1 10 10
INFO:root:XX add new best (1, 2) is not 1 10 10
INFO:root:XX add new best (1, 2) is not 1 10 10
INFO:root:XX add new best (1, 2) is not 1 10 10
INFO:root:XX add new best (1, 2) is not 1 10 10
INFO:root:XX add new best (1, 2) is not 1 10 10
INFO:root:XX add new best (1, 2) is not 1 10 10
INFO:root:XX add new best (1, 2) is not 1 10 10
INFO:root:XX add new best (1, 2) is not 1 10 10
INFO:root:XX add new best (1, 2) is not 1 10 10
INFO:root:XX add new best (1, 2) is not 1 10 10
INFO:root:XX add new best (1, 2) is not 1 10 10
INFO:root:XX add new best (1, 2) is not 1 10 10
INFO:root:XX add new best (1, 2) is not 1 10 10
INFO:root:XX add new best (1, 2) is not 1 10 10
INFO:root:XX add new best (1, 2) is not 1 10 10
INFO:root:XX add new best (1, 2) is not 1 10 10
INFO:root:XX add new best (1, 2) is not 1 10 10
INFO:root:XX add new best (1, 2) is not 1 10 10
INFO:root:XX add new best (1, 2) is not 1 10 10
INFO:root:Trace: [(10, [(1, 2) is not 1])]
INFO:root:Trace Quality: [(10, 1)]
INFO:root:Trace Sorted: [(10, 1)]
INFO:root:Finished
INFO:root:Full Trace [(10, [(1, 2) is not 1])]
INFO:root:Trying {'prechopMUSes': True}
INFO:root:Starting Step 1
INFO:root:Current state [[[[1, 5], [1, 2, 4, 5], [2, 4, 5, 7], [4, 5], [3], [1, 9], [7, 9], [8], [6]], [[1, 5, 6, 8], [1, 5, 6, 8], [3, 5, 6, 7, 8], [5, 6], [2], [1, 9], [7, 9], [4], [1, 3]], [[1, 6], [9], [3, 4, 6], [4, 6], [7], [8], [5], [2], [1, 3]], [[3], [7], [1], [8], [5], [6], [2], [9], [4]], [[9], [6, 8], [6, 8], [1], [4], [2], [3], [7], [5]], [[4], [2, 5], [2, 5], [3], [9], [7], [6], [1], [8]], [[2], [1, 4, 6], [4, 6], [7], [1, 6], [3], [8], [5], [9]], [[1, 8], [3], [9], [2], [1, 8], [5], [4], [6], [7]], [[7], [5, 6, 8], [5, 6, 8], [9], [6, 8], [4], [1], [3], [2]]]]
INFO:root:Doing checkSmall1
INFO:root:Getting tiny MUSes, distance 1, for 1 puzlits, 1 repeats
INFO:root:Chunked 1 in [1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
INFO:root:Doing checkSmall2
INFO:root:Getting tiny MUSes, distance 2, for 1 puzlits, 1 repeats
INFO:root:Chunked 1 in [1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
INFO:root:Considering 100 * 1 jobs for minsize=3
INFO:root:Chunked 100 in [9, 9, 9, 9, 8, 8, 8, 8, 8, 8, 8, 8]
INFO:root:Considering 100 * 1 jobs for minsize=4
INFO:root:Chunked 100 in [9, 9, 9, 9, 8, 8, 8, 8, 8, 8, 8, 8]
INFO:root:Considering 100 * 1 jobs for minsize=5
INFO:root:Chunked 100 in [9, 9, 9, 9, 8, 8, 8, 8, 8, 8, 8, 8]
INFO:root:Considering 100 * 1 jobs for minsize=6
INFO:root:Chunked 100 in [9, 9, 9, 9, 8, 8, 8, 8, 8, 8, 8, 8]
INFO:root:Considering 100 * 1 jobs for minsize=7
INFO:root:Chunked 100 in [9, 9, 9, 9, 8, 8, 8, 8, 8, 8, 8, 8]
INFO:root:Considering 100 * 1 jobs for minsize=8
INFO:root:Chunked 100 in [9, 9, 9, 9, 8, 8, 8, 8, 8, 8, 8, 8]
INFO:root:XX found first (1, 2) is not 1 9
INFO:root:XX add new best (1, 2) is not 1 9 9
INFO:root:XX add new best (1, 2) is not 1 9 9
INFO:root:XX add new best (1, 2) is not 1 9 9
INFO:root:XX add new best (1, 2) is not 1 9 9
INFO:root:Considering 100 * 1 jobs for minsize=9
INFO:root:Chunked 100 in [9, 9, 9, 9, 8, 8, 8, 8, 8, 8, 8, 8]
INFO:root:XX add new best (1, 2) is not 1 9 9
INFO:root:XX add new best (1, 2) is not 1 9 9
INFO:root:Trace: [(9, [(1, 2) is not 1])]
INFO:root:Trace Quality: [(9, 1)]
INFO:root:Trace Sorted: [(9, 1)]
INFO:root:Finished
INFO:root:Full Trace [(9, [(1, 2) is not 1])]
INFO:root:Trying {'quarterChopMUS': True}
INFO:root:Starting Step 1
INFO:root:Current state [[[[1, 5], [1, 2, 4, 5], [2, 4, 5, 7], [4, 5], [3], [1, 9], [7, 9], [8], [6]], [[1, 5, 6, 8], [1, 5, 6, 8], [3, 5, 6, 7, 8], [5, 6], [2], [1, 9], [7, 9], [4], [1, 3]], [[1, 6], [9], [3, 4, 6], [4, 6], [7], [8], [5], [2], [1, 3]], [[3], [7], [1], [8], [5], [6], [2], [9], [4]], [[9], [6, 8], [6, 8], [1], [4], [2], [3], [7], [5]], [[4], [2, 5], [2, 5], [3], [9], [7], [6], [1], [8]], [[2], [1, 4, 6], [4, 6], [7], [1, 6], [3], [8], [5], [9]], [[1, 8], [3], [9], [2], [1, 8], [5], [4], [6], [7]], [[7], [5, 6, 8], [5, 6, 8], [9], [6, 8], [4], [1], [3], [2]]]]
INFO:root:Doing checkSmall1
INFO:root:Getting tiny MUSes, distance 1, for 1 puzlits, 1 repeats
INFO:root:Chunked 1 in [1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
INFO:root:Doing checkSmall2
INFO:root:Getting tiny MUSes, distance 2, for 1 puzlits, 1 repeats
INFO:root:Chunked 1 in [1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
INFO:root:Considering 100 * 1 jobs for minsize=3
INFO:root:Chunked 100 in [9, 9, 9, 9, 8, 8, 8, 8, 8, 8, 8, 8]
INFO:root:Considering 100 * 1 jobs for minsize=4
INFO:root:Chunked 100 in [9, 9, 9, 9, 8, 8, 8, 8, 8, 8, 8, 8]
INFO:root:Considering 100 * 1 jobs for minsize=5
INFO:root:Chunked 100 in [9, 9, 9, 9, 8, 8, 8, 8, 8, 8, 8, 8]
INFO:root:Considering 100 * 1 jobs for minsize=6
INFO:root:Chunked 100 in [9, 9, 9, 9, 8, 8, 8, 8, 8, 8, 8, 8]
INFO:root:Considering 100 * 1 jobs for minsize=7
INFO:root:Chunked 100 in [9, 9, 9, 9, 8, 8, 8, 8, 8, 8, 8, 8]
INFO:root:Considering 100 * 1 jobs for minsize=8
INFO:root:Chunked 100 in [9, 9, 9, 9, 8, 8, 8, 8, 8, 8, 8, 8]
INFO:root:XX found first (1, 2) is not 1 9
INFO:root:XX add new best (1, 2) is not 1 9 9
INFO:root:XX add new best (1, 2) is not 1 9 9
INFO:root:Considering 100 * 1 jobs for minsize=9
INFO:root:Chunked 100 in [9, 9, 9, 9, 8, 8, 8, 8, 8, 8, 8, 8]
INFO:root:XX add new best (1, 2) is not 1 9 9
INFO:root:Trace: [(9, [(1, 2) is not 1])]
INFO:root:Trace Quality: [(9, 1)]
INFO:root:Trace Sorted: [(9, 1)]
INFO:root:Finished
INFO:root:Full Trace [(9, [(1, 2) is not 1])]
INFO:root:Trying {'minPrecheckMUS': True}
INFO:root:Starting Step 1
INFO:root:Current state [[[[1, 5], [1, 2, 4, 5], [2, 4, 5, 7], [4, 5], [3], [1, 9], [7, 9], [8], [6]], [[1, 5, 6, 8], [1, 5, 6, 8], [3, 5, 6, 7, 8], [5, 6], [2], [1, 9], [7, 9], [4], [1, 3]], [[1, 6], [9], [3, 4, 6], [4, 6], [7], [8], [5], [2], [1, 3]], [[3], [7], [1], [8], [5], [6], [2], [9], [4]], [[9], [6, 8], [6, 8], [1], [4], [2], [3], [7], [5]], [[4], [2, 5], [2, 5], [3], [9], [7], [6], [1], [8]], [[2], [1, 4, 6], [4, 6], [7], [1, 6], [3], [8], [5], [9]], [[1, 8], [3], [9], [2], [1, 8], [5], [4], [6], [7]], [[7], [5, 6, 8], [5, 6, 8], [9], [6, 8], [4], [1], [3], [2]]]]
INFO:root:Doing checkSmall1
INFO:root:Getting tiny MUSes, distance 1, for 1 puzlits, 1 repeats
INFO:root:Chunked 1 in [1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
INFO:root:Doing checkSmall2
INFO:root:Getting tiny MUSes, distance 2, for 1 puzlits, 1 repeats
INFO:root:Chunked 1 in [1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
INFO:root:Considering 100 * 1 jobs for minsize=3
INFO:root:Chunked 100 in [9, 9, 9, 9, 8, 8, 8, 8, 8, 8, 8, 8]
INFO:root:Considering 100 * 1 jobs for minsize=4
INFO:root:Chunked 100 in [9, 9, 9, 9, 8, 8, 8, 8, 8, 8, 8, 8]
INFO:root:Considering 100 * 1 jobs for minsize=5
INFO:root:Chunked 100 in [9, 9, 9, 9, 8, 8, 8, 8, 8, 8, 8, 8]
INFO:root:Considering 100 * 1 jobs for minsize=6
INFO:root:Chunked 100 in [9, 9, 9, 9, 8, 8, 8, 8, 8, 8, 8, 8]
INFO:root:Considering 100 * 1 jobs for minsize=7
INFO:root:Chunked 100 in [9, 9, 9, 9, 8, 8, 8, 8, 8, 8, 8, 8]
INFO:root:Considering 100 * 1 jobs for minsize=8
INFO:root:Chunked 100 in [9, 9, 9, 9, 8, 8, 8, 8, 8, 8, 8, 8]
INFO:root:XX found first (1, 2) is not 1 9
INFO:root:XX add new best (1, 2) is not 1 9 9
INFO:root:XX add new best (1, 2) is not 1 9 9
INFO:root:XX add new best (1, 2) is not 1 9 9
INFO:root:Considering 100 * 1 jobs for minsize=9
INFO:root:Chunked 100 in [9, 9, 9, 9, 8, 8, 8, 8, 8, 8, 8, 8]
INFO:root:XX add new best (1, 2) is not 1 9 9
INFO:root:XX add new best (1, 2) is not 1 9 9
INFO:root:XX add new best (1, 2) is not 1 9 9
INFO:root:Trace: [(9, [(1, 2) is not 1])]
INFO:root:Trace Quality: [(9, 1)]
INFO:root:Trace Sorted: [(9, 1)]
INFO:root:Finished
INFO:root:Full Trace [(9, [(1, 2) is not 1])]
INFO:root:Trying {'gallopingMUSes': True}
INFO:root:Starting Step 1
INFO:root:Current state [[[[1, 5], [1, 2, 4, 5], [2, 4, 5, 7], [4, 5], [3], [1, 9], [7, 9], [8], [6]], [[1, 5, 6, 8], [1, 5, 6, 8], [3, 5, 6, 7, 8], [5, 6], [2], [1, 9], [7, 9], [4], [1, 3]], [[1, 6], [9], [3, 4, 6], [4, 6], [7], [8], [5], [2], [1, 3]], [[3], [7], [1], [8], [5], [6], [2], [9], [4]], [[9], [6, 8], [6, 8], [1], [4], [2], [3], [7], [5]], [[4], [2, 5], [2, 5], [3], [9], [7], [6], [1], [8]], [[2], [1, 4, 6], [4, 6], [7], [1, 6], [3], [8], [5], [9]], [[1, 8], [3], [9], [2], [1, 8], [5], [4], [6], [7]], [[7], [5, 6, 8], [5, 6, 8], [9], [6, 8], [4], [1], [3], [2]]]]
INFO:root:Doing checkSmall1
INFO:root:Getting tiny MUSes, distance 1, for 1 puzlits, 1 repeats
INFO:root:Chunked 1 in [1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
INFO:root:Doing checkSmall2
INFO:root:Getting tiny MUSes, distance 2, for 1 puzlits, 1 repeats
INFO:root:Chunked 1 in [1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
INFO:root:Considering 100 * 1 jobs for minsize=3
INFO:root:Chunked 100 in [9, 9, 9, 9, 8, 8, 8, 8, 8, 8, 8, 8]
INFO:root:Considering 100 * 1 jobs for minsize=4
INFO:root:Chunked 100 in [9, 9, 9, 9, 8, 8, 8, 8, 8, 8, 8, 8]
INFO:root:Considering 100 * 1 jobs for minsize=5
INFO:root:Chunked 100 in [9, 9, 9, 9, 8, 8, 8, 8, 8, 8, 8, 8]
INFO:root:Considering 100 * 1 jobs for minsize=6
INFO:root:Chunked 100 in [9, 9, 9, 9, 8, 8, 8, 8, 8, 8, 8, 8]
INFO:root:Considering 100 * 1 jobs for minsize=7
INFO:root:Chunked 100 in [9, 9, 9, 9, 8, 8, 8, 8, 8, 8, 8, 8]
INFO:root:Considering 100 * 1 jobs for minsize=8
INFO:root:Chunked 100 in [9, 9, 9, 9, 8, 8, 8, 8, 8, 8, 8, 8]
INFO:root:XX found first (1, 2) is not 1 9
INFO:root:XX add new best (1, 2) is not 1 9 9
INFO:root:XX add new best (1, 2) is not 1 9 9
INFO:root:Considering 100 * 1 jobs for minsize=9
INFO:root:Chunked 100 in [9, 9, 9, 9, 8, 8, 8, 8, 8, 8, 8, 8]
INFO:root:XX add new best (1, 2) is not 1 9 9
INFO:root:XX add new best (1, 2) is not 1 9 9
INFO:root:XX add new best (1, 2) is not 1 9 9
INFO:root:Trace: [(9, [(1, 2) is not 1])]
INFO:root:Trace Quality: [(9, 1)]
INFO:root:Trace Sorted: [(9, 1)]
INFO:root:Finished
INFO:root:Full Trace [(9, [(1, 2) is not 1])]
INFO:root:Trying {'minPrecheckStepsMUS': True}
INFO:root:Starting Step 1
INFO:root:Current state [[[[1, 5], [1, 2, 4, 5], [2, 4, 5, 7], [4, 5], [3], [1, 9], [7, 9], [8], [6]], [[1, 5, 6, 8], [1, 5, 6, 8], [3, 5, 6, 7, 8], [5, 6], [2], [1, 9], [7, 9], [4], [1, 3]], [[1, 6], [9], [3, 4, 6], [4, 6], [7], [8], [5], [2], [1, 3]], [[3], [7], [1], [8], [5], [6], [2], [9], [4]], [[9], [6, 8], [6, 8], [1], [4], [2], [3], [7], [5]], [[4], [2, 5], [2, 5], [3], [9], [7], [6], [1], [8]], [[2], [1, 4, 6], [4, 6], [7], [1, 6], [3], [8], [5], [9]], [[1, 8], [3], [9], [2], [1, 8], [5], [4], [6], [7]], [[7], [5, 6, 8], [5, 6, 8], [9], [6, 8], [4], [1], [3], [2]]]]
INFO:root:Doing checkSmall1
INFO:root:Getting tiny MUSes, distance 1, for 1 puzlits, 1 repeats
INFO:root:Chunked 1 in [1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
INFO:root:Doing checkSmall2
INFO:root:Getting tiny MUSes, distance 2, for 1 puzlits, 1 repeats
INFO:root:Chunked 1 in [1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
INFO:root:Considering 100 * 1 jobs for minsize=3
INFO:root:Chunked 100 in [9, 9, 9, 9, 8, 8, 8, 8, 8, 8, 8, 8]
INFO:root:Considering 100 * 1 jobs for minsize=4
INFO:root:Chunked 100 in [9, 9, 9, 9, 8, 8, 8, 8, 8, 8, 8, 8]
INFO:root:Considering 100 * 1 jobs for minsize=5
INFO:root:Chunked 100 in [9, 9, 9, 9, 8, 8, 8, 8, 8, 8, 8, 8]
INFO:root:Considering 100 * 1 jobs for minsize=6
INFO:root:Chunked 100 in [9, 9, 9, 9, 8, 8, 8, 8, 8, 8, 8, 8]
INFO:root:Considering 100 * 1 jobs for minsize=7
INFO:root:Chunked 100 in [9, 9, 9, 9, 8, 8, 8, 8, 8, 8, 8, 8]
INFO:root:Considering 100 * 1 jobs for minsize=8
INFO:root:Chunked 100 in [9, 9, 9, 9, 8, 8, 8, 8, 8, 8, 8, 8]
INFO:root:XX found first (1, 2) is not 1 9
INFO:root:XX add new best (1, 2) is not 1 9 9
INFO:root:XX add new best (1, 2) is not 1 9 9
INFO:root:XX add new best (1, 2) is not 1 9 9
INFO:root:Considering 100 * 1 jobs for minsize=9
INFO:root:Chunked 100 in [9, 9, 9, 9, 8, 8, 8, 8, 8, 8, 8, 8]
INFO:root:XX add new best (1, 2) is not 1 9 9
INFO:root:XX add new best (1, 2) is not 1 9 9
INFO:root:XX add new best (1, 2) is not 1 9 9
INFO:root:Trace: [(9, [(1, 2) is not 1])]
INFO:root:Trace Quality: [(9, 1)]
INFO:root:Trace Sorted: [(9, 1)]
INFO:root:Finished
INFO:root:Full Trace [(9, [(1, 2) is not 1])]
INFO:root:Trying {'gallopingMUSes': True, 'minPrecheckMUS': True}
INFO:root:Starting Step 1
INFO:root:Current state [[[[1, 5], [1, 2, 4, 5], [2, 4, 5, 7], [4, 5], [3], [1, 9], [7, 9], [8], [6]], [[1, 5, 6, 8], [1, 5, 6, 8], [3, 5, 6, 7, 8], [5, 6], [2], [1, 9], [7, 9], [4], [1, 3]], [[1, 6], [9], [3, 4, 6], [4, 6], [7], [8], [5], [2], [1, 3]], [[3], [7], [1], [8], [5], [6], [2], [9], [4]], [[9], [6, 8], [6, 8], [1], [4], [2], [3], [7], [5]], [[4], [2, 5], [2, 5], [3], [9], [7], [6], [1], [8]], [[2], [1, 4, 6], [4, 6], [7], [1, 6], [3], [8], [5], [9]], [[1, 8], [3], [9], [2], [1, 8], [5], [4], [6], [7]], [[7], [5, 6, 8], [5, 6, 8], [9], [6, 8], [4], [1], [3], [2]]]]
INFO:root:Doing checkSmall1
INFO:root:Getting tiny MUSes, distance 1, for 1 puzlits, 1 repeats
INFO:root:Chunked 1 in [1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
INFO:root:Doing checkSmall2
INFO:root:Getting tiny MUSes, distance 2, for 1 puzlits, 1 repeats
INFO:root:Chunked 1 in [1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
INFO:root:Considering 100 * 1 jobs for minsize=3
INFO:root:Chunked 100 in [9, 9, 9, 9, 8, 8, 8, 8, 8, 8, 8, 8]
INFO:root:Considering 100 * 1 jobs for minsize=4
INFO:root:Chunked 100 in [9, 9, 9, 9, 8, 8, 8, 8, 8, 8, 8, 8]
INFO:root:Considering 100 * 1 jobs for minsize=5
INFO:root:Chunked 100 in [9, 9, 9, 9, 8, 8, 8, 8, 8, 8, 8, 8]
INFO:root:Considering 100 * 1 jobs for minsize=6
INFO:root:Chunked 100 in [9, 9, 9, 9, 8, 8, 8, 8, 8, 8, 8, 8]
INFO:root:Considering 100 * 1 jobs for minsize=7
INFO:root:Chunked 100 in [9, 9, 9, 9, 8, 8, 8, 8, 8, 8, 8, 8]
INFO:root:Considering 100 * 1 jobs for minsize=8
INFO:root:Chunked 100 in [9, 9, 9, 9, 8, 8, 8, 8, 8, 8, 8, 8]
INFO:root:XX found first (1, 2) is not 1 9
INFO:root:XX add new best (1, 2) is not 1 9 9
INFO:root:XX add new best (1, 2) is not 1 9 9
INFO:root:XX add new best (1, 2) is not 1 9 9
INFO:root:Considering 100 * 1 jobs for minsize=9
INFO:root:Chunked 100 in [9, 9, 9, 9, 8, 8, 8, 8, 8, 8, 8, 8]
INFO:root:XX add new best (1, 2) is not 1 9 9
INFO:root:XX add new best (1, 2) is not 1 9 9
INFO:root:XX add new best (1, 2) is not 1 9 9
INFO:root:Trace: [(9, [(1, 2) is not 1])]
INFO:root:Trace Quality: [(9, 1)]
INFO:root:Trace Sorted: [(9, 1)]
INFO:root:Finished
INFO:root:Full Trace [(9, [(1, 2) is not 1])]
INFO:root:Trying {}
INFO:root:Starting Step 1
INFO:root:Current state [[[[1, 2, 5, 8], [1, 2, 3, 8], [2, 3], [1, 2, 9], [1, 2, 3, 5, 9], [5, 9], [4, 5, 8, 9], [2, 3, 4, 5, 6, 7, 9], [3, 4, 5, 6, 7, 9]], [[9], [1, 2, 3, 8], [4], [6], [1, 2, 3, 5], [7], [5, 8], [2, 3, 5], [3, 5]], [[2, 5], [7], [6], [8], [2, 3, 5, 9], [4], [1], [2, 3, 5, 9], [3, 5, 9]], [[3], [2, 4, 6], [9], [7], [2, 4, 5, 6], [1], [4, 5], [8], [4, 5, 6]], [[7], [2, 4, 6], [8], [2, 9], [2, 4, 5, 6, 9], [5, 6, 9], [3], [4, 5, 6, 9], [1]], [[4, 6], [5], [1], [3], [4, 6, 9], [8], [7], [4, 6, 9], [2]], [[4, 8], [3, 4, 8, 9], [7], [5], [8, 9], [2], [6], [1], [3, 4, 9]], [[1, 6], [1, 6, 9], [5], [4], [1, 6, 7, 9], [3], [2], [7, 9], [8]], [[1, 2, 4, 6, 8], [1, 2, 3, 4, 6, 8, 9], [2, 3], [1, 9], [1, 6, 7, 8, 9], [6, 9], [4, 5, 9], [3, 4, 5, 7, 9], [3, 4, 5, 7, 9]]]]
INFO:root:Doing checkSmall1
INFO:root:Getting tiny MUSes, distance 1, for 1 puzlits, 1 repeats
INFO:root:Chunked 1 in [1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
INFO:root:Doing checkSmall2
INFO:root:Getting tiny MUSes, distance 2, for 1 puzlits, 1 repeats
INFO:root:Chunked 1 in [1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
INFO:root:Considering 100 * 1 jobs for minsize=3
INFO:root:Chunked 100 in [9, 9, 9, 9, 8, 8, 8, 8, 8, 8, 8, 8]
INFO:root:Considering 100 * 1 jobs for minsize=4
INFO:root:Chunked 100 in [9, 9, 9, 9, 8, 8, 8, 8, 8, 8, 8, 8]
INFO:root:XX found first (1, 8) is not 2 5
INFO:root:XX add new best (1, 8) is not 2 5 5
INFO:root:XX add new best (1, 8) is not 2 5 5
INFO:root:XX add new best (1, 8) is not 2 5 5
INFO:root:XX add new best (1, 8) is not 2 5 5
INFO:root:XX add new best (1, 8) is not 2 5 5
INFO:root:XX add new best (1, 8) is not 2 5 5
INFO:root:XX add new best (1, 8) is not 2 5 5
INFO:root:XX add new best (1, 8) is not 2 5 5
INFO:root:XX add new best (1, 8) is not 2 5 5
INFO:root:XX add new best (1, 8) is not 2 5 5
INFO:root:XX add new best (1, 8) is not 2 5 5
INFO:root:XX add new best (1, 8) is not 2 5 5
INFO:root:XX add new best (1, 8) is not 2 5 5
INFO:root:XX add new best (1, 8) is not 2 5 5
INFO:root:XX add new best (1, 8) is not 2 5 5
INFO:root:XX add new best (1, 8) is not 2 5 5
INFO:root:XX add new best (1, 8) is not 2 5 5
INFO:root:XX add new best (1, 8) is not 2 5 5
INFO:root:XX add new best (1, 8) is not 2 5 5
INFO:root:XX add new best (1, 8) is not 2 5 5
INFO:root:XX add new best (1, 8) is not 2 5 5
INFO:root:XX add new best (1, 8) is not 2 5 5
INFO:root:XX add new best (1, 8) is not 2 5 5
INFO:root:XX add new best (1, 8) is not 2 5 5
INFO:root:XX add new best (1, 8) is not 2 5 5
INFO:root:XX add new best (1, 8) is not 2 5 5
INFO:root:XX add new best (1, 8) is not 2 5 5
INFO:root:XX add new best (1, 8) is not 2 5 5
INFO:root:XX add new best (1, 8) is not 2 5 5
INFO:root:XX add new best (1, 8) is not 2 5 5
INFO:root:XX add new best (1, 8) is not 2 5 5
INFO:root:XX add new best (1, 8) is not 2 5 5
INFO:root:XX add new best (1, 8) is not 2 5 5
INFO:root:XX add new best (1, 8) is not 2 5 5
INFO:root:XX add new best (1, 8) is not 2 5 5
INFO:root:XX add new best (1, 8) is not 2 5 5
INFO:root:XX add new best (1, 8) is not 2 5 5
INFO:root:XX add new best (1, 8) is not 2 5 5
INFO:root:XX add new best (1, 8) is not 2 5 5
INFO:root:XX add new best (1, 8) is not 2 5 5
INFO:root:XX add new best (1, 8) is not 2 5 5
INFO:root:XX add new best (1, 8) is not 2 5 5
INFO:root:XX add new best (1, 8) is not 2 5 5
INFO:root:XX add new best (1, 8) is not 2 5 5
INFO:root:XX add new best (1, 8) is not 2 5 5
INFO:root:XX add new best (1, 8) is not 2 5 5
INFO:root:XX add new best (1, 8) is not 2 5 5
INFO:root:XX add new best (1, 8) is not 2 5 5
INFO:root:XX add new best (1, 8) is not 2 5 5
INFO:root:XX add new best (1, 8) is not 2 5 5
INFO:root:XX add new best (1, 8) is not 2 5 5
INFO:root:XX add new best (1, 8) is not 2 5 5
INFO:root:XX add new best (1, 8) is not 2 5 5
INFO:root:XX add new best (1, 8) is not 2 5 5
INFO:root:XX add new best (1, 8) is not 2 5 5
INFO:root:XX add new best (1, 8) is not 2 5 5
INFO:root:XX add new best (1, 8) is not 2 5 5
INFO:root:XX add new best (1, 8) is not 2 5 5
INFO:root:XX add new best (1, 8) is not 2 5 5
INFO:root:XX add new best (1, 8) is not 2 5 5
INFO:root:XX add new best (1, 8) is not 2 5 5
INFO:root:XX add new best (1, 8) is not 2 5 5
INFO:root:XX add new best (1, 8) is not 2 5 5
INFO:root:XX add new best (1, 8) is not 2 5 5
INFO:root:XX add new best (1, 8) is not 2 5 5
INFO:root:XX add new best (1, 8) is not 2 5 5
INFO:root:XX add new best (1, 8) is not 2 5 5
INFO:root:XX add new best (1, 8) is not 2 5 5
INFO:root:XX add new best (1, 8) is not 2 5 5
INFO:root:XX add new best (1, 8) is not 2 5 5
INFO:root:XX add new best (1, 8) is not 2 5 5
INFO:root:XX add new best (1, 8) is not 2 5 5
INFO:root:XX add new best (1, 8) is not 2 5 5
INFO:root:XX add new best (1, 8) is not 2 5 5
INFO:root:XX add new best (1, 8) is not 2 5 5
INFO:root:XX add new best (1, 8) is not 2 5 5
INFO:root:XX add new best (1, 8) is not 2 5 5
INFO:root:XX add new best (1, 8) is not 2 5 5
INFO:root:XX add new best (1, 8) is not 2 5 5
INFO:root:XX add new best (1, 8) is not 2 5 5
INFO:root:XX add new best (1, 8) is not 2 5 5
INFO:root:XX add new best (1, 8) is not 2 5 5
INFO:root:XX add new best (1, 8) is not 2 5 5
INFO:root:XX add new best (1, 8) is not 2 5 5
INFO:root:XX add new best (1, 8) is not 2 5 5
INFO:root:XX add new best (1, 8) is not 2 5 5
INFO:root:XX add new best (1, 8) is not 2 5 5
INFO:root:XX add new best (1, 8) is not 2 5 5
INFO:root:XX add new best (1, 8) is not 2 5 5
INFO:root:XX add new best (1, 8) is not 2 5 5
INFO:root:XX add new best (1, 8) is not 2 5 5
INFO:root:XX add new best (1, 8) is not 2 5 5
INFO:root:XX add new best (1, 8) is not 2 5 5
INFO:root:XX add new best (1, 8) is not 2 5 5
INFO:root:XX add new best (1, 8) is not 2 5 5
INFO:root:XX add new best (1, 8) is not 2 5 5
INFO:root:XX add new best (1, 8) is not 2 5 5
INFO:root:XX add new best (1, 8) is not 2 5 5
INFO:root:XX add new best (1, 8) is not 2 5 5
INFO:root:Considering 100 * 1 jobs for minsize=5
INFO:root:Chunked 100 in [9, 9, 9, 9, 8, 8, 8, 8, 8, 8, 8, 8]
INFO:root:XX add new best (1, 8) is not 2 5 5
INFO:root:XX add new best (1, 8) is not 2 5 5
INFO:root:XX add new best (1, 8) is not 2 5 5
INFO:root:XX add new best (1, 8) is not 2 5 5
INFO:root:XX add new best (1, 8) is not 2 5 5
INFO:root:XX add new best (1, 8) is not 2 5 5
INFO:root:XX add new best (1, 8) is not 2 5 5
INFO:root:XX add new best (1, 8) is not 2 5 5
INFO:root:XX add new best (1, 8) is not 2 5 5
INFO:root:XX add new best (1, 8) is not 2 5 5
INFO:root:XX add new best (1, 8) is not 2 5 5
INFO:root:XX add new best (1, 8) is not 2 5 5
INFO:root:XX add new best (1, 8) is not 2 5 5
INFO:root:XX add new best (1, 8) is not 2 5 5
INFO:root:XX add new best (1, 8) is not 2 5 5
INFO:root:XX add new best (1, 8) is not 2 5 5
INFO:root:XX add new best (1, 8) is not 2 5 5
INFO:root:XX add new best (1, 8) is not 2 5 5
INFO:root:XX add new best (1, 8) is not 2 5 5
INFO:root:XX add new best (1, 8) is not 2 5 5
INFO:root:XX add new best (1, 8) is not 2 5 5
INFO:root:XX add new best (1, 8) is not 2 5 5
INFO:root:XX add new best (1, 8) is not 2 5 5
INFO:root:XX add new best (1, 8) is not 2 5 5
INFO:root:XX add new best (1, 8) is not 2 5 5
INFO:root:XX add new best (1, 8) is not 2 5 5
INFO:root:XX add new best (1, 8) is not 2 5 5
INFO:root:XX add new best (1, 8) is not 2 5 5
INFO:root:XX add new best (1, 8) is not 2 5 5
INFO:root:XX add new best (1, 8) is not 2 5 5
INFO:root:XX add new best (1, 8) is not 2 5 5
INFO:root:XX add new best (1, 8) is not 2 5 5
INFO:root:XX add new best (1, 8) is not 2 5 5
INFO:root:XX add new best (1, 8) is not 2 5 5
INFO:root:XX add new best (1, 8) is not 2 5 5
INFO:root:XX add new best (1, 8) is not 2 5 5
INFO:root:XX add new best (1, 8) is not 2 5 5
INFO:root:XX add new best (1, 8) is not 2 5 5
INFO:root:XX add new best (1, 8) is not 2 5 5
INFO:root:XX add new best (1, 8) is not 2 5 5
INFO:root:XX add new best (1, 8) is not 2 5 5
INFO:root:XX add new best (1, 8) is not 2 5 5
INFO:root:XX add new best (1, 8) is not 2 5 5
INFO:root:XX add new best (1, 8) is not 2 5 5
INFO:root:XX add new best (1, 8) is not 2 5 5
INFO:root:XX add new best (1, 8) is not 2 5 5
INFO:root:XX add new best (1, 8) is not 2 5 5
INFO:root:XX add new best (1, 8) is not 2 5 5
INFO:root:XX add new best (1, 8) is not 2 5 5
INFO:root:XX add new best (1, 8) is not 2 5 5
INFO:root:XX add new best (1, 8) is not 2 5 5
INFO:root:XX add new best (1, 8) is not 2 5 5
INFO:root:XX add new best (1, 8) is not 2 5 5
INFO:root:XX add new best (1, 8) is not 2 5 5
INFO:root:XX add new best (1, 8) is not 2 5 5
INFO:root:XX add new best (1, 8) is not 2 5 5
INFO:root:XX add new best (1, 8) is not 2 5 5
INFO:root:XX add new best (1, 8) is not 2 5 5
INFO:root:XX add new best (1, 8) is not 2 5 5
INFO:root:XX add new best (1, 8) is not 2 5 5
INFO:root:XX add new best (1, 8) is not 2 5 5
INFO:root:XX add new best (1, 8) is not 2 5 5
INFO:root:XX add new best (1, 8) is not 2 5 5
INFO:root:XX add new best (1, 8) is not 2 5 5
INFO:root:XX add new best (1, 8) is not 2 5 5
INFO:root:XX add new best (1, 8) is not 2 5 5
INFO:root:XX add new best (1, 8) is not 2 5 5
INFO:root:XX add new best (1, 8) is not 2 5 5
INFO:root:XX add new best (1, 8) is not 2 5 5
INFO:root:XX add new best (1, 8) is not 2 5 5
INFO:root:XX add new best (1, 8) is not 2 5 5
INFO:root:XX add new best (1, 8) is not 2 5 5
INFO:root:XX add new best (1, 8) is not 2 5 5
INFO:root:XX add new best (1, 8) is not 2 5 5
INFO:root:XX add new best (1, 8) is not 2 5 5
INFO:root:XX add new best (1, 8) is not 2 5 5
INFO:root:XX add new best (1, 8) is not 2 5 5
INFO:root:XX add new best (1, 8) is not 2 5 5
INFO:root:XX add new best (1, 8) is not 2 5 5
INFO:root:XX add new best (1, 8) is not 2 5 5
INFO:root:XX add new best (1, 8) is not 2 5 5
INFO:root:XX add new best (1, 8) is not 2 5 5
INFO:root:XX add new best (1, 8) is not 2 5 5
INFO:root:XX add new best (1, 8) is not 2 5 5
INFO:root:XX add new best (1, 8) is not 2 5 5
INFO:root:XX add new best (1, 8) is not 2 5 5
INFO:root:XX add new best (1, 8) is not 2 5 5
INFO:root:XX add new best (1, 8) is not 2 5 5
INFO:root:XX add new best (1, 8) is not 2 5 5
INFO:root:XX add new best (1, 8) is not 2 5 5
INFO:root:XX add new best (1, 8) is not 2 5 5
INFO:root:XX add new best (1, 8) is not 2 5 5
INFO:root:XX add new best (1, 8) is not 2 5 5
INFO:root:XX add new best (1, 8) is not 2 5 5
INFO:root:XX add new best (1, 8) is not 2 5 5
INFO:root:XX add new best (1, 8) is not 2 5 5
INFO:root:XX add new best (1, 8) is not 2 5 5
INFO:root:XX add new best (1, 8) is not 2 5 5
INFO:root:XX add new best (1, 8) is not 2 5 5
INFO:root:XX add new best (1, 8) is not 2 5 5
INFO:root:Trace: [(5, [(1, 8) is not 2])]
INFO:root:Trace Quality: [(5, 1)]
INFO:root:Trace Sorted: [(5, 1)]
INFO:root:Finished
INFO:root:Full Trace [(5, [(1, 8) is not 2])]
INFO:root:Trying {'prechopMUSes': True}
INFO:root:Starting Step 1
INFO:root:Current state [[[[1, 2, 5, 8], [1, 2, 3, 8], [2, 3], [1, 2, 9], [1, 2, 3, 5, 9], [5, 9], [4, 5, 8, 9], [2, 3, 4, 5, 6, 7, 9], [3, 4, 5, 6, 7, 9]], [[9], [1, 2, 3, 8], [4], [6], [1, 2, 3, 5], [7], [5, 8], [2, 3, 5], [3, 5]], [[2, 5], [7], [6], [8], [2, 3, 5, 9], [4], [1], [2, 3, 5, 9], [3, 5, 9]], [[3], [2, 4, 6], [9], [7], [2, 4, 5, 6], [1], [4, 5], [8], [4, 5, 6]], [[7], [2, 4, 6], [8], [2, 9], [2, 4, 5, 6, 9], [5, 6, 9], [3], [4, 5, 6, 9], [1]], [[4, 6], [5], [1], [3], [4, 6, 9], [8], [7], [4, 6, 9], [2]], [[4, 8], [3, 4, 8, 9], [7], [5], [8, 9], [2], [6], [1], [3, 4, 9]], [[1, 6], [1, 6, 9], [5], [4], [1, 6, 7, 9], [3], [2], [7, 9], [8]], [[1, 2, 4, 6, 8], [1, 2, 3, 4, 6, 8, 9], [2, 3], [1, 9], [1, 6, 7, 8, 9], [6, 9], [4, 5, 9], [3, 4, 5, 7, 9], [3, 4, 5, 7, 9]]]]
INFO:root:Doing checkSmall1
INFO:root:Getting tiny MUSes, distance 1, for 1 puzlits, 1 repeats
INFO:root:Chunked 1 in [1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
INFO:root:Doing checkSmall2
INFO:root:Getting tiny MUSes, distance 2, for 1 puzlits, 1 repeats
INFO:root:Chunked 1 in [1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
INFO:root:Considering 100 * 1 jobs for minsize=3
INFO:root:Chunked 100 in [9, 9, 9, 9, 8, 8, 8, 8, 8, 8, 8, 8]
INFO:root:Considering 100 * 1 jobs for minsize=4
INFO:root:Chunked 100 in [9, 9, 9, 9, 8, 8, 8, 8, 8, 8, 8, 8]
INFO:root:XX found first (1, 8) is not 2 5
INFO:root:XX add new best (1, 8) is not 2 5 5
INFO:root:XX add new best (1, 8) is not 2 5 5
INFO:root:XX add new best (1, 8) is not 2 5 5
INFO:root:XX add new best (1, 8) is not 2 5 5
INFO:root:XX add new best (1, 8) is not 2 5 5
INFO:root:XX add new best (1, 8) is not 2 5 5
INFO:root:XX add new best (1, 8) is not 2 5 5
INFO:root:XX add new best (1, 8) is not 2 5 5
INFO:root:XX add new best (1, 8) is not 2 5 5
INFO:root:XX add new best (1, 8) is not 2 5 5
INFO:root:XX add new best (1, 8) is not 2 5 5
INFO:root:XX add new best (1, 8) is not 2 5 5
INFO:root:XX add new best (1, 8) is not 2 5 5
INFO:root:XX add new best (1, 8) is not 2 5 5
INFO:root:XX add new best (1, 8) is not 2 5 5
INFO:root:XX add new best (1, 8) is not 2 5 5
INFO:root:XX add new best (1, 8) is not 2 5 5
INFO:root:XX add new best (1, 8) is not 2 5 5
INFO:root:XX add new best (1, 8) is not 2 5 5
INFO:root:XX add new best (1, 8) is not 2 5 5
INFO:root:XX add new best (1, 8) is not 2 5 5
INFO:root:XX add new best (1, 8) is not 2 5 5
INFO:root:XX add new best (1, 8) is not 2 5 5
INFO:root:XX add new best (1, 8) is not 2 5 5
INFO:root:XX add new best (1, 8) is not 2 5 5
INFO:root:XX add new best (1, 8) is not 2 5 5
INFO:root:XX add new best (1, 8) is not 2 5 5
INFO:root:XX add new best (1, 8) is not 2 5 5
INFO:root:XX add new best (1, 8) is not 2 5 5
INFO:root:XX add new best (1, 8) is not 2 5 5
INFO:root:XX add new best (1, 8) is not 2 5 5
INFO:root:XX add new best (1, 8) is not 2 5 5
INFO:root:XX add new best (1, 8) is not 2 5 5
INFO:root:XX add new best (1, 8) is not 2 5 5
INFO:root:XX add new best (1, 8) is not 2 5 5
INFO:root:XX add new best (1, 8) is not 2 5 5
INFO:root:XX add new best (1, 8) is not 2 5 5
INFO:root:XX add new best (1, 8) is not 2 5 5
INFO:root:XX add new best (1, 8) is not 2 5 5
INFO:root:Considering 100 * 1 jobs for minsize=5
INFO:root:Chunked 100 in [9, 9, 9, 9, 8, 8, 8, 8, 8, 8, 8, 8]
INFO:root:XX add new best (1, 8) is not 2 5 5
INFO:root:XX add new best (1, 8) is not 2 5 5
INFO:root:XX add new best (1, 8) is not 2 5 5
INFO:root:XX add new best (1, 8) is not 2 5 5
INFO:root:XX add new best (1, 8) is not 2 5 5
INFO:root:XX add new best (1, 8) is not 2 5 5
INFO:root:XX add new best (1, 8) is not 2 5 5
INFO:root:XX add new best (1, 8) is not 2 5 5
INFO:root:XX add new best (1, 8) is not 2 5 5
INFO:root:XX add new best (1, 8) is not 2 5 5
INFO:root:XX add new best (1, 8) is not 2 5 5
INFO:root:XX add new best (1, 8) is not 2 5 5
INFO:root:XX add new best (1, 8) is not 2 5 5
INFO:root:XX add new best (1, 8) is not 2 5 5
INFO:root:XX add new best (1, 8) is not 2 5 5
INFO:root:XX add new best (1, 8) is not 2 5 5
INFO:root:XX add new best (1, 8) is not 2 5 5
INFO:root:XX add new best (1, 8) is not 2 5 5
INFO:root:XX add new best (1, 8) is not 2 5 5
INFO:root:XX add new best (1, 8) is not 2 5 5
INFO:root:XX add new best (1, 8) is not 2 5 5
INFO:root:XX add new best (1, 8) is not 2 5 5
INFO:root:Trace: [(5, [(1, 8) is not 2])]
INFO:root:Trace Quality: [(5, 1)]
INFO:root:Trace Sorted: [(5, 1)]
INFO:root:Finished
INFO:root:Full Trace [(5, [(1, 8) is not 2])]
INFO:root:Trying {'quarterChopMUS': True}
INFO:root:Starting Step 1
INFO:root:Current state [[[[1, 2, 5, 8], [1, 2, 3, 8], [2, 3], [1, 2, 9], [1, 2, 3, 5, 9], [5, 9], [4, 5, 8, 9], [2, 3, 4, 5, 6, 7, 9], [3, 4, 5, 6, 7, 9]], [[9], [1, 2, 3, 8], [4], [6], [1, 2, 3, 5], [7], [5, 8], [2, 3, 5], [3, 5]], [[2, 5], [7], [6], [8], [2, 3, 5, 9], [4], [1], [2, 3, 5, 9], [3, 5, 9]], [[3], [2, 4, 6], [9], [7], [2, 4, 5, 6], [1], [4, 5], [8], [4, 5, 6]], [[7], [2, 4, 6], [8], [2, 9], [2, 4, 5, 6, 9], [5, 6, 9], [3], [4, 5, 6, 9], [1]], [[4, 6], [5], [1], [3], [4, 6, 9], [8], [7], [4, 6, 9], [2]], [[4, 8], [3, 4, 8, 9], [7], [5], [8, 9], [2], [6], [1], [3, 4, 9]], [[1, 6], [1, 6, 9], [5], [4], [1, 6, 7, 9], [3], [2], [7, 9], [8]], [[1, 2, 4, 6, 8], [1, 2, 3, 4, 6, 8, 9], [2, 3], [1, 9], [1, 6, 7, 8, 9], [6, 9], [4, 5, 9], [3, 4, 5, 7, 9], [3, 4, 5, 7, 9]]]]
INFO:root:Doing checkSmall1
INFO:root:Getting tiny MUSes, distance 1, for 1 puzlits, 1 repeats
INFO:root:Chunked 1 in [1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
INFO:root:Doing checkSmall2
INFO:root:Getting tiny MUSes, distance 2, for 1 puzlits, 1 repeats
INFO:root:Chunked 1 in [1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
INFO:root:Considering 100 * 1 jobs for minsize=3
INFO:root:Chunked 100 in [9, 9, 9, 9, 8, 8, 8, 8, 8, 8, 8, 8]
INFO:root:Considering 100 * 1 jobs for minsize=4
INFO:root:Chunked 100 in [9, 9, 9, 9, 8, 8, 8, 8, 8, 8, 8, 8]
INFO:root:XX found first (1, 8) is not 2 5
INFO:root:XX add new best (1, 8) is not 2 5 5
INFO:root:XX add new best (1, 8) is not 2 5 5
INFO:root:XX add new best (1, 8) is not 2 5 5
INFO:root:XX add new best (1, 8) is not 2 5 5
INFO:root:XX add new best (1, 8) is not 2 5 5
INFO:root:XX add new best (1, 8) is not 2 5 5
INFO:root:XX add new best (1, 8) is not 2 5 5
INFO:root:XX add new best (1, 8) is not 2 5 5
INFO:root:XX add new best (1, 8) is not 2 5 5
INFO:root:XX add new best (1, 8) is not 2 5 5
INFO:root:XX add new best (1, 8) is not 2 5 5
INFO:root:XX add new best (1, 8) is not 2 5 5
INFO:root:XX add new best (1, 8) is not 2 5 5
INFO:root:XX add new best (1, 8) is not 2 5 5
INFO:root:XX add new best (1, 8) is not 2 5 5
INFO:root:XX add new best (1, 8) is not 2 5 5
INFO:root:XX add new best (1, 8) is not 2 5 5
INFO:root:XX add new best (1, 8) is not 2 5 5
INFO:root:XX add new best (1, 8) is not 2 5 5
INFO:root:XX add new best (1, 8) is not 2 5 5
INFO:root:XX add new best (1, 8) is not 2 5 5
INFO:root:XX add new best (1, 8) is not 2 5 5
INFO:root:XX add new best (1, 8) is not 2 5 5
INFO:root:XX add new best (1, 8) is not 2 5 5
INFO:root:XX add new best (1, 8) is not 2 5 5
INFO:root:XX add new best (1, 8) is not 2 5 5
INFO:root:XX add new best (1, 8) is not 2 5 5
INFO:root:XX add new best (1, 8) is not 2 5 5
INFO:root:XX add new best (1, 8) is not 2 5 5
INFO:root:XX add new best (1, 8) is not 2 5 5
INFO:root:XX add new best (1, 8) is not 2 5 5
INFO:root:XX add new best (1, 8) is not 2 5 5
INFO:root:XX add new best (1, 8) is not 2 5 5
INFO:root:XX add new best (1, 8) is not 2 5 5
INFO:root:XX add new best (1, 8) is not 2 5 5
INFO:root:XX add new best (1, 8) is not 2 5 5
INFO:root:XX add new best (1, 8) is not 2 5 5
INFO:root:XX add new best (1, 8) is not 2 5 5
INFO:root:XX add new best (1, 8) is not 2 5 5
INFO:root:XX add new best (1, 8) is not 2 5 5
INFO:root:XX add new best (1, 8) is not 2 5 5
INFO:root:XX add new best (1, 8) is not 2 5 5
INFO:root:XX add new best (1, 8) is not 2 5 5
INFO:root:XX add new best (1, 8) is not 2 5 5
INFO:root:XX add new best (1, 8) is not 2 5 5
INFO:root:XX add new best (1, 8) is not 2 5 5
INFO:root:XX add new best (1, 8) is not 2 5 5
INFO:root:XX add new best (1, 8) is not 2 5 5
INFO:root:XX add new best (1, 8) is not 2 5 5
INFO:root:XX add new best (1, 8) is not 2 5 5
INFO:root:XX add new best (1, 8) is not 2 5 5
INFO:root:XX add new best (1, 8) is not 2 5 5
INFO:root:XX add new best (1, 8) is not 2 5 5
INFO:root:XX add new best (1, 8) is not 2 5 5
INFO:root:XX add new best (1, 8) is not 2 5 5
INFO:root:XX add new best (1, 8) is not 2 5 5
INFO:root:XX add new best (1, 8) is not 2 5 5
INFO:root:Considering 100 * 1 jobs for minsize=5
INFO:root:Chunked 100 in [9, 9, 9, 9, 8, 8, 8, 8, 8, 8, 8, 8]
INFO:root:XX add new best (1, 8) is not 2 5 5
INFO:root:XX add new best (1, 8) is not 2 5 5
INFO:root:XX add new best (1, 8) is not 2 5 5
INFO:root:XX add new best (1, 8) is not 2 5 5
INFO:root:XX add new best (1, 8) is not 2 5 5
INFO:root:XX add new best (1, 8) is not 2 5 5
INFO:root:XX add new best (1, 8) is not 2 5 5
INFO:root:XX add new best (1, 8) is not 2 5 5
INFO:root:XX add new best (1, 8) is not 2 5 5
INFO:root:XX add new best (1, 8) is not 2 5 5
INFO:root:XX add new best (1, 8) is not 2 5 5
INFO:root:XX add new best (1, 8) is not 2 5 5
INFO:root:XX add new best (1, 8) is not 2 5 5
INFO:root:XX add new best (1, 8) is not 2 5 5
INFO:root:XX add new best (1, 8) is not 2 5 5
INFO:root:XX add new best (1, 8) is not 2 5 5
INFO:root:XX add new best (1, 8) is not 2 5 5
INFO:root:XX add new best (1, 8) is not 2 5 5
INFO:root:XX add new best (1, 8) is not 2 5 5
INFO:root:XX add new best (1, 8) is not 2 5 5
INFO:root:XX add new best (1, 8) is not 2 5 5
INFO:root:XX add new best (1, 8) is not 2 5 5
INFO:root:XX add new best (1, 8) is not 2 5 5
INFO:root:XX add new best (1, 8) is not 2 5 5
INFO:root:XX add new best (1, 8) is not 2 5 5
INFO:root:XX add new best (1, 8) is not 2 5 5
INFO:root:XX add new best (1, 8) is not 2 5 5
INFO:root:XX add new best (1, 8) is not 2 5 5
INFO:root:XX add new best (1, 8) is not 2 5 5
INFO:root:XX add new best (1, 8) is not 2 5 5
INFO:root:XX add new best (1, 8) is not 2 5 5
INFO:root:XX add new best (1, 8) is not 2 5 5
INFO:root:XX add new best (1, 8) is not 2 5 5
INFO:root:XX add new best (1, 8) is not 2 5 5
INFO:root:XX add new best (1, 8) is not 2 5 5
INFO:root:XX add new best (1, 8) is not 2 5 5
INFO:root:XX add new best (1, 8) is not 2 5 5
INFO:root:XX add new best (1, 8) is not 2 5 5
INFO:root:XX add new best (1, 8) is not 2 5 5
INFO:root:XX add new best (1, 8) is not 2 5 5
INFO:root:XX add new best (1, 8) is not 2 5 5
INFO:root:XX add new best (1, 8) is not 2 5 5
INFO:root:XX add new best (1, 8) is not 2 5 5
INFO:root:XX add new best (1, 8) is not 2 5 5
INFO:root:XX add new best (1, 8) is not 2 5 5
INFO:root:XX add new best (1, 8) is not 2 5 5
INFO:root:Trace: [(5, [(1, 8) is not 2])]
INFO:root:Trace Quality: [(5, 1)]
INFO:root:Trace Sorted: [(5, 1)]
INFO:root:Finished
INFO:root:Full Trace [(5, [(1, 8) is not 2])]
INFO:root:Trying {'minPrecheckMUS': True}
INFO:root:Starting Step 1
INFO:root:Current state [[[[1, 2, 5, 8], [1, 2, 3, 8], [2, 3], [1, 2, 9], [1, 2, 3, 5, 9], [5, 9], [4, 5, 8, 9], [2, 3, 4, 5, 6, 7, 9], [3, 4, 5, 6, 7, 9]], [[9], [1, 2, 3, 8], [4], [6], [1, 2, 3, 5], [7], [5, 8], [2, 3, 5], [3, 5]], [[2, 5], [7], [6], [8], [2, 3, 5, 9], [4], [1], [2, 3, 5, 9], [3, 5, 9]], [[3], [2, 4, 6], [9], [7], [2, 4, 5, 6], [1], [4, 5], [8], [4, 5, 6]], [[7], [2, 4, 6], [8], [2, 9], [2, 4, 5, 6, 9], [5, 6, 9], [3], [4, 5, 6, 9], [1]], [[4, 6], [5], [1], [3], [4, 6, 9], [8], [7], [4, 6, 9], [2]], [[4, 8], [3, 4, 8, 9], [7], [5], [8, 9], [2], [6], [1], [3, 4, 9]], [[1, 6], [1, 6, 9], [5], [4], [1, 6, 7, 9], [3], [2], [7, 9], [8]], [[1, 2, 4, 6, 8], [1, 2, 3, 4, 6, 8, 9], [2, 3], [1, 9], [1, 6, 7, 8, 9], [6, 9], [4, 5, 9], [3, 4, 5, 7, 9], [3, 4, 5, 7, 9]]]]
INFO:root:Doing checkSmall1
INFO:root:Getting tiny MUSes, distance 1, for 1 puzlits, 1 repeats
INFO:root:Chunked 1 in [1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
INFO:root:Doing checkSmall2
INFO:root:Getting tiny MUSes, distance 2, for 1 puzlits, 1 repeats
INFO:root:Chunked 1 in [1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
INFO:root:Considering 100 * 1 jobs for minsize=3
INFO:root:Chunked 100 in [9, 9, 9, 9, 8, 8, 8, 8, 8, 8, 8, 8]
INFO:root:Considering 100 * 1 jobs for minsize=4
INFO:root:Chunked 100 in [9, 9, 9, 9, 8, 8, 8, 8, 8, 8, 8, 8]
INFO:root:XX found first (1, 8) is not 2 5
INFO:root:XX add new best (1, 8) is not 2 5 5
INFO:root:XX add new best (1, 8) is not 2 5 5
INFO:root:XX add new best (1, 8) is not 2 5 5
INFO:root:XX add new best (1, 8) is not 2 5 5
INFO:root:XX add new best (1, 8) is not 2 5 5
INFO:root:XX add new best (1, 8) is not 2 5 5
INFO:root:XX add new best (1, 8) is not 2 5 5
INFO:root:XX add new best (1, 8) is not 2 5 5
INFO:root:XX add new best (1, 8) is not 2 5 5
INFO:root:XX add new best (1, 8) is not 2 5 5
INFO:root:XX add new best (1, 8) is not 2 5 5
INFO:root:XX add new best (1, 8) is not 2 5 5
INFO:root:XX add new best (1, 8) is not 2 5 5
INFO:root:XX add new best (1, 8) is not 2 5 5
INFO:root:XX add new best (1, 8) is not 2 5 5
INFO:root:XX add new best (1, 8) is not 2 5 5
INFO:root:XX add new best (1, 8) is not 2 5 5
INFO:root:XX add new best (1, 8) is not 2 5 5
INFO:root:XX add new best (1, 8) is not 2 5 5
INFO:root:XX add new best (1, 8) is not 2 5 5
INFO:root:XX add new best (1, 8) is not 2 5 5
INFO:root:XX add new best (1, 8) is not 2 5 5
INFO:root:XX add new best (1, 8) is not 2 5 5
INFO:root:XX add new best (1, 8) is not 2 5 5
INFO:root:XX add new best (1, 8) is not 2 5 5
INFO:root:XX add new best (1, 8) is not 2 5 5
INFO:root:XX add new best (1, 8) is not 2 5 5
INFO:root:XX add new best (1, 8) is not 2 5 5
INFO:root:XX add new best (1, 8) is not 2 5 5
INFO:root:Considering 100 * 1 jobs for minsize=5
INFO:root:Chunked 100 in [9, 9, 9, 9, 8, 8, 8, 8, 8, 8, 8, 8]
INFO:root:XX add new best (1, 8) is not 2 5 5
INFO:root:XX add new best (1, 8) is not 2 5 5
INFO:root:XX add new best (1, 8) is not 2 5 5
INFO:root:XX add new best (1, 8) is not 2 5 5
INFO:root:XX add new best (1, 8) is not 2 5 5
INFO:root:XX add new best (1, 8) is not 2 5 5
INFO:root:XX add new best (1, 8) is not 2 5 5
INFO:root:XX add new best (1, 8) is not 2 5 5
INFO:root:XX add new best (1, 8) is not 2 5 5
INFO:root:XX add new best (1, 8) is not 2 5 5
INFO:root:XX add new best (1, 8) is not 2 5 5
INFO:root:XX add new best (1, 8) is not 2 5 5
INFO:root:XX add new best (1, 8) is not 2 5 5
INFO:root:XX add new best (1, 8) is not 2 5 5
INFO:root:XX add new best (1, 8) is not 2 5 5
INFO:root:XX add new best (1, 8) is not 2 5 5
INFO:root:XX add new best (1, 8) is not 2 5 5
INFO:root:XX add new best (1, 8) is not 2 5 5
INFO:root:XX add new best (1, 8) is not 2 5 5
INFO:root:XX add new best (1, 8) is not 2 5 5
INFO:root:XX add new best (1, 8) is not 2 5 5
INFO:root:XX add new best (1, 8) is not 2 5 5
INFO:root:XX add new best (1, 8) is not 2 5 5
INFO:root:XX add new best (1, 8) is not 2 5 5
INFO:root:XX add new best (1, 8) is not 2 5 5
INFO:root:XX add new best (1, 8) is not 2 5 5
INFO:root:XX add new best (1, 8) is not 2 5 5
INFO:root:XX add new best (1, 8) is not 2 5 5
INFO:root:XX add new best (1, 8) is not 2 5 5
INFO:root:XX add new best (1, 8) is not 2 5 5
INFO:root:XX add new best (1, 8) is not 2 5 5
INFO:root:Trace: [(5, [(1, 8) is not 2])]
INFO:root:Trace Quality: [(5, 1)]
INFO:root:Trace Sorted: [(5, 1)]
INFO:root:Finished
INFO:root:Full Trace [(5, [(1, 8) is not 2])]
INFO:root:Trying {'gallopingMUSes': True}
INFO:root:Starting Step 1
INFO:root:Current state [[[[1, 2, 5, 8], [1, 2, 3, 8], [2, 3], [1, 2, 9], [1, 2, 3, 5, 9], [5, 9], [4, 5, 8, 9], [2, 3, 4, 5, 6, 7, 9], [3, 4, 5, 6, 7, 9]], [[9], [1, 2, 3, 8], [4], [6], [1, 2, 3, 5], [7], [5, 8], [2, 3, 5], [3, 5]], [[2, 5], [7], [6], [8], [2, 3, 5, 9], [4], [1], [2, 3, 5, 9], [3, 5, 9]], [[3], [2, 4, 6], [9], [7], [2, 4, 5, 6], [1], [4, 5], [8], [4, 5, 6]], [[7], [2, 4, 6], [8], [2, 9], [2, 4, 5, 6, 9], [5, 6, 9], [3], [4, 5, 6, 9], [1]], [[4, 6], [5], [1], [3], [4, 6, 9], [8], [7], [4, 6, 9], [2]], [[4, 8], [3, 4, 8, 9], [7], [5], [8, 9], [2], [6], [1], [3, 4, 9]], [[1, 6], [1, 6, 9], [5], [4], [1, 6, 7, 9], [3], [2], [7, 9], [8]], [[1, 2, 4, 6, 8], [1, 2, 3, 4, 6, 8, 9], [2, 3], [1, 9], [1, 6, 7, 8, 9], [6, 9], [4, 5, 9], [3, 4, 5, 7, 9], [3, 4, 5, 7, 9]]]]
INFO:root:Doing checkSmall1
INFO:root:Getting tiny MUSes, distance 1, for 1 puzlits, 1 repeats
INFO:root:Chunked 1 in [1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
INFO:root:Doing checkSmall2
INFO:root:Getting tiny MUSes, distance 2, for 1 puzlits, 1 repeats
INFO:root:Chunked 1 in [1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
INFO:root:Considering 100 * 1 jobs for minsize=3
INFO:root:Chunked 100 in [9, 9, 9, 9, 8, 8, 8, 8, 8, 8, 8, 8]
INFO:root:Considering 100 * 1 jobs for minsize=4
INFO:root:Chunked 100 in [9, 9, 9, 9, 8, 8, 8, 8, 8, 8, 8, 8]
INFO:root:XX found first (1, 8) is not 2 5
INFO:root:XX add new best (1, 8) is not 2 5 5
INFO:root:XX add new best (1, 8) is not 2 5 5
INFO:root:XX add new best (1, 8) is not 2 5 5
INFO:root:XX add new best (1, 8) is not 2 5 5
INFO:root:XX add new best (1, 8) is not 2 5 5
INFO:root:XX add new best (1, 8) is not 2 5 5
INFO:root:XX add new best (1, 8) is not 2 5 5
INFO:root:XX add new best (1, 8) is not 2 5 5
INFO:root:XX add new best (1, 8) is not 2 5 5
INFO:root:XX add new best (1, 8) is not 2 5 5
INFO:root:XX add new best (1, 8) is not 2 5 5
INFO:root:XX add new best (1, 8) is not 2 5 5
INFO:root:XX add new best (1, 8) is not 2 5 5
INFO:root:XX add new best (1, 8) is not 2 5 5
INFO:root:XX add new best (1, 8) is not 2 5 5
INFO:root:XX add new best (1, 8) is not 2 5 5
INFO:root:XX add new best (1, 8) is not 2 5 5
INFO:root:XX add new best (1, 8) is not 2 5 5
INFO:root:XX add new best (1, 8) is not 2 5 5
INFO:root:XX add new best (1, 8) is not 2 5 5
INFO:root:XX add new best (1, 8) is not 2 5 5
INFO:root:XX add new best (1, 8) is not 2 5 5
INFO:root:XX add new best (1, 8) is not 2 5 5
INFO:root:XX add new best (1, 8) is not 2 5 5
INFO:root:XX add new best (1, 8) is not 2 5 5
INFO:root:XX add new best (1, 8) is not 2 5 5
INFO:root:Considering 100 * 1 jobs for minsize=5
INFO:root:Chunked 100 in [9, 9, 9, 9, 8, 8, 8, 8, 8, 8, 8, 8]
INFO:root:XX add new best (1, 8) is not 2 5 5
INFO:root:XX add new best (1, 8) is not 2 5 5
INFO:root:XX add new best (1, 8) is not 2 5 5
INFO:root:XX add new best (1, 8) is not 2 5 5
INFO:root:XX add new best (1, 8) is not 2 5 5
INFO:root:XX add new best (1, 8) is not 2 5 5
INFO:root:XX add new best (1, 8) is not 2 5 5
INFO:root:XX add new best (1, 8) is not 2 5 5
INFO:root:XX add new best (1, 8) is not 2 5 5
INFO:root:XX add new best (1, 8) is not 2 5 5
INFO:root:XX add new best (1, 8) is not 2 5 5
INFO:root:XX add new best (1, 8) is not 2 5 5
INFO:root:XX add new best (1, 8) is not 2 5 5
INFO:root:XX add new best (1, 8) is not 2 5 5
INFO:root:XX add new best (1, 8) is not 2 5 5
INFO:root:XX add new best (1, 8) is not 2 5 5
INFO:root:XX add new best (1, 8) is not 2 5 5
INFO:root:XX add new best (1, 8) is not 2 5 5
INFO:root:XX add new best (1, 8) is not 2 5 5
INFO:root:XX add new best (1, 8) is not 2 5 5
INFO:root:XX add new best (1, 8) is not 2 5 5
INFO:root:XX add new best (1, 8) is not 2 5 5
INFO:root:Trace: [(5, [(1, 8) is not 2])]
INFO:root:Trace Quality: [(5, 1)]
INFO:root:Trace Sorted: [(5, 1)]
INFO:root:Finished
INFO:root:Full Trace [(5, [(1, 8) is not 2])]
INFO:root:Trying {'minPrecheckStepsMUS': True}
INFO:root:Starting Step 1
INFO:root:Current state [[[[1, 2, 5, 8], [1, 2, 3, 8], [2, 3], [1, 2, 9], [1, 2, 3, 5, 9], [5, 9], [4, 5, 8, 9], [2, 3, 4, 5, 6, 7, 9], [3, 4, 5, 6, 7, 9]], [[9], [1, 2, 3, 8], [4], [6], [1, 2, 3, 5], [7], [5, 8], [2, 3, 5], [3, 5]], [[2, 5], [7], [6], [8], [2, 3, 5, 9], [4], [1], [2, 3, 5, 9], [3, 5, 9]], [[3], [2, 4, 6], [9], [7], [2, 4, 5, 6], [1], [4, 5], [8], [4, 5, 6]], [[7], [2, 4, 6], [8], [2, 9], [2, 4, 5, 6, 9], [5, 6, 9], [3], [4, 5, 6, 9], [1]], [[4, 6], [5], [1], [3], [4, 6, 9], [8], [7], [4, 6, 9], [2]], [[4, 8], [3, 4, 8, 9], [7], [5], [8, 9], [2], [6], [1], [3, 4, 9]], [[1, 6], [1, 6, 9], [5], [4], [1, 6, 7, 9], [3], [2], [7, 9], [8]], [[1, 2, 4, 6, 8], [1, 2, 3, 4, 6, 8, 9], [2, 3], [1, 9], [1, 6, 7, 8, 9], [6, 9], [4, 5, 9], [3, 4, 5, 7, 9], [3, 4, 5, 7, 9]]]]
INFO:root:Doing checkSmall1
INFO:root:Getting tiny MUSes, distance 1, for 1 puzlits, 1 repeats
INFO:root:Chunked 1 in [1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
INFO:root:Doing checkSmall2
INFO:root:Getting tiny MUSes, distance 2, for 1 puzlits, 1 repeats
INFO:root:Chunked 1 in [1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
INFO:root:Considering 100 * 1 jobs for minsize=3
INFO:root:Chunked 100 in [9, 9, 9, 9, 8, 8, 8, 8, 8, 8, 8, 8]
INFO:root:Considering 100 * 1 jobs for minsize=4
INFO:root:Chunked 100 in [9, 9, 9, 9, 8, 8, 8, 8, 8, 8, 8, 8]
INFO:root:XX found first (1, 8) is not 2 5
INFO:root:XX add new best (1, 8) is not 2 5 5
INFO:root:XX add new best (1, 8) is not 2 5 5
INFO:root:XX add new best (1, 8) is not 2 5 5
INFO:root:XX add new best (1, 8) is not 2 5 5
INFO:root:XX add new best (1, 8) is not 2 5 5
INFO:root:XX add new best (1, 8) is not 2 5 5
INFO:root:XX add new best (1, 8) is not 2 5 5
INFO:root:XX add new best (1, 8) is not 2 5 5
INFO:root:XX add new best (1, 8) is not 2 5 5
INFO:root:XX add new best (1, 8) is not 2 5 5
INFO:root:XX add new best (1, 8) is not 2 5 5
INFO:root:XX add new best (1, 8) is not 2 5 5
INFO:root:XX add new best (1, 8) is not 2 5 5
INFO:root:XX add new best (1, 8) is not 2 5 5
INFO:root:XX add new best (1, 8) is not 2 5 5
INFO:root:XX add new best (1, 8) is not 2 5 5
INFO:root:XX add new best (1, 8) is not 2 5 5
INFO:root:XX add new best (1, 8) is not 2 5 5
INFO:root:XX add new best (1, 8) is not 2 5 5
INFO:root:XX add new best (1, 8) is not 2 5 5
INFO:root:XX add new best (1, 8) is not 2 5 5
INFO:root:XX add new best (1, 8) is not 2 5 5
INFO:root:XX add new best (1, 8) is not 2 5 5
INFO:root:XX add new best (1, 8) is not 2 5 5
INFO:root:XX add new best (1, 8) is not 2 5 5
INFO:root:XX add new best (1, 8) is not 2 5 5
INFO:root:XX add new best (1, 8) is not 2 5 5
INFO:root:XX add new best (1, 8) is not 2 5 5
INFO:root:XX add new best (1, 8) is not 2 5 5
INFO:root:XX add new best (1, 8) is not 2 5 5
INFO:root:Considering 100 * 1 jobs for minsize=5
INFO:root:Chunked 100 in [9, 9, 9, 9, 8, 8, 8, 8, 8, 8, 8, 8]
INFO:root:XX add new best (1, 8) is not 2 5 5
INFO:root:XX add new best (1, 8) is not 2 5 5
INFO:root:XX add new best (1, 8) is not 2 5 5
INFO:root:XX add new best (1, 8) is not 2 5 5
INFO:root:XX add new best (1, 8) is not 2 5 5
INFO:root:XX add new best (1, 8) is not 2 5 5
INFO:root:XX add new best (1, 8) is not 2 5 5
INFO:root:XX add new best (1, 8) is not 2 5 5
INFO:root:XX add new best (1, 8) is not 2 5 5
INFO:root:XX add new best (1, 8) is not 2 5 5
INFO:root:XX add new best (1, 8) is not 2 5 5
INFO:root:XX add new best (1, 8) is not 2 5 5
INFO:root:XX add new best (1, 8) is not 2 5 5
INFO:root:XX add new best (1, 8) is not 2 5 5
INFO:root:XX add new best (1, 8) is not 2 5 5
INFO:root:XX add new best (1, 8) is not 2 5 5
INFO:root:XX add new best (1, 8) is not 2 5 5
INFO:root:XX add new best (1, 8) is not 2 5 5
INFO:root:XX add new best (1, 8) is not 2 5 5
INFO:root:XX add new best (1, 8) is not 2 5 5
INFO:root:XX add new best (1, 8) is not 2 5 5
INFO:root:XX add new best (1, 8) is not 2 5 5
INFO:root:XX add new best (1, 8) is not 2 5 5
INFO:root:XX add new best (1, 8) is not 2 5 5
INFO:root:XX add new best (1, 8) is not 2 5 5
INFO:root:XX add new best (1, 8) is not 2 5 5
INFO:root:XX add new best (1, 8) is not 2 5 5
INFO:root:XX add new best (1, 8) is not 2 5 5
INFO:root:XX add new best (1, 8) is not 2 5 5
INFO:root:XX add new best (1, 8) is not 2 5 5
INFO:root:XX add new best (1, 8) is not 2 5 5
INFO:root:Trace: [(5, [(1, 8) is not 2])]
INFO:root:Trace Quality: [(5, 1)]
INFO:root:Trace Sorted: [(5, 1)]
INFO:root:Finished
INFO:root:Full Trace [(5, [(1, 8) is not 2])]
INFO:root:Trying {'gallopingMUSes': True, 'minPrecheckMUS': True}
INFO:root:Starting Step 1
INFO:root:Current state [[[[1, 2, 5, 8], [1, 2, 3, 8], [2, 3], [1, 2, 9], [1, 2, 3, 5, 9], [5, 9], [4, 5, 8, 9], [2, 3, 4, 5, 6, 7, 9], [3, 4, 5, 6, 7, 9]], [[9], [1, 2, 3, 8], [4], [6], [1, 2, 3, 5], [7], [5, 8], [2, 3, 5], [3, 5]], [[2, 5], [7], [6], [8], [2, 3, 5, 9], [4], [1], [2, 3, 5, 9], [3, 5, 9]], [[3], [2, 4, 6], [9], [7], [2, 4, 5, 6], [1], [4, 5], [8], [4, 5, 6]], [[7], [2, 4, 6], [8], [2, 9], [2, 4, 5, 6, 9], [5, 6, 9], [3], [4, 5, 6, 9], [1]], [[4, 6], [5], [1], [3], [4, 6, 9], [8], [7], [4, 6, 9], [2]], [[4, 8], [3, 4, 8, 9], [7], [5], [8, 9], [2], [6], [1], [3, 4, 9]], [[1, 6], [1, 6, 9], [5], [4], [1, 6, 7, 9], [3], [2], [7, 9], [8]], [[1, 2, 4, 6, 8], [1, 2, 3, 4, 6, 8, 9], [2, 3], [1, 9], [1, 6, 7, 8, 9], [6, 9], [4, 5, 9], [3, 4, 5, 7, 9], [3, 4, 5, 7, 9]]]]
INFO:root:Doing checkSmall1
INFO:root:Getting tiny MUSes, distance 1, for 1 puzlits, 1 repeats
INFO:root:Chunked 1 in [1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
INFO:root:Doing checkSmall2
INFO:root:Getting tiny MUSes, distance 2, for 1 puzlits, 1 repeats
INFO:root:Chunked 1 in [1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
INFO:root:Considering 100 * 1 jobs for minsize=3
INFO:root:Chunked 100 in [9, 9, 9, 9, 8, 8, 8, 8, 8, 8, 8, 8]
INFO:root:Considering 100 * 1 jobs for minsize=4
INFO:root:Chunked 100 in [9, 9, 9, 9, 8, 8, 8, 8, 8, 8, 8, 8]
INFO:root:XX found first (1, 8) is not 2 5
INFO:root:XX add new best (1, 8) is not 2 5 5
INFO:root:XX add new best (1, 8) is not 2 5 5
INFO:root:XX add new best (1, 8) is not 2 5 5
INFO:root:XX add new best (1, 8) is not 2 5 5
INFO:root:XX add new best (1, 8) is not 2 5 5
INFO:root:XX add new best (1, 8) is not 2 5 5
INFO:root:XX add new best (1, 8) is not 2 5 5
INFO:root:XX add new best (1, 8) is not 2 5 5
INFO:root:XX add new best (1, 8) is not 2 5 5
INFO:root:XX add new best (1, 8) is not 2 5 5
INFO:root:XX add new best (1, 8) is not 2 5 5
INFO:root:XX add new best (1, 8) is not 2 5 5
INFO:root:XX add new best (1, 8) is not 2 5 5
INFO:root:XX add new best (1, 8) is not 2 5 5
INFO:root:XX add new best (1, 8) is not 2 5 5
INFO:root:XX add new best (1, 8) is not 2 5 5
INFO:root:XX add new best (1, 8) is not 2 5 5
INFO:root:XX add new best (1, 8) is not 2 5 5
INFO:root:XX add new best (1, 8) is not 2 5 5
INFO:root:XX add new best (1, 8) is not 2 5 5
INFO:root:XX add new best (1, 8) is not 2 5 5
INFO:root:XX add new best (1, 8) is not 2 5 5
INFO:root:XX add new best (1, 8) is not 2 5 5
INFO:root:XX add new best (1, 8) is not 2 5 5
INFO:root:XX add new best (1, 8) is not 2 5 5
INFO:root:XX add new best (1, 8) is not 2 5 5
INFO:root:XX add new best (1, 8) is not 2 5 5
INFO:root:XX add new best (1, 8) is not 2 5 5
INFO:root:XX add new best (1, 8) is not 2 5 5
INFO:root:XX add new best (1, 8) is not 2 5 5
INFO:root:Considering 100 * 1 jobs for minsize=5
INFO:root:Chunked 100 in [9, 9, 9, 9, 8, 8, 8, 8, 8, 8, 8, 8]
INFO:root:XX add new best (1, 8) is not 2 5 5
INFO:root:XX add new best (1, 8) is not 2 5 5
INFO:root:XX add new best (1, 8) is not 2 5 5
INFO:root:XX add new best (1, 8) is not 2 5 5
INFO:root:XX add new best (1, 8) is not 2 5 5
INFO:root:XX add new best (1, 8) is not 2 5 5
INFO:root:XX add new best (1, 8) is not 2 5 5
INFO:root:XX add new best (1, 8) is not 2 5 5
INFO:root:XX add new best (1, 8) is not 2 5 5
INFO:root:XX add new best (1, 8) is not 2 5 5
INFO:root:XX add new best (1, 8) is not 2 5 5
INFO:root:XX add new best (1, 8) is not 2 5 5
INFO:root:XX add new best (1, 8) is not 2 5 5
INFO:root:XX add new best (1, 8) is not 2 5 5
INFO:root:XX add new best (1, 8) is not 2 5 5
INFO:root:XX add new best (1, 8) is not 2 5 5
INFO:root:XX add new best (1, 8) is not 2 5 5
INFO:root:XX add new best (1, 8) is not 2 5 5
INFO:root:XX add new best (1, 8) is not 2 5 5
INFO:root:XX add new best (1, 8) is not 2 5 5
INFO:root:XX add new best (1, 8) is not 2 5 5
INFO:root:XX add new best (1, 8) is not 2 5 5
INFO:root:XX add new best (1, 8) is not 2 5 5
INFO:root:XX add new best (1, 8) is not 2 5 5
INFO:root:XX add new best (1, 8) is not 2 5 5
INFO:root:XX add new best (1, 8) is not 2 5 5
INFO:root:XX add new best (1, 8) is not 2 5 5
INFO:root:XX add new best (1, 8) is not 2 5 5
INFO:root:XX add new best (1, 8) is not 2 5 5
INFO:root:XX add new best (1, 8) is not 2 5 5
INFO:root:XX add new best (1, 8) is not 2 5 5
INFO:root:Trace: [(5, [(1, 8) is not 2])]
INFO:root:Trace Quality: [(5, 1)]
INFO:root:Trace Sorted: [(5, 1)]
INFO:root:Finished
INFO:root:Full Trace [(5, [(1, 8) is not 2])]
INFO:root:Trying {}
INFO:root:Starting Step 1
INFO:root:Current state [[[[7], [2], [5, 6], [4], [1, 9], [8], [1, 5, 6, 9], [3], [1, 6, 9]], [[5, 6, 9], [8], [3, 5, 6], [1, 3, 5], [1, 2, 9], [2, 5], [1, 5, 6, 9], [4], [7]], [[4], [3, 5, 9], [1], [3, 5], [7], [6], [8], [5, 9], [2]], [[8], [1], [2, 4, 5, 6], [7], [3], [9], [5, 6], [2, 5, 6], [4, 6]], [[6, 9], [3, 7, 9], [2, 3, 4, 6, 7], [8], [5], [1], [3, 6, 7, 9], [2, 6, 9], [4, 6, 9]], [[5, 9], [3, 5, 7, 9], [3, 5, 7], [2], [6], [4], [1, 3, 5, 7, 9], [8], [1, 9]], [[2], [5, 7], [9], [6], [8], [5, 7], [4], [1], [3]], [[3], [4], [5, 7], [1, 5], [1, 2], [2, 5, 7], [6, 9], [6, 9], [8]], [[1], [6], [8], [9], [4], [3], [2], [7], [5]]]]
INFO:root:Doing checkSmall1
INFO:root:Getting tiny MUSes, distance 1, for 1 puzlits, 1 repeats
INFO:root:Chunked 1 in [1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
INFO:root:Doing checkSmall2
INFO:root:Getting tiny MUSes, distance 2, for 1 puzlits, 1 repeats
INFO:root:Chunked 1 in [1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
INFO:root:Considering 100 * 1 jobs for minsize=3
INFO:root:Chunked 100 in [9, 9, 9, 9, 8, 8, 8, 8, 8, 8, 8, 8]
INFO:root:Considering 100 * 1 jobs for minsize=4
INFO:root:Chunked 100 in [9, 9, 9, 9, 8, 8, 8, 8, 8, 8, 8, 8]
INFO:root:XX found first (4, 3) is not 5 5
INFO:root:XX add new best (4, 3) is not 5 5 5
INFO:root:XX add new best (4, 3) is not 5 5 5
INFO:root:XX add new best (4, 3) is not 5 5 5
INFO:root:XX add new best (4, 3) is not 5 5 5
INFO:root:XX add new best (4, 3) is not 5 5 5
INFO:root:XX add new best (4, 3) is not 5 5 5
INFO:root:XX add new best (4, 3) is not 5 5 5
INFO:root:XX add new best (4, 3) is not 5 5 5
INFO:root:XX add new best (4, 3) is not 5 5 5
INFO:root:XX add new best (4, 3) is not 5 5 5
INFO:root:XX add new best (4, 3) is not 5 5 5
INFO:root:XX add new best (4, 3) is not 5 5 5
INFO:root:XX add new best (4, 3) is not 5 5 5
INFO:root:XX add new best (4, 3) is not 5 5 5
INFO:root:XX add new best (4, 3) is not 5 5 5
INFO:root:XX add new best (4, 3) is not 5 5 5
INFO:root:XX add new best (4, 3) is not 5 5 5
INFO:root:XX add new best (4, 3) is not 5 5 5
INFO:root:XX add new best (4, 3) is not 5 5 5
INFO:root:XX add new best (4, 3) is not 5 5 5
INFO:root:XX add new best (4, 3) is not 5 5 5
INFO:root:XX add new best (4, 3) is not 5 5 5
INFO:root:XX add new best (4, 3) is not 5 5 5
INFO:root:XX add new best (4, 3) is not 5 5 5
INFO:root:XX add new best (4, 3) is not 5 5 5
INFO:root:XX add new best (4, 3) is not 5 5 5
INFO:root:XX add new best (4, 3) is not 5 5 5
INFO:root:XX add new best (4, 3) is not 5 5 5
INFO:root:XX add new best (4, 3) is not 5 5 5
INFO:root:XX add new best (4, 3) is not 5 5 5
INFO:root:XX add new best (4, 3) is not 5 5 5
INFO:root:XX add new best (4, 3) is not 5 5 5
INFO:root:XX add new best (4, 3) is not 5 5 5
INFO:root:XX add new best (4, 3) is not 5 5 5
INFO:root:XX add new best (4, 3) is not 5 5 5
INFO:root:XX add new best (4, 3) is not 5 5 5
INFO:root:XX add new best (4, 3) is not 5 5 5
INFO:root:XX add new best (4, 3) is not 5 5 5
INFO:root:XX add new best (4, 3) is not 5 5 5
INFO:root:XX add new best (4, 3) is not 5 5 5
INFO:root:XX add new best (4, 3) is not 5 5 5
INFO:root:XX add new best (4, 3) is not 5 5 5
INFO:root:XX add new best (4, 3) is not 5 5 5
INFO:root:XX add new best (4, 3) is not 5 5 5
INFO:root:XX add new best (4, 3) is not 5 5 5
INFO:root:XX add new best (4, 3) is not 5 5 5
INFO:root:XX add new best (4, 3) is not 5 5 5
INFO:root:XX add new best (4, 3) is not 5 5 5
INFO:root:XX add new best (4, 3) is not 5 5 5
INFO:root:XX add new best (4, 3) is not 5 5 5
INFO:root:XX add new best (4, 3) is not 5 5 5
INFO:root:XX add new best (4, 3) is not 5 5 5
INFO:root:XX add new best (4, 3) is not 5 5 5
INFO:root:XX add new best (4, 3) is not 5 5 5
INFO:root:XX add new best (4, 3) is not 5 5 5
INFO:root:XX add new best (4, 3) is not 5 5 5
INFO:root:XX add new best (4, 3) is not 5 5 5
INFO:root:XX add new best (4, 3) is not 5 5 5
INFO:root:XX add new best (4, 3) is not 5 5 5
INFO:root:XX add new best (4, 3) is not 5 5 5
INFO:root:XX add new best (4, 3) is not 5 5 5
INFO:root:XX add new best (4, 3) is not 5 5 5
INFO:root:XX add new best (4, 3) is not 5 5 5
INFO:root:XX add new best (4, 3) is not 5 5 5
INFO:root:XX add new best (4, 3) is not 5 5 5
INFO:root:XX add new best (4, 3) is not 5 5 5
INFO:root:XX add new best (4, 3) is not 5 5 5
INFO:root:XX add new best (4, 3) is not 5 5 5
INFO:root:XX add new best (4, 3) is not 5 5 5
INFO:root:XX add new best (4, 3) is not 5 5 5
INFO:root:XX add new best (4, 3) is not 5 5 5
INFO:root:XX add new best (4, 3) is not 5 5 5
INFO:root:XX add new best (4, 3) is not 5 5 5
INFO:root:XX add new best (4, 3) is not 5 5 5
INFO:root:XX add new best (4, 3) is not 5 5 5
INFO:root:XX add new best (4, 3) is not 5 5 5
INFO:root:XX add new best (4, 3) is not 5 5 5
INFO:root:XX add new best (4, 3) is not 5 5 5
INFO:root:XX add new best (4, 3) is not 5 5 5
INFO:root:XX add new best (4, 3) is not 5 5 5
INFO:root:XX add new best (4, 3) is not 5 5 5
INFO:root:XX add new best (4, 3) is not 5 5 5
INFO:root:XX add new best (4, 3) is not 5 5 5
INFO:root:XX add new best (4, 3) is not 5 5 5
INFO:root:XX add new best (4, 3) is not 5 5 5
INFO:root:XX add new best (4, 3) is not 5 5 5
INFO:root:XX add new best (4, 3) is not 5 5 5
INFO:root:XX add new best (4, 3) is not 5 5 5
INFO:root:XX add new best (4, 3) is not 5 5 5
INFO:root:XX add new best (4, 3) is not 5 5 5
INFO:root:XX add new best (4, 3) is not 5 5 5
INFO:root:XX add new best (4, 3) is not 5 5 5
INFO:root:XX add new best (4, 3) is not 5 5 5
INFO:root:XX add new best (4, 3) is not 5 5 5
INFO:root:XX add new best (4, 3) is not 5 5 5
INFO:root:XX add new best (4, 3) is not 5 5 5
INFO:root:XX add new best (4, 3) is not 5 5 5
INFO:root:XX add new best (4, 3) is not 5 5 5
INFO:root:XX add new best (4, 3) is not 5 5 5
INFO:root:Considering 100 * 1 jobs for minsize=5
INFO:root:Chunked 100 in [9, 9, 9, 9, 8, 8, 8, 8, 8, 8, 8, 8]
INFO:root:XX add new best (4, 3) is not 5 5 5
INFO:root:XX add new best (4, 3) is not 5 5 5
INFO:root:XX add new best (4, 3) is not 5 5 5
INFO:root:XX add new best (4, 3) is not 5 5 5
INFO:root:XX add new best (4, 3) is not 5 5 5
INFO:root:XX add new best (4, 3) is not 5 5 5
INFO:root:XX add new best (4, 3) is not 5 5 5
INFO:root:XX add new best (4, 3) is not 5 5 5
INFO:root:XX add new best (4, 3) is not 5 5 5
INFO:root:XX add new best (4, 3) is not 5 5 5
INFO:root:XX add new best (4, 3) is not 5 5 5
INFO:root:XX add new best (4, 3) is not 5 5 5
INFO:root:XX add new best (4, 3) is not 5 5 5
INFO:root:XX add new best (4, 3) is not 5 5 5
INFO:root:XX add new best (4, 3) is not 5 5 5
INFO:root:XX add new best (4, 3) is not 5 5 5
INFO:root:XX add new best (4, 3) is not 5 5 5
INFO:root:XX add new best (4, 3) is not 5 5 5
INFO:root:XX add new best (4, 3) is not 5 5 5
INFO:root:XX add new best (4, 3) is not 5 5 5
INFO:root:XX add new best (4, 3) is not 5 5 5
INFO:root:XX add new best (4, 3) is not 5 5 5
INFO:root:XX add new best (4, 3) is not 5 5 5
INFO:root:XX add new best (4, 3) is not 5 5 5
INFO:root:XX add new best (4, 3) is not 5 5 5
INFO:root:XX add new best (4, 3) is not 5 5 5
INFO:root:XX add new best (4, 3) is not 5 5 5
INFO:root:XX add new best (4, 3) is not 5 5 5
INFO:root:XX add new best (4, 3) is not 5 5 5
INFO:root:XX add new best (4, 3) is not 5 5 5
INFO:root:XX add new best (4, 3) is not 5 5 5
INFO:root:XX add new best (4, 3) is not 5 5 5
INFO:root:XX add new best (4, 3) is not 5 5 5
INFO:root:XX add new best (4, 3) is not 5 5 5
INFO:root:XX add new best (4, 3) is not 5 5 5
INFO:root:XX add new best (4, 3) is not 5 5 5
INFO:root:XX add new best (4, 3) is not 5 5 5
INFO:root:XX add new best (4, 3) is not 5 5 5
INFO:root:XX add new best (4, 3) is not 5 5 5
INFO:root:XX add new best (4, 3) is not 5 5 5
INFO:root:XX add new best (4, 3) is not 5 5 5
INFO:root:XX add new best (4, 3) is not 5 5 5
INFO:root:XX add new best (4, 3) is not 5 5 5
INFO:root:XX add new best (4, 3) is not 5 5 5
INFO:root:XX add new best (4, 3) is not 5 5 5
INFO:root:XX add new best (4, 3) is not 5 5 5
INFO:root:XX add new best (4, 3) is not 5 5 5
INFO:root:XX add new best (4, 3) is not 5 5 5
INFO:root:XX add new best (4, 3) is not 5 5 5
INFO:root:XX add new best (4, 3) is not 5 5 5
INFO:root:XX add new best (4, 3) is not 5 5 5
INFO:root:XX add new best (4, 3) is not 5 5 5
INFO:root:XX add new best (4, 3) is not 5 5 5
INFO:root:XX add new best (4, 3) is not 5 5 5
INFO:root:XX add new best (4, 3) is not 5 5 5
INFO:root:XX add new best (4, 3) is not 5 5 5
INFO:root:XX add new best (4, 3) is not 5 5 5
INFO:root:XX add new best (4, 3) is not 5 5 5
INFO:root:XX add new best (4, 3) is not 5 5 5
INFO:root:XX add new best (4, 3) is not 5 5 5
INFO:root:XX add new best (4, 3) is not 5 5 5
INFO:root:XX add new best (4, 3) is not 5 5 5
INFO:root:XX add new best (4, 3) is not 5 5 5
INFO:root:XX add new best (4, 3) is not 5 5 5
INFO:root:XX add new best (4, 3) is not 5 5 5
INFO:root:XX add new best (4, 3) is not 5 5 5
INFO:root:XX add new best (4, 3) is not 5 5 5
INFO:root:XX add new best (4, 3) is not 5 5 5
INFO:root:XX add new best (4, 3) is not 5 5 5
INFO:root:XX add new best (4, 3) is not 5 5 5
INFO:root:XX add new best (4, 3) is not 5 5 5
INFO:root:XX add new best (4, 3) is not 5 5 5
INFO:root:XX add new best (4, 3) is not 5 5 5
INFO:root:XX add new best (4, 3) is not 5 5 5
INFO:root:XX add new best (4, 3) is not 5 5 5
INFO:root:XX add new best (4, 3) is not 5 5 5
INFO:root:XX add new best (4, 3) is not 5 5 5
INFO:root:XX add new best (4, 3) is not 5 5 5
INFO:root:XX add new best (4, 3) is not 5 5 5
INFO:root:XX add new best (4, 3) is not 5 5 5
INFO:root:XX add new best (4, 3) is not 5 5 5
INFO:root:XX add new best (4, 3) is not 5 5 5
INFO:root:XX add new best (4, 3) is not 5 5 5
INFO:root:XX add new best (4, 3) is not 5 5 5
INFO:root:XX add new best (4, 3) is not 5 5 5
INFO:root:XX add new best (4, 3) is not 5 5 5
INFO:root:XX add new best (4, 3) is not 5 5 5
INFO:root:XX add new best (4, 3) is not 5 5 5
INFO:root:XX add new best (4, 3) is not 5 5 5
INFO:root:XX add new best (4, 3) is not 5 5 5
INFO:root:XX add new best (4, 3) is not 5 5 5
INFO:root:XX add new best (4, 3) is not 5 5 5
INFO:root:XX add new best (4, 3) is not 5 5 5
INFO:root:XX add new best (4, 3) is not 5 5 5
INFO:root:XX add new best (4, 3) is not 5 5 5
INFO:root:XX add new best (4, 3) is not 5 5 5
INFO:root:XX add new best (4, 3) is not 5 5 5
INFO:root:XX add new best (4, 3) is not 5 5 5
INFO:root:XX add new best (4, 3) is not 5 5 5
INFO:root:XX add new best (4, 3) is not 5 5 5
INFO:root:Trace: [(5, [(4, 3) is not 5])]
INFO:root:Trace Quality: [(5, 1)]
INFO:root:Trace Sorted: [(5, 1)]
INFO:root:Finished
INFO:root:Full Trace [(5, [(4, 3) is not 5])]
INFO:root:Trying {'prechopMUSes': True}
INFO:root:Starting Step 1
INFO:root:Current state [[[[7], [2], [5, 6], [4], [1, 9], [8], [1, 5, 6, 9], [3], [1, 6, 9]], [[5, 6, 9], [8], [3, 5, 6], [1, 3, 5], [1, 2, 9], [2, 5], [1, 5, 6, 9], [4], [7]], [[4], [3, 5, 9], [1], [3, 5], [7], [6], [8], [5, 9], [2]], [[8], [1], [2, 4, 5, 6], [7], [3], [9], [5, 6], [2, 5, 6], [4, 6]], [[6, 9], [3, 7, 9], [2, 3, 4, 6, 7], [8], [5], [1], [3, 6, 7, 9], [2, 6, 9], [4, 6, 9]], [[5, 9], [3, 5, 7, 9], [3, 5, 7], [2], [6], [4], [1, 3, 5, 7, 9], [8], [1, 9]], [[2], [5, 7], [9], [6], [8], [5, 7], [4], [1], [3]], [[3], [4], [5, 7], [1, 5], [1, 2], [2, 5, 7], [6, 9], [6, 9], [8]], [[1], [6], [8], [9], [4], [3], [2], [7], [5]]]]
INFO:root:Doing checkSmall1
INFO:root:Getting tiny MUSes, distance 1, for 1 puzlits, 1 repeats
INFO:root:Chunked 1 in [1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
INFO:root:Doing checkSmall2
INFO:root:Getting tiny MUSes, distance 2, for 1 puzlits, 1 repeats
INFO:root:Chunked 1 in [1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
INFO:root:Considering 100 * 1 jobs for minsize=3
INFO:root:Chunked 100 in [9, 9, 9, 9, 8, 8, 8, 8, 8, 8, 8, 8]
INFO:root:Considering 100 * 1 jobs for minsize=4
INFO:root:Chunked 100 in [9, 9, 9, 9, 8, 8, 8, 8, 8, 8, 8, 8]
INFO:root:XX found first (4, 3) is not 5 5
INFO:root:XX add new best (4, 3) is not 5 5 5
INFO:root:XX add new best (4, 3) is not 5 5 5
INFO:root:XX add new best (4, 3) is not 5 5 5
INFO:root:XX add new best (4, 3) is not 5 5 5
INFO:root:XX add new best (4, 3) is not 5 5 5
INFO:root:XX add new best (4, 3) is not 5 5 5
INFO:root:XX add new best (4, 3) is not 5 5 5
INFO:root:XX add new best (4, 3) is not 5 5 5
INFO:root:XX add new best (4, 3) is not 5 5 5
INFO:root:XX add new best (4, 3) is not 5 5 5
INFO:root:XX add new best (4, 3) is not 5 5 5
INFO:root:XX add new best (4, 3) is not 5 5 5
INFO:root:XX add new best (4, 3) is not 5 5 5
INFO:root:XX add new best (4, 3) is not 5 5 5
INFO:root:XX add new best (4, 3) is not 5 5 5
INFO:root:XX add new best (4, 3) is not 5 5 5
INFO:root:XX add new best (4, 3) is not 5 5 5
INFO:root:XX add new best (4, 3) is not 5 5 5
INFO:root:XX add new best (4, 3) is not 5 5 5
INFO:root:XX add new best (4, 3) is not 5 5 5
INFO:root:XX add new best (4, 3) is not 5 5 5
INFO:root:XX add new best (4, 3) is not 5 5 5
INFO:root:XX add new best (4, 3) is not 5 5 5
INFO:root:XX add new best (4, 3) is not 5 5 5
INFO:root:XX add new best (4, 3) is not 5 5 5
INFO:root:XX add new best (4, 3) is not 5 5 5
INFO:root:XX add new best (4, 3) is not 5 5 5
INFO:root:XX add new best (4, 3) is not 5 5 5
INFO:root:XX add new best (4, 3) is not 5 5 5
INFO:root:Considering 100 * 1 jobs for minsize=5
INFO:root:Chunked 100 in [9, 9, 9, 9, 8, 8, 8, 8, 8, 8, 8, 8]
INFO:root:XX add new best (4, 3) is not 5 5 5
INFO:root:XX add new best (4, 3) is not 5 5 5
INFO:root:XX add new best (4, 3) is not 5 5 5
INFO:root:XX add new best (4, 3) is not 5 5 5
INFO:root:XX add new best (4, 3) is not 5 5 5
INFO:root:XX add new best (4, 3) is not 5 5 5
INFO:root:XX add new best (4, 3) is not 5 5 5
INFO:root:XX add new best (4, 3) is not 5 5 5
INFO:root:XX add new best (4, 3) is not 5 5 5
INFO:root:XX add new best (4, 3) is not 5 5 5
INFO:root:XX add new best (4, 3) is not 5 5 5
INFO:root:XX add new best (4, 3) is not 5 5 5
INFO:root:XX add new best (4, 3) is not 5 5 5
INFO:root:XX add new best (4, 3) is not 5 5 5
INFO:root:XX add new best (4, 3) is not 5 5 5
INFO:root:XX add new best (4, 3) is not 5 5 5
INFO:root:XX add new best (4, 3) is not 5 5 5
INFO:root:XX add new best (4, 3) is not 5 5 5
INFO:root:XX add new best (4, 3) is not 5 5 5
INFO:root:Trace: [(5, [(4, 3) is not 5])]
INFO:root:Trace Quality: [(5, 1)]
INFO:root:Trace Sorted: [(5, 1)]
INFO:root:Finished
INFO:root:Full Trace [(5, [(4, 3) is not 5])]
INFO:root:Trying {'quarterChopMUS': True}
INFO:root:Starting Step 1
INFO:root:Current state [[[[7], [2], [5, 6], [4], [1, 9], [8], [1, 5, 6, 9], [3], [1, 6, 9]], [[5, 6, 9], [8], [3, 5, 6], [1, 3, 5], [1, 2, 9], [2, 5], [1, 5, 6, 9], [4], [7]], [[4], [3, 5, 9], [1], [3, 5], [7], [6], [8], [5, 9], [2]], [[8], [1], [2, 4, 5, 6], [7], [3], [9], [5, 6], [2, 5, 6], [4, 6]], [[6, 9], [3, 7, 9], [2, 3, 4, 6, 7], [8], [5], [1], [3, 6, 7, 9], [2, 6, 9], [4, 6, 9]], [[5, 9], [3, 5, 7, 9], [3, 5, 7], [2], [6], [4], [1, 3, 5, 7, 9], [8], [1, 9]], [[2], [5, 7], [9], [6], [8], [5, 7], [4], [1], [3]], [[3], [4], [5, 7], [1, 5], [1, 2], [2, 5, 7], [6, 9], [6, 9], [8]], [[1], [6], [8], [9], [4], [3], [2], [7], [5]]]]
INFO:root:Doing checkSmall1
INFO:root:Getting tiny MUSes, distance 1, for 1 puzlits, 1 repeats
INFO:root:Chunked 1 in [1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
INFO:root:Doing checkSmall2
INFO:root:Getting tiny MUSes, distance 2, for 1 puzlits, 1 repeats
INFO:root:Chunked 1 in [1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
INFO:root:Considering 100 * 1 jobs for minsize=3
INFO:root:Chunked 100 in [9, 9, 9, 9, 8, 8, 8, 8, 8, 8, 8, 8]
INFO:root:Considering 100 * 1 jobs for minsize=4
INFO:root:Chunked 100 in [9, 9, 9, 9, 8, 8, 8, 8, 8, 8, 8, 8]
INFO:root:XX found first (4, 3) is not 5 5
INFO:root:XX add new best (4, 3) is not 5 5 5
INFO:root:XX add new best (4, 3) is not 5 5 5
INFO:root:XX add new best (4, 3) is not 5 5 5
INFO:root:XX add new best (4, 3) is not 5 5 5
INFO:root:XX add new best (4, 3) is not 5 5 5
INFO:root:XX add new best (4, 3) is not 5 5 5
INFO:root:XX add new best (4, 3) is not 5 5 5
INFO:root:XX add new best (4, 3) is not 5 5 5
INFO:root:XX add new best (4, 3) is not 5 5 5
INFO:root:XX add new best (4, 3) is not 5 5 5
INFO:root:XX add new best (4, 3) is not 5 5 5
INFO:root:XX add new best (4, 3) is not 5 5 5
INFO:root:XX add new best (4, 3) is not 5 5 5
INFO:root:XX add new best (4, 3) is not 5 5 5
INFO:root:XX add new best (4, 3) is not 5 5 5
INFO:root:XX add new best (4, 3) is not 5 5 5
INFO:root:XX add new best (4, 3) is not 5 5 5
INFO:root:XX add new best (4, 3) is not 5 5 5
INFO:root:XX add new best (4, 3) is not 5 5 5
INFO:root:XX add new best (4, 3) is not 5 5 5
INFO:root:XX add new best (4, 3) is not 5 5 5
INFO:root:XX add new best (4, 3) is not 5 5 5
INFO:root:XX add new best (4, 3) is not 5 5 5
INFO:root:XX add new best (4, 3) is not 5 5 5
INFO:root:XX add new best (4, 3) is not 5 5 5
INFO:root:XX add new best (4, 3) is not 5 5 5
INFO:root:XX add new best (4, 3) is not 5 5 5
INFO:root:XX add new best (4, 3) is not 5 5 5
INFO:root:XX add new best (4, 3) is not 5 5 5
INFO:root:XX add new best (4, 3) is not 5 5 5
INFO:root:XX add new best (4, 3) is not 5 5 5
INFO:root:XX add new best (4, 3) is not 5 5 5
INFO:root:XX add new best (4, 3) is not 5 5 5
INFO:root:Considering 100 * 1 jobs for minsize=5
INFO:root:Chunked 100 in [9, 9, 9, 9, 8, 8, 8, 8, 8, 8, 8, 8]
INFO:root:XX add new best (4, 3) is not 5 5 5
INFO:root:XX add new best (4, 3) is not 5 5 5
INFO:root:XX add new best (4, 3) is not 5 5 5
INFO:root:XX add new best (4, 3) is not 5 5 5
INFO:root:XX add new best (4, 3) is not 5 5 5
INFO:root:XX add new best (4, 3) is not 5 5 5
INFO:root:XX add new best (4, 3) is not 5 5 5
INFO:root:XX add new best (4, 3) is not 5 5 5
INFO:root:XX add new best (4, 3) is not 5 5 5
INFO:root:XX add new best (4, 3) is not 5 5 5
INFO:root:XX add new best (4, 3) is not 5 5 5
INFO:root:XX add new best (4, 3) is not 5 5 5
INFO:root:XX add new best (4, 3) is not 5 5 5
INFO:root:XX add new best (4, 3) is not 5 5 5
INFO:root:XX add new best (4, 3) is not 5 5 5
INFO:root:XX add new best (4, 3) is not 5 5 5
INFO:root:XX add new best (4, 3) is not 5 5 5
INFO:root:XX add new best (4, 3) is not 5 5 5
INFO:root:XX add new best (4, 3) is not 5 5 5
INFO:root:XX add new best (4, 3) is not 5 5 5
INFO:root:XX add new best (4, 3) is not 5 5 5
INFO:root:XX add new best (4, 3) is not 5 5 5
INFO:root:XX add new best (4, 3) is not 5 5 5
INFO:root:XX add new best (4, 3) is not 5 5 5
INFO:root:XX add new best (4, 3) is not 5 5 5
INFO:root:Trace: [(5, [(4, 3) is not 5])]
INFO:root:Trace Quality: [(5, 1)]
INFO:root:Trace Sorted: [(5, 1)]
INFO:root:Finished
INFO:root:Full Trace [(5, [(4, 3) is not 5])]
INFO:root:Trying {'minPrecheckMUS': True}
INFO:root:Starting Step 1
INFO:root:Current state [[[[7], [2], [5, 6], [4], [1, 9], [8], [1, 5, 6, 9], [3], [1, 6, 9]], [[5, 6, 9], [8], [3, 5, 6], [1, 3, 5], [1, 2, 9], [2, 5], [1, 5, 6, 9], [4], [7]], [[4], [3, 5, 9], [1], [3, 5], [7], [6], [8], [5, 9], [2]], [[8], [1], [2, 4, 5, 6], [7], [3], [9], [5, 6], [2, 5, 6], [4, 6]], [[6, 9], [3, 7, 9], [2, 3, 4, 6, 7], [8], [5], [1], [3, 6, 7, 9], [2, 6, 9], [4, 6, 9]], [[5, 9], [3, 5, 7, 9], [3, 5, 7], [2], [6], [4], [1, 3, 5, 7, 9], [8], [1, 9]], [[2], [5, 7], [9], [6], [8], [5, 7], [4], [1], [3]], [[3], [4], [5, 7], [1, 5], [1, 2], [2, 5, 7], [6, 9], [6, 9], [8]], [[1], [6], [8], [9], [4], [3], [2], [7], [5]]]]
INFO:root:Doing checkSmall1
INFO:root:Getting tiny MUSes, distance 1, for 1 puzlits, 1 repeats
INFO:root:Chunked 1 in [1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
INFO:root:Doing checkSmall2
INFO:root:Getting tiny MUSes, distance 2, for 1 puzlits, 1 repeats
INFO:root:Chunked 1 in [1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
INFO:root:Considering 100 * 1 jobs for minsize=3
INFO:root:Chunked 100 in [9, 9, 9, 9, 8, 8, 8, 8, 8, 8, 8, 8]
INFO:root:Considering 100 * 1 jobs for minsize=4
INFO:root:Chunked 100 in [9, 9, 9, 9, 8, 8, 8, 8, 8, 8, 8, 8]
INFO:root:XX found first (4, 3) is not 5 5
INFO:root:XX add new best (4, 3) is not 5 5 5
INFO:root:XX add new best (4, 3) is not 5 5 5
INFO:root:XX add new best (4, 3) is not 5 5 5
INFO:root:XX add new best (4, 3) is not 5 5 5
INFO:root:XX add new best (4, 3) is not 5 5 5
INFO:root:XX add new best (4, 3) is not 5 5 5
INFO:root:XX add new best (4, 3) is not 5 5 5
INFO:root:XX add new best (4, 3) is not 5 5 5
INFO:root:XX add new best (4, 3) is not 5 5 5
INFO:root:XX add new best (4, 3) is not 5 5 5
INFO:root:XX add new best (4, 3) is not 5 5 5
INFO:root:XX add new best (4, 3) is not 5 5 5
INFO:root:XX add new best (4, 3) is not 5 5 5
INFO:root:XX add new best (4, 3) is not 5 5 5
INFO:root:Considering 100 * 1 jobs for minsize=5
INFO:root:Chunked 100 in [9, 9, 9, 9, 8, 8, 8, 8, 8, 8, 8, 8]
INFO:root:XX add new best (4, 3) is not 5 5 5
INFO:root:XX add new best (4, 3) is not 5 5 5
INFO:root:XX add new best (4, 3) is not 5 5 5
INFO:root:XX add new best (4, 3) is not 5 5 5
INFO:root:XX add new best (4, 3) is not 5 5 5
INFO:root:XX add new best (4, 3) is not 5 5 5
INFO:root:XX add new best (4, 3) is not 5 5 5
INFO:root:XX add new best (4, 3) is not 5 5 5
INFO:root:XX add new best (4, 3) is not 5 5 5
INFO:root:XX add new best (4, 3) is not 5 5 5
INFO:root:XX add new best (4, 3) is not 5 5 5
INFO:root:XX add new best (4, 3) is not 5 5 5
INFO:root:XX add new best (4, 3) is not 5 5 5
INFO:root:XX add new best (4, 3) is not 5 5 5
INFO:root:XX add new best (4, 3) is not 5 5 5
INFO:root:XX add new best (4, 3) is not 5 5 5
INFO:root:XX add new best (4, 3) is not 5 5 5
INFO:root:XX add new best (4, 3) is not 5 5 5
INFO:root:XX add new best (4, 3) is not 5 5 5
INFO:root:XX add new best (4, 3) is not 5 5 5
INFO:root:XX add new best (4, 3) is not 5 5 5
INFO:root:XX add new best (4, 3) is not 5 5 5
INFO:root:XX add new best (4, 3) is not 5 5 5
INFO:root:XX add new best (4, 3) is not 5 5 5
INFO:root:XX add new best (4, 3) is not 5 5 5
INFO:root:XX add new best (4, 3) is not 5 5 5
INFO:root:XX add new best (4, 3) is not 5 5 5
INFO:root:XX add new best (4, 3) is not 5 5 5
INFO:root:XX add new best (4, 3) is not 5 5 5
INFO:root:XX add new best (4, 3) is not 5 5 5
INFO:root:XX add new best (4, 3) is not 5 5 5
INFO:root:Trace: [(5, [(4, 3) is not 5])]
INFO:root:Trace Quality: [(5, 1)]
INFO:root:Trace Sorted: [(5, 1)]
INFO:root:Finished
INFO:root:Full Trace [(5, [(4, 3) is not 5])]
INFO:root:Trying {'gallopingMUSes': True}
INFO:root:Starting Step 1
INFO:root:Current state [[[[7], [2], [5, 6], [4], [1, 9], [8], [1, 5, 6, 9], [3], [1, 6, 9]], [[5, 6, 9], [8], [3, 5, 6], [1, 3, 5], [1, 2, 9], [2, 5], [1, 5, 6, 9], [4], [7]], [[4], [3, 5, 9], [1], [3, 5], [7], [6], [8], [5, 9], [2]], [[8], [1], [2, 4, 5, 6], [7], [3], [9], [5, 6], [2, 5, 6], [4, 6]], [[6, 9], [3, 7, 9], [2, 3, 4, 6, 7], [8], [5], [1], [3, 6, 7, 9], [2, 6, 9], [4, 6, 9]], [[5, 9], [3, 5, 7, 9], [3, 5, 7], [2], [6], [4], [1, 3, 5, 7, 9], [8], [1, 9]], [[2], [5, 7], [9], [6], [8], [5, 7], [4], [1], [3]], [[3], [4], [5, 7], [1, 5], [1, 2], [2, 5, 7], [6, 9], [6, 9], [8]], [[1], [6], [8], [9], [4], [3], [2], [7], [5]]]]
INFO:root:Doing checkSmall1
INFO:root:Getting tiny MUSes, distance 1, for 1 puzlits, 1 repeats
INFO:root:Chunked 1 in [1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
INFO:root:Doing checkSmall2
INFO:root:Getting tiny MUSes, distance 2, for 1 puzlits, 1 repeats
INFO:root:Chunked 1 in [1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
INFO:root:Considering 100 * 1 jobs for minsize=3
INFO:root:Chunked 100 in [9, 9, 9, 9, 8, 8, 8, 8, 8, 8, 8, 8]
INFO:root:Considering 100 * 1 jobs for minsize=4
INFO:root:Chunked 100 in [9, 9, 9, 9, 8, 8, 8, 8, 8, 8, 8, 8]
INFO:root:XX found first (4, 3) is not 5 5
INFO:root:XX add new best (4, 3) is not 5 5 5
INFO:root:XX add new best (4, 3) is not 5 5 5
INFO:root:XX add new best (4, 3) is not 5 5 5
INFO:root:XX add new best (4, 3) is not 5 5 5
INFO:root:XX add new best (4, 3) is not 5 5 5
INFO:root:XX add new best (4, 3) is not 5 5 5
INFO:root:XX add new best (4, 3) is not 5 5 5
INFO:root:XX add new best (4, 3) is not 5 5 5
INFO:root:XX add new best (4, 3) is not 5 5 5
INFO:root:XX add new best (4, 3) is not 5 5 5
INFO:root:XX add new best (4, 3) is not 5 5 5
INFO:root:Considering 100 * 1 jobs for minsize=5
INFO:root:Chunked 100 in [9, 9, 9, 9, 8, 8, 8, 8, 8, 8, 8, 8]
INFO:root:XX add new best (4, 3) is not 5 5 5
INFO:root:XX add new best (4, 3) is not 5 5 5
INFO:root:XX add new best (4, 3) is not 5 5 5
INFO:root:XX add new best (4, 3) is not 5 5 5
INFO:root:XX add new best (4, 3) is not 5 5 5
INFO:root:XX add new best (4, 3) is not 5 5 5
INFO:root:XX add new best (4, 3) is not 5 5 5
INFO:root:XX add new best (4, 3) is not 5 5 5
INFO:root:XX add new best (4, 3) is not 5 5 5
INFO:root:XX add new best (4, 3) is not 5 5 5
INFO:root:XX add new best (4, 3) is not 5 5 5
INFO:root:XX add new best (4, 3) is not 5 5 5
INFO:root:XX add new best (4, 3) is not 5 5 5
INFO:root:XX add new best (4, 3) is not 5 5 5
INFO:root:XX add new best (4, 3) is not 5 5 5
INFO:root:XX add new best (4, 3) is not 5 5 5
INFO:root:XX add new best (4, 3) is not 5 5 5
INFO:root:XX add new best (4, 3) is not 5 5 5
INFO:root:XX add new best (4, 3) is not 5 5 5
INFO:root:XX add new best (4, 3) is not 5 5 5
INFO:root:XX add new best (4, 3) is not 5 5 5
INFO:root:XX add new best (4, 3) is not 5 5 5
INFO:root:XX add new best (4, 3) is not 5 5 5
INFO:root:XX add new best (4, 3) is not 5 5 5
INFO:root:XX add new best (4, 3) is not 5 5 5
INFO:root:XX add new best (4, 3) is not 5 5 5
INFO:root:Trace: [(5, [(4, 3) is not 5])]
INFO:root:Trace Quality: [(5, 1)]
INFO:root:Trace Sorted: [(5, 1)]
INFO:root:Finished
INFO:root:Full Trace [(5, [(4, 3) is not 5])]
INFO:root:Trying {'minPrecheckStepsMUS': True}
INFO:root:Starting Step 1
INFO:root:Current state [[[[7], [2], [5, 6], [4], [1, 9], [8], [1, 5, 6, 9], [3], [1, 6, 9]], [[5, 6, 9], [8], [3, 5, 6], [1, 3, 5], [1, 2, 9], [2, 5], [1, 5, 6, 9], [4], [7]], [[4], [3, 5, 9], [1], [3, 5], [7], [6], [8], [5, 9], [2]], [[8], [1], [2, 4, 5, 6], [7], [3], [9], [5, 6], [2, 5, 6], [4, 6]], [[6, 9], [3, 7, 9], [2, 3, 4, 6, 7], [8], [5], [1], [3, 6, 7, 9], [2, 6, 9], [4, 6, 9]], [[5, 9], [3, 5, 7, 9], [3, 5, 7], [2], [6], [4], [1, 3, 5, 7, 9], [8], [1, 9]], [[2], [5, 7], [9], [6], [8], [5, 7], [4], [1], [3]], [[3], [4], [5, 7], [1, 5], [1, 2], [2, 5, 7], [6, 9], [6, 9], [8]], [[1], [6], [8], [9], [4], [3], [2], [7], [5]]]]
INFO:root:Doing checkSmall1
INFO:root:Getting tiny MUSes, distance 1, for 1 puzlits, 1 repeats
INFO:root:Chunked 1 in [1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
INFO:root:Doing checkSmall2
INFO:root:Getting tiny MUSes, distance 2, for 1 puzlits, 1 repeats
INFO:root:Chunked 1 in [1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
INFO:root:Considering 100 * 1 jobs for minsize=3
INFO:root:Chunked 100 in [9, 9, 9, 9, 8, 8, 8, 8, 8, 8, 8, 8]
INFO:root:Considering 100 * 1 jobs for minsize=4
INFO:root:Chunked 100 in [9, 9, 9, 9, 8, 8, 8, 8, 8, 8, 8, 8]
INFO:root:XX found first (4, 3) is not 5 5
INFO:root:XX add new best (4, 3) is not 5 5 5
INFO:root:XX add new best (4, 3) is not 5 5 5
INFO:root:XX add new best (4, 3) is not 5 5 5
INFO:root:XX add new best (4, 3) is not 5 5 5
INFO:root:XX add new best (4, 3) is not 5 5 5
INFO:root:XX add new best (4, 3) is not 5 5 5
INFO:root:XX add new best (4, 3) is not 5 5 5
INFO:root:XX add new best (4, 3) is not 5 5 5
INFO:root:XX add new best (4, 3) is not 5 5 5
INFO:root:XX add new best (4, 3) is not 5 5 5
INFO:root:XX add new best (4, 3) is not 5 5 5
INFO:root:XX add new best (4, 3) is not 5 5 5
INFO:root:XX add new best (4, 3) is not 5 5 5
INFO:root:XX add new best (4, 3) is not 5 5 5
INFO:root:Considering 100 * 1 jobs for minsize=5
INFO:root:Chunked 100 in [9, 9, 9, 9, 8, 8, 8, 8, 8, 8, 8, 8]
INFO:root:XX add new best (4, 3) is not 5 5 5
INFO:root:XX add new best (4, 3) is not 5 5 5
INFO:root:XX add new best (4, 3) is not 5 5 5
INFO:root:XX add new best (4, 3) is not 5 5 5
INFO:root:XX add new best (4, 3) is not 5 5 5
INFO:root:XX add new best (4, 3) is not 5 5 5
INFO:root:XX add new best (4, 3) is not 5 5 5
INFO:root:XX add new best (4, 3) is not 5 5 5
INFO:root:XX add new best (4, 3) is not 5 5 5
INFO:root:XX add new best (4, 3) is not 5 5 5
INFO:root:XX add new best (4, 3) is not 5 5 5
INFO:root:XX add new best (4, 3) is not 5 5 5
INFO:root:XX add new best (4, 3) is not 5 5 5
INFO:root:XX add new best (4, 3) is not 5 5 5
INFO:root:XX add new best (4, 3) is not 5 5 5
INFO:root:XX add new best (4, 3) is not 5 5 5
INFO:root:XX add new best (4, 3) is not 5 5 5
INFO:root:XX add new best (4, 3) is not 5 5 5
INFO:root:XX add new best (4, 3) is not 5 5 5
INFO:root:XX add new best (4, 3) is not 5 5 5
INFO:root:XX add new best (4, 3) is not 5 5 5
INFO:root:XX add new best (4, 3) is not 5 5 5
INFO:root:XX add new best (4, 3) is not 5 5 5
INFO:root:XX add new best (4, 3) is not 5 5 5
INFO:root:XX add new best (4, 3) is not 5 5 5
INFO:root:XX add new best (4, 3) is not 5 5 5
INFO:root:XX add new best (4, 3) is not 5 5 5
INFO:root:XX add new best (4, 3) is not 5 5 5
INFO:root:XX add new best (4, 3) is not 5 5 5
INFO:root:XX add new best (4, 3) is not 5 5 5
INFO:root:XX add new best (4, 3) is not 5 5 5
INFO:root:XX add new best (4, 3) is not 5 5 5
INFO:root:Trace: [(5, [(4, 3) is not 5])]
INFO:root:Trace Quality: [(5, 1)]
INFO:root:Trace Sorted: [(5, 1)]
INFO:root:Finished
INFO:root:Full Trace [(5, [(4, 3) is not 5])]
INFO:root:Trying {'gallopingMUSes': True, 'minPrecheckMUS': True}
INFO:root:Starting Step 1
INFO:root:Current state [[[[7], [2], [5, 6], [4], [1, 9], [8], [1, 5, 6, 9], [3], [1, 6, 9]], [[5, 6, 9], [8], [3, 5, 6], [1, 3, 5], [1, 2, 9], [2, 5], [1, 5, 6, 9], [4], [7]], [[4], [3, 5, 9], [1], [3, 5], [7], [6], [8], [5, 9], [2]], [[8], [1], [2, 4, 5, 6], [7], [3], [9], [5, 6], [2, 5, 6], [4, 6]], [[6, 9], [3, 7, 9], [2, 3, 4, 6, 7], [8], [5], [1], [3, 6, 7, 9], [2, 6, 9], [4, 6, 9]], [[5, 9], [3, 5, 7, 9], [3, 5, 7], [2], [6], [4], [1, 3, 5, 7, 9], [8], [1, 9]], [[2], [5, 7], [9], [6], [8], [5, 7], [4], [1], [3]], [[3], [4], [5, 7], [1, 5], [1, 2], [2, 5, 7], [6, 9], [6, 9], [8]], [[1], [6], [8], [9], [4], [3], [2], [7], [5]]]]
INFO:root:Doing checkSmall1
INFO:root:Getting tiny MUSes, distance 1, for 1 puzlits, 1 repeats
INFO:root:Chunked 1 in [1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
INFO:root:Doing checkSmall2
INFO:root:Getting tiny MUSes, distance 2, for 1 puzlits, 1 repeats
INFO:root:Chunked 1 in [1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
INFO:root:Considering 100 * 1 jobs for minsize=3
INFO:root:Chunked 100 in [9, 9, 9, 9, 8, 8, 8, 8, 8, 8, 8, 8]
INFO:root:Considering 100 * 1 jobs for minsize=4
INFO:root:Chunked 100 in [9, 9, 9, 9, 8, 8, 8, 8, 8, 8, 8, 8]
INFO:root:XX found first (4, 3) is not 5 5
INFO:root:XX add new best (4, 3) is not 5 5 5
INFO:root:XX add new best (4, 3) is not 5 5 5
INFO:root:XX add new best (4, 3) is not 5 5 5
INFO:root:XX add new best (4, 3) is not 5 5 5
INFO:root:XX add new best (4, 3) is not 5 5 5
INFO:root:XX add new best (4, 3) is not 5 5 5
INFO:root:XX add new best (4, 3) is not 5 5 5
INFO:root:XX add new best (4, 3) is not 5 5 5
INFO:root:XX add new best (4, 3) is not 5 5 5
INFO:root:XX add new best (4, 3) is not 5 5 5
INFO:root:XX add new best (4, 3) is not 5 5 5
INFO:root:XX add new best (4, 3) is not 5 5 5
INFO:root:XX add new best (4, 3) is not 5 5 5
INFO:root:XX add new best (4, 3) is not 5 5 5
INFO:root:Considering 100 * 1 jobs for minsize=5
INFO:root:Chunked 100 in [9, 9, 9, 9, 8, 8, 8, 8, 8, 8, 8, 8]
INFO:root:XX add new best (4, 3) is not 5 5 5
INFO:root:XX add new best (4, 3) is not 5 5 5
INFO:root:XX add new best (4, 3) is not 5 5 5
INFO:root:XX add new best (4, 3) is not 5 5 5
INFO:root:XX add new best (4, 3) is not 5 5 5
INFO:root:XX add new best (4, 3) is not 5 5 5
INFO:root:XX add new best (4, 3) is not 5 5 5
INFO:root:XX add new best (4, 3) is not 5 5 5
INFO:root:XX add new best (4, 3) is not 5 5 5
INFO:root:XX add new best (4, 3) is not 5 5 5
INFO:root:XX add new best (4, 3) is not 5 5 5
INFO:root:XX add new best (4, 3) is not 5 5 5
INFO:root:XX add new best (4, 3) is not 5 5 5
INFO:root:XX add new best (4, 3) is not 5 5 5
INFO:root:XX add new best (4, 3) is not 5 5 5
INFO:root:XX add new best (4, 3) is not 5 5 5
INFO:root:XX add new best (4, 3) is not 5 5 5
INFO:root:XX add new best (4, 3) is not 5 5 5
INFO:root:XX add new best (4, 3) is not 5 5 5
INFO:root:XX add new best (4, 3) is not 5 5 5
INFO:root:XX add new best (4, 3) is not 5 5 5
INFO:root:XX add new best (4, 3) is not 5 5 5
INFO:root:XX add new best (4, 3) is not 5 5 5
INFO:root:XX add new best (4, 3) is not 5 5 5
INFO:root:XX add new best (4, 3) is not 5 5 5
INFO:root:XX add new best (4, 3) is not 5 5 5
INFO:root:XX add new best (4, 3) is not 5 5 5
INFO:root:XX add new best (4, 3) is not 5 5 5
INFO:root:XX add new best (4, 3) is not 5 5 5
INFO:root:XX add new best (4, 3) is not 5 5 5
INFO:root:XX add new best (4, 3) is not 5 5 5
INFO:root:XX add new best (4, 3) is not 5 5 5
INFO:root:Trace: [(5, [(4, 3) is not 5])]
INFO:root:Trace Quality: [(5, 1)]
INFO:root:Trace Sorted: [(5, 1)]
INFO:root:Finished
INFO:root:Full Trace [(5, [(4, 3) is not 5])]
INFO:root:Trying {}
INFO:root:Starting Step 1
INFO:root:Current state [[[[4, 7, 8, 9], [4, 8, 9], [4, 7], [2, 4, 5, 6, 7, 8], [4, 7, 8], [1], [2, 4, 6, 9], [3], [2, 4, 5, 7, 8, 9]], [[2], [3], [1], [4, 5, 6, 7, 8], [9], [5, 7, 8], [4, 6], [5, 6], [4, 5, 7, 8]], [[4, 7, 8, 9], [6], [5], [2, 4, 7, 8], [4, 7, 8], [3], [1], [2, 8, 9], [2, 4, 7, 8, 9]], [[6], [7], [8], [9], [2], [4], [3], [1, 5], [1, 5]], [[1], [2, 4, 9], [3], [7, 8], [5], [7, 8], [2, 4, 9], [2, 9], [6]], [[4, 5, 9], [2, 4, 5, 9], [2, 4], [1], [3], [6], [7], [2, 8, 9], [2, 4, 8, 9]], [[4, 8], [1, 2, 4, 8], [9], [3], [6], [2, 8], [5], [7], [1, 2]], [[5, 7], [2, 5], [6], [2, 5, 7], [1], [9], [8], [4], [3]], [[3], [1, 2, 4, 5, 8], [2, 4, 7], [2, 4, 5, 7, 8], [4, 7, 8], [2, 5, 7, 8], [2, 6, 9], [1, 6], [1, 2, 9]]]]
INFO:root:Doing checkSmall1
INFO:root:Getting tiny MUSes, distance 1, for 1 puzlits, 1 repeats
INFO:root:Chunked 1 in [1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
INFO:root:Doing checkSmall2
INFO:root:Getting tiny MUSes, distance 2, for 1 puzlits, 1 repeats
INFO:root:Chunked 1 in [1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
INFO:root:Considering 100 * 1 jobs for minsize=3
INFO:root:Chunked 100 in [9, 9, 9, 9, 8, 8, 8, 8, 8, 8, 8, 8]
INFO:root:Considering 100 * 1 jobs for minsize=4
INFO:root:Chunked 100 in [9, 9, 9, 9, 8, 8, 8, 8, 8, 8, 8, 8]
INFO:root:Considering 100 * 1 jobs for minsize=5
INFO:root:Chunked 100 in [9, 9, 9, 9, 8, 8, 8, 8, 8, 8, 8, 8]
INFO:root:Considering 100 * 1 jobs for minsize=6
INFO:root:Chunked 100 in [9, 9, 9, 9, 8, 8, 8, 8, 8, 8, 8, 8]
INFO:root:Considering 100 * 1 jobs for minsize=7
INFO:root:Chunked 100 in [9, 9, 9, 9, 8, 8, 8, 8, 8, 8, 8, 8]
INFO:root:Considering 100 * 1 jobs for minsize=8
INFO:root:Chunked 100 in [9, 9, 9, 9, 8, 8, 8, 8, 8, 8, 8, 8]
INFO:root:XX found first (1, 4) is not 4 8
INFO:root:XX add new best (1, 4) is not 4 8 8
INFO:root:XX add new best (1, 4) is not 4 8 8
INFO:root:XX add new best (1, 4) is not 4 8 8
INFO:root:XX add new best (1, 4) is not 4 8 8
INFO:root:XX add new best (1, 4) is not 4 8 8
INFO:root:XX add new best (1, 4) is not 4 8 8
INFO:root:Trace: [(8, [(1, 4) is not 4])]
INFO:root:Trace Quality: [(8, 1)]
INFO:root:Trace Sorted: [(8, 1)]
INFO:root:Finished
INFO:root:Full Trace [(8, [(1, 4) is not 4])]
INFO:root:Trying {'prechopMUSes': True}
INFO:root:Starting Step 1
INFO:root:Current state [[[[4, 7, 8, 9], [4, 8, 9], [4, 7], [2, 4, 5, 6, 7, 8], [4, 7, 8], [1], [2, 4, 6, 9], [3], [2, 4, 5, 7, 8, 9]], [[2], [3], [1], [4, 5, 6, 7, 8], [9], [5, 7, 8], [4, 6], [5, 6], [4, 5, 7, 8]], [[4, 7, 8, 9], [6], [5], [2, 4, 7, 8], [4, 7, 8], [3], [1], [2, 8, 9], [2, 4, 7, 8, 9]], [[6], [7], [8], [9], [2], [4], [3], [1, 5], [1, 5]], [[1], [2, 4, 9], [3], [7, 8], [5], [7, 8], [2, 4, 9], [2, 9], [6]], [[4, 5, 9], [2, 4, 5, 9], [2, 4], [1], [3], [6], [7], [2, 8, 9], [2, 4, 8, 9]], [[4, 8], [1, 2, 4, 8], [9], [3], [6], [2, 8], [5], [7], [1, 2]], [[5, 7], [2, 5], [6], [2, 5, 7], [1], [9], [8], [4], [3]], [[3], [1, 2, 4, 5, 8], [2, 4, 7], [2, 4, 5, 7, 8], [4, 7, 8], [2, 5, 7, 8], [2, 6, 9], [1, 6], [1, 2, 9]]]]
INFO:root:Doing checkSmall1
INFO:root:Getting tiny MUSes, distance 1, for 1 puzlits, 1 repeats
INFO:root:Chunked 1 in [1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
INFO:root:Doing checkSmall2
INFO:root:Getting tiny MUSes, distance 2, for 1 puzlits, 1 repeats
INFO:root:Chunked 1 in [1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
INFO:root:Considering 100 * 1 jobs for minsize=3
INFO:root:Chunked 100 in [9, 9, 9, 9, 8, 8, 8, 8, 8, 8, 8, 8]
INFO:root:Considering 100 * 1 jobs for minsize=4
INFO:root:Chunked 100 in [9, 9, 9, 9, 8, 8, 8, 8, 8, 8, 8, 8]
INFO:root:Considering 100 * 1 jobs for minsize=5
INFO:root:Chunked 100 in [9, 9, 9, 9, 8, 8, 8, 8, 8, 8, 8, 8]
INFO:root:Considering 100 * 1 jobs for minsize=6
INFO:root:Chunked 100 in [9, 9, 9, 9, 8, 8, 8, 8, 8, 8, 8, 8]
INFO:root:Considering 100 * 1 jobs for minsize=7
INFO:root:Chunked 100 in [9, 9, 9, 9, 8, 8, 8, 8, 8, 8, 8, 8]
INFO:root:XX found first (1, 4) is not 4 8
INFO:root:XX found new best (1, 4) is not 4 8 7
INFO:root:XX add new best (1, 4) is not 4 7 7
INFO:root:XX add new best (1, 4) is not 4 7 7
INFO:root:XX add new best (1, 4) is not 4 7 7
INFO:root:XX add new best (1, 4) is not 4 7 7
INFO:root:XX add new best (1, 4) is not 4 7 7
INFO:root:XX add new best (1, 4) is not 4 7 7
INFO:root:Trace: [(7, [(1, 4) is not 4])]
INFO:root:Trace Quality: [(7, 1)]
INFO:root:Trace Sorted: [(7, 1)]
INFO:root:Finished
INFO:root:Full Trace [(7, [(1, 4) is not 4])]
INFO:root:Trying {'quarterChopMUS': True}
INFO:root:Starting Step 1
INFO:root:Current state [[[[4, 7, 8, 9], [4, 8, 9], [4, 7], [2, 4, 5, 6, 7, 8], [4, 7, 8], [1], [2, 4, 6, 9], [3], [2, 4, 5, 7, 8, 9]], [[2], [3], [1], [4, 5, 6, 7, 8], [9], [5, 7, 8], [4, 6], [5, 6], [4, 5, 7, 8]], [[4, 7, 8, 9], [6], [5], [2, 4, 7, 8], [4, 7, 8], [3], [1], [2, 8, 9], [2, 4, 7, 8, 9]], [[6], [7], [8], [9], [2], [4], [3], [1, 5], [1, 5]], [[1], [2, 4, 9], [3], [7, 8], [5], [7, 8], [2, 4, 9], [2, 9], [6]], [[4, 5, 9], [2, 4, 5, 9], [2, 4], [1], [3], [6], [7], [2, 8, 9], [2, 4, 8, 9]], [[4, 8], [1, 2, 4, 8], [9], [3], [6], [2, 8], [5], [7], [1, 2]], [[5, 7], [2, 5], [6], [2, 5, 7], [1], [9], [8], [4], [3]], [[3], [1, 2, 4, 5, 8], [2, 4, 7], [2, 4, 5, 7, 8], [4, 7, 8], [2, 5, 7, 8], [2, 6, 9], [1, 6], [1, 2, 9]]]]
INFO:root:Doing checkSmall1
INFO:root:Getting tiny MUSes, distance 1, for 1 puzlits, 1 repeats
INFO:root:Chunked 1 in [1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
INFO:root:Doing checkSmall2
INFO:root:Getting tiny MUSes, distance 2, for 1 puzlits, 1 repeats
INFO:root:Chunked 1 in [1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
INFO:root:Considering 100 * 1 jobs for minsize=3
INFO:root:Chunked 100 in [9, 9, 9, 9, 8, 8, 8, 8, 8, 8, 8, 8]
INFO:root:Considering 100 * 1 jobs for minsize=4
INFO:root:Chunked 100 in [9, 9, 9, 9, 8, 8, 8, 8, 8, 8, 8, 8]
INFO:root:Considering 100 * 1 jobs for minsize=5
INFO:root:Chunked 100 in [9, 9, 9, 9, 8, 8, 8, 8, 8, 8, 8, 8]
INFO:root:Considering 100 * 1 jobs for minsize=6
INFO:root:Chunked 100 in [9, 9, 9, 9, 8, 8, 8, 8, 8, 8, 8, 8]
INFO:root:XX found first (1, 4) is not 4 7
INFO:root:Considering 100 * 1 jobs for minsize=7
INFO:root:Chunked 100 in [9, 9, 9, 9, 8, 8, 8, 8, 8, 8, 8, 8]
INFO:root:XX add new best (1, 4) is not 4 7 7
INFO:root:XX add new best (1, 4) is not 4 7 7
INFO:root:XX add new best (1, 4) is not 4 7 7
INFO:root:XX add new best (1, 4) is not 4 7 7
INFO:root:XX add new best (1, 4) is not 4 7 7
INFO:root:Trace: [(7, [(1, 4) is not 4])]
INFO:root:Trace Quality: [(7, 1)]
INFO:root:Trace Sorted: [(7, 1)]
INFO:root:Finished
INFO:root:Full Trace [(7, [(1, 4) is not 4])]
INFO:root:Trying {'minPrecheckMUS': True}
INFO:root:Starting Step 1
INFO:root:Current state [[[[4, 7, 8, 9], [4, 8, 9], [4, 7], [2, 4, 5, 6, 7, 8], [4, 7, 8], [1], [2, 4, 6, 9], [3], [2, 4, 5, 7, 8, 9]], [[2], [3], [1], [4, 5, 6, 7, 8], [9], [5, 7, 8], [4, 6], [5, 6], [4, 5, 7, 8]], [[4, 7, 8, 9], [6], [5], [2, 4, 7, 8], [4, 7, 8], [3], [1], [2, 8, 9], [2, 4, 7, 8, 9]], [[6], [7], [8], [9], [2], [4], [3], [1, 5], [1, 5]], [[1], [2, 4, 9], [3], [7, 8], [5], [7, 8], [2, 4, 9], [2, 9], [6]], [[4, 5, 9], [2, 4, 5, 9], [2, 4], [1], [3], [6], [7], [2, 8, 9], [2, 4, 8, 9]], [[4, 8], [1, 2, 4, 8], [9], [3], [6], [2, 8], [5], [7], [1, 2]], [[5, 7], [2, 5], [6], [2, 5, 7], [1], [9], [8], [4], [3]], [[3], [1, 2, 4, 5, 8], [2, 4, 7], [2, 4, 5, 7, 8], [4, 7, 8], [2, 5, 7, 8], [2, 6, 9], [1, 6], [1, 2, 9]]]]
INFO:root:Doing checkSmall1
INFO:root:Getting tiny MUSes, distance 1, for 1 puzlits, 1 repeats
INFO:root:Chunked 1 in [1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
INFO:root:Doing checkSmall2
INFO:root:Getting tiny MUSes, distance 2, for 1 puzlits, 1 repeats
INFO:root:Chunked 1 in [1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
INFO:root:Considering 100 * 1 jobs for minsize=3
INFO:root:Chunked 100 in [9, 9, 9, 9, 8, 8, 8, 8, 8, 8, 8, 8]
INFO:root:Considering 100 * 1 jobs for minsize=4
INFO:root:Chunked 100 in [9, 9, 9, 9, 8, 8, 8, 8, 8, 8, 8, 8]
INFO:root:Considering 100 * 1 jobs for minsize=5
INFO:root:Chunked 100 in [9, 9, 9, 9, 8, 8, 8, 8, 8, 8, 8, 8]
INFO:root:Considering 100 * 1 jobs for minsize=6
INFO:root:Chunked 100 in [9, 9, 9, 9, 8, 8, 8, 8, 8, 8, 8, 8]
INFO:root:XX found first (1, 4) is not 4 7
INFO:root:XX add new best (1, 4) is not 4 7 7
INFO:root:XX add new best (1, 4) is not 4 7 7
INFO:root:XX add new best (1, 4) is not 4 7 7
INFO:root:XX add new best (1, 4) is not 4 7 7
INFO:root:Considering 100 * 1 jobs for minsize=7
INFO:root:Chunked 100 in [9, 9, 9, 9, 8, 8, 8, 8, 8, 8, 8, 8]
INFO:root:XX add new best (1, 4) is not 4 7 7
INFO:root:XX add new best (1, 4) is not 4 7 7
INFO:root:XX add new best (1, 4) is not 4 7 7
INFO:root:XX add new best (1, 4) is not 4 7 7
INFO:root:XX add new best (1, 4) is not 4 7 7
INFO:root:XX add new best (1, 4) is not 4 7 7
INFO:root:Trace: [(7, [(1, 4) is not 4])]
INFO:root:Trace Quality: [(7, 1)]
INFO:root:Trace Sorted: [(7, 1)]
INFO:root:Finished
INFO:root:Full Trace [(7, [(1, 4) is not 4])]
INFO:root:Trying {'gallopingMUSes': True}
INFO:root:Starting Step 1
INFO:root:Current state [[[[4, 7, 8, 9], [4, 8, 9], [4, 7], [2, 4, 5, 6, 7, 8], [4, 7, 8], [1], [2, 4, 6, 9], [3], [2, 4, 5, 7, 8, 9]], [[2], [3], [1], [4, 5, 6, 7, 8], [9], [5, 7, 8], [4, 6], [5, 6], [4, 5, 7, 8]], [[4, 7, 8, 9], [6], [5], [2, 4, 7, 8], [4, 7, 8], [3], [1], [2, 8, 9], [2, 4, 7, 8, 9]], [[6], [7], [8], [9], [2], [4], [3], [1, 5], [1, 5]], [[1], [2, 4, 9], [3], [7, 8], [5], [7, 8], [2, 4, 9], [2, 9], [6]], [[4, 5, 9], [2, 4, 5, 9], [2, 4], [1], [3], [6], [7], [2, 8, 9], [2, 4, 8, 9]], [[4, 8], [1, 2, 4, 8], [9], [3], [6], [2, 8], [5], [7], [1, 2]], [[5, 7], [2, 5], [6], [2, 5, 7], [1], [9], [8], [4], [3]], [[3], [1, 2, 4, 5, 8], [2, 4, 7], [2, 4, 5, 7, 8], [4, 7, 8], [2, 5, 7, 8], [2, 6, 9], [1, 6], [1, 2, 9]]]]
INFO:root:Doing checkSmall1
INFO:root:Getting tiny MUSes, distance 1, for 1 puzlits, 1 repeats
INFO:root:Chunked 1 in [1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
INFO:root:Doing checkSmall2
INFO:root:Getting tiny MUSes, distance 2, for 1 puzlits, 1 repeats
INFO:root:Chunked 1 in [1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
INFO:root:Considering 100 * 1 jobs for minsize=3
INFO:root:Chunked 100 in [9, 9, 9, 9, 8, 8, 8, 8, 8, 8, 8, 8]
INFO:root:Considering 100 * 1 jobs for minsize=4
INFO:root:Chunked 100 in [9, 9, 9, 9, 8, 8, 8, 8, 8, 8, 8, 8]
INFO:root:Considering 100 * 1 jobs for minsize=5
INFO:root:Chunked 100 in [9, 9, 9, 9, 8, 8, 8, 8, 8, 8, 8, 8]
INFO:root:Considering 100 * 1 jobs for minsize=6
INFO:root:Chunked 100 in [9, 9, 9, 9, 8, 8, 8, 8, 8, 8, 8, 8]
INFO:root:XX found first (1, 4) is not 4 7
INFO:root:XX add new best (1, 4) is not 4 7 7
INFO:root:XX add new best (1, 4) is not 4 7 7
INFO:root:XX add new best (1, 4) is not 4 7 7
INFO:root:Considering 100 * 1 jobs for minsize=7
INFO:root:Chunked 100 in [9, 9, 9, 9, 8, 8, 8, 8, 8, 8, 8, 8]
INFO:root:XX add new best (1, 4) is not 4 7 7
INFO:root:XX add new best (1, 4) is not 4 7 7
INFO:root:XX add new best (1, 4) is not 4 7 7
INFO:root:XX add new best (1, 4) is not 4 7 7
INFO:root:XX add new best (1, 4) is not 4 7 7
INFO:root:XX add new best (1, 4) is not 4 7 7
INFO:root:XX add new best (1, 4) is not 4 7 7
INFO:root:Trace: [(7, [(1, 4) is not 4])]
INFO:root:Trace Quality: [(7, 1)]
INFO:root:Trace Sorted: [(7, 1)]
INFO:root:Finished
INFO:root:Full Trace [(7, [(1, 4) is not 4])]
INFO:root:Trying {'minPrecheckStepsMUS': True}
INFO:root:Starting Step 1
INFO:root:Current state [[[[4, 7, 8, 9], [4, 8, 9], [4, 7], [2, 4, 5, 6, 7, 8], [4, 7, 8], [1], [2, 4, 6, 9], [3], [2, 4, 5, 7, 8, 9]], [[2], [3], [1], [4, 5, 6, 7, 8], [9], [5, 7, 8], [4, 6], [5, 6], [4, 5, 7, 8]], [[4, 7, 8, 9], [6], [5], [2, 4, 7, 8], [4, 7, 8], [3], [1], [2, 8, 9], [2, 4, 7, 8, 9]], [[6], [7], [8], [9], [2], [4], [3], [1, 5], [1, 5]], [[1], [2, 4, 9], [3], [7, 8], [5], [7, 8], [2, 4, 9], [2, 9], [6]], [[4, 5, 9], [2, 4, 5, 9], [2, 4], [1], [3], [6], [7], [2, 8, 9], [2, 4, 8, 9]], [[4, 8], [1, 2, 4, 8], [9], [3], [6], [2, 8], [5], [7], [1, 2]], [[5, 7], [2, 5], [6], [2, 5, 7], [1], [9], [8], [4], [3]], [[3], [1, 2, 4, 5, 8], [2, 4, 7], [2, 4, 5, 7, 8], [4, 7, 8], [2, 5, 7, 8], [2, 6, 9], [1, 6], [1, 2, 9]]]]
INFO:root:Doing checkSmall1
INFO:root:Getting tiny MUSes, distance 1, for 1 puzlits, 1 repeats
INFO:root:Chunked 1 in [1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
INFO:root:Doing checkSmall2
INFO:root:Getting tiny MUSes, distance 2, for 1 puzlits, 1 repeats
INFO:root:Chunked 1 in [1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
INFO:root:Considering 100 * 1 jobs for minsize=3
INFO:root:Chunked 100 in [9, 9, 9, 9, 8, 8, 8, 8, 8, 8, 8, 8]
INFO:root:Considering 100 * 1 jobs for minsize=4
INFO:root:Chunked 100 in [9, 9, 9, 9, 8, 8, 8, 8, 8, 8, 8, 8]
INFO:root:Considering 100 * 1 jobs for minsize=5
INFO:root:Chunked 100 in [9, 9, 9, 9, 8, 8, 8, 8, 8, 8, 8, 8]
INFO:root:Considering 100 * 1 jobs for minsize=6
INFO:root:Chunked 100 in [9, 9, 9, 9, 8, 8, 8, 8, 8, 8, 8, 8]
INFO:root:XX found first (1, 4) is not 4 7
INFO:root:XX add new best (1, 4) is not 4 7 7
INFO:root:XX add new best (1, 4) is not 4 7 7
INFO:root:XX add new best (1, 4) is not 4 7 7
INFO:root:XX add new best (1, 4) is not 4 7 7
INFO:root:Considering 100 * 1 jobs for minsize=7
INFO:root:Chunked 100 in [9, 9, 9, 9, 8, 8, 8, 8, 8, 8, 8, 8]
INFO:root:XX add new best (1, 4) is not 4 7 7
INFO:root:XX add new best (1, 4) is not 4 7 7
INFO:root:XX add new best (1, 4) is not 4 7 7
INFO:root:XX add new best (1, 4) is not 4 7 7
INFO:root:XX add new best (1, 4) is not 4 7 7
INFO:root:XX add new best (1, 4) is not 4 7 7
INFO:root:XX add new best (1, 4) is not 4 7 7
INFO:root:Trace: [(7, [(1, 4) is not 4])]
INFO:root:Trace Quality: [(7, 1)]
INFO:root:Trace Sorted: [(7, 1)]
INFO:root:Finished
INFO:root:Full Trace [(7, [(1, 4) is not 4])]
INFO:root:Trying {'gallopingMUSes': True, 'minPrecheckMUS': True}
INFO:root:Starting Step 1
INFO:root:Current state [[[[4, 7, 8, 9], [4, 8, 9], [4, 7], [2, 4, 5, 6, 7, 8], [4, 7, 8], [1], [2, 4, 6, 9], [3], [2, 4, 5, 7, 8, 9]], [[2], [3], [1], [4, 5, 6, 7, 8], [9], [5, 7, 8], [4, 6], [5, 6], [4, 5, 7, 8]], [[4, 7, 8, 9], [6], [5], [2, 4, 7, 8], [4, 7, 8], [3], [1], [2, 8, 9], [2, 4, 7, 8, 9]], [[6], [7], [8], [9], [2], [4], [3], [1, 5], [1, 5]], [[1], [2, 4, 9], [3], [7, 8], [5], [7, 8], [2, 4, 9], [2, 9], [6]], [[4, 5, 9], [2, 4, 5, 9], [2, 4], [1], [3], [6], [7], [2, 8, 9], [2, 4, 8, 9]], [[4, 8], [1, 2, 4, 8], [9], [3], [6], [2, 8], [5], [7], [1, 2]], [[5, 7], [2, 5], [6], [2, 5, 7], [1], [9], [8], [4], [3]], [[3], [1, 2, 4, 5, 8], [2, 4, 7], [2, 4, 5, 7, 8], [4, 7, 8], [2, 5, 7, 8], [2, 6, 9], [1, 6], [1, 2, 9]]]]
INFO:root:Doing checkSmall1
INFO:root:Getting tiny MUSes, distance 1, for 1 puzlits, 1 repeats
INFO:root:Chunked 1 in [1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
INFO:root:Doing checkSmall2
INFO:root:Getting tiny MUSes, distance 2, for 1 puzlits, 1 repeats
INFO:root:Chunked 1 in [1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
INFO:root:Considering 100 * 1 jobs for minsize=3
INFO:root:Chunked 100 in [9, 9, 9, 9, 8, 8, 8, 8, 8, 8, 8, 8]
INFO:root:Considering 100 * 1 jobs for minsize=4
INFO:root:Chunked 100 in [9, 9, 9, 9, 8, 8, 8, 8, 8, 8, 8, 8]
INFO:root:Considering 100 * 1 jobs for minsize=5
INFO:root:Chunked 100 in [9, 9, 9, 9, 8, 8, 8, 8, 8, 8, 8, 8]
INFO:root:Considering 100 * 1 jobs for minsize=6
INFO:root:Chunked 100 in [9, 9, 9, 9, 8, 8, 8, 8, 8, 8, 8, 8]
INFO:root:XX found first (1, 4) is not 4 7
INFO:root:XX add new best (1, 4) is not 4 7 7
INFO:root:XX add new best (1, 4) is not 4 7 7
INFO:root:XX add new best (1, 4) is not 4 7 7
INFO:root:XX add new best (1, 4) is not 4 7 7
INFO:root:Considering 100 * 1 jobs for minsize=7
INFO:root:Chunked 100 in [9, 9, 9, 9, 8, 8, 8, 8, 8, 8, 8, 8]
INFO:root:XX add new best (1, 4) is not 4 7 7
INFO:root:XX add new best (1, 4) is not 4 7 7
INFO:root:XX add new best (1, 4) is not 4 7 7
INFO:root:XX add new best (1, 4) is not 4 7 7
INFO:root:XX add new best (1, 4) is not 4 7 7
INFO:root:XX add new best (1, 4) is not 4 7 7
INFO:root:XX add new best (1, 4) is not 4 7 7
INFO:root:Trace: [(7, [(1, 4) is not 4])]
INFO:root:Trace Quality: [(7, 1)]
INFO:root:Trace Sorted: [(7, 1)]
INFO:root:Finished
INFO:root:Full Trace [(7, [(1, 4) is not 4])]
INFO:root:Trying {}
INFO:root:Starting Step 1
INFO:root:Current state [[[[6], [5], [1, 3, 9], [1, 3], [8], [7], [1, 9], [2], [4]], [[2, 7, 8], [2, 8], [1, 3, 7, 8], [6], [4], [9], [1, 8], [5], [3, 7]], [[8, 9], [4], [3, 7, 8], [1, 3], [2], [5], [1, 6, 8], [3, 7], [6, 9]], [[5], [7], [2, 9], [4], [3], [8], [2, 9], [6], [1]], [[2, 4, 8, 9], [2, 6, 8, 9], [4, 6, 8], [5], [6, 7], [1], [3, 4, 7], [3, 4, 7], [2, 9]], [[3], [1], [4, 6], [9], [6, 7], [2], [4, 7], [8], [5]], [[2, 4, 7], [2, 6], [4, 5, 7], [8], [9], [4, 6], [3, 5, 7], [1], [2, 3, 7]], [[4, 7, 8, 9], [6, 8, 9], [5, 7, 8], [2], [1], [3], [4, 5, 6, 7], [4, 7], [6, 7]], [[1], [3], [2, 4, 6], [7], [5], [4, 6], [2, 6], [9], [8]]]]
INFO:root:Doing checkSmall1
INFO:root:Getting tiny MUSes, distance 1, for 1 puzlits, 1 repeats
INFO:root:Chunked 1 in [1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
INFO:root:Doing checkSmall2
INFO:root:Getting tiny MUSes, distance 2, for 1 puzlits, 1 repeats
INFO:root:Chunked 1 in [1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
INFO:root:Considering 100 * 1 jobs for minsize=3
INFO:root:Chunked 100 in [9, 9, 9, 9, 8, 8, 8, 8, 8, 8, 8, 8]
INFO:root:Considering 100 * 1 jobs for minsize=4
INFO:root:Chunked 100 in [9, 9, 9, 9, 8, 8, 8, 8, 8, 8, 8, 8]
INFO:root:Considering 100 * 1 jobs for minsize=5
INFO:root:Chunked 100 in [9, 9, 9, 9, 8, 8, 8, 8, 8, 8, 8, 8]
INFO:root:Considering 100 * 1 jobs for minsize=6
INFO:root:Chunked 100 in [9, 9, 9, 9, 8, 8, 8, 8, 8, 8, 8, 8]
INFO:root:Considering 100 * 1 jobs for minsize=7
INFO:root:Chunked 100 in [9, 9, 9, 9, 8, 8, 8, 8, 8, 8, 8, 8]
INFO:root:Considering 100 * 1 jobs for minsize=8
INFO:root:Chunked 100 in [9, 9, 9, 9, 8, 8, 8, 8, 8, 8, 8, 8]
INFO:root:Considering 100 * 1 jobs for minsize=9
INFO:root:Chunked 100 in [9, 9, 9, 9, 8, 8, 8, 8, 8, 8, 8, 8]
INFO:root:Considering 100 * 1 jobs for minsize=10
INFO:root:Chunked 100 in [9, 9, 9, 9, 8, 8, 8, 8, 8, 8, 8, 8]
INFO:root:XX found first (8, 7) is not 6 11
INFO:root:XX add new best (8, 7) is not 6 11 11
INFO:root:XX add new best (8, 7) is not 6 11 11
INFO:root:XX add new best (8, 7) is not 6 11 11
INFO:root:XX add new best (8, 7) is not 6 11 11
INFO:root:XX add new best (8, 7) is not 6 11 11
INFO:root:XX add new best (8, 7) is not 6 11 11
INFO:root:XX add new best (8, 7) is not 6 11 11
INFO:root:XX add new best (8, 7) is not 6 11 11
INFO:root:XX add new best (8, 7) is not 6 11 11
INFO:root:XX add new best (8, 7) is not 6 11 11
INFO:root:XX add new best (8, 7) is not 6 11 11
INFO:root:XX add new best (8, 7) is not 6 11 11
INFO:root:XX add new best (8, 7) is not 6 11 11
INFO:root:XX add new best (8, 7) is not 6 11 11
INFO:root:XX add new best (8, 7) is not 6 11 11
INFO:root:XX add new best (8, 7) is not 6 11 11
INFO:root:XX add new best (8, 7) is not 6 11 11
INFO:root:XX add new best (8, 7) is not 6 11 11
INFO:root:XX add new best (8, 7) is not 6 11 11
INFO:root:XX add new best (8, 7) is not 6 11 11
INFO:root:XX add new best (8, 7) is not 6 11 11
INFO:root:XX add new best (8, 7) is not 6 11 11
INFO:root:XX add new best (8, 7) is not 6 11 11
INFO:root:XX add new best (8, 7) is not 6 11 11
INFO:root:XX add new best (8, 7) is not 6 11 11
INFO:root:XX add new best (8, 7) is not 6 11 11
INFO:root:XX add new best (8, 7) is not 6 11 11
INFO:root:XX add new best (8, 7) is not 6 11 11
INFO:root:XX add new best (8, 7) is not 6 11 11
INFO:root:XX add new best (8, 7) is not 6 11 11
INFO:root:XX add new best (8, 7) is not 6 11 11
INFO:root:XX add new best (8, 7) is not 6 11 11
INFO:root:XX add new best (8, 7) is not 6 11 11
INFO:root:XX add new best (8, 7) is not 6 11 11
INFO:root:XX add new best (8, 7) is not 6 11 11
INFO:root:XX add new best (8, 7) is not 6 11 11
INFO:root:XX add new best (8, 7) is not 6 11 11
INFO:root:XX add new best (8, 7) is not 6 11 11
INFO:root:XX add new best (8, 7) is not 6 11 11
INFO:root:XX add new best (8, 7) is not 6 11 11
INFO:root:XX add new best (8, 7) is not 6 11 11
INFO:root:XX add new best (8, 7) is not 6 11 11
INFO:root:XX add new best (8, 7) is not 6 11 11
INFO:root:XX add new best (8, 7) is not 6 11 11
INFO:root:XX add new best (8, 7) is not 6 11 11
INFO:root:XX add new best (8, 7) is not 6 11 11
INFO:root:XX add new best (8, 7) is not 6 11 11
INFO:root:XX add new best (8, 7) is not 6 11 11
INFO:root:XX add new best (8, 7) is not 6 11 11
INFO:root:XX add new best (8, 7) is not 6 11 11
INFO:root:XX add new best (8, 7) is not 6 11 11
INFO:root:XX add new best (8, 7) is not 6 11 11
INFO:root:XX add new best (8, 7) is not 6 11 11
INFO:root:XX add new best (8, 7) is not 6 11 11
INFO:root:XX add new best (8, 7) is not 6 11 11
INFO:root:XX add new best (8, 7) is not 6 11 11
INFO:root:XX add new best (8, 7) is not 6 11 11
INFO:root:XX add new best (8, 7) is not 6 11 11
INFO:root:XX add new best (8, 7) is not 6 11 11
INFO:root:XX add new best (8, 7) is not 6 11 11
INFO:root:XX add new best (8, 7) is not 6 11 11
INFO:root:XX add new best (8, 7) is not 6 11 11
INFO:root:XX add new best (8, 7) is not 6 11 11
INFO:root:XX add new best (8, 7) is not 6 11 11
INFO:root:XX add new best (8, 7) is not 6 11 11
INFO:root:XX add new best (8, 7) is not 6 11 11
INFO:root:XX add new best (8, 7) is not 6 11 11
INFO:root:XX add new best (8, 7) is not 6 11 11
INFO:root:XX found new best (8, 7) is not 6 11 9
INFO:root:Trace: [(9, [(8, 7) is not 6])]
INFO:root:Trace Quality: [(9, 1)]
INFO:root:Trace Sorted: [(9, 1)]
INFO:root:Finished
INFO:root:Full Trace [(9, [(8, 7) is not 6])]
INFO:root:Trying {'prechopMUSes': True}
INFO:root:Starting Step 1
INFO:root:Current state [[[[6], [5], [1, 3, 9], [1, 3], [8], [7], [1, 9], [2], [4]], [[2, 7, 8], [2, 8], [1, 3, 7, 8], [6], [4], [9], [1, 8], [5], [3, 7]], [[8, 9], [4], [3, 7, 8], [1, 3], [2], [5], [1, 6, 8], [3, 7], [6, 9]], [[5], [7], [2, 9], [4], [3], [8], [2, 9], [6], [1]], [[2, 4, 8, 9], [2, 6, 8, 9], [4, 6, 8], [5], [6, 7], [1], [3, 4, 7], [3, 4, 7], [2, 9]], [[3], [1], [4, 6], [9], [6, 7], [2], [4, 7], [8], [5]], [[2, 4, 7], [2, 6], [4, 5, 7], [8], [9], [4, 6], [3, 5, 7], [1], [2, 3, 7]], [[4, 7, 8, 9], [6, 8, 9], [5, 7, 8], [2], [1], [3], [4, 5, 6, 7], [4, 7], [6, 7]], [[1], [3], [2, 4, 6], [7], [5], [4, 6], [2, 6], [9], [8]]]]
INFO:root:Doing checkSmall1
INFO:root:Getting tiny MUSes, distance 1, for 1 puzlits, 1 repeats
INFO:root:Chunked 1 in [1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
INFO:root:Doing checkSmall2
INFO:root:Getting tiny MUSes, distance 2, for 1 puzlits, 1 repeats
INFO:root:Chunked 1 in [1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
INFO:root:Considering 100 * 1 jobs for minsize=3
INFO:root:Chunked 100 in [9, 9, 9, 9, 8, 8, 8, 8, 8, 8, 8, 8]
INFO:root:Considering 100 * 1 jobs for minsize=4
INFO:root:Chunked 100 in [9, 9, 9, 9, 8, 8, 8, 8, 8, 8, 8, 8]
INFO:root:Considering 100 * 1 jobs for minsize=5
INFO:root:Chunked 100 in [9, 9, 9, 9, 8, 8, 8, 8, 8, 8, 8, 8]
INFO:root:Considering 100 * 1 jobs for minsize=6
INFO:root:Chunked 100 in [9, 9, 9, 9, 8, 8, 8, 8, 8, 8, 8, 8]
INFO:root:Considering 100 * 1 jobs for minsize=7
INFO:root:Chunked 100 in [9, 9, 9, 9, 8, 8, 8, 8, 8, 8, 8, 8]
INFO:root:Considering 100 * 1 jobs for minsize=8
INFO:root:Chunked 100 in [9, 9, 9, 9, 8, 8, 8, 8, 8, 8, 8, 8]
INFO:root:XX found first (8, 7) is not 6 9
INFO:root:XX add new best (8, 7) is not 6 9 9
INFO:root:XX add new best (8, 7) is not 6 9 9
INFO:root:XX add new best (8, 7) is not 6 9 9
INFO:root:XX add new best (8, 7) is not 6 9 9
INFO:root:XX add new best (8, 7) is not 6 9 9
INFO:root:XX add new best (8, 7) is not 6 9 9
INFO:root:XX add new best (8, 7) is not 6 9 9
INFO:root:XX add new best (8, 7) is not 6 9 9
INFO:root:XX add new best (8, 7) is not 6 9 9
INFO:root:XX add new best (8, 7) is not 6 9 9
INFO:root:XX add new best (8, 7) is not 6 9 9
INFO:root:XX add new best (8, 7) is not 6 9 9
INFO:root:Considering 100 * 1 jobs for minsize=9
INFO:root:Chunked 100 in [9, 9, 9, 9, 8, 8, 8, 8, 8, 8, 8, 8]
INFO:root:XX add new best (8, 7) is not 6 9 9
INFO:root:XX add new best (8, 7) is not 6 9 9
INFO:root:XX add new best (8, 7) is not 6 9 9
INFO:root:XX add new best (8, 7) is not 6 9 9
INFO:root:XX add new best (8, 7) is not 6 9 9
INFO:root:XX add new best (8, 7) is not 6 9 9
INFO:root:XX add new best (8, 7) is not 6 9 9
INFO:root:XX add new best (8, 7) is not 6 9 9
INFO:root:XX add new best (8, 7) is not 6 9 9
INFO:root:XX add new best (8, 7) is not 6 9 9
INFO:root:XX add new best (8, 7) is not 6 9 9
INFO:root:XX add new best (8, 7) is not 6 9 9
INFO:root:XX add new best (8, 7) is not 6 9 9
INFO:root:XX add new best (8, 7) is not 6 9 9
INFO:root:XX add new best (8, 7) is not 6 9 9
INFO:root:XX add new best (8, 7) is not 6 9 9
INFO:root:Trace: [(9, [(8, 7) is not 6])]
INFO:root:Trace Quality: [(9, 1)]
INFO:root:Trace Sorted: [(9, 1)]
INFO:root:Finished
INFO:root:Full Trace [(9, [(8, 7) is not 6])]
INFO:root:Trying {'quarterChopMUS': True}
INFO:root:Starting Step 1
INFO:root:Current state [[[[6], [5], [1, 3, 9], [1, 3], [8], [7], [1, 9], [2], [4]], [[2, 7, 8], [2, 8], [1, 3, 7, 8], [6], [4], [9], [1, 8], [5], [3, 7]], [[8, 9], [4], [3, 7, 8], [1, 3], [2], [5], [1, 6, 8], [3, 7], [6, 9]], [[5], [7], [2, 9], [4], [3], [8], [2, 9], [6], [1]], [[2, 4, 8, 9], [2, 6, 8, 9], [4, 6, 8], [5], [6, 7], [1], [3, 4, 7], [3, 4, 7], [2, 9]], [[3], [1], [4, 6], [9], [6, 7], [2], [4, 7], [8], [5]], [[2, 4, 7], [2, 6], [4, 5, 7], [8], [9], [4, 6], [3, 5, 7], [1], [2, 3, 7]], [[4, 7, 8, 9], [6, 8, 9], [5, 7, 8], [2], [1], [3], [4, 5, 6, 7], [4, 7], [6, 7]], [[1], [3], [2, 4, 6], [7], [5], [4, 6], [2, 6], [9], [8]]]]
INFO:root:Doing checkSmall1
INFO:root:Getting tiny MUSes, distance 1, for 1 puzlits, 1 repeats
INFO:root:Chunked 1 in [1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
INFO:root:Doing checkSmall2
INFO:root:Getting tiny MUSes, distance 2, for 1 puzlits, 1 repeats
INFO:root:Chunked 1 in [1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
INFO:root:Considering 100 * 1 jobs for minsize=3
INFO:root:Chunked 100 in [9, 9, 9, 9, 8, 8, 8, 8, 8, 8, 8, 8]
INFO:root:Considering 100 * 1 jobs for minsize=4
INFO:root:Chunked 100 in [9, 9, 9, 9, 8, 8, 8, 8, 8, 8, 8, 8]
INFO:root:Considering 100 * 1 jobs for minsize=5
INFO:root:Chunked 100 in [9, 9, 9, 9, 8, 8, 8, 8, 8, 8, 8, 8]
INFO:root:Considering 100 * 1 jobs for minsize=6
INFO:root:Chunked 100 in [9, 9, 9, 9, 8, 8, 8, 8, 8, 8, 8, 8]
INFO:root:Considering 100 * 1 jobs for minsize=7
INFO:root:Chunked 100 in [9, 9, 9, 9, 8, 8, 8, 8, 8, 8, 8, 8]
INFO:root:Considering 100 * 1 jobs for minsize=8
INFO:root:Chunked 100 in [9, 9, 9, 9, 8, 8, 8, 8, 8, 8, 8, 8]
INFO:root:XX found first (8, 7) is not 6 9
INFO:root:XX add new best (8, 7) is not 6 9 9
INFO:root:XX add new best (8, 7) is not 6 9 9
INFO:root:XX add new best (8, 7) is not 6 9 9
INFO:root:XX add new best (8, 7) is not 6 9 9
INFO:root:XX add new best (8, 7) is not 6 9 9
INFO:root:XX add new best (8, 7) is not 6 9 9
INFO:root:XX add new best (8, 7) is not 6 9 9
INFO:root:XX add new best (8, 7) is not 6 9 9
INFO:root:XX add new best (8, 7) is not 6 9 9
INFO:root:XX add new best (8, 7) is not 6 9 9
INFO:root:XX add new best (8, 7) is not 6 9 9
INFO:root:XX add new best (8, 7) is not 6 9 9
INFO:root:XX add new best (8, 7) is not 6 9 9
INFO:root:XX add new best (8, 7) is not 6 9 9
INFO:root:XX add new best (8, 7) is not 6 9 9
INFO:root:XX add new best (8, 7) is not 6 9 9
INFO:root:XX add new best (8, 7) is not 6 9 9
INFO:root:XX add new best (8, 7) is not 6 9 9
INFO:root:Considering 100 * 1 jobs for minsize=9
INFO:root:Chunked 100 in [9, 9, 9, 9, 8, 8, 8, 8, 8, 8, 8, 8]
INFO:root:XX add new best (8, 7) is not 6 9 9
INFO:root:XX add new best (8, 7) is not 6 9 9
INFO:root:XX add new best (8, 7) is not 6 9 9
INFO:root:XX add new best (8, 7) is not 6 9 9
INFO:root:XX add new best (8, 7) is not 6 9 9
INFO:root:XX add new best (8, 7) is not 6 9 9
INFO:root:XX add new best (8, 7) is not 6 9 9
INFO:root:XX add new best (8, 7) is not 6 9 9
INFO:root:XX add new best (8, 7) is not 6 9 9
INFO:root:XX add new best (8, 7) is not 6 9 9
INFO:root:XX add new best (8, 7) is not 6 9 9
INFO:root:XX add new best (8, 7) is not 6 9 9
INFO:root:XX add new best (8, 7) is not 6 9 9
INFO:root:XX add new best (8, 7) is not 6 9 9
INFO:root:XX add new best (8, 7) is not 6 9 9
INFO:root:XX add new best (8, 7) is not 6 9 9
INFO:root:XX add new best (8, 7) is not 6 9 9
INFO:root:XX add new best (8, 7) is not 6 9 9
INFO:root:XX add new best (8, 7) is not 6 9 9
INFO:root:XX add new best (8, 7) is not 6 9 9
INFO:root:XX add new best (8, 7) is not 6 9 9
INFO:root:XX add new best (8, 7) is not 6 9 9
INFO:root:XX add new best (8, 7) is not 6 9 9
INFO:root:XX add new best (8, 7) is not 6 9 9
INFO:root:Trace: [(9, [(8, 7) is not 6])]
INFO:root:Trace Quality: [(9, 1)]
INFO:root:Trace Sorted: [(9, 1)]
INFO:root:Finished
INFO:root:Full Trace [(9, [(8, 7) is not 6])]
INFO:root:Trying {'minPrecheckMUS': True}
INFO:root:Starting Step 1
INFO:root:Current state [[[[6], [5], [1, 3, 9], [1, 3], [8], [7], [1, 9], [2], [4]], [[2, 7, 8], [2, 8], [1, 3, 7, 8], [6], [4], [9], [1, 8], [5], [3, 7]], [[8, 9], [4], [3, 7, 8], [1, 3], [2], [5], [1, 6, 8], [3, 7], [6, 9]], [[5], [7], [2, 9], [4], [3], [8], [2, 9], [6], [1]], [[2, 4, 8, 9], [2, 6, 8, 9], [4, 6, 8], [5], [6, 7], [1], [3, 4, 7], [3, 4, 7], [2, 9]], [[3], [1], [4, 6], [9], [6, 7], [2], [4, 7], [8], [5]], [[2, 4, 7], [2, 6], [4, 5, 7], [8], [9], [4, 6], [3, 5, 7], [1], [2, 3, 7]], [[4, 7, 8, 9], [6, 8, 9], [5, 7, 8], [2], [1], [3], [4, 5, 6, 7], [4, 7], [6, 7]], [[1], [3], [2, 4, 6], [7], [5], [4, 6], [2, 6], [9], [8]]]]
INFO:root:Doing checkSmall1
INFO:root:Getting tiny MUSes, distance 1, for 1 puzlits, 1 repeats
INFO:root:Chunked 1 in [1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
INFO:root:Doing checkSmall2
INFO:root:Getting tiny MUSes, distance 2, for 1 puzlits, 1 repeats
INFO:root:Chunked 1 in [1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
INFO:root:Considering 100 * 1 jobs for minsize=3
INFO:root:Chunked 100 in [9, 9, 9, 9, 8, 8, 8, 8, 8, 8, 8, 8]
INFO:root:Considering 100 * 1 jobs for minsize=4
INFO:root:Chunked 100 in [9, 9, 9, 9, 8, 8, 8, 8, 8, 8, 8, 8]
INFO:root:Considering 100 * 1 jobs for minsize=5
INFO:root:Chunked 100 in [9, 9, 9, 9, 8, 8, 8, 8, 8, 8, 8, 8]
INFO:root:Considering 100 * 1 jobs for minsize=6
INFO:root:Chunked 100 in [9, 9, 9, 9, 8, 8, 8, 8, 8, 8, 8, 8]
INFO:root:Considering 100 * 1 jobs for minsize=7
INFO:root:Chunked 100 in [9, 9, 9, 9, 8, 8, 8, 8, 8, 8, 8, 8]
INFO:root:Considering 100 * 1 jobs for minsize=8
INFO:root:Chunked 100 in [9, 9, 9, 9, 8, 8, 8, 8, 8, 8, 8, 8]
INFO:root:XX found first (8, 7) is not 6 9
INFO:root:XX add new best (8, 7) is not 6 9 9
INFO:root:XX add new best (8, 7) is not 6 9 9
INFO:root:XX add new best (8, 7) is not 6 9 9
INFO:root:XX add new best (8, 7) is not 6 9 9
INFO:root:XX add new best (8, 7) is not 6 9 9
INFO:root:XX add new best (8, 7) is not 6 9 9
INFO:root:XX add new best (8, 7) is not 6 9 9
INFO:root:XX add new best (8, 7) is not 6 9 9
INFO:root:XX add new best (8, 7) is not 6 9 9
INFO:root:XX add new best (8, 7) is not 6 9 9
INFO:root:Considering 100 * 1 jobs for minsize=9
INFO:root:Chunked 100 in [9, 9, 9, 9, 8, 8, 8, 8, 8, 8, 8, 8]
INFO:root:XX add new best (8, 7) is not 6 9 9
INFO:root:XX add new best (8, 7) is not 6 9 9
INFO:root:XX add new best (8, 7) is not 6 9 9
INFO:root:XX add new best (8, 7) is not 6 9 9
INFO:root:XX add new best (8, 7) is not 6 9 9
INFO:root:XX add new best (8, 7) is not 6 9 9
INFO:root:XX add new best (8, 7) is not 6 9 9
INFO:root:XX add new best (8, 7) is not 6 9 9
INFO:root:XX add new best (8, 7) is not 6 9 9
INFO:root:XX add new best (8, 7) is not 6 9 9
INFO:root:Trace: [(9, [(8, 7) is not 6])]
INFO:root:Trace Quality: [(9, 1)]
INFO:root:Trace Sorted: [(9, 1)]
INFO:root:Finished
INFO:root:Full Trace [(9, [(8, 7) is not 6])]
INFO:root:Trying {'gallopingMUSes': True}
INFO:root:Starting Step 1
INFO:root:Current state [[[[6], [5], [1, 3, 9], [1, 3], [8], [7], [1, 9], [2], [4]], [[2, 7, 8], [2, 8], [1, 3, 7, 8], [6], [4], [9], [1, 8], [5], [3, 7]], [[8, 9], [4], [3, 7, 8], [1, 3], [2], [5], [1, 6, 8], [3, 7], [6, 9]], [[5], [7], [2, 9], [4], [3], [8], [2, 9], [6], [1]], [[2, 4, 8, 9], [2, 6, 8, 9], [4, 6, 8], [5], [6, 7], [1], [3, 4, 7], [3, 4, 7], [2, 9]], [[3], [1], [4, 6], [9], [6, 7], [2], [4, 7], [8], [5]], [[2, 4, 7], [2, 6], [4, 5, 7], [8], [9], [4, 6], [3, 5, 7], [1], [2, 3, 7]], [[4, 7, 8, 9], [6, 8, 9], [5, 7, 8], [2], [1], [3], [4, 5, 6, 7], [4, 7], [6, 7]], [[1], [3], [2, 4, 6], [7], [5], [4, 6], [2, 6], [9], [8]]]]
INFO:root:Doing checkSmall1
INFO:root:Getting tiny MUSes, distance 1, for 1 puzlits, 1 repeats
INFO:root:Chunked 1 in [1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
INFO:root:Doing checkSmall2
INFO:root:Getting tiny MUSes, distance 2, for 1 puzlits, 1 repeats
INFO:root:Chunked 1 in [1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
INFO:root:Considering 100 * 1 jobs for minsize=3
INFO:root:Chunked 100 in [9, 9, 9, 9, 8, 8, 8, 8, 8, 8, 8, 8]
INFO:root:Considering 100 * 1 jobs for minsize=4
INFO:root:Chunked 100 in [9, 9, 9, 9, 8, 8, 8, 8, 8, 8, 8, 8]
INFO:root:Considering 100 * 1 jobs for minsize=5
INFO:root:Chunked 100 in [9, 9, 9, 9, 8, 8, 8, 8, 8, 8, 8, 8]
INFO:root:Considering 100 * 1 jobs for minsize=6
INFO:root:Chunked 100 in [9, 9, 9, 9, 8, 8, 8, 8, 8, 8, 8, 8]
INFO:root:Considering 100 * 1 jobs for minsize=7
INFO:root:Chunked 100 in [9, 9, 9, 9, 8, 8, 8, 8, 8, 8, 8, 8]
INFO:root:Considering 100 * 1 jobs for minsize=8
INFO:root:Chunked 100 in [9, 9, 9, 9, 8, 8, 8, 8, 8, 8, 8, 8]
INFO:root:XX found first (8, 7) is not 6 9
INFO:root:XX add new best (8, 7) is not 6 9 9
INFO:root:XX add new best (8, 7) is not 6 9 9
INFO:root:XX add new best (8, 7) is not 6 9 9
INFO:root:XX add new best (8, 7) is not 6 9 9
INFO:root:XX add new best (8, 7) is not 6 9 9
INFO:root:XX add new best (8, 7) is not 6 9 9
INFO:root:XX add new best (8, 7) is not 6 9 9
INFO:root:Considering 100 * 1 jobs for minsize=9
INFO:root:Chunked 100 in [9, 9, 9, 9, 8, 8, 8, 8, 8, 8, 8, 8]
INFO:root:XX add new best (8, 7) is not 6 9 9
INFO:root:XX add new best (8, 7) is not 6 9 9
INFO:root:XX add new best (8, 7) is not 6 9 9
INFO:root:XX add new best (8, 7) is not 6 9 9
INFO:root:XX add new best (8, 7) is not 6 9 9
INFO:root:XX add new best (8, 7) is not 6 9 9
INFO:root:XX add new best (8, 7) is not 6 9 9
INFO:root:XX add new best (8, 7) is not 6 9 9
INFO:root:Trace: [(9, [(8, 7) is not 6])]
INFO:root:Trace Quality: [(9, 1)]
INFO:root:Trace Sorted: [(9, 1)]
INFO:root:Finished
INFO:root:Full Trace [(9, [(8, 7) is not 6])]
INFO:root:Trying {'minPrecheckStepsMUS': True}
INFO:root:Starting Step 1
INFO:root:Current state [[[[6], [5], [1, 3, 9], [1, 3], [8], [7], [1, 9], [2], [4]], [[2, 7, 8], [2, 8], [1, 3, 7, 8], [6], [4], [9], [1, 8], [5], [3, 7]], [[8, 9], [4], [3, 7, 8], [1, 3], [2], [5], [1, 6, 8], [3, 7], [6, 9]], [[5], [7], [2, 9], [4], [3], [8], [2, 9], [6], [1]], [[2, 4, 8, 9], [2, 6, 8, 9], [4, 6, 8], [5], [6, 7], [1], [3, 4, 7], [3, 4, 7], [2, 9]], [[3], [1], [4, 6], [9], [6, 7], [2], [4, 7], [8], [5]], [[2, 4, 7], [2, 6], [4, 5, 7], [8], [9], [4, 6], [3, 5, 7], [1], [2, 3, 7]], [[4, 7, 8, 9], [6, 8, 9], [5, 7, 8], [2], [1], [3], [4, 5, 6, 7], [4, 7], [6, 7]], [[1], [3], [2, 4, 6], [7], [5], [4, 6], [2, 6], [9], [8]]]]
INFO:root:Doing checkSmall1
INFO:root:Getting tiny MUSes, distance 1, for 1 puzlits, 1 repeats
INFO:root:Chunked 1 in [1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
INFO:root:Doing checkSmall2
INFO:root:Getting tiny MUSes, distance 2, for 1 puzlits, 1 repeats
INFO:root:Chunked 1 in [1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
INFO:root:Considering 100 * 1 jobs for minsize=3
INFO:root:Chunked 100 in [9, 9, 9, 9, 8, 8, 8, 8, 8, 8, 8, 8]
INFO:root:Considering 100 * 1 jobs for minsize=4
INFO:root:Chunked 100 in [9, 9, 9, 9, 8, 8, 8, 8, 8, 8, 8, 8]
INFO:root:Considering 100 * 1 jobs for minsize=5
INFO:root:Chunked 100 in [9, 9, 9, 9, 8, 8, 8, 8, 8, 8, 8, 8]
INFO:root:Considering 100 * 1 jobs for minsize=6
INFO:root:Chunked 100 in [9, 9, 9, 9, 8, 8, 8, 8, 8, 8, 8, 8]
INFO:root:Considering 100 * 1 jobs for minsize=7
INFO:root:Chunked 100 in [9, 9, 9, 9, 8, 8, 8, 8, 8, 8, 8, 8]
INFO:root:Considering 100 * 1 jobs for minsize=8
INFO:root:Chunked 100 in [9, 9, 9, 9, 8, 8, 8, 8, 8, 8, 8, 8]
INFO:root:XX found first (8, 7) is not 6 9
INFO:root:XX add new best (8, 7) is not 6 9 9
INFO:root:XX add new best (8, 7) is not 6 9 9
INFO:root:XX add new best (8, 7) is not 6 9 9
INFO:root:XX add new best (8, 7) is not 6 9 9
INFO:root:XX add new best (8, 7) is not 6 9 9
INFO:root:XX add new best (8, 7) is not 6 9 9
INFO:root:XX add new best (8, 7) is not 6 9 9
INFO:root:XX add new best (8, 7) is not 6 9 9
INFO:root:XX add new best (8, 7) is not 6 9 9
INFO:root:XX add new best (8, 7) is not 6 9 9
INFO:root:Considering 100 * 1 jobs for minsize=9
INFO:root:Chunked 100 in [9, 9, 9, 9, 8, 8, 8, 8, 8, 8, 8, 8]
INFO:root:XX add new best (8, 7) is not 6 9 9
INFO:root:XX add new best (8, 7) is not 6 9 9
INFO:root:XX add new best (8, 7) is not 6 9 9
INFO:root:XX add new best (8, 7) is not 6 9 9
INFO:root:XX add new best (8, 7) is not 6 9 9
INFO:root:XX add new best (8, 7) is not 6 9 9
INFO:root:XX add new best (8, 7) is not 6 9 9
INFO:root:XX add new best (8, 7) is not 6 9 9
INFO:root:XX add new best (8, 7) is not 6 9 9
INFO:root:XX add new best (8, 7) is not 6 9 9
INFO:root:Trace: [(9, [(8, 7) is not 6])]
INFO:root:Trace Quality: [(9, 1)]
INFO:root:Trace Sorted: [(9, 1)]
INFO:root:Finished
INFO:root:Full Trace [(9, [(8, 7) is not 6])]
INFO:root:Trying {'gallopingMUSes': True, 'minPrecheckMUS': True}
INFO:root:Starting Step 1
INFO:root:Current state [[[[6], [5], [1, 3, 9], [1, 3], [8], [7], [1, 9], [2], [4]], [[2, 7, 8], [2, 8], [1, 3, 7, 8], [6], [4], [9], [1, 8], [5], [3, 7]], [[8, 9], [4], [3, 7, 8], [1, 3], [2], [5], [1, 6, 8], [3, 7], [6, 9]], [[5], [7], [2, 9], [4], [3], [8], [2, 9], [6], [1]], [[2, 4, 8, 9], [2, 6, 8, 9], [4, 6, 8], [5], [6, 7], [1], [3, 4, 7], [3, 4, 7], [2, 9]], [[3], [1], [4, 6], [9], [6, 7], [2], [4, 7], [8], [5]], [[2, 4, 7], [2, 6], [4, 5, 7], [8], [9], [4, 6], [3, 5, 7], [1], [2, 3, 7]], [[4, 7, 8, 9], [6, 8, 9], [5, 7, 8], [2], [1], [3], [4, 5, 6, 7], [4, 7], [6, 7]], [[1], [3], [2, 4, 6], [7], [5], [4, 6], [2, 6], [9], [8]]]]
INFO:root:Doing checkSmall1
INFO:root:Getting tiny MUSes, distance 1, for 1 puzlits, 1 repeats
INFO:root:Chunked 1 in [1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
INFO:root:Doing checkSmall2
INFO:root:Getting tiny MUSes, distance 2, for 1 puzlits, 1 repeats
INFO:root:Chunked 1 in [1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
INFO:root:Considering 100 * 1 jobs for minsize=3
INFO:root:Chunked 100 in [9, 9, 9, 9, 8, 8, 8, 8, 8, 8, 8, 8]
INFO:root:Considering 100 * 1 jobs for minsize=4
INFO:root:Chunked 100 in [9, 9, 9, 9, 8, 8, 8, 8, 8, 8, 8, 8]
INFO:root:Considering 100 * 1 jobs for minsize=5
INFO:root:Chunked 100 in [9, 9, 9, 9, 8, 8, 8, 8, 8, 8, 8, 8]
INFO:root:Considering 100 * 1 jobs for minsize=6
INFO:root:Chunked 100 in [9, 9, 9, 9, 8, 8, 8, 8, 8, 8, 8, 8]
INFO:root:Considering 100 * 1 jobs for minsize=7
INFO:root:Chunked 100 in [9, 9, 9, 9, 8, 8, 8, 8, 8, 8, 8, 8]
INFO:root:Considering 100 * 1 jobs for minsize=8
INFO:root:Chunked 100 in [9, 9, 9, 9, 8, 8, 8, 8, 8, 8, 8, 8]
INFO:root:XX found first (8, 7) is not 6 9
INFO:root:XX add new best (8, 7) is not 6 9 9
INFO:root:XX add new best (8, 7) is not 6 9 9
INFO:root:XX add new best (8, 7) is not 6 9 9
INFO:root:XX add new best (8, 7) is not 6 9 9
INFO:root:XX add new best (8, 7) is not 6 9 9
INFO:root:XX add new best (8, 7) is not 6 9 9
INFO:root:XX add new best (8, 7) is not 6 9 9
INFO:root:XX add new best (8, 7) is not 6 9 9
INFO:root:XX add new best (8, 7) is not 6 9 9
INFO:root:XX add new best (8, 7) is not 6 9 9
INFO:root:Considering 100 * 1 jobs for minsize=9
INFO:root:Chunked 100 in [9, 9, 9, 9, 8, 8, 8, 8, 8, 8, 8, 8]
INFO:root:XX add new best (8, 7) is not 6 9 9
INFO:root:XX add new best (8, 7) is not 6 9 9
INFO:root:XX add new best (8, 7) is not 6 9 9
INFO:root:XX add new best (8, 7) is not 6 9 9
INFO:root:XX add new best (8, 7) is not 6 9 9
INFO:root:XX add new best (8, 7) is not 6 9 9
INFO:root:XX add new best (8, 7) is not 6 9 9
INFO:root:XX add new best (8, 7) is not 6 9 9
INFO:root:XX add new best (8, 7) is not 6 9 9
INFO:root:Trace: [(9, [(8, 7) is not 6])]
INFO:root:Trace Quality: [(9, 1)]
INFO:root:Trace Sorted: [(9, 1)]
INFO:root:Finished
INFO:root:Full Trace [(9, [(8, 7) is not 6])]
INFO:root:Trying {}
INFO:root:Starting Step 1
INFO:root:Current state [[[[9], [3, 7], [1], [5], [2, 8], [2, 8], [3, 7], [4], [6]], [[4], [2], [5], [3, 6, 7], [9], [3, 6, 7], [3, 7], [8], [1]], [[8], [6], [3, 7], [3, 4, 7], [1], [3, 4, 7], [5, 9], [2], [5, 9]], [[5], [3, 4, 7, 8], [2], [1, 3, 4, 6, 7, 8, 9], [3, 7, 8], [3, 4, 6, 7, 8, 9], [1, 9], [3, 7], [8, 9]], [[3, 7], [1], [9], [2, 3, 7, 8], [2, 3, 5, 7, 8], [2, 3, 5, 7, 8], [4], [6], [5, 8]], [[6], [3, 4, 7, 8], [3, 4, 7, 8], [1, 3, 4, 7, 8, 9], [3, 5, 7, 8], [3, 4, 5, 7, 8, 9], [1, 5, 9], [3, 7], [2]], [[1], [9], [6], [7, 8], [4], [7, 8], [2], [5], [3]], [[2], [3, 4, 5], [3, 4], [3, 9], [6], [3, 5, 9], [8], [1], [7]], [[3, 7], [3, 5, 7, 8], [3, 7, 8], [2, 3], [2, 3, 5], [1], [6], [9], [4]]]]
INFO:root:Doing checkSmall1
INFO:root:Getting tiny MUSes, distance 1, for 1 puzlits, 1 repeats
INFO:root:Chunked 1 in [1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
INFO:root:Doing checkSmall2
INFO:root:Getting tiny MUSes, distance 2, for 1 puzlits, 1 repeats
INFO:root:Chunked 1 in [1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
INFO:root:Considering 100 * 1 jobs for minsize=3
INFO:root:Chunked 100 in [9, 9, 9, 9, 8, 8, 8, 8, 8, 8, 8, 8]
INFO:root:Considering 100 * 1 jobs for minsize=4
INFO:root:Chunked 100 in [9, 9, 9, 9, 8, 8, 8, 8, 8, 8, 8, 8]
INFO:root:Considering 100 * 1 jobs for minsize=5
INFO:root:Chunked 100 in [9, 9, 9, 9, 8, 8, 8, 8, 8, 8, 8, 8]
INFO:root:Considering 100 * 1 jobs for minsize=6
INFO:root:Chunked 100 in [9, 9, 9, 9, 8, 8, 8, 8, 8, 8, 8, 8]
INFO:root:Considering 100 * 1 jobs for minsize=7
INFO:root:Chunked 100 in [9, 9, 9, 9, 8, 8, 8, 8, 8, 8, 8, 8]
INFO:root:Considering 100 * 1 jobs for minsize=8
INFO:root:Chunked 100 in [9, 9, 9, 9, 8, 8, 8, 8, 8, 8, 8, 8]
INFO:root:Considering 100 * 1 jobs for minsize=9
INFO:root:Chunked 100 in [9, 9, 9, 9, 8, 8, 8, 8, 8, 8, 8, 8]
INFO:root:Considering 100 * 1 jobs for minsize=10
INFO:root:Chunked 100 in [9, 9, 9, 9, 8, 8, 8, 8, 8, 8, 8, 8]
INFO:root:Considering 100 * 1 jobs for minsize=11
INFO:root:Chunked 100 in [9, 9, 9, 9, 8, 8, 8, 8, 8, 8, 8, 8]
INFO:root:Considering 100 * 1 jobs for minsize=12
INFO:root:Chunked 100 in [9, 9, 9, 9, 8, 8, 8, 8, 8, 8, 8, 8]
INFO:root:XX found first (4, 4) is not 3 13
INFO:root:XX add new best (4, 4) is not 3 13 13
INFO:root:XX add new best (4, 4) is not 3 13 13
INFO:root:XX add new best (4, 4) is not 3 13 13
INFO:root:XX add new best (4, 4) is not 3 13 13
INFO:root:XX add new best (4, 4) is not 3 13 13
INFO:root:XX add new best (4, 4) is not 3 13 13
INFO:root:XX add new best (4, 4) is not 3 13 13
INFO:root:XX add new best (4, 4) is not 3 13 13
INFO:root:XX add new best (4, 4) is not 3 13 13
INFO:root:XX add new best (4, 4) is not 3 13 13
INFO:root:XX add new best (4, 4) is not 3 13 13
INFO:root:XX add new best (4, 4) is not 3 13 13
INFO:root:XX add new best (4, 4) is not 3 13 13
INFO:root:XX add new best (4, 4) is not 3 13 13
INFO:root:XX add new best (4, 4) is not 3 13 13
INFO:root:XX add new best (4, 4) is not 3 13 13
INFO:root:XX add new best (4, 4) is not 3 13 13
INFO:root:XX add new best (4, 4) is not 3 13 13
INFO:root:XX add new best (4, 4) is not 3 13 13
INFO:root:XX add new best (4, 4) is not 3 13 13
INFO:root:XX add new best (4, 4) is not 3 13 13
INFO:root:XX add new best (4, 4) is not 3 13 13
INFO:root:XX add new best (4, 4) is not 3 13 13
INFO:root:XX add new best (4, 4) is not 3 13 13
INFO:root:XX add new best (4, 4) is not 3 13 13
INFO:root:XX add new best (4, 4) is not 3 13 13
INFO:root:XX add new best (4, 4) is not 3 13 13
INFO:root:XX add new best (4, 4) is not 3 13 13
INFO:root:XX add new best (4, 4) is not 3 13 13
INFO:root:XX add new best (4, 4) is not 3 13 13
INFO:root:XX add new best (4, 4) is not 3 13 13
INFO:root:XX add new best (4, 4) is not 3 13 13
INFO:root:XX add new best (4, 4) is not 3 13 13
INFO:root:XX add new best (4, 4) is not 3 13 13
INFO:root:XX add new best (4, 4) is not 3 13 13
INFO:root:XX add new best (4, 4) is not 3 13 13
INFO:root:XX add new best (4, 4) is not 3 13 13
INFO:root:XX add new best (4, 4) is not 3 13 13
INFO:root:XX add new best (4, 4) is not 3 13 13
INFO:root:XX add new best (4, 4) is not 3 13 13
INFO:root:Considering 100 * 1 jobs for minsize=13
INFO:root:Chunked 100 in [9, 9, 9, 9, 8, 8, 8, 8, 8, 8, 8, 8]
INFO:root:XX add new best (4, 4) is not 3 13 13
INFO:root:XX add new best (4, 4) is not 3 13 13
INFO:root:XX add new best (4, 4) is not 3 13 13
INFO:root:XX add new best (4, 4) is not 3 13 13
INFO:root:XX add new best (4, 4) is not 3 13 13
INFO:root:XX add new best (4, 4) is not 3 13 13
INFO:root:XX add new best (4, 4) is not 3 13 13
INFO:root:XX add new best (4, 4) is not 3 13 13
INFO:root:XX add new best (4, 4) is not 3 13 13
INFO:root:XX add new best (4, 4) is not 3 13 13
INFO:root:XX add new best (4, 4) is not 3 13 13
INFO:root:XX add new best (4, 4) is not 3 13 13
INFO:root:XX add new best (4, 4) is not 3 13 13
INFO:root:XX add new best (4, 4) is not 3 13 13
INFO:root:XX add new best (4, 4) is not 3 13 13
INFO:root:XX add new best (4, 4) is not 3 13 13
INFO:root:XX add new best (4, 4) is not 3 13 13
INFO:root:XX add new best (4, 4) is not 3 13 13
INFO:root:XX add new best (4, 4) is not 3 13 13
INFO:root:XX add new best (4, 4) is not 3 13 13
INFO:root:XX add new best (4, 4) is not 3 13 13
INFO:root:XX add new best (4, 4) is not 3 13 13
INFO:root:XX add new best (4, 4) is not 3 13 13
INFO:root:XX add new best (4, 4) is not 3 13 13
INFO:root:XX add new best (4, 4) is not 3 13 13
INFO:root:XX add new best (4, 4) is not 3 13 13
INFO:root:XX add new best (4, 4) is not 3 13 13
INFO:root:XX add new best (4, 4) is not 3 13 13
INFO:root:XX add new best (4, 4) is not 3 13 13
INFO:root:XX add new best (4, 4) is not 3 13 13
INFO:root:XX add new best (4, 4) is not 3 13 13
INFO:root:XX add new best (4, 4) is not 3 13 13
INFO:root:XX add new best (4, 4) is not 3 13 13
INFO:root:XX add new best (4, 4) is not 3 13 13
INFO:root:XX add new best (4, 4) is not 3 13 13
INFO:root:XX add new best (4, 4) is not 3 13 13
INFO:root:XX add new best (4, 4) is not 3 13 13
INFO:root:XX add new best (4, 4) is not 3 13 13
INFO:root:XX add new best (4, 4) is not 3 13 13
INFO:root:XX add new best (4, 4) is not 3 13 13
INFO:root:XX add new best (4, 4) is not 3 13 13
INFO:root:Trace: [(13, [(4, 4) is not 3])]
INFO:root:Trace Quality: [(13, 1)]
INFO:root:Trace Sorted: [(13, 1)]
INFO:root:Finished
INFO:root:Full Trace [(13, [(4, 4) is not 3])]
INFO:root:Trying {'prechopMUSes': True}
INFO:root:Starting Step 1
INFO:root:Current state [[[[9], [3, 7], [1], [5], [2, 8], [2, 8], [3, 7], [4], [6]], [[4], [2], [5], [3, 6, 7], [9], [3, 6, 7], [3, 7], [8], [1]], [[8], [6], [3, 7], [3, 4, 7], [1], [3, 4, 7], [5, 9], [2], [5, 9]], [[5], [3, 4, 7, 8], [2], [1, 3, 4, 6, 7, 8, 9], [3, 7, 8], [3, 4, 6, 7, 8, 9], [1, 9], [3, 7], [8, 9]], [[3, 7], [1], [9], [2, 3, 7, 8], [2, 3, 5, 7, 8], [2, 3, 5, 7, 8], [4], [6], [5, 8]], [[6], [3, 4, 7, 8], [3, 4, 7, 8], [1, 3, 4, 7, 8, 9], [3, 5, 7, 8], [3, 4, 5, 7, 8, 9], [1, 5, 9], [3, 7], [2]], [[1], [9], [6], [7, 8], [4], [7, 8], [2], [5], [3]], [[2], [3, 4, 5], [3, 4], [3, 9], [6], [3, 5, 9], [8], [1], [7]], [[3, 7], [3, 5, 7, 8], [3, 7, 8], [2, 3], [2, 3, 5], [1], [6], [9], [4]]]]
INFO:root:Doing checkSmall1
INFO:root:Getting tiny MUSes, distance 1, for 1 puzlits, 1 repeats
INFO:root:Chunked 1 in [1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
INFO:root:Doing checkSmall2
INFO:root:Getting tiny MUSes, distance 2, for 1 puzlits, 1 repeats
INFO:root:Chunked 1 in [1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
INFO:root:Considering 100 * 1 jobs for minsize=3
INFO:root:Chunked 100 in [9, 9, 9, 9, 8, 8, 8, 8, 8, 8, 8, 8]
INFO:root:Considering 100 * 1 jobs for minsize=4
INFO:root:Chunked 100 in [9, 9, 9, 9, 8, 8, 8, 8, 8, 8, 8, 8]
INFO:root:Considering 100 * 1 jobs for minsize=5
INFO:root:Chunked 100 in [9, 9, 9, 9, 8, 8, 8, 8, 8, 8, 8, 8]
INFO:root:Considering 100 * 1 jobs for minsize=6
INFO:root:Chunked 100 in [9, 9, 9, 9, 8, 8, 8, 8, 8, 8, 8, 8]
INFO:root:Considering 100 * 1 jobs for minsize=7
INFO:root:Chunked 100 in [9, 9, 9, 9, 8, 8, 8, 8, 8, 8, 8, 8]
INFO:root:Considering 100 * 1 jobs for minsize=8
INFO:root:Chunked 100 in [9, 9, 9, 9, 8, 8, 8, 8, 8, 8, 8, 8]
INFO:root:Considering 100 * 1 jobs for minsize=9
INFO:root:Chunked 100 in [9, 9, 9, 9, 8, 8, 8, 8, 8, 8, 8, 8]
INFO:root:Considering 100 * 1 jobs for minsize=10
INFO:root:Chunked 100 in [9, 9, 9, 9, 8, 8, 8, 8, 8, 8, 8, 8]
INFO:root:Considering 100 * 1 jobs for minsize=11
INFO:root:Chunked 100 in [9, 9, 9, 9, 8, 8, 8, 8, 8, 8, 8, 8]
INFO:root:Considering 100 * 1 jobs for minsize=12
INFO:root:Chunked 100 in [9, 9, 9, 9, 8, 8, 8, 8, 8, 8, 8, 8]
INFO:root:XX found first (4, 4) is not 3 13
INFO:root:XX add new best (4, 4) is not 3 13 13
INFO:root:Considering 100 * 1 jobs for minsize=13
INFO:root:Chunked 100 in [9, 9, 9, 9, 8, 8, 8, 8, 8, 8, 8, 8]
INFO:root:XX add new best (4, 4) is not 3 13 13
INFO:root:XX add new best (4, 4) is not 3 13 13
INFO:root:XX add new best (4, 4) is not 3 13 13
INFO:root:Trace: [(13, [(4, 4) is not 3])]
INFO:root:Trace Quality: [(13, 1)]
INFO:root:Trace Sorted: [(13, 1)]
INFO:root:Finished
INFO:root:Full Trace [(13, [(4, 4) is not 3])]
INFO:root:Trying {'quarterChopMUS': True}
INFO:root:Starting Step 1
INFO:root:Current state [[[[9], [3, 7], [1], [5], [2, 8], [2, 8], [3, 7], [4], [6]], [[4], [2], [5], [3, 6, 7], [9], [3, 6, 7], [3, 7], [8], [1]], [[8], [6], [3, 7], [3, 4, 7], [1], [3, 4, 7], [5, 9], [2], [5, 9]], [[5], [3, 4, 7, 8], [2], [1, 3, 4, 6, 7, 8, 9], [3, 7, 8], [3, 4, 6, 7, 8, 9], [1, 9], [3, 7], [8, 9]], [[3, 7], [1], [9], [2, 3, 7, 8], [2, 3, 5, 7, 8], [2, 3, 5, 7, 8], [4], [6], [5, 8]], [[6], [3, 4, 7, 8], [3, 4, 7, 8], [1, 3, 4, 7, 8, 9], [3, 5, 7, 8], [3, 4, 5, 7, 8, 9], [1, 5, 9], [3, 7], [2]], [[1], [9], [6], [7, 8], [4], [7, 8], [2], [5], [3]], [[2], [3, 4, 5], [3, 4], [3, 9], [6], [3, 5, 9], [8], [1], [7]], [[3, 7], [3, 5, 7, 8], [3, 7, 8], [2, 3], [2, 3, 5], [1], [6], [9], [4]]]]
INFO:root:Doing checkSmall1
INFO:root:Getting tiny MUSes, distance 1, for 1 puzlits, 1 repeats
INFO:root:Chunked 1 in [1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
INFO:root:Doing checkSmall2
INFO:root:Getting tiny MUSes, distance 2, for 1 puzlits, 1 repeats
INFO:root:Chunked 1 in [1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
INFO:root:Considering 100 * 1 jobs for minsize=3
INFO:root:Chunked 100 in [9, 9, 9, 9, 8, 8, 8, 8, 8, 8, 8, 8]
INFO:root:Considering 100 * 1 jobs for minsize=4
INFO:root:Chunked 100 in [9, 9, 9, 9, 8, 8, 8, 8, 8, 8, 8, 8]
INFO:root:Considering 100 * 1 jobs for minsize=5
INFO:root:Chunked 100 in [9, 9, 9, 9, 8, 8, 8, 8, 8, 8, 8, 8]
INFO:root:Considering 100 * 1 jobs for minsize=6
INFO:root:Chunked 100 in [9, 9, 9, 9, 8, 8, 8, 8, 8, 8, 8, 8]
INFO:root:Considering 100 * 1 jobs for minsize=7
INFO:root:Chunked 100 in [9, 9, 9, 9, 8, 8, 8, 8, 8, 8, 8, 8]
INFO:root:Considering 100 * 1 jobs for minsize=8
INFO:root:Chunked 100 in [9, 9, 9, 9, 8, 8, 8, 8, 8, 8, 8, 8]
INFO:root:Considering 100 * 1 jobs for minsize=9
INFO:root:Chunked 100 in [9, 9, 9, 9, 8, 8, 8, 8, 8, 8, 8, 8]
INFO:root:Considering 100 * 1 jobs for minsize=10
INFO:root:Chunked 100 in [9, 9, 9, 9, 8, 8, 8, 8, 8, 8, 8, 8]
INFO:root:Considering 100 * 1 jobs for minsize=11
INFO:root:Chunked 100 in [9, 9, 9, 9, 8, 8, 8, 8, 8, 8, 8, 8]
INFO:root:Considering 100 * 1 jobs for minsize=12
INFO:root:Chunked 100 in [9, 9, 9, 9, 8, 8, 8, 8, 8, 8, 8, 8]
INFO:root:XX found first (4, 4) is not 3 13
INFO:root:XX add new best (4, 4) is not 3 13 13
INFO:root:XX add new best (4, 4) is not 3 13 13
INFO:root:XX add new best (4, 4) is not 3 13 13
INFO:root:XX add new best (4, 4) is not 3 13 13
INFO:root:XX add new best (4, 4) is not 3 13 13
INFO:root:XX add new best (4, 4) is not 3 13 13
INFO:root:XX add new best (4, 4) is not 3 13 13
INFO:root:XX add new best (4, 4) is not 3 13 13
INFO:root:XX add new best (4, 4) is not 3 13 13
INFO:root:XX add new best (4, 4) is not 3 13 13
INFO:root:XX add new best (4, 4) is not 3 13 13
INFO:root:XX add new best (4, 4) is not 3 13 13
INFO:root:XX add new best (4, 4) is not 3 13 13
INFO:root:XX add new best (4, 4) is not 3 13 13
INFO:root:XX add new best (4, 4) is not 3 13 13
INFO:root:XX add new best (4, 4) is not 3 13 13
INFO:root:XX add new best (4, 4) is not 3 13 13
INFO:root:XX add new best (4, 4) is not 3 13 13
INFO:root:XX add new best (4, 4) is not 3 13 13
INFO:root:XX add new best (4, 4) is not 3 13 13
INFO:root:XX add new best (4, 4) is not 3 13 13
INFO:root:XX add new best (4, 4) is not 3 13 13
INFO:root:XX add new best (4, 4) is not 3 13 13
INFO:root:XX add new best (4, 4) is not 3 13 13
INFO:root:XX add new best (4, 4) is not 3 13 13
INFO:root:XX add new best (4, 4) is not 3 13 13
INFO:root:XX add new best (4, 4) is not 3 13 13
INFO:root:XX add new best (4, 4) is not 3 13 13
INFO:root:XX add new best (4, 4) is not 3 13 13
INFO:root:XX add new best (4, 4) is not 3 13 13
INFO:root:XX add new best (4, 4) is not 3 13 13
INFO:root:XX add new best (4, 4) is not 3 13 13
INFO:root:XX add new best (4, 4) is not 3 13 13
INFO:root:XX add new best (4, 4) is not 3 13 13
INFO:root:XX add new best (4, 4) is not 3 13 13
INFO:root:XX add new best (4, 4) is not 3 13 13
INFO:root:XX add new best (4, 4) is not 3 13 13
INFO:root:XX add new best (4, 4) is not 3 13 13
INFO:root:XX add new best (4, 4) is not 3 13 13
INFO:root:XX add new best (4, 4) is not 3 13 13
INFO:root:XX add new best (4, 4) is not 3 13 13
INFO:root:XX add new best (4, 4) is not 3 13 13
INFO:root:XX add new best (4, 4) is not 3 13 13
INFO:root:XX add new best (4, 4) is not 3 13 13
INFO:root:XX add new best (4, 4) is not 3 13 13
INFO:root:XX add new best (4, 4) is not 3 13 13
INFO:root:XX add new best (4, 4) is not 3 13 13
INFO:root:XX add new best (4, 4) is not 3 13 13
INFO:root:XX add new best (4, 4) is not 3 13 13
INFO:root:Considering 100 * 1 jobs for minsize=13
INFO:root:Chunked 100 in [9, 9, 9, 9, 8, 8, 8, 8, 8, 8, 8, 8]
INFO:root:XX add new best (4, 4) is not 3 13 13
INFO:root:XX add new best (4, 4) is not 3 13 13
INFO:root:XX add new best (4, 4) is not 3 13 13
INFO:root:XX add new best (4, 4) is not 3 13 13
INFO:root:XX add new best (4, 4) is not 3 13 13
INFO:root:XX add new best (4, 4) is not 3 13 13
INFO:root:XX add new best (4, 4) is not 3 13 13
INFO:root:XX add new best (4, 4) is not 3 13 13
INFO:root:XX add new best (4, 4) is not 3 13 13
INFO:root:XX add new best (4, 4) is not 3 13 13
INFO:root:XX add new best (4, 4) is not 3 13 13
INFO:root:XX add new best (4, 4) is not 3 13 13
INFO:root:XX add new best (4, 4) is not 3 13 13
INFO:root:XX add new best (4, 4) is not 3 13 13
INFO:root:XX add new best (4, 4) is not 3 13 13
INFO:root:XX add new best (4, 4) is not 3 13 13
INFO:root:XX add new best (4, 4) is not 3 13 13
INFO:root:XX add new best (4, 4) is not 3 13 13
INFO:root:XX add new best (4, 4) is not 3 13 13
INFO:root:XX add new best (4, 4) is not 3 13 13
INFO:root:XX add new best (4, 4) is not 3 13 13
INFO:root:XX add new best (4, 4) is not 3 13 13
INFO:root:XX add new best (4, 4) is not 3 13 13
INFO:root:XX add new best (4, 4) is not 3 13 13
INFO:root:XX add new best (4, 4) is not 3 13 13
INFO:root:XX add new best (4, 4) is not 3 13 13
INFO:root:XX add new best (4, 4) is not 3 13 13
INFO:root:XX add new best (4, 4) is not 3 13 13
INFO:root:XX add new best (4, 4) is not 3 13 13
INFO:root:XX add new best (4, 4) is not 3 13 13
INFO:root:XX add new best (4, 4) is not 3 13 13
INFO:root:XX add new best (4, 4) is not 3 13 13
INFO:root:XX add new best (4, 4) is not 3 13 13
INFO:root:XX add new best (4, 4) is not 3 13 13
INFO:root:XX add new best (4, 4) is not 3 13 13
INFO:root:XX add new best (4, 4) is not 3 13 13
INFO:root:XX add new best (4, 4) is not 3 13 13
INFO:root:XX add new best (4, 4) is not 3 13 13
INFO:root:XX add new best (4, 4) is not 3 13 13
INFO:root:XX add new best (4, 4) is not 3 13 13
INFO:root:XX add new best (4, 4) is not 3 13 13
INFO:root:XX add new best (4, 4) is not 3 13 13
INFO:root:XX add new best (4, 4) is not 3 13 13
INFO:root:XX add new best (4, 4) is not 3 13 13
INFO:root:XX add new best (4, 4) is not 3 13 13
INFO:root:XX add new best (4, 4) is not 3 13 13
INFO:root:XX add new best (4, 4) is not 3 13 13
INFO:root:XX add new best (4, 4) is not 3 13 13
INFO:root:XX add new best (4, 4) is not 3 13 13
INFO:root:XX add new best (4, 4) is not 3 13 13
INFO:root:XX add new best (4, 4) is not 3 13 13
INFO:root:XX add new best (4, 4) is not 3 13 13
INFO:root:XX add new best (4, 4) is not 3 13 13
INFO:root:XX add new best (4, 4) is not 3 13 13
INFO:root:XX add new best (4, 4) is not 3 13 13
INFO:root:Trace: [(13, [(4, 4) is not 3])]
INFO:root:Trace Quality: [(13, 1)]
INFO:root:Trace Sorted: [(13, 1)]
INFO:root:Finished
INFO:root:Full Trace [(13, [(4, 4) is not 3])]
INFO:root:Trying {'minPrecheckMUS': True}
INFO:root:Starting Step 1
INFO:root:Current state [[[[9], [3, 7], [1], [5], [2, 8], [2, 8], [3, 7], [4], [6]], [[4], [2], [5], [3, 6, 7], [9], [3, 6, 7], [3, 7], [8], [1]], [[8], [6], [3, 7], [3, 4, 7], [1], [3, 4, 7], [5, 9], [2], [5, 9]], [[5], [3, 4, 7, 8], [2], [1, 3, 4, 6, 7, 8, 9], [3, 7, 8], [3, 4, 6, 7, 8, 9], [1, 9], [3, 7], [8, 9]], [[3, 7], [1], [9], [2, 3, 7, 8], [2, 3, 5, 7, 8], [2, 3, 5, 7, 8], [4], [6], [5, 8]], [[6], [3, 4, 7, 8], [3, 4, 7, 8], [1, 3, 4, 7, 8, 9], [3, 5, 7, 8], [3, 4, 5, 7, 8, 9], [1, 5, 9], [3, 7], [2]], [[1], [9], [6], [7, 8], [4], [7, 8], [2], [5], [3]], [[2], [3, 4, 5], [3, 4], [3, 9], [6], [3, 5, 9], [8], [1], [7]], [[3, 7], [3, 5, 7, 8], [3, 7, 8], [2, 3], [2, 3, 5], [1], [6], [9], [4]]]]
INFO:root:Doing checkSmall1
INFO:root:Getting tiny MUSes, distance 1, for 1 puzlits, 1 repeats
INFO:root:Chunked 1 in [1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
INFO:root:Doing checkSmall2
INFO:root:Getting tiny MUSes, distance 2, for 1 puzlits, 1 repeats
INFO:root:Chunked 1 in [1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
INFO:root:Considering 100 * 1 jobs for minsize=3
INFO:root:Chunked 100 in [9, 9, 9, 9, 8, 8, 8, 8, 8, 8, 8, 8]
INFO:root:Considering 100 * 1 jobs for minsize=4
INFO:root:Chunked 100 in [9, 9, 9, 9, 8, 8, 8, 8, 8, 8, 8, 8]
INFO:root:Considering 100 * 1 jobs for minsize=5
INFO:root:Chunked 100 in [9, 9, 9, 9, 8, 8, 8, 8, 8, 8, 8, 8]
INFO:root:Considering 100 * 1 jobs for minsize=6
INFO:root:Chunked 100 in [9, 9, 9, 9, 8, 8, 8, 8, 8, 8, 8, 8]
INFO:root:Considering 100 * 1 jobs for minsize=7
INFO:root:Chunked 100 in [9, 9, 9, 9, 8, 8, 8, 8, 8, 8, 8, 8]
INFO:root:Considering 100 * 1 jobs for minsize=8
INFO:root:Chunked 100 in [9, 9, 9, 9, 8, 8, 8, 8, 8, 8, 8, 8]
INFO:root:Considering 100 * 1 jobs for minsize=9
INFO:root:Chunked 100 in [9, 9, 9, 9, 8, 8, 8, 8, 8, 8, 8, 8]
INFO:root:Considering 100 * 1 jobs for minsize=10
INFO:root:Chunked 100 in [9, 9, 9, 9, 8, 8, 8, 8, 8, 8, 8, 8]
INFO:root:Considering 100 * 1 jobs for minsize=11
INFO:root:Chunked 100 in [9, 9, 9, 9, 8, 8, 8, 8, 8, 8, 8, 8]
INFO:root:Considering 100 * 1 jobs for minsize=12
INFO:root:Chunked 100 in [9, 9, 9, 9, 8, 8, 8, 8, 8, 8, 8, 8]
INFO:root:XX found first (4, 4) is not 3 13
INFO:root:XX add new best (4, 4) is not 3 13 13
INFO:root:XX add new best (4, 4) is not 3 13 13
INFO:root:XX add new best (4, 4) is not 3 13 13
INFO:root:Considering 100 * 1 jobs for minsize=13
INFO:root:Chunked 100 in [9, 9, 9, 9, 8, 8, 8, 8, 8, 8, 8, 8]
INFO:root:XX add new best (4, 4) is not 3 13 13
INFO:root:Trace: [(13, [(4, 4) is not 3])]
INFO:root:Trace Quality: [(13, 1)]
INFO:root:Trace Sorted: [(13, 1)]
INFO:root:Finished
INFO:root:Full Trace [(13, [(4, 4) is not 3])]
INFO:root:Trying {'gallopingMUSes': True}
INFO:root:Starting Step 1
INFO:root:Current state [[[[9], [3, 7], [1], [5], [2, 8], [2, 8], [3, 7], [4], [6]], [[4], [2], [5], [3, 6, 7], [9], [3, 6, 7], [3, 7], [8], [1]], [[8], [6], [3, 7], [3, 4, 7], [1], [3, 4, 7], [5, 9], [2], [5, 9]], [[5], [3, 4, 7, 8], [2], [1, 3, 4, 6, 7, 8, 9], [3, 7, 8], [3, 4, 6, 7, 8, 9], [1, 9], [3, 7], [8, 9]], [[3, 7], [1], [9], [2, 3, 7, 8], [2, 3, 5, 7, 8], [2, 3, 5, 7, 8], [4], [6], [5, 8]], [[6], [3, 4, 7, 8], [3, 4, 7, 8], [1, 3, 4, 7, 8, 9], [3, 5, 7, 8], [3, 4, 5, 7, 8, 9], [1, 5, 9], [3, 7], [2]], [[1], [9], [6], [7, 8], [4], [7, 8], [2], [5], [3]], [[2], [3, 4, 5], [3, 4], [3, 9], [6], [3, 5, 9], [8], [1], [7]], [[3, 7], [3, 5, 7, 8], [3, 7, 8], [2, 3], [2, 3, 5], [1], [6], [9], [4]]]]
INFO:root:Doing checkSmall1
INFO:root:Getting tiny MUSes, distance 1, for 1 puzlits, 1 repeats
INFO:root:Chunked 1 in [1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
INFO:root:Doing checkSmall2
INFO:root:Getting tiny MUSes, distance 2, for 1 puzlits, 1 repeats
INFO:root:Chunked 1 in [1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
INFO:root:Considering 100 * 1 jobs for minsize=3
INFO:root:Chunked 100 in [9, 9, 9, 9, 8, 8, 8, 8, 8, 8, 8, 8]
INFO:root:Considering 100 * 1 jobs for minsize=4
INFO:root:Chunked 100 in [9, 9, 9, 9, 8, 8, 8, 8, 8, 8, 8, 8]
INFO:root:Considering 100 * 1 jobs for minsize=5
INFO:root:Chunked 100 in [9, 9, 9, 9, 8, 8, 8, 8, 8, 8, 8, 8]
INFO:root:Considering 100 * 1 jobs for minsize=6
INFO:root:Chunked 100 in [9, 9, 9, 9, 8, 8, 8, 8, 8, 8, 8, 8]
INFO:root:Considering 100 * 1 jobs for minsize=7
INFO:root:Chunked 100 in [9, 9, 9, 9, 8, 8, 8, 8, 8, 8, 8, 8]
INFO:root:Considering 100 * 1 jobs for minsize=8
INFO:root:Chunked 100 in [9, 9, 9, 9, 8, 8, 8, 8, 8, 8, 8, 8]
INFO:root:Considering 100 * 1 jobs for minsize=9
INFO:root:Chunked 100 in [9, 9, 9, 9, 8, 8, 8, 8, 8, 8, 8, 8]
INFO:root:Considering 100 * 1 jobs for minsize=10
INFO:root:Chunked 100 in [9, 9, 9, 9, 8, 8, 8, 8, 8, 8, 8, 8]
INFO:root:Considering 100 * 1 jobs for minsize=11
INFO:root:Chunked 100 in [9, 9, 9, 9, 8, 8, 8, 8, 8, 8, 8, 8]
INFO:root:Considering 100 * 1 jobs for minsize=12
INFO:root:Chunked 100 in [9, 9, 9, 9, 8, 8, 8, 8, 8, 8, 8, 8]
INFO:root:XX found first (4, 4) is not 3 13
INFO:root:XX add new best (4, 4) is not 3 13 13
INFO:root:XX add new best (4, 4) is not 3 13 13
INFO:root:Considering 100 * 1 jobs for minsize=13
INFO:root:Chunked 100 in [9, 9, 9, 9, 8, 8, 8, 8, 8, 8, 8, 8]
INFO:root:XX add new best (4, 4) is not 3 13 13
INFO:root:XX add new best (4, 4) is not 3 13 13
INFO:root:Trace: [(13, [(4, 4) is not 3])]
INFO:root:Trace Quality: [(13, 1)]
INFO:root:Trace Sorted: [(13, 1)]
INFO:root:Finished
INFO:root:Full Trace [(13, [(4, 4) is not 3])]
INFO:root:Trying {'minPrecheckStepsMUS': True}
INFO:root:Starting Step 1
INFO:root:Current state [[[[9], [3, 7], [1], [5], [2, 8], [2, 8], [3, 7], [4], [6]], [[4], [2], [5], [3, 6, 7], [9], [3, 6, 7], [3, 7], [8], [1]], [[8], [6], [3, 7], [3, 4, 7], [1], [3, 4, 7], [5, 9], [2], [5, 9]], [[5], [3, 4, 7, 8], [2], [1, 3, 4, 6, 7, 8, 9], [3, 7, 8], [3, 4, 6, 7, 8, 9], [1, 9], [3, 7], [8, 9]], [[3, 7], [1], [9], [2, 3, 7, 8], [2, 3, 5, 7, 8], [2, 3, 5, 7, 8], [4], [6], [5, 8]], [[6], [3, 4, 7, 8], [3, 4, 7, 8], [1, 3, 4, 7, 8, 9], [3, 5, 7, 8], [3, 4, 5, 7, 8, 9], [1, 5, 9], [3, 7], [2]], [[1], [9], [6], [7, 8], [4], [7, 8], [2], [5], [3]], [[2], [3, 4, 5], [3, 4], [3, 9], [6], [3, 5, 9], [8], [1], [7]], [[3, 7], [3, 5, 7, 8], [3, 7, 8], [2, 3], [2, 3, 5], [1], [6], [9], [4]]]]
INFO:root:Doing checkSmall1
INFO:root:Getting tiny MUSes, distance 1, for 1 puzlits, 1 repeats
INFO:root:Chunked 1 in [1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
INFO:root:Doing checkSmall2
INFO:root:Getting tiny MUSes, distance 2, for 1 puzlits, 1 repeats
INFO:root:Chunked 1 in [1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
INFO:root:Considering 100 * 1 jobs for minsize=3
INFO:root:Chunked 100 in [9, 9, 9, 9, 8, 8, 8, 8, 8, 8, 8, 8]
INFO:root:Considering 100 * 1 jobs for minsize=4
INFO:root:Chunked 100 in [9, 9, 9, 9, 8, 8, 8, 8, 8, 8, 8, 8]
INFO:root:Considering 100 * 1 jobs for minsize=5
INFO:root:Chunked 100 in [9, 9, 9, 9, 8, 8, 8, 8, 8, 8, 8, 8]
INFO:root:Considering 100 * 1 jobs for minsize=6
INFO:root:Chunked 100 in [9, 9, 9, 9, 8, 8, 8, 8, 8, 8, 8, 8]
INFO:root:Considering 100 * 1 jobs for minsize=7
INFO:root:Chunked 100 in [9, 9, 9, 9, 8, 8, 8, 8, 8, 8, 8, 8]
INFO:root:Considering 100 * 1 jobs for minsize=8
INFO:root:Chunked 100 in [9, 9, 9, 9, 8, 8, 8, 8, 8, 8, 8, 8]
INFO:root:Considering 100 * 1 jobs for minsize=9
INFO:root:Chunked 100 in [9, 9, 9, 9, 8, 8, 8, 8, 8, 8, 8, 8]
INFO:root:Considering 100 * 1 jobs for minsize=10
INFO:root:Chunked 100 in [9, 9, 9, 9, 8, 8, 8, 8, 8, 8, 8, 8]
INFO:root:Considering 100 * 1 jobs for minsize=11
INFO:root:Chunked 100 in [9, 9, 9, 9, 8, 8, 8, 8, 8, 8, 8, 8]
INFO:root:Considering 100 * 1 jobs for minsize=12
INFO:root:Chunked 100 in [9, 9, 9, 9, 8, 8, 8, 8, 8, 8, 8, 8]
INFO:root:XX found first (4, 4) is not 3 13
INFO:root:XX add new best (4, 4) is not 3 13 13
INFO:root:XX add new best (4, 4) is not 3 13 13
INFO:root:XX add new best (4, 4) is not 3 13 13
INFO:root:Considering 100 * 1 jobs for minsize=13
INFO:root:Chunked 100 in [9, 9, 9, 9, 8, 8, 8, 8, 8, 8, 8, 8]
INFO:root:XX add new best (4, 4) is not 3 13 13
INFO:root:Trace: [(13, [(4, 4) is not 3])]
INFO:root:Trace Quality: [(13, 1)]
INFO:root:Trace Sorted: [(13, 1)]
INFO:root:Finished
INFO:root:Full Trace [(13, [(4, 4) is not 3])]
INFO:root:Trying {'gallopingMUSes': True, 'minPrecheckMUS': True}
INFO:root:Starting Step 1
INFO:root:Current state [[[[9], [3, 7], [1], [5], [2, 8], [2, 8], [3, 7], [4], [6]], [[4], [2], [5], [3, 6, 7], [9], [3, 6, 7], [3, 7], [8], [1]], [[8], [6], [3, 7], [3, 4, 7], [1], [3, 4, 7], [5, 9], [2], [5, 9]], [[5], [3, 4, 7, 8], [2], [1, 3, 4, 6, 7, 8, 9], [3, 7, 8], [3, 4, 6, 7, 8, 9], [1, 9], [3, 7], [8, 9]], [[3, 7], [1], [9], [2, 3, 7, 8], [2, 3, 5, 7, 8], [2, 3, 5, 7, 8], [4], [6], [5, 8]], [[6], [3, 4, 7, 8], [3, 4, 7, 8], [1, 3, 4, 7, 8, 9], [3, 5, 7, 8], [3, 4, 5, 7, 8, 9], [1, 5, 9], [3, 7], [2]], [[1], [9], [6], [7, 8], [4], [7, 8], [2], [5], [3]], [[2], [3, 4, 5], [3, 4], [3, 9], [6], [3, 5, 9], [8], [1], [7]], [[3, 7], [3, 5, 7, 8], [3, 7, 8], [2, 3], [2, 3, 5], [1], [6], [9], [4]]]]
INFO:root:Doing checkSmall1
INFO:root:Getting tiny MUSes, distance 1, for 1 puzlits, 1 repeats
INFO:root:Chunked 1 in [1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
INFO:root:Doing checkSmall2
INFO:root:Getting tiny MUSes, distance 2, for 1 puzlits, 1 repeats
INFO:root:Chunked 1 in [1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
INFO:root:Considering 100 * 1 jobs for minsize=3
INFO:root:Chunked 100 in [9, 9, 9, 9, 8, 8, 8, 8, 8, 8, 8, 8]
INFO:root:Considering 100 * 1 jobs for minsize=4
INFO:root:Chunked 100 in [9, 9, 9, 9, 8, 8, 8, 8, 8, 8, 8, 8]
INFO:root:Considering 100 * 1 jobs for minsize=5
INFO:root:Chunked 100 in [9, 9, 9, 9, 8, 8, 8, 8, 8, 8, 8, 8]
INFO:root:Considering 100 * 1 jobs for minsize=6
INFO:root:Chunked 100 in [9, 9, 9, 9, 8, 8, 8, 8, 8, 8, 8, 8]
INFO:root:Considering 100 * 1 jobs for minsize=7
INFO:root:Chunked 100 in [9, 9, 9, 9, 8, 8, 8, 8, 8, 8, 8, 8]
INFO:root:Considering 100 * 1 jobs for minsize=8
INFO:root:Chunked 100 in [9, 9, 9, 9, 8, 8, 8, 8, 8, 8, 8, 8]
INFO:root:Considering 100 * 1 jobs for minsize=9
INFO:root:Chunked 100 in [9, 9, 9, 9, 8, 8, 8, 8, 8, 8, 8, 8]
INFO:root:Considering 100 * 1 jobs for minsize=10
INFO:root:Chunked 100 in [9, 9, 9, 9, 8, 8, 8, 8, 8, 8, 8, 8]
INFO:root:Considering 100 * 1 jobs for minsize=11
INFO:root:Chunked 100 in [9, 9, 9, 9, 8, 8, 8, 8, 8, 8, 8, 8]
INFO:root:Considering 100 * 1 jobs for minsize=12
INFO:root:Chunked 100 in [9, 9, 9, 9, 8, 8, 8, 8, 8, 8, 8, 8]
INFO:root:XX found first (4, 4) is not 3 13
INFO:root:XX add new best (4, 4) is not 3 13 13
INFO:root:XX add new best (4, 4) is not 3 13 13
INFO:root:XX add new best (4, 4) is not 3 13 13
INFO:root:Considering 100 * 1 jobs for minsize=13
INFO:root:Chunked 100 in [9, 9, 9, 9, 8, 8, 8, 8, 8, 8, 8, 8]
INFO:root:XX add new best (4, 4) is not 3 13 13
INFO:root:Trace: [(13, [(4, 4) is not 3])]
INFO:root:Trace Quality: [(13, 1)]
INFO:root:Trace Sorted: [(13, 1)]
INFO:root:Finished
INFO:root:Full Trace [(13, [(4, 4) is not 3])]
INFO:root:Trying {}
INFO:root:Starting Step 1
INFO:root:Current state [[[[2, 4, 5, 8], [1], [7], [9], [2, 4, 5], [3], [6], [4, 8], [2, 4, 8]], [[2, 3, 4, 5, 6], [2, 3, 4, 5], [3, 6], [1, 2, 5, 7], [8], [5, 7], [1, 3, 9], [1, 4, 9], [1, 2, 3, 4, 9]], [[9], [2, 3, 4, 8], [3, 6, 8], [1, 2], [2, 4, 6], [4, 6], [5], [1, 4, 8], [7]], [[5, 8], [7], [2], [5, 8], [1], [6, 9], [4], [3], [6, 9]], [[1, 3, 5, 8], [3, 5, 8, 9], [3, 8, 9], [4], [5, 6, 9], [2], [1, 8, 9], [7], [1, 6, 8, 9]], [[1, 8], [6], [4], [3], [7], [8, 9], [2], [5], [1, 8, 9]], [[7], [3, 4, 8, 9], [1], [2, 8], [2, 4, 9], [4, 8, 9], [3, 8, 9], [6], [5]], [[2, 4, 6, 8], [2, 4, 8, 9], [6, 8, 9], [5, 7], [3], [5, 7], [1, 8, 9], [1, 4, 8, 9], [1, 4, 8, 9]], [[3, 4, 8], [3, 4, 8, 9], [5], [6], [4, 9], [1], [7], [2], [3, 4, 8, 9]]]]
INFO:root:Doing checkSmall1
INFO:root:Getting tiny MUSes, distance 1, for 1 puzlits, 1 repeats
INFO:root:Chunked 1 in [1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
INFO:root:Doing checkSmall2
INFO:root:Getting tiny MUSes, distance 2, for 1 puzlits, 1 repeats
INFO:root:Chunked 1 in [1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
INFO:root:Considering 100 * 1 jobs for minsize=3
INFO:root:Chunked 100 in [9, 9, 9, 9, 8, 8, 8, 8, 8, 8, 8, 8]
INFO:root:XX found first (2, 1) is not 3 3
INFO:root:XX add new best (2, 1) is not 3 3 3
INFO:root:XX add new best (2, 1) is not 3 3 3
INFO:root:XX add new best (2, 1) is not 3 3 3
INFO:root:XX add new best (2, 1) is not 3 3 3
INFO:root:XX add new best (2, 1) is not 3 3 3
INFO:root:XX add new best (2, 1) is not 3 3 3
INFO:root:XX add new best (2, 1) is not 3 3 3
INFO:root:XX add new best (2, 1) is not 3 3 3
INFO:root:XX add new best (2, 1) is not 3 3 3
INFO:root:XX add new best (2, 1) is not 3 3 3
INFO:root:XX add new best (2, 1) is not 3 3 3
INFO:root:XX add new best (2, 1) is not 3 3 3
INFO:root:XX add new best (2, 1) is not 3 3 3
INFO:root:XX add new best (2, 1) is not 3 3 3
INFO:root:XX add new best (2, 1) is not 3 3 3
INFO:root:XX add new best (2, 1) is not 3 3 3
INFO:root:XX add new best (2, 1) is not 3 3 3
INFO:root:XX add new best (2, 1) is not 3 3 3
INFO:root:XX add new best (2, 1) is not 3 3 3
INFO:root:XX add new best (2, 1) is not 3 3 3
INFO:root:XX add new best (2, 1) is not 3 3 3
INFO:root:XX add new best (2, 1) is not 3 3 3
INFO:root:XX add new best (2, 1) is not 3 3 3
INFO:root:XX add new best (2, 1) is not 3 3 3
INFO:root:XX add new best (2, 1) is not 3 3 3
INFO:root:XX add new best (2, 1) is not 3 3 3
INFO:root:XX add new best (2, 1) is not 3 3 3
INFO:root:XX add new best (2, 1) is not 3 3 3
INFO:root:XX add new best (2, 1) is not 3 3 3
INFO:root:XX add new best (2, 1) is not 3 3 3
INFO:root:XX add new best (2, 1) is not 3 3 3
INFO:root:XX add new best (2, 1) is not 3 3 3
INFO:root:XX add new best (2, 1) is not 3 3 3
INFO:root:XX add new best (2, 1) is not 3 3 3
INFO:root:XX add new best (2, 1) is not 3 3 3
INFO:root:XX add new best (2, 1) is not 3 3 3
INFO:root:XX add new best (2, 1) is not 3 3 3
INFO:root:XX add new best (2, 1) is not 3 3 3
INFO:root:XX add new best (2, 1) is not 3 3 3
INFO:root:XX add new best (2, 1) is not 3 3 3
INFO:root:XX add new best (2, 1) is not 3 3 3
INFO:root:XX add new best (2, 1) is not 3 3 3
INFO:root:XX add new best (2, 1) is not 3 3 3
INFO:root:XX add new best (2, 1) is not 3 3 3
INFO:root:XX add new best (2, 1) is not 3 3 3
INFO:root:XX add new best (2, 1) is not 3 3 3
INFO:root:XX add new best (2, 1) is not 3 3 3
INFO:root:XX add new best (2, 1) is not 3 3 3
INFO:root:XX add new best (2, 1) is not 3 3 3
INFO:root:XX add new best (2, 1) is not 3 3 3
INFO:root:XX add new best (2, 1) is not 3 3 3
INFO:root:XX add new best (2, 1) is not 3 3 3
INFO:root:XX add new best (2, 1) is not 3 3 3
INFO:root:XX add new best (2, 1) is not 3 3 3
INFO:root:XX add new best (2, 1) is not 3 3 3
INFO:root:XX add new best (2, 1) is not 3 3 3
INFO:root:XX add new best (2, 1) is not 3 3 3
INFO:root:XX add new best (2, 1) is not 3 3 3
INFO:root:XX add new best (2, 1) is not 3 3 3
INFO:root:XX add new best (2, 1) is not 3 3 3
INFO:root:XX add new best (2, 1) is not 3 3 3
INFO:root:XX add new best (2, 1) is not 3 3 3
INFO:root:XX add new best (2, 1) is not 3 3 3
INFO:root:XX add new best (2, 1) is not 3 3 3
INFO:root:XX add new best (2, 1) is not 3 3 3
INFO:root:XX add new best (2, 1) is not 3 3 3
INFO:root:XX add new best (2, 1) is not 3 3 3
INFO:root:XX add new best (2, 1) is not 3 3 3
INFO:root:XX add new best (2, 1) is not 3 3 3
INFO:root:XX add new best (2, 1) is not 3 3 3
INFO:root:XX add new best (2, 1) is not 3 3 3
INFO:root:XX add new best (2, 1) is not 3 3 3
INFO:root:XX add new best (2, 1) is not 3 3 3
INFO:root:XX add new best (2, 1) is not 3 3 3
INFO:root:XX add new best (2, 1) is not 3 3 3
INFO:root:XX add new best (2, 1) is not 3 3 3
INFO:root:XX add new best (2, 1) is not 3 3 3
INFO:root:XX add new best (2, 1) is not 3 3 3
INFO:root:XX add new best (2, 1) is not 3 3 3
INFO:root:XX add new best (2, 1) is not 3 3 3
INFO:root:XX add new best (2, 1) is not 3 3 3
INFO:root:XX add new best (2, 1) is not 3 3 3
INFO:root:XX add new best (2, 1) is not 3 3 3
INFO:root:XX add new best (2, 1) is not 3 3 3
INFO:root:XX add new best (2, 1) is not 3 3 3
INFO:root:XX add new best (2, 1) is not 3 3 3
INFO:root:XX add new best (2, 1) is not 3 3 3
INFO:root:XX add new best (2, 1) is not 3 3 3
INFO:root:XX add new best (2, 1) is not 3 3 3
INFO:root:XX add new best (2, 1) is not 3 3 3
INFO:root:XX add new best (2, 1) is not 3 3 3
INFO:root:XX add new best (2, 1) is not 3 3 3
INFO:root:XX add new best (2, 1) is not 3 3 3
INFO:root:XX add new best (2, 1) is not 3 3 3
INFO:root:XX add new best (2, 1) is not 3 3 3
INFO:root:XX add new best (2, 1) is not 3 3 3
INFO:root:XX add new best (2, 1) is not 3 3 3
INFO:root:XX add new best (2, 1) is not 3 3 3
INFO:root:XX add new best (2, 1) is not 3 3 3
INFO:root:Trace: [(3, [(2, 1) is not 3])]
INFO:root:Trace Quality: [(3, 1)]
INFO:root:Trace Sorted: [(3, 1)]
INFO:root:Finished
INFO:root:Full Trace [(3, [(2, 1) is not 3])]
INFO:root:Trying {'prechopMUSes': True}
INFO:root:Starting Step 1
INFO:root:Current state [[[[2, 4, 5, 8], [1], [7], [9], [2, 4, 5], [3], [6], [4, 8], [2, 4, 8]], [[2, 3, 4, 5, 6], [2, 3, 4, 5], [3, 6], [1, 2, 5, 7], [8], [5, 7], [1, 3, 9], [1, 4, 9], [1, 2, 3, 4, 9]], [[9], [2, 3, 4, 8], [3, 6, 8], [1, 2], [2, 4, 6], [4, 6], [5], [1, 4, 8], [7]], [[5, 8], [7], [2], [5, 8], [1], [6, 9], [4], [3], [6, 9]], [[1, 3, 5, 8], [3, 5, 8, 9], [3, 8, 9], [4], [5, 6, 9], [2], [1, 8, 9], [7], [1, 6, 8, 9]], [[1, 8], [6], [4], [3], [7], [8, 9], [2], [5], [1, 8, 9]], [[7], [3, 4, 8, 9], [1], [2, 8], [2, 4, 9], [4, 8, 9], [3, 8, 9], [6], [5]], [[2, 4, 6, 8], [2, 4, 8, 9], [6, 8, 9], [5, 7], [3], [5, 7], [1, 8, 9], [1, 4, 8, 9], [1, 4, 8, 9]], [[3, 4, 8], [3, 4, 8, 9], [5], [6], [4, 9], [1], [7], [2], [3, 4, 8, 9]]]]
INFO:root:Doing checkSmall1
INFO:root:Getting tiny MUSes, distance 1, for 1 puzlits, 1 repeats
INFO:root:Chunked 1 in [1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
INFO:root:Doing checkSmall2
INFO:root:Getting tiny MUSes, distance 2, for 1 puzlits, 1 repeats
INFO:root:Chunked 1 in [1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
INFO:root:Considering 100 * 1 jobs for minsize=3
INFO:root:Chunked 100 in [9, 9, 9, 9, 8, 8, 8, 8, 8, 8, 8, 8]
INFO:root:XX found first (2, 1) is not 3 3
INFO:root:XX add new best (2, 1) is not 3 3 3
INFO:root:XX add new best (2, 1) is not 3 3 3
INFO:root:XX add new best (2, 1) is not 3 3 3
INFO:root:XX add new best (2, 1) is not 3 3 3
INFO:root:XX add new best (2, 1) is not 3 3 3
INFO:root:XX add new best (2, 1) is not 3 3 3
INFO:root:XX add new best (2, 1) is not 3 3 3
INFO:root:XX add new best (2, 1) is not 3 3 3
INFO:root:XX add new best (2, 1) is not 3 3 3
INFO:root:XX add new best (2, 1) is not 3 3 3
INFO:root:XX add new best (2, 1) is not 3 3 3
INFO:root:XX add new best (2, 1) is not 3 3 3
INFO:root:XX add new best (2, 1) is not 3 3 3
INFO:root:XX add new best (2, 1) is not 3 3 3
INFO:root:XX add new best (2, 1) is not 3 3 3
INFO:root:XX add new best (2, 1) is not 3 3 3
INFO:root:XX add new best (2, 1) is not 3 3 3
INFO:root:XX add new best (2, 1) is not 3 3 3
INFO:root:XX add new best (2, 1) is not 3 3 3
INFO:root:XX add new best (2, 1) is not 3 3 3
INFO:root:XX add new best (2, 1) is not 3 3 3
INFO:root:XX add new best (2, 1) is not 3 3 3
INFO:root:XX add new best (2, 1) is not 3 3 3
INFO:root:XX add new best (2, 1) is not 3 3 3
INFO:root:XX add new best (2, 1) is not 3 3 3
INFO:root:XX add new best (2, 1) is not 3 3 3
INFO:root:XX add new best (2, 1) is not 3 3 3
INFO:root:XX add new best (2, 1) is not 3 3 3
INFO:root:XX add new best (2, 1) is not 3 3 3
INFO:root:XX add new best (2, 1) is not 3 3 3
INFO:root:XX add new best (2, 1) is not 3 3 3
INFO:root:XX add new best (2, 1) is not 3 3 3
INFO:root:XX add new best (2, 1) is not 3 3 3
INFO:root:XX add new best (2, 1) is not 3 3 3
INFO:root:XX add new best (2, 1) is not 3 3 3
INFO:root:XX add new best (2, 1) is not 3 3 3
INFO:root:XX add new best (2, 1) is not 3 3 3
INFO:root:XX add new best (2, 1) is not 3 3 3
INFO:root:XX add new best (2, 1) is not 3 3 3
INFO:root:XX add new best (2, 1) is not 3 3 3
INFO:root:XX add new best (2, 1) is not 3 3 3
INFO:root:XX add new best (2, 1) is not 3 3 3
INFO:root:XX add new best (2, 1) is not 3 3 3
INFO:root:XX add new best (2, 1) is not 3 3 3
INFO:root:XX add new best (2, 1) is not 3 3 3
INFO:root:XX add new best (2, 1) is not 3 3 3
INFO:root:XX add new best (2, 1) is not 3 3 3
INFO:root:XX add new best (2, 1) is not 3 3 3
INFO:root:XX add new best (2, 1) is not 3 3 3
INFO:root:XX add new best (2, 1) is not 3 3 3
INFO:root:XX add new best (2, 1) is not 3 3 3
INFO:root:XX add new best (2, 1) is not 3 3 3
INFO:root:XX add new best (2, 1) is not 3 3 3
INFO:root:XX add new best (2, 1) is not 3 3 3
INFO:root:XX add new best (2, 1) is not 3 3 3
INFO:root:XX add new best (2, 1) is not 3 3 3
INFO:root:XX add new best (2, 1) is not 3 3 3
INFO:root:XX add new best (2, 1) is not 3 3 3
INFO:root:Trace: [(3, [(2, 1) is not 3])]
INFO:root:Trace Quality: [(3, 1)]
INFO:root:Trace Sorted: [(3, 1)]
INFO:root:Finished
INFO:root:Full Trace [(3, [(2, 1) is not 3])]
INFO:root:Trying {'quarterChopMUS': True}
INFO:root:Starting Step 1
INFO:root:Current state [[[[2, 4, 5, 8], [1], [7], [9], [2, 4, 5], [3], [6], [4, 8], [2, 4, 8]], [[2, 3, 4, 5, 6], [2, 3, 4, 5], [3, 6], [1, 2, 5, 7], [8], [5, 7], [1, 3, 9], [1, 4, 9], [1, 2, 3, 4, 9]], [[9], [2, 3, 4, 8], [3, 6, 8], [1, 2], [2, 4, 6], [4, 6], [5], [1, 4, 8], [7]], [[5, 8], [7], [2], [5, 8], [1], [6, 9], [4], [3], [6, 9]], [[1, 3, 5, 8], [3, 5, 8, 9], [3, 8, 9], [4], [5, 6, 9], [2], [1, 8, 9], [7], [1, 6, 8, 9]], [[1, 8], [6], [4], [3], [7], [8, 9], [2], [5], [1, 8, 9]], [[7], [3, 4, 8, 9], [1], [2, 8], [2, 4, 9], [4, 8, 9], [3, 8, 9], [6], [5]], [[2, 4, 6, 8], [2, 4, 8, 9], [6, 8, 9], [5, 7], [3], [5, 7], [1, 8, 9], [1, 4, 8, 9], [1, 4, 8, 9]], [[3, 4, 8], [3, 4, 8, 9], [5], [6], [4, 9], [1], [7], [2], [3, 4, 8, 9]]]]
INFO:root:Doing checkSmall1
INFO:root:Getting tiny MUSes, distance 1, for 1 puzlits, 1 repeats
INFO:root:Chunked 1 in [1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
INFO:root:Doing checkSmall2
INFO:root:Getting tiny MUSes, distance 2, for 1 puzlits, 1 repeats
INFO:root:Chunked 1 in [1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
INFO:root:Considering 100 * 1 jobs for minsize=3
INFO:root:Chunked 100 in [9, 9, 9, 9, 8, 8, 8, 8, 8, 8, 8, 8]
INFO:root:XX found first (2, 1) is not 3 3
INFO:root:XX add new best (2, 1) is not 3 3 3
INFO:root:XX add new best (2, 1) is not 3 3 3
INFO:root:XX add new best (2, 1) is not 3 3 3
INFO:root:XX add new best (2, 1) is not 3 3 3
INFO:root:XX add new best (2, 1) is not 3 3 3
INFO:root:XX add new best (2, 1) is not 3 3 3
INFO:root:XX add new best (2, 1) is not 3 3 3
INFO:root:XX add new best (2, 1) is not 3 3 3
INFO:root:XX add new best (2, 1) is not 3 3 3
INFO:root:XX add new best (2, 1) is not 3 3 3
INFO:root:XX add new best (2, 1) is not 3 3 3
INFO:root:XX add new best (2, 1) is not 3 3 3
INFO:root:XX add new best (2, 1) is not 3 3 3
INFO:root:XX add new best (2, 1) is not 3 3 3
INFO:root:XX add new best (2, 1) is not 3 3 3
INFO:root:XX add new best (2, 1) is not 3 3 3
INFO:root:XX add new best (2, 1) is not 3 3 3
INFO:root:XX add new best (2, 1) is not 3 3 3
INFO:root:XX add new best (2, 1) is not 3 3 3
INFO:root:XX add new best (2, 1) is not 3 3 3
INFO:root:XX add new best (2, 1) is not 3 3 3
INFO:root:XX add new best (2, 1) is not 3 3 3
INFO:root:XX add new best (2, 1) is not 3 3 3
INFO:root:XX add new best (2, 1) is not 3 3 3
INFO:root:XX add new best (2, 1) is not 3 3 3
INFO:root:XX add new best (2, 1) is not 3 3 3
INFO:root:XX add new best (2, 1) is not 3 3 3
INFO:root:XX add new best (2, 1) is not 3 3 3
INFO:root:XX add new best (2, 1) is not 3 3 3
INFO:root:XX add new best (2, 1) is not 3 3 3
INFO:root:XX add new best (2, 1) is not 3 3 3
INFO:root:XX add new best (2, 1) is not 3 3 3
INFO:root:XX add new best (2, 1) is not 3 3 3
INFO:root:XX add new best (2, 1) is not 3 3 3
INFO:root:XX add new best (2, 1) is not 3 3 3
INFO:root:XX add new best (2, 1) is not 3 3 3
INFO:root:XX add new best (2, 1) is not 3 3 3
INFO:root:XX add new best (2, 1) is not 3 3 3
INFO:root:XX add new best (2, 1) is not 3 3 3
INFO:root:XX add new best (2, 1) is not 3 3 3
INFO:root:XX add new best (2, 1) is not 3 3 3
INFO:root:XX add new best (2, 1) is not 3 3 3
INFO:root:XX add new best (2, 1) is not 3 3 3
INFO:root:XX add new best (2, 1) is not 3 3 3
INFO:root:XX add new best (2, 1) is not 3 3 3
INFO:root:XX add new best (2, 1) is not 3 3 3
INFO:root:XX add new best (2, 1) is not 3 3 3
INFO:root:XX add new best (2, 1) is not 3 3 3
INFO:root:XX add new best (2, 1) is not 3 3 3
INFO:root:XX add new best (2, 1) is not 3 3 3
INFO:root:XX add new best (2, 1) is not 3 3 3
INFO:root:XX add new best (2, 1) is not 3 3 3
INFO:root:XX add new best (2, 1) is not 3 3 3
INFO:root:XX add new best (2, 1) is not 3 3 3
INFO:root:XX add new best (2, 1) is not 3 3 3
INFO:root:XX add new best (2, 1) is not 3 3 3
INFO:root:XX add new best (2, 1) is not 3 3 3
INFO:root:XX add new best (2, 1) is not 3 3 3
INFO:root:XX add new best (2, 1) is not 3 3 3
INFO:root:XX add new best (2, 1) is not 3 3 3
INFO:root:XX add new best (2, 1) is not 3 3 3
INFO:root:XX add new best (2, 1) is not 3 3 3
INFO:root:XX add new best (2, 1) is not 3 3 3
INFO:root:XX add new best (2, 1) is not 3 3 3
INFO:root:XX add new best (2, 1) is not 3 3 3
INFO:root:XX add new best (2, 1) is not 3 3 3
INFO:root:XX add new best (2, 1) is not 3 3 3
INFO:root:XX add new best (2, 1) is not 3 3 3
INFO:root:XX add new best (2, 1) is not 3 3 3
INFO:root:XX add new best (2, 1) is not 3 3 3
INFO:root:XX add new best (2, 1) is not 3 3 3
INFO:root:XX add new best (2, 1) is not 3 3 3
INFO:root:XX add new best (2, 1) is not 3 3 3
INFO:root:Trace: [(3, [(2, 1) is not 3])]
INFO:root:Trace Quality: [(3, 1)]
INFO:root:Trace Sorted: [(3, 1)]
INFO:root:Finished
INFO:root:Full Trace [(3, [(2, 1) is not 3])]
INFO:root:Trying {'minPrecheckMUS': True}
INFO:root:Starting Step 1
INFO:root:Current state [[[[2, 4, 5, 8], [1], [7], [9], [2, 4, 5], [3], [6], [4, 8], [2, 4, 8]], [[2, 3, 4, 5, 6], [2, 3, 4, 5], [3, 6], [1, 2, 5, 7], [8], [5, 7], [1, 3, 9], [1, 4, 9], [1, 2, 3, 4, 9]], [[9], [2, 3, 4, 8], [3, 6, 8], [1, 2], [2, 4, 6], [4, 6], [5], [1, 4, 8], [7]], [[5, 8], [7], [2], [5, 8], [1], [6, 9], [4], [3], [6, 9]], [[1, 3, 5, 8], [3, 5, 8, 9], [3, 8, 9], [4], [5, 6, 9], [2], [1, 8, 9], [7], [1, 6, 8, 9]], [[1, 8], [6], [4], [3], [7], [8, 9], [2], [5], [1, 8, 9]], [[7], [3, 4, 8, 9], [1], [2, 8], [2, 4, 9], [4, 8, 9], [3, 8, 9], [6], [5]], [[2, 4, 6, 8], [2, 4, 8, 9], [6, 8, 9], [5, 7], [3], [5, 7], [1, 8, 9], [1, 4, 8, 9], [1, 4, 8, 9]], [[3, 4, 8], [3, 4, 8, 9], [5], [6], [4, 9], [1], [7], [2], [3, 4, 8, 9]]]]
INFO:root:Doing checkSmall1
INFO:root:Getting tiny MUSes, distance 1, for 1 puzlits, 1 repeats
INFO:root:Chunked 1 in [1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
INFO:root:Doing checkSmall2
INFO:root:Getting tiny MUSes, distance 2, for 1 puzlits, 1 repeats
INFO:root:Chunked 1 in [1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
INFO:root:Considering 100 * 1 jobs for minsize=3
INFO:root:Chunked 100 in [9, 9, 9, 9, 8, 8, 8, 8, 8, 8, 8, 8]
INFO:root:XX found first (2, 1) is not 3 3
INFO:root:XX add new best (2, 1) is not 3 3 3
INFO:root:XX add new best (2, 1) is not 3 3 3
INFO:root:XX add new best (2, 1) is not 3 3 3
INFO:root:XX add new best (2, 1) is not 3 3 3
INFO:root:XX add new best (2, 1) is not 3 3 3
INFO:root:XX add new best (2, 1) is not 3 3 3
INFO:root:XX add new best (2, 1) is not 3 3 3
INFO:root:XX add new best (2, 1) is not 3 3 3
INFO:root:XX add new best (2, 1) is not 3 3 3
INFO:root:XX add new best (2, 1) is not 3 3 3
INFO:root:XX add new best (2, 1) is not 3 3 3
INFO:root:XX add new best (2, 1) is not 3 3 3
INFO:root:XX add new best (2, 1) is not 3 3 3
INFO:root:XX add new best (2, 1) is not 3 3 3
INFO:root:XX add new best (2, 1) is not 3 3 3
INFO:root:XX add new best (2, 1) is not 3 3 3
INFO:root:XX add new best (2, 1) is not 3 3 3
INFO:root:XX add new best (2, 1) is not 3 3 3
INFO:root:XX add new best (2, 1) is not 3 3 3
INFO:root:XX add new best (2, 1) is not 3 3 3
INFO:root:XX add new best (2, 1) is not 3 3 3
INFO:root:XX add new best (2, 1) is not 3 3 3
INFO:root:XX add new best (2, 1) is not 3 3 3
INFO:root:XX add new best (2, 1) is not 3 3 3
INFO:root:XX add new best (2, 1) is not 3 3 3
INFO:root:XX add new best (2, 1) is not 3 3 3
INFO:root:XX add new best (2, 1) is not 3 3 3
INFO:root:XX add new best (2, 1) is not 3 3 3
INFO:root:XX add new best (2, 1) is not 3 3 3
INFO:root:XX add new best (2, 1) is not 3 3 3
INFO:root:XX add new best (2, 1) is not 3 3 3
INFO:root:XX add new best (2, 1) is not 3 3 3
INFO:root:XX add new best (2, 1) is not 3 3 3
INFO:root:XX add new best (2, 1) is not 3 3 3
INFO:root:XX add new best (2, 1) is not 3 3 3
INFO:root:XX add new best (2, 1) is not 3 3 3
INFO:root:XX add new best (2, 1) is not 3 3 3
INFO:root:XX add new best (2, 1) is not 3 3 3
INFO:root:XX add new best (2, 1) is not 3 3 3
INFO:root:XX add new best (2, 1) is not 3 3 3
INFO:root:XX add new best (2, 1) is not 3 3 3
INFO:root:XX add new best (2, 1) is not 3 3 3
INFO:root:XX add new best (2, 1) is not 3 3 3
INFO:root:XX add new best (2, 1) is not 3 3 3
INFO:root:XX add new best (2, 1) is not 3 3 3
INFO:root:XX add new best (2, 1) is not 3 3 3
INFO:root:XX add new best (2, 1) is not 3 3 3
INFO:root:Trace: [(3, [(2, 1) is not 3])]
INFO:root:Trace Quality: [(3, 1)]
INFO:root:Trace Sorted: [(3, 1)]
INFO:root:Finished
INFO:root:Full Trace [(3, [(2, 1) is not 3])]
INFO:root:Trying {'gallopingMUSes': True}
INFO:root:Starting Step 1
INFO:root:Current state [[[[2, 4, 5, 8], [1], [7], [9], [2, 4, 5], [3], [6], [4, 8], [2, 4, 8]], [[2, 3, 4, 5, 6], [2, 3, 4, 5], [3, 6], [1, 2, 5, 7], [8], [5, 7], [1, 3, 9], [1, 4, 9], [1, 2, 3, 4, 9]], [[9], [2, 3, 4, 8], [3, 6, 8], [1, 2], [2, 4, 6], [4, 6], [5], [1, 4, 8], [7]], [[5, 8], [7], [2], [5, 8], [1], [6, 9], [4], [3], [6, 9]], [[1, 3, 5, 8], [3, 5, 8, 9], [3, 8, 9], [4], [5, 6, 9], [2], [1, 8, 9], [7], [1, 6, 8, 9]], [[1, 8], [6], [4], [3], [7], [8, 9], [2], [5], [1, 8, 9]], [[7], [3, 4, 8, 9], [1], [2, 8], [2, 4, 9], [4, 8, 9], [3, 8, 9], [6], [5]], [[2, 4, 6, 8], [2, 4, 8, 9], [6, 8, 9], [5, 7], [3], [5, 7], [1, 8, 9], [1, 4, 8, 9], [1, 4, 8, 9]], [[3, 4, 8], [3, 4, 8, 9], [5], [6], [4, 9], [1], [7], [2], [3, 4, 8, 9]]]]
INFO:root:Doing checkSmall1
INFO:root:Getting tiny MUSes, distance 1, for 1 puzlits, 1 repeats
INFO:root:Chunked 1 in [1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
INFO:root:Doing checkSmall2
INFO:root:Getting tiny MUSes, distance 2, for 1 puzlits, 1 repeats
INFO:root:Chunked 1 in [1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
INFO:root:Considering 100 * 1 jobs for minsize=3
INFO:root:Chunked 100 in [9, 9, 9, 9, 8, 8, 8, 8, 8, 8, 8, 8]
INFO:root:XX found first (2, 1) is not 3 3
INFO:root:XX add new best (2, 1) is not 3 3 3
INFO:root:XX add new best (2, 1) is not 3 3 3
INFO:root:XX add new best (2, 1) is not 3 3 3
INFO:root:XX add new best (2, 1) is not 3 3 3
INFO:root:XX add new best (2, 1) is not 3 3 3
INFO:root:XX add new best (2, 1) is not 3 3 3
INFO:root:XX add new best (2, 1) is not 3 3 3
INFO:root:XX add new best (2, 1) is not 3 3 3
INFO:root:XX add new best (2, 1) is not 3 3 3
INFO:root:XX add new best (2, 1) is not 3 3 3
INFO:root:XX add new best (2, 1) is not 3 3 3
INFO:root:XX add new best (2, 1) is not 3 3 3
INFO:root:XX add new best (2, 1) is not 3 3 3
INFO:root:XX add new best (2, 1) is not 3 3 3
INFO:root:XX add new best (2, 1) is not 3 3 3
INFO:root:XX add new best (2, 1) is not 3 3 3
INFO:root:XX add new best (2, 1) is not 3 3 3
INFO:root:XX add new best (2, 1) is not 3 3 3
INFO:root:XX add new best (2, 1) is not 3 3 3
INFO:root:XX add new best (2, 1) is not 3 3 3
INFO:root:XX add new best (2, 1) is not 3 3 3
INFO:root:XX add new best (2, 1) is not 3 3 3
INFO:root:XX add new best (2, 1) is not 3 3 3
INFO:root:XX add new best (2, 1) is not 3 3 3
INFO:root:XX add new best (2, 1) is not 3 3 3
INFO:root:XX add new best (2, 1) is not 3 3 3
INFO:root:XX add new best (2, 1) is not 3 3 3
INFO:root:XX add new best (2, 1) is not 3 3 3
INFO:root:XX add new best (2, 1) is not 3 3 3
INFO:root:XX add new best (2, 1) is not 3 3 3
INFO:root:XX add new best (2, 1) is not 3 3 3
INFO:root:XX add new best (2, 1) is not 3 3 3
INFO:root:XX add new best (2, 1) is not 3 3 3
INFO:root:XX add new best (2, 1) is not 3 3 3
INFO:root:XX add new best (2, 1) is not 3 3 3
INFO:root:XX add new best (2, 1) is not 3 3 3
INFO:root:XX add new best (2, 1) is not 3 3 3
INFO:root:Trace: [(3, [(2, 1) is not 3])]
INFO:root:Trace Quality: [(3, 1)]
INFO:root:Trace Sorted: [(3, 1)]
INFO:root:Finished
INFO:root:Full Trace [(3, [(2, 1) is not 3])]
INFO:root:Trying {'minPrecheckStepsMUS': True}
INFO:root:Starting Step 1
INFO:root:Current state [[[[2, 4, 5, 8], [1], [7], [9], [2, 4, 5], [3], [6], [4, 8], [2, 4, 8]], [[2, 3, 4, 5, 6], [2, 3, 4, 5], [3, 6], [1, 2, 5, 7], [8], [5, 7], [1, 3, 9], [1, 4, 9], [1, 2, 3, 4, 9]], [[9], [2, 3, 4, 8], [3, 6, 8], [1, 2], [2, 4, 6], [4, 6], [5], [1, 4, 8], [7]], [[5, 8], [7], [2], [5, 8], [1], [6, 9], [4], [3], [6, 9]], [[1, 3, 5, 8], [3, 5, 8, 9], [3, 8, 9], [4], [5, 6, 9], [2], [1, 8, 9], [7], [1, 6, 8, 9]], [[1, 8], [6], [4], [3], [7], [8, 9], [2], [5], [1, 8, 9]], [[7], [3, 4, 8, 9], [1], [2, 8], [2, 4, 9], [4, 8, 9], [3, 8, 9], [6], [5]], [[2, 4, 6, 8], [2, 4, 8, 9], [6, 8, 9], [5, 7], [3], [5, 7], [1, 8, 9], [1, 4, 8, 9], [1, 4, 8, 9]], [[3, 4, 8], [3, 4, 8, 9], [5], [6], [4, 9], [1], [7], [2], [3, 4, 8, 9]]]]
INFO:root:Doing checkSmall1
INFO:root:Getting tiny MUSes, distance 1, for 1 puzlits, 1 repeats
INFO:root:Chunked 1 in [1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
INFO:root:Doing checkSmall2
INFO:root:Getting tiny MUSes, distance 2, for 1 puzlits, 1 repeats
INFO:root:Chunked 1 in [1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
INFO:root:Considering 100 * 1 jobs for minsize=3
INFO:root:Chunked 100 in [9, 9, 9, 9, 8, 8, 8, 8, 8, 8, 8, 8]
INFO:root:XX found first (2, 1) is not 3 3
INFO:root:XX add new best (2, 1) is not 3 3 3
INFO:root:XX add new best (2, 1) is not 3 3 3
INFO:root:XX add new best (2, 1) is not 3 3 3
INFO:root:XX add new best (2, 1) is not 3 3 3
INFO:root:XX add new best (2, 1) is not 3 3 3
INFO:root:XX add new best (2, 1) is not 3 3 3
INFO:root:XX add new best (2, 1) is not 3 3 3
INFO:root:XX add new best (2, 1) is not 3 3 3
INFO:root:XX add new best (2, 1) is not 3 3 3
INFO:root:XX add new best (2, 1) is not 3 3 3
INFO:root:XX add new best (2, 1) is not 3 3 3
INFO:root:XX add new best (2, 1) is not 3 3 3
INFO:root:XX add new best (2, 1) is not 3 3 3
INFO:root:XX add new best (2, 1) is not 3 3 3
INFO:root:XX add new best (2, 1) is not 3 3 3
INFO:root:XX add new best (2, 1) is not 3 3 3
INFO:root:XX add new best (2, 1) is not 3 3 3
INFO:root:XX add new best (2, 1) is not 3 3 3
INFO:root:XX add new best (2, 1) is not 3 3 3
INFO:root:XX add new best (2, 1) is not 3 3 3
INFO:root:XX add new best (2, 1) is not 3 3 3
INFO:root:XX add new best (2, 1) is not 3 3 3
INFO:root:XX add new best (2, 1) is not 3 3 3
INFO:root:XX add new best (2, 1) is not 3 3 3
INFO:root:XX add new best (2, 1) is not 3 3 3
INFO:root:XX add new best (2, 1) is not 3 3 3
INFO:root:XX add new best (2, 1) is not 3 3 3
INFO:root:XX add new best (2, 1) is not 3 3 3
INFO:root:XX add new best (2, 1) is not 3 3 3
INFO:root:XX add new best (2, 1) is not 3 3 3
INFO:root:XX add new best (2, 1) is not 3 3 3
INFO:root:XX add new best (2, 1) is not 3 3 3
INFO:root:XX add new best (2, 1) is not 3 3 3
INFO:root:XX add new best (2, 1) is not 3 3 3
INFO:root:XX add new best (2, 1) is not 3 3 3
INFO:root:XX add new best (2, 1) is not 3 3 3
INFO:root:XX add new best (2, 1) is not 3 3 3
INFO:root:XX add new best (2, 1) is not 3 3 3
INFO:root:XX add new best (2, 1) is not 3 3 3
INFO:root:XX add new best (2, 1) is not 3 3 3
INFO:root:XX add new best (2, 1) is not 3 3 3
INFO:root:XX add new best (2, 1) is not 3 3 3
INFO:root:XX add new best (2, 1) is not 3 3 3
INFO:root:XX add new best (2, 1) is not 3 3 3
INFO:root:XX add new best (2, 1) is not 3 3 3
INFO:root:XX add new best (2, 1) is not 3 3 3
INFO:root:XX add new best (2, 1) is not 3 3 3
INFO:root:Trace: [(3, [(2, 1) is not 3])]
INFO:root:Trace Quality: [(3, 1)]
INFO:root:Trace Sorted: [(3, 1)]
INFO:root:Finished
INFO:root:Full Trace [(3, [(2, 1) is not 3])]
INFO:root:Trying {'gallopingMUSes': True, 'minPrecheckMUS': True}
INFO:root:Starting Step 1
INFO:root:Current state [[[[2, 4, 5, 8], [1], [7], [9], [2, 4, 5], [3], [6], [4, 8], [2, 4, 8]], [[2, 3, 4, 5, 6], [2, 3, 4, 5], [3, 6], [1, 2, 5, 7], [8], [5, 7], [1, 3, 9], [1, 4, 9], [1, 2, 3, 4, 9]], [[9], [2, 3, 4, 8], [3, 6, 8], [1, 2], [2, 4, 6], [4, 6], [5], [1, 4, 8], [7]], [[5, 8], [7], [2], [5, 8], [1], [6, 9], [4], [3], [6, 9]], [[1, 3, 5, 8], [3, 5, 8, 9], [3, 8, 9], [4], [5, 6, 9], [2], [1, 8, 9], [7], [1, 6, 8, 9]], [[1, 8], [6], [4], [3], [7], [8, 9], [2], [5], [1, 8, 9]], [[7], [3, 4, 8, 9], [1], [2, 8], [2, 4, 9], [4, 8, 9], [3, 8, 9], [6], [5]], [[2, 4, 6, 8], [2, 4, 8, 9], [6, 8, 9], [5, 7], [3], [5, 7], [1, 8, 9], [1, 4, 8, 9], [1, 4, 8, 9]], [[3, 4, 8], [3, 4, 8, 9], [5], [6], [4, 9], [1], [7], [2], [3, 4, 8, 9]]]]
INFO:root:Doing checkSmall1
INFO:root:Getting tiny MUSes, distance 1, for 1 puzlits, 1 repeats
INFO:root:Chunked 1 in [1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
INFO:root:Doing checkSmall2
INFO:root:Getting tiny MUSes, distance 2, for 1 puzlits, 1 repeats
INFO:root:Chunked 1 in [1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
INFO:root:Considering 100 * 1 jobs for minsize=3
INFO:root:Chunked 100 in [9, 9, 9, 9, 8, 8, 8, 8, 8, 8, 8, 8]
INFO:root:XX found first (2, 1) is not 3 3
INFO:root:XX add new best (2, 1) is not 3 3 3
INFO:root:XX add new best (2, 1) is not 3 3 3
INFO:root:XX add new best (2, 1) is not 3 3 3
INFO:root:XX add new best (2, 1) is not 3 3 3
INFO:root:XX add new best (2, 1) is not 3 3 3
INFO:root:XX add new best (2, 1) is not 3 3 3
INFO:root:XX add new best (2, 1) is not 3 3 3
INFO:root:XX add new best (2, 1) is not 3 3 3
INFO:root:XX add new best (2, 1) is not 3 3 3
INFO:root:XX add new best (2, 1) is not 3 3 3
INFO:root:XX add new best (2, 1) is not 3 3 3
INFO:root:XX add new best (2, 1) is not 3 3 3
INFO:root:XX add new best (2, 1) is not 3 3 3
INFO:root:XX add new best (2, 1) is not 3 3 3
INFO:root:XX add new best (2, 1) is not 3 3 3
INFO:root:XX add new best (2, 1) is not 3 3 3
INFO:root:XX add new best (2, 1) is not 3 3 3
INFO:root:XX add new best (2, 1) is not 3 3 3
INFO:root:XX add new best (2, 1) is not 3 3 3
INFO:root:XX add new best (2, 1) is not 3 3 3
INFO:root:XX add new best (2, 1) is not 3 3 3
INFO:root:XX add new best (2, 1) is not 3 3 3
INFO:root:XX add new best (2, 1) is not 3 3 3
INFO:root:XX add new best (2, 1) is not 3 3 3
INFO:root:XX add new best (2, 1) is not 3 3 3
INFO:root:XX add new best (2, 1) is not 3 3 3
INFO:root:XX add new best (2, 1) is not 3 3 3
INFO:root:XX add new best (2, 1) is not 3 3 3
INFO:root:XX add new best (2, 1) is not 3 3 3
INFO:root:XX add new best (2, 1) is not 3 3 3
INFO:root:XX add new best (2, 1) is not 3 3 3
INFO:root:XX add new best (2, 1) is not 3 3 3
INFO:root:XX add new best (2, 1) is not 3 3 3
INFO:root:XX add new best (2, 1) is not 3 3 3
INFO:root:XX add new best (2, 1) is not 3 3 3
INFO:root:XX add new best (2, 1) is not 3 3 3
INFO:root:XX add new best (2, 1) is not 3 3 3
INFO:root:XX add new best (2, 1) is not 3 3 3
INFO:root:XX add new best (2, 1) is not 3 3 3
INFO:root:XX add new best (2, 1) is not 3 3 3
INFO:root:XX add new best (2, 1) is not 3 3 3
INFO:root:XX add new best (2, 1) is not 3 3 3
INFO:root:XX add new best (2, 1) is not 3 3 3
INFO:root:XX add new best (2, 1) is not 3 3 3
INFO:root:XX add new best (2, 1) is not 3 3 3
INFO:root:XX add new best (2, 1) is not 3 3 3
INFO:root:XX add new best (2, 1) is not 3 3 3
INFO:root:Trace: [(3, [(2, 1) is not 3])]
INFO:root:Trace Quality: [(3, 1)]
INFO:root:Trace Sorted: [(3, 1)]
INFO:root:Finished
INFO:root:Full Trace [(3, [(2, 1) is not 3])]
INFO:root:Trying {}
INFO:root:Starting Step 1
INFO:root:Current state [[[[7, 9], [3], [2], [4, 7, 8], [4, 5, 7, 8], [6], [1], [4, 5, 8, 9], [7, 8]], [[4], [1], [5, 6, 9], [2, 3, 7, 8], [3, 5, 7, 8], [2, 3, 5], [3, 7, 9], [3, 5, 8, 9], [3, 6, 7, 8]], [[6, 7], [8], [5, 6], [9], [3, 4, 5, 7], [1], [2, 3, 4, 7], [2, 3, 4, 5], [2, 3, 6, 7]], [[5], [2, 7], [1, 8], [1, 6], [9], [3, 7], [2, 3, 6], [2, 3, 8], [4]], [[2, 9], [6], [4, 9], [3, 4, 8], [3, 4, 5, 8], [3, 4, 5], [2, 3, 9], [7], [1]], [[3], [4, 7], [1, 8], [1, 6], [2], [4, 7], [6, 9], [8, 9], [5]], [[1, 2, 6], [9], [3, 6], [5], [1, 3, 6], [8], [2, 3, 4, 7], [2, 3, 4], [2, 3, 7]], [[8], [2, 4], [3, 4, 6], [2, 3, 7], [3, 6, 7], [2, 3], [5], [1], [9]], [[1, 2], [5], [7], [2, 3, 4], [1, 3, 4], [9], [8], [6], [2, 3]]]]
INFO:root:Doing checkSmall1
INFO:root:Getting tiny MUSes, distance 1, for 1 puzlits, 1 repeats
INFO:root:Chunked 1 in [1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
INFO:root:Doing checkSmall2
INFO:root:Getting tiny MUSes, distance 2, for 1 puzlits, 1 repeats
INFO:root:Chunked 1 in [1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
INFO:root:Considering 100 * 1 jobs for minsize=3
INFO:root:Chunked 100 in [9, 9, 9, 9, 8, 8, 8, 8, 8, 8, 8, 8]
INFO:root:XX found first (1, 8) is not 8 3
INFO:root:XX add new best (1, 8) is not 8 3 3
INFO:root:XX add new best (1, 8) is not 8 3 3
INFO:root:XX add new best (1, 8) is not 8 3 3
INFO:root:XX add new best (1, 8) is not 8 3 3
INFO:root:XX add new best (1, 8) is not 8 3 3
INFO:root:XX add new best (1, 8) is not 8 3 3
INFO:root:XX add new best (1, 8) is not 8 3 3
INFO:root:XX add new best (1, 8) is not 8 3 3
INFO:root:XX add new best (1, 8) is not 8 3 3
INFO:root:XX add new best (1, 8) is not 8 3 3
INFO:root:XX add new best (1, 8) is not 8 3 3
INFO:root:XX add new best (1, 8) is not 8 3 3
INFO:root:XX add new best (1, 8) is not 8 3 3
INFO:root:XX add new best (1, 8) is not 8 3 3
INFO:root:XX add new best (1, 8) is not 8 3 3
INFO:root:XX add new best (1, 8) is not 8 3 3
INFO:root:XX add new best (1, 8) is not 8 3 3
INFO:root:XX add new best (1, 8) is not 8 3 3
INFO:root:XX add new best (1, 8) is not 8 3 3
INFO:root:XX add new best (1, 8) is not 8 3 3
INFO:root:XX add new best (1, 8) is not 8 3 3
INFO:root:XX add new best (1, 8) is not 8 3 3
INFO:root:XX add new best (1, 8) is not 8 3 3
INFO:root:XX add new best (1, 8) is not 8 3 3
INFO:root:XX add new best (1, 8) is not 8 3 3
INFO:root:XX add new best (1, 8) is not 8 3 3
INFO:root:XX add new best (1, 8) is not 8 3 3
INFO:root:XX add new best (1, 8) is not 8 3 3
INFO:root:XX add new best (1, 8) is not 8 3 3
INFO:root:XX add new best (1, 8) is not 8 3 3
INFO:root:XX add new best (1, 8) is not 8 3 3
INFO:root:XX add new best (1, 8) is not 8 3 3
INFO:root:XX add new best (1, 8) is not 8 3 3
INFO:root:XX add new best (1, 8) is not 8 3 3
INFO:root:XX add new best (1, 8) is not 8 3 3
INFO:root:XX add new best (1, 8) is not 8 3 3
INFO:root:XX add new best (1, 8) is not 8 3 3
INFO:root:XX add new best (1, 8) is not 8 3 3
INFO:root:XX add new best (1, 8) is not 8 3 3
INFO:root:XX add new best (1, 8) is not 8 3 3
INFO:root:XX add new best (1, 8) is not 8 3 3
INFO:root:XX add new best (1, 8) is not 8 3 3
INFO:root:XX add new best (1, 8) is not 8 3 3
INFO:root:XX add new best (1, 8) is not 8 3 3
INFO:root:XX add new best (1, 8) is not 8 3 3
INFO:root:XX add new best (1, 8) is not 8 3 3
INFO:root:XX add new best (1, 8) is not 8 3 3
INFO:root:XX add new best (1, 8) is not 8 3 3
INFO:root:XX add new best (1, 8) is not 8 3 3
INFO:root:XX add new best (1, 8) is not 8 3 3
INFO:root:XX add new best (1, 8) is not 8 3 3
INFO:root:XX add new best (1, 8) is not 8 3 3
INFO:root:XX add new best (1, 8) is not 8 3 3
INFO:root:XX add new best (1, 8) is not 8 3 3
INFO:root:XX add new best (1, 8) is not 8 3 3
INFO:root:XX add new best (1, 8) is not 8 3 3
INFO:root:XX add new best (1, 8) is not 8 3 3
INFO:root:XX add new best (1, 8) is not 8 3 3
INFO:root:XX add new best (1, 8) is not 8 3 3
INFO:root:XX add new best (1, 8) is not 8 3 3
INFO:root:XX add new best (1, 8) is not 8 3 3
INFO:root:XX add new best (1, 8) is not 8 3 3
INFO:root:XX add new best (1, 8) is not 8 3 3
INFO:root:XX add new best (1, 8) is not 8 3 3
INFO:root:XX add new best (1, 8) is not 8 3 3
INFO:root:XX add new best (1, 8) is not 8 3 3
INFO:root:XX add new best (1, 8) is not 8 3 3
INFO:root:XX add new best (1, 8) is not 8 3 3
INFO:root:XX add new best (1, 8) is not 8 3 3
INFO:root:XX add new best (1, 8) is not 8 3 3
INFO:root:XX add new best (1, 8) is not 8 3 3
INFO:root:XX add new best (1, 8) is not 8 3 3
INFO:root:XX add new best (1, 8) is not 8 3 3
INFO:root:XX add new best (1, 8) is not 8 3 3
INFO:root:XX add new best (1, 8) is not 8 3 3
INFO:root:XX add new best (1, 8) is not 8 3 3
INFO:root:XX add new best (1, 8) is not 8 3 3
INFO:root:XX add new best (1, 8) is not 8 3 3
INFO:root:XX add new best (1, 8) is not 8 3 3
INFO:root:XX add new best (1, 8) is not 8 3 3
INFO:root:XX add new best (1, 8) is not 8 3 3
INFO:root:XX add new best (1, 8) is not 8 3 3
INFO:root:XX add new best (1, 8) is not 8 3 3
INFO:root:XX add new best (1, 8) is not 8 3 3
INFO:root:XX add new best (1, 8) is not 8 3 3
INFO:root:XX add new best (1, 8) is not 8 3 3
INFO:root:XX add new best (1, 8) is not 8 3 3
INFO:root:XX add new best (1, 8) is not 8 3 3
INFO:root:XX add new best (1, 8) is not 8 3 3
INFO:root:XX add new best (1, 8) is not 8 3 3
INFO:root:XX add new best (1, 8) is not 8 3 3
INFO:root:XX add new best (1, 8) is not 8 3 3
INFO:root:XX add new best (1, 8) is not 8 3 3
INFO:root:XX add new best (1, 8) is not 8 3 3
INFO:root:XX add new best (1, 8) is not 8 3 3
INFO:root:XX add new best (1, 8) is not 8 3 3
INFO:root:XX add new best (1, 8) is not 8 3 3
INFO:root:XX add new best (1, 8) is not 8 3 3
INFO:root:XX add new best (1, 8) is not 8 3 3
INFO:root:Trace: [(3, [(1, 8) is not 8])]
INFO:root:Trace Quality: [(3, 1)]
INFO:root:Trace Sorted: [(3, 1)]
INFO:root:Finished
INFO:root:Full Trace [(3, [(1, 8) is not 8])]
INFO:root:Trying {'prechopMUSes': True}
INFO:root:Starting Step 1
INFO:root:Current state [[[[7, 9], [3], [2], [4, 7, 8], [4, 5, 7, 8], [6], [1], [4, 5, 8, 9], [7, 8]], [[4], [1], [5, 6, 9], [2, 3, 7, 8], [3, 5, 7, 8], [2, 3, 5], [3, 7, 9], [3, 5, 8, 9], [3, 6, 7, 8]], [[6, 7], [8], [5, 6], [9], [3, 4, 5, 7], [1], [2, 3, 4, 7], [2, 3, 4, 5], [2, 3, 6, 7]], [[5], [2, 7], [1, 8], [1, 6], [9], [3, 7], [2, 3, 6], [2, 3, 8], [4]], [[2, 9], [6], [4, 9], [3, 4, 8], [3, 4, 5, 8], [3, 4, 5], [2, 3, 9], [7], [1]], [[3], [4, 7], [1, 8], [1, 6], [2], [4, 7], [6, 9], [8, 9], [5]], [[1, 2, 6], [9], [3, 6], [5], [1, 3, 6], [8], [2, 3, 4, 7], [2, 3, 4], [2, 3, 7]], [[8], [2, 4], [3, 4, 6], [2, 3, 7], [3, 6, 7], [2, 3], [5], [1], [9]], [[1, 2], [5], [7], [2, 3, 4], [1, 3, 4], [9], [8], [6], [2, 3]]]]
INFO:root:Doing checkSmall1
INFO:root:Getting tiny MUSes, distance 1, for 1 puzlits, 1 repeats
INFO:root:Chunked 1 in [1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
INFO:root:Doing checkSmall2
INFO:root:Getting tiny MUSes, distance 2, for 1 puzlits, 1 repeats
INFO:root:Chunked 1 in [1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
INFO:root:Considering 100 * 1 jobs for minsize=3
INFO:root:Chunked 100 in [9, 9, 9, 9, 8, 8, 8, 8, 8, 8, 8, 8]
INFO:root:XX found first (1, 8) is not 8 3
INFO:root:XX add new best (1, 8) is not 8 3 3
INFO:root:XX add new best (1, 8) is not 8 3 3
INFO:root:XX add new best (1, 8) is not 8 3 3
INFO:root:XX add new best (1, 8) is not 8 3 3
INFO:root:XX add new best (1, 8) is not 8 3 3
INFO:root:XX add new best (1, 8) is not 8 3 3
INFO:root:XX add new best (1, 8) is not 8 3 3
INFO:root:XX add new best (1, 8) is not 8 3 3
INFO:root:XX add new best (1, 8) is not 8 3 3
INFO:root:XX add new best (1, 8) is not 8 3 3
INFO:root:XX add new best (1, 8) is not 8 3 3
INFO:root:XX add new best (1, 8) is not 8 3 3
INFO:root:XX add new best (1, 8) is not 8 3 3
INFO:root:XX add new best (1, 8) is not 8 3 3
INFO:root:XX add new best (1, 8) is not 8 3 3
INFO:root:XX add new best (1, 8) is not 8 3 3
INFO:root:XX add new best (1, 8) is not 8 3 3
INFO:root:XX add new best (1, 8) is not 8 3 3
INFO:root:XX add new best (1, 8) is not 8 3 3
INFO:root:XX add new best (1, 8) is not 8 3 3
INFO:root:XX add new best (1, 8) is not 8 3 3
INFO:root:XX add new best (1, 8) is not 8 3 3
INFO:root:XX add new best (1, 8) is not 8 3 3
INFO:root:XX add new best (1, 8) is not 8 3 3
INFO:root:XX add new best (1, 8) is not 8 3 3
INFO:root:XX add new best (1, 8) is not 8 3 3
INFO:root:XX add new best (1, 8) is not 8 3 3
INFO:root:XX add new best (1, 8) is not 8 3 3
INFO:root:XX add new best (1, 8) is not 8 3 3
INFO:root:XX add new best (1, 8) is not 8 3 3
INFO:root:XX add new best (1, 8) is not 8 3 3
INFO:root:XX add new best (1, 8) is not 8 3 3
INFO:root:XX add new best (1, 8) is not 8 3 3
INFO:root:XX add new best (1, 8) is not 8 3 3
INFO:root:XX add new best (1, 8) is not 8 3 3
INFO:root:XX add new best (1, 8) is not 8 3 3
INFO:root:XX add new best (1, 8) is not 8 3 3
INFO:root:XX add new best (1, 8) is not 8 3 3
INFO:root:XX add new best (1, 8) is not 8 3 3
INFO:root:XX add new best (1, 8) is not 8 3 3
INFO:root:XX add new best (1, 8) is not 8 3 3
INFO:root:XX add new best (1, 8) is not 8 3 3
INFO:root:XX add new best (1, 8) is not 8 3 3
INFO:root:XX add new best (1, 8) is not 8 3 3
INFO:root:XX add new best (1, 8) is not 8 3 3
INFO:root:XX add new best (1, 8) is not 8 3 3
INFO:root:XX add new best (1, 8) is not 8 3 3
INFO:root:XX add new best (1, 8) is not 8 3 3
INFO:root:XX add new best (1, 8) is not 8 3 3
INFO:root:XX add new best (1, 8) is not 8 3 3
INFO:root:XX add new best (1, 8) is not 8 3 3
INFO:root:XX add new best (1, 8) is not 8 3 3
INFO:root:XX add new best (1, 8) is not 8 3 3
INFO:root:Trace: [(3, [(1, 8) is not 8])]
INFO:root:Trace Quality: [(3, 1)]
INFO:root:Trace Sorted: [(3, 1)]
INFO:root:Finished
INFO:root:Full Trace [(3, [(1, 8) is not 8])]
INFO:root:Trying {'quarterChopMUS': True}
INFO:root:Starting Step 1
INFO:root:Current state [[[[7, 9], [3], [2], [4, 7, 8], [4, 5, 7, 8], [6], [1], [4, 5, 8, 9], [7, 8]], [[4], [1], [5, 6, 9], [2, 3, 7, 8], [3, 5, 7, 8], [2, 3, 5], [3, 7, 9], [3, 5, 8, 9], [3, 6, 7, 8]], [[6, 7], [8], [5, 6], [9], [3, 4, 5, 7], [1], [2, 3, 4, 7], [2, 3, 4, 5], [2, 3, 6, 7]], [[5], [2, 7], [1, 8], [1, 6], [9], [3, 7], [2, 3, 6], [2, 3, 8], [4]], [[2, 9], [6], [4, 9], [3, 4, 8], [3, 4, 5, 8], [3, 4, 5], [2, 3, 9], [7], [1]], [[3], [4, 7], [1, 8], [1, 6], [2], [4, 7], [6, 9], [8, 9], [5]], [[1, 2, 6], [9], [3, 6], [5], [1, 3, 6], [8], [2, 3, 4, 7], [2, 3, 4], [2, 3, 7]], [[8], [2, 4], [3, 4, 6], [2, 3, 7], [3, 6, 7], [2, 3], [5], [1], [9]], [[1, 2], [5], [7], [2, 3, 4], [1, 3, 4], [9], [8], [6], [2, 3]]]]
INFO:root:Doing checkSmall1
INFO:root:Getting tiny MUSes, distance 1, for 1 puzlits, 1 repeats
INFO:root:Chunked 1 in [1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
INFO:root:Doing checkSmall2
INFO:root:Getting tiny MUSes, distance 2, for 1 puzlits, 1 repeats
INFO:root:Chunked 1 in [1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
INFO:root:Considering 100 * 1 jobs for minsize=3
INFO:root:Chunked 100 in [9, 9, 9, 9, 8, 8, 8, 8, 8, 8, 8, 8]
INFO:root:XX found first (1, 8) is not 8 3
INFO:root:XX add new best (1, 8) is not 8 3 3
INFO:root:XX add new best (1, 8) is not 8 3 3
INFO:root:XX add new best (1, 8) is not 8 3 3
INFO:root:XX add new best (1, 8) is not 8 3 3
INFO:root:XX add new best (1, 8) is not 8 3 3
INFO:root:XX add new best (1, 8) is not 8 3 3
INFO:root:XX add new best (1, 8) is not 8 3 3
INFO:root:XX add new best (1, 8) is not 8 3 3
INFO:root:XX add new best (1, 8) is not 8 3 3
INFO:root:XX add new best (1, 8) is not 8 3 3
INFO:root:XX add new best (1, 8) is not 8 3 3
INFO:root:XX add new best (1, 8) is not 8 3 3
INFO:root:XX add new best (1, 8) is not 8 3 3
INFO:root:XX add new best (1, 8) is not 8 3 3
INFO:root:XX add new best (1, 8) is not 8 3 3
INFO:root:XX add new best (1, 8) is not 8 3 3
INFO:root:XX add new best (1, 8) is not 8 3 3
INFO:root:XX add new best (1, 8) is not 8 3 3
INFO:root:XX add new best (1, 8) is not 8 3 3
INFO:root:XX add new best (1, 8) is not 8 3 3
INFO:root:XX add new best (1, 8) is not 8 3 3
INFO:root:XX add new best (1, 8) is not 8 3 3
INFO:root:XX add new best (1, 8) is not 8 3 3
INFO:root:XX add new best (1, 8) is not 8 3 3
INFO:root:XX add new best (1, 8) is not 8 3 3
INFO:root:XX add new best (1, 8) is not 8 3 3
INFO:root:XX add new best (1, 8) is not 8 3 3
INFO:root:XX add new best (1, 8) is not 8 3 3
INFO:root:XX add new best (1, 8) is not 8 3 3
INFO:root:XX add new best (1, 8) is not 8 3 3
INFO:root:XX add new best (1, 8) is not 8 3 3
INFO:root:XX add new best (1, 8) is not 8 3 3
INFO:root:XX add new best (1, 8) is not 8 3 3
INFO:root:XX add new best (1, 8) is not 8 3 3
INFO:root:XX add new best (1, 8) is not 8 3 3
INFO:root:XX add new best (1, 8) is not 8 3 3
INFO:root:XX add new best (1, 8) is not 8 3 3
INFO:root:XX add new best (1, 8) is not 8 3 3
INFO:root:XX add new best (1, 8) is not 8 3 3
INFO:root:XX add new best (1, 8) is not 8 3 3
INFO:root:XX add new best (1, 8) is not 8 3 3
INFO:root:XX add new best (1, 8) is not 8 3 3
INFO:root:XX add new best (1, 8) is not 8 3 3
INFO:root:XX add new best (1, 8) is not 8 3 3
INFO:root:XX add new best (1, 8) is not 8 3 3
INFO:root:XX add new best (1, 8) is not 8 3 3
INFO:root:XX add new best (1, 8) is not 8 3 3
INFO:root:XX add new best (1, 8) is not 8 3 3
INFO:root:XX add new best (1, 8) is not 8 3 3
INFO:root:XX add new best (1, 8) is not 8 3 3
INFO:root:XX add new best (1, 8) is not 8 3 3
INFO:root:XX add new best (1, 8) is not 8 3 3
INFO:root:XX add new best (1, 8) is not 8 3 3
INFO:root:XX add new best (1, 8) is not 8 3 3
INFO:root:XX add new best (1, 8) is not 8 3 3
INFO:root:XX add new best (1, 8) is not 8 3 3
INFO:root:XX add new best (1, 8) is not 8 3 3
INFO:root:XX add new best (1, 8) is not 8 3 3
INFO:root:XX add new best (1, 8) is not 8 3 3
INFO:root:XX add new best (1, 8) is not 8 3 3
INFO:root:XX add new best (1, 8) is not 8 3 3
INFO:root:XX add new best (1, 8) is not 8 3 3
INFO:root:XX add new best (1, 8) is not 8 3 3
INFO:root:XX add new best (1, 8) is not 8 3 3
INFO:root:XX add new best (1, 8) is not 8 3 3
INFO:root:XX add new best (1, 8) is not 8 3 3
INFO:root:Trace: [(3, [(1, 8) is not 8])]
INFO:root:Trace Quality: [(3, 1)]
INFO:root:Trace Sorted: [(3, 1)]
INFO:root:Finished
INFO:root:Full Trace [(3, [(1, 8) is not 8])]
INFO:root:Trying {'minPrecheckMUS': True}
INFO:root:Starting Step 1
INFO:root:Current state [[[[7, 9], [3], [2], [4, 7, 8], [4, 5, 7, 8], [6], [1], [4, 5, 8, 9], [7, 8]], [[4], [1], [5, 6, 9], [2, 3, 7, 8], [3, 5, 7, 8], [2, 3, 5], [3, 7, 9], [3, 5, 8, 9], [3, 6, 7, 8]], [[6, 7], [8], [5, 6], [9], [3, 4, 5, 7], [1], [2, 3, 4, 7], [2, 3, 4, 5], [2, 3, 6, 7]], [[5], [2, 7], [1, 8], [1, 6], [9], [3, 7], [2, 3, 6], [2, 3, 8], [4]], [[2, 9], [6], [4, 9], [3, 4, 8], [3, 4, 5, 8], [3, 4, 5], [2, 3, 9], [7], [1]], [[3], [4, 7], [1, 8], [1, 6], [2], [4, 7], [6, 9], [8, 9], [5]], [[1, 2, 6], [9], [3, 6], [5], [1, 3, 6], [8], [2, 3, 4, 7], [2, 3, 4], [2, 3, 7]], [[8], [2, 4], [3, 4, 6], [2, 3, 7], [3, 6, 7], [2, 3], [5], [1], [9]], [[1, 2], [5], [7], [2, 3, 4], [1, 3, 4], [9], [8], [6], [2, 3]]]]
INFO:root:Doing checkSmall1
INFO:root:Getting tiny MUSes, distance 1, for 1 puzlits, 1 repeats
INFO:root:Chunked 1 in [1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
INFO:root:Doing checkSmall2
INFO:root:Getting tiny MUSes, distance 2, for 1 puzlits, 1 repeats
INFO:root:Chunked 1 in [1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
INFO:root:Considering 100 * 1 jobs for minsize=3
INFO:root:Chunked 100 in [9, 9, 9, 9, 8, 8, 8, 8, 8, 8, 8, 8]
INFO:root:XX found first (1, 8) is not 8 3
INFO:root:XX add new best (1, 8) is not 8 3 3
INFO:root:XX add new best (1, 8) is not 8 3 3
INFO:root:XX add new best (1, 8) is not 8 3 3
INFO:root:XX add new best (1, 8) is not 8 3 3
INFO:root:XX add new best (1, 8) is not 8 3 3
INFO:root:XX add new best (1, 8) is not 8 3 3
INFO:root:XX add new best (1, 8) is not 8 3 3
INFO:root:XX add new best (1, 8) is not 8 3 3
INFO:root:XX add new best (1, 8) is not 8 3 3
INFO:root:XX add new best (1, 8) is not 8 3 3
INFO:root:XX add new best (1, 8) is not 8 3 3
INFO:root:XX add new best (1, 8) is not 8 3 3
INFO:root:XX add new best (1, 8) is not 8 3 3
INFO:root:XX add new best (1, 8) is not 8 3 3
INFO:root:XX add new best (1, 8) is not 8 3 3
INFO:root:XX add new best (1, 8) is not 8 3 3
INFO:root:XX add new best (1, 8) is not 8 3 3
INFO:root:XX add new best (1, 8) is not 8 3 3
INFO:root:XX add new best (1, 8) is not 8 3 3
INFO:root:XX add new best (1, 8) is not 8 3 3
INFO:root:XX add new best (1, 8) is not 8 3 3
INFO:root:XX add new best (1, 8) is not 8 3 3
INFO:root:XX add new best (1, 8) is not 8 3 3
INFO:root:XX add new best (1, 8) is not 8 3 3
INFO:root:XX add new best (1, 8) is not 8 3 3
INFO:root:XX add new best (1, 8) is not 8 3 3
INFO:root:XX add new best (1, 8) is not 8 3 3
INFO:root:XX add new best (1, 8) is not 8 3 3
INFO:root:XX add new best (1, 8) is not 8 3 3
INFO:root:XX add new best (1, 8) is not 8 3 3
INFO:root:XX add new best (1, 8) is not 8 3 3
INFO:root:XX add new best (1, 8) is not 8 3 3
INFO:root:XX add new best (1, 8) is not 8 3 3
INFO:root:XX add new best (1, 8) is not 8 3 3
INFO:root:XX add new best (1, 8) is not 8 3 3
INFO:root:XX add new best (1, 8) is not 8 3 3
INFO:root:XX add new best (1, 8) is not 8 3 3
INFO:root:XX add new best (1, 8) is not 8 3 3
INFO:root:XX add new best (1, 8) is not 8 3 3
INFO:root:XX add new best (1, 8) is not 8 3 3
INFO:root:XX add new best (1, 8) is not 8 3 3
INFO:root:XX add new best (1, 8) is not 8 3 3
INFO:root:XX add new best (1, 8) is not 8 3 3
INFO:root:XX add new best (1, 8) is not 8 3 3
INFO:root:XX add new best (1, 8) is not 8 3 3
INFO:root:XX add new best (1, 8) is not 8 3 3
INFO:root:XX add new best (1, 8) is not 8 3 3
INFO:root:XX add new best (1, 8) is not 8 3 3
INFO:root:XX add new best (1, 8) is not 8 3 3
INFO:root:XX add new best (1, 8) is not 8 3 3
INFO:root:XX add new best (1, 8) is not 8 3 3
INFO:root:XX add new best (1, 8) is not 8 3 3
INFO:root:XX add new best (1, 8) is not 8 3 3
INFO:root:XX add new best (1, 8) is not 8 3 3
INFO:root:XX add new best (1, 8) is not 8 3 3
INFO:root:XX add new best (1, 8) is not 8 3 3
INFO:root:XX add new best (1, 8) is not 8 3 3
INFO:root:XX add new best (1, 8) is not 8 3 3
INFO:root:XX add new best (1, 8) is not 8 3 3
INFO:root:XX add new best (1, 8) is not 8 3 3
INFO:root:XX add new best (1, 8) is not 8 3 3
INFO:root:XX add new best (1, 8) is not 8 3 3
INFO:root:XX add new best (1, 8) is not 8 3 3
INFO:root:XX add new best (1, 8) is not 8 3 3
INFO:root:XX add new best (1, 8) is not 8 3 3
INFO:root:XX add new best (1, 8) is not 8 3 3
INFO:root:Trace: [(3, [(1, 8) is not 8])]
INFO:root:Trace Quality: [(3, 1)]
INFO:root:Trace Sorted: [(3, 1)]
INFO:root:Finished
INFO:root:Full Trace [(3, [(1, 8) is not 8])]
INFO:root:Trying {'gallopingMUSes': True}
INFO:root:Starting Step 1
INFO:root:Current state [[[[7, 9], [3], [2], [4, 7, 8], [4, 5, 7, 8], [6], [1], [4, 5, 8, 9], [7, 8]], [[4], [1], [5, 6, 9], [2, 3, 7, 8], [3, 5, 7, 8], [2, 3, 5], [3, 7, 9], [3, 5, 8, 9], [3, 6, 7, 8]], [[6, 7], [8], [5, 6], [9], [3, 4, 5, 7], [1], [2, 3, 4, 7], [2, 3, 4, 5], [2, 3, 6, 7]], [[5], [2, 7], [1, 8], [1, 6], [9], [3, 7], [2, 3, 6], [2, 3, 8], [4]], [[2, 9], [6], [4, 9], [3, 4, 8], [3, 4, 5, 8], [3, 4, 5], [2, 3, 9], [7], [1]], [[3], [4, 7], [1, 8], [1, 6], [2], [4, 7], [6, 9], [8, 9], [5]], [[1, 2, 6], [9], [3, 6], [5], [1, 3, 6], [8], [2, 3, 4, 7], [2, 3, 4], [2, 3, 7]], [[8], [2, 4], [3, 4, 6], [2, 3, 7], [3, 6, 7], [2, 3], [5], [1], [9]], [[1, 2], [5], [7], [2, 3, 4], [1, 3, 4], [9], [8], [6], [2, 3]]]]
INFO:root:Doing checkSmall1
INFO:root:Getting tiny MUSes, distance 1, for 1 puzlits, 1 repeats
INFO:root:Chunked 1 in [1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
INFO:root:Doing checkSmall2
INFO:root:Getting tiny MUSes, distance 2, for 1 puzlits, 1 repeats
INFO:root:Chunked 1 in [1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
INFO:root:Considering 100 * 1 jobs for minsize=3
INFO:root:Chunked 100 in [9, 9, 9, 9, 8, 8, 8, 8, 8, 8, 8, 8]
INFO:root:XX found first (1, 8) is not 8 3
INFO:root:XX add new best (1, 8) is not 8 3 3
INFO:root:XX add new best (1, 8) is not 8 3 3
INFO:root:XX add new best (1, 8) is not 8 3 3
INFO:root:XX add new best (1, 8) is not 8 3 3
INFO:root:XX add new best (1, 8) is not 8 3 3
INFO:root:XX add new best (1, 8) is not 8 3 3
INFO:root:XX add new best (1, 8) is not 8 3 3
INFO:root:XX add new best (1, 8) is not 8 3 3
INFO:root:XX add new best (1, 8) is not 8 3 3
INFO:root:XX add new best (1, 8) is not 8 3 3
INFO:root:XX add new best (1, 8) is not 8 3 3
INFO:root:XX add new best (1, 8) is not 8 3 3
INFO:root:XX add new best (1, 8) is not 8 3 3
INFO:root:XX add new best (1, 8) is not 8 3 3
INFO:root:XX add new best (1, 8) is not 8 3 3
INFO:root:XX add new best (1, 8) is not 8 3 3
INFO:root:XX add new best (1, 8) is not 8 3 3
INFO:root:XX add new best (1, 8) is not 8 3 3
INFO:root:XX add new best (1, 8) is not 8 3 3
INFO:root:XX add new best (1, 8) is not 8 3 3
INFO:root:XX add new best (1, 8) is not 8 3 3
INFO:root:XX add new best (1, 8) is not 8 3 3
INFO:root:XX add new best (1, 8) is not 8 3 3
INFO:root:XX add new best (1, 8) is not 8 3 3
INFO:root:XX add new best (1, 8) is not 8 3 3
INFO:root:XX add new best (1, 8) is not 8 3 3
INFO:root:XX add new best (1, 8) is not 8 3 3
INFO:root:XX add new best (1, 8) is not 8 3 3
INFO:root:XX add new best (1, 8) is not 8 3 3
INFO:root:XX add new best (1, 8) is not 8 3 3
INFO:root:XX add new best (1, 8) is not 8 3 3
INFO:root:XX add new best (1, 8) is not 8 3 3
INFO:root:XX add new best (1, 8) is not 8 3 3
INFO:root:XX add new best (1, 8) is not 8 3 3
INFO:root:XX add new best (1, 8) is not 8 3 3
INFO:root:XX add new best (1, 8) is not 8 3 3
INFO:root:XX add new best (1, 8) is not 8 3 3
INFO:root:XX add new best (1, 8) is not 8 3 3
INFO:root:XX add new best (1, 8) is not 8 3 3
INFO:root:XX add new best (1, 8) is not 8 3 3
INFO:root:XX add new best (1, 8) is not 8 3 3
INFO:root:XX add new best (1, 8) is not 8 3 3
INFO:root:XX add new best (1, 8) is not 8 3 3
INFO:root:XX add new best (1, 8) is not 8 3 3
INFO:root:XX add new best (1, 8) is not 8 3 3
INFO:root:XX add new best (1, 8) is not 8 3 3
INFO:root:XX add new best (1, 8) is not 8 3 3
INFO:root:XX add new best (1, 8) is not 8 3 3
INFO:root:XX add new best (1, 8) is not 8 3 3
INFO:root:XX add new best (1, 8) is not 8 3 3
INFO:root:XX add new best (1, 8) is not 8 3 3
INFO:root:Trace: [(3, [(1, 8) is not 8])]
INFO:root:Trace Quality: [(3, 1)]
INFO:root:Trace Sorted: [(3, 1)]
INFO:root:Finished
INFO:root:Full Trace [(3, [(1, 8) is not 8])]
INFO:root:Trying {'minPrecheckStepsMUS': True}
INFO:root:Starting Step 1
INFO:root:Current state [[[[7, 9], [3], [2], [4, 7, 8], [4, 5, 7, 8], [6], [1], [4, 5, 8, 9], [7, 8]], [[4], [1], [5, 6, 9], [2, 3, 7, 8], [3, 5, 7, 8], [2, 3, 5], [3, 7, 9], [3, 5, 8, 9], [3, 6, 7, 8]], [[6, 7], [8], [5, 6], [9], [3, 4, 5, 7], [1], [2, 3, 4, 7], [2, 3, 4, 5], [2, 3, 6, 7]], [[5], [2, 7], [1, 8], [1, 6], [9], [3, 7], [2, 3, 6], [2, 3, 8], [4]], [[2, 9], [6], [4, 9], [3, 4, 8], [3, 4, 5, 8], [3, 4, 5], [2, 3, 9], [7], [1]], [[3], [4, 7], [1, 8], [1, 6], [2], [4, 7], [6, 9], [8, 9], [5]], [[1, 2, 6], [9], [3, 6], [5], [1, 3, 6], [8], [2, 3, 4, 7], [2, 3, 4], [2, 3, 7]], [[8], [2, 4], [3, 4, 6], [2, 3, 7], [3, 6, 7], [2, 3], [5], [1], [9]], [[1, 2], [5], [7], [2, 3, 4], [1, 3, 4], [9], [8], [6], [2, 3]]]]
INFO:root:Doing checkSmall1
INFO:root:Getting tiny MUSes, distance 1, for 1 puzlits, 1 repeats
INFO:root:Chunked 1 in [1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
INFO:root:Doing checkSmall2
INFO:root:Getting tiny MUSes, distance 2, for 1 puzlits, 1 repeats
INFO:root:Chunked 1 in [1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
INFO:root:Considering 100 * 1 jobs for minsize=3
INFO:root:Chunked 100 in [9, 9, 9, 9, 8, 8, 8, 8, 8, 8, 8, 8]
INFO:root:XX found first (1, 8) is not 8 3
INFO:root:XX add new best (1, 8) is not 8 3 3
INFO:root:XX add new best (1, 8) is not 8 3 3
INFO:root:XX add new best (1, 8) is not 8 3 3
INFO:root:XX add new best (1, 8) is not 8 3 3
INFO:root:XX add new best (1, 8) is not 8 3 3
INFO:root:XX add new best (1, 8) is not 8 3 3
INFO:root:XX add new best (1, 8) is not 8 3 3
INFO:root:XX add new best (1, 8) is not 8 3 3
INFO:root:XX add new best (1, 8) is not 8 3 3
INFO:root:XX add new best (1, 8) is not 8 3 3
INFO:root:XX add new best (1, 8) is not 8 3 3
INFO:root:XX add new best (1, 8) is not 8 3 3
INFO:root:XX add new best (1, 8) is not 8 3 3
INFO:root:XX add new best (1, 8) is not 8 3 3
INFO:root:XX add new best (1, 8) is not 8 3 3
INFO:root:XX add new best (1, 8) is not 8 3 3
INFO:root:XX add new best (1, 8) is not 8 3 3
INFO:root:XX add new best (1, 8) is not 8 3 3
INFO:root:XX add new best (1, 8) is not 8 3 3
INFO:root:XX add new best (1, 8) is not 8 3 3
INFO:root:XX add new best (1, 8) is not 8 3 3
INFO:root:XX add new best (1, 8) is not 8 3 3
INFO:root:XX add new best (1, 8) is not 8 3 3
INFO:root:XX add new best (1, 8) is not 8 3 3
INFO:root:XX add new best (1, 8) is not 8 3 3
INFO:root:XX add new best (1, 8) is not 8 3 3
INFO:root:XX add new best (1, 8) is not 8 3 3
INFO:root:XX add new best (1, 8) is not 8 3 3
INFO:root:XX add new best (1, 8) is not 8 3 3
INFO:root:XX add new best (1, 8) is not 8 3 3
INFO:root:XX add new best (1, 8) is not 8 3 3
INFO:root:XX add new best (1, 8) is not 8 3 3
INFO:root:XX add new best (1, 8) is not 8 3 3
INFO:root:XX add new best (1, 8) is not 8 3 3
INFO:root:XX add new best (1, 8) is not 8 3 3
INFO:root:XX add new best (1, 8) is not 8 3 3
INFO:root:XX add new best (1, 8) is not 8 3 3
INFO:root:XX add new best (1, 8) is not 8 3 3
INFO:root:XX add new best (1, 8) is not 8 3 3
INFO:root:XX add new best (1, 8) is not 8 3 3
INFO:root:XX add new best (1, 8) is not 8 3 3
INFO:root:XX add new best (1, 8) is not 8 3 3
INFO:root:XX add new best (1, 8) is not 8 3 3
INFO:root:XX add new best (1, 8) is not 8 3 3
INFO:root:XX add new best (1, 8) is not 8 3 3
INFO:root:XX add new best (1, 8) is not 8 3 3
INFO:root:XX add new best (1, 8) is not 8 3 3
INFO:root:XX add new best (1, 8) is not 8 3 3
INFO:root:XX add new best (1, 8) is not 8 3 3
INFO:root:XX add new best (1, 8) is not 8 3 3
INFO:root:XX add new best (1, 8) is not 8 3 3
INFO:root:XX add new best (1, 8) is not 8 3 3
INFO:root:XX add new best (1, 8) is not 8 3 3
INFO:root:XX add new best (1, 8) is not 8 3 3
INFO:root:XX add new best (1, 8) is not 8 3 3
INFO:root:XX add new best (1, 8) is not 8 3 3
INFO:root:XX add new best (1, 8) is not 8 3 3
INFO:root:XX add new best (1, 8) is not 8 3 3
INFO:root:XX add new best (1, 8) is not 8 3 3
INFO:root:XX add new best (1, 8) is not 8 3 3
INFO:root:XX add new best (1, 8) is not 8 3 3
INFO:root:XX add new best (1, 8) is not 8 3 3
INFO:root:XX add new best (1, 8) is not 8 3 3
INFO:root:XX add new best (1, 8) is not 8 3 3
INFO:root:XX add new best (1, 8) is not 8 3 3
INFO:root:XX add new best (1, 8) is not 8 3 3
INFO:root:Trace: [(3, [(1, 8) is not 8])]
INFO:root:Trace Quality: [(3, 1)]
INFO:root:Trace Sorted: [(3, 1)]
INFO:root:Finished
INFO:root:Full Trace [(3, [(1, 8) is not 8])]
INFO:root:Trying {'gallopingMUSes': True, 'minPrecheckMUS': True}
INFO:root:Starting Step 1
INFO:root:Current state [[[[7, 9], [3], [2], [4, 7, 8], [4, 5, 7, 8], [6], [1], [4, 5, 8, 9], [7, 8]], [[4], [1], [5, 6, 9], [2, 3, 7, 8], [3, 5, 7, 8], [2, 3, 5], [3, 7, 9], [3, 5, 8, 9], [3, 6, 7, 8]], [[6, 7], [8], [5, 6], [9], [3, 4, 5, 7], [1], [2, 3, 4, 7], [2, 3, 4, 5], [2, 3, 6, 7]], [[5], [2, 7], [1, 8], [1, 6], [9], [3, 7], [2, 3, 6], [2, 3, 8], [4]], [[2, 9], [6], [4, 9], [3, 4, 8], [3, 4, 5, 8], [3, 4, 5], [2, 3, 9], [7], [1]], [[3], [4, 7], [1, 8], [1, 6], [2], [4, 7], [6, 9], [8, 9], [5]], [[1, 2, 6], [9], [3, 6], [5], [1, 3, 6], [8], [2, 3, 4, 7], [2, 3, 4], [2, 3, 7]], [[8], [2, 4], [3, 4, 6], [2, 3, 7], [3, 6, 7], [2, 3], [5], [1], [9]], [[1, 2], [5], [7], [2, 3, 4], [1, 3, 4], [9], [8], [6], [2, 3]]]]
INFO:root:Doing checkSmall1
INFO:root:Getting tiny MUSes, distance 1, for 1 puzlits, 1 repeats
INFO:root:Chunked 1 in [1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
INFO:root:Doing checkSmall2
INFO:root:Getting tiny MUSes, distance 2, for 1 puzlits, 1 repeats
INFO:root:Chunked 1 in [1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
INFO:root:Considering 100 * 1 jobs for minsize=3
INFO:root:Chunked 100 in [9, 9, 9, 9, 8, 8, 8, 8, 8, 8, 8, 8]
INFO:root:XX found first (1, 8) is not 8 3
INFO:root:XX add new best (1, 8) is not 8 3 3
INFO:root:XX add new best (1, 8) is not 8 3 3
INFO:root:XX add new best (1, 8) is not 8 3 3
INFO:root:XX add new best (1, 8) is not 8 3 3
INFO:root:XX add new best (1, 8) is not 8 3 3
INFO:root:XX add new best (1, 8) is not 8 3 3
INFO:root:XX add new best (1, 8) is not 8 3 3
INFO:root:XX add new best (1, 8) is not 8 3 3
INFO:root:XX add new best (1, 8) is not 8 3 3
INFO:root:XX add new best (1, 8) is not 8 3 3
INFO:root:XX add new best (1, 8) is not 8 3 3
INFO:root:XX add new best (1, 8) is not 8 3 3
INFO:root:XX add new best (1, 8) is not 8 3 3
INFO:root:XX add new best (1, 8) is not 8 3 3
INFO:root:XX add new best (1, 8) is not 8 3 3
INFO:root:XX add new best (1, 8) is not 8 3 3
INFO:root:XX add new best (1, 8) is not 8 3 3
INFO:root:XX add new best (1, 8) is not 8 3 3
INFO:root:XX add new best (1, 8) is not 8 3 3
INFO:root:XX add new best (1, 8) is not 8 3 3
INFO:root:XX add new best (1, 8) is not 8 3 3
INFO:root:XX add new best (1, 8) is not 8 3 3
INFO:root:XX add new best (1, 8) is not 8 3 3
INFO:root:XX add new best (1, 8) is not 8 3 3
INFO:root:XX add new best (1, 8) is not 8 3 3
INFO:root:XX add new best (1, 8) is not 8 3 3
INFO:root:XX add new best (1, 8) is not 8 3 3
INFO:root:XX add new best (1, 8) is not 8 3 3
INFO:root:XX add new best (1, 8) is not 8 3 3
INFO:root:XX add new best (1, 8) is not 8 3 3
INFO:root:XX add new best (1, 8) is not 8 3 3
INFO:root:XX add new best (1, 8) is not 8 3 3
INFO:root:XX add new best (1, 8) is not 8 3 3
INFO:root:XX add new best (1, 8) is not 8 3 3
INFO:root:XX add new best (1, 8) is not 8 3 3
INFO:root:XX add new best (1, 8) is not 8 3 3
INFO:root:XX add new best (1, 8) is not 8 3 3
INFO:root:XX add new best (1, 8) is not 8 3 3
INFO:root:XX add new best (1, 8) is not 8 3 3
INFO:root:XX add new best (1, 8) is not 8 3 3
INFO:root:XX add new best (1, 8) is not 8 3 3
INFO:root:XX add new best (1, 8) is not 8 3 3
INFO:root:XX add new best (1, 8) is not 8 3 3
INFO:root:XX add new best (1, 8) is not 8 3 3
INFO:root:XX add new best (1, 8) is not 8 3 3
INFO:root:XX add new best (1, 8) is not 8 3 3
INFO:root:XX add new best (1, 8) is not 8 3 3
INFO:root:XX add new best (1, 8) is not 8 3 3
INFO:root:XX add new best (1, 8) is not 8 3 3
INFO:root:XX add new best (1, 8) is not 8 3 3
INFO:root:XX add new best (1, 8) is not 8 3 3
INFO:root:XX add new best (1, 8) is not 8 3 3
INFO:root:XX add new best (1, 8) is not 8 3 3
INFO:root:XX add new best (1, 8) is not 8 3 3
INFO:root:XX add new best (1, 8) is not 8 3 3
INFO:root:XX add new best (1, 8) is not 8 3 3
INFO:root:XX add new best (1, 8) is not 8 3 3
INFO:root:XX add new best (1, 8) is not 8 3 3
INFO:root:XX add new best (1, 8) is not 8 3 3
INFO:root:XX add new best (1, 8) is not 8 3 3
INFO:root:XX add new best (1, 8) is not 8 3 3
INFO:root:XX add new best (1, 8) is not 8 3 3
INFO:root:XX add new best (1, 8) is not 8 3 3
INFO:root:XX add new best (1, 8) is not 8 3 3
INFO:root:XX add new best (1, 8) is not 8 3 3
INFO:root:XX add new best (1, 8) is not 8 3 3
INFO:root:Trace: [(3, [(1, 8) is not 8])]
INFO:root:Trace Quality: [(3, 1)]
INFO:root:Trace Sorted: [(3, 1)]
INFO:root:Finished
INFO:root:Full Trace [(3, [(1, 8) is not 8])]
INFO:root:Trying {}
INFO:root:Starting Step 1
INFO:root:Current state [[[[9], [3], [1, 4, 7], [4, 7], [5], [1, 8], [2, 4, 6, 7, 8], [1, 2, 4, 6], [1, 2, 6, 7]], [[2], [1, 4, 7], [1, 4, 7], [6], [3], [1, 8], [4, 7, 8], [9], [5]], [[8], [5], [6], [4, 7, 9], [4, 7, 9], [2], [3, 4, 7], [1, 3, 4], [1, 3, 7]], [[4, 6], [2, 9], [3], [1], [8], [4, 6, 9], [5], [7], [2, 6]], [[1, 4, 6, 7], [1, 4, 6, 7], [5], [3, 4, 7], [2], [3, 4, 6, 7], [9], [8], [1, 3, 6]], [[1, 4, 6, 7], [8], [2, 9], [3, 4, 7, 9], [4, 7, 9], [5], [2, 3, 4, 6], [1, 2, 3, 4, 6], [1, 2, 3, 6]], [[3, 4, 6, 7], [2, 4, 6, 7], [2, 4, 7], [8], [4, 7], [3, 4, 7], [1], [5], [9]], [[5], [6, 7, 9], [8], [2], [1], [3, 7, 9], [3, 6, 7], [3, 6], [4]], [[1, 3, 4, 7], [1, 4, 7, 9], [1, 4, 7, 9], [5], [6], [3, 4, 7, 9], [2, 3, 7], [2, 3], [8]]]]
INFO:root:Doing checkSmall1
INFO:root:Getting tiny MUSes, distance 1, for 1 puzlits, 1 repeats
INFO:root:Chunked 1 in [1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
INFO:root:Doing checkSmall2
INFO:root:Getting tiny MUSes, distance 2, for 1 puzlits, 1 repeats
INFO:root:Chunked 1 in [1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
INFO:root:Considering 100 * 1 jobs for minsize=3
INFO:root:Chunked 100 in [9, 9, 9, 9, 8, 8, 8, 8, 8, 8, 8, 8]
INFO:root:XX found first (5, 6) is not 3 4
INFO:root:XX found new best (5, 6) is not 3 4 3
INFO:root:XX add new best (5, 6) is not 3 3 3
INFO:root:XX add new best (5, 6) is not 3 3 3
INFO:root:XX add new best (5, 6) is not 3 3 3
INFO:root:XX add new best (5, 6) is not 3 3 3
INFO:root:XX add new best (5, 6) is not 3 3 3
INFO:root:XX add new best (5, 6) is not 3 3 3
INFO:root:XX add new best (5, 6) is not 3 3 3
INFO:root:XX add new best (5, 6) is not 3 3 3
INFO:root:XX add new best (5, 6) is not 3 3 3
INFO:root:XX add new best (5, 6) is not 3 3 3
INFO:root:XX add new best (5, 6) is not 3 3 3
INFO:root:XX add new best (5, 6) is not 3 3 3
INFO:root:XX add new best (5, 6) is not 3 3 3
INFO:root:XX add new best (5, 6) is not 3 3 3
INFO:root:XX add new best (5, 6) is not 3 3 3
INFO:root:XX add new best (5, 6) is not 3 3 3
INFO:root:XX add new best (5, 6) is not 3 3 3
INFO:root:XX add new best (5, 6) is not 3 3 3
INFO:root:XX add new best (5, 6) is not 3 3 3
INFO:root:Trace: [(3, [(5, 6) is not 3])]
INFO:root:Trace Quality: [(3, 1)]
INFO:root:Trace Sorted: [(3, 1)]
INFO:root:Finished
INFO:root:Full Trace [(3, [(5, 6) is not 3])]
INFO:root:Trying {'prechopMUSes': True}
INFO:root:Starting Step 1
INFO:root:Current state [[[[9], [3], [1, 4, 7], [4, 7], [5], [1, 8], [2, 4, 6, 7, 8], [1, 2, 4, 6], [1, 2, 6, 7]], [[2], [1, 4, 7], [1, 4, 7], [6], [3], [1, 8], [4, 7, 8], [9], [5]], [[8], [5], [6], [4, 7, 9], [4, 7, 9], [2], [3, 4, 7], [1, 3, 4], [1, 3, 7]], [[4, 6], [2, 9], [3], [1], [8], [4, 6, 9], [5], [7], [2, 6]], [[1, 4, 6, 7], [1, 4, 6, 7], [5], [3, 4, 7], [2], [3, 4, 6, 7], [9], [8], [1, 3, 6]], [[1, 4, 6, 7], [8], [2, 9], [3, 4, 7, 9], [4, 7, 9], [5], [2, 3, 4, 6], [1, 2, 3, 4, 6], [1, 2, 3, 6]], [[3, 4, 6, 7], [2, 4, 6, 7], [2, 4, 7], [8], [4, 7], [3, 4, 7], [1], [5], [9]], [[5], [6, 7, 9], [8], [2], [1], [3, 7, 9], [3, 6, 7], [3, 6], [4]], [[1, 3, 4, 7], [1, 4, 7, 9], [1, 4, 7, 9], [5], [6], [3, 4, 7, 9], [2, 3, 7], [2, 3], [8]]]]
INFO:root:Doing checkSmall1
INFO:root:Getting tiny MUSes, distance 1, for 1 puzlits, 1 repeats
INFO:root:Chunked 1 in [1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
INFO:root:Doing checkSmall2
INFO:root:Getting tiny MUSes, distance 2, for 1 puzlits, 1 repeats
INFO:root:Chunked 1 in [1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
INFO:root:Considering 100 * 1 jobs for minsize=3
INFO:root:Chunked 100 in [9, 9, 9, 9, 8, 8, 8, 8, 8, 8, 8, 8]
INFO:root:XX found first (5, 6) is not 3 3
INFO:root:XX add new best (5, 6) is not 3 3 3
INFO:root:XX add new best (5, 6) is not 3 3 3
INFO:root:XX add new best (5, 6) is not 3 3 3
INFO:root:XX add new best (5, 6) is not 3 3 3
INFO:root:XX add new best (5, 6) is not 3 3 3
INFO:root:XX add new best (5, 6) is not 3 3 3
INFO:root:XX add new best (5, 6) is not 3 3 3
INFO:root:XX add new best (5, 6) is not 3 3 3
INFO:root:XX add new best (5, 6) is not 3 3 3
INFO:root:XX add new best (5, 6) is not 3 3 3
INFO:root:XX add new best (5, 6) is not 3 3 3
INFO:root:XX add new best (5, 6) is not 3 3 3
INFO:root:XX add new best (5, 6) is not 3 3 3
INFO:root:XX add new best (5, 6) is not 3 3 3
INFO:root:XX add new best (5, 6) is not 3 3 3
INFO:root:XX add new best (5, 6) is not 3 3 3
INFO:root:XX add new best (5, 6) is not 3 3 3
INFO:root:XX add new best (5, 6) is not 3 3 3
INFO:root:XX add new best (5, 6) is not 3 3 3
INFO:root:XX add new best (5, 6) is not 3 3 3
INFO:root:XX add new best (5, 6) is not 3 3 3
INFO:root:XX add new best (5, 6) is not 3 3 3
INFO:root:XX add new best (5, 6) is not 3 3 3
INFO:root:XX add new best (5, 6) is not 3 3 3
INFO:root:XX add new best (5, 6) is not 3 3 3
INFO:root:XX add new best (5, 6) is not 3 3 3
INFO:root:XX add new best (5, 6) is not 3 3 3
INFO:root:XX add new best (5, 6) is not 3 3 3
INFO:root:XX add new best (5, 6) is not 3 3 3
INFO:root:XX add new best (5, 6) is not 3 3 3
INFO:root:XX add new best (5, 6) is not 3 3 3
INFO:root:XX add new best (5, 6) is not 3 3 3
INFO:root:XX add new best (5, 6) is not 3 3 3
INFO:root:XX add new best (5, 6) is not 3 3 3
INFO:root:XX add new best (5, 6) is not 3 3 3
INFO:root:XX add new best (5, 6) is not 3 3 3
INFO:root:XX add new best (5, 6) is not 3 3 3
INFO:root:XX add new best (5, 6) is not 3 3 3
INFO:root:XX add new best (5, 6) is not 3 3 3
INFO:root:XX add new best (5, 6) is not 3 3 3
INFO:root:XX add new best (5, 6) is not 3 3 3
INFO:root:XX add new best (5, 6) is not 3 3 3
INFO:root:XX add new best (5, 6) is not 3 3 3
INFO:root:XX add new best (5, 6) is not 3 3 3
INFO:root:Trace: [(3, [(5, 6) is not 3])]
INFO:root:Trace Quality: [(3, 1)]
INFO:root:Trace Sorted: [(3, 1)]
INFO:root:Finished
INFO:root:Full Trace [(3, [(5, 6) is not 3])]
INFO:root:Trying {'quarterChopMUS': True}
INFO:root:Starting Step 1
INFO:root:Current state [[[[9], [3], [1, 4, 7], [4, 7], [5], [1, 8], [2, 4, 6, 7, 8], [1, 2, 4, 6], [1, 2, 6, 7]], [[2], [1, 4, 7], [1, 4, 7], [6], [3], [1, 8], [4, 7, 8], [9], [5]], [[8], [5], [6], [4, 7, 9], [4, 7, 9], [2], [3, 4, 7], [1, 3, 4], [1, 3, 7]], [[4, 6], [2, 9], [3], [1], [8], [4, 6, 9], [5], [7], [2, 6]], [[1, 4, 6, 7], [1, 4, 6, 7], [5], [3, 4, 7], [2], [3, 4, 6, 7], [9], [8], [1, 3, 6]], [[1, 4, 6, 7], [8], [2, 9], [3, 4, 7, 9], [4, 7, 9], [5], [2, 3, 4, 6], [1, 2, 3, 4, 6], [1, 2, 3, 6]], [[3, 4, 6, 7], [2, 4, 6, 7], [2, 4, 7], [8], [4, 7], [3, 4, 7], [1], [5], [9]], [[5], [6, 7, 9], [8], [2], [1], [3, 7, 9], [3, 6, 7], [3, 6], [4]], [[1, 3, 4, 7], [1, 4, 7, 9], [1, 4, 7, 9], [5], [6], [3, 4, 7, 9], [2, 3, 7], [2, 3], [8]]]]
INFO:root:Doing checkSmall1
INFO:root:Getting tiny MUSes, distance 1, for 1 puzlits, 1 repeats
INFO:root:Chunked 1 in [1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
INFO:root:Doing checkSmall2
INFO:root:Getting tiny MUSes, distance 2, for 1 puzlits, 1 repeats
INFO:root:Chunked 1 in [1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
INFO:root:Considering 100 * 1 jobs for minsize=3
INFO:root:Chunked 100 in [9, 9, 9, 9, 8, 8, 8, 8, 8, 8, 8, 8]
INFO:root:XX found first (5, 6) is not 3 3
INFO:root:XX add new best (5, 6) is not 3 3 3
INFO:root:XX add new best (5, 6) is not 3 3 3
INFO:root:XX add new best (5, 6) is not 3 3 3
INFO:root:XX add new best (5, 6) is not 3 3 3
INFO:root:XX add new best (5, 6) is not 3 3 3
INFO:root:XX add new best (5, 6) is not 3 3 3
INFO:root:XX add new best (5, 6) is not 3 3 3
INFO:root:XX add new best (5, 6) is not 3 3 3
INFO:root:XX add new best (5, 6) is not 3 3 3
INFO:root:XX add new best (5, 6) is not 3 3 3
INFO:root:XX add new best (5, 6) is not 3 3 3
INFO:root:XX add new best (5, 6) is not 3 3 3
INFO:root:XX add new best (5, 6) is not 3 3 3
INFO:root:XX add new best (5, 6) is not 3 3 3
INFO:root:XX add new best (5, 6) is not 3 3 3
INFO:root:XX add new best (5, 6) is not 3 3 3
INFO:root:XX add new best (5, 6) is not 3 3 3
INFO:root:XX add new best (5, 6) is not 3 3 3
INFO:root:XX add new best (5, 6) is not 3 3 3
INFO:root:XX add new best (5, 6) is not 3 3 3
INFO:root:XX add new best (5, 6) is not 3 3 3
INFO:root:XX add new best (5, 6) is not 3 3 3
INFO:root:XX add new best (5, 6) is not 3 3 3
INFO:root:XX add new best (5, 6) is not 3 3 3
INFO:root:XX add new best (5, 6) is not 3 3 3
INFO:root:XX add new best (5, 6) is not 3 3 3
INFO:root:XX add new best (5, 6) is not 3 3 3
INFO:root:XX add new best (5, 6) is not 3 3 3
INFO:root:XX add new best (5, 6) is not 3 3 3
INFO:root:XX add new best (5, 6) is not 3 3 3
INFO:root:XX add new best (5, 6) is not 3 3 3
INFO:root:XX add new best (5, 6) is not 3 3 3
INFO:root:XX add new best (5, 6) is not 3 3 3
INFO:root:XX add new best (5, 6) is not 3 3 3
INFO:root:XX add new best (5, 6) is not 3 3 3
INFO:root:XX add new best (5, 6) is not 3 3 3
INFO:root:XX add new best (5, 6) is not 3 3 3
INFO:root:XX add new best (5, 6) is not 3 3 3
INFO:root:XX add new best (5, 6) is not 3 3 3
INFO:root:XX add new best (5, 6) is not 3 3 3
INFO:root:XX add new best (5, 6) is not 3 3 3
INFO:root:XX add new best (5, 6) is not 3 3 3
INFO:root:XX add new best (5, 6) is not 3 3 3
INFO:root:XX add new best (5, 6) is not 3 3 3
INFO:root:XX add new best (5, 6) is not 3 3 3
INFO:root:XX add new best (5, 6) is not 3 3 3
INFO:root:XX add new best (5, 6) is not 3 3 3
INFO:root:XX add new best (5, 6) is not 3 3 3
INFO:root:XX add new best (5, 6) is not 3 3 3
INFO:root:Trace: [(3, [(5, 6) is not 3])]
INFO:root:Trace Quality: [(3, 1)]
INFO:root:Trace Sorted: [(3, 1)]
INFO:root:Finished
INFO:root:Full Trace [(3, [(5, 6) is not 3])]
INFO:root:Trying {'minPrecheckMUS': True}
INFO:root:Starting Step 1
INFO:root:Current state [[[[9], [3], [1, 4, 7], [4, 7], [5], [1, 8], [2, 4, 6, 7, 8], [1, 2, 4, 6], [1, 2, 6, 7]], [[2], [1, 4, 7], [1, 4, 7], [6], [3], [1, 8], [4, 7, 8], [9], [5]], [[8], [5], [6], [4, 7, 9], [4, 7, 9], [2], [3, 4, 7], [1, 3, 4], [1, 3, 7]], [[4, 6], [2, 9], [3], [1], [8], [4, 6, 9], [5], [7], [2, 6]], [[1, 4, 6, 7], [1, 4, 6, 7], [5], [3, 4, 7], [2], [3, 4, 6, 7], [9], [8], [1, 3, 6]], [[1, 4, 6, 7], [8], [2, 9], [3, 4, 7, 9], [4, 7, 9], [5], [2, 3, 4, 6], [1, 2, 3, 4, 6], [1, 2, 3, 6]], [[3, 4, 6, 7], [2, 4, 6, 7], [2, 4, 7], [8], [4, 7], [3, 4, 7], [1], [5], [9]], [[5], [6, 7, 9], [8], [2], [1], [3, 7, 9], [3, 6, 7], [3, 6], [4]], [[1, 3, 4, 7], [1, 4, 7, 9], [1, 4, 7, 9], [5], [6], [3, 4, 7, 9], [2, 3, 7], [2, 3], [8]]]]
INFO:root:Doing checkSmall1
INFO:root:Getting tiny MUSes, distance 1, for 1 puzlits, 1 repeats
INFO:root:Chunked 1 in [1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
INFO:root:Doing checkSmall2
INFO:root:Getting tiny MUSes, distance 2, for 1 puzlits, 1 repeats
INFO:root:Chunked 1 in [1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
INFO:root:Considering 100 * 1 jobs for minsize=3
INFO:root:Chunked 100 in [9, 9, 9, 9, 8, 8, 8, 8, 8, 8, 8, 8]
INFO:root:XX found first (5, 6) is not 3 3
INFO:root:XX add new best (5, 6) is not 3 3 3
INFO:root:XX add new best (5, 6) is not 3 3 3
INFO:root:XX add new best (5, 6) is not 3 3 3
INFO:root:XX add new best (5, 6) is not 3 3 3
INFO:root:XX add new best (5, 6) is not 3 3 3
INFO:root:XX add new best (5, 6) is not 3 3 3
INFO:root:XX add new best (5, 6) is not 3 3 3
INFO:root:XX add new best (5, 6) is not 3 3 3
INFO:root:XX add new best (5, 6) is not 3 3 3
INFO:root:XX add new best (5, 6) is not 3 3 3
INFO:root:XX add new best (5, 6) is not 3 3 3
INFO:root:XX add new best (5, 6) is not 3 3 3
INFO:root:XX add new best (5, 6) is not 3 3 3
INFO:root:XX add new best (5, 6) is not 3 3 3
INFO:root:XX add new best (5, 6) is not 3 3 3
INFO:root:XX add new best (5, 6) is not 3 3 3
INFO:root:XX add new best (5, 6) is not 3 3 3
INFO:root:XX add new best (5, 6) is not 3 3 3
INFO:root:XX add new best (5, 6) is not 3 3 3
INFO:root:XX add new best (5, 6) is not 3 3 3
INFO:root:XX add new best (5, 6) is not 3 3 3
INFO:root:XX add new best (5, 6) is not 3 3 3
INFO:root:XX add new best (5, 6) is not 3 3 3
INFO:root:Trace: [(3, [(5, 6) is not 3])]
INFO:root:Trace Quality: [(3, 1)]
INFO:root:Trace Sorted: [(3, 1)]
INFO:root:Finished
INFO:root:Full Trace [(3, [(5, 6) is not 3])]
INFO:root:Trying {'gallopingMUSes': True}
INFO:root:Starting Step 1
INFO:root:Current state [[[[9], [3], [1, 4, 7], [4, 7], [5], [1, 8], [2, 4, 6, 7, 8], [1, 2, 4, 6], [1, 2, 6, 7]], [[2], [1, 4, 7], [1, 4, 7], [6], [3], [1, 8], [4, 7, 8], [9], [5]], [[8], [5], [6], [4, 7, 9], [4, 7, 9], [2], [3, 4, 7], [1, 3, 4], [1, 3, 7]], [[4, 6], [2, 9], [3], [1], [8], [4, 6, 9], [5], [7], [2, 6]], [[1, 4, 6, 7], [1, 4, 6, 7], [5], [3, 4, 7], [2], [3, 4, 6, 7], [9], [8], [1, 3, 6]], [[1, 4, 6, 7], [8], [2, 9], [3, 4, 7, 9], [4, 7, 9], [5], [2, 3, 4, 6], [1, 2, 3, 4, 6], [1, 2, 3, 6]], [[3, 4, 6, 7], [2, 4, 6, 7], [2, 4, 7], [8], [4, 7], [3, 4, 7], [1], [5], [9]], [[5], [6, 7, 9], [8], [2], [1], [3, 7, 9], [3, 6, 7], [3, 6], [4]], [[1, 3, 4, 7], [1, 4, 7, 9], [1, 4, 7, 9], [5], [6], [3, 4, 7, 9], [2, 3, 7], [2, 3], [8]]]]
INFO:root:Doing checkSmall1
INFO:root:Getting tiny MUSes, distance 1, for 1 puzlits, 1 repeats
INFO:root:Chunked 1 in [1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
INFO:root:Doing checkSmall2
INFO:root:Getting tiny MUSes, distance 2, for 1 puzlits, 1 repeats
INFO:root:Chunked 1 in [1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
INFO:root:Considering 100 * 1 jobs for minsize=3
INFO:root:Chunked 100 in [9, 9, 9, 9, 8, 8, 8, 8, 8, 8, 8, 8]
INFO:root:XX found first (5, 6) is not 3 3
INFO:root:XX add new best (5, 6) is not 3 3 3
INFO:root:XX add new best (5, 6) is not 3 3 3
INFO:root:XX add new best (5, 6) is not 3 3 3
INFO:root:XX add new best (5, 6) is not 3 3 3
INFO:root:XX add new best (5, 6) is not 3 3 3
INFO:root:XX add new best (5, 6) is not 3 3 3
INFO:root:XX add new best (5, 6) is not 3 3 3
INFO:root:XX add new best (5, 6) is not 3 3 3
INFO:root:XX add new best (5, 6) is not 3 3 3
INFO:root:XX add new best (5, 6) is not 3 3 3
INFO:root:XX add new best (5, 6) is not 3 3 3
INFO:root:XX add new best (5, 6) is not 3 3 3
INFO:root:XX add new best (5, 6) is not 3 3 3
INFO:root:XX add new best (5, 6) is not 3 3 3
INFO:root:XX add new best (5, 6) is not 3 3 3
INFO:root:XX add new best (5, 6) is not 3 3 3
INFO:root:XX add new best (5, 6) is not 3 3 3
INFO:root:XX add new best (5, 6) is not 3 3 3
INFO:root:XX add new best (5, 6) is not 3 3 3
INFO:root:XX add new best (5, 6) is not 3 3 3
INFO:root:XX add new best (5, 6) is not 3 3 3
INFO:root:Trace: [(3, [(5, 6) is not 3])]
INFO:root:Trace Quality: [(3, 1)]
INFO:root:Trace Sorted: [(3, 1)]
INFO:root:Finished
INFO:root:Full Trace [(3, [(5, 6) is not 3])]
INFO:root:Trying {'minPrecheckStepsMUS': True}
INFO:root:Starting Step 1
INFO:root:Current state [[[[9], [3], [1, 4, 7], [4, 7], [5], [1, 8], [2, 4, 6, 7, 8], [1, 2, 4, 6], [1, 2, 6, 7]], [[2], [1, 4, 7], [1, 4, 7], [6], [3], [1, 8], [4, 7, 8], [9], [5]], [[8], [5], [6], [4, 7, 9], [4, 7, 9], [2], [3, 4, 7], [1, 3, 4], [1, 3, 7]], [[4, 6], [2, 9], [3], [1], [8], [4, 6, 9], [5], [7], [2, 6]], [[1, 4, 6, 7], [1, 4, 6, 7], [5], [3, 4, 7], [2], [3, 4, 6, 7], [9], [8], [1, 3, 6]], [[1, 4, 6, 7], [8], [2, 9], [3, 4, 7, 9], [4, 7, 9], [5], [2, 3, 4, 6], [1, 2, 3, 4, 6], [1, 2, 3, 6]], [[3, 4, 6, 7], [2, 4, 6, 7], [2, 4, 7], [8], [4, 7], [3, 4, 7], [1], [5], [9]], [[5], [6, 7, 9], [8], [2], [1], [3, 7, 9], [3, 6, 7], [3, 6], [4]], [[1, 3, 4, 7], [1, 4, 7, 9], [1, 4, 7, 9], [5], [6], [3, 4, 7, 9], [2, 3, 7], [2, 3], [8]]]]
INFO:root:Doing checkSmall1
INFO:root:Getting tiny MUSes, distance 1, for 1 puzlits, 1 repeats
INFO:root:Chunked 1 in [1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
INFO:root:Doing checkSmall2
INFO:root:Getting tiny MUSes, distance 2, for 1 puzlits, 1 repeats
INFO:root:Chunked 1 in [1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
INFO:root:Considering 100 * 1 jobs for minsize=3
INFO:root:Chunked 100 in [9, 9, 9, 9, 8, 8, 8, 8, 8, 8, 8, 8]
INFO:root:XX found first (5, 6) is not 3 3
INFO:root:XX add new best (5, 6) is not 3 3 3
INFO:root:XX add new best (5, 6) is not 3 3 3
INFO:root:XX add new best (5, 6) is not 3 3 3
INFO:root:XX add new best (5, 6) is not 3 3 3
INFO:root:XX add new best (5, 6) is not 3 3 3
INFO:root:XX add new best (5, 6) is not 3 3 3
INFO:root:XX add new best (5, 6) is not 3 3 3
INFO:root:XX add new best (5, 6) is not 3 3 3
INFO:root:XX add new best (5, 6) is not 3 3 3
INFO:root:XX add new best (5, 6) is not 3 3 3
INFO:root:XX add new best (5, 6) is not 3 3 3
INFO:root:XX add new best (5, 6) is not 3 3 3
INFO:root:XX add new best (5, 6) is not 3 3 3
INFO:root:XX add new best (5, 6) is not 3 3 3
INFO:root:XX add new best (5, 6) is not 3 3 3
INFO:root:XX add new best (5, 6) is not 3 3 3
INFO:root:XX add new best (5, 6) is not 3 3 3
INFO:root:XX add new best (5, 6) is not 3 3 3
INFO:root:XX add new best (5, 6) is not 3 3 3
INFO:root:XX add new best (5, 6) is not 3 3 3
INFO:root:XX add new best (5, 6) is not 3 3 3
INFO:root:XX add new best (5, 6) is not 3 3 3
INFO:root:XX add new best (5, 6) is not 3 3 3
INFO:root:XX add new best (5, 6) is not 3 3 3
INFO:root:Trace: [(3, [(5, 6) is not 3])]
INFO:root:Trace Quality: [(3, 1)]
INFO:root:Trace Sorted: [(3, 1)]
INFO:root:Finished
INFO:root:Full Trace [(3, [(5, 6) is not 3])]
INFO:root:Trying {'gallopingMUSes': True, 'minPrecheckMUS': True}
INFO:root:Starting Step 1
INFO:root:Current state [[[[9], [3], [1, 4, 7], [4, 7], [5], [1, 8], [2, 4, 6, 7, 8], [1, 2, 4, 6], [1, 2, 6, 7]], [[2], [1, 4, 7], [1, 4, 7], [6], [3], [1, 8], [4, 7, 8], [9], [5]], [[8], [5], [6], [4, 7, 9], [4, 7, 9], [2], [3, 4, 7], [1, 3, 4], [1, 3, 7]], [[4, 6], [2, 9], [3], [1], [8], [4, 6, 9], [5], [7], [2, 6]], [[1, 4, 6, 7], [1, 4, 6, 7], [5], [3, 4, 7], [2], [3, 4, 6, 7], [9], [8], [1, 3, 6]], [[1, 4, 6, 7], [8], [2, 9], [3, 4, 7, 9], [4, 7, 9], [5], [2, 3, 4, 6], [1, 2, 3, 4, 6], [1, 2, 3, 6]], [[3, 4, 6, 7], [2, 4, 6, 7], [2, 4, 7], [8], [4, 7], [3, 4, 7], [1], [5], [9]], [[5], [6, 7, 9], [8], [2], [1], [3, 7, 9], [3, 6, 7], [3, 6], [4]], [[1, 3, 4, 7], [1, 4, 7, 9], [1, 4, 7, 9], [5], [6], [3, 4, 7, 9], [2, 3, 7], [2, 3], [8]]]]
INFO:root:Doing checkSmall1
INFO:root:Getting tiny MUSes, distance 1, for 1 puzlits, 1 repeats
INFO:root:Chunked 1 in [1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
INFO:root:Doing checkSmall2
INFO:root:Getting tiny MUSes, distance 2, for 1 puzlits, 1 repeats
INFO:root:Chunked 1 in [1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
INFO:root:Considering 100 * 1 jobs for minsize=3
INFO:root:Chunked 100 in [9, 9, 9, 9, 8, 8, 8, 8, 8, 8, 8, 8]
INFO:root:XX found first (5, 6) is not 3 4
INFO:root:XX add new best (5, 6) is not 3 4 4
INFO:root:XX found new best (5, 6) is not 3 4 3
INFO:root:XX add new best (5, 6) is not 3 3 3
INFO:root:XX add new best (5, 6) is not 3 3 3
INFO:root:XX add new best (5, 6) is not 3 3 3
INFO:root:XX add new best (5, 6) is not 3 3 3
INFO:root:XX add new best (5, 6) is not 3 3 3
INFO:root:XX add new best (5, 6) is not 3 3 3
INFO:root:XX add new best (5, 6) is not 3 3 3
INFO:root:XX add new best (5, 6) is not 3 3 3
INFO:root:XX add new best (5, 6) is not 3 3 3
INFO:root:XX add new best (5, 6) is not 3 3 3
INFO:root:XX add new best (5, 6) is not 3 3 3
INFO:root:XX add new best (5, 6) is not 3 3 3
INFO:root:XX add new best (5, 6) is not 3 3 3
INFO:root:XX add new best (5, 6) is not 3 3 3
INFO:root:XX add new best (5, 6) is not 3 3 3
INFO:root:XX add new best (5, 6) is not 3 3 3
INFO:root:XX add new best (5, 6) is not 3 3 3
INFO:root:XX add new best (5, 6) is not 3 3 3
INFO:root:XX add new best (5, 6) is not 3 3 3
INFO:root:XX add new best (5, 6) is not 3 3 3
INFO:root:XX add new best (5, 6) is not 3 3 3
INFO:root:XX add new best (5, 6) is not 3 3 3
INFO:root:XX add new best (5, 6) is not 3 3 3
INFO:root:XX add new best (5, 6) is not 3 3 3
INFO:root:Trace: [(3, [(5, 6) is not 3])]
INFO:root:Trace Quality: [(3, 1)]
INFO:root:Trace Sorted: [(3, 1)]
INFO:root:Finished
INFO:root:Full Trace [(3, [(5, 6) is not 3])]
INFO:root:Trying {}
INFO:root:Starting Step 1
INFO:root:Current state [[[[4, 5], [1], [6], [2, 4, 5], [2, 4, 5, 9], [7], [8], [4, 9], [3]], [[3, 4, 5], [9], [2], [8], [3, 4, 5, 6], [3, 4, 5, 6], [1, 4, 7], [4, 7], [1, 4, 5, 7]], [[8], [7], [3, 5], [3, 4, 5], [3, 4, 5, 9], [1], [2], [6], [4, 5, 9]], [[1, 2, 7], [4], [8], [1, 2, 5, 7], [1, 2, 5, 6, 7], [5, 6], [3], [7, 9], [1, 7, 9]], [[6], [5], [1, 7], [1, 3, 4, 7], [1, 3, 4, 7], [9], [1, 4, 7], [8], [2]], [[1, 2, 7], [3], [9], [1, 2, 4, 7], [1, 2, 4, 7, 8], [4, 8], [6], [5], [1, 4, 7]], [[1, 3, 5, 7], [6], [1, 3, 5, 7], [9], [1, 5, 7, 8], [5, 8], [4, 7], [2], [4, 7, 8]], [[1, 5, 7], [8], [1, 5, 7], [1, 4, 5, 7], [1, 4, 5, 7], [2], [9], [3], [6]], [[9], [2], [4], [6], [3, 7, 8], [3, 8], [5], [1], [7, 8]]]]
INFO:root:Doing checkSmall1
INFO:root:Getting tiny MUSes, distance 1, for 1 puzlits, 1 repeats
INFO:root:Chunked 1 in [1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
INFO:root:Doing checkSmall2
INFO:root:Getting tiny MUSes, distance 2, for 1 puzlits, 1 repeats
INFO:root:Chunked 1 in [1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
INFO:root:Considering 100 * 1 jobs for minsize=3
INFO:root:Chunked 100 in [9, 9, 9, 9, 8, 8, 8, 8, 8, 8, 8, 8]
INFO:root:XX found first (2, 7) is not 4 3
INFO:root:XX add new best (2, 7) is not 4 3 3
INFO:root:XX add new best (2, 7) is not 4 3 3
INFO:root:XX add new best (2, 7) is not 4 3 3
INFO:root:XX add new best (2, 7) is not 4 3 3
INFO:root:XX add new best (2, 7) is not 4 3 3
INFO:root:XX add new best (2, 7) is not 4 3 3
INFO:root:XX add new best (2, 7) is not 4 3 3
INFO:root:XX add new best (2, 7) is not 4 3 3
INFO:root:XX add new best (2, 7) is not 4 3 3
INFO:root:XX add new best (2, 7) is not 4 3 3
INFO:root:XX add new best (2, 7) is not 4 3 3
INFO:root:XX add new best (2, 7) is not 4 3 3
INFO:root:XX add new best (2, 7) is not 4 3 3
INFO:root:XX add new best (2, 7) is not 4 3 3
INFO:root:XX add new best (2, 7) is not 4 3 3
INFO:root:XX add new best (2, 7) is not 4 3 3
INFO:root:XX add new best (2, 7) is not 4 3 3
INFO:root:XX add new best (2, 7) is not 4 3 3
INFO:root:XX add new best (2, 7) is not 4 3 3
INFO:root:XX add new best (2, 7) is not 4 3 3
INFO:root:XX add new best (2, 7) is not 4 3 3
INFO:root:XX add new best (2, 7) is not 4 3 3
INFO:root:XX add new best (2, 7) is not 4 3 3
INFO:root:XX add new best (2, 7) is not 4 3 3
INFO:root:XX add new best (2, 7) is not 4 3 3
INFO:root:XX add new best (2, 7) is not 4 3 3
INFO:root:XX add new best (2, 7) is not 4 3 3
INFO:root:XX add new best (2, 7) is not 4 3 3
INFO:root:XX add new best (2, 7) is not 4 3 3
INFO:root:XX add new best (2, 7) is not 4 3 3
INFO:root:XX add new best (2, 7) is not 4 3 3
INFO:root:XX add new best (2, 7) is not 4 3 3
INFO:root:XX add new best (2, 7) is not 4 3 3
INFO:root:XX add new best (2, 7) is not 4 3 3
INFO:root:XX add new best (2, 7) is not 4 3 3
INFO:root:XX add new best (2, 7) is not 4 3 3
INFO:root:XX add new best (2, 7) is not 4 3 3
INFO:root:XX add new best (2, 7) is not 4 3 3
INFO:root:XX add new best (2, 7) is not 4 3 3
INFO:root:XX add new best (2, 7) is not 4 3 3
INFO:root:XX add new best (2, 7) is not 4 3 3
INFO:root:XX add new best (2, 7) is not 4 3 3
INFO:root:XX add new best (2, 7) is not 4 3 3
INFO:root:XX add new best (2, 7) is not 4 3 3
INFO:root:XX add new best (2, 7) is not 4 3 3
INFO:root:XX add new best (2, 7) is not 4 3 3
INFO:root:XX add new best (2, 7) is not 4 3 3
INFO:root:XX add new best (2, 7) is not 4 3 3
INFO:root:XX add new best (2, 7) is not 4 3 3
INFO:root:XX add new best (2, 7) is not 4 3 3
INFO:root:XX add new best (2, 7) is not 4 3 3
INFO:root:XX add new best (2, 7) is not 4 3 3
INFO:root:XX add new best (2, 7) is not 4 3 3
INFO:root:XX add new best (2, 7) is not 4 3 3
INFO:root:XX add new best (2, 7) is not 4 3 3
INFO:root:XX add new best (2, 7) is not 4 3 3
INFO:root:XX add new best (2, 7) is not 4 3 3
INFO:root:XX add new best (2, 7) is not 4 3 3
INFO:root:XX add new best (2, 7) is not 4 3 3
INFO:root:XX add new best (2, 7) is not 4 3 3
INFO:root:XX add new best (2, 7) is not 4 3 3
INFO:root:XX add new best (2, 7) is not 4 3 3
INFO:root:XX add new best (2, 7) is not 4 3 3
INFO:root:XX add new best (2, 7) is not 4 3 3
INFO:root:XX add new best (2, 7) is not 4 3 3
INFO:root:XX add new best (2, 7) is not 4 3 3
INFO:root:XX add new best (2, 7) is not 4 3 3
INFO:root:XX add new best (2, 7) is not 4 3 3
INFO:root:XX add new best (2, 7) is not 4 3 3
INFO:root:XX add new best (2, 7) is not 4 3 3
INFO:root:XX add new best (2, 7) is not 4 3 3
INFO:root:XX add new best (2, 7) is not 4 3 3
INFO:root:XX add new best (2, 7) is not 4 3 3
INFO:root:XX add new best (2, 7) is not 4 3 3
INFO:root:XX add new best (2, 7) is not 4 3 3
INFO:root:XX add new best (2, 7) is not 4 3 3
INFO:root:XX add new best (2, 7) is not 4 3 3
INFO:root:Trace: [(3, [(2, 7) is not 4])]
INFO:root:Trace Quality: [(3, 1)]
INFO:root:Trace Sorted: [(3, 1)]
INFO:root:Finished
INFO:root:Full Trace [(3, [(2, 7) is not 4])]
INFO:root:Trying {'prechopMUSes': True}
INFO:root:Starting Step 1
INFO:root:Current state [[[[4, 5], [1], [6], [2, 4, 5], [2, 4, 5, 9], [7], [8], [4, 9], [3]], [[3, 4, 5], [9], [2], [8], [3, 4, 5, 6], [3, 4, 5, 6], [1, 4, 7], [4, 7], [1, 4, 5, 7]], [[8], [7], [3, 5], [3, 4, 5], [3, 4, 5, 9], [1], [2], [6], [4, 5, 9]], [[1, 2, 7], [4], [8], [1, 2, 5, 7], [1, 2, 5, 6, 7], [5, 6], [3], [7, 9], [1, 7, 9]], [[6], [5], [1, 7], [1, 3, 4, 7], [1, 3, 4, 7], [9], [1, 4, 7], [8], [2]], [[1, 2, 7], [3], [9], [1, 2, 4, 7], [1, 2, 4, 7, 8], [4, 8], [6], [5], [1, 4, 7]], [[1, 3, 5, 7], [6], [1, 3, 5, 7], [9], [1, 5, 7, 8], [5, 8], [4, 7], [2], [4, 7, 8]], [[1, 5, 7], [8], [1, 5, 7], [1, 4, 5, 7], [1, 4, 5, 7], [2], [9], [3], [6]], [[9], [2], [4], [6], [3, 7, 8], [3, 8], [5], [1], [7, 8]]]]
INFO:root:Doing checkSmall1
INFO:root:Getting tiny MUSes, distance 1, for 1 puzlits, 1 repeats
INFO:root:Chunked 1 in [1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
INFO:root:Doing checkSmall2
INFO:root:Getting tiny MUSes, distance 2, for 1 puzlits, 1 repeats
INFO:root:Chunked 1 in [1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
INFO:root:Considering 100 * 1 jobs for minsize=3
INFO:root:Chunked 100 in [9, 9, 9, 9, 8, 8, 8, 8, 8, 8, 8, 8]
INFO:root:XX found first (2, 7) is not 4 3
INFO:root:XX add new best (2, 7) is not 4 3 3
INFO:root:XX add new best (2, 7) is not 4 3 3
INFO:root:XX add new best (2, 7) is not 4 3 3
INFO:root:XX add new best (2, 7) is not 4 3 3
INFO:root:XX add new best (2, 7) is not 4 3 3
INFO:root:XX add new best (2, 7) is not 4 3 3
INFO:root:XX add new best (2, 7) is not 4 3 3
INFO:root:XX add new best (2, 7) is not 4 3 3
INFO:root:XX add new best (2, 7) is not 4 3 3
INFO:root:XX add new best (2, 7) is not 4 3 3
INFO:root:XX add new best (2, 7) is not 4 3 3
INFO:root:XX add new best (2, 7) is not 4 3 3
INFO:root:XX add new best (2, 7) is not 4 3 3
INFO:root:XX add new best (2, 7) is not 4 3 3
INFO:root:XX add new best (2, 7) is not 4 3 3
INFO:root:XX add new best (2, 7) is not 4 3 3
INFO:root:XX add new best (2, 7) is not 4 3 3
INFO:root:XX add new best (2, 7) is not 4 3 3
INFO:root:XX add new best (2, 7) is not 4 3 3
INFO:root:XX add new best (2, 7) is not 4 3 3
INFO:root:XX add new best (2, 7) is not 4 3 3
INFO:root:XX add new best (2, 7) is not 4 3 3
INFO:root:XX add new best (2, 7) is not 4 3 3
INFO:root:XX add new best (2, 7) is not 4 3 3
INFO:root:XX add new best (2, 7) is not 4 3 3
INFO:root:XX add new best (2, 7) is not 4 3 3
INFO:root:XX add new best (2, 7) is not 4 3 3
INFO:root:XX add new best (2, 7) is not 4 3 3
INFO:root:XX add new best (2, 7) is not 4 3 3
INFO:root:XX add new best (2, 7) is not 4 3 3
INFO:root:XX add new best (2, 7) is not 4 3 3
INFO:root:Trace: [(3, [(2, 7) is not 4])]
INFO:root:Trace Quality: [(3, 1)]
INFO:root:Trace Sorted: [(3, 1)]
INFO:root:Finished
INFO:root:Full Trace [(3, [(2, 7) is not 4])]
INFO:root:Trying {'quarterChopMUS': True}
INFO:root:Starting Step 1
INFO:root:Current state [[[[4, 5], [1], [6], [2, 4, 5], [2, 4, 5, 9], [7], [8], [4, 9], [3]], [[3, 4, 5], [9], [2], [8], [3, 4, 5, 6], [3, 4, 5, 6], [1, 4, 7], [4, 7], [1, 4, 5, 7]], [[8], [7], [3, 5], [3, 4, 5], [3, 4, 5, 9], [1], [2], [6], [4, 5, 9]], [[1, 2, 7], [4], [8], [1, 2, 5, 7], [1, 2, 5, 6, 7], [5, 6], [3], [7, 9], [1, 7, 9]], [[6], [5], [1, 7], [1, 3, 4, 7], [1, 3, 4, 7], [9], [1, 4, 7], [8], [2]], [[1, 2, 7], [3], [9], [1, 2, 4, 7], [1, 2, 4, 7, 8], [4, 8], [6], [5], [1, 4, 7]], [[1, 3, 5, 7], [6], [1, 3, 5, 7], [9], [1, 5, 7, 8], [5, 8], [4, 7], [2], [4, 7, 8]], [[1, 5, 7], [8], [1, 5, 7], [1, 4, 5, 7], [1, 4, 5, 7], [2], [9], [3], [6]], [[9], [2], [4], [6], [3, 7, 8], [3, 8], [5], [1], [7, 8]]]]
INFO:root:Doing checkSmall1
INFO:root:Getting tiny MUSes, distance 1, for 1 puzlits, 1 repeats
INFO:root:Chunked 1 in [1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
INFO:root:Doing checkSmall2
INFO:root:Getting tiny MUSes, distance 2, for 1 puzlits, 1 repeats
INFO:root:Chunked 1 in [1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
INFO:root:Considering 100 * 1 jobs for minsize=3
INFO:root:Chunked 100 in [9, 9, 9, 9, 8, 8, 8, 8, 8, 8, 8, 8]
INFO:root:XX found first (2, 7) is not 4 3
INFO:root:XX add new best (2, 7) is not 4 3 3
INFO:root:XX add new best (2, 7) is not 4 3 3
INFO:root:XX add new best (2, 7) is not 4 3 3
INFO:root:XX add new best (2, 7) is not 4 3 3
INFO:root:XX add new best (2, 7) is not 4 3 3
INFO:root:XX add new best (2, 7) is not 4 3 3
INFO:root:XX add new best (2, 7) is not 4 3 3
INFO:root:XX add new best (2, 7) is not 4 3 3
INFO:root:XX add new best (2, 7) is not 4 3 3
INFO:root:XX add new best (2, 7) is not 4 3 3
INFO:root:XX add new best (2, 7) is not 4 3 3
INFO:root:XX add new best (2, 7) is not 4 3 3
INFO:root:XX add new best (2, 7) is not 4 3 3
INFO:root:XX add new best (2, 7) is not 4 3 3
INFO:root:XX add new best (2, 7) is not 4 3 3
INFO:root:XX add new best (2, 7) is not 4 3 3
INFO:root:XX add new best (2, 7) is not 4 3 3
INFO:root:XX add new best (2, 7) is not 4 3 3
INFO:root:XX add new best (2, 7) is not 4 3 3
INFO:root:XX add new best (2, 7) is not 4 3 3
INFO:root:XX add new best (2, 7) is not 4 3 3
INFO:root:XX add new best (2, 7) is not 4 3 3
INFO:root:XX add new best (2, 7) is not 4 3 3
INFO:root:XX add new best (2, 7) is not 4 3 3
INFO:root:XX add new best (2, 7) is not 4 3 3
INFO:root:XX add new best (2, 7) is not 4 3 3
INFO:root:XX add new best (2, 7) is not 4 3 3
INFO:root:XX add new best (2, 7) is not 4 3 3
INFO:root:XX add new best (2, 7) is not 4 3 3
INFO:root:XX add new best (2, 7) is not 4 3 3
INFO:root:XX add new best (2, 7) is not 4 3 3
INFO:root:XX add new best (2, 7) is not 4 3 3
INFO:root:XX add new best (2, 7) is not 4 3 3
INFO:root:XX add new best (2, 7) is not 4 3 3
INFO:root:XX add new best (2, 7) is not 4 3 3
INFO:root:XX add new best (2, 7) is not 4 3 3
INFO:root:XX add new best (2, 7) is not 4 3 3
INFO:root:Trace: [(3, [(2, 7) is not 4])]
INFO:root:Trace Quality: [(3, 1)]
INFO:root:Trace Sorted: [(3, 1)]
INFO:root:Finished
INFO:root:Full Trace [(3, [(2, 7) is not 4])]
INFO:root:Trying {'minPrecheckMUS': True}
INFO:root:Starting Step 1
INFO:root:Current state [[[[4, 5], [1], [6], [2, 4, 5], [2, 4, 5, 9], [7], [8], [4, 9], [3]], [[3, 4, 5], [9], [2], [8], [3, 4, 5, 6], [3, 4, 5, 6], [1, 4, 7], [4, 7], [1, 4, 5, 7]], [[8], [7], [3, 5], [3, 4, 5], [3, 4, 5, 9], [1], [2], [6], [4, 5, 9]], [[1, 2, 7], [4], [8], [1, 2, 5, 7], [1, 2, 5, 6, 7], [5, 6], [3], [7, 9], [1, 7, 9]], [[6], [5], [1, 7], [1, 3, 4, 7], [1, 3, 4, 7], [9], [1, 4, 7], [8], [2]], [[1, 2, 7], [3], [9], [1, 2, 4, 7], [1, 2, 4, 7, 8], [4, 8], [6], [5], [1, 4, 7]], [[1, 3, 5, 7], [6], [1, 3, 5, 7], [9], [1, 5, 7, 8], [5, 8], [4, 7], [2], [4, 7, 8]], [[1, 5, 7], [8], [1, 5, 7], [1, 4, 5, 7], [1, 4, 5, 7], [2], [9], [3], [6]], [[9], [2], [4], [6], [3, 7, 8], [3, 8], [5], [1], [7, 8]]]]
INFO:root:Doing checkSmall1
INFO:root:Getting tiny MUSes, distance 1, for 1 puzlits, 1 repeats
INFO:root:Chunked 1 in [1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
INFO:root:Doing checkSmall2
INFO:root:Getting tiny MUSes, distance 2, for 1 puzlits, 1 repeats
INFO:root:Chunked 1 in [1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
INFO:root:Considering 100 * 1 jobs for minsize=3
INFO:root:Chunked 100 in [9, 9, 9, 9, 8, 8, 8, 8, 8, 8, 8, 8]
INFO:root:XX found first (2, 7) is not 4 3
INFO:root:XX add new best (2, 7) is not 4 3 3
INFO:root:XX add new best (2, 7) is not 4 3 3
INFO:root:XX add new best (2, 7) is not 4 3 3
INFO:root:XX add new best (2, 7) is not 4 3 3
INFO:root:XX add new best (2, 7) is not 4 3 3
INFO:root:XX add new best (2, 7) is not 4 3 3
INFO:root:XX add new best (2, 7) is not 4 3 3
INFO:root:XX add new best (2, 7) is not 4 3 3
INFO:root:XX add new best (2, 7) is not 4 3 3
INFO:root:XX add new best (2, 7) is not 4 3 3
INFO:root:XX add new best (2, 7) is not 4 3 3
INFO:root:XX add new best (2, 7) is not 4 3 3
INFO:root:XX add new best (2, 7) is not 4 3 3
INFO:root:XX add new best (2, 7) is not 4 3 3
INFO:root:XX add new best (2, 7) is not 4 3 3
INFO:root:XX add new best (2, 7) is not 4 3 3
INFO:root:XX add new best (2, 7) is not 4 3 3
INFO:root:XX add new best (2, 7) is not 4 3 3
INFO:root:XX add new best (2, 7) is not 4 3 3
INFO:root:XX add new best (2, 7) is not 4 3 3
INFO:root:XX add new best (2, 7) is not 4 3 3
INFO:root:XX add new best (2, 7) is not 4 3 3
INFO:root:XX add new best (2, 7) is not 4 3 3
INFO:root:XX add new best (2, 7) is not 4 3 3
INFO:root:XX add new best (2, 7) is not 4 3 3
INFO:root:XX add new best (2, 7) is not 4 3 3
INFO:root:XX add new best (2, 7) is not 4 3 3
INFO:root:XX add new best (2, 7) is not 4 3 3
INFO:root:XX add new best (2, 7) is not 4 3 3
INFO:root:XX add new best (2, 7) is not 4 3 3
INFO:root:Trace: [(3, [(2, 7) is not 4])]
INFO:root:Trace Quality: [(3, 1)]
INFO:root:Trace Sorted: [(3, 1)]
INFO:root:Finished
INFO:root:Full Trace [(3, [(2, 7) is not 4])]
INFO:root:Trying {'gallopingMUSes': True}
INFO:root:Starting Step 1
INFO:root:Current state [[[[4, 5], [1], [6], [2, 4, 5], [2, 4, 5, 9], [7], [8], [4, 9], [3]], [[3, 4, 5], [9], [2], [8], [3, 4, 5, 6], [3, 4, 5, 6], [1, 4, 7], [4, 7], [1, 4, 5, 7]], [[8], [7], [3, 5], [3, 4, 5], [3, 4, 5, 9], [1], [2], [6], [4, 5, 9]], [[1, 2, 7], [4], [8], [1, 2, 5, 7], [1, 2, 5, 6, 7], [5, 6], [3], [7, 9], [1, 7, 9]], [[6], [5], [1, 7], [1, 3, 4, 7], [1, 3, 4, 7], [9], [1, 4, 7], [8], [2]], [[1, 2, 7], [3], [9], [1, 2, 4, 7], [1, 2, 4, 7, 8], [4, 8], [6], [5], [1, 4, 7]], [[1, 3, 5, 7], [6], [1, 3, 5, 7], [9], [1, 5, 7, 8], [5, 8], [4, 7], [2], [4, 7, 8]], [[1, 5, 7], [8], [1, 5, 7], [1, 4, 5, 7], [1, 4, 5, 7], [2], [9], [3], [6]], [[9], [2], [4], [6], [3, 7, 8], [3, 8], [5], [1], [7, 8]]]]
INFO:root:Doing checkSmall1
INFO:root:Getting tiny MUSes, distance 1, for 1 puzlits, 1 repeats
INFO:root:Chunked 1 in [1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
INFO:root:Doing checkSmall2
INFO:root:Getting tiny MUSes, distance 2, for 1 puzlits, 1 repeats
INFO:root:Chunked 1 in [1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
INFO:root:Considering 100 * 1 jobs for minsize=3
INFO:root:Chunked 100 in [9, 9, 9, 9, 8, 8, 8, 8, 8, 8, 8, 8]
INFO:root:XX found first (2, 7) is not 4 3
INFO:root:XX add new best (2, 7) is not 4 3 3
INFO:root:XX add new best (2, 7) is not 4 3 3
INFO:root:XX add new best (2, 7) is not 4 3 3
INFO:root:XX add new best (2, 7) is not 4 3 3
INFO:root:XX add new best (2, 7) is not 4 3 3
INFO:root:XX add new best (2, 7) is not 4 3 3
INFO:root:XX add new best (2, 7) is not 4 3 3
INFO:root:XX add new best (2, 7) is not 4 3 3
INFO:root:XX add new best (2, 7) is not 4 3 3
INFO:root:XX add new best (2, 7) is not 4 3 3
INFO:root:XX add new best (2, 7) is not 4 3 3
INFO:root:XX add new best (2, 7) is not 4 3 3
INFO:root:XX add new best (2, 7) is not 4 3 3
INFO:root:XX add new best (2, 7) is not 4 3 3
INFO:root:XX add new best (2, 7) is not 4 3 3
INFO:root:XX add new best (2, 7) is not 4 3 3
INFO:root:XX add new best (2, 7) is not 4 3 3
INFO:root:XX add new best (2, 7) is not 4 3 3
INFO:root:XX add new best (2, 7) is not 4 3 3
INFO:root:XX add new best (2, 7) is not 4 3 3
INFO:root:XX add new best (2, 7) is not 4 3 3
INFO:root:XX add new best (2, 7) is not 4 3 3
INFO:root:XX add new best (2, 7) is not 4 3 3
INFO:root:XX add new best (2, 7) is not 4 3 3
INFO:root:XX add new best (2, 7) is not 4 3 3
INFO:root:XX add new best (2, 7) is not 4 3 3
INFO:root:XX add new best (2, 7) is not 4 3 3
INFO:root:Trace: [(3, [(2, 7) is not 4])]
INFO:root:Trace Quality: [(3, 1)]
INFO:root:Trace Sorted: [(3, 1)]
INFO:root:Finished
INFO:root:Full Trace [(3, [(2, 7) is not 4])]
INFO:root:Trying {'minPrecheckStepsMUS': True}
INFO:root:Starting Step 1
INFO:root:Current state [[[[4, 5], [1], [6], [2, 4, 5], [2, 4, 5, 9], [7], [8], [4, 9], [3]], [[3, 4, 5], [9], [2], [8], [3, 4, 5, 6], [3, 4, 5, 6], [1, 4, 7], [4, 7], [1, 4, 5, 7]], [[8], [7], [3, 5], [3, 4, 5], [3, 4, 5, 9], [1], [2], [6], [4, 5, 9]], [[1, 2, 7], [4], [8], [1, 2, 5, 7], [1, 2, 5, 6, 7], [5, 6], [3], [7, 9], [1, 7, 9]], [[6], [5], [1, 7], [1, 3, 4, 7], [1, 3, 4, 7], [9], [1, 4, 7], [8], [2]], [[1, 2, 7], [3], [9], [1, 2, 4, 7], [1, 2, 4, 7, 8], [4, 8], [6], [5], [1, 4, 7]], [[1, 3, 5, 7], [6], [1, 3, 5, 7], [9], [1, 5, 7, 8], [5, 8], [4, 7], [2], [4, 7, 8]], [[1, 5, 7], [8], [1, 5, 7], [1, 4, 5, 7], [1, 4, 5, 7], [2], [9], [3], [6]], [[9], [2], [4], [6], [3, 7, 8], [3, 8], [5], [1], [7, 8]]]]
INFO:root:Doing checkSmall1
INFO:root:Getting tiny MUSes, distance 1, for 1 puzlits, 1 repeats
INFO:root:Chunked 1 in [1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
INFO:root:Doing checkSmall2
INFO:root:Getting tiny MUSes, distance 2, for 1 puzlits, 1 repeats
INFO:root:Chunked 1 in [1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
INFO:root:Considering 100 * 1 jobs for minsize=3
INFO:root:Chunked 100 in [9, 9, 9, 9, 8, 8, 8, 8, 8, 8, 8, 8]
INFO:root:XX found first (2, 7) is not 4 3
INFO:root:XX add new best (2, 7) is not 4 3 3
INFO:root:XX add new best (2, 7) is not 4 3 3
INFO:root:XX add new best (2, 7) is not 4 3 3
INFO:root:XX add new best (2, 7) is not 4 3 3
INFO:root:XX add new best (2, 7) is not 4 3 3
INFO:root:XX add new best (2, 7) is not 4 3 3
INFO:root:XX add new best (2, 7) is not 4 3 3
INFO:root:XX add new best (2, 7) is not 4 3 3
INFO:root:XX add new best (2, 7) is not 4 3 3
INFO:root:XX add new best (2, 7) is not 4 3 3
INFO:root:XX add new best (2, 7) is not 4 3 3
INFO:root:XX add new best (2, 7) is not 4 3 3
INFO:root:XX add new best (2, 7) is not 4 3 3
INFO:root:XX add new best (2, 7) is not 4 3 3
INFO:root:XX add new best (2, 7) is not 4 3 3
INFO:root:XX add new best (2, 7) is not 4 3 3
INFO:root:XX add new best (2, 7) is not 4 3 3
INFO:root:XX add new best (2, 7) is not 4 3 3
INFO:root:XX add new best (2, 7) is not 4 3 3
INFO:root:XX add new best (2, 7) is not 4 3 3
INFO:root:XX add new best (2, 7) is not 4 3 3
INFO:root:XX add new best (2, 7) is not 4 3 3
INFO:root:XX add new best (2, 7) is not 4 3 3
INFO:root:XX add new best (2, 7) is not 4 3 3
INFO:root:XX add new best (2, 7) is not 4 3 3
INFO:root:XX add new best (2, 7) is not 4 3 3
INFO:root:XX add new best (2, 7) is not 4 3 3
INFO:root:XX add new best (2, 7) is not 4 3 3
INFO:root:XX add new best (2, 7) is not 4 3 3
INFO:root:XX add new best (2, 7) is not 4 3 3
INFO:root:Trace: [(3, [(2, 7) is not 4])]
INFO:root:Trace Quality: [(3, 1)]
INFO:root:Trace Sorted: [(3, 1)]
INFO:root:Finished
INFO:root:Full Trace [(3, [(2, 7) is not 4])]
INFO:root:Trying {'gallopingMUSes': True, 'minPrecheckMUS': True}
INFO:root:Starting Step 1
INFO:root:Current state [[[[4, 5], [1], [6], [2, 4, 5], [2, 4, 5, 9], [7], [8], [4, 9], [3]], [[3, 4, 5], [9], [2], [8], [3, 4, 5, 6], [3, 4, 5, 6], [1, 4, 7], [4, 7], [1, 4, 5, 7]], [[8], [7], [3, 5], [3, 4, 5], [3, 4, 5, 9], [1], [2], [6], [4, 5, 9]], [[1, 2, 7], [4], [8], [1, 2, 5, 7], [1, 2, 5, 6, 7], [5, 6], [3], [7, 9], [1, 7, 9]], [[6], [5], [1, 7], [1, 3, 4, 7], [1, 3, 4, 7], [9], [1, 4, 7], [8], [2]], [[1, 2, 7], [3], [9], [1, 2, 4, 7], [1, 2, 4, 7, 8], [4, 8], [6], [5], [1, 4, 7]], [[1, 3, 5, 7], [6], [1, 3, 5, 7], [9], [1, 5, 7, 8], [5, 8], [4, 7], [2], [4, 7, 8]], [[1, 5, 7], [8], [1, 5, 7], [1, 4, 5, 7], [1, 4, 5, 7], [2], [9], [3], [6]], [[9], [2], [4], [6], [3, 7, 8], [3, 8], [5], [1], [7, 8]]]]
INFO:root:Doing checkSmall1
INFO:root:Getting tiny MUSes, distance 1, for 1 puzlits, 1 repeats
INFO:root:Chunked 1 in [1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
INFO:root:Doing checkSmall2
INFO:root:Getting tiny MUSes, distance 2, for 1 puzlits, 1 repeats
INFO:root:Chunked 1 in [1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
INFO:root:Considering 100 * 1 jobs for minsize=3
INFO:root:Chunked 100 in [9, 9, 9, 9, 8, 8, 8, 8, 8, 8, 8, 8]
INFO:root:XX found first (2, 7) is not 4 3
INFO:root:XX add new best (2, 7) is not 4 3 3
INFO:root:XX add new best (2, 7) is not 4 3 3
INFO:root:XX add new best (2, 7) is not 4 3 3
INFO:root:XX add new best (2, 7) is not 4 3 3
INFO:root:XX add new best (2, 7) is not 4 3 3
INFO:root:XX add new best (2, 7) is not 4 3 3
INFO:root:XX add new best (2, 7) is not 4 3 3
INFO:root:XX add new best (2, 7) is not 4 3 3
INFO:root:XX add new best (2, 7) is not 4 3 3
INFO:root:XX add new best (2, 7) is not 4 3 3
INFO:root:XX add new best (2, 7) is not 4 3 3
INFO:root:XX add new best (2, 7) is not 4 3 3
INFO:root:XX add new best (2, 7) is not 4 3 3
INFO:root:XX add new best (2, 7) is not 4 3 3
INFO:root:XX add new best (2, 7) is not 4 3 3
INFO:root:XX add new best (2, 7) is not 4 3 3
INFO:root:XX add new best (2, 7) is not 4 3 3
INFO:root:XX add new best (2, 7) is not 4 3 3
INFO:root:XX add new best (2, 7) is not 4 3 3
INFO:root:XX add new best (2, 7) is not 4 3 3
INFO:root:XX add new best (2, 7) is not 4 3 3
INFO:root:XX add new best (2, 7) is not 4 3 3
INFO:root:XX add new best (2, 7) is not 4 3 3
INFO:root:XX add new best (2, 7) is not 4 3 3
INFO:root:XX add new best (2, 7) is not 4 3 3
INFO:root:XX add new best (2, 7) is not 4 3 3
INFO:root:XX add new best (2, 7) is not 4 3 3
INFO:root:XX add new best (2, 7) is not 4 3 3
INFO:root:XX add new best (2, 7) is not 4 3 3
INFO:root:XX add new best (2, 7) is not 4 3 3
INFO:root:XX add new best (2, 7) is not 4 3 3
INFO:root:Trace: [(3, [(2, 7) is not 4])]
INFO:root:Trace Quality: [(3, 1)]
INFO:root:Trace Sorted: [(3, 1)]
INFO:root:Finished
INFO:root:Full Trace [(3, [(2, 7) is not 4])]
INFO:root:Trying {}
INFO:root:Starting Step 1
INFO:root:Current state [[[[6, 8], [2], [6, 8], [9], [4], [3], [7], [1], [5]], [[9], [1, 3], [4], [1, 5, 7, 8], [1, 2, 7], [1, 5, 7], [6], [2, 3], [2, 8]], [[7], [5], [1, 3], [1, 6, 8], [1, 2, 6], [1, 6], [3, 8, 9], [4], [2, 8, 9]], [[5], [1, 3, 6, 7], [1, 3, 6, 7, 9], [4], [8], [1, 6, 7, 9], [1, 9], [2, 7, 9], [2, 6, 7, 9]], [[2], [1, 6, 7, 8], [1, 6, 7, 8, 9], [1, 6, 7], [1, 6, 7, 9], [1, 6, 7, 9], [4], [5], [3]], [[4], [1, 6, 7], [1, 6, 7, 9], [3], [5], [2], [1, 8, 9], [7, 9], [6, 7, 8, 9]], [[3, 6], [4], [2], [5, 6, 7], [3, 6, 7, 9], [5, 6, 7, 9], [3, 9], [8], [1]], [[1, 3, 8], [7, 8], [5], [1, 7], [1, 3, 7, 9], [4], [2], [6], [7, 9]], [[1, 3, 6], [9], [6, 7], [2], [1, 3, 6, 7], [8], [5], [3, 7], [4]]]]
INFO:root:Doing checkSmall1
INFO:root:Getting tiny MUSes, distance 1, for 1 puzlits, 1 repeats
INFO:root:Chunked 1 in [1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
INFO:root:Doing checkSmall2
INFO:root:Getting tiny MUSes, distance 2, for 1 puzlits, 1 repeats
INFO:root:Chunked 1 in [1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
INFO:root:Considering 100 * 1 jobs for minsize=3
INFO:root:Chunked 100 in [9, 9, 9, 9, 8, 8, 8, 8, 8, 8, 8, 8]
INFO:root:Considering 100 * 1 jobs for minsize=4
INFO:root:Chunked 100 in [9, 9, 9, 9, 8, 8, 8, 8, 8, 8, 8, 8]
INFO:root:Considering 100 * 1 jobs for minsize=5
INFO:root:Chunked 100 in [9, 9, 9, 9, 8, 8, 8, 8, 8, 8, 8, 8]
INFO:root:Considering 100 * 1 jobs for minsize=6
INFO:root:Chunked 100 in [9, 9, 9, 9, 8, 8, 8, 8, 8, 8, 8, 8]
INFO:root:Considering 100 * 1 jobs for minsize=7
INFO:root:Chunked 100 in [9, 9, 9, 9, 8, 8, 8, 8, 8, 8, 8, 8]
INFO:root:Considering 100 * 1 jobs for minsize=8
INFO:root:Chunked 100 in [9, 9, 9, 9, 8, 8, 8, 8, 8, 8, 8, 8]
INFO:root:Considering 100 * 1 jobs for minsize=9
INFO:root:Chunked 100 in [9, 9, 9, 9, 8, 8, 8, 8, 8, 8, 8, 8]
INFO:root:Considering 100 * 1 jobs for minsize=10
INFO:root:Chunked 100 in [9, 9, 9, 9, 8, 8, 8, 8, 8, 8, 8, 8]
INFO:root:XX found first (4, 3) is not 6 11
INFO:root:XX add new best (4, 3) is not 6 11 11
INFO:root:XX add new best (4, 3) is not 6 11 11
INFO:root:XX add new best (4, 3) is not 6 11 11
INFO:root:XX add new best (4, 3) is not 6 11 11
INFO:root:XX add new best (4, 3) is not 6 11 11
INFO:root:XX add new best (4, 3) is not 6 11 11
INFO:root:XX add new best (4, 3) is not 6 11 11
INFO:root:XX add new best (4, 3) is not 6 11 11
INFO:root:XX add new best (4, 3) is not 6 11 11
INFO:root:XX add new best (4, 3) is not 6 11 11
INFO:root:XX add new best (4, 3) is not 6 11 11
INFO:root:XX add new best (4, 3) is not 6 11 11
INFO:root:XX add new best (4, 3) is not 6 11 11
INFO:root:XX add new best (4, 3) is not 6 11 11
INFO:root:XX add new best (4, 3) is not 6 11 11
INFO:root:XX add new best (4, 3) is not 6 11 11
INFO:root:XX add new best (4, 3) is not 6 11 11
INFO:root:XX add new best (4, 3) is not 6 11 11
INFO:root:XX add new best (4, 3) is not 6 11 11
INFO:root:XX add new best (4, 3) is not 6 11 11
INFO:root:XX add new best (4, 3) is not 6 11 11
INFO:root:XX add new best (4, 3) is not 6 11 11
INFO:root:XX add new best (4, 3) is not 6 11 11
INFO:root:XX add new best (4, 3) is not 6 11 11
INFO:root:XX add new best (4, 3) is not 6 11 11
INFO:root:XX add new best (4, 3) is not 6 11 11
INFO:root:XX add new best (4, 3) is not 6 11 11
INFO:root:XX add new best (4, 3) is not 6 11 11
INFO:root:XX add new best (4, 3) is not 6 11 11
INFO:root:XX add new best (4, 3) is not 6 11 11
INFO:root:XX add new best (4, 3) is not 6 11 11
INFO:root:XX add new best (4, 3) is not 6 11 11
INFO:root:XX add new best (4, 3) is not 6 11 11
INFO:root:XX add new best (4, 3) is not 6 11 11
INFO:root:XX add new best (4, 3) is not 6 11 11
INFO:root:XX add new best (4, 3) is not 6 11 11
INFO:root:XX add new best (4, 3) is not 6 11 11
INFO:root:XX add new best (4, 3) is not 6 11 11
INFO:root:XX add new best (4, 3) is not 6 11 11
INFO:root:XX add new best (4, 3) is not 6 11 11
INFO:root:XX add new best (4, 3) is not 6 11 11
INFO:root:XX add new best (4, 3) is not 6 11 11
INFO:root:XX add new best (4, 3) is not 6 11 11
INFO:root:XX add new best (4, 3) is not 6 11 11
INFO:root:XX add new best (4, 3) is not 6 11 11
INFO:root:XX add new best (4, 3) is not 6 11 11
INFO:root:XX add new best (4, 3) is not 6 11 11
INFO:root:XX add new best (4, 3) is not 6 11 11
INFO:root:XX add new best (4, 3) is not 6 11 11
INFO:root:XX add new best (4, 3) is not 6 11 11
INFO:root:XX add new best (4, 3) is not 6 11 11
INFO:root:XX add new best (4, 3) is not 6 11 11
INFO:root:XX add new best (4, 3) is not 6 11 11
INFO:root:XX add new best (4, 3) is not 6 11 11
INFO:root:XX add new best (4, 3) is not 6 11 11
INFO:root:XX add new best (4, 3) is not 6 11 11
INFO:root:XX add new best (4, 3) is not 6 11 11
INFO:root:XX add new best (4, 3) is not 6 11 11
INFO:root:XX add new best (4, 3) is not 6 11 11
INFO:root:XX add new best (4, 3) is not 6 11 11
INFO:root:XX add new best (4, 3) is not 6 11 11
INFO:root:XX add new best (4, 3) is not 6 11 11
INFO:root:XX add new best (4, 3) is not 6 11 11
INFO:root:XX add new best (4, 3) is not 6 11 11
INFO:root:XX add new best (4, 3) is not 6 11 11
INFO:root:XX add new best (4, 3) is not 6 11 11
INFO:root:XX add new best (4, 3) is not 6 11 11
INFO:root:XX add new best (4, 3) is not 6 11 11
INFO:root:XX add new best (4, 3) is not 6 11 11
INFO:root:XX add new best (4, 3) is not 6 11 11
INFO:root:XX add new best (4, 3) is not 6 11 11
INFO:root:XX add new best (4, 3) is not 6 11 11
INFO:root:XX add new best (4, 3) is not 6 11 11
INFO:root:XX add new best (4, 3) is not 6 11 11
INFO:root:XX add new best (4, 3) is not 6 11 11
INFO:root:XX add new best (4, 3) is not 6 11 11
INFO:root:XX add new best (4, 3) is not 6 11 11
INFO:root:XX add new best (4, 3) is not 6 11 11
INFO:root:XX add new best (4, 3) is not 6 11 11
INFO:root:XX add new best (4, 3) is not 6 11 11
INFO:root:XX add new best (4, 3) is not 6 11 11
INFO:root:XX add new best (4, 3) is not 6 11 11
INFO:root:XX add new best (4, 3) is not 6 11 11
INFO:root:XX add new best (4, 3) is not 6 11 11
INFO:root:XX add new best (4, 3) is not 6 11 11
INFO:root:XX add new best (4, 3) is not 6 11 11
INFO:root:XX add new best (4, 3) is not 6 11 11
INFO:root:XX add new best (4, 3) is not 6 11 11
INFO:root:XX add new best (4, 3) is not 6 11 11
INFO:root:XX add new best (4, 3) is not 6 11 11
INFO:root:XX add new best (4, 3) is not 6 11 11
INFO:root:XX add new best (4, 3) is not 6 11 11
INFO:root:XX add new best (4, 3) is not 6 11 11
INFO:root:XX add new best (4, 3) is not 6 11 11
INFO:root:XX add new best (4, 3) is not 6 11 11
INFO:root:XX add new best (4, 3) is not 6 11 11
INFO:root:XX add new best (4, 3) is not 6 11 11
INFO:root:XX add new best (4, 3) is not 6 11 11
INFO:root:XX add new best (4, 3) is not 6 11 11
INFO:root:Considering 100 * 1 jobs for minsize=11
INFO:root:Chunked 100 in [9, 9, 9, 9, 8, 8, 8, 8, 8, 8, 8, 8]
INFO:root:XX add new best (4, 3) is not 6 11 11
INFO:root:XX add new best (4, 3) is not 6 11 11
INFO:root:XX add new best (4, 3) is not 6 11 11
INFO:root:XX add new best (4, 3) is not 6 11 11
INFO:root:XX add new best (4, 3) is not 6 11 11
INFO:root:XX add new best (4, 3) is not 6 11 11
INFO:root:XX add new best (4, 3) is not 6 11 11
INFO:root:XX add new best (4, 3) is not 6 11 11
INFO:root:XX add new best (4, 3) is not 6 11 11
INFO:root:XX add new best (4, 3) is not 6 11 11
INFO:root:XX add new best (4, 3) is not 6 11 11
INFO:root:XX add new best (4, 3) is not 6 11 11
INFO:root:XX add new best (4, 3) is not 6 11 11
INFO:root:XX add new best (4, 3) is not 6 11 11
INFO:root:XX add new best (4, 3) is not 6 11 11
INFO:root:XX add new best (4, 3) is not 6 11 11
INFO:root:XX add new best (4, 3) is not 6 11 11
INFO:root:XX add new best (4, 3) is not 6 11 11
INFO:root:XX add new best (4, 3) is not 6 11 11
INFO:root:XX add new best (4, 3) is not 6 11 11
INFO:root:XX add new best (4, 3) is not 6 11 11
INFO:root:XX add new best (4, 3) is not 6 11 11
INFO:root:XX add new best (4, 3) is not 6 11 11
INFO:root:XX add new best (4, 3) is not 6 11 11
INFO:root:XX add new best (4, 3) is not 6 11 11
INFO:root:XX add new best (4, 3) is not 6 11 11
INFO:root:XX add new best (4, 3) is not 6 11 11
INFO:root:XX add new best (4, 3) is not 6 11 11
INFO:root:XX add new best (4, 3) is not 6 11 11
INFO:root:XX add new best (4, 3) is not 6 11 11
INFO:root:XX add new best (4, 3) is not 6 11 11
INFO:root:XX add new best (4, 3) is not 6 11 11
INFO:root:XX add new best (4, 3) is not 6 11 11
INFO:root:XX add new best (4, 3) is not 6 11 11
INFO:root:XX add new best (4, 3) is not 6 11 11
INFO:root:XX add new best (4, 3) is not 6 11 11
INFO:root:XX add new best (4, 3) is not 6 11 11
INFO:root:XX add new best (4, 3) is not 6 11 11
INFO:root:XX add new best (4, 3) is not 6 11 11
INFO:root:XX add new best (4, 3) is not 6 11 11
INFO:root:XX add new best (4, 3) is not 6 11 11
INFO:root:XX add new best (4, 3) is not 6 11 11
INFO:root:XX add new best (4, 3) is not 6 11 11
INFO:root:XX add new best (4, 3) is not 6 11 11
INFO:root:XX add new best (4, 3) is not 6 11 11
INFO:root:XX add new best (4, 3) is not 6 11 11
INFO:root:XX add new best (4, 3) is not 6 11 11
INFO:root:XX add new best (4, 3) is not 6 11 11
INFO:root:XX add new best (4, 3) is not 6 11 11
INFO:root:XX add new best (4, 3) is not 6 11 11
INFO:root:XX add new best (4, 3) is not 6 11 11
INFO:root:XX add new best (4, 3) is not 6 11 11
INFO:root:XX add new best (4, 3) is not 6 11 11
INFO:root:XX add new best (4, 3) is not 6 11 11
INFO:root:XX add new best (4, 3) is not 6 11 11
INFO:root:XX add new best (4, 3) is not 6 11 11
INFO:root:XX add new best (4, 3) is not 6 11 11
INFO:root:XX add new best (4, 3) is not 6 11 11
INFO:root:XX add new best (4, 3) is not 6 11 11
INFO:root:XX add new best (4, 3) is not 6 11 11
INFO:root:XX add new best (4, 3) is not 6 11 11
INFO:root:XX add new best (4, 3) is not 6 11 11
INFO:root:XX add new best (4, 3) is not 6 11 11
INFO:root:XX add new best (4, 3) is not 6 11 11
INFO:root:XX add new best (4, 3) is not 6 11 11
INFO:root:XX add new best (4, 3) is not 6 11 11
INFO:root:XX add new best (4, 3) is not 6 11 11
INFO:root:XX add new best (4, 3) is not 6 11 11
INFO:root:XX add new best (4, 3) is not 6 11 11
INFO:root:XX add new best (4, 3) is not 6 11 11
INFO:root:XX add new best (4, 3) is not 6 11 11
INFO:root:XX add new best (4, 3) is not 6 11 11
INFO:root:XX add new best (4, 3) is not 6 11 11
INFO:root:XX add new best (4, 3) is not 6 11 11
INFO:root:XX add new best (4, 3) is not 6 11 11
INFO:root:XX add new best (4, 3) is not 6 11 11
INFO:root:XX add new best (4, 3) is not 6 11 11
INFO:root:XX add new best (4, 3) is not 6 11 11
INFO:root:XX add new best (4, 3) is not 6 11 11
INFO:root:XX add new best (4, 3) is not 6 11 11
INFO:root:XX add new best (4, 3) is not 6 11 11
INFO:root:XX add new best (4, 3) is not 6 11 11
INFO:root:XX add new best (4, 3) is not 6 11 11
INFO:root:XX add new best (4, 3) is not 6 11 11
INFO:root:XX add new best (4, 3) is not 6 11 11
INFO:root:XX add new best (4, 3) is not 6 11 11
INFO:root:XX add new best (4, 3) is not 6 11 11
INFO:root:XX add new best (4, 3) is not 6 11 11
INFO:root:XX add new best (4, 3) is not 6 11 11
INFO:root:XX add new best (4, 3) is not 6 11 11
INFO:root:XX add new best (4, 3) is not 6 11 11
INFO:root:XX add new best (4, 3) is not 6 11 11
INFO:root:XX add new best (4, 3) is not 6 11 11
INFO:root:XX add new best (4, 3) is not 6 11 11
INFO:root:XX add new best (4, 3) is not 6 11 11
INFO:root:XX add new best (4, 3) is not 6 11 11
INFO:root:XX add new best (4, 3) is not 6 11 11
INFO:root:XX add new best (4, 3) is not 6 11 11
INFO:root:XX add new best (4, 3) is not 6 11 11
INFO:root:XX add new best (4, 3) is not 6 11 11
INFO:root:Trace: [(11, [(4, 3) is not 6])]
INFO:root:Trace Quality: [(11, 1)]
INFO:root:Trace Sorted: [(11, 1)]
INFO:root:Finished
INFO:root:Full Trace [(11, [(4, 3) is not 6])]
INFO:root:Trying {'prechopMUSes': True}
INFO:root:Starting Step 1
INFO:root:Current state [[[[6, 8], [2], [6, 8], [9], [4], [3], [7], [1], [5]], [[9], [1, 3], [4], [1, 5, 7, 8], [1, 2, 7], [1, 5, 7], [6], [2, 3], [2, 8]], [[7], [5], [1, 3], [1, 6, 8], [1, 2, 6], [1, 6], [3, 8, 9], [4], [2, 8, 9]], [[5], [1, 3, 6, 7], [1, 3, 6, 7, 9], [4], [8], [1, 6, 7, 9], [1, 9], [2, 7, 9], [2, 6, 7, 9]], [[2], [1, 6, 7, 8], [1, 6, 7, 8, 9], [1, 6, 7], [1, 6, 7, 9], [1, 6, 7, 9], [4], [5], [3]], [[4], [1, 6, 7], [1, 6, 7, 9], [3], [5], [2], [1, 8, 9], [7, 9], [6, 7, 8, 9]], [[3, 6], [4], [2], [5, 6, 7], [3, 6, 7, 9], [5, 6, 7, 9], [3, 9], [8], [1]], [[1, 3, 8], [7, 8], [5], [1, 7], [1, 3, 7, 9], [4], [2], [6], [7, 9]], [[1, 3, 6], [9], [6, 7], [2], [1, 3, 6, 7], [8], [5], [3, 7], [4]]]]
INFO:root:Doing checkSmall1
INFO:root:Getting tiny MUSes, distance 1, for 1 puzlits, 1 repeats
INFO:root:Chunked 1 in [1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
INFO:root:Doing checkSmall2
INFO:root:Getting tiny MUSes, distance 2, for 1 puzlits, 1 repeats
INFO:root:Chunked 1 in [1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
INFO:root:Considering 100 * 1 jobs for minsize=3
INFO:root:Chunked 100 in [9, 9, 9, 9, 8, 8, 8, 8, 8, 8, 8, 8]
INFO:root:XX found first (4, 3) is not 6 4
INFO:root:XX add new best (4, 3) is not 6 4 4
INFO:root:XX add new best (4, 3) is not 6 4 4
INFO:root:XX add new best (4, 3) is not 6 4 4
INFO:root:XX add new best (4, 3) is not 6 4 4
INFO:root:XX add new best (4, 3) is not 6 4 4
INFO:root:XX add new best (4, 3) is not 6 4 4
INFO:root:XX add new best (4, 3) is not 6 4 4
INFO:root:XX add new best (4, 3) is not 6 4 4
INFO:root:XX add new best (4, 3) is not 6 4 4
INFO:root:XX add new best (4, 3) is not 6 4 4
INFO:root:XX add new best (4, 3) is not 6 4 4
INFO:root:XX add new best (4, 3) is not 6 4 4
INFO:root:XX add new best (4, 3) is not 6 4 4
INFO:root:XX add new best (4, 3) is not 6 4 4
INFO:root:XX add new best (4, 3) is not 6 4 4
INFO:root:Considering 100 * 1 jobs for minsize=4
INFO:root:Chunked 100 in [9, 9, 9, 9, 8, 8, 8, 8, 8, 8, 8, 8]
INFO:root:XX add new best (4, 3) is not 6 4 4
INFO:root:XX add new best (4, 3) is not 6 4 4
INFO:root:XX add new best (4, 3) is not 6 4 4
INFO:root:XX add new best (4, 3) is not 6 4 4
INFO:root:XX add new best (4, 3) is not 6 4 4
INFO:root:XX add new best (4, 3) is not 6 4 4
INFO:root:XX add new best (4, 3) is not 6 4 4
INFO:root:XX add new best (4, 3) is not 6 4 4
INFO:root:XX add new best (4, 3) is not 6 4 4
INFO:root:XX add new best (4, 3) is not 6 4 4
INFO:root:XX add new best (4, 3) is not 6 4 4
INFO:root:XX add new best (4, 3) is not 6 4 4
INFO:root:XX add new best (4, 3) is not 6 4 4
INFO:root:XX add new best (4, 3) is not 6 4 4
INFO:root:XX add new best (4, 3) is not 6 4 4
INFO:root:XX add new best (4, 3) is not 6 4 4
INFO:root:XX add new best (4, 3) is not 6 4 4
INFO:root:XX add new best (4, 3) is not 6 4 4
INFO:root:XX add new best (4, 3) is not 6 4 4
INFO:root:XX add new best (4, 3) is not 6 4 4
INFO:root:XX add new best (4, 3) is not 6 4 4
INFO:root:XX add new best (4, 3) is not 6 4 4
INFO:root:XX add new best (4, 3) is not 6 4 4
INFO:root:XX add new best (4, 3) is not 6 4 4
INFO:root:Trace: [(4, [(4, 3) is not 6])]
INFO:root:Trace Quality: [(4, 1)]
INFO:root:Trace Sorted: [(4, 1)]
INFO:root:Finished
INFO:root:Full Trace [(4, [(4, 3) is not 6])]
INFO:root:Trying {'quarterChopMUS': True}
INFO:root:Starting Step 1
INFO:root:Current state [[[[6, 8], [2], [6, 8], [9], [4], [3], [7], [1], [5]], [[9], [1, 3], [4], [1, 5, 7, 8], [1, 2, 7], [1, 5, 7], [6], [2, 3], [2, 8]], [[7], [5], [1, 3], [1, 6, 8], [1, 2, 6], [1, 6], [3, 8, 9], [4], [2, 8, 9]], [[5], [1, 3, 6, 7], [1, 3, 6, 7, 9], [4], [8], [1, 6, 7, 9], [1, 9], [2, 7, 9], [2, 6, 7, 9]], [[2], [1, 6, 7, 8], [1, 6, 7, 8, 9], [1, 6, 7], [1, 6, 7, 9], [1, 6, 7, 9], [4], [5], [3]], [[4], [1, 6, 7], [1, 6, 7, 9], [3], [5], [2], [1, 8, 9], [7, 9], [6, 7, 8, 9]], [[3, 6], [4], [2], [5, 6, 7], [3, 6, 7, 9], [5, 6, 7, 9], [3, 9], [8], [1]], [[1, 3, 8], [7, 8], [5], [1, 7], [1, 3, 7, 9], [4], [2], [6], [7, 9]], [[1, 3, 6], [9], [6, 7], [2], [1, 3, 6, 7], [8], [5], [3, 7], [4]]]]
INFO:root:Doing checkSmall1
INFO:root:Getting tiny MUSes, distance 1, for 1 puzlits, 1 repeats
INFO:root:Chunked 1 in [1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
INFO:root:Doing checkSmall2
INFO:root:Getting tiny MUSes, distance 2, for 1 puzlits, 1 repeats
INFO:root:Chunked 1 in [1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
INFO:root:Considering 100 * 1 jobs for minsize=3
INFO:root:Chunked 100 in [9, 9, 9, 9, 8, 8, 8, 8, 8, 8, 8, 8]
INFO:root:XX found first (4, 3) is not 6 4
INFO:root:XX add new best (4, 3) is not 6 4 4
INFO:root:XX add new best (4, 3) is not 6 4 4
INFO:root:XX add new best (4, 3) is not 6 4 4
INFO:root:XX add new best (4, 3) is not 6 4 4
INFO:root:XX add new best (4, 3) is not 6 4 4
INFO:root:XX add new best (4, 3) is not 6 4 4
INFO:root:XX add new best (4, 3) is not 6 4 4
INFO:root:XX add new best (4, 3) is not 6 4 4
INFO:root:XX add new best (4, 3) is not 6 4 4
INFO:root:XX add new best (4, 3) is not 6 4 4
INFO:root:XX add new best (4, 3) is not 6 4 4
INFO:root:XX add new best (4, 3) is not 6 4 4
INFO:root:XX add new best (4, 3) is not 6 4 4
INFO:root:XX add new best (4, 3) is not 6 4 4
INFO:root:XX add new best (4, 3) is not 6 4 4
INFO:root:XX add new best (4, 3) is not 6 4 4
INFO:root:Considering 100 * 1 jobs for minsize=4
INFO:root:Chunked 100 in [9, 9, 9, 9, 8, 8, 8, 8, 8, 8, 8, 8]
INFO:root:XX add new best (4, 3) is not 6 4 4
INFO:root:XX add new best (4, 3) is not 6 4 4
INFO:root:XX add new best (4, 3) is not 6 4 4
INFO:root:XX add new best (4, 3) is not 6 4 4
INFO:root:XX add new best (4, 3) is not 6 4 4
INFO:root:XX add new best (4, 3) is not 6 4 4
INFO:root:XX add new best (4, 3) is not 6 4 4
INFO:root:XX add new best (4, 3) is not 6 4 4
INFO:root:XX add new best (4, 3) is not 6 4 4
INFO:root:XX add new best (4, 3) is not 6 4 4
INFO:root:XX add new best (4, 3) is not 6 4 4
INFO:root:XX add new best (4, 3) is not 6 4 4
INFO:root:XX add new best (4, 3) is not 6 4 4
INFO:root:XX add new best (4, 3) is not 6 4 4
INFO:root:XX add new best (4, 3) is not 6 4 4
INFO:root:XX add new best (4, 3) is not 6 4 4
INFO:root:XX add new best (4, 3) is not 6 4 4
INFO:root:XX add new best (4, 3) is not 6 4 4
INFO:root:XX add new best (4, 3) is not 6 4 4
INFO:root:XX add new best (4, 3) is not 6 4 4
INFO:root:XX add new best (4, 3) is not 6 4 4
INFO:root:XX add new best (4, 3) is not 6 4 4
INFO:root:XX add new best (4, 3) is not 6 4 4
INFO:root:XX add new best (4, 3) is not 6 4 4
INFO:root:XX add new best (4, 3) is not 6 4 4
INFO:root:XX add new best (4, 3) is not 6 4 4
INFO:root:Trace: [(4, [(4, 3) is not 6])]
INFO:root:Trace Quality: [(4, 1)]
INFO:root:Trace Sorted: [(4, 1)]
INFO:root:Finished
INFO:root:Full Trace [(4, [(4, 3) is not 6])]
INFO:root:Trying {'minPrecheckMUS': True}
INFO:root:Starting Step 1
INFO:root:Current state [[[[6, 8], [2], [6, 8], [9], [4], [3], [7], [1], [5]], [[9], [1, 3], [4], [1, 5, 7, 8], [1, 2, 7], [1, 5, 7], [6], [2, 3], [2, 8]], [[7], [5], [1, 3], [1, 6, 8], [1, 2, 6], [1, 6], [3, 8, 9], [4], [2, 8, 9]], [[5], [1, 3, 6, 7], [1, 3, 6, 7, 9], [4], [8], [1, 6, 7, 9], [1, 9], [2, 7, 9], [2, 6, 7, 9]], [[2], [1, 6, 7, 8], [1, 6, 7, 8, 9], [1, 6, 7], [1, 6, 7, 9], [1, 6, 7, 9], [4], [5], [3]], [[4], [1, 6, 7], [1, 6, 7, 9], [3], [5], [2], [1, 8, 9], [7, 9], [6, 7, 8, 9]], [[3, 6], [4], [2], [5, 6, 7], [3, 6, 7, 9], [5, 6, 7, 9], [3, 9], [8], [1]], [[1, 3, 8], [7, 8], [5], [1, 7], [1, 3, 7, 9], [4], [2], [6], [7, 9]], [[1, 3, 6], [9], [6, 7], [2], [1, 3, 6, 7], [8], [5], [3, 7], [4]]]]
INFO:root:Doing checkSmall1
INFO:root:Getting tiny MUSes, distance 1, for 1 puzlits, 1 repeats
INFO:root:Chunked 1 in [1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
INFO:root:Doing checkSmall2
INFO:root:Getting tiny MUSes, distance 2, for 1 puzlits, 1 repeats
INFO:root:Chunked 1 in [1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
INFO:root:Considering 100 * 1 jobs for minsize=3
INFO:root:Chunked 100 in [9, 9, 9, 9, 8, 8, 8, 8, 8, 8, 8, 8]
INFO:root:XX found first (4, 3) is not 6 4
INFO:root:XX add new best (4, 3) is not 6 4 4
INFO:root:XX add new best (4, 3) is not 6 4 4
INFO:root:XX add new best (4, 3) is not 6 4 4
INFO:root:XX add new best (4, 3) is not 6 4 4
INFO:root:XX add new best (4, 3) is not 6 4 4
INFO:root:XX add new best (4, 3) is not 6 4 4
INFO:root:XX add new best (4, 3) is not 6 4 4
INFO:root:XX add new best (4, 3) is not 6 4 4
INFO:root:XX add new best (4, 3) is not 6 4 4
INFO:root:XX add new best (4, 3) is not 6 4 4
INFO:root:XX add new best (4, 3) is not 6 4 4
INFO:root:XX add new best (4, 3) is not 6 4 4
INFO:root:XX add new best (4, 3) is not 6 4 4
INFO:root:XX add new best (4, 3) is not 6 4 4
INFO:root:XX add new best (4, 3) is not 6 4 4
INFO:root:XX add new best (4, 3) is not 6 4 4
INFO:root:Considering 100 * 1 jobs for minsize=4
INFO:root:Chunked 100 in [9, 9, 9, 9, 8, 8, 8, 8, 8, 8, 8, 8]
INFO:root:XX add new best (4, 3) is not 6 4 4
INFO:root:XX add new best (4, 3) is not 6 4 4
INFO:root:XX add new best (4, 3) is not 6 4 4
INFO:root:XX add new best (4, 3) is not 6 4 4
INFO:root:XX add new best (4, 3) is not 6 4 4
INFO:root:XX add new best (4, 3) is not 6 4 4
INFO:root:XX add new best (4, 3) is not 6 4 4
INFO:root:XX add new best (4, 3) is not 6 4 4
INFO:root:XX add new best (4, 3) is not 6 4 4
INFO:root:XX add new best (4, 3) is not 6 4 4
INFO:root:XX add new best (4, 3) is not 6 4 4
INFO:root:XX add new best (4, 3) is not 6 4 4
INFO:root:XX add new best (4, 3) is not 6 4 4
INFO:root:XX add new best (4, 3) is not 6 4 4
INFO:root:XX add new best (4, 3) is not 6 4 4
INFO:root:XX add new best (4, 3) is not 6 4 4
INFO:root:XX add new best (4, 3) is not 6 4 4
INFO:root:XX add new best (4, 3) is not 6 4 4
INFO:root:XX add new best (4, 3) is not 6 4 4
INFO:root:XX add new best (4, 3) is not 6 4 4
INFO:root:XX add new best (4, 3) is not 6 4 4
INFO:root:XX add new best (4, 3) is not 6 4 4
INFO:root:XX add new best (4, 3) is not 6 4 4
INFO:root:Trace: [(4, [(4, 3) is not 6])]
INFO:root:Trace Quality: [(4, 1)]
INFO:root:Trace Sorted: [(4, 1)]
INFO:root:Finished
INFO:root:Full Trace [(4, [(4, 3) is not 6])]
INFO:root:Trying {'gallopingMUSes': True}
INFO:root:Starting Step 1
INFO:root:Current state [[[[6, 8], [2], [6, 8], [9], [4], [3], [7], [1], [5]], [[9], [1, 3], [4], [1, 5, 7, 8], [1, 2, 7], [1, 5, 7], [6], [2, 3], [2, 8]], [[7], [5], [1, 3], [1, 6, 8], [1, 2, 6], [1, 6], [3, 8, 9], [4], [2, 8, 9]], [[5], [1, 3, 6, 7], [1, 3, 6, 7, 9], [4], [8], [1, 6, 7, 9], [1, 9], [2, 7, 9], [2, 6, 7, 9]], [[2], [1, 6, 7, 8], [1, 6, 7, 8, 9], [1, 6, 7], [1, 6, 7, 9], [1, 6, 7, 9], [4], [5], [3]], [[4], [1, 6, 7], [1, 6, 7, 9], [3], [5], [2], [1, 8, 9], [7, 9], [6, 7, 8, 9]], [[3, 6], [4], [2], [5, 6, 7], [3, 6, 7, 9], [5, 6, 7, 9], [3, 9], [8], [1]], [[1, 3, 8], [7, 8], [5], [1, 7], [1, 3, 7, 9], [4], [2], [6], [7, 9]], [[1, 3, 6], [9], [6, 7], [2], [1, 3, 6, 7], [8], [5], [3, 7], [4]]]]
INFO:root:Doing checkSmall1
INFO:root:Getting tiny MUSes, distance 1, for 1 puzlits, 1 repeats
INFO:root:Chunked 1 in [1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
INFO:root:Doing checkSmall2
INFO:root:Getting tiny MUSes, distance 2, for 1 puzlits, 1 repeats
INFO:root:Chunked 1 in [1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
INFO:root:Considering 100 * 1 jobs for minsize=3
INFO:root:Chunked 100 in [9, 9, 9, 9, 8, 8, 8, 8, 8, 8, 8, 8]
INFO:root:XX found first (4, 3) is not 6 4
INFO:root:XX add new best (4, 3) is not 6 4 4
INFO:root:XX add new best (4, 3) is not 6 4 4
INFO:root:XX add new best (4, 3) is not 6 4 4
INFO:root:XX add new best (4, 3) is not 6 4 4
INFO:root:XX add new best (4, 3) is not 6 4 4
INFO:root:XX add new best (4, 3) is not 6 4 4
INFO:root:XX add new best (4, 3) is not 6 4 4
INFO:root:XX add new best (4, 3) is not 6 4 4
INFO:root:XX add new best (4, 3) is not 6 4 4
INFO:root:XX add new best (4, 3) is not 6 4 4
INFO:root:XX add new best (4, 3) is not 6 4 4
INFO:root:XX add new best (4, 3) is not 6 4 4
INFO:root:Considering 100 * 1 jobs for minsize=4
INFO:root:Chunked 100 in [9, 9, 9, 9, 8, 8, 8, 8, 8, 8, 8, 8]
INFO:root:XX add new best (4, 3) is not 6 4 4
INFO:root:XX add new best (4, 3) is not 6 4 4
INFO:root:XX add new best (4, 3) is not 6 4 4
INFO:root:XX add new best (4, 3) is not 6 4 4
INFO:root:XX add new best (4, 3) is not 6 4 4
INFO:root:XX add new best (4, 3) is not 6 4 4
INFO:root:XX add new best (4, 3) is not 6 4 4
INFO:root:XX add new best (4, 3) is not 6 4 4
INFO:root:XX add new best (4, 3) is not 6 4 4
INFO:root:XX add new best (4, 3) is not 6 4 4
INFO:root:XX add new best (4, 3) is not 6 4 4
INFO:root:XX add new best (4, 3) is not 6 4 4
INFO:root:XX add new best (4, 3) is not 6 4 4
INFO:root:XX add new best (4, 3) is not 6 4 4
INFO:root:Trace: [(4, [(4, 3) is not 6])]
INFO:root:Trace Quality: [(4, 1)]
INFO:root:Trace Sorted: [(4, 1)]
INFO:root:Finished
INFO:root:Full Trace [(4, [(4, 3) is not 6])]
INFO:root:Trying {'minPrecheckStepsMUS': True}
INFO:root:Starting Step 1
INFO:root:Current state [[[[6, 8], [2], [6, 8], [9], [4], [3], [7], [1], [5]], [[9], [1, 3], [4], [1, 5, 7, 8], [1, 2, 7], [1, 5, 7], [6], [2, 3], [2, 8]], [[7], [5], [1, 3], [1, 6, 8], [1, 2, 6], [1, 6], [3, 8, 9], [4], [2, 8, 9]], [[5], [1, 3, 6, 7], [1, 3, 6, 7, 9], [4], [8], [1, 6, 7, 9], [1, 9], [2, 7, 9], [2, 6, 7, 9]], [[2], [1, 6, 7, 8], [1, 6, 7, 8, 9], [1, 6, 7], [1, 6, 7, 9], [1, 6, 7, 9], [4], [5], [3]], [[4], [1, 6, 7], [1, 6, 7, 9], [3], [5], [2], [1, 8, 9], [7, 9], [6, 7, 8, 9]], [[3, 6], [4], [2], [5, 6, 7], [3, 6, 7, 9], [5, 6, 7, 9], [3, 9], [8], [1]], [[1, 3, 8], [7, 8], [5], [1, 7], [1, 3, 7, 9], [4], [2], [6], [7, 9]], [[1, 3, 6], [9], [6, 7], [2], [1, 3, 6, 7], [8], [5], [3, 7], [4]]]]
INFO:root:Doing checkSmall1
INFO:root:Getting tiny MUSes, distance 1, for 1 puzlits, 1 repeats
INFO:root:Chunked 1 in [1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
INFO:root:Doing checkSmall2
INFO:root:Getting tiny MUSes, distance 2, for 1 puzlits, 1 repeats
INFO:root:Chunked 1 in [1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
INFO:root:Considering 100 * 1 jobs for minsize=3
INFO:root:Chunked 100 in [9, 9, 9, 9, 8, 8, 8, 8, 8, 8, 8, 8]
INFO:root:XX found first (4, 3) is not 6 4
INFO:root:XX add new best (4, 3) is not 6 4 4
INFO:root:XX add new best (4, 3) is not 6 4 4
INFO:root:XX add new best (4, 3) is not 6 4 4
INFO:root:XX add new best (4, 3) is not 6 4 4
INFO:root:XX add new best (4, 3) is not 6 4 4
INFO:root:XX add new best (4, 3) is not 6 4 4
INFO:root:XX add new best (4, 3) is not 6 4 4
INFO:root:XX add new best (4, 3) is not 6 4 4
INFO:root:XX add new best (4, 3) is not 6 4 4
INFO:root:XX add new best (4, 3) is not 6 4 4
INFO:root:XX add new best (4, 3) is not 6 4 4
INFO:root:XX add new best (4, 3) is not 6 4 4
INFO:root:XX add new best (4, 3) is not 6 4 4
INFO:root:XX add new best (4, 3) is not 6 4 4
INFO:root:XX add new best (4, 3) is not 6 4 4
INFO:root:XX add new best (4, 3) is not 6 4 4
INFO:root:Considering 100 * 1 jobs for minsize=4
INFO:root:Chunked 100 in [9, 9, 9, 9, 8, 8, 8, 8, 8, 8, 8, 8]
INFO:root:XX add new best (4, 3) is not 6 4 4
INFO:root:XX add new best (4, 3) is not 6 4 4
INFO:root:XX add new best (4, 3) is not 6 4 4
INFO:root:XX add new best (4, 3) is not 6 4 4
INFO:root:XX add new best (4, 3) is not 6 4 4
INFO:root:XX add new best (4, 3) is not 6 4 4
INFO:root:XX add new best (4, 3) is not 6 4 4
INFO:root:XX add new best (4, 3) is not 6 4 4
INFO:root:XX add new best (4, 3) is not 6 4 4
INFO:root:XX add new best (4, 3) is not 6 4 4
INFO:root:XX add new best (4, 3) is not 6 4 4
INFO:root:XX add new best (4, 3) is not 6 4 4
INFO:root:XX add new best (4, 3) is not 6 4 4
INFO:root:XX add new best (4, 3) is not 6 4 4
INFO:root:XX add new best (4, 3) is not 6 4 4
INFO:root:XX add new best (4, 3) is not 6 4 4
INFO:root:XX add new best (4, 3) is not 6 4 4
INFO:root:XX add new best (4, 3) is not 6 4 4
INFO:root:XX add new best (4, 3) is not 6 4 4
INFO:root:XX add new best (4, 3) is not 6 4 4
INFO:root:XX add new best (4, 3) is not 6 4 4
INFO:root:XX add new best (4, 3) is not 6 4 4
INFO:root:XX add new best (4, 3) is not 6 4 4
INFO:root:Trace: [(4, [(4, 3) is not 6])]
INFO:root:Trace Quality: [(4, 1)]
INFO:root:Trace Sorted: [(4, 1)]
INFO:root:Finished
INFO:root:Full Trace [(4, [(4, 3) is not 6])]
INFO:root:Trying {'gallopingMUSes': True, 'minPrecheckMUS': True}
INFO:root:Starting Step 1
INFO:root:Current state [[[[6, 8], [2], [6, 8], [9], [4], [3], [7], [1], [5]], [[9], [1, 3], [4], [1, 5, 7, 8], [1, 2, 7], [1, 5, 7], [6], [2, 3], [2, 8]], [[7], [5], [1, 3], [1, 6, 8], [1, 2, 6], [1, 6], [3, 8, 9], [4], [2, 8, 9]], [[5], [1, 3, 6, 7], [1, 3, 6, 7, 9], [4], [8], [1, 6, 7, 9], [1, 9], [2, 7, 9], [2, 6, 7, 9]], [[2], [1, 6, 7, 8], [1, 6, 7, 8, 9], [1, 6, 7], [1, 6, 7, 9], [1, 6, 7, 9], [4], [5], [3]], [[4], [1, 6, 7], [1, 6, 7, 9], [3], [5], [2], [1, 8, 9], [7, 9], [6, 7, 8, 9]], [[3, 6], [4], [2], [5, 6, 7], [3, 6, 7, 9], [5, 6, 7, 9], [3, 9], [8], [1]], [[1, 3, 8], [7, 8], [5], [1, 7], [1, 3, 7, 9], [4], [2], [6], [7, 9]], [[1, 3, 6], [9], [6, 7], [2], [1, 3, 6, 7], [8], [5], [3, 7], [4]]]]
INFO:root:Doing checkSmall1
INFO:root:Getting tiny MUSes, distance 1, for 1 puzlits, 1 repeats
INFO:root:Chunked 1 in [1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
INFO:root:Doing checkSmall2
INFO:root:Getting tiny MUSes, distance 2, for 1 puzlits, 1 repeats
INFO:root:Chunked 1 in [1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
INFO:root:Considering 100 * 1 jobs for minsize=3
INFO:root:Chunked 100 in [9, 9, 9, 9, 8, 8, 8, 8, 8, 8, 8, 8]
INFO:root:XX found first (4, 3) is not 6 4
INFO:root:XX add new best (4, 3) is not 6 4 4
INFO:root:XX add new best (4, 3) is not 6 4 4
INFO:root:XX add new best (4, 3) is not 6 4 4
INFO:root:XX add new best (4, 3) is not 6 4 4
INFO:root:XX add new best (4, 3) is not 6 4 4
INFO:root:XX add new best (4, 3) is not 6 4 4
INFO:root:XX add new best (4, 3) is not 6 4 4
INFO:root:XX add new best (4, 3) is not 6 4 4
INFO:root:XX add new best (4, 3) is not 6 4 4
INFO:root:XX add new best (4, 3) is not 6 4 4
INFO:root:XX add new best (4, 3) is not 6 4 4
INFO:root:XX add new best (4, 3) is not 6 4 4
INFO:root:XX add new best (4, 3) is not 6 4 4
INFO:root:XX add new best (4, 3) is not 6 4 4
INFO:root:XX add new best (4, 3) is not 6 4 4
INFO:root:Considering 100 * 1 jobs for minsize=4
INFO:root:Chunked 100 in [9, 9, 9, 9, 8, 8, 8, 8, 8, 8, 8, 8]
INFO:root:XX add new best (4, 3) is not 6 4 4
INFO:root:XX add new best (4, 3) is not 6 4 4
INFO:root:XX add new best (4, 3) is not 6 4 4
INFO:root:XX add new best (4, 3) is not 6 4 4
INFO:root:XX add new best (4, 3) is not 6 4 4
INFO:root:XX add new best (4, 3) is not 6 4 4
INFO:root:XX add new best (4, 3) is not 6 4 4
INFO:root:XX add new best (4, 3) is not 6 4 4
INFO:root:XX add new best (4, 3) is not 6 4 4
INFO:root:XX add new best (4, 3) is not 6 4 4
INFO:root:XX add new best (4, 3) is not 6 4 4
INFO:root:XX add new best (4, 3) is not 6 4 4
INFO:root:XX add new best (4, 3) is not 6 4 4
INFO:root:XX add new best (4, 3) is not 6 4 4
INFO:root:XX add new best (4, 3) is not 6 4 4
INFO:root:XX add new best (4, 3) is not 6 4 4
INFO:root:XX add new best (4, 3) is not 6 4 4
INFO:root:XX add new best (4, 3) is not 6 4 4
INFO:root:XX add new best (4, 3) is not 6 4 4
INFO:root:XX add new best (4, 3) is not 6 4 4
INFO:root:XX add new best (4, 3) is not 6 4 4
INFO:root:XX add new best (4, 3) is not 6 4 4
INFO:root:XX add new best (4, 3) is not 6 4 4
INFO:root:Trace: [(4, [(4, 3) is not 6])]
INFO:root:Trace Quality: [(4, 1)]
INFO:root:Trace Sorted: [(4, 1)]
INFO:root:Finished
INFO:root:Full Trace [(4, [(4, 3) is not 6])]
INFO:root:Trying {}
INFO:root:Starting Step 1
INFO:root:Current state [[[[1], [3, 7, 8], [3, 7], [2, 3, 4, 7, 8], [2, 7, 8], [2, 3, 4, 7, 8], [5], [6], [9]], [[4], [9], [2], [3, 7], [5], [6], [1], [3, 7], [8]], [[3, 7, 8], [5], [6], [1], [7, 8], [9], [2], [4], [3, 7]], [[3, 5, 7], [3, 7], [9], [6], [4], [2, 7], [8], [2, 5], [1]], [[5, 7], [6], [4], [2, 7, 8, 9], [1], [2, 7, 8], [3, 7, 9], [2, 5], [3, 7]], [[2], [1], [8], [1, 2, 3, 4, 5, 7, 9], [3], [5], [6], [1, 2, 3, 4, 5, 7, 9], [4]], [[3, 7, 8], [4], [3, 7], [5], [2, 7, 8, 9], [2, 3, 7, 8], [3, 7, 9], [1], [6]], [[9], [3, 7, 8], [5], [3, 7, 8], [6], [1], [4], [3, 7, 8], [2]], [[6], [2], [1], [3, 4, 7, 8], [7, 8, 9], [3, 4, 7, 8], [3, 7, 9], [3, 7, 8, 9], [5]]]]
INFO:root:Doing checkSmall1
INFO:root:Getting tiny MUSes, distance 1, for 1 puzlits, 1 repeats
INFO:root:Chunked 1 in [1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
INFO:root:Doing checkSmall2
INFO:root:Getting tiny MUSes, distance 2, for 1 puzlits, 1 repeats
INFO:root:Chunked 1 in [1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
INFO:root:Considering 100 * 1 jobs for minsize=3
INFO:root:Chunked 100 in [9, 9, 9, 9, 8, 8, 8, 8, 8, 8, 8, 8]
INFO:root:Considering 100 * 1 jobs for minsize=4
INFO:root:Chunked 100 in [9, 9, 9, 9, 8, 8, 8, 8, 8, 8, 8, 8]
INFO:root:Considering 100 * 1 jobs for minsize=5
INFO:root:Chunked 100 in [9, 9, 9, 9, 8, 8, 8, 8, 8, 8, 8, 8]
INFO:root:Considering 100 * 1 jobs for minsize=6
INFO:root:Chunked 100 in [9, 9, 9, 9, 8, 8, 8, 8, 8, 8, 8, 8]
INFO:root:Considering 100 * 1 jobs for minsize=7
INFO:root:Chunked 100 in [9, 9, 9, 9, 8, 8, 8, 8, 8, 8, 8, 8]
INFO:root:Considering 100 * 1 jobs for minsize=8
INFO:root:Chunked 100 in [9, 9, 9, 9, 8, 8, 8, 8, 8, 8, 8, 8]
INFO:root:Considering 100 * 1 jobs for minsize=9
INFO:root:Chunked 100 in [9, 9, 9, 9, 8, 8, 8, 8, 8, 8, 8, 8]
INFO:root:Considering 100 * 1 jobs for minsize=10
INFO:root:Chunked 100 in [9, 9, 9, 9, 8, 8, 8, 8, 8, 8, 8, 8]
INFO:root:Considering 100 * 1 jobs for minsize=11
INFO:root:Chunked 100 in [9, 9, 9, 9, 8, 8, 8, 8, 8, 8, 8, 8]
INFO:root:Considering 100 * 1 jobs for minsize=12
INFO:root:Chunked 100 in [9, 9, 9, 9, 8, 8, 8, 8, 8, 8, 8, 8]
INFO:root:Considering 100 * 1 jobs for minsize=13
INFO:root:Chunked 100 in [9, 9, 9, 9, 8, 8, 8, 8, 8, 8, 8, 8]
INFO:root:Considering 100 * 1 jobs for minsize=14
INFO:root:Chunked 100 in [9, 9, 9, 9, 8, 8, 8, 8, 8, 8, 8, 8]
INFO:root:Considering 100 * 1 jobs for minsize=15
INFO:root:Chunked 100 in [9, 9, 9, 9, 8, 8, 8, 8, 8, 8, 8, 8]
INFO:root:Considering 100 * 1 jobs for minsize=16
INFO:root:Chunked 100 in [9, 9, 9, 9, 8, 8, 8, 8, 8, 8, 8, 8]
INFO:root:Considering 100 * 1 jobs for minsize=17
INFO:root:Chunked 100 in [9, 9, 9, 9, 8, 8, 8, 8, 8, 8, 8, 8]
INFO:root:XX found first (1, 4) is not 7 18
INFO:root:XX add new best (1, 4) is not 7 18 18
INFO:root:XX add new best (1, 4) is not 7 18 18
INFO:root:XX add new best (1, 4) is not 7 18 18
INFO:root:XX add new best (1, 4) is not 7 18 18
INFO:root:XX add new best (1, 4) is not 7 18 18
INFO:root:XX add new best (1, 4) is not 7 18 18
INFO:root:XX add new best (1, 4) is not 7 18 18
INFO:root:XX add new best (1, 4) is not 7 18 18
INFO:root:XX add new best (1, 4) is not 7 18 18
INFO:root:XX add new best (1, 4) is not 7 18 18
INFO:root:XX add new best (1, 4) is not 7 18 18
INFO:root:XX add new best (1, 4) is not 7 18 18
INFO:root:XX add new best (1, 4) is not 7 18 18
INFO:root:XX add new best (1, 4) is not 7 18 18
INFO:root:XX add new best (1, 4) is not 7 18 18
INFO:root:XX add new best (1, 4) is not 7 18 18
INFO:root:XX add new best (1, 4) is not 7 18 18
INFO:root:XX add new best (1, 4) is not 7 18 18
INFO:root:XX add new best (1, 4) is not 7 18 18
INFO:root:XX add new best (1, 4) is not 7 18 18
INFO:root:XX add new best (1, 4) is not 7 18 18
INFO:root:XX add new best (1, 4) is not 7 18 18
INFO:root:XX add new best (1, 4) is not 7 18 18
INFO:root:XX add new best (1, 4) is not 7 18 18
INFO:root:XX add new best (1, 4) is not 7 18 18
INFO:root:XX add new best (1, 4) is not 7 18 18
INFO:root:XX add new best (1, 4) is not 7 18 18
INFO:root:XX add new best (1, 4) is not 7 18 18
INFO:root:XX add new best (1, 4) is not 7 18 18
INFO:root:XX add new best (1, 4) is not 7 18 18
INFO:root:XX add new best (1, 4) is not 7 18 18
INFO:root:XX add new best (1, 4) is not 7 18 18
INFO:root:XX add new best (1, 4) is not 7 18 18
INFO:root:XX add new best (1, 4) is not 7 18 18
INFO:root:XX add new best (1, 4) is not 7 18 18
INFO:root:XX add new best (1, 4) is not 7 18 18
INFO:root:XX add new best (1, 4) is not 7 18 18
INFO:root:XX add new best (1, 4) is not 7 18 18
INFO:root:XX add new best (1, 4) is not 7 18 18
INFO:root:XX add new best (1, 4) is not 7 18 18
INFO:root:XX add new best (1, 4) is not 7 18 18
INFO:root:XX add new best (1, 4) is not 7 18 18
INFO:root:XX add new best (1, 4) is not 7 18 18
INFO:root:XX add new best (1, 4) is not 7 18 18
INFO:root:XX add new best (1, 4) is not 7 18 18
INFO:root:XX add new best (1, 4) is not 7 18 18
INFO:root:XX add new best (1, 4) is not 7 18 18
INFO:root:XX add new best (1, 4) is not 7 18 18
INFO:root:XX add new best (1, 4) is not 7 18 18
INFO:root:XX add new best (1, 4) is not 7 18 18
INFO:root:XX add new best (1, 4) is not 7 18 18
INFO:root:XX add new best (1, 4) is not 7 18 18
INFO:root:XX add new best (1, 4) is not 7 18 18
INFO:root:XX add new best (1, 4) is not 7 18 18
INFO:root:XX add new best (1, 4) is not 7 18 18
INFO:root:XX add new best (1, 4) is not 7 18 18
INFO:root:XX add new best (1, 4) is not 7 18 18
INFO:root:XX add new best (1, 4) is not 7 18 18
INFO:root:XX add new best (1, 4) is not 7 18 18
INFO:root:XX add new best (1, 4) is not 7 18 18
INFO:root:XX add new best (1, 4) is not 7 18 18
INFO:root:XX add new best (1, 4) is not 7 18 18
INFO:root:XX add new best (1, 4) is not 7 18 18
INFO:root:XX add new best (1, 4) is not 7 18 18
INFO:root:XX add new best (1, 4) is not 7 18 18
INFO:root:XX add new best (1, 4) is not 7 18 18
INFO:root:XX add new best (1, 4) is not 7 18 18
INFO:root:XX add new best (1, 4) is not 7 18 18
INFO:root:XX add new best (1, 4) is not 7 18 18
INFO:root:XX add new best (1, 4) is not 7 18 18
INFO:root:XX add new best (1, 4) is not 7 18 18
INFO:root:XX add new best (1, 4) is not 7 18 18
INFO:root:XX add new best (1, 4) is not 7 18 18
INFO:root:XX add new best (1, 4) is not 7 18 18
INFO:root:XX add new best (1, 4) is not 7 18 18
INFO:root:XX add new best (1, 4) is not 7 18 18
INFO:root:XX add new best (1, 4) is not 7 18 18
INFO:root:XX add new best (1, 4) is not 7 18 18
INFO:root:XX add new best (1, 4) is not 7 18 18
INFO:root:XX add new best (1, 4) is not 7 18 18
INFO:root:XX add new best (1, 4) is not 7 18 18
INFO:root:XX add new best (1, 4) is not 7 18 18
INFO:root:XX add new best (1, 4) is not 7 18 18
INFO:root:Considering 100 * 1 jobs for minsize=18
INFO:root:Chunked 100 in [9, 9, 9, 9, 8, 8, 8, 8, 8, 8, 8, 8]
INFO:root:XX add new best (1, 4) is not 7 18 18
INFO:root:XX add new best (1, 4) is not 7 18 18
INFO:root:XX add new best (1, 4) is not 7 18 18
INFO:root:XX add new best (1, 4) is not 7 18 18
INFO:root:XX add new best (1, 4) is not 7 18 18
INFO:root:XX add new best (1, 4) is not 7 18 18
INFO:root:XX add new best (1, 4) is not 7 18 18
INFO:root:XX add new best (1, 4) is not 7 18 18
INFO:root:XX add new best (1, 4) is not 7 18 18
INFO:root:XX add new best (1, 4) is not 7 18 18
INFO:root:XX add new best (1, 4) is not 7 18 18
INFO:root:XX add new best (1, 4) is not 7 18 18
INFO:root:XX add new best (1, 4) is not 7 18 18
INFO:root:XX add new best (1, 4) is not 7 18 18
INFO:root:XX add new best (1, 4) is not 7 18 18
INFO:root:XX add new best (1, 4) is not 7 18 18
INFO:root:XX add new best (1, 4) is not 7 18 18
INFO:root:XX add new best (1, 4) is not 7 18 18
INFO:root:XX add new best (1, 4) is not 7 18 18
INFO:root:XX add new best (1, 4) is not 7 18 18
INFO:root:XX add new best (1, 4) is not 7 18 18
INFO:root:XX add new best (1, 4) is not 7 18 18
INFO:root:XX add new best (1, 4) is not 7 18 18
INFO:root:XX add new best (1, 4) is not 7 18 18
INFO:root:XX add new best (1, 4) is not 7 18 18
INFO:root:XX add new best (1, 4) is not 7 18 18
INFO:root:XX add new best (1, 4) is not 7 18 18
INFO:root:XX add new best (1, 4) is not 7 18 18
INFO:root:XX add new best (1, 4) is not 7 18 18
INFO:root:XX add new best (1, 4) is not 7 18 18
INFO:root:XX add new best (1, 4) is not 7 18 18
INFO:root:XX add new best (1, 4) is not 7 18 18
INFO:root:XX add new best (1, 4) is not 7 18 18
INFO:root:XX add new best (1, 4) is not 7 18 18
INFO:root:XX add new best (1, 4) is not 7 18 18
INFO:root:XX add new best (1, 4) is not 7 18 18
INFO:root:XX add new best (1, 4) is not 7 18 18
INFO:root:XX add new best (1, 4) is not 7 18 18
INFO:root:XX add new best (1, 4) is not 7 18 18
INFO:root:XX add new best (1, 4) is not 7 18 18
INFO:root:XX add new best (1, 4) is not 7 18 18
INFO:root:XX add new best (1, 4) is not 7 18 18
INFO:root:XX add new best (1, 4) is not 7 18 18
INFO:root:XX add new best (1, 4) is not 7 18 18
INFO:root:XX add new best (1, 4) is not 7 18 18
INFO:root:XX add new best (1, 4) is not 7 18 18
INFO:root:XX add new best (1, 4) is not 7 18 18
INFO:root:XX add new best (1, 4) is not 7 18 18
INFO:root:XX add new best (1, 4) is not 7 18 18
INFO:root:XX add new best (1, 4) is not 7 18 18
INFO:root:XX add new best (1, 4) is not 7 18 18
INFO:root:XX add new best (1, 4) is not 7 18 18
INFO:root:XX add new best (1, 4) is not 7 18 18
INFO:root:XX add new best (1, 4) is not 7 18 18
INFO:root:XX add new best (1, 4) is not 7 18 18
INFO:root:XX add new best (1, 4) is not 7 18 18
INFO:root:XX add new best (1, 4) is not 7 18 18
INFO:root:XX add new best (1, 4) is not 7 18 18
INFO:root:XX add new best (1, 4) is not 7 18 18
INFO:root:XX add new best (1, 4) is not 7 18 18
INFO:root:XX add new best (1, 4) is not 7 18 18
INFO:root:XX add new best (1, 4) is not 7 18 18
INFO:root:XX add new best (1, 4) is not 7 18 18
INFO:root:XX add new best (1, 4) is not 7 18 18
INFO:root:XX add new best (1, 4) is not 7 18 18
INFO:root:XX add new best (1, 4) is not 7 18 18
INFO:root:XX add new best (1, 4) is not 7 18 18
INFO:root:XX add new best (1, 4) is not 7 18 18
INFO:root:XX add new best (1, 4) is not 7 18 18
INFO:root:XX add new best (1, 4) is not 7 18 18
INFO:root:XX add new best (1, 4) is not 7 18 18
INFO:root:XX add new best (1, 4) is not 7 18 18
INFO:root:XX add new best (1, 4) is not 7 18 18
INFO:root:XX add new best (1, 4) is not 7 18 18
INFO:root:XX add new best (1, 4) is not 7 18 18
INFO:root:XX add new best (1, 4) is not 7 18 18
INFO:root:XX add new best (1, 4) is not 7 18 18
INFO:root:XX add new best (1, 4) is not 7 18 18
INFO:root:XX add new best (1, 4) is not 7 18 18
INFO:root:XX add new best (1, 4) is not 7 18 18
INFO:root:XX add new best (1, 4) is not 7 18 18
INFO:root:XX add new best (1, 4) is not 7 18 18
INFO:root:Trace: [(18, [(1, 4) is not 7])]
INFO:root:Trace Quality: [(18, 1)]
INFO:root:Trace Sorted: [(18, 1)]
INFO:root:Finished
INFO:root:Full Trace [(18, [(1, 4) is not 7])]
INFO:root:Trying {'prechopMUSes': True}
INFO:root:Starting Step 1
INFO:root:Current state [[[[1], [3, 7, 8], [3, 7], [2, 3, 4, 7, 8], [2, 7, 8], [2, 3, 4, 7, 8], [5], [6], [9]], [[4], [9], [2], [3, 7], [5], [6], [1], [3, 7], [8]], [[3, 7, 8], [5], [6], [1], [7, 8], [9], [2], [4], [3, 7]], [[3, 5, 7], [3, 7], [9], [6], [4], [2, 7], [8], [2, 5], [1]], [[5, 7], [6], [4], [2, 7, 8, 9], [1], [2, 7, 8], [3, 7, 9], [2, 5], [3, 7]], [[2], [1], [8], [1, 2, 3, 4, 5, 7, 9], [3], [5], [6], [1, 2, 3, 4, 5, 7, 9], [4]], [[3, 7, 8], [4], [3, 7], [5], [2, 7, 8, 9], [2, 3, 7, 8], [3, 7, 9], [1], [6]], [[9], [3, 7, 8], [5], [3, 7, 8], [6], [1], [4], [3, 7, 8], [2]], [[6], [2], [1], [3, 4, 7, 8], [7, 8, 9], [3, 4, 7, 8], [3, 7, 9], [3, 7, 8, 9], [5]]]]
INFO:root:Doing checkSmall1
INFO:root:Getting tiny MUSes, distance 1, for 1 puzlits, 1 repeats
INFO:root:Chunked 1 in [1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
INFO:root:Doing checkSmall2
INFO:root:Getting tiny MUSes, distance 2, for 1 puzlits, 1 repeats
INFO:root:Chunked 1 in [1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
INFO:root:Considering 100 * 1 jobs for minsize=3
INFO:root:Chunked 100 in [9, 9, 9, 9, 8, 8, 8, 8, 8, 8, 8, 8]
INFO:root:Considering 100 * 1 jobs for minsize=4
INFO:root:Chunked 100 in [9, 9, 9, 9, 8, 8, 8, 8, 8, 8, 8, 8]
INFO:root:XX found first (1, 4) is not 7 5
INFO:root:XX add new best (1, 4) is not 7 5 5
INFO:root:XX add new best (1, 4) is not 7 5 5
INFO:root:XX add new best (1, 4) is not 7 5 5
INFO:root:XX add new best (1, 4) is not 7 5 5
INFO:root:XX add new best (1, 4) is not 7 5 5
INFO:root:XX add new best (1, 4) is not 7 5 5
INFO:root:Considering 100 * 1 jobs for minsize=5
INFO:root:Chunked 100 in [9, 9, 9, 9, 8, 8, 8, 8, 8, 8, 8, 8]
INFO:root:XX add new best (1, 4) is not 7 5 5
INFO:root:XX add new best (1, 4) is not 7 5 5
INFO:root:XX add new best (1, 4) is not 7 5 5
INFO:root:XX add new best (1, 4) is not 7 5 5
INFO:root:XX add new best (1, 4) is not 7 5 5
INFO:root:XX add new best (1, 4) is not 7 5 5
INFO:root:XX add new best (1, 4) is not 7 5 5
INFO:root:XX add new best (1, 4) is not 7 5 5
INFO:root:XX add new best (1, 4) is not 7 5 5
INFO:root:Trace: [(5, [(1, 4) is not 7])]
INFO:root:Trace Quality: [(5, 1)]
INFO:root:Trace Sorted: [(5, 1)]
INFO:root:Finished
INFO:root:Full Trace [(5, [(1, 4) is not 7])]
INFO:root:Trying {'quarterChopMUS': True}
INFO:root:Starting Step 1
INFO:root:Current state [[[[1], [3, 7, 8], [3, 7], [2, 3, 4, 7, 8], [2, 7, 8], [2, 3, 4, 7, 8], [5], [6], [9]], [[4], [9], [2], [3, 7], [5], [6], [1], [3, 7], [8]], [[3, 7, 8], [5], [6], [1], [7, 8], [9], [2], [4], [3, 7]], [[3, 5, 7], [3, 7], [9], [6], [4], [2, 7], [8], [2, 5], [1]], [[5, 7], [6], [4], [2, 7, 8, 9], [1], [2, 7, 8], [3, 7, 9], [2, 5], [3, 7]], [[2], [1], [8], [1, 2, 3, 4, 5, 7, 9], [3], [5], [6], [1, 2, 3, 4, 5, 7, 9], [4]], [[3, 7, 8], [4], [3, 7], [5], [2, 7, 8, 9], [2, 3, 7, 8], [3, 7, 9], [1], [6]], [[9], [3, 7, 8], [5], [3, 7, 8], [6], [1], [4], [3, 7, 8], [2]], [[6], [2], [1], [3, 4, 7, 8], [7, 8, 9], [3, 4, 7, 8], [3, 7, 9], [3, 7, 8, 9], [5]]]]
INFO:root:Doing checkSmall1
INFO:root:Getting tiny MUSes, distance 1, for 1 puzlits, 1 repeats
INFO:root:Chunked 1 in [1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
INFO:root:Doing checkSmall2
INFO:root:Getting tiny MUSes, distance 2, for 1 puzlits, 1 repeats
INFO:root:Chunked 1 in [1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
INFO:root:Considering 100 * 1 jobs for minsize=3
INFO:root:Chunked 100 in [9, 9, 9, 9, 8, 8, 8, 8, 8, 8, 8, 8]
INFO:root:Considering 100 * 1 jobs for minsize=4
INFO:root:Chunked 100 in [9, 9, 9, 9, 8, 8, 8, 8, 8, 8, 8, 8]
INFO:root:XX found first (1, 4) is not 7 5
INFO:root:XX add new best (1, 4) is not 7 5 5
INFO:root:XX add new best (1, 4) is not 7 5 5
INFO:root:XX add new best (1, 4) is not 7 5 5
INFO:root:XX add new best (1, 4) is not 7 5 5
INFO:root:XX add new best (1, 4) is not 7 5 5
INFO:root:XX add new best (1, 4) is not 7 5 5
INFO:root:XX add new best (1, 4) is not 7 5 5
INFO:root:XX add new best (1, 4) is not 7 5 5
INFO:root:XX add new best (1, 4) is not 7 5 5
INFO:root:XX add new best (1, 4) is not 7 5 5
INFO:root:XX add new best (1, 4) is not 7 5 5
INFO:root:Considering 100 * 1 jobs for minsize=5
INFO:root:Chunked 100 in [9, 9, 9, 9, 8, 8, 8, 8, 8, 8, 8, 8]
INFO:root:XX add new best (1, 4) is not 7 5 5
INFO:root:XX add new best (1, 4) is not 7 5 5
INFO:root:XX add new best (1, 4) is not 7 5 5
INFO:root:XX add new best (1, 4) is not 7 5 5
INFO:root:XX add new best (1, 4) is not 7 5 5
INFO:root:XX add new best (1, 4) is not 7 5 5
INFO:root:XX add new best (1, 4) is not 7 5 5
INFO:root:XX add new best (1, 4) is not 7 5 5
INFO:root:XX add new best (1, 4) is not 7 5 5
INFO:root:XX add new best (1, 4) is not 7 5 5
INFO:root:XX add new best (1, 4) is not 7 5 5
INFO:root:XX add new best (1, 4) is not 7 5 5
INFO:root:XX add new best (1, 4) is not 7 5 5
INFO:root:XX add new best (1, 4) is not 7 5 5
INFO:root:XX add new best (1, 4) is not 7 5 5
INFO:root:Trace: [(5, [(1, 4) is not 7])]
INFO:root:Trace Quality: [(5, 1)]
INFO:root:Trace Sorted: [(5, 1)]
INFO:root:Finished
INFO:root:Full Trace [(5, [(1, 4) is not 7])]
INFO:root:Trying {'minPrecheckMUS': True}
INFO:root:Starting Step 1
INFO:root:Current state [[[[1], [3, 7, 8], [3, 7], [2, 3, 4, 7, 8], [2, 7, 8], [2, 3, 4, 7, 8], [5], [6], [9]], [[4], [9], [2], [3, 7], [5], [6], [1], [3, 7], [8]], [[3, 7, 8], [5], [6], [1], [7, 8], [9], [2], [4], [3, 7]], [[3, 5, 7], [3, 7], [9], [6], [4], [2, 7], [8], [2, 5], [1]], [[5, 7], [6], [4], [2, 7, 8, 9], [1], [2, 7, 8], [3, 7, 9], [2, 5], [3, 7]], [[2], [1], [8], [1, 2, 3, 4, 5, 7, 9], [3], [5], [6], [1, 2, 3, 4, 5, 7, 9], [4]], [[3, 7, 8], [4], [3, 7], [5], [2, 7, 8, 9], [2, 3, 7, 8], [3, 7, 9], [1], [6]], [[9], [3, 7, 8], [5], [3, 7, 8], [6], [1], [4], [3, 7, 8], [2]], [[6], [2], [1], [3, 4, 7, 8], [7, 8, 9], [3, 4, 7, 8], [3, 7, 9], [3, 7, 8, 9], [5]]]]
INFO:root:Doing checkSmall1
INFO:root:Getting tiny MUSes, distance 1, for 1 puzlits, 1 repeats
INFO:root:Chunked 1 in [1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
INFO:root:Doing checkSmall2
INFO:root:Getting tiny MUSes, distance 2, for 1 puzlits, 1 repeats
INFO:root:Chunked 1 in [1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
INFO:root:Considering 100 * 1 jobs for minsize=3
INFO:root:Chunked 100 in [9, 9, 9, 9, 8, 8, 8, 8, 8, 8, 8, 8]
INFO:root:Considering 100 * 1 jobs for minsize=4
INFO:root:Chunked 100 in [9, 9, 9, 9, 8, 8, 8, 8, 8, 8, 8, 8]
INFO:root:XX found first (1, 4) is not 7 5
INFO:root:XX add new best (1, 4) is not 7 5 5
INFO:root:XX add new best (1, 4) is not 7 5 5
INFO:root:XX add new best (1, 4) is not 7 5 5
INFO:root:XX add new best (1, 4) is not 7 5 5
INFO:root:XX add new best (1, 4) is not 7 5 5
INFO:root:XX add new best (1, 4) is not 7 5 5
INFO:root:XX add new best (1, 4) is not 7 5 5
INFO:root:XX add new best (1, 4) is not 7 5 5
INFO:root:XX add new best (1, 4) is not 7 5 5
INFO:root:XX add new best (1, 4) is not 7 5 5
INFO:root:Considering 100 * 1 jobs for minsize=5
INFO:root:Chunked 100 in [9, 9, 9, 9, 8, 8, 8, 8, 8, 8, 8, 8]
INFO:root:XX add new best (1, 4) is not 7 5 5
INFO:root:XX add new best (1, 4) is not 7 5 5
INFO:root:XX add new best (1, 4) is not 7 5 5
INFO:root:XX add new best (1, 4) is not 7 5 5
INFO:root:XX add new best (1, 4) is not 7 5 5
INFO:root:XX add new best (1, 4) is not 7 5 5
INFO:root:XX add new best (1, 4) is not 7 5 5
INFO:root:XX add new best (1, 4) is not 7 5 5
INFO:root:XX add new best (1, 4) is not 7 5 5
INFO:root:XX add new best (1, 4) is not 7 5 5
INFO:root:Trace: [(5, [(1, 4) is not 7])]
INFO:root:Trace Quality: [(5, 1)]
INFO:root:Trace Sorted: [(5, 1)]
INFO:root:Finished
INFO:root:Full Trace [(5, [(1, 4) is not 7])]
INFO:root:Trying {'gallopingMUSes': True}
INFO:root:Starting Step 1
INFO:root:Current state [[[[1], [3, 7, 8], [3, 7], [2, 3, 4, 7, 8], [2, 7, 8], [2, 3, 4, 7, 8], [5], [6], [9]], [[4], [9], [2], [3, 7], [5], [6], [1], [3, 7], [8]], [[3, 7, 8], [5], [6], [1], [7, 8], [9], [2], [4], [3, 7]], [[3, 5, 7], [3, 7], [9], [6], [4], [2, 7], [8], [2, 5], [1]], [[5, 7], [6], [4], [2, 7, 8, 9], [1], [2, 7, 8], [3, 7, 9], [2, 5], [3, 7]], [[2], [1], [8], [1, 2, 3, 4, 5, 7, 9], [3], [5], [6], [1, 2, 3, 4, 5, 7, 9], [4]], [[3, 7, 8], [4], [3, 7], [5], [2, 7, 8, 9], [2, 3, 7, 8], [3, 7, 9], [1], [6]], [[9], [3, 7, 8], [5], [3, 7, 8], [6], [1], [4], [3, 7, 8], [2]], [[6], [2], [1], [3, 4, 7, 8], [7, 8, 9], [3, 4, 7, 8], [3, 7, 9], [3, 7, 8, 9], [5]]]]
INFO:root:Doing checkSmall1
INFO:root:Getting tiny MUSes, distance 1, for 1 puzlits, 1 repeats
INFO:root:Chunked 1 in [1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
INFO:root:Doing checkSmall2
INFO:root:Getting tiny MUSes, distance 2, for 1 puzlits, 1 repeats
INFO:root:Chunked 1 in [1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
INFO:root:Considering 100 * 1 jobs for minsize=3
INFO:root:Chunked 100 in [9, 9, 9, 9, 8, 8, 8, 8, 8, 8, 8, 8]
INFO:root:Considering 100 * 1 jobs for minsize=4
INFO:root:Chunked 100 in [9, 9, 9, 9, 8, 8, 8, 8, 8, 8, 8, 8]
INFO:root:XX found first (1, 4) is not 7 5
INFO:root:XX add new best (1, 4) is not 7 5 5
INFO:root:XX add new best (1, 4) is not 7 5 5
INFO:root:XX add new best (1, 4) is not 7 5 5
INFO:root:XX add new best (1, 4) is not 7 5 5
INFO:root:XX add new best (1, 4) is not 7 5 5
INFO:root:XX add new best (1, 4) is not 7 5 5
INFO:root:XX add new best (1, 4) is not 7 5 5
INFO:root:XX add new best (1, 4) is not 7 5 5
INFO:root:XX add new best (1, 4) is not 7 5 5
INFO:root:XX add new best (1, 4) is not 7 5 5
INFO:root:Considering 100 * 1 jobs for minsize=5
INFO:root:Chunked 100 in [9, 9, 9, 9, 8, 8, 8, 8, 8, 8, 8, 8]
INFO:root:XX add new best (1, 4) is not 7 5 5
INFO:root:XX add new best (1, 4) is not 7 5 5
INFO:root:XX add new best (1, 4) is not 7 5 5
INFO:root:XX add new best (1, 4) is not 7 5 5
INFO:root:XX add new best (1, 4) is not 7 5 5
INFO:root:XX add new best (1, 4) is not 7 5 5
INFO:root:XX add new best (1, 4) is not 7 5 5
INFO:root:XX add new best (1, 4) is not 7 5 5
INFO:root:XX add new best (1, 4) is not 7 5 5
INFO:root:XX add new best (1, 4) is not 7 5 5
INFO:root:XX add new best (1, 4) is not 7 5 5
INFO:root:Trace: [(5, [(1, 4) is not 7])]
INFO:root:Trace Quality: [(5, 1)]
INFO:root:Trace Sorted: [(5, 1)]
INFO:root:Finished
INFO:root:Full Trace [(5, [(1, 4) is not 7])]
INFO:root:Trying {'minPrecheckStepsMUS': True}
INFO:root:Starting Step 1
INFO:root:Current state [[[[1], [3, 7, 8], [3, 7], [2, 3, 4, 7, 8], [2, 7, 8], [2, 3, 4, 7, 8], [5], [6], [9]], [[4], [9], [2], [3, 7], [5], [6], [1], [3, 7], [8]], [[3, 7, 8], [5], [6], [1], [7, 8], [9], [2], [4], [3, 7]], [[3, 5, 7], [3, 7], [9], [6], [4], [2, 7], [8], [2, 5], [1]], [[5, 7], [6], [4], [2, 7, 8, 9], [1], [2, 7, 8], [3, 7, 9], [2, 5], [3, 7]], [[2], [1], [8], [1, 2, 3, 4, 5, 7, 9], [3], [5], [6], [1, 2, 3, 4, 5, 7, 9], [4]], [[3, 7, 8], [4], [3, 7], [5], [2, 7, 8, 9], [2, 3, 7, 8], [3, 7, 9], [1], [6]], [[9], [3, 7, 8], [5], [3, 7, 8], [6], [1], [4], [3, 7, 8], [2]], [[6], [2], [1], [3, 4, 7, 8], [7, 8, 9], [3, 4, 7, 8], [3, 7, 9], [3, 7, 8, 9], [5]]]]
INFO:root:Doing checkSmall1
INFO:root:Getting tiny MUSes, distance 1, for 1 puzlits, 1 repeats
INFO:root:Chunked 1 in [1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
INFO:root:Doing checkSmall2
INFO:root:Getting tiny MUSes, distance 2, for 1 puzlits, 1 repeats
INFO:root:Chunked 1 in [1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
INFO:root:Considering 100 * 1 jobs for minsize=3
INFO:root:Chunked 100 in [9, 9, 9, 9, 8, 8, 8, 8, 8, 8, 8, 8]
INFO:root:Considering 100 * 1 jobs for minsize=4
INFO:root:Chunked 100 in [9, 9, 9, 9, 8, 8, 8, 8, 8, 8, 8, 8]
INFO:root:XX found first (1, 4) is not 7 5
INFO:root:XX add new best (1, 4) is not 7 5 5
INFO:root:XX add new best (1, 4) is not 7 5 5
INFO:root:XX add new best (1, 4) is not 7 5 5
INFO:root:XX add new best (1, 4) is not 7 5 5
INFO:root:XX add new best (1, 4) is not 7 5 5
INFO:root:XX add new best (1, 4) is not 7 5 5
INFO:root:XX add new best (1, 4) is not 7 5 5
INFO:root:XX add new best (1, 4) is not 7 5 5
INFO:root:XX add new best (1, 4) is not 7 5 5
INFO:root:XX add new best (1, 4) is not 7 5 5
INFO:root:XX add new best (1, 4) is not 7 5 5
INFO:root:Considering 100 * 1 jobs for minsize=5
INFO:root:Chunked 100 in [9, 9, 9, 9, 8, 8, 8, 8, 8, 8, 8, 8]
INFO:root:XX add new best (1, 4) is not 7 5 5
INFO:root:XX add new best (1, 4) is not 7 5 5
INFO:root:XX add new best (1, 4) is not 7 5 5
INFO:root:XX add new best (1, 4) is not 7 5 5
INFO:root:XX add new best (1, 4) is not 7 5 5
INFO:root:XX add new best (1, 4) is not 7 5 5
INFO:root:XX add new best (1, 4) is not 7 5 5
INFO:root:XX add new best (1, 4) is not 7 5 5
INFO:root:XX add new best (1, 4) is not 7 5 5
INFO:root:XX add new best (1, 4) is not 7 5 5
INFO:root:Trace: [(5, [(1, 4) is not 7])]
INFO:root:Trace Quality: [(5, 1)]
INFO:root:Trace Sorted: [(5, 1)]
INFO:root:Finished
INFO:root:Full Trace [(5, [(1, 4) is not 7])]
INFO:root:Trying {'gallopingMUSes': True, 'minPrecheckMUS': True}
INFO:root:Starting Step 1
INFO:root:Current state [[[[1], [3, 7, 8], [3, 7], [2, 3, 4, 7, 8], [2, 7, 8], [2, 3, 4, 7, 8], [5], [6], [9]], [[4], [9], [2], [3, 7], [5], [6], [1], [3, 7], [8]], [[3, 7, 8], [5], [6], [1], [7, 8], [9], [2], [4], [3, 7]], [[3, 5, 7], [3, 7], [9], [6], [4], [2, 7], [8], [2, 5], [1]], [[5, 7], [6], [4], [2, 7, 8, 9], [1], [2, 7, 8], [3, 7, 9], [2, 5], [3, 7]], [[2], [1], [8], [1, 2, 3, 4, 5, 7, 9], [3], [5], [6], [1, 2, 3, 4, 5, 7, 9], [4]], [[3, 7, 8], [4], [3, 7], [5], [2, 7, 8, 9], [2, 3, 7, 8], [3, 7, 9], [1], [6]], [[9], [3, 7, 8], [5], [3, 7, 8], [6], [1], [4], [3, 7, 8], [2]], [[6], [2], [1], [3, 4, 7, 8], [7, 8, 9], [3, 4, 7, 8], [3, 7, 9], [3, 7, 8, 9], [5]]]]
INFO:root:Doing checkSmall1
INFO:root:Getting tiny MUSes, distance 1, for 1 puzlits, 1 repeats
INFO:root:Chunked 1 in [1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
INFO:root:Doing checkSmall2
INFO:root:Getting tiny MUSes, distance 2, for 1 puzlits, 1 repeats
INFO:root:Chunked 1 in [1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
INFO:root:Considering 100 * 1 jobs for minsize=3
INFO:root:Chunked 100 in [9, 9, 9, 9, 8, 8, 8, 8, 8, 8, 8, 8]
INFO:root:Considering 100 * 1 jobs for minsize=4
INFO:root:Chunked 100 in [9, 9, 9, 9, 8, 8, 8, 8, 8, 8, 8, 8]
INFO:root:XX found first (1, 4) is not 7 5
INFO:root:XX add new best (1, 4) is not 7 5 5
INFO:root:XX add new best (1, 4) is not 7 5 5
INFO:root:XX add new best (1, 4) is not 7 5 5
INFO:root:XX add new best (1, 4) is not 7 5 5
INFO:root:XX add new best (1, 4) is not 7 5 5
INFO:root:XX add new best (1, 4) is not 7 5 5
INFO:root:XX add new best (1, 4) is not 7 5 5
INFO:root:XX add new best (1, 4) is not 7 5 5
INFO:root:XX add new best (1, 4) is not 7 5 5
INFO:root:XX add new best (1, 4) is not 7 5 5
INFO:root:XX add new best (1, 4) is not 7 5 5
INFO:root:Considering 100 * 1 jobs for minsize=5
INFO:root:Chunked 100 in [9, 9, 9, 9, 8, 8, 8, 8, 8, 8, 8, 8]
INFO:root:XX add new best (1, 4) is not 7 5 5
INFO:root:XX add new best (1, 4) is not 7 5 5
INFO:root:XX add new best (1, 4) is not 7 5 5
INFO:root:XX add new best (1, 4) is not 7 5 5
INFO:root:XX add new best (1, 4) is not 7 5 5
INFO:root:XX add new best (1, 4) is not 7 5 5
INFO:root:XX add new best (1, 4) is not 7 5 5
INFO:root:XX add new best (1, 4) is not 7 5 5
INFO:root:XX add new best (1, 4) is not 7 5 5
INFO:root:XX add new best (1, 4) is not 7 5 5
INFO:root:Trace: [(5, [(1, 4) is not 7])]
INFO:root:Trace Quality: [(5, 1)]
INFO:root:Trace Sorted: [(5, 1)]
INFO:root:Finished
INFO:root:Full Trace [(5, [(1, 4) is not 7])]
INFO:root:Trying {}
INFO:root:Starting Step 1
INFO:root:Current state [[[[1], [3, 7, 8], [3, 7], [2, 3, 4, 7, 8], [2, 7, 8], [2, 3, 4, 7, 8], [5], [6], [9]], [[4], [9], [2], [3, 7], [5], [6], [1], [3, 7], [8]], [[3, 7, 8], [5], [6], [1], [7, 8], [9], [2], [4], [3, 7]], [[3, 5, 7], [3, 7], [9], [6], [4], [2, 7], [8], [2, 5], [1]], [[5, 7], [6], [4], [2, 7, 8, 9], [1], [2, 7, 8], [3, 7, 9], [2, 5], [3, 7]], [[2], [1], [8], [7, 9], [3], [5], [6], [7, 9], [4]], [[3, 7, 8], [4], [3, 7], [5], [2, 7, 8, 9], [2, 3, 7, 8], [3, 7, 9], [1], [6]], [[9], [3, 7, 8], [5], [3, 7, 8], [6], [1], [4], [3, 7, 8], [2]], [[6], [2], [1], [3, 4, 7, 8], [7, 8, 9], [3, 4, 7, 8], [3, 7, 9], [3, 7, 8, 9], [5]]]]
INFO:root:Doing checkSmall1
INFO:root:Getting tiny MUSes, distance 1, for 1 puzlits, 1 repeats
INFO:root:Chunked 1 in [1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
INFO:root:Doing checkSmall2
INFO:root:Getting tiny MUSes, distance 2, for 1 puzlits, 1 repeats
INFO:root:Chunked 1 in [1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
INFO:root:Considering 100 * 1 jobs for minsize=3
INFO:root:Chunked 100 in [9, 9, 9, 9, 8, 8, 8, 8, 8, 8, 8, 8]
INFO:root:Considering 100 * 1 jobs for minsize=4
INFO:root:Chunked 100 in [9, 9, 9, 9, 8, 8, 8, 8, 8, 8, 8, 8]
INFO:root:Considering 100 * 1 jobs for minsize=5
INFO:root:Chunked 100 in [9, 9, 9, 9, 8, 8, 8, 8, 8, 8, 8, 8]
INFO:root:Considering 100 * 1 jobs for minsize=6
INFO:root:Chunked 100 in [9, 9, 9, 9, 8, 8, 8, 8, 8, 8, 8, 8]
INFO:root:XX found first (1, 4) is not 7 7
INFO:root:XX add new best (1, 4) is not 7 7 7
INFO:root:XX add new best (1, 4) is not 7 7 7
INFO:root:XX add new best (1, 4) is not 7 7 7
INFO:root:XX add new best (1, 4) is not 7 7 7
INFO:root:XX add new best (1, 4) is not 7 7 7
INFO:root:XX add new best (1, 4) is not 7 7 7
INFO:root:XX add new best (1, 4) is not 7 7 7
INFO:root:XX add new best (1, 4) is not 7 7 7
INFO:root:XX add new best (1, 4) is not 7 7 7
INFO:root:XX add new best (1, 4) is not 7 7 7
INFO:root:XX add new best (1, 4) is not 7 7 7
INFO:root:XX add new best (1, 4) is not 7 7 7
INFO:root:XX add new best (1, 4) is not 7 7 7
INFO:root:XX add new best (1, 4) is not 7 7 7
INFO:root:XX add new best (1, 4) is not 7 7 7
INFO:root:XX add new best (1, 4) is not 7 7 7
INFO:root:XX add new best (1, 4) is not 7 7 7
INFO:root:XX add new best (1, 4) is not 7 7 7
INFO:root:XX add new best (1, 4) is not 7 7 7
INFO:root:XX add new best (1, 4) is not 7 7 7
INFO:root:XX add new best (1, 4) is not 7 7 7
INFO:root:XX add new best (1, 4) is not 7 7 7
INFO:root:XX add new best (1, 4) is not 7 7 7
INFO:root:XX add new best (1, 4) is not 7 7 7
INFO:root:XX add new best (1, 4) is not 7 7 7
INFO:root:XX add new best (1, 4) is not 7 7 7
INFO:root:XX add new best (1, 4) is not 7 7 7
INFO:root:XX add new best (1, 4) is not 7 7 7
INFO:root:XX add new best (1, 4) is not 7 7 7
INFO:root:XX add new best (1, 4) is not 7 7 7
INFO:root:XX add new best (1, 4) is not 7 7 7
INFO:root:XX add new best (1, 4) is not 7 7 7
INFO:root:XX add new best (1, 4) is not 7 7 7
INFO:root:XX add new best (1, 4) is not 7 7 7
INFO:root:XX add new best (1, 4) is not 7 7 7
INFO:root:XX add new best (1, 4) is not 7 7 7
INFO:root:XX add new best (1, 4) is not 7 7 7
INFO:root:XX add new best (1, 4) is not 7 7 7
INFO:root:XX add new best (1, 4) is not 7 7 7
INFO:root:XX add new best (1, 4) is not 7 7 7
INFO:root:XX add new best (1, 4) is not 7 7 7
INFO:root:XX add new best (1, 4) is not 7 7 7
INFO:root:XX add new best (1, 4) is not 7 7 7
INFO:root:XX add new best (1, 4) is not 7 7 7
INFO:root:XX add new best (1, 4) is not 7 7 7
INFO:root:XX add new best (1, 4) is not 7 7 7
INFO:root:XX add new best (1, 4) is not 7 7 7
INFO:root:XX add new best (1, 4) is not 7 7 7
INFO:root:XX add new best (1, 4) is not 7 7 7
INFO:root:XX add new best (1, 4) is not 7 7 7
INFO:root:XX add new best (1, 4) is not 7 7 7
INFO:root:XX add new best (1, 4) is not 7 7 7
INFO:root:XX add new best (1, 4) is not 7 7 7
INFO:root:XX add new best (1, 4) is not 7 7 7
INFO:root:XX add new best (1, 4) is not 7 7 7
INFO:root:XX add new best (1, 4) is not 7 7 7
INFO:root:XX add new best (1, 4) is not 7 7 7
INFO:root:XX add new best (1, 4) is not 7 7 7
INFO:root:XX add new best (1, 4) is not 7 7 7
INFO:root:XX add new best (1, 4) is not 7 7 7
INFO:root:XX add new best (1, 4) is not 7 7 7
INFO:root:XX add new best (1, 4) is not 7 7 7
INFO:root:XX add new best (1, 4) is not 7 7 7
INFO:root:XX add new best (1, 4) is not 7 7 7
INFO:root:XX add new best (1, 4) is not 7 7 7
INFO:root:XX add new best (1, 4) is not 7 7 7
INFO:root:XX add new best (1, 4) is not 7 7 7
INFO:root:XX add new best (1, 4) is not 7 7 7
INFO:root:XX add new best (1, 4) is not 7 7 7
INFO:root:XX add new best (1, 4) is not 7 7 7
INFO:root:XX add new best (1, 4) is not 7 7 7
INFO:root:XX add new best (1, 4) is not 7 7 7
INFO:root:XX add new best (1, 4) is not 7 7 7
INFO:root:XX add new best (1, 4) is not 7 7 7
INFO:root:XX add new best (1, 4) is not 7 7 7
INFO:root:XX add new best (1, 4) is not 7 7 7
INFO:root:XX add new best (1, 4) is not 7 7 7
INFO:root:XX add new best (1, 4) is not 7 7 7
INFO:root:XX add new best (1, 4) is not 7 7 7
INFO:root:XX add new best (1, 4) is not 7 7 7
INFO:root:XX add new best (1, 4) is not 7 7 7
INFO:root:XX add new best (1, 4) is not 7 7 7
INFO:root:XX add new best (1, 4) is not 7 7 7
INFO:root:XX add new best (1, 4) is not 7 7 7
INFO:root:XX add new best (1, 4) is not 7 7 7
INFO:root:XX add new best (1, 4) is not 7 7 7
INFO:root:XX add new best (1, 4) is not 7 7 7
INFO:root:XX add new best (1, 4) is not 7 7 7
INFO:root:XX add new best (1, 4) is not 7 7 7
INFO:root:XX add new best (1, 4) is not 7 7 7
INFO:root:XX add new best (1, 4) is not 7 7 7
INFO:root:XX add new best (1, 4) is not 7 7 7
INFO:root:XX add new best (1, 4) is not 7 7 7
INFO:root:XX add new best (1, 4) is not 7 7 7
INFO:root:XX add new best (1, 4) is not 7 7 7
INFO:root:XX add new best (1, 4) is not 7 7 7
INFO:root:XX add new best (1, 4) is not 7 7 7
INFO:root:XX add new best (1, 4) is not 7 7 7
INFO:root:XX add new best (1, 4) is not 7 7 7
INFO:root:Considering 100 * 1 jobs for minsize=7
INFO:root:Chunked 100 in [9, 9, 9, 9, 8, 8, 8, 8, 8, 8, 8, 8]
INFO:root:XX add new best (1, 4) is not 7 7 7
INFO:root:XX add new best (1, 4) is not 7 7 7
INFO:root:XX add new best (1, 4) is not 7 7 7
INFO:root:XX add new best (1, 4) is not 7 7 7
INFO:root:XX add new best (1, 4) is not 7 7 7
INFO:root:XX add new best (1, 4) is not 7 7 7
INFO:root:XX add new best (1, 4) is not 7 7 7
INFO:root:XX add new best (1, 4) is not 7 7 7
INFO:root:XX add new best (1, 4) is not 7 7 7
INFO:root:XX add new best (1, 4) is not 7 7 7
INFO:root:XX add new best (1, 4) is not 7 7 7
INFO:root:XX add new best (1, 4) is not 7 7 7
INFO:root:XX add new best (1, 4) is not 7 7 7
INFO:root:XX add new best (1, 4) is not 7 7 7
INFO:root:XX add new best (1, 4) is not 7 7 7
INFO:root:XX add new best (1, 4) is not 7 7 7
INFO:root:XX add new best (1, 4) is not 7 7 7
INFO:root:XX add new best (1, 4) is not 7 7 7
INFO:root:XX add new best (1, 4) is not 7 7 7
INFO:root:XX add new best (1, 4) is not 7 7 7
INFO:root:XX add new best (1, 4) is not 7 7 7
INFO:root:XX add new best (1, 4) is not 7 7 7
INFO:root:XX add new best (1, 4) is not 7 7 7
INFO:root:XX add new best (1, 4) is not 7 7 7
INFO:root:XX add new best (1, 4) is not 7 7 7
INFO:root:XX add new best (1, 4) is not 7 7 7
INFO:root:XX add new best (1, 4) is not 7 7 7
INFO:root:XX add new best (1, 4) is not 7 7 7
INFO:root:XX add new best (1, 4) is not 7 7 7
INFO:root:XX add new best (1, 4) is not 7 7 7
INFO:root:XX add new best (1, 4) is not 7 7 7
INFO:root:XX add new best (1, 4) is not 7 7 7
INFO:root:XX add new best (1, 4) is not 7 7 7
INFO:root:XX add new best (1, 4) is not 7 7 7
INFO:root:XX add new best (1, 4) is not 7 7 7
INFO:root:XX add new best (1, 4) is not 7 7 7
INFO:root:XX add new best (1, 4) is not 7 7 7
INFO:root:XX add new best (1, 4) is not 7 7 7
INFO:root:XX add new best (1, 4) is not 7 7 7
INFO:root:XX add new best (1, 4) is not 7 7 7
INFO:root:XX add new best (1, 4) is not 7 7 7
INFO:root:XX add new best (1, 4) is not 7 7 7
INFO:root:XX add new best (1, 4) is not 7 7 7
INFO:root:XX add new best (1, 4) is not 7 7 7
INFO:root:XX add new best (1, 4) is not 7 7 7
INFO:root:XX add new best (1, 4) is not 7 7 7
INFO:root:XX add new best (1, 4) is not 7 7 7
INFO:root:XX add new best (1, 4) is not 7 7 7
INFO:root:XX add new best (1, 4) is not 7 7 7
INFO:root:XX add new best (1, 4) is not 7 7 7
INFO:root:XX add new best (1, 4) is not 7 7 7
INFO:root:XX add new best (1, 4) is not 7 7 7
INFO:root:XX add new best (1, 4) is not 7 7 7
INFO:root:XX add new best (1, 4) is not 7 7 7
INFO:root:XX add new best (1, 4) is not 7 7 7
INFO:root:XX add new best (1, 4) is not 7 7 7
INFO:root:XX add new best (1, 4) is not 7 7 7
INFO:root:XX add new best (1, 4) is not 7 7 7
INFO:root:XX add new best (1, 4) is not 7 7 7
INFO:root:XX add new best (1, 4) is not 7 7 7
INFO:root:XX add new best (1, 4) is not 7 7 7
INFO:root:XX add new best (1, 4) is not 7 7 7
INFO:root:XX add new best (1, 4) is not 7 7 7
INFO:root:XX add new best (1, 4) is not 7 7 7
INFO:root:XX add new best (1, 4) is not 7 7 7
INFO:root:XX add new best (1, 4) is not 7 7 7
INFO:root:XX add new best (1, 4) is not 7 7 7
INFO:root:XX add new best (1, 4) is not 7 7 7
INFO:root:XX add new best (1, 4) is not 7 7 7
INFO:root:XX add new best (1, 4) is not 7 7 7
INFO:root:XX add new best (1, 4) is not 7 7 7
INFO:root:XX add new best (1, 4) is not 7 7 7
INFO:root:XX add new best (1, 4) is not 7 7 7
INFO:root:XX add new best (1, 4) is not 7 7 7
INFO:root:XX add new best (1, 4) is not 7 7 7
INFO:root:XX add new best (1, 4) is not 7 7 7
INFO:root:XX add new best (1, 4) is not 7 7 7
INFO:root:XX add new best (1, 4) is not 7 7 7
INFO:root:XX add new best (1, 4) is not 7 7 7
INFO:root:XX add new best (1, 4) is not 7 7 7
INFO:root:XX add new best (1, 4) is not 7 7 7
INFO:root:XX add new best (1, 4) is not 7 7 7
INFO:root:XX add new best (1, 4) is not 7 7 7
INFO:root:XX add new best (1, 4) is not 7 7 7
INFO:root:XX add new best (1, 4) is not 7 7 7
INFO:root:XX add new best (1, 4) is not 7 7 7
INFO:root:XX add new best (1, 4) is not 7 7 7
INFO:root:XX add new best (1, 4) is not 7 7 7
INFO:root:XX add new best (1, 4) is not 7 7 7
INFO:root:XX add new best (1, 4) is not 7 7 7
INFO:root:XX add new best (1, 4) is not 7 7 7
INFO:root:XX add new best (1, 4) is not 7 7 7
INFO:root:XX add new best (1, 4) is not 7 7 7
INFO:root:XX add new best (1, 4) is not 7 7 7
INFO:root:XX add new best (1, 4) is not 7 7 7
INFO:root:XX add new best (1, 4) is not 7 7 7
INFO:root:XX add new best (1, 4) is not 7 7 7
INFO:root:XX add new best (1, 4) is not 7 7 7
INFO:root:XX add new best (1, 4) is not 7 7 7
INFO:root:XX add new best (1, 4) is not 7 7 7
INFO:root:Trace: [(7, [(1, 4) is not 7])]
INFO:root:Trace Quality: [(7, 1)]
INFO:root:Trace Sorted: [(7, 1)]
INFO:root:Finished
INFO:root:Full Trace [(7, [(1, 4) is not 7])]
INFO:root:Trying {'prechopMUSes': True}
INFO:root:Starting Step 1
INFO:root:Current state [[[[1], [3, 7, 8], [3, 7], [2, 3, 4, 7, 8], [2, 7, 8], [2, 3, 4, 7, 8], [5], [6], [9]], [[4], [9], [2], [3, 7], [5], [6], [1], [3, 7], [8]], [[3, 7, 8], [5], [6], [1], [7, 8], [9], [2], [4], [3, 7]], [[3, 5, 7], [3, 7], [9], [6], [4], [2, 7], [8], [2, 5], [1]], [[5, 7], [6], [4], [2, 7, 8, 9], [1], [2, 7, 8], [3, 7, 9], [2, 5], [3, 7]], [[2], [1], [8], [7, 9], [3], [5], [6], [7, 9], [4]], [[3, 7, 8], [4], [3, 7], [5], [2, 7, 8, 9], [2, 3, 7, 8], [3, 7, 9], [1], [6]], [[9], [3, 7, 8], [5], [3, 7, 8], [6], [1], [4], [3, 7, 8], [2]], [[6], [2], [1], [3, 4, 7, 8], [7, 8, 9], [3, 4, 7, 8], [3, 7, 9], [3, 7, 8, 9], [5]]]]
INFO:root:Doing checkSmall1
INFO:root:Getting tiny MUSes, distance 1, for 1 puzlits, 1 repeats
INFO:root:Chunked 1 in [1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
INFO:root:Doing checkSmall2
INFO:root:Getting tiny MUSes, distance 2, for 1 puzlits, 1 repeats
INFO:root:Chunked 1 in [1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
INFO:root:Considering 100 * 1 jobs for minsize=3
INFO:root:Chunked 100 in [9, 9, 9, 9, 8, 8, 8, 8, 8, 8, 8, 8]
INFO:root:Considering 100 * 1 jobs for minsize=4
INFO:root:Chunked 100 in [9, 9, 9, 9, 8, 8, 8, 8, 8, 8, 8, 8]
INFO:root:XX found first (1, 4) is not 7 5
INFO:root:XX add new best (1, 4) is not 7 5 5
INFO:root:XX add new best (1, 4) is not 7 5 5
INFO:root:XX add new best (1, 4) is not 7 5 5
INFO:root:XX add new best (1, 4) is not 7 5 5
INFO:root:XX add new best (1, 4) is not 7 5 5
INFO:root:Considering 100 * 1 jobs for minsize=5
INFO:root:Chunked 100 in [9, 9, 9, 9, 8, 8, 8, 8, 8, 8, 8, 8]
INFO:root:XX add new best (1, 4) is not 7 5 5
INFO:root:XX add new best (1, 4) is not 7 5 5
INFO:root:XX add new best (1, 4) is not 7 5 5
INFO:root:XX add new best (1, 4) is not 7 5 5
INFO:root:XX add new best (1, 4) is not 7 5 5
INFO:root:Trace: [(5, [(1, 4) is not 7])]
INFO:root:Trace Quality: [(5, 1)]
INFO:root:Trace Sorted: [(5, 1)]
INFO:root:Finished
INFO:root:Full Trace [(5, [(1, 4) is not 7])]
INFO:root:Trying {'quarterChopMUS': True}
INFO:root:Starting Step 1
INFO:root:Current state [[[[1], [3, 7, 8], [3, 7], [2, 3, 4, 7, 8], [2, 7, 8], [2, 3, 4, 7, 8], [5], [6], [9]], [[4], [9], [2], [3, 7], [5], [6], [1], [3, 7], [8]], [[3, 7, 8], [5], [6], [1], [7, 8], [9], [2], [4], [3, 7]], [[3, 5, 7], [3, 7], [9], [6], [4], [2, 7], [8], [2, 5], [1]], [[5, 7], [6], [4], [2, 7, 8, 9], [1], [2, 7, 8], [3, 7, 9], [2, 5], [3, 7]], [[2], [1], [8], [7, 9], [3], [5], [6], [7, 9], [4]], [[3, 7, 8], [4], [3, 7], [5], [2, 7, 8, 9], [2, 3, 7, 8], [3, 7, 9], [1], [6]], [[9], [3, 7, 8], [5], [3, 7, 8], [6], [1], [4], [3, 7, 8], [2]], [[6], [2], [1], [3, 4, 7, 8], [7, 8, 9], [3, 4, 7, 8], [3, 7, 9], [3, 7, 8, 9], [5]]]]
INFO:root:Doing checkSmall1
INFO:root:Getting tiny MUSes, distance 1, for 1 puzlits, 1 repeats
INFO:root:Chunked 1 in [1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
INFO:root:Doing checkSmall2
INFO:root:Getting tiny MUSes, distance 2, for 1 puzlits, 1 repeats
INFO:root:Chunked 1 in [1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
INFO:root:Considering 100 * 1 jobs for minsize=3
INFO:root:Chunked 100 in [9, 9, 9, 9, 8, 8, 8, 8, 8, 8, 8, 8]
INFO:root:Considering 100 * 1 jobs for minsize=4
INFO:root:Chunked 100 in [9, 9, 9, 9, 8, 8, 8, 8, 8, 8, 8, 8]
INFO:root:XX found first (1, 4) is not 7 5
INFO:root:XX add new best (1, 4) is not 7 5 5
INFO:root:XX add new best (1, 4) is not 7 5 5
INFO:root:XX add new best (1, 4) is not 7 5 5
INFO:root:XX add new best (1, 4) is not 7 5 5
INFO:root:XX add new best (1, 4) is not 7 5 5
INFO:root:XX add new best (1, 4) is not 7 5 5
INFO:root:Considering 100 * 1 jobs for minsize=5
INFO:root:Chunked 100 in [9, 9, 9, 9, 8, 8, 8, 8, 8, 8, 8, 8]
INFO:root:XX add new best (1, 4) is not 7 5 5
INFO:root:XX add new best (1, 4) is not 7 5 5
INFO:root:XX add new best (1, 4) is not 7 5 5
INFO:root:XX add new best (1, 4) is not 7 5 5
INFO:root:XX add new best (1, 4) is not 7 5 5
INFO:root:XX add new best (1, 4) is not 7 5 5
INFO:root:XX add new best (1, 4) is not 7 5 5
INFO:root:XX add new best (1, 4) is not 7 5 5
INFO:root:XX add new best (1, 4) is not 7 5 5
INFO:root:XX add new best (1, 4) is not 7 5 5
INFO:root:XX add new best (1, 4) is not 7 5 5
INFO:root:XX add new best (1, 4) is not 7 5 5
INFO:root:Trace: [(5, [(1, 4) is not 7])]
INFO:root:Trace Quality: [(5, 1)]
INFO:root:Trace Sorted: [(5, 1)]
INFO:root:Finished
INFO:root:Full Trace [(5, [(1, 4) is not 7])]
INFO:root:Trying {'minPrecheckMUS': True}
INFO:root:Starting Step 1
INFO:root:Current state [[[[1], [3, 7, 8], [3, 7], [2, 3, 4, 7, 8], [2, 7, 8], [2, 3, 4, 7, 8], [5], [6], [9]], [[4], [9], [2], [3, 7], [5], [6], [1], [3, 7], [8]], [[3, 7, 8], [5], [6], [1], [7, 8], [9], [2], [4], [3, 7]], [[3, 5, 7], [3, 7], [9], [6], [4], [2, 7], [8], [2, 5], [1]], [[5, 7], [6], [4], [2, 7, 8, 9], [1], [2, 7, 8], [3, 7, 9], [2, 5], [3, 7]], [[2], [1], [8], [7, 9], [3], [5], [6], [7, 9], [4]], [[3, 7, 8], [4], [3, 7], [5], [2, 7, 8, 9], [2, 3, 7, 8], [3, 7, 9], [1], [6]], [[9], [3, 7, 8], [5], [3, 7, 8], [6], [1], [4], [3, 7, 8], [2]], [[6], [2], [1], [3, 4, 7, 8], [7, 8, 9], [3, 4, 7, 8], [3, 7, 9], [3, 7, 8, 9], [5]]]]
INFO:root:Doing checkSmall1
INFO:root:Getting tiny MUSes, distance 1, for 1 puzlits, 1 repeats
INFO:root:Chunked 1 in [1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
INFO:root:Doing checkSmall2
INFO:root:Getting tiny MUSes, distance 2, for 1 puzlits, 1 repeats
INFO:root:Chunked 1 in [1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
INFO:root:Considering 100 * 1 jobs for minsize=3
INFO:root:Chunked 100 in [9, 9, 9, 9, 8, 8, 8, 8, 8, 8, 8, 8]
INFO:root:Considering 100 * 1 jobs for minsize=4
INFO:root:Chunked 100 in [9, 9, 9, 9, 8, 8, 8, 8, 8, 8, 8, 8]
INFO:root:XX found first (1, 4) is not 7 5
INFO:root:XX add new best (1, 4) is not 7 5 5
INFO:root:XX add new best (1, 4) is not 7 5 5
INFO:root:XX add new best (1, 4) is not 7 5 5
INFO:root:XX add new best (1, 4) is not 7 5 5
INFO:root:XX add new best (1, 4) is not 7 5 5
INFO:root:XX add new best (1, 4) is not 7 5 5
INFO:root:XX add new best (1, 4) is not 7 5 5
INFO:root:XX add new best (1, 4) is not 7 5 5
INFO:root:XX add new best (1, 4) is not 7 5 5
INFO:root:Considering 100 * 1 jobs for minsize=5
INFO:root:Chunked 100 in [9, 9, 9, 9, 8, 8, 8, 8, 8, 8, 8, 8]
INFO:root:XX add new best (1, 4) is not 7 5 5
INFO:root:XX add new best (1, 4) is not 7 5 5
INFO:root:XX add new best (1, 4) is not 7 5 5
INFO:root:XX add new best (1, 4) is not 7 5 5
INFO:root:XX add new best (1, 4) is not 7 5 5
INFO:root:XX add new best (1, 4) is not 7 5 5
INFO:root:XX add new best (1, 4) is not 7 5 5
INFO:root:Trace: [(5, [(1, 4) is not 7])]
INFO:root:Trace Quality: [(5, 1)]
INFO:root:Trace Sorted: [(5, 1)]
INFO:root:Finished
INFO:root:Full Trace [(5, [(1, 4) is not 7])]
INFO:root:Trying {'gallopingMUSes': True}
INFO:root:Starting Step 1
INFO:root:Current state [[[[1], [3, 7, 8], [3, 7], [2, 3, 4, 7, 8], [2, 7, 8], [2, 3, 4, 7, 8], [5], [6], [9]], [[4], [9], [2], [3, 7], [5], [6], [1], [3, 7], [8]], [[3, 7, 8], [5], [6], [1], [7, 8], [9], [2], [4], [3, 7]], [[3, 5, 7], [3, 7], [9], [6], [4], [2, 7], [8], [2, 5], [1]], [[5, 7], [6], [4], [2, 7, 8, 9], [1], [2, 7, 8], [3, 7, 9], [2, 5], [3, 7]], [[2], [1], [8], [7, 9], [3], [5], [6], [7, 9], [4]], [[3, 7, 8], [4], [3, 7], [5], [2, 7, 8, 9], [2, 3, 7, 8], [3, 7, 9], [1], [6]], [[9], [3, 7, 8], [5], [3, 7, 8], [6], [1], [4], [3, 7, 8], [2]], [[6], [2], [1], [3, 4, 7, 8], [7, 8, 9], [3, 4, 7, 8], [3, 7, 9], [3, 7, 8, 9], [5]]]]
INFO:root:Doing checkSmall1
INFO:root:Getting tiny MUSes, distance 1, for 1 puzlits, 1 repeats
INFO:root:Chunked 1 in [1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
INFO:root:Doing checkSmall2
INFO:root:Getting tiny MUSes, distance 2, for 1 puzlits, 1 repeats
INFO:root:Chunked 1 in [1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
INFO:root:Considering 100 * 1 jobs for minsize=3
INFO:root:Chunked 100 in [9, 9, 9, 9, 8, 8, 8, 8, 8, 8, 8, 8]
INFO:root:Considering 100 * 1 jobs for minsize=4
INFO:root:Chunked 100 in [9, 9, 9, 9, 8, 8, 8, 8, 8, 8, 8, 8]
INFO:root:XX found first (1, 4) is not 7 5
INFO:root:XX add new best (1, 4) is not 7 5 5
INFO:root:XX add new best (1, 4) is not 7 5 5
INFO:root:XX add new best (1, 4) is not 7 5 5
INFO:root:XX add new best (1, 4) is not 7 5 5
INFO:root:XX add new best (1, 4) is not 7 5 5
INFO:root:XX add new best (1, 4) is not 7 5 5
INFO:root:XX add new best (1, 4) is not 7 5 5
INFO:root:XX add new best (1, 4) is not 7 5 5
INFO:root:XX add new best (1, 4) is not 7 5 5
INFO:root:XX add new best (1, 4) is not 7 5 5
INFO:root:Considering 100 * 1 jobs for minsize=5
INFO:root:Chunked 100 in [9, 9, 9, 9, 8, 8, 8, 8, 8, 8, 8, 8]
INFO:root:XX add new best (1, 4) is not 7 5 5
INFO:root:XX add new best (1, 4) is not 7 5 5
INFO:root:XX add new best (1, 4) is not 7 5 5
INFO:root:XX add new best (1, 4) is not 7 5 5
INFO:root:XX add new best (1, 4) is not 7 5 5
INFO:root:XX add new best (1, 4) is not 7 5 5
INFO:root:XX add new best (1, 4) is not 7 5 5
INFO:root:XX add new best (1, 4) is not 7 5 5
INFO:root:Trace: [(5, [(1, 4) is not 7])]
INFO:root:Trace Quality: [(5, 1)]
INFO:root:Trace Sorted: [(5, 1)]
INFO:root:Finished
INFO:root:Full Trace [(5, [(1, 4) is not 7])]
INFO:root:Trying {'minPrecheckStepsMUS': True}
INFO:root:Starting Step 1
INFO:root:Current state [[[[1], [3, 7, 8], [3, 7], [2, 3, 4, 7, 8], [2, 7, 8], [2, 3, 4, 7, 8], [5], [6], [9]], [[4], [9], [2], [3, 7], [5], [6], [1], [3, 7], [8]], [[3, 7, 8], [5], [6], [1], [7, 8], [9], [2], [4], [3, 7]], [[3, 5, 7], [3, 7], [9], [6], [4], [2, 7], [8], [2, 5], [1]], [[5, 7], [6], [4], [2, 7, 8, 9], [1], [2, 7, 8], [3, 7, 9], [2, 5], [3, 7]], [[2], [1], [8], [7, 9], [3], [5], [6], [7, 9], [4]], [[3, 7, 8], [4], [3, 7], [5], [2, 7, 8, 9], [2, 3, 7, 8], [3, 7, 9], [1], [6]], [[9], [3, 7, 8], [5], [3, 7, 8], [6], [1], [4], [3, 7, 8], [2]], [[6], [2], [1], [3, 4, 7, 8], [7, 8, 9], [3, 4, 7, 8], [3, 7, 9], [3, 7, 8, 9], [5]]]]
INFO:root:Doing checkSmall1
INFO:root:Getting tiny MUSes, distance 1, for 1 puzlits, 1 repeats
INFO:root:Chunked 1 in [1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
INFO:root:Doing checkSmall2
INFO:root:Getting tiny MUSes, distance 2, for 1 puzlits, 1 repeats
INFO:root:Chunked 1 in [1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
INFO:root:Considering 100 * 1 jobs for minsize=3
INFO:root:Chunked 100 in [9, 9, 9, 9, 8, 8, 8, 8, 8, 8, 8, 8]
INFO:root:Considering 100 * 1 jobs for minsize=4
INFO:root:Chunked 100 in [9, 9, 9, 9, 8, 8, 8, 8, 8, 8, 8, 8]
INFO:root:XX found first (1, 4) is not 7 5
INFO:root:XX add new best (1, 4) is not 7 5 5
INFO:root:XX add new best (1, 4) is not 7 5 5
INFO:root:XX add new best (1, 4) is not 7 5 5
INFO:root:XX add new best (1, 4) is not 7 5 5
INFO:root:XX add new best (1, 4) is not 7 5 5
INFO:root:XX add new best (1, 4) is not 7 5 5
INFO:root:XX add new best (1, 4) is not 7 5 5
INFO:root:XX add new best (1, 4) is not 7 5 5
INFO:root:XX add new best (1, 4) is not 7 5 5
INFO:root:XX add new best (1, 4) is not 7 5 5
INFO:root:Considering 100 * 1 jobs for minsize=5
INFO:root:Chunked 100 in [9, 9, 9, 9, 8, 8, 8, 8, 8, 8, 8, 8]
INFO:root:XX add new best (1, 4) is not 7 5 5
INFO:root:XX add new best (1, 4) is not 7 5 5
INFO:root:XX add new best (1, 4) is not 7 5 5
INFO:root:XX add new best (1, 4) is not 7 5 5
INFO:root:XX add new best (1, 4) is not 7 5 5
INFO:root:XX add new best (1, 4) is not 7 5 5
INFO:root:XX add new best (1, 4) is not 7 5 5
INFO:root:Trace: [(5, [(1, 4) is not 7])]
INFO:root:Trace Quality: [(5, 1)]
INFO:root:Trace Sorted: [(5, 1)]
INFO:root:Finished
INFO:root:Full Trace [(5, [(1, 4) is not 7])]
INFO:root:Trying {'gallopingMUSes': True, 'minPrecheckMUS': True}
INFO:root:Starting Step 1
INFO:root:Current state [[[[1], [3, 7, 8], [3, 7], [2, 3, 4, 7, 8], [2, 7, 8], [2, 3, 4, 7, 8], [5], [6], [9]], [[4], [9], [2], [3, 7], [5], [6], [1], [3, 7], [8]], [[3, 7, 8], [5], [6], [1], [7, 8], [9], [2], [4], [3, 7]], [[3, 5, 7], [3, 7], [9], [6], [4], [2, 7], [8], [2, 5], [1]], [[5, 7], [6], [4], [2, 7, 8, 9], [1], [2, 7, 8], [3, 7, 9], [2, 5], [3, 7]], [[2], [1], [8], [7, 9], [3], [5], [6], [7, 9], [4]], [[3, 7, 8], [4], [3, 7], [5], [2, 7, 8, 9], [2, 3, 7, 8], [3, 7, 9], [1], [6]], [[9], [3, 7, 8], [5], [3, 7, 8], [6], [1], [4], [3, 7, 8], [2]], [[6], [2], [1], [3, 4, 7, 8], [7, 8, 9], [3, 4, 7, 8], [3, 7, 9], [3, 7, 8, 9], [5]]]]
INFO:root:Doing checkSmall1
INFO:root:Getting tiny MUSes, distance 1, for 1 puzlits, 1 repeats
INFO:root:Chunked 1 in [1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
INFO:root:Doing checkSmall2
INFO:root:Getting tiny MUSes, distance 2, for 1 puzlits, 1 repeats
INFO:root:Chunked 1 in [1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
INFO:root:Considering 100 * 1 jobs for minsize=3
INFO:root:Chunked 100 in [9, 9, 9, 9, 8, 8, 8, 8, 8, 8, 8, 8]
INFO:root:Considering 100 * 1 jobs for minsize=4
INFO:root:Chunked 100 in [9, 9, 9, 9, 8, 8, 8, 8, 8, 8, 8, 8]
INFO:root:XX found first (1, 4) is not 7 5
INFO:root:XX add new best (1, 4) is not 7 5 5
INFO:root:XX add new best (1, 4) is not 7 5 5
INFO:root:XX add new best (1, 4) is not 7 5 5
INFO:root:XX add new best (1, 4) is not 7 5 5
INFO:root:XX add new best (1, 4) is not 7 5 5
INFO:root:XX add new best (1, 4) is not 7 5 5
INFO:root:XX add new best (1, 4) is not 7 5 5
INFO:root:XX add new best (1, 4) is not 7 5 5
INFO:root:XX add new best (1, 4) is not 7 5 5
INFO:root:XX add new best (1, 4) is not 7 5 5
INFO:root:Considering 100 * 1 jobs for minsize=5
INFO:root:Chunked 100 in [9, 9, 9, 9, 8, 8, 8, 8, 8, 8, 8, 8]
INFO:root:XX add new best (1, 4) is not 7 5 5
INFO:root:XX add new best (1, 4) is not 7 5 5
INFO:root:XX add new best (1, 4) is not 7 5 5
INFO:root:XX add new best (1, 4) is not 7 5 5
INFO:root:XX add new best (1, 4) is not 7 5 5
INFO:root:XX add new best (1, 4) is not 7 5 5
INFO:root:XX add new best (1, 4) is not 7 5 5
INFO:root:Trace: [(5, [(1, 4) is not 7])]
INFO:root:Trace Quality: [(5, 1)]
INFO:root:Trace Sorted: [(5, 1)]
INFO:root:Finished
INFO:root:Full Trace [(5, [(1, 4) is not 7])]
INFO:root:Trying {}
INFO:root:Starting Step 1
INFO:root:Current state [[[[1, 3, 5, 8], [2, 3, 5], [1, 2, 3, 5, 8], [3, 5, 6, 8], [6, 7, 8], [3, 5, 6, 7, 8], [6, 7], [9], [4]], [[7], [6], [4, 8], [9], [1], [4, 8], [2, 3], [5], [2, 3]], [[3, 4, 5], [9], [3, 4, 5], [3, 4, 5, 6], [4, 6, 7], [2], [6, 7], [8], [1]], [[3, 4, 6], [7], [2, 3, 4, 6, 9], [2, 4, 6, 8], [5], [4, 6, 8], [2, 3, 4, 8, 9], [1], [2, 3, 8, 9]], [[1, 3, 4, 5, 6], [2, 3, 5], [1, 2, 3, 4, 5, 6], [7], [2, 4, 6, 8], [9], [2, 3, 4, 5, 8], [2, 3], [2, 3, 8]], [[4, 5], [8], [2, 4, 5, 9], [2, 4], [3], [1], [2, 4, 5, 9], [6], [7]], [[2], [4], [3, 5, 6, 8], [1], [6, 8], [3, 5, 6, 8], [3, 8, 9], [7], [3, 6, 8, 9]], [[3, 6, 8], [1], [3, 6, 7, 8], [2, 3, 6, 8], [9], [3, 6, 7, 8], [2, 3, 8], [4], [5]], [[9], [3, 5], [3, 5, 6, 7, 8], [2, 3, 4, 5, 6, 8], [2, 4, 6, 7, 8], [3, 4, 5, 6, 7, 8], [1], [2, 3], [2, 3, 6, 8]]]]
INFO:root:Doing checkSmall1
INFO:root:Getting tiny MUSes, distance 1, for 1 puzlits, 1 repeats
INFO:root:Chunked 1 in [1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
INFO:root:Doing checkSmall2
INFO:root:Getting tiny MUSes, distance 2, for 1 puzlits, 1 repeats
INFO:root:Chunked 1 in [1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
INFO:root:Considering 100 * 1 jobs for minsize=3
INFO:root:Chunked 100 in [9, 9, 9, 9, 8, 8, 8, 8, 8, 8, 8, 8]
INFO:root:Considering 100 * 1 jobs for minsize=4
INFO:root:Chunked 100 in [9, 9, 9, 9, 8, 8, 8, 8, 8, 8, 8, 8]
INFO:root:XX found first (5, 3) is not 2 5
INFO:root:XX add new best (5, 3) is not 2 5 5
INFO:root:XX add new best (5, 3) is not 2 5 5
INFO:root:XX add new best (5, 3) is not 2 5 5
INFO:root:XX add new best (5, 3) is not 2 5 5
INFO:root:XX add new best (5, 3) is not 2 5 5
INFO:root:XX add new best (5, 3) is not 2 5 5
INFO:root:XX add new best (5, 3) is not 2 5 5
INFO:root:XX add new best (5, 3) is not 2 5 5
INFO:root:XX add new best (5, 3) is not 2 5 5
INFO:root:XX add new best (5, 3) is not 2 5 5
INFO:root:XX add new best (5, 3) is not 2 5 5
INFO:root:XX add new best (5, 3) is not 2 5 5
INFO:root:XX add new best (5, 3) is not 2 5 5
INFO:root:XX add new best (5, 3) is not 2 5 5
INFO:root:XX add new best (5, 3) is not 2 5 5
INFO:root:XX add new best (5, 3) is not 2 5 5
INFO:root:XX add new best (5, 3) is not 2 5 5
INFO:root:XX add new best (5, 3) is not 2 5 5
INFO:root:XX add new best (5, 3) is not 2 5 5
INFO:root:XX add new best (5, 3) is not 2 5 5
INFO:root:XX add new best (5, 3) is not 2 5 5
INFO:root:XX add new best (5, 3) is not 2 5 5
INFO:root:XX add new best (5, 3) is not 2 5 5
INFO:root:XX add new best (5, 3) is not 2 5 5
INFO:root:XX add new best (5, 3) is not 2 5 5
INFO:root:XX add new best (5, 3) is not 2 5 5
INFO:root:XX add new best (5, 3) is not 2 5 5
INFO:root:XX add new best (5, 3) is not 2 5 5
INFO:root:XX add new best (5, 3) is not 2 5 5
INFO:root:XX add new best (5, 3) is not 2 5 5
INFO:root:XX add new best (5, 3) is not 2 5 5
INFO:root:XX add new best (5, 3) is not 2 5 5
INFO:root:XX add new best (5, 3) is not 2 5 5
INFO:root:XX add new best (5, 3) is not 2 5 5
INFO:root:XX add new best (5, 3) is not 2 5 5
INFO:root:XX add new best (5, 3) is not 2 5 5
INFO:root:XX add new best (5, 3) is not 2 5 5
INFO:root:XX add new best (5, 3) is not 2 5 5
INFO:root:XX add new best (5, 3) is not 2 5 5
INFO:root:XX add new best (5, 3) is not 2 5 5
INFO:root:XX add new best (5, 3) is not 2 5 5
INFO:root:XX add new best (5, 3) is not 2 5 5
INFO:root:XX add new best (5, 3) is not 2 5 5
INFO:root:XX add new best (5, 3) is not 2 5 5
INFO:root:XX add new best (5, 3) is not 2 5 5
INFO:root:XX add new best (5, 3) is not 2 5 5
INFO:root:XX add new best (5, 3) is not 2 5 5
INFO:root:XX add new best (5, 3) is not 2 5 5
INFO:root:XX add new best (5, 3) is not 2 5 5
INFO:root:XX add new best (5, 3) is not 2 5 5
INFO:root:XX add new best (5, 3) is not 2 5 5
INFO:root:XX add new best (5, 3) is not 2 5 5
INFO:root:XX add new best (5, 3) is not 2 5 5
INFO:root:XX add new best (5, 3) is not 2 5 5
INFO:root:XX add new best (5, 3) is not 2 5 5
INFO:root:XX add new best (5, 3) is not 2 5 5
INFO:root:XX add new best (5, 3) is not 2 5 5
INFO:root:XX add new best (5, 3) is not 2 5 5
INFO:root:XX add new best (5, 3) is not 2 5 5
INFO:root:XX add new best (5, 3) is not 2 5 5
INFO:root:XX add new best (5, 3) is not 2 5 5
INFO:root:XX add new best (5, 3) is not 2 5 5
INFO:root:XX add new best (5, 3) is not 2 5 5
INFO:root:XX add new best (5, 3) is not 2 5 5
INFO:root:XX add new best (5, 3) is not 2 5 5
INFO:root:XX add new best (5, 3) is not 2 5 5
INFO:root:XX add new best (5, 3) is not 2 5 5
INFO:root:XX add new best (5, 3) is not 2 5 5
INFO:root:XX add new best (5, 3) is not 2 5 5
INFO:root:XX add new best (5, 3) is not 2 5 5
INFO:root:XX add new best (5, 3) is not 2 5 5
INFO:root:XX add new best (5, 3) is not 2 5 5
INFO:root:XX add new best (5, 3) is not 2 5 5
INFO:root:XX add new best (5, 3) is not 2 5 5
INFO:root:XX add new best (5, 3) is not 2 5 5
INFO:root:XX add new best (5, 3) is not 2 5 5
INFO:root:XX add new best (5, 3) is not 2 5 5
INFO:root:XX add new best (5, 3) is not 2 5 5
INFO:root:XX add new best (5, 3) is not 2 5 5
INFO:root:XX add new best (5, 3) is not 2 5 5
INFO:root:XX add new best (5, 3) is not 2 5 5
INFO:root:XX add new best (5, 3) is not 2 5 5
INFO:root:XX add new best (5, 3) is not 2 5 5
INFO:root:XX add new best (5, 3) is not 2 5 5
INFO:root:XX add new best (5, 3) is not 2 5 5
INFO:root:XX add new best (5, 3) is not 2 5 5
INFO:root:XX add new best (5, 3) is not 2 5 5
INFO:root:XX add new best (5, 3) is not 2 5 5
INFO:root:XX add new best (5, 3) is not 2 5 5
INFO:root:XX add new best (5, 3) is not 2 5 5
INFO:root:XX add new best (5, 3) is not 2 5 5
INFO:root:XX add new best (5, 3) is not 2 5 5
INFO:root:XX add new best (5, 3) is not 2 5 5
INFO:root:XX add new best (5, 3) is not 2 5 5
INFO:root:XX add new best (5, 3) is not 2 5 5
INFO:root:XX add new best (5, 3) is not 2 5 5
INFO:root:XX add new best (5, 3) is not 2 5 5
INFO:root:XX add new best (5, 3) is not 2 5 5
INFO:root:XX add new best (5, 3) is not 2 5 5
INFO:root:Considering 100 * 1 jobs for minsize=5
INFO:root:Chunked 100 in [9, 9, 9, 9, 8, 8, 8, 8, 8, 8, 8, 8]
INFO:root:XX add new best (5, 3) is not 2 5 5
INFO:root:XX add new best (5, 3) is not 2 5 5
INFO:root:XX add new best (5, 3) is not 2 5 5
INFO:root:XX add new best (5, 3) is not 2 5 5
INFO:root:XX add new best (5, 3) is not 2 5 5
INFO:root:XX add new best (5, 3) is not 2 5 5
INFO:root:XX add new best (5, 3) is not 2 5 5
INFO:root:XX add new best (5, 3) is not 2 5 5
INFO:root:XX add new best (5, 3) is not 2 5 5
INFO:root:XX add new best (5, 3) is not 2 5 5
INFO:root:XX add new best (5, 3) is not 2 5 5
INFO:root:XX add new best (5, 3) is not 2 5 5
INFO:root:XX add new best (5, 3) is not 2 5 5
INFO:root:XX add new best (5, 3) is not 2 5 5
INFO:root:XX add new best (5, 3) is not 2 5 5
INFO:root:XX add new best (5, 3) is not 2 5 5
INFO:root:XX add new best (5, 3) is not 2 5 5
INFO:root:XX add new best (5, 3) is not 2 5 5
INFO:root:XX add new best (5, 3) is not 2 5 5
INFO:root:XX add new best (5, 3) is not 2 5 5
INFO:root:XX add new best (5, 3) is not 2 5 5
INFO:root:XX add new best (5, 3) is not 2 5 5
INFO:root:XX add new best (5, 3) is not 2 5 5
INFO:root:XX add new best (5, 3) is not 2 5 5
INFO:root:XX add new best (5, 3) is not 2 5 5
INFO:root:XX add new best (5, 3) is not 2 5 5
INFO:root:XX add new best (5, 3) is not 2 5 5
INFO:root:XX add new best (5, 3) is not 2 5 5
INFO:root:XX add new best (5, 3) is not 2 5 5
INFO:root:XX add new best (5, 3) is not 2 5 5
INFO:root:XX add new best (5, 3) is not 2 5 5
INFO:root:XX add new best (5, 3) is not 2 5 5
INFO:root:XX add new best (5, 3) is not 2 5 5
INFO:root:XX add new best (5, 3) is not 2 5 5
INFO:root:XX add new best (5, 3) is not 2 5 5
INFO:root:XX add new best (5, 3) is not 2 5 5
INFO:root:XX add new best (5, 3) is not 2 5 5
INFO:root:XX add new best (5, 3) is not 2 5 5
INFO:root:XX add new best (5, 3) is not 2 5 5
INFO:root:XX add new best (5, 3) is not 2 5 5
INFO:root:XX add new best (5, 3) is not 2 5 5
INFO:root:XX add new best (5, 3) is not 2 5 5
INFO:root:XX add new best (5, 3) is not 2 5 5
INFO:root:XX add new best (5, 3) is not 2 5 5
INFO:root:XX add new best (5, 3) is not 2 5 5
INFO:root:XX add new best (5, 3) is not 2 5 5
INFO:root:XX add new best (5, 3) is not 2 5 5
INFO:root:XX add new best (5, 3) is not 2 5 5
INFO:root:XX add new best (5, 3) is not 2 5 5
INFO:root:XX add new best (5, 3) is not 2 5 5
INFO:root:XX add new best (5, 3) is not 2 5 5
INFO:root:XX add new best (5, 3) is not 2 5 5
INFO:root:XX add new best (5, 3) is not 2 5 5
INFO:root:XX add new best (5, 3) is not 2 5 5
INFO:root:XX add new best (5, 3) is not 2 5 5
INFO:root:XX add new best (5, 3) is not 2 5 5
INFO:root:XX add new best (5, 3) is not 2 5 5
INFO:root:XX add new best (5, 3) is not 2 5 5
INFO:root:XX add new best (5, 3) is not 2 5 5
INFO:root:XX add new best (5, 3) is not 2 5 5
INFO:root:XX add new best (5, 3) is not 2 5 5
INFO:root:XX add new best (5, 3) is not 2 5 5
INFO:root:XX add new best (5, 3) is not 2 5 5
INFO:root:XX add new best (5, 3) is not 2 5 5
INFO:root:XX add new best (5, 3) is not 2 5 5
INFO:root:XX add new best (5, 3) is not 2 5 5
INFO:root:XX add new best (5, 3) is not 2 5 5
INFO:root:XX add new best (5, 3) is not 2 5 5
INFO:root:XX add new best (5, 3) is not 2 5 5
INFO:root:XX add new best (5, 3) is not 2 5 5
INFO:root:XX add new best (5, 3) is not 2 5 5
INFO:root:XX add new best (5, 3) is not 2 5 5
INFO:root:XX add new best (5, 3) is not 2 5 5
INFO:root:XX add new best (5, 3) is not 2 5 5
INFO:root:XX add new best (5, 3) is not 2 5 5
INFO:root:XX add new best (5, 3) is not 2 5 5
INFO:root:XX add new best (5, 3) is not 2 5 5
INFO:root:XX add new best (5, 3) is not 2 5 5
INFO:root:XX add new best (5, 3) is not 2 5 5
INFO:root:XX add new best (5, 3) is not 2 5 5
INFO:root:XX add new best (5, 3) is not 2 5 5
INFO:root:XX add new best (5, 3) is not 2 5 5
INFO:root:XX add new best (5, 3) is not 2 5 5
INFO:root:XX add new best (5, 3) is not 2 5 5
INFO:root:XX add new best (5, 3) is not 2 5 5
INFO:root:XX add new best (5, 3) is not 2 5 5
INFO:root:XX add new best (5, 3) is not 2 5 5
INFO:root:XX add new best (5, 3) is not 2 5 5
INFO:root:XX add new best (5, 3) is not 2 5 5
INFO:root:XX add new best (5, 3) is not 2 5 5
INFO:root:XX add new best (5, 3) is not 2 5 5
INFO:root:XX add new best (5, 3) is not 2 5 5
INFO:root:XX add new best (5, 3) is not 2 5 5
INFO:root:XX add new best (5, 3) is not 2 5 5
INFO:root:XX add new best (5, 3) is not 2 5 5
INFO:root:XX add new best (5, 3) is not 2 5 5
INFO:root:XX add new best (5, 3) is not 2 5 5
INFO:root:XX add new best (5, 3) is not 2 5 5
INFO:root:XX add new best (5, 3) is not 2 5 5
INFO:root:XX add new best (5, 3) is not 2 5 5
INFO:root:Trace: [(5, [(5, 3) is not 2])]
INFO:root:Trace Quality: [(5, 1)]
INFO:root:Trace Sorted: [(5, 1)]
INFO:root:Finished
INFO:root:Full Trace [(5, [(5, 3) is not 2])]
INFO:root:Trying {'prechopMUSes': True}
INFO:root:Starting Step 1
INFO:root:Current state [[[[1, 3, 5, 8], [2, 3, 5], [1, 2, 3, 5, 8], [3, 5, 6, 8], [6, 7, 8], [3, 5, 6, 7, 8], [6, 7], [9], [4]], [[7], [6], [4, 8], [9], [1], [4, 8], [2, 3], [5], [2, 3]], [[3, 4, 5], [9], [3, 4, 5], [3, 4, 5, 6], [4, 6, 7], [2], [6, 7], [8], [1]], [[3, 4, 6], [7], [2, 3, 4, 6, 9], [2, 4, 6, 8], [5], [4, 6, 8], [2, 3, 4, 8, 9], [1], [2, 3, 8, 9]], [[1, 3, 4, 5, 6], [2, 3, 5], [1, 2, 3, 4, 5, 6], [7], [2, 4, 6, 8], [9], [2, 3, 4, 5, 8], [2, 3], [2, 3, 8]], [[4, 5], [8], [2, 4, 5, 9], [2, 4], [3], [1], [2, 4, 5, 9], [6], [7]], [[2], [4], [3, 5, 6, 8], [1], [6, 8], [3, 5, 6, 8], [3, 8, 9], [7], [3, 6, 8, 9]], [[3, 6, 8], [1], [3, 6, 7, 8], [2, 3, 6, 8], [9], [3, 6, 7, 8], [2, 3, 8], [4], [5]], [[9], [3, 5], [3, 5, 6, 7, 8], [2, 3, 4, 5, 6, 8], [2, 4, 6, 7, 8], [3, 4, 5, 6, 7, 8], [1], [2, 3], [2, 3, 6, 8]]]]
INFO:root:Doing checkSmall1
INFO:root:Getting tiny MUSes, distance 1, for 1 puzlits, 1 repeats
INFO:root:Chunked 1 in [1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
INFO:root:Doing checkSmall2
INFO:root:Getting tiny MUSes, distance 2, for 1 puzlits, 1 repeats
INFO:root:Chunked 1 in [1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
INFO:root:Considering 100 * 1 jobs for minsize=3
INFO:root:Chunked 100 in [9, 9, 9, 9, 8, 8, 8, 8, 8, 8, 8, 8]
INFO:root:Considering 100 * 1 jobs for minsize=4
INFO:root:Chunked 100 in [9, 9, 9, 9, 8, 8, 8, 8, 8, 8, 8, 8]
INFO:root:XX found first (5, 3) is not 2 5
INFO:root:XX add new best (5, 3) is not 2 5 5
INFO:root:XX add new best (5, 3) is not 2 5 5
INFO:root:XX add new best (5, 3) is not 2 5 5
INFO:root:XX add new best (5, 3) is not 2 5 5
INFO:root:XX add new best (5, 3) is not 2 5 5
INFO:root:XX add new best (5, 3) is not 2 5 5
INFO:root:XX add new best (5, 3) is not 2 5 5
INFO:root:XX add new best (5, 3) is not 2 5 5
INFO:root:XX add new best (5, 3) is not 2 5 5
INFO:root:XX add new best (5, 3) is not 2 5 5
INFO:root:XX add new best (5, 3) is not 2 5 5
INFO:root:XX add new best (5, 3) is not 2 5 5
INFO:root:XX add new best (5, 3) is not 2 5 5
INFO:root:XX add new best (5, 3) is not 2 5 5
INFO:root:XX add new best (5, 3) is not 2 5 5
INFO:root:XX add new best (5, 3) is not 2 5 5
INFO:root:XX add new best (5, 3) is not 2 5 5
INFO:root:XX add new best (5, 3) is not 2 5 5
INFO:root:Considering 100 * 1 jobs for minsize=5
INFO:root:Chunked 100 in [9, 9, 9, 9, 8, 8, 8, 8, 8, 8, 8, 8]
INFO:root:XX add new best (5, 3) is not 2 5 5
INFO:root:XX add new best (5, 3) is not 2 5 5
INFO:root:XX add new best (5, 3) is not 2 5 5
INFO:root:XX add new best (5, 3) is not 2 5 5
INFO:root:XX add new best (5, 3) is not 2 5 5
INFO:root:XX add new best (5, 3) is not 2 5 5
INFO:root:XX add new best (5, 3) is not 2 5 5
INFO:root:XX add new best (5, 3) is not 2 5 5
INFO:root:XX add new best (5, 3) is not 2 5 5
INFO:root:XX add new best (5, 3) is not 2 5 5
INFO:root:XX add new best (5, 3) is not 2 5 5
INFO:root:XX add new best (5, 3) is not 2 5 5
INFO:root:XX add new best (5, 3) is not 2 5 5
INFO:root:XX add new best (5, 3) is not 2 5 5
INFO:root:XX add new best (5, 3) is not 2 5 5
INFO:root:XX add new best (5, 3) is not 2 5 5
INFO:root:XX add new best (5, 3) is not 2 5 5
INFO:root:XX add new best (5, 3) is not 2 5 5
INFO:root:XX add new best (5, 3) is not 2 5 5
INFO:root:XX add new best (5, 3) is not 2 5 5
INFO:root:XX add new best (5, 3) is not 2 5 5
INFO:root:XX add new best (5, 3) is not 2 5 5
INFO:root:XX add new best (5, 3) is not 2 5 5
INFO:root:XX add new best (5, 3) is not 2 5 5
INFO:root:XX add new best (5, 3) is not 2 5 5
INFO:root:Trace: [(5, [(5, 3) is not 2])]
INFO:root:Trace Quality: [(5, 1)]
INFO:root:Trace Sorted: [(5, 1)]
INFO:root:Finished
INFO:root:Full Trace [(5, [(5, 3) is not 2])]
INFO:root:Trying {'quarterChopMUS': True}
INFO:root:Starting Step 1
INFO:root:Current state [[[[1, 3, 5, 8], [2, 3, 5], [1, 2, 3, 5, 8], [3, 5, 6, 8], [6, 7, 8], [3, 5, 6, 7, 8], [6, 7], [9], [4]], [[7], [6], [4, 8], [9], [1], [4, 8], [2, 3], [5], [2, 3]], [[3, 4, 5], [9], [3, 4, 5], [3, 4, 5, 6], [4, 6, 7], [2], [6, 7], [8], [1]], [[3, 4, 6], [7], [2, 3, 4, 6, 9], [2, 4, 6, 8], [5], [4, 6, 8], [2, 3, 4, 8, 9], [1], [2, 3, 8, 9]], [[1, 3, 4, 5, 6], [2, 3, 5], [1, 2, 3, 4, 5, 6], [7], [2, 4, 6, 8], [9], [2, 3, 4, 5, 8], [2, 3], [2, 3, 8]], [[4, 5], [8], [2, 4, 5, 9], [2, 4], [3], [1], [2, 4, 5, 9], [6], [7]], [[2], [4], [3, 5, 6, 8], [1], [6, 8], [3, 5, 6, 8], [3, 8, 9], [7], [3, 6, 8, 9]], [[3, 6, 8], [1], [3, 6, 7, 8], [2, 3, 6, 8], [9], [3, 6, 7, 8], [2, 3, 8], [4], [5]], [[9], [3, 5], [3, 5, 6, 7, 8], [2, 3, 4, 5, 6, 8], [2, 4, 6, 7, 8], [3, 4, 5, 6, 7, 8], [1], [2, 3], [2, 3, 6, 8]]]]
INFO:root:Doing checkSmall1
INFO:root:Getting tiny MUSes, distance 1, for 1 puzlits, 1 repeats
INFO:root:Chunked 1 in [1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
INFO:root:Doing checkSmall2
INFO:root:Getting tiny MUSes, distance 2, for 1 puzlits, 1 repeats
INFO:root:Chunked 1 in [1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
INFO:root:Considering 100 * 1 jobs for minsize=3
INFO:root:Chunked 100 in [9, 9, 9, 9, 8, 8, 8, 8, 8, 8, 8, 8]
INFO:root:Considering 100 * 1 jobs for minsize=4
INFO:root:Chunked 100 in [9, 9, 9, 9, 8, 8, 8, 8, 8, 8, 8, 8]
INFO:root:XX found first (5, 3) is not 2 5
INFO:root:XX add new best (5, 3) is not 2 5 5
INFO:root:XX add new best (5, 3) is not 2 5 5
INFO:root:XX add new best (5, 3) is not 2 5 5
INFO:root:XX add new best (5, 3) is not 2 5 5
INFO:root:XX add new best (5, 3) is not 2 5 5
INFO:root:XX add new best (5, 3) is not 2 5 5
INFO:root:XX add new best (5, 3) is not 2 5 5
INFO:root:XX add new best (5, 3) is not 2 5 5
INFO:root:XX add new best (5, 3) is not 2 5 5
INFO:root:XX add new best (5, 3) is not 2 5 5
INFO:root:XX add new best (5, 3) is not 2 5 5
INFO:root:XX add new best (5, 3) is not 2 5 5
INFO:root:XX add new best (5, 3) is not 2 5 5
INFO:root:XX add new best (5, 3) is not 2 5 5
INFO:root:XX add new best (5, 3) is not 2 5 5
INFO:root:XX add new best (5, 3) is not 2 5 5
INFO:root:XX add new best (5, 3) is not 2 5 5
INFO:root:XX add new best (5, 3) is not 2 5 5
INFO:root:XX add new best (5, 3) is not 2 5 5
INFO:root:XX add new best (5, 3) is not 2 5 5
INFO:root:XX add new best (5, 3) is not 2 5 5
INFO:root:XX add new best (5, 3) is not 2 5 5
INFO:root:XX add new best (5, 3) is not 2 5 5
INFO:root:XX add new best (5, 3) is not 2 5 5
INFO:root:XX add new best (5, 3) is not 2 5 5
INFO:root:XX add new best (5, 3) is not 2 5 5
INFO:root:XX add new best (5, 3) is not 2 5 5
INFO:root:XX add new best (5, 3) is not 2 5 5
INFO:root:XX add new best (5, 3) is not 2 5 5
INFO:root:XX add new best (5, 3) is not 2 5 5
INFO:root:XX add new best (5, 3) is not 2 5 5
INFO:root:XX add new best (5, 3) is not 2 5 5
INFO:root:XX add new best (5, 3) is not 2 5 5
INFO:root:Considering 100 * 1 jobs for minsize=5
INFO:root:Chunked 100 in [9, 9, 9, 9, 8, 8, 8, 8, 8, 8, 8, 8]
INFO:root:XX add new best (5, 3) is not 2 5 5
INFO:root:XX add new best (5, 3) is not 2 5 5
INFO:root:XX add new best (5, 3) is not 2 5 5
INFO:root:XX add new best (5, 3) is not 2 5 5
INFO:root:XX add new best (5, 3) is not 2 5 5
INFO:root:XX add new best (5, 3) is not 2 5 5
INFO:root:XX add new best (5, 3) is not 2 5 5
INFO:root:XX add new best (5, 3) is not 2 5 5
INFO:root:XX add new best (5, 3) is not 2 5 5
INFO:root:XX add new best (5, 3) is not 2 5 5
INFO:root:XX add new best (5, 3) is not 2 5 5
INFO:root:XX add new best (5, 3) is not 2 5 5
INFO:root:XX add new best (5, 3) is not 2 5 5
INFO:root:XX add new best (5, 3) is not 2 5 5
INFO:root:XX add new best (5, 3) is not 2 5 5
INFO:root:XX add new best (5, 3) is not 2 5 5
INFO:root:XX add new best (5, 3) is not 2 5 5
INFO:root:XX add new best (5, 3) is not 2 5 5
INFO:root:XX add new best (5, 3) is not 2 5 5
INFO:root:XX add new best (5, 3) is not 2 5 5
INFO:root:XX add new best (5, 3) is not 2 5 5
INFO:root:XX add new best (5, 3) is not 2 5 5
INFO:root:XX add new best (5, 3) is not 2 5 5
INFO:root:XX add new best (5, 3) is not 2 5 5
INFO:root:XX add new best (5, 3) is not 2 5 5
INFO:root:XX add new best (5, 3) is not 2 5 5
INFO:root:XX add new best (5, 3) is not 2 5 5
INFO:root:XX add new best (5, 3) is not 2 5 5
INFO:root:XX add new best (5, 3) is not 2 5 5
INFO:root:XX add new best (5, 3) is not 2 5 5
INFO:root:XX add new best (5, 3) is not 2 5 5
INFO:root:XX add new best (5, 3) is not 2 5 5
INFO:root:XX add new best (5, 3) is not 2 5 5
INFO:root:XX add new best (5, 3) is not 2 5 5
INFO:root:XX add new best (5, 3) is not 2 5 5
INFO:root:XX add new best (5, 3) is not 2 5 5
INFO:root:Trace: [(5, [(5, 3) is not 2])]
INFO:root:Trace Quality: [(5, 1)]
INFO:root:Trace Sorted: [(5, 1)]
INFO:root:Finished
INFO:root:Full Trace [(5, [(5, 3) is not 2])]
INFO:root:Trying {'minPrecheckMUS': True}
INFO:root:Starting Step 1
INFO:root:Current state [[[[1, 3, 5, 8], [2, 3, 5], [1, 2, 3, 5, 8], [3, 5, 6, 8], [6, 7, 8], [3, 5, 6, 7, 8], [6, 7], [9], [4]], [[7], [6], [4, 8], [9], [1], [4, 8], [2, 3], [5], [2, 3]], [[3, 4, 5], [9], [3, 4, 5], [3, 4, 5, 6], [4, 6, 7], [2], [6, 7], [8], [1]], [[3, 4, 6], [7], [2, 3, 4, 6, 9], [2, 4, 6, 8], [5], [4, 6, 8], [2, 3, 4, 8, 9], [1], [2, 3, 8, 9]], [[1, 3, 4, 5, 6], [2, 3, 5], [1, 2, 3, 4, 5, 6], [7], [2, 4, 6, 8], [9], [2, 3, 4, 5, 8], [2, 3], [2, 3, 8]], [[4, 5], [8], [2, 4, 5, 9], [2, 4], [3], [1], [2, 4, 5, 9], [6], [7]], [[2], [4], [3, 5, 6, 8], [1], [6, 8], [3, 5, 6, 8], [3, 8, 9], [7], [3, 6, 8, 9]], [[3, 6, 8], [1], [3, 6, 7, 8], [2, 3, 6, 8], [9], [3, 6, 7, 8], [2, 3, 8], [4], [5]], [[9], [3, 5], [3, 5, 6, 7, 8], [2, 3, 4, 5, 6, 8], [2, 4, 6, 7, 8], [3, 4, 5, 6, 7, 8], [1], [2, 3], [2, 3, 6, 8]]]]
INFO:root:Doing checkSmall1
INFO:root:Getting tiny MUSes, distance 1, for 1 puzlits, 1 repeats
INFO:root:Chunked 1 in [1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
INFO:root:Doing checkSmall2
INFO:root:Getting tiny MUSes, distance 2, for 1 puzlits, 1 repeats
INFO:root:Chunked 1 in [1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
INFO:root:Considering 100 * 1 jobs for minsize=3
INFO:root:Chunked 100 in [9, 9, 9, 9, 8, 8, 8, 8, 8, 8, 8, 8]
INFO:root:Considering 100 * 1 jobs for minsize=4
INFO:root:Chunked 100 in [9, 9, 9, 9, 8, 8, 8, 8, 8, 8, 8, 8]
INFO:root:XX found first (5, 3) is not 2 5
INFO:root:XX add new best (5, 3) is not 2 5 5
INFO:root:XX add new best (5, 3) is not 2 5 5
INFO:root:XX add new best (5, 3) is not 2 5 5
INFO:root:XX add new best (5, 3) is not 2 5 5
INFO:root:XX add new best (5, 3) is not 2 5 5
INFO:root:XX add new best (5, 3) is not 2 5 5
INFO:root:XX add new best (5, 3) is not 2 5 5
INFO:root:XX add new best (5, 3) is not 2 5 5
INFO:root:XX add new best (5, 3) is not 2 5 5
INFO:root:XX add new best (5, 3) is not 2 5 5
INFO:root:XX add new best (5, 3) is not 2 5 5
INFO:root:XX add new best (5, 3) is not 2 5 5
INFO:root:XX add new best (5, 3) is not 2 5 5
INFO:root:XX add new best (5, 3) is not 2 5 5
INFO:root:XX add new best (5, 3) is not 2 5 5
INFO:root:XX add new best (5, 3) is not 2 5 5
INFO:root:XX add new best (5, 3) is not 2 5 5
INFO:root:XX add new best (5, 3) is not 2 5 5
INFO:root:XX add new best (5, 3) is not 2 5 5
INFO:root:XX add new best (5, 3) is not 2 5 5
INFO:root:XX add new best (5, 3) is not 2 5 5
INFO:root:XX add new best (5, 3) is not 2 5 5
INFO:root:Considering 100 * 1 jobs for minsize=5
INFO:root:Chunked 100 in [9, 9, 9, 9, 8, 8, 8, 8, 8, 8, 8, 8]
INFO:root:XX add new best (5, 3) is not 2 5 5
INFO:root:XX add new best (5, 3) is not 2 5 5
INFO:root:XX add new best (5, 3) is not 2 5 5
INFO:root:XX add new best (5, 3) is not 2 5 5
INFO:root:XX add new best (5, 3) is not 2 5 5
INFO:root:XX add new best (5, 3) is not 2 5 5
INFO:root:XX add new best (5, 3) is not 2 5 5
INFO:root:XX add new best (5, 3) is not 2 5 5
INFO:root:XX add new best (5, 3) is not 2 5 5
INFO:root:XX add new best (5, 3) is not 2 5 5
INFO:root:XX add new best (5, 3) is not 2 5 5
INFO:root:XX add new best (5, 3) is not 2 5 5
INFO:root:XX add new best (5, 3) is not 2 5 5
INFO:root:XX add new best (5, 3) is not 2 5 5
INFO:root:XX add new best (5, 3) is not 2 5 5
INFO:root:Trace: [(5, [(5, 3) is not 2])]
INFO:root:Trace Quality: [(5, 1)]
INFO:root:Trace Sorted: [(5, 1)]
INFO:root:Finished
INFO:root:Full Trace [(5, [(5, 3) is not 2])]
INFO:root:Trying {'gallopingMUSes': True}
INFO:root:Starting Step 1
INFO:root:Current state [[[[1, 3, 5, 8], [2, 3, 5], [1, 2, 3, 5, 8], [3, 5, 6, 8], [6, 7, 8], [3, 5, 6, 7, 8], [6, 7], [9], [4]], [[7], [6], [4, 8], [9], [1], [4, 8], [2, 3], [5], [2, 3]], [[3, 4, 5], [9], [3, 4, 5], [3, 4, 5, 6], [4, 6, 7], [2], [6, 7], [8], [1]], [[3, 4, 6], [7], [2, 3, 4, 6, 9], [2, 4, 6, 8], [5], [4, 6, 8], [2, 3, 4, 8, 9], [1], [2, 3, 8, 9]], [[1, 3, 4, 5, 6], [2, 3, 5], [1, 2, 3, 4, 5, 6], [7], [2, 4, 6, 8], [9], [2, 3, 4, 5, 8], [2, 3], [2, 3, 8]], [[4, 5], [8], [2, 4, 5, 9], [2, 4], [3], [1], [2, 4, 5, 9], [6], [7]], [[2], [4], [3, 5, 6, 8], [1], [6, 8], [3, 5, 6, 8], [3, 8, 9], [7], [3, 6, 8, 9]], [[3, 6, 8], [1], [3, 6, 7, 8], [2, 3, 6, 8], [9], [3, 6, 7, 8], [2, 3, 8], [4], [5]], [[9], [3, 5], [3, 5, 6, 7, 8], [2, 3, 4, 5, 6, 8], [2, 4, 6, 7, 8], [3, 4, 5, 6, 7, 8], [1], [2, 3], [2, 3, 6, 8]]]]
INFO:root:Doing checkSmall1
INFO:root:Getting tiny MUSes, distance 1, for 1 puzlits, 1 repeats
INFO:root:Chunked 1 in [1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
INFO:root:Doing checkSmall2
INFO:root:Getting tiny MUSes, distance 2, for 1 puzlits, 1 repeats
INFO:root:Chunked 1 in [1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
INFO:root:Considering 100 * 1 jobs for minsize=3
INFO:root:Chunked 100 in [9, 9, 9, 9, 8, 8, 8, 8, 8, 8, 8, 8]
INFO:root:Considering 100 * 1 jobs for minsize=4
INFO:root:Chunked 100 in [9, 9, 9, 9, 8, 8, 8, 8, 8, 8, 8, 8]
INFO:root:XX found first (5, 3) is not 2 5
INFO:root:XX add new best (5, 3) is not 2 5 5
INFO:root:XX add new best (5, 3) is not 2 5 5
INFO:root:XX add new best (5, 3) is not 2 5 5
INFO:root:XX add new best (5, 3) is not 2 5 5
INFO:root:XX add new best (5, 3) is not 2 5 5
INFO:root:XX add new best (5, 3) is not 2 5 5
INFO:root:XX add new best (5, 3) is not 2 5 5
INFO:root:XX add new best (5, 3) is not 2 5 5
INFO:root:XX add new best (5, 3) is not 2 5 5
INFO:root:XX add new best (5, 3) is not 2 5 5
INFO:root:XX add new best (5, 3) is not 2 5 5
INFO:root:XX add new best (5, 3) is not 2 5 5
INFO:root:XX add new best (5, 3) is not 2 5 5
INFO:root:XX add new best (5, 3) is not 2 5 5
INFO:root:XX add new best (5, 3) is not 2 5 5
INFO:root:XX add new best (5, 3) is not 2 5 5
INFO:root:XX add new best (5, 3) is not 2 5 5
INFO:root:Considering 100 * 1 jobs for minsize=5
INFO:root:Chunked 100 in [9, 9, 9, 9, 8, 8, 8, 8, 8, 8, 8, 8]
INFO:root:XX add new best (5, 3) is not 2 5 5
INFO:root:XX add new best (5, 3) is not 2 5 5
INFO:root:XX add new best (5, 3) is not 2 5 5
INFO:root:XX add new best (5, 3) is not 2 5 5
INFO:root:XX add new best (5, 3) is not 2 5 5
INFO:root:XX add new best (5, 3) is not 2 5 5
INFO:root:XX add new best (5, 3) is not 2 5 5
INFO:root:XX add new best (5, 3) is not 2 5 5
INFO:root:XX add new best (5, 3) is not 2 5 5
INFO:root:XX add new best (5, 3) is not 2 5 5
INFO:root:XX add new best (5, 3) is not 2 5 5
INFO:root:XX add new best (5, 3) is not 2 5 5
INFO:root:Trace: [(5, [(5, 3) is not 2])]
INFO:root:Trace Quality: [(5, 1)]
INFO:root:Trace Sorted: [(5, 1)]
INFO:root:Finished
INFO:root:Full Trace [(5, [(5, 3) is not 2])]
INFO:root:Trying {'minPrecheckStepsMUS': True}
INFO:root:Starting Step 1
INFO:root:Current state [[[[1, 3, 5, 8], [2, 3, 5], [1, 2, 3, 5, 8], [3, 5, 6, 8], [6, 7, 8], [3, 5, 6, 7, 8], [6, 7], [9], [4]], [[7], [6], [4, 8], [9], [1], [4, 8], [2, 3], [5], [2, 3]], [[3, 4, 5], [9], [3, 4, 5], [3, 4, 5, 6], [4, 6, 7], [2], [6, 7], [8], [1]], [[3, 4, 6], [7], [2, 3, 4, 6, 9], [2, 4, 6, 8], [5], [4, 6, 8], [2, 3, 4, 8, 9], [1], [2, 3, 8, 9]], [[1, 3, 4, 5, 6], [2, 3, 5], [1, 2, 3, 4, 5, 6], [7], [2, 4, 6, 8], [9], [2, 3, 4, 5, 8], [2, 3], [2, 3, 8]], [[4, 5], [8], [2, 4, 5, 9], [2, 4], [3], [1], [2, 4, 5, 9], [6], [7]], [[2], [4], [3, 5, 6, 8], [1], [6, 8], [3, 5, 6, 8], [3, 8, 9], [7], [3, 6, 8, 9]], [[3, 6, 8], [1], [3, 6, 7, 8], [2, 3, 6, 8], [9], [3, 6, 7, 8], [2, 3, 8], [4], [5]], [[9], [3, 5], [3, 5, 6, 7, 8], [2, 3, 4, 5, 6, 8], [2, 4, 6, 7, 8], [3, 4, 5, 6, 7, 8], [1], [2, 3], [2, 3, 6, 8]]]]
INFO:root:Doing checkSmall1
INFO:root:Getting tiny MUSes, distance 1, for 1 puzlits, 1 repeats
INFO:root:Chunked 1 in [1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
INFO:root:Doing checkSmall2
INFO:root:Getting tiny MUSes, distance 2, for 1 puzlits, 1 repeats
INFO:root:Chunked 1 in [1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
INFO:root:Considering 100 * 1 jobs for minsize=3
INFO:root:Chunked 100 in [9, 9, 9, 9, 8, 8, 8, 8, 8, 8, 8, 8]
INFO:root:Considering 100 * 1 jobs for minsize=4
INFO:root:Chunked 100 in [9, 9, 9, 9, 8, 8, 8, 8, 8, 8, 8, 8]
INFO:root:XX found first (5, 3) is not 2 5
INFO:root:XX add new best (5, 3) is not 2 5 5
INFO:root:XX add new best (5, 3) is not 2 5 5
INFO:root:XX add new best (5, 3) is not 2 5 5
INFO:root:XX add new best (5, 3) is not 2 5 5
INFO:root:XX add new best (5, 3) is not 2 5 5
INFO:root:XX add new best (5, 3) is not 2 5 5
INFO:root:XX add new best (5, 3) is not 2 5 5
INFO:root:XX add new best (5, 3) is not 2 5 5
INFO:root:XX add new best (5, 3) is not 2 5 5
INFO:root:XX add new best (5, 3) is not 2 5 5
INFO:root:XX add new best (5, 3) is not 2 5 5
INFO:root:XX add new best (5, 3) is not 2 5 5
INFO:root:XX add new best (5, 3) is not 2 5 5
INFO:root:XX add new best (5, 3) is not 2 5 5
INFO:root:XX add new best (5, 3) is not 2 5 5
INFO:root:XX add new best (5, 3) is not 2 5 5
INFO:root:XX add new best (5, 3) is not 2 5 5
INFO:root:XX add new best (5, 3) is not 2 5 5
INFO:root:XX add new best (5, 3) is not 2 5 5
INFO:root:XX add new best (5, 3) is not 2 5 5
INFO:root:XX add new best (5, 3) is not 2 5 5
INFO:root:XX add new best (5, 3) is not 2 5 5
INFO:root:XX add new best (5, 3) is not 2 5 5
INFO:root:XX add new best (5, 3) is not 2 5 5
INFO:root:Considering 100 * 1 jobs for minsize=5
INFO:root:Chunked 100 in [9, 9, 9, 9, 8, 8, 8, 8, 8, 8, 8, 8]
INFO:root:XX add new best (5, 3) is not 2 5 5
INFO:root:XX add new best (5, 3) is not 2 5 5
INFO:root:XX add new best (5, 3) is not 2 5 5
INFO:root:XX add new best (5, 3) is not 2 5 5
INFO:root:XX add new best (5, 3) is not 2 5 5
INFO:root:XX add new best (5, 3) is not 2 5 5
INFO:root:XX add new best (5, 3) is not 2 5 5
INFO:root:XX add new best (5, 3) is not 2 5 5
INFO:root:XX add new best (5, 3) is not 2 5 5
INFO:root:XX add new best (5, 3) is not 2 5 5
INFO:root:XX add new best (5, 3) is not 2 5 5
INFO:root:XX add new best (5, 3) is not 2 5 5
INFO:root:XX add new best (5, 3) is not 2 5 5
INFO:root:XX add new best (5, 3) is not 2 5 5
INFO:root:XX add new best (5, 3) is not 2 5 5
INFO:root:Trace: [(5, [(5, 3) is not 2])]
INFO:root:Trace Quality: [(5, 1)]
INFO:root:Trace Sorted: [(5, 1)]
INFO:root:Finished
INFO:root:Full Trace [(5, [(5, 3) is not 2])]
INFO:root:Trying {'gallopingMUSes': True, 'minPrecheckMUS': True}
INFO:root:Starting Step 1
INFO:root:Current state [[[[1, 3, 5, 8], [2, 3, 5], [1, 2, 3, 5, 8], [3, 5, 6, 8], [6, 7, 8], [3, 5, 6, 7, 8], [6, 7], [9], [4]], [[7], [6], [4, 8], [9], [1], [4, 8], [2, 3], [5], [2, 3]], [[3, 4, 5], [9], [3, 4, 5], [3, 4, 5, 6], [4, 6, 7], [2], [6, 7], [8], [1]], [[3, 4, 6], [7], [2, 3, 4, 6, 9], [2, 4, 6, 8], [5], [4, 6, 8], [2, 3, 4, 8, 9], [1], [2, 3, 8, 9]], [[1, 3, 4, 5, 6], [2, 3, 5], [1, 2, 3, 4, 5, 6], [7], [2, 4, 6, 8], [9], [2, 3, 4, 5, 8], [2, 3], [2, 3, 8]], [[4, 5], [8], [2, 4, 5, 9], [2, 4], [3], [1], [2, 4, 5, 9], [6], [7]], [[2], [4], [3, 5, 6, 8], [1], [6, 8], [3, 5, 6, 8], [3, 8, 9], [7], [3, 6, 8, 9]], [[3, 6, 8], [1], [3, 6, 7, 8], [2, 3, 6, 8], [9], [3, 6, 7, 8], [2, 3, 8], [4], [5]], [[9], [3, 5], [3, 5, 6, 7, 8], [2, 3, 4, 5, 6, 8], [2, 4, 6, 7, 8], [3, 4, 5, 6, 7, 8], [1], [2, 3], [2, 3, 6, 8]]]]
INFO:root:Doing checkSmall1
INFO:root:Getting tiny MUSes, distance 1, for 1 puzlits, 1 repeats
INFO:root:Chunked 1 in [1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
INFO:root:Doing checkSmall2
INFO:root:Getting tiny MUSes, distance 2, for 1 puzlits, 1 repeats
INFO:root:Chunked 1 in [1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
INFO:root:Considering 100 * 1 jobs for minsize=3
INFO:root:Chunked 100 in [9, 9, 9, 9, 8, 8, 8, 8, 8, 8, 8, 8]
INFO:root:Considering 100 * 1 jobs for minsize=4
INFO:root:Chunked 100 in [9, 9, 9, 9, 8, 8, 8, 8, 8, 8, 8, 8]
INFO:root:XX found first (5, 3) is not 2 5
INFO:root:XX add new best (5, 3) is not 2 5 5
INFO:root:XX add new best (5, 3) is not 2 5 5
INFO:root:XX add new best (5, 3) is not 2 5 5
INFO:root:XX add new best (5, 3) is not 2 5 5
INFO:root:XX add new best (5, 3) is not 2 5 5
INFO:root:XX add new best (5, 3) is not 2 5 5
INFO:root:XX add new best (5, 3) is not 2 5 5
INFO:root:XX add new best (5, 3) is not 2 5 5
INFO:root:XX add new best (5, 3) is not 2 5 5
INFO:root:XX add new best (5, 3) is not 2 5 5
INFO:root:XX add new best (5, 3) is not 2 5 5
INFO:root:XX add new best (5, 3) is not 2 5 5
INFO:root:XX add new best (5, 3) is not 2 5 5
INFO:root:XX add new best (5, 3) is not 2 5 5
INFO:root:XX add new best (5, 3) is not 2 5 5
INFO:root:XX add new best (5, 3) is not 2 5 5
INFO:root:XX add new best (5, 3) is not 2 5 5
INFO:root:XX add new best (5, 3) is not 2 5 5
INFO:root:XX add new best (5, 3) is not 2 5 5
INFO:root:XX add new best (5, 3) is not 2 5 5
INFO:root:XX add new best (5, 3) is not 2 5 5
INFO:root:XX add new best (5, 3) is not 2 5 5
INFO:root:XX add new best (5, 3) is not 2 5 5
INFO:root:XX add new best (5, 3) is not 2 5 5
INFO:root:Considering 100 * 1 jobs for minsize=5
INFO:root:Chunked 100 in [9, 9, 9, 9, 8, 8, 8, 8, 8, 8, 8, 8]
INFO:root:XX add new best (5, 3) is not 2 5 5
INFO:root:XX add new best (5, 3) is not 2 5 5
INFO:root:XX add new best (5, 3) is not 2 5 5
INFO:root:XX add new best (5, 3) is not 2 5 5
INFO:root:XX add new best (5, 3) is not 2 5 5
INFO:root:XX add new best (5, 3) is not 2 5 5
INFO:root:XX add new best (5, 3) is not 2 5 5
INFO:root:XX add new best (5, 3) is not 2 5 5
INFO:root:XX add new best (5, 3) is not 2 5 5
INFO:root:XX add new best (5, 3) is not 2 5 5
INFO:root:XX add new best (5, 3) is not 2 5 5
INFO:root:XX add new best (5, 3) is not 2 5 5
INFO:root:XX add new best (5, 3) is not 2 5 5
INFO:root:XX add new best (5, 3) is not 2 5 5
INFO:root:XX add new best (5, 3) is not 2 5 5
INFO:root:Trace: [(5, [(5, 3) is not 2])]
INFO:root:Trace Quality: [(5, 1)]
INFO:root:Trace Sorted: [(5, 1)]
INFO:root:Finished
INFO:root:Full Trace [(5, [(5, 3) is not 2])]
INFO:root:Trying {}
INFO:root:Starting Step 1
INFO:root:Current state [[[[1, 3, 5, 8], [2], [1, 3, 5, 8], [3, 5, 6, 8], [6, 7, 8], [3, 5, 6, 7, 8], [6, 7], [9], [4]], [[7], [6], [4, 8], [9], [1], [4, 8], [2, 3], [5], [2, 3]], [[3, 4, 5], [9], [3, 4, 5], [3, 4, 5, 6], [4, 6, 7], [2], [6, 7], [8], [1]], [[3, 4, 6], [7], [2, 9], [2, 4, 6, 8], [5], [4, 6, 8], [2, 3, 4, 8, 9], [1], [2, 3, 8, 9]], [[1, 3, 4, 5, 6], [3, 5], [1, 3, 4, 5, 6], [7], [2, 4, 6, 8], [9], [3, 4, 5, 8], [2, 3], [3, 8]], [[4, 5], [8], [2, 9], [2, 4], [3], [1], [2, 4, 5, 9], [6], [7]], [[2], [4], [3, 5, 6, 8], [1], [6, 8], [3, 5, 6, 8], [3, 8, 9], [7], [3, 6, 8, 9]], [[3, 6, 8], [1], [3, 6, 7, 8], [2, 3, 6, 8], [9], [3, 6, 7, 8], [2, 3, 8], [4], [5]], [[9], [3, 5], [3, 5, 6, 7, 8], [3, 4, 5, 6, 8], [2, 4, 6, 7, 8], [3, 4, 5, 6, 7, 8], [1], [2, 3], [3, 6, 8]]]]
INFO:root:Doing checkSmall1
INFO:root:Getting tiny MUSes, distance 1, for 1 puzlits, 1 repeats
INFO:root:Chunked 1 in [1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
INFO:root:Doing checkSmall2
INFO:root:Getting tiny MUSes, distance 2, for 1 puzlits, 1 repeats
INFO:root:Chunked 1 in [1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
INFO:root:Considering 100 * 1 jobs for minsize=3
INFO:root:Chunked 100 in [9, 9, 9, 9, 8, 8, 8, 8, 8, 8, 8, 8]
INFO:root:Considering 100 * 1 jobs for minsize=4
INFO:root:Chunked 100 in [9, 9, 9, 9, 8, 8, 8, 8, 8, 8, 8, 8]
INFO:root:XX found first (5, 1) is not 3 5
INFO:root:XX add new best (5, 1) is not 3 5 5
INFO:root:XX add new best (5, 1) is not 3 5 5
INFO:root:XX add new best (5, 1) is not 3 5 5
INFO:root:XX add new best (5, 1) is not 3 5 5
INFO:root:XX add new best (5, 1) is not 3 5 5
INFO:root:XX add new best (5, 1) is not 3 5 5
INFO:root:XX add new best (5, 1) is not 3 5 5
INFO:root:XX add new best (5, 1) is not 3 5 5
INFO:root:XX add new best (5, 1) is not 3 5 5
INFO:root:XX add new best (5, 1) is not 3 5 5
INFO:root:XX add new best (5, 1) is not 3 5 5
INFO:root:XX add new best (5, 1) is not 3 5 5
INFO:root:XX add new best (5, 1) is not 3 5 5
INFO:root:XX add new best (5, 1) is not 3 5 5
INFO:root:XX add new best (5, 1) is not 3 5 5
INFO:root:XX add new best (5, 1) is not 3 5 5
INFO:root:XX add new best (5, 1) is not 3 5 5
INFO:root:XX add new best (5, 1) is not 3 5 5
INFO:root:XX add new best (5, 1) is not 3 5 5
INFO:root:XX add new best (5, 1) is not 3 5 5
INFO:root:XX add new best (5, 1) is not 3 5 5
INFO:root:XX add new best (5, 1) is not 3 5 5
INFO:root:XX add new best (5, 1) is not 3 5 5
INFO:root:XX add new best (5, 1) is not 3 5 5
INFO:root:XX add new best (5, 1) is not 3 5 5
INFO:root:XX add new best (5, 1) is not 3 5 5
INFO:root:XX add new best (5, 1) is not 3 5 5
INFO:root:XX add new best (5, 1) is not 3 5 5
INFO:root:XX add new best (5, 1) is not 3 5 5
INFO:root:XX add new best (5, 1) is not 3 5 5
INFO:root:XX add new best (5, 1) is not 3 5 5
INFO:root:XX add new best (5, 1) is not 3 5 5
INFO:root:XX add new best (5, 1) is not 3 5 5
INFO:root:XX add new best (5, 1) is not 3 5 5
INFO:root:XX add new best (5, 1) is not 3 5 5
INFO:root:XX add new best (5, 1) is not 3 5 5
INFO:root:XX add new best (5, 1) is not 3 5 5
INFO:root:XX add new best (5, 1) is not 3 5 5
INFO:root:XX add new best (5, 1) is not 3 5 5
INFO:root:XX add new best (5, 1) is not 3 5 5
INFO:root:XX add new best (5, 1) is not 3 5 5
INFO:root:XX add new best (5, 1) is not 3 5 5
INFO:root:XX add new best (5, 1) is not 3 5 5
INFO:root:XX add new best (5, 1) is not 3 5 5
INFO:root:XX add new best (5, 1) is not 3 5 5
INFO:root:XX add new best (5, 1) is not 3 5 5
INFO:root:XX add new best (5, 1) is not 3 5 5
INFO:root:XX add new best (5, 1) is not 3 5 5
INFO:root:XX add new best (5, 1) is not 3 5 5
INFO:root:XX add new best (5, 1) is not 3 5 5
INFO:root:XX add new best (5, 1) is not 3 5 5
INFO:root:XX add new best (5, 1) is not 3 5 5
INFO:root:XX add new best (5, 1) is not 3 5 5
INFO:root:XX add new best (5, 1) is not 3 5 5
INFO:root:XX add new best (5, 1) is not 3 5 5
INFO:root:XX add new best (5, 1) is not 3 5 5
INFO:root:XX add new best (5, 1) is not 3 5 5
INFO:root:XX add new best (5, 1) is not 3 5 5
INFO:root:XX add new best (5, 1) is not 3 5 5
INFO:root:XX add new best (5, 1) is not 3 5 5
INFO:root:XX add new best (5, 1) is not 3 5 5
INFO:root:XX add new best (5, 1) is not 3 5 5
INFO:root:XX add new best (5, 1) is not 3 5 5
INFO:root:XX add new best (5, 1) is not 3 5 5
INFO:root:XX add new best (5, 1) is not 3 5 5
INFO:root:XX add new best (5, 1) is not 3 5 5
INFO:root:XX add new best (5, 1) is not 3 5 5
INFO:root:XX add new best (5, 1) is not 3 5 5
INFO:root:XX add new best (5, 1) is not 3 5 5
INFO:root:XX add new best (5, 1) is not 3 5 5
INFO:root:XX add new best (5, 1) is not 3 5 5
INFO:root:XX add new best (5, 1) is not 3 5 5
INFO:root:XX add new best (5, 1) is not 3 5 5
INFO:root:XX add new best (5, 1) is not 3 5 5
INFO:root:XX add new best (5, 1) is not 3 5 5
INFO:root:XX add new best (5, 1) is not 3 5 5
INFO:root:XX add new best (5, 1) is not 3 5 5
INFO:root:XX add new best (5, 1) is not 3 5 5
INFO:root:XX add new best (5, 1) is not 3 5 5
INFO:root:XX add new best (5, 1) is not 3 5 5
INFO:root:XX add new best (5, 1) is not 3 5 5
INFO:root:XX add new best (5, 1) is not 3 5 5
INFO:root:XX add new best (5, 1) is not 3 5 5
INFO:root:XX add new best (5, 1) is not 3 5 5
INFO:root:XX add new best (5, 1) is not 3 5 5
INFO:root:XX add new best (5, 1) is not 3 5 5
INFO:root:XX add new best (5, 1) is not 3 5 5
INFO:root:XX add new best (5, 1) is not 3 5 5
INFO:root:XX add new best (5, 1) is not 3 5 5
INFO:root:XX add new best (5, 1) is not 3 5 5
INFO:root:XX add new best (5, 1) is not 3 5 5
INFO:root:XX add new best (5, 1) is not 3 5 5
INFO:root:Considering 100 * 1 jobs for minsize=5
INFO:root:Chunked 100 in [9, 9, 9, 9, 8, 8, 8, 8, 8, 8, 8, 8]
INFO:root:XX add new best (5, 1) is not 3 5 5
INFO:root:XX add new best (5, 1) is not 3 5 5
INFO:root:XX add new best (5, 1) is not 3 5 5
INFO:root:XX add new best (5, 1) is not 3 5 5
INFO:root:XX add new best (5, 1) is not 3 5 5
INFO:root:XX add new best (5, 1) is not 3 5 5
INFO:root:XX add new best (5, 1) is not 3 5 5
INFO:root:XX add new best (5, 1) is not 3 5 5
INFO:root:XX add new best (5, 1) is not 3 5 5
INFO:root:XX add new best (5, 1) is not 3 5 5
INFO:root:XX add new best (5, 1) is not 3 5 5
INFO:root:XX add new best (5, 1) is not 3 5 5
INFO:root:XX add new best (5, 1) is not 3 5 5
INFO:root:XX add new best (5, 1) is not 3 5 5
INFO:root:XX add new best (5, 1) is not 3 5 5
INFO:root:XX add new best (5, 1) is not 3 5 5
INFO:root:XX add new best (5, 1) is not 3 5 5
INFO:root:XX add new best (5, 1) is not 3 5 5
INFO:root:XX add new best (5, 1) is not 3 5 5
INFO:root:XX add new best (5, 1) is not 3 5 5
INFO:root:XX add new best (5, 1) is not 3 5 5
INFO:root:XX add new best (5, 1) is not 3 5 5
INFO:root:XX add new best (5, 1) is not 3 5 5
INFO:root:XX add new best (5, 1) is not 3 5 5
INFO:root:XX add new best (5, 1) is not 3 5 5
INFO:root:XX add new best (5, 1) is not 3 5 5
INFO:root:XX add new best (5, 1) is not 3 5 5
INFO:root:XX add new best (5, 1) is not 3 5 5
INFO:root:XX add new best (5, 1) is not 3 5 5
INFO:root:XX add new best (5, 1) is not 3 5 5
INFO:root:XX add new best (5, 1) is not 3 5 5
INFO:root:XX add new best (5, 1) is not 3 5 5
INFO:root:XX add new best (5, 1) is not 3 5 5
INFO:root:XX add new best (5, 1) is not 3 5 5
INFO:root:XX add new best (5, 1) is not 3 5 5
INFO:root:XX add new best (5, 1) is not 3 5 5
INFO:root:XX add new best (5, 1) is not 3 5 5
INFO:root:XX add new best (5, 1) is not 3 5 5
INFO:root:XX add new best (5, 1) is not 3 5 5
INFO:root:XX add new best (5, 1) is not 3 5 5
INFO:root:XX add new best (5, 1) is not 3 5 5
INFO:root:XX add new best (5, 1) is not 3 5 5
INFO:root:XX add new best (5, 1) is not 3 5 5
INFO:root:XX add new best (5, 1) is not 3 5 5
INFO:root:XX add new best (5, 1) is not 3 5 5
INFO:root:XX add new best (5, 1) is not 3 5 5
INFO:root:XX add new best (5, 1) is not 3 5 5
INFO:root:XX add new best (5, 1) is not 3 5 5
INFO:root:XX add new best (5, 1) is not 3 5 5
INFO:root:XX add new best (5, 1) is not 3 5 5
INFO:root:XX add new best (5, 1) is not 3 5 5
INFO:root:XX add new best (5, 1) is not 3 5 5
INFO:root:XX add new best (5, 1) is not 3 5 5
INFO:root:XX add new best (5, 1) is not 3 5 5
INFO:root:XX add new best (5, 1) is not 3 5 5
INFO:root:XX add new best (5, 1) is not 3 5 5
INFO:root:XX add new best (5, 1) is not 3 5 5
INFO:root:XX add new best (5, 1) is not 3 5 5
INFO:root:XX add new best (5, 1) is not 3 5 5
INFO:root:XX add new best (5, 1) is not 3 5 5
INFO:root:XX add new best (5, 1) is not 3 5 5
INFO:root:XX add new best (5, 1) is not 3 5 5
INFO:root:XX add new best (5, 1) is not 3 5 5
INFO:root:XX add new best (5, 1) is not 3 5 5
INFO:root:XX add new best (5, 1) is not 3 5 5
INFO:root:XX add new best (5, 1) is not 3 5 5
INFO:root:XX add new best (5, 1) is not 3 5 5
INFO:root:XX add new best (5, 1) is not 3 5 5
INFO:root:XX add new best (5, 1) is not 3 5 5
INFO:root:XX add new best (5, 1) is not 3 5 5
INFO:root:XX add new best (5, 1) is not 3 5 5
INFO:root:XX add new best (5, 1) is not 3 5 5
INFO:root:XX add new best (5, 1) is not 3 5 5
INFO:root:XX add new best (5, 1) is not 3 5 5
INFO:root:XX add new best (5, 1) is not 3 5 5
INFO:root:XX add new best (5, 1) is not 3 5 5
INFO:root:XX add new best (5, 1) is not 3 5 5
INFO:root:XX add new best (5, 1) is not 3 5 5
INFO:root:XX add new best (5, 1) is not 3 5 5
INFO:root:XX add new best (5, 1) is not 3 5 5
INFO:root:XX add new best (5, 1) is not 3 5 5
INFO:root:XX add new best (5, 1) is not 3 5 5
INFO:root:XX add new best (5, 1) is not 3 5 5
INFO:root:XX add new best (5, 1) is not 3 5 5
INFO:root:XX add new best (5, 1) is not 3 5 5
INFO:root:XX add new best (5, 1) is not 3 5 5
INFO:root:XX add new best (5, 1) is not 3 5 5
INFO:root:XX add new best (5, 1) is not 3 5 5
INFO:root:XX add new best (5, 1) is not 3 5 5
INFO:root:XX add new best (5, 1) is not 3 5 5
INFO:root:XX add new best (5, 1) is not 3 5 5
INFO:root:XX add new best (5, 1) is not 3 5 5
INFO:root:XX add new best (5, 1) is not 3 5 5
INFO:root:XX add new best (5, 1) is not 3 5 5
INFO:root:XX add new best (5, 1) is not 3 5 5
INFO:root:Trace: [(5, [(5, 1) is not 3])]
INFO:root:Trace Quality: [(5, 1)]
INFO:root:Trace Sorted: [(5, 1)]
INFO:root:Finished
INFO:root:Full Trace [(5, [(5, 1) is not 3])]
INFO:root:Trying {'prechopMUSes': True}
INFO:root:Starting Step 1
INFO:root:Current state [[[[1, 3, 5, 8], [2], [1, 3, 5, 8], [3, 5, 6, 8], [6, 7, 8], [3, 5, 6, 7, 8], [6, 7], [9], [4]], [[7], [6], [4, 8], [9], [1], [4, 8], [2, 3], [5], [2, 3]], [[3, 4, 5], [9], [3, 4, 5], [3, 4, 5, 6], [4, 6, 7], [2], [6, 7], [8], [1]], [[3, 4, 6], [7], [2, 9], [2, 4, 6, 8], [5], [4, 6, 8], [2, 3, 4, 8, 9], [1], [2, 3, 8, 9]], [[1, 3, 4, 5, 6], [3, 5], [1, 3, 4, 5, 6], [7], [2, 4, 6, 8], [9], [3, 4, 5, 8], [2, 3], [3, 8]], [[4, 5], [8], [2, 9], [2, 4], [3], [1], [2, 4, 5, 9], [6], [7]], [[2], [4], [3, 5, 6, 8], [1], [6, 8], [3, 5, 6, 8], [3, 8, 9], [7], [3, 6, 8, 9]], [[3, 6, 8], [1], [3, 6, 7, 8], [2, 3, 6, 8], [9], [3, 6, 7, 8], [2, 3, 8], [4], [5]], [[9], [3, 5], [3, 5, 6, 7, 8], [3, 4, 5, 6, 8], [2, 4, 6, 7, 8], [3, 4, 5, 6, 7, 8], [1], [2, 3], [3, 6, 8]]]]
INFO:root:Doing checkSmall1
INFO:root:Getting tiny MUSes, distance 1, for 1 puzlits, 1 repeats
INFO:root:Chunked 1 in [1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
INFO:root:Doing checkSmall2
INFO:root:Getting tiny MUSes, distance 2, for 1 puzlits, 1 repeats
INFO:root:Chunked 1 in [1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
INFO:root:Considering 100 * 1 jobs for minsize=3
INFO:root:Chunked 100 in [9, 9, 9, 9, 8, 8, 8, 8, 8, 8, 8, 8]
INFO:root:Considering 100 * 1 jobs for minsize=4
INFO:root:Chunked 100 in [9, 9, 9, 9, 8, 8, 8, 8, 8, 8, 8, 8]
INFO:root:XX found first (5, 1) is not 3 5
INFO:root:XX add new best (5, 1) is not 3 5 5
INFO:root:XX add new best (5, 1) is not 3 5 5
INFO:root:XX add new best (5, 1) is not 3 5 5
INFO:root:XX add new best (5, 1) is not 3 5 5
INFO:root:XX add new best (5, 1) is not 3 5 5
INFO:root:XX add new best (5, 1) is not 3 5 5
INFO:root:XX add new best (5, 1) is not 3 5 5
INFO:root:XX add new best (5, 1) is not 3 5 5
INFO:root:XX add new best (5, 1) is not 3 5 5
INFO:root:XX add new best (5, 1) is not 3 5 5
INFO:root:XX add new best (5, 1) is not 3 5 5
INFO:root:XX add new best (5, 1) is not 3 5 5
INFO:root:XX add new best (5, 1) is not 3 5 5
INFO:root:XX add new best (5, 1) is not 3 5 5
INFO:root:Considering 100 * 1 jobs for minsize=5
INFO:root:Chunked 100 in [9, 9, 9, 9, 8, 8, 8, 8, 8, 8, 8, 8]
INFO:root:XX add new best (5, 1) is not 3 5 5
INFO:root:XX add new best (5, 1) is not 3 5 5
INFO:root:XX add new best (5, 1) is not 3 5 5
INFO:root:XX add new best (5, 1) is not 3 5 5
INFO:root:XX add new best (5, 1) is not 3 5 5
INFO:root:XX add new best (5, 1) is not 3 5 5
INFO:root:XX add new best (5, 1) is not 3 5 5
INFO:root:XX add new best (5, 1) is not 3 5 5
INFO:root:XX add new best (5, 1) is not 3 5 5
INFO:root:XX add new best (5, 1) is not 3 5 5
INFO:root:XX add new best (5, 1) is not 3 5 5
INFO:root:XX add new best (5, 1) is not 3 5 5
INFO:root:Trace: [(5, [(5, 1) is not 3])]
INFO:root:Trace Quality: [(5, 1)]
INFO:root:Trace Sorted: [(5, 1)]
INFO:root:Finished
INFO:root:Full Trace [(5, [(5, 1) is not 3])]
INFO:root:Trying {'quarterChopMUS': True}
INFO:root:Starting Step 1
INFO:root:Current state [[[[1, 3, 5, 8], [2], [1, 3, 5, 8], [3, 5, 6, 8], [6, 7, 8], [3, 5, 6, 7, 8], [6, 7], [9], [4]], [[7], [6], [4, 8], [9], [1], [4, 8], [2, 3], [5], [2, 3]], [[3, 4, 5], [9], [3, 4, 5], [3, 4, 5, 6], [4, 6, 7], [2], [6, 7], [8], [1]], [[3, 4, 6], [7], [2, 9], [2, 4, 6, 8], [5], [4, 6, 8], [2, 3, 4, 8, 9], [1], [2, 3, 8, 9]], [[1, 3, 4, 5, 6], [3, 5], [1, 3, 4, 5, 6], [7], [2, 4, 6, 8], [9], [3, 4, 5, 8], [2, 3], [3, 8]], [[4, 5], [8], [2, 9], [2, 4], [3], [1], [2, 4, 5, 9], [6], [7]], [[2], [4], [3, 5, 6, 8], [1], [6, 8], [3, 5, 6, 8], [3, 8, 9], [7], [3, 6, 8, 9]], [[3, 6, 8], [1], [3, 6, 7, 8], [2, 3, 6, 8], [9], [3, 6, 7, 8], [2, 3, 8], [4], [5]], [[9], [3, 5], [3, 5, 6, 7, 8], [3, 4, 5, 6, 8], [2, 4, 6, 7, 8], [3, 4, 5, 6, 7, 8], [1], [2, 3], [3, 6, 8]]]]
INFO:root:Doing checkSmall1
INFO:root:Getting tiny MUSes, distance 1, for 1 puzlits, 1 repeats
INFO:root:Chunked 1 in [1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
INFO:root:Doing checkSmall2
INFO:root:Getting tiny MUSes, distance 2, for 1 puzlits, 1 repeats
INFO:root:Chunked 1 in [1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
INFO:root:Considering 100 * 1 jobs for minsize=3
INFO:root:Chunked 100 in [9, 9, 9, 9, 8, 8, 8, 8, 8, 8, 8, 8]
INFO:root:Considering 100 * 1 jobs for minsize=4
INFO:root:Chunked 100 in [9, 9, 9, 9, 8, 8, 8, 8, 8, 8, 8, 8]
INFO:root:XX found first (5, 1) is not 3 5
INFO:root:XX add new best (5, 1) is not 3 5 5
INFO:root:XX add new best (5, 1) is not 3 5 5
INFO:root:XX add new best (5, 1) is not 3 5 5
INFO:root:XX add new best (5, 1) is not 3 5 5
INFO:root:XX add new best (5, 1) is not 3 5 5
INFO:root:XX add new best (5, 1) is not 3 5 5
INFO:root:XX add new best (5, 1) is not 3 5 5
INFO:root:XX add new best (5, 1) is not 3 5 5
INFO:root:XX add new best (5, 1) is not 3 5 5
INFO:root:XX add new best (5, 1) is not 3 5 5
INFO:root:XX add new best (5, 1) is not 3 5 5
INFO:root:XX add new best (5, 1) is not 3 5 5
INFO:root:XX add new best (5, 1) is not 3 5 5
INFO:root:XX add new best (5, 1) is not 3 5 5
INFO:root:XX add new best (5, 1) is not 3 5 5
INFO:root:XX add new best (5, 1) is not 3 5 5
INFO:root:XX add new best (5, 1) is not 3 5 5
INFO:root:XX add new best (5, 1) is not 3 5 5
INFO:root:XX add new best (5, 1) is not 3 5 5
INFO:root:XX add new best (5, 1) is not 3 5 5
INFO:root:XX add new best (5, 1) is not 3 5 5
INFO:root:XX add new best (5, 1) is not 3 5 5
INFO:root:XX add new best (5, 1) is not 3 5 5
INFO:root:XX add new best (5, 1) is not 3 5 5
INFO:root:Considering 100 * 1 jobs for minsize=5
INFO:root:Chunked 100 in [9, 9, 9, 9, 8, 8, 8, 8, 8, 8, 8, 8]
INFO:root:XX add new best (5, 1) is not 3 5 5
INFO:root:XX add new best (5, 1) is not 3 5 5
INFO:root:XX add new best (5, 1) is not 3 5 5
INFO:root:XX add new best (5, 1) is not 3 5 5
INFO:root:XX add new best (5, 1) is not 3 5 5
INFO:root:XX add new best (5, 1) is not 3 5 5
INFO:root:XX add new best (5, 1) is not 3 5 5
INFO:root:XX add new best (5, 1) is not 3 5 5
INFO:root:XX add new best (5, 1) is not 3 5 5
INFO:root:XX add new best (5, 1) is not 3 5 5
INFO:root:XX add new best (5, 1) is not 3 5 5
INFO:root:XX add new best (5, 1) is not 3 5 5
INFO:root:XX add new best (5, 1) is not 3 5 5
INFO:root:XX add new best (5, 1) is not 3 5 5
INFO:root:XX add new best (5, 1) is not 3 5 5
INFO:root:XX add new best (5, 1) is not 3 5 5
INFO:root:XX add new best (5, 1) is not 3 5 5
INFO:root:XX add new best (5, 1) is not 3 5 5
INFO:root:XX add new best (5, 1) is not 3 5 5
INFO:root:XX add new best (5, 1) is not 3 5 5
INFO:root:XX add new best (5, 1) is not 3 5 5
INFO:root:XX add new best (5, 1) is not 3 5 5
INFO:root:XX add new best (5, 1) is not 3 5 5
INFO:root:XX add new best (5, 1) is not 3 5 5
INFO:root:Trace: [(5, [(5, 1) is not 3])]
INFO:root:Trace Quality: [(5, 1)]
INFO:root:Trace Sorted: [(5, 1)]
INFO:root:Finished
INFO:root:Full Trace [(5, [(5, 1) is not 3])]
INFO:root:Trying {'minPrecheckMUS': True}
INFO:root:Starting Step 1
INFO:root:Current state [[[[1, 3, 5, 8], [2], [1, 3, 5, 8], [3, 5, 6, 8], [6, 7, 8], [3, 5, 6, 7, 8], [6, 7], [9], [4]], [[7], [6], [4, 8], [9], [1], [4, 8], [2, 3], [5], [2, 3]], [[3, 4, 5], [9], [3, 4, 5], [3, 4, 5, 6], [4, 6, 7], [2], [6, 7], [8], [1]], [[3, 4, 6], [7], [2, 9], [2, 4, 6, 8], [5], [4, 6, 8], [2, 3, 4, 8, 9], [1], [2, 3, 8, 9]], [[1, 3, 4, 5, 6], [3, 5], [1, 3, 4, 5, 6], [7], [2, 4, 6, 8], [9], [3, 4, 5, 8], [2, 3], [3, 8]], [[4, 5], [8], [2, 9], [2, 4], [3], [1], [2, 4, 5, 9], [6], [7]], [[2], [4], [3, 5, 6, 8], [1], [6, 8], [3, 5, 6, 8], [3, 8, 9], [7], [3, 6, 8, 9]], [[3, 6, 8], [1], [3, 6, 7, 8], [2, 3, 6, 8], [9], [3, 6, 7, 8], [2, 3, 8], [4], [5]], [[9], [3, 5], [3, 5, 6, 7, 8], [3, 4, 5, 6, 8], [2, 4, 6, 7, 8], [3, 4, 5, 6, 7, 8], [1], [2, 3], [3, 6, 8]]]]
INFO:root:Doing checkSmall1
INFO:root:Getting tiny MUSes, distance 1, for 1 puzlits, 1 repeats
INFO:root:Chunked 1 in [1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
INFO:root:Doing checkSmall2
INFO:root:Getting tiny MUSes, distance 2, for 1 puzlits, 1 repeats
INFO:root:Chunked 1 in [1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
INFO:root:Considering 100 * 1 jobs for minsize=3
INFO:root:Chunked 100 in [9, 9, 9, 9, 8, 8, 8, 8, 8, 8, 8, 8]
INFO:root:Considering 100 * 1 jobs for minsize=4
INFO:root:Chunked 100 in [9, 9, 9, 9, 8, 8, 8, 8, 8, 8, 8, 8]
INFO:root:XX found first (5, 1) is not 3 5
INFO:root:XX add new best (5, 1) is not 3 5 5
INFO:root:XX add new best (5, 1) is not 3 5 5
INFO:root:XX add new best (5, 1) is not 3 5 5
INFO:root:XX add new best (5, 1) is not 3 5 5
INFO:root:XX add new best (5, 1) is not 3 5 5
INFO:root:XX add new best (5, 1) is not 3 5 5
INFO:root:XX add new best (5, 1) is not 3 5 5
INFO:root:XX add new best (5, 1) is not 3 5 5
INFO:root:XX add new best (5, 1) is not 3 5 5
INFO:root:XX add new best (5, 1) is not 3 5 5
INFO:root:XX add new best (5, 1) is not 3 5 5
INFO:root:XX add new best (5, 1) is not 3 5 5
INFO:root:XX add new best (5, 1) is not 3 5 5
INFO:root:XX add new best (5, 1) is not 3 5 5
INFO:root:XX add new best (5, 1) is not 3 5 5
INFO:root:XX add new best (5, 1) is not 3 5 5
INFO:root:XX add new best (5, 1) is not 3 5 5
INFO:root:XX add new best (5, 1) is not 3 5 5
INFO:root:XX add new best (5, 1) is not 3 5 5
INFO:root:Considering 100 * 1 jobs for minsize=5
INFO:root:Chunked 100 in [9, 9, 9, 9, 8, 8, 8, 8, 8, 8, 8, 8]
INFO:root:XX add new best (5, 1) is not 3 5 5
INFO:root:XX add new best (5, 1) is not 3 5 5
INFO:root:XX add new best (5, 1) is not 3 5 5
INFO:root:XX add new best (5, 1) is not 3 5 5
INFO:root:XX add new best (5, 1) is not 3 5 5
INFO:root:XX add new best (5, 1) is not 3 5 5
INFO:root:XX add new best (5, 1) is not 3 5 5
INFO:root:XX add new best (5, 1) is not 3 5 5
INFO:root:XX add new best (5, 1) is not 3 5 5
INFO:root:XX add new best (5, 1) is not 3 5 5
INFO:root:XX add new best (5, 1) is not 3 5 5
INFO:root:XX add new best (5, 1) is not 3 5 5
INFO:root:XX add new best (5, 1) is not 3 5 5
INFO:root:XX add new best (5, 1) is not 3 5 5
INFO:root:XX add new best (5, 1) is not 3 5 5
INFO:root:XX add new best (5, 1) is not 3 5 5
INFO:root:XX add new best (5, 1) is not 3 5 5
INFO:root:XX add new best (5, 1) is not 3 5 5
INFO:root:XX add new best (5, 1) is not 3 5 5
INFO:root:Trace: [(5, [(5, 1) is not 3])]
INFO:root:Trace Quality: [(5, 1)]
INFO:root:Trace Sorted: [(5, 1)]
INFO:root:Finished
INFO:root:Full Trace [(5, [(5, 1) is not 3])]
INFO:root:Trying {'gallopingMUSes': True}
INFO:root:Starting Step 1
INFO:root:Current state [[[[1, 3, 5, 8], [2], [1, 3, 5, 8], [3, 5, 6, 8], [6, 7, 8], [3, 5, 6, 7, 8], [6, 7], [9], [4]], [[7], [6], [4, 8], [9], [1], [4, 8], [2, 3], [5], [2, 3]], [[3, 4, 5], [9], [3, 4, 5], [3, 4, 5, 6], [4, 6, 7], [2], [6, 7], [8], [1]], [[3, 4, 6], [7], [2, 9], [2, 4, 6, 8], [5], [4, 6, 8], [2, 3, 4, 8, 9], [1], [2, 3, 8, 9]], [[1, 3, 4, 5, 6], [3, 5], [1, 3, 4, 5, 6], [7], [2, 4, 6, 8], [9], [3, 4, 5, 8], [2, 3], [3, 8]], [[4, 5], [8], [2, 9], [2, 4], [3], [1], [2, 4, 5, 9], [6], [7]], [[2], [4], [3, 5, 6, 8], [1], [6, 8], [3, 5, 6, 8], [3, 8, 9], [7], [3, 6, 8, 9]], [[3, 6, 8], [1], [3, 6, 7, 8], [2, 3, 6, 8], [9], [3, 6, 7, 8], [2, 3, 8], [4], [5]], [[9], [3, 5], [3, 5, 6, 7, 8], [3, 4, 5, 6, 8], [2, 4, 6, 7, 8], [3, 4, 5, 6, 7, 8], [1], [2, 3], [3, 6, 8]]]]
INFO:root:Doing checkSmall1
INFO:root:Getting tiny MUSes, distance 1, for 1 puzlits, 1 repeats
INFO:root:Chunked 1 in [1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
INFO:root:Doing checkSmall2
INFO:root:Getting tiny MUSes, distance 2, for 1 puzlits, 1 repeats
INFO:root:Chunked 1 in [1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
INFO:root:Considering 100 * 1 jobs for minsize=3
INFO:root:Chunked 100 in [9, 9, 9, 9, 8, 8, 8, 8, 8, 8, 8, 8]
INFO:root:Considering 100 * 1 jobs for minsize=4
INFO:root:Chunked 100 in [9, 9, 9, 9, 8, 8, 8, 8, 8, 8, 8, 8]
INFO:root:XX found first (5, 1) is not 3 5
INFO:root:XX add new best (5, 1) is not 3 5 5
INFO:root:XX add new best (5, 1) is not 3 5 5
INFO:root:XX add new best (5, 1) is not 3 5 5
INFO:root:XX add new best (5, 1) is not 3 5 5
INFO:root:XX add new best (5, 1) is not 3 5 5
INFO:root:XX add new best (5, 1) is not 3 5 5
INFO:root:XX add new best (5, 1) is not 3 5 5
INFO:root:XX add new best (5, 1) is not 3 5 5
INFO:root:XX add new best (5, 1) is not 3 5 5
INFO:root:XX add new best (5, 1) is not 3 5 5
INFO:root:XX add new best (5, 1) is not 3 5 5
INFO:root:XX add new best (5, 1) is not 3 5 5
INFO:root:XX add new best (5, 1) is not 3 5 5
INFO:root:XX add new best (5, 1) is not 3 5 5
INFO:root:Considering 100 * 1 jobs for minsize=5
INFO:root:Chunked 100 in [9, 9, 9, 9, 8, 8, 8, 8, 8, 8, 8, 8]
INFO:root:XX add new best (5, 1) is not 3 5 5
INFO:root:XX add new best (5, 1) is not 3 5 5
INFO:root:XX add new best (5, 1) is not 3 5 5
INFO:root:XX add new best (5, 1) is not 3 5 5
INFO:root:XX add new best (5, 1) is not 3 5 5
INFO:root:XX add new best (5, 1) is not 3 5 5
INFO:root:XX add new best (5, 1) is not 3 5 5
INFO:root:XX add new best (5, 1) is not 3 5 5
INFO:root:XX add new best (5, 1) is not 3 5 5
INFO:root:XX add new best (5, 1) is not 3 5 5
INFO:root:XX add new best (5, 1) is not 3 5 5
INFO:root:XX add new best (5, 1) is not 3 5 5
INFO:root:XX add new best (5, 1) is not 3 5 5
INFO:root:XX add new best (5, 1) is not 3 5 5
INFO:root:XX add new best (5, 1) is not 3 5 5
INFO:root:Trace: [(5, [(5, 1) is not 3])]
INFO:root:Trace Quality: [(5, 1)]
INFO:root:Trace Sorted: [(5, 1)]
INFO:root:Finished
INFO:root:Full Trace [(5, [(5, 1) is not 3])]
INFO:root:Trying {'minPrecheckStepsMUS': True}
INFO:root:Starting Step 1
INFO:root:Current state [[[[1, 3, 5, 8], [2], [1, 3, 5, 8], [3, 5, 6, 8], [6, 7, 8], [3, 5, 6, 7, 8], [6, 7], [9], [4]], [[7], [6], [4, 8], [9], [1], [4, 8], [2, 3], [5], [2, 3]], [[3, 4, 5], [9], [3, 4, 5], [3, 4, 5, 6], [4, 6, 7], [2], [6, 7], [8], [1]], [[3, 4, 6], [7], [2, 9], [2, 4, 6, 8], [5], [4, 6, 8], [2, 3, 4, 8, 9], [1], [2, 3, 8, 9]], [[1, 3, 4, 5, 6], [3, 5], [1, 3, 4, 5, 6], [7], [2, 4, 6, 8], [9], [3, 4, 5, 8], [2, 3], [3, 8]], [[4, 5], [8], [2, 9], [2, 4], [3], [1], [2, 4, 5, 9], [6], [7]], [[2], [4], [3, 5, 6, 8], [1], [6, 8], [3, 5, 6, 8], [3, 8, 9], [7], [3, 6, 8, 9]], [[3, 6, 8], [1], [3, 6, 7, 8], [2, 3, 6, 8], [9], [3, 6, 7, 8], [2, 3, 8], [4], [5]], [[9], [3, 5], [3, 5, 6, 7, 8], [3, 4, 5, 6, 8], [2, 4, 6, 7, 8], [3, 4, 5, 6, 7, 8], [1], [2, 3], [3, 6, 8]]]]
INFO:root:Doing checkSmall1
INFO:root:Getting tiny MUSes, distance 1, for 1 puzlits, 1 repeats
INFO:root:Chunked 1 in [1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
INFO:root:Doing checkSmall2
INFO:root:Getting tiny MUSes, distance 2, for 1 puzlits, 1 repeats
INFO:root:Chunked 1 in [1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
INFO:root:Considering 100 * 1 jobs for minsize=3
INFO:root:Chunked 100 in [9, 9, 9, 9, 8, 8, 8, 8, 8, 8, 8, 8]
INFO:root:Considering 100 * 1 jobs for minsize=4
INFO:root:Chunked 100 in [9, 9, 9, 9, 8, 8, 8, 8, 8, 8, 8, 8]
INFO:root:XX found first (5, 1) is not 3 5
INFO:root:XX add new best (5, 1) is not 3 5 5
INFO:root:XX add new best (5, 1) is not 3 5 5
INFO:root:XX add new best (5, 1) is not 3 5 5
INFO:root:XX add new best (5, 1) is not 3 5 5
INFO:root:XX add new best (5, 1) is not 3 5 5
INFO:root:XX add new best (5, 1) is not 3 5 5
INFO:root:XX add new best (5, 1) is not 3 5 5
INFO:root:XX add new best (5, 1) is not 3 5 5
INFO:root:XX add new best (5, 1) is not 3 5 5
INFO:root:XX add new best (5, 1) is not 3 5 5
INFO:root:XX add new best (5, 1) is not 3 5 5
INFO:root:XX add new best (5, 1) is not 3 5 5
INFO:root:XX add new best (5, 1) is not 3 5 5
INFO:root:XX add new best (5, 1) is not 3 5 5
INFO:root:XX add new best (5, 1) is not 3 5 5
INFO:root:XX add new best (5, 1) is not 3 5 5
INFO:root:XX add new best (5, 1) is not 3 5 5
INFO:root:XX add new best (5, 1) is not 3 5 5
INFO:root:XX add new best (5, 1) is not 3 5 5
INFO:root:Considering 100 * 1 jobs for minsize=5
INFO:root:Chunked 100 in [9, 9, 9, 9, 8, 8, 8, 8, 8, 8, 8, 8]
INFO:root:XX add new best (5, 1) is not 3 5 5
INFO:root:XX add new best (5, 1) is not 3 5 5
INFO:root:XX add new best (5, 1) is not 3 5 5
INFO:root:XX add new best (5, 1) is not 3 5 5
INFO:root:XX add new best (5, 1) is not 3 5 5
INFO:root:XX add new best (5, 1) is not 3 5 5
INFO:root:XX add new best (5, 1) is not 3 5 5
INFO:root:XX add new best (5, 1) is not 3 5 5
INFO:root:XX add new best (5, 1) is not 3 5 5
INFO:root:XX add new best (5, 1) is not 3 5 5
INFO:root:XX add new best (5, 1) is not 3 5 5
INFO:root:XX add new best (5, 1) is not 3 5 5
INFO:root:XX add new best (5, 1) is not 3 5 5
INFO:root:XX add new best (5, 1) is not 3 5 5
INFO:root:XX add new best (5, 1) is not 3 5 5
INFO:root:XX add new best (5, 1) is not 3 5 5
INFO:root:XX add new best (5, 1) is not 3 5 5
INFO:root:XX add new best (5, 1) is not 3 5 5
INFO:root:XX add new best (5, 1) is not 3 5 5
INFO:root:Trace: [(5, [(5, 1) is not 3])]
INFO:root:Trace Quality: [(5, 1)]
INFO:root:Trace Sorted: [(5, 1)]
INFO:root:Finished
INFO:root:Full Trace [(5, [(5, 1) is not 3])]
INFO:root:Trying {'gallopingMUSes': True, 'minPrecheckMUS': True}
INFO:root:Starting Step 1
INFO:root:Current state [[[[1, 3, 5, 8], [2], [1, 3, 5, 8], [3, 5, 6, 8], [6, 7, 8], [3, 5, 6, 7, 8], [6, 7], [9], [4]], [[7], [6], [4, 8], [9], [1], [4, 8], [2, 3], [5], [2, 3]], [[3, 4, 5], [9], [3, 4, 5], [3, 4, 5, 6], [4, 6, 7], [2], [6, 7], [8], [1]], [[3, 4, 6], [7], [2, 9], [2, 4, 6, 8], [5], [4, 6, 8], [2, 3, 4, 8, 9], [1], [2, 3, 8, 9]], [[1, 3, 4, 5, 6], [3, 5], [1, 3, 4, 5, 6], [7], [2, 4, 6, 8], [9], [3, 4, 5, 8], [2, 3], [3, 8]], [[4, 5], [8], [2, 9], [2, 4], [3], [1], [2, 4, 5, 9], [6], [7]], [[2], [4], [3, 5, 6, 8], [1], [6, 8], [3, 5, 6, 8], [3, 8, 9], [7], [3, 6, 8, 9]], [[3, 6, 8], [1], [3, 6, 7, 8], [2, 3, 6, 8], [9], [3, 6, 7, 8], [2, 3, 8], [4], [5]], [[9], [3, 5], [3, 5, 6, 7, 8], [3, 4, 5, 6, 8], [2, 4, 6, 7, 8], [3, 4, 5, 6, 7, 8], [1], [2, 3], [3, 6, 8]]]]
INFO:root:Doing checkSmall1
INFO:root:Getting tiny MUSes, distance 1, for 1 puzlits, 1 repeats
INFO:root:Chunked 1 in [1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
INFO:root:Doing checkSmall2
INFO:root:Getting tiny MUSes, distance 2, for 1 puzlits, 1 repeats
INFO:root:Chunked 1 in [1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
INFO:root:Considering 100 * 1 jobs for minsize=3
INFO:root:Chunked 100 in [9, 9, 9, 9, 8, 8, 8, 8, 8, 8, 8, 8]
INFO:root:Considering 100 * 1 jobs for minsize=4
INFO:root:Chunked 100 in [9, 9, 9, 9, 8, 8, 8, 8, 8, 8, 8, 8]
INFO:root:XX found first (5, 1) is not 3 5
INFO:root:XX add new best (5, 1) is not 3 5 5
INFO:root:XX add new best (5, 1) is not 3 5 5
INFO:root:XX add new best (5, 1) is not 3 5 5
INFO:root:XX add new best (5, 1) is not 3 5 5
INFO:root:XX add new best (5, 1) is not 3 5 5
INFO:root:XX add new best (5, 1) is not 3 5 5
INFO:root:XX add new best (5, 1) is not 3 5 5
INFO:root:XX add new best (5, 1) is not 3 5 5
INFO:root:XX add new best (5, 1) is not 3 5 5
INFO:root:XX add new best (5, 1) is not 3 5 5
INFO:root:XX add new best (5, 1) is not 3 5 5
INFO:root:XX add new best (5, 1) is not 3 5 5
INFO:root:XX add new best (5, 1) is not 3 5 5
INFO:root:XX add new best (5, 1) is not 3 5 5
INFO:root:XX add new best (5, 1) is not 3 5 5
INFO:root:XX add new best (5, 1) is not 3 5 5
INFO:root:XX add new best (5, 1) is not 3 5 5
INFO:root:XX add new best (5, 1) is not 3 5 5
INFO:root:XX add new best (5, 1) is not 3 5 5
INFO:root:Considering 100 * 1 jobs for minsize=5
INFO:root:Chunked 100 in [9, 9, 9, 9, 8, 8, 8, 8, 8, 8, 8, 8]
INFO:root:XX add new best (5, 1) is not 3 5 5
INFO:root:XX add new best (5, 1) is not 3 5 5
INFO:root:XX add new best (5, 1) is not 3 5 5
INFO:root:XX add new best (5, 1) is not 3 5 5
INFO:root:XX add new best (5, 1) is not 3 5 5
INFO:root:XX add new best (5, 1) is not 3 5 5
INFO:root:XX add new best (5, 1) is not 3 5 5
INFO:root:XX add new best (5, 1) is not 3 5 5
INFO:root:XX add new best (5, 1) is not 3 5 5
INFO:root:XX add new best (5, 1) is not 3 5 5
INFO:root:XX add new best (5, 1) is not 3 5 5
INFO:root:XX add new best (5, 1) is not 3 5 5
INFO:root:XX add new best (5, 1) is not 3 5 5
INFO:root:XX add new best (5, 1) is not 3 5 5
INFO:root:XX add new best (5, 1) is not 3 5 5
INFO:root:XX add new best (5, 1) is not 3 5 5
INFO:root:XX add new best (5, 1) is not 3 5 5
INFO:root:XX add new best (5, 1) is not 3 5 5
INFO:root:XX add new best (5, 1) is not 3 5 5
INFO:root:Trace: [(5, [(5, 1) is not 3])]
INFO:root:Trace Quality: [(5, 1)]
INFO:root:Trace Sorted: [(5, 1)]
INFO:root:Finished
INFO:root:Full Trace [(5, [(5, 1) is not 3])]
INFO:root:Trying {}
INFO:root:Starting Step 1
INFO:root:Current state [[[[1, 4, 5], [1, 5], [7], [2, 5], [8], [3], [6], [1, 4, 9], [1, 2, 4, 9]], [[1, 4, 5], [3], [9], [7], [2, 5], [6], [8], [1, 4], [1, 2, 4]], [[8], [2], [6], [4], [1], [9], [7], [5], [3]], [[6], [4], [2, 5], [1], [9], [2, 5], [3], [8], [7]], [[1, 5, 9], [8], [1, 2, 5], [3], [6], [7], [2, 4, 5], [1, 4, 9], [1, 4, 5, 9]], [[1, 9], [7], [3], [2, 5], [4], [8], [2, 5], [6], [1, 9]], [[3], [9], [1, 5], [8], [7], [1, 4], [4, 5], [2], [6]], [[7], [6], [4], [9], [2, 5], [2, 5], [1], [3], [8]], [[2], [1, 5], [8], [6], [3], [1, 4], [9], [7], [4, 5]]]]
INFO:root:Doing checkSmall1
INFO:root:Getting tiny MUSes, distance 1, for 1 puzlits, 1 repeats
INFO:root:Chunked 1 in [1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
INFO:root:Doing checkSmall2
INFO:root:Getting tiny MUSes, distance 2, for 1 puzlits, 1 repeats
INFO:root:Chunked 1 in [1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
INFO:root:Considering 100 * 1 jobs for minsize=3
INFO:root:Chunked 100 in [9, 9, 9, 9, 8, 8, 8, 8, 8, 8, 8, 8]
INFO:root:Considering 100 * 1 jobs for minsize=4
INFO:root:Chunked 100 in [9, 9, 9, 9, 8, 8, 8, 8, 8, 8, 8, 8]
INFO:root:XX found first (5, 3) is not 5 5
INFO:root:XX add new best (5, 3) is not 5 5 5
INFO:root:XX add new best (5, 3) is not 5 5 5
INFO:root:XX add new best (5, 3) is not 5 5 5
INFO:root:XX add new best (5, 3) is not 5 5 5
INFO:root:XX add new best (5, 3) is not 5 5 5
INFO:root:XX add new best (5, 3) is not 5 5 5
INFO:root:XX add new best (5, 3) is not 5 5 5
INFO:root:XX add new best (5, 3) is not 5 5 5
INFO:root:XX add new best (5, 3) is not 5 5 5
INFO:root:XX add new best (5, 3) is not 5 5 5
INFO:root:XX add new best (5, 3) is not 5 5 5
INFO:root:XX add new best (5, 3) is not 5 5 5
INFO:root:XX add new best (5, 3) is not 5 5 5
INFO:root:XX add new best (5, 3) is not 5 5 5
INFO:root:XX add new best (5, 3) is not 5 5 5
INFO:root:XX add new best (5, 3) is not 5 5 5
INFO:root:XX add new best (5, 3) is not 5 5 5
INFO:root:XX add new best (5, 3) is not 5 5 5
INFO:root:XX add new best (5, 3) is not 5 5 5
INFO:root:XX add new best (5, 3) is not 5 5 5
INFO:root:XX add new best (5, 3) is not 5 5 5
INFO:root:XX add new best (5, 3) is not 5 5 5
INFO:root:XX add new best (5, 3) is not 5 5 5
INFO:root:XX add new best (5, 3) is not 5 5 5
INFO:root:XX add new best (5, 3) is not 5 5 5
INFO:root:XX add new best (5, 3) is not 5 5 5
INFO:root:XX add new best (5, 3) is not 5 5 5
INFO:root:XX add new best (5, 3) is not 5 5 5
INFO:root:XX add new best (5, 3) is not 5 5 5
INFO:root:XX add new best (5, 3) is not 5 5 5
INFO:root:XX add new best (5, 3) is not 5 5 5
INFO:root:XX add new best (5, 3) is not 5 5 5
INFO:root:XX add new best (5, 3) is not 5 5 5
INFO:root:XX add new best (5, 3) is not 5 5 5
INFO:root:XX add new best (5, 3) is not 5 5 5
INFO:root:XX add new best (5, 3) is not 5 5 5
INFO:root:XX add new best (5, 3) is not 5 5 5
INFO:root:XX add new best (5, 3) is not 5 5 5
INFO:root:XX add new best (5, 3) is not 5 5 5
INFO:root:XX add new best (5, 3) is not 5 5 5
INFO:root:Considering 100 * 1 jobs for minsize=5
INFO:root:Chunked 100 in [9, 9, 9, 9, 8, 8, 8, 8, 8, 8, 8, 8]
INFO:root:XX add new best (5, 3) is not 5 5 5
INFO:root:XX add new best (5, 3) is not 5 5 5
INFO:root:XX add new best (5, 3) is not 5 5 5
INFO:root:XX add new best (5, 3) is not 5 5 5
INFO:root:XX add new best (5, 3) is not 5 5 5
INFO:root:XX add new best (5, 3) is not 5 5 5
INFO:root:XX add new best (5, 3) is not 5 5 5
INFO:root:XX add new best (5, 3) is not 5 5 5
INFO:root:XX add new best (5, 3) is not 5 5 5
INFO:root:XX add new best (5, 3) is not 5 5 5
INFO:root:XX add new best (5, 3) is not 5 5 5
INFO:root:XX add new best (5, 3) is not 5 5 5
INFO:root:XX add new best (5, 3) is not 5 5 5
INFO:root:XX add new best (5, 3) is not 5 5 5
INFO:root:XX add new best (5, 3) is not 5 5 5
INFO:root:XX add new best (5, 3) is not 5 5 5
INFO:root:XX add new best (5, 3) is not 5 5 5
INFO:root:XX add new best (5, 3) is not 5 5 5
INFO:root:XX add new best (5, 3) is not 5 5 5
INFO:root:XX add new best (5, 3) is not 5 5 5
INFO:root:XX add new best (5, 3) is not 5 5 5
INFO:root:XX add new best (5, 3) is not 5 5 5
INFO:root:XX add new best (5, 3) is not 5 5 5
INFO:root:XX add new best (5, 3) is not 5 5 5
INFO:root:XX add new best (5, 3) is not 5 5 5
INFO:root:XX add new best (5, 3) is not 5 5 5
INFO:root:XX add new best (5, 3) is not 5 5 5
INFO:root:XX add new best (5, 3) is not 5 5 5
INFO:root:XX add new best (5, 3) is not 5 5 5
INFO:root:XX add new best (5, 3) is not 5 5 5
INFO:root:XX add new best (5, 3) is not 5 5 5
INFO:root:XX add new best (5, 3) is not 5 5 5
INFO:root:XX add new best (5, 3) is not 5 5 5
INFO:root:XX add new best (5, 3) is not 5 5 5
INFO:root:XX add new best (5, 3) is not 5 5 5
INFO:root:XX add new best (5, 3) is not 5 5 5
INFO:root:XX add new best (5, 3) is not 5 5 5
INFO:root:XX add new best (5, 3) is not 5 5 5
INFO:root:XX add new best (5, 3) is not 5 5 5
INFO:root:XX add new best (5, 3) is not 5 5 5
INFO:root:XX add new best (5, 3) is not 5 5 5
INFO:root:XX add new best (5, 3) is not 5 5 5
INFO:root:Trace: [(5, [(5, 3) is not 5])]
INFO:root:Trace Quality: [(5, 1)]
INFO:root:Trace Sorted: [(5, 1)]
INFO:root:Finished
INFO:root:Full Trace [(5, [(5, 3) is not 5])]
INFO:root:Trying {'prechopMUSes': True}
INFO:root:Starting Step 1
INFO:root:Current state [[[[1, 4, 5], [1, 5], [7], [2, 5], [8], [3], [6], [1, 4, 9], [1, 2, 4, 9]], [[1, 4, 5], [3], [9], [7], [2, 5], [6], [8], [1, 4], [1, 2, 4]], [[8], [2], [6], [4], [1], [9], [7], [5], [3]], [[6], [4], [2, 5], [1], [9], [2, 5], [3], [8], [7]], [[1, 5, 9], [8], [1, 2, 5], [3], [6], [7], [2, 4, 5], [1, 4, 9], [1, 4, 5, 9]], [[1, 9], [7], [3], [2, 5], [4], [8], [2, 5], [6], [1, 9]], [[3], [9], [1, 5], [8], [7], [1, 4], [4, 5], [2], [6]], [[7], [6], [4], [9], [2, 5], [2, 5], [1], [3], [8]], [[2], [1, 5], [8], [6], [3], [1, 4], [9], [7], [4, 5]]]]
INFO:root:Doing checkSmall1
INFO:root:Getting tiny MUSes, distance 1, for 1 puzlits, 1 repeats
INFO:root:Chunked 1 in [1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
INFO:root:Doing checkSmall2
INFO:root:Getting tiny MUSes, distance 2, for 1 puzlits, 1 repeats
INFO:root:Chunked 1 in [1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
INFO:root:Considering 100 * 1 jobs for minsize=3
INFO:root:Chunked 100 in [9, 9, 9, 9, 8, 8, 8, 8, 8, 8, 8, 8]
INFO:root:Considering 100 * 1 jobs for minsize=4
INFO:root:Chunked 100 in [9, 9, 9, 9, 8, 8, 8, 8, 8, 8, 8, 8]
INFO:root:XX found first (5, 3) is not 5 5
INFO:root:XX add new best (5, 3) is not 5 5 5
INFO:root:XX add new best (5, 3) is not 5 5 5
INFO:root:XX add new best (5, 3) is not 5 5 5
INFO:root:XX add new best (5, 3) is not 5 5 5
INFO:root:XX add new best (5, 3) is not 5 5 5
INFO:root:XX add new best (5, 3) is not 5 5 5
INFO:root:XX add new best (5, 3) is not 5 5 5
INFO:root:XX add new best (5, 3) is not 5 5 5
INFO:root:XX add new best (5, 3) is not 5 5 5
INFO:root:XX add new best (5, 3) is not 5 5 5
INFO:root:XX add new best (5, 3) is not 5 5 5
INFO:root:XX add new best (5, 3) is not 5 5 5
INFO:root:XX add new best (5, 3) is not 5 5 5
INFO:root:Considering 100 * 1 jobs for minsize=5
INFO:root:Chunked 100 in [9, 9, 9, 9, 8, 8, 8, 8, 8, 8, 8, 8]
INFO:root:XX add new best (5, 3) is not 5 5 5
INFO:root:XX add new best (5, 3) is not 5 5 5
INFO:root:XX add new best (5, 3) is not 5 5 5
INFO:root:XX add new best (5, 3) is not 5 5 5
INFO:root:XX add new best (5, 3) is not 5 5 5
INFO:root:XX add new best (5, 3) is not 5 5 5
INFO:root:XX add new best (5, 3) is not 5 5 5
INFO:root:XX add new best (5, 3) is not 5 5 5
INFO:root:XX add new best (5, 3) is not 5 5 5
INFO:root:XX add new best (5, 3) is not 5 5 5
INFO:root:XX add new best (5, 3) is not 5 5 5
INFO:root:Trace: [(5, [(5, 3) is not 5])]
INFO:root:Trace Quality: [(5, 1)]
INFO:root:Trace Sorted: [(5, 1)]
INFO:root:Finished
INFO:root:Full Trace [(5, [(5, 3) is not 5])]
INFO:root:Trying {'quarterChopMUS': True}
INFO:root:Starting Step 1
INFO:root:Current state [[[[1, 4, 5], [1, 5], [7], [2, 5], [8], [3], [6], [1, 4, 9], [1, 2, 4, 9]], [[1, 4, 5], [3], [9], [7], [2, 5], [6], [8], [1, 4], [1, 2, 4]], [[8], [2], [6], [4], [1], [9], [7], [5], [3]], [[6], [4], [2, 5], [1], [9], [2, 5], [3], [8], [7]], [[1, 5, 9], [8], [1, 2, 5], [3], [6], [7], [2, 4, 5], [1, 4, 9], [1, 4, 5, 9]], [[1, 9], [7], [3], [2, 5], [4], [8], [2, 5], [6], [1, 9]], [[3], [9], [1, 5], [8], [7], [1, 4], [4, 5], [2], [6]], [[7], [6], [4], [9], [2, 5], [2, 5], [1], [3], [8]], [[2], [1, 5], [8], [6], [3], [1, 4], [9], [7], [4, 5]]]]
INFO:root:Doing checkSmall1
INFO:root:Getting tiny MUSes, distance 1, for 1 puzlits, 1 repeats
INFO:root:Chunked 1 in [1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
INFO:root:Doing checkSmall2
INFO:root:Getting tiny MUSes, distance 2, for 1 puzlits, 1 repeats
INFO:root:Chunked 1 in [1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
INFO:root:Considering 100 * 1 jobs for minsize=3
INFO:root:Chunked 100 in [9, 9, 9, 9, 8, 8, 8, 8, 8, 8, 8, 8]
INFO:root:Considering 100 * 1 jobs for minsize=4
INFO:root:Chunked 100 in [9, 9, 9, 9, 8, 8, 8, 8, 8, 8, 8, 8]
INFO:root:XX found first (5, 3) is not 5 5
INFO:root:XX add new best (5, 3) is not 5 5 5
INFO:root:XX add new best (5, 3) is not 5 5 5
INFO:root:XX add new best (5, 3) is not 5 5 5
INFO:root:XX add new best (5, 3) is not 5 5 5
INFO:root:XX add new best (5, 3) is not 5 5 5
INFO:root:XX add new best (5, 3) is not 5 5 5
INFO:root:XX add new best (5, 3) is not 5 5 5
INFO:root:XX add new best (5, 3) is not 5 5 5
INFO:root:XX add new best (5, 3) is not 5 5 5
INFO:root:XX add new best (5, 3) is not 5 5 5
INFO:root:XX add new best (5, 3) is not 5 5 5
INFO:root:XX add new best (5, 3) is not 5 5 5
INFO:root:XX add new best (5, 3) is not 5 5 5
INFO:root:XX add new best (5, 3) is not 5 5 5
INFO:root:XX add new best (5, 3) is not 5 5 5
INFO:root:Considering 100 * 1 jobs for minsize=5
INFO:root:Chunked 100 in [9, 9, 9, 9, 8, 8, 8, 8, 8, 8, 8, 8]
INFO:root:XX add new best (5, 3) is not 5 5 5
INFO:root:XX add new best (5, 3) is not 5 5 5
INFO:root:XX add new best (5, 3) is not 5 5 5
INFO:root:XX add new best (5, 3) is not 5 5 5
INFO:root:XX add new best (5, 3) is not 5 5 5
INFO:root:XX add new best (5, 3) is not 5 5 5
INFO:root:XX add new best (5, 3) is not 5 5 5
INFO:root:XX add new best (5, 3) is not 5 5 5
INFO:root:XX add new best (5, 3) is not 5 5 5
INFO:root:XX add new best (5, 3) is not 5 5 5
INFO:root:XX add new best (5, 3) is not 5 5 5
INFO:root:XX add new best (5, 3) is not 5 5 5
INFO:root:XX add new best (5, 3) is not 5 5 5
INFO:root:XX add new best (5, 3) is not 5 5 5
INFO:root:Trace: [(5, [(5, 3) is not 5])]
INFO:root:Trace Quality: [(5, 1)]
INFO:root:Trace Sorted: [(5, 1)]
INFO:root:Finished
INFO:root:Full Trace [(5, [(5, 3) is not 5])]
INFO:root:Trying {'minPrecheckMUS': True}
INFO:root:Starting Step 1
INFO:root:Current state [[[[1, 4, 5], [1, 5], [7], [2, 5], [8], [3], [6], [1, 4, 9], [1, 2, 4, 9]], [[1, 4, 5], [3], [9], [7], [2, 5], [6], [8], [1, 4], [1, 2, 4]], [[8], [2], [6], [4], [1], [9], [7], [5], [3]], [[6], [4], [2, 5], [1], [9], [2, 5], [3], [8], [7]], [[1, 5, 9], [8], [1, 2, 5], [3], [6], [7], [2, 4, 5], [1, 4, 9], [1, 4, 5, 9]], [[1, 9], [7], [3], [2, 5], [4], [8], [2, 5], [6], [1, 9]], [[3], [9], [1, 5], [8], [7], [1, 4], [4, 5], [2], [6]], [[7], [6], [4], [9], [2, 5], [2, 5], [1], [3], [8]], [[2], [1, 5], [8], [6], [3], [1, 4], [9], [7], [4, 5]]]]
INFO:root:Doing checkSmall1
INFO:root:Getting tiny MUSes, distance 1, for 1 puzlits, 1 repeats
INFO:root:Chunked 1 in [1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
INFO:root:Doing checkSmall2
INFO:root:Getting tiny MUSes, distance 2, for 1 puzlits, 1 repeats
INFO:root:Chunked 1 in [1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
INFO:root:Considering 100 * 1 jobs for minsize=3
INFO:root:Chunked 100 in [9, 9, 9, 9, 8, 8, 8, 8, 8, 8, 8, 8]
INFO:root:Considering 100 * 1 jobs for minsize=4
INFO:root:Chunked 100 in [9, 9, 9, 9, 8, 8, 8, 8, 8, 8, 8, 8]
INFO:root:XX found first (5, 3) is not 5 5
INFO:root:XX add new best (5, 3) is not 5 5 5
INFO:root:XX add new best (5, 3) is not 5 5 5
INFO:root:XX add new best (5, 3) is not 5 5 5
INFO:root:XX add new best (5, 3) is not 5 5 5
INFO:root:XX add new best (5, 3) is not 5 5 5
INFO:root:XX add new best (5, 3) is not 5 5 5
INFO:root:XX add new best (5, 3) is not 5 5 5
INFO:root:XX add new best (5, 3) is not 5 5 5
INFO:root:XX add new best (5, 3) is not 5 5 5
INFO:root:XX add new best (5, 3) is not 5 5 5
INFO:root:XX add new best (5, 3) is not 5 5 5
INFO:root:XX add new best (5, 3) is not 5 5 5
INFO:root:XX add new best (5, 3) is not 5 5 5
INFO:root:Considering 100 * 1 jobs for minsize=5
INFO:root:Chunked 100 in [9, 9, 9, 9, 8, 8, 8, 8, 8, 8, 8, 8]
INFO:root:XX add new best (5, 3) is not 5 5 5
INFO:root:XX add new best (5, 3) is not 5 5 5
INFO:root:XX add new best (5, 3) is not 5 5 5
INFO:root:XX add new best (5, 3) is not 5 5 5
INFO:root:XX add new best (5, 3) is not 5 5 5
INFO:root:XX add new best (5, 3) is not 5 5 5
INFO:root:XX add new best (5, 3) is not 5 5 5
INFO:root:XX add new best (5, 3) is not 5 5 5
INFO:root:XX add new best (5, 3) is not 5 5 5
INFO:root:XX add new best (5, 3) is not 5 5 5
INFO:root:Trace: [(5, [(5, 3) is not 5])]
INFO:root:Trace Quality: [(5, 1)]
INFO:root:Trace Sorted: [(5, 1)]
INFO:root:Finished
INFO:root:Full Trace [(5, [(5, 3) is not 5])]
INFO:root:Trying {'gallopingMUSes': True}
INFO:root:Starting Step 1
INFO:root:Current state [[[[1, 4, 5], [1, 5], [7], [2, 5], [8], [3], [6], [1, 4, 9], [1, 2, 4, 9]], [[1, 4, 5], [3], [9], [7], [2, 5], [6], [8], [1, 4], [1, 2, 4]], [[8], [2], [6], [4], [1], [9], [7], [5], [3]], [[6], [4], [2, 5], [1], [9], [2, 5], [3], [8], [7]], [[1, 5, 9], [8], [1, 2, 5], [3], [6], [7], [2, 4, 5], [1, 4, 9], [1, 4, 5, 9]], [[1, 9], [7], [3], [2, 5], [4], [8], [2, 5], [6], [1, 9]], [[3], [9], [1, 5], [8], [7], [1, 4], [4, 5], [2], [6]], [[7], [6], [4], [9], [2, 5], [2, 5], [1], [3], [8]], [[2], [1, 5], [8], [6], [3], [1, 4], [9], [7], [4, 5]]]]
INFO:root:Doing checkSmall1
INFO:root:Getting tiny MUSes, distance 1, for 1 puzlits, 1 repeats
INFO:root:Chunked 1 in [1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
INFO:root:Doing checkSmall2
INFO:root:Getting tiny MUSes, distance 2, for 1 puzlits, 1 repeats
INFO:root:Chunked 1 in [1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
INFO:root:Considering 100 * 1 jobs for minsize=3
INFO:root:Chunked 100 in [9, 9, 9, 9, 8, 8, 8, 8, 8, 8, 8, 8]
INFO:root:Considering 100 * 1 jobs for minsize=4
INFO:root:Chunked 100 in [9, 9, 9, 9, 8, 8, 8, 8, 8, 8, 8, 8]
INFO:root:XX found first (5, 3) is not 5 5
INFO:root:XX add new best (5, 3) is not 5 5 5
INFO:root:XX add new best (5, 3) is not 5 5 5
INFO:root:XX add new best (5, 3) is not 5 5 5
INFO:root:XX add new best (5, 3) is not 5 5 5
INFO:root:XX add new best (5, 3) is not 5 5 5
INFO:root:XX add new best (5, 3) is not 5 5 5
INFO:root:XX add new best (5, 3) is not 5 5 5
INFO:root:XX add new best (5, 3) is not 5 5 5
INFO:root:XX add new best (5, 3) is not 5 5 5
INFO:root:XX add new best (5, 3) is not 5 5 5
INFO:root:Considering 100 * 1 jobs for minsize=5
INFO:root:Chunked 100 in [9, 9, 9, 9, 8, 8, 8, 8, 8, 8, 8, 8]
INFO:root:XX add new best (5, 3) is not 5 5 5
INFO:root:XX add new best (5, 3) is not 5 5 5
INFO:root:XX add new best (5, 3) is not 5 5 5
INFO:root:XX add new best (5, 3) is not 5 5 5
INFO:root:XX add new best (5, 3) is not 5 5 5
INFO:root:XX add new best (5, 3) is not 5 5 5
INFO:root:Trace: [(5, [(5, 3) is not 5])]
INFO:root:Trace Quality: [(5, 1)]
INFO:root:Trace Sorted: [(5, 1)]
INFO:root:Finished
INFO:root:Full Trace [(5, [(5, 3) is not 5])]
INFO:root:Trying {'minPrecheckStepsMUS': True}
INFO:root:Starting Step 1
INFO:root:Current state [[[[1, 4, 5], [1, 5], [7], [2, 5], [8], [3], [6], [1, 4, 9], [1, 2, 4, 9]], [[1, 4, 5], [3], [9], [7], [2, 5], [6], [8], [1, 4], [1, 2, 4]], [[8], [2], [6], [4], [1], [9], [7], [5], [3]], [[6], [4], [2, 5], [1], [9], [2, 5], [3], [8], [7]], [[1, 5, 9], [8], [1, 2, 5], [3], [6], [7], [2, 4, 5], [1, 4, 9], [1, 4, 5, 9]], [[1, 9], [7], [3], [2, 5], [4], [8], [2, 5], [6], [1, 9]], [[3], [9], [1, 5], [8], [7], [1, 4], [4, 5], [2], [6]], [[7], [6], [4], [9], [2, 5], [2, 5], [1], [3], [8]], [[2], [1, 5], [8], [6], [3], [1, 4], [9], [7], [4, 5]]]]
INFO:root:Doing checkSmall1
INFO:root:Getting tiny MUSes, distance 1, for 1 puzlits, 1 repeats
INFO:root:Chunked 1 in [1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
INFO:root:Doing checkSmall2
INFO:root:Getting tiny MUSes, distance 2, for 1 puzlits, 1 repeats
INFO:root:Chunked 1 in [1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
INFO:root:Considering 100 * 1 jobs for minsize=3
INFO:root:Chunked 100 in [9, 9, 9, 9, 8, 8, 8, 8, 8, 8, 8, 8]
INFO:root:Considering 100 * 1 jobs for minsize=4
INFO:root:Chunked 100 in [9, 9, 9, 9, 8, 8, 8, 8, 8, 8, 8, 8]
INFO:root:XX found first (5, 3) is not 5 5
INFO:root:XX add new best (5, 3) is not 5 5 5
INFO:root:XX add new best (5, 3) is not 5 5 5
INFO:root:XX add new best (5, 3) is not 5 5 5
INFO:root:XX add new best (5, 3) is not 5 5 5
INFO:root:XX add new best (5, 3) is not 5 5 5
INFO:root:XX add new best (5, 3) is not 5 5 5
INFO:root:XX add new best (5, 3) is not 5 5 5
INFO:root:XX add new best (5, 3) is not 5 5 5
INFO:root:XX add new best (5, 3) is not 5 5 5
INFO:root:XX add new best (5, 3) is not 5 5 5
INFO:root:XX add new best (5, 3) is not 5 5 5
INFO:root:XX add new best (5, 3) is not 5 5 5
INFO:root:XX add new best (5, 3) is not 5 5 5
INFO:root:Considering 100 * 1 jobs for minsize=5
INFO:root:Chunked 100 in [9, 9, 9, 9, 8, 8, 8, 8, 8, 8, 8, 8]
INFO:root:XX add new best (5, 3) is not 5 5 5
INFO:root:XX add new best (5, 3) is not 5 5 5
INFO:root:XX add new best (5, 3) is not 5 5 5
INFO:root:XX add new best (5, 3) is not 5 5 5
INFO:root:XX add new best (5, 3) is not 5 5 5
INFO:root:XX add new best (5, 3) is not 5 5 5
INFO:root:XX add new best (5, 3) is not 5 5 5
INFO:root:XX add new best (5, 3) is not 5 5 5
INFO:root:XX add new best (5, 3) is not 5 5 5
INFO:root:XX add new best (5, 3) is not 5 5 5
INFO:root:Trace: [(5, [(5, 3) is not 5])]
INFO:root:Trace Quality: [(5, 1)]
INFO:root:Trace Sorted: [(5, 1)]
INFO:root:Finished
INFO:root:Full Trace [(5, [(5, 3) is not 5])]
INFO:root:Trying {'gallopingMUSes': True, 'minPrecheckMUS': True}
INFO:root:Starting Step 1
INFO:root:Current state [[[[1, 4, 5], [1, 5], [7], [2, 5], [8], [3], [6], [1, 4, 9], [1, 2, 4, 9]], [[1, 4, 5], [3], [9], [7], [2, 5], [6], [8], [1, 4], [1, 2, 4]], [[8], [2], [6], [4], [1], [9], [7], [5], [3]], [[6], [4], [2, 5], [1], [9], [2, 5], [3], [8], [7]], [[1, 5, 9], [8], [1, 2, 5], [3], [6], [7], [2, 4, 5], [1, 4, 9], [1, 4, 5, 9]], [[1, 9], [7], [3], [2, 5], [4], [8], [2, 5], [6], [1, 9]], [[3], [9], [1, 5], [8], [7], [1, 4], [4, 5], [2], [6]], [[7], [6], [4], [9], [2, 5], [2, 5], [1], [3], [8]], [[2], [1, 5], [8], [6], [3], [1, 4], [9], [7], [4, 5]]]]
INFO:root:Doing checkSmall1
INFO:root:Getting tiny MUSes, distance 1, for 1 puzlits, 1 repeats
INFO:root:Chunked 1 in [1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
INFO:root:Doing checkSmall2
INFO:root:Getting tiny MUSes, distance 2, for 1 puzlits, 1 repeats
INFO:root:Chunked 1 in [1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
INFO:root:Considering 100 * 1 jobs for minsize=3
INFO:root:Chunked 100 in [9, 9, 9, 9, 8, 8, 8, 8, 8, 8, 8, 8]
INFO:root:Considering 100 * 1 jobs for minsize=4
INFO:root:Chunked 100 in [9, 9, 9, 9, 8, 8, 8, 8, 8, 8, 8, 8]
INFO:root:XX found first (5, 3) is not 5 5
INFO:root:XX add new best (5, 3) is not 5 5 5
INFO:root:XX add new best (5, 3) is not 5 5 5
INFO:root:XX add new best (5, 3) is not 5 5 5
INFO:root:XX add new best (5, 3) is not 5 5 5
INFO:root:XX add new best (5, 3) is not 5 5 5
INFO:root:XX add new best (5, 3) is not 5 5 5
INFO:root:XX add new best (5, 3) is not 5 5 5
INFO:root:XX add new best (5, 3) is not 5 5 5
INFO:root:XX add new best (5, 3) is not 5 5 5
INFO:root:XX add new best (5, 3) is not 5 5 5
INFO:root:XX add new best (5, 3) is not 5 5 5
INFO:root:XX add new best (5, 3) is not 5 5 5
INFO:root:XX add new best (5, 3) is not 5 5 5
INFO:root:Considering 100 * 1 jobs for minsize=5
INFO:root:Chunked 100 in [9, 9, 9, 9, 8, 8, 8, 8, 8, 8, 8, 8]
INFO:root:XX add new best (5, 3) is not 5 5 5
INFO:root:XX add new best (5, 3) is not 5 5 5
INFO:root:XX add new best (5, 3) is not 5 5 5
INFO:root:XX add new best (5, 3) is not 5 5 5
INFO:root:XX add new best (5, 3) is not 5 5 5
INFO:root:XX add new best (5, 3) is not 5 5 5
INFO:root:XX add new best (5, 3) is not 5 5 5
INFO:root:XX add new best (5, 3) is not 5 5 5
INFO:root:XX add new best (5, 3) is not 5 5 5
INFO:root:XX add new best (5, 3) is not 5 5 5
INFO:root:Trace: [(5, [(5, 3) is not 5])]
INFO:root:Trace Quality: [(5, 1)]
INFO:root:Trace Sorted: [(5, 1)]
INFO:root:Finished
INFO:root:Full Trace [(5, [(5, 3) is not 5])]
INFO:root:Trying {}
INFO:root:Starting Step 1
INFO:root:Current state [[[[2], [3, 5, 7, 9], [3, 5, 7, 8], [3, 7, 8], [4], [1], [7, 8, 9], [3, 5], [6]], [[4], [3, 5, 7, 9], [3, 5, 7, 8], [6], [3, 5, 7, 8], [2], [7, 8, 9], [1], [3, 7, 8]], [[7, 8], [1], [6], [3, 7, 8], [9], [3, 5, 7], [2, 7, 8], [2, 3, 5], [4]], [[3], [5, 7], [5, 7, 8], [1], [2], [9], [6], [4], [7, 8]], [[1], [4], [2], [3, 7, 8], [6], [3, 7], [5], [9], [3, 7, 8]], [[7, 8], [6], [9], [5], [3, 7, 8], [4], [2, 7, 8], [2, 3], [1]], [[5], [8], [4], [2], [1], [6], [3], [7], [9]], [[9], [2], [3, 7], [4], [3, 7], [8], [1], [6], [5]], [[6], [3, 7], [1], [9], [3, 5, 7], [3, 5, 7], [4], [8], [2]]]]
INFO:root:Doing checkSmall1
INFO:root:Getting tiny MUSes, distance 1, for 1 puzlits, 1 repeats
INFO:root:Chunked 1 in [1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
INFO:root:Doing checkSmall2
INFO:root:Getting tiny MUSes, distance 2, for 1 puzlits, 1 repeats
INFO:root:Chunked 1 in [1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
INFO:root:Considering 100 * 1 jobs for minsize=3
INFO:root:Chunked 100 in [9, 9, 9, 9, 8, 8, 8, 8, 8, 8, 8, 8]
INFO:root:Considering 100 * 1 jobs for minsize=4
INFO:root:Chunked 100 in [9, 9, 9, 9, 8, 8, 8, 8, 8, 8, 8, 8]
INFO:root:XX found first (2, 5) is not 3 5
INFO:root:XX add new best (2, 5) is not 3 5 5
INFO:root:XX add new best (2, 5) is not 3 5 5
INFO:root:XX add new best (2, 5) is not 3 5 5
INFO:root:XX add new best (2, 5) is not 3 5 5
INFO:root:XX add new best (2, 5) is not 3 5 5
INFO:root:XX add new best (2, 5) is not 3 5 5
INFO:root:XX add new best (2, 5) is not 3 5 5
INFO:root:XX add new best (2, 5) is not 3 5 5
INFO:root:XX add new best (2, 5) is not 3 5 5
INFO:root:XX add new best (2, 5) is not 3 5 5
INFO:root:XX add new best (2, 5) is not 3 5 5
INFO:root:XX add new best (2, 5) is not 3 5 5
INFO:root:XX add new best (2, 5) is not 3 5 5
INFO:root:XX add new best (2, 5) is not 3 5 5
INFO:root:XX add new best (2, 5) is not 3 5 5
INFO:root:XX add new best (2, 5) is not 3 5 5
INFO:root:XX add new best (2, 5) is not 3 5 5
INFO:root:XX add new best (2, 5) is not 3 5 5
INFO:root:Considering 100 * 1 jobs for minsize=5
INFO:root:Chunked 100 in [9, 9, 9, 9, 8, 8, 8, 8, 8, 8, 8, 8]
INFO:root:XX add new best (2, 5) is not 3 5 5
INFO:root:XX add new best (2, 5) is not 3 5 5
INFO:root:XX add new best (2, 5) is not 3 5 5
INFO:root:XX add new best (2, 5) is not 3 5 5
INFO:root:XX add new best (2, 5) is not 3 5 5
INFO:root:XX add new best (2, 5) is not 3 5 5
INFO:root:XX add new best (2, 5) is not 3 5 5
INFO:root:XX add new best (2, 5) is not 3 5 5
INFO:root:XX add new best (2, 5) is not 3 5 5
INFO:root:XX add new best (2, 5) is not 3 5 5
INFO:root:XX add new best (2, 5) is not 3 5 5
INFO:root:XX add new best (2, 5) is not 3 5 5
INFO:root:XX add new best (2, 5) is not 3 5 5
INFO:root:XX add new best (2, 5) is not 3 5 5
INFO:root:XX add new best (2, 5) is not 3 5 5
INFO:root:XX add new best (2, 5) is not 3 5 5
INFO:root:XX add new best (2, 5) is not 3 5 5
INFO:root:XX add new best (2, 5) is not 3 5 5
INFO:root:XX add new best (2, 5) is not 3 5 5
INFO:root:XX add new best (2, 5) is not 3 5 5
INFO:root:XX add new best (2, 5) is not 3 5 5
INFO:root:Trace: [(5, [(2, 5) is not 3])]
INFO:root:Trace Quality: [(5, 1)]
INFO:root:Trace Sorted: [(5, 1)]
INFO:root:Finished
INFO:root:Full Trace [(5, [(2, 5) is not 3])]
INFO:root:Trying {'prechopMUSes': True}
INFO:root:Starting Step 1
INFO:root:Current state [[[[2], [3, 5, 7, 9], [3, 5, 7, 8], [3, 7, 8], [4], [1], [7, 8, 9], [3, 5], [6]], [[4], [3, 5, 7, 9], [3, 5, 7, 8], [6], [3, 5, 7, 8], [2], [7, 8, 9], [1], [3, 7, 8]], [[7, 8], [1], [6], [3, 7, 8], [9], [3, 5, 7], [2, 7, 8], [2, 3, 5], [4]], [[3], [5, 7], [5, 7, 8], [1], [2], [9], [6], [4], [7, 8]], [[1], [4], [2], [3, 7, 8], [6], [3, 7], [5], [9], [3, 7, 8]], [[7, 8], [6], [9], [5], [3, 7, 8], [4], [2, 7, 8], [2, 3], [1]], [[5], [8], [4], [2], [1], [6], [3], [7], [9]], [[9], [2], [3, 7], [4], [3, 7], [8], [1], [6], [5]], [[6], [3, 7], [1], [9], [3, 5, 7], [3, 5, 7], [4], [8], [2]]]]
INFO:root:Doing checkSmall1
INFO:root:Getting tiny MUSes, distance 1, for 1 puzlits, 1 repeats
INFO:root:Chunked 1 in [1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
INFO:root:Doing checkSmall2
INFO:root:Getting tiny MUSes, distance 2, for 1 puzlits, 1 repeats
INFO:root:Chunked 1 in [1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
INFO:root:Considering 100 * 1 jobs for minsize=3
INFO:root:Chunked 100 in [9, 9, 9, 9, 8, 8, 8, 8, 8, 8, 8, 8]
INFO:root:Considering 100 * 1 jobs for minsize=4
INFO:root:Chunked 100 in [9, 9, 9, 9, 8, 8, 8, 8, 8, 8, 8, 8]
INFO:root:XX found first (2, 5) is not 3 5
INFO:root:XX add new best (2, 5) is not 3 5 5
INFO:root:XX add new best (2, 5) is not 3 5 5
INFO:root:XX add new best (2, 5) is not 3 5 5
INFO:root:XX add new best (2, 5) is not 3 5 5
INFO:root:XX add new best (2, 5) is not 3 5 5
INFO:root:XX add new best (2, 5) is not 3 5 5
INFO:root:XX add new best (2, 5) is not 3 5 5
INFO:root:Considering 100 * 1 jobs for minsize=5
INFO:root:Chunked 100 in [9, 9, 9, 9, 8, 8, 8, 8, 8, 8, 8, 8]
INFO:root:XX add new best (2, 5) is not 3 5 5
INFO:root:XX add new best (2, 5) is not 3 5 5
INFO:root:XX add new best (2, 5) is not 3 5 5
INFO:root:XX add new best (2, 5) is not 3 5 5
INFO:root:XX add new best (2, 5) is not 3 5 5
INFO:root:XX add new best (2, 5) is not 3 5 5
INFO:root:XX add new best (2, 5) is not 3 5 5
INFO:root:XX add new best (2, 5) is not 3 5 5
INFO:root:XX add new best (2, 5) is not 3 5 5
INFO:root:XX add new best (2, 5) is not 3 5 5
INFO:root:XX add new best (2, 5) is not 3 5 5
INFO:root:Trace: [(5, [(2, 5) is not 3])]
INFO:root:Trace Quality: [(5, 1)]
INFO:root:Trace Sorted: [(5, 1)]
INFO:root:Finished
INFO:root:Full Trace [(5, [(2, 5) is not 3])]
INFO:root:Trying {'quarterChopMUS': True}
INFO:root:Starting Step 1
INFO:root:Current state [[[[2], [3, 5, 7, 9], [3, 5, 7, 8], [3, 7, 8], [4], [1], [7, 8, 9], [3, 5], [6]], [[4], [3, 5, 7, 9], [3, 5, 7, 8], [6], [3, 5, 7, 8], [2], [7, 8, 9], [1], [3, 7, 8]], [[7, 8], [1], [6], [3, 7, 8], [9], [3, 5, 7], [2, 7, 8], [2, 3, 5], [4]], [[3], [5, 7], [5, 7, 8], [1], [2], [9], [6], [4], [7, 8]], [[1], [4], [2], [3, 7, 8], [6], [3, 7], [5], [9], [3, 7, 8]], [[7, 8], [6], [9], [5], [3, 7, 8], [4], [2, 7, 8], [2, 3], [1]], [[5], [8], [4], [2], [1], [6], [3], [7], [9]], [[9], [2], [3, 7], [4], [3, 7], [8], [1], [6], [5]], [[6], [3, 7], [1], [9], [3, 5, 7], [3, 5, 7], [4], [8], [2]]]]
INFO:root:Doing checkSmall1
INFO:root:Getting tiny MUSes, distance 1, for 1 puzlits, 1 repeats
INFO:root:Chunked 1 in [1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
INFO:root:Doing checkSmall2
INFO:root:Getting tiny MUSes, distance 2, for 1 puzlits, 1 repeats
INFO:root:Chunked 1 in [1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
INFO:root:Considering 100 * 1 jobs for minsize=3
INFO:root:Chunked 100 in [9, 9, 9, 9, 8, 8, 8, 8, 8, 8, 8, 8]
INFO:root:Considering 100 * 1 jobs for minsize=4
INFO:root:Chunked 100 in [9, 9, 9, 9, 8, 8, 8, 8, 8, 8, 8, 8]
INFO:root:XX found first (2, 5) is not 3 5
INFO:root:XX add new best (2, 5) is not 3 5 5
INFO:root:XX add new best (2, 5) is not 3 5 5
INFO:root:XX add new best (2, 5) is not 3 5 5
INFO:root:XX add new best (2, 5) is not 3 5 5
INFO:root:XX add new best (2, 5) is not 3 5 5
INFO:root:XX add new best (2, 5) is not 3 5 5
INFO:root:XX add new best (2, 5) is not 3 5 5
INFO:root:XX add new best (2, 5) is not 3 5 5
INFO:root:XX add new best (2, 5) is not 3 5 5
INFO:root:XX add new best (2, 5) is not 3 5 5
INFO:root:XX add new best (2, 5) is not 3 5 5
INFO:root:XX add new best (2, 5) is not 3 5 5
INFO:root:XX add new best (2, 5) is not 3 5 5
INFO:root:Considering 100 * 1 jobs for minsize=5
INFO:root:Chunked 100 in [9, 9, 9, 9, 8, 8, 8, 8, 8, 8, 8, 8]
INFO:root:XX add new best (2, 5) is not 3 5 5
INFO:root:XX add new best (2, 5) is not 3 5 5
INFO:root:XX add new best (2, 5) is not 3 5 5
INFO:root:XX add new best (2, 5) is not 3 5 5
INFO:root:XX add new best (2, 5) is not 3 5 5
INFO:root:XX add new best (2, 5) is not 3 5 5
INFO:root:XX add new best (2, 5) is not 3 5 5
INFO:root:XX add new best (2, 5) is not 3 5 5
INFO:root:XX add new best (2, 5) is not 3 5 5
INFO:root:XX add new best (2, 5) is not 3 5 5
INFO:root:XX add new best (2, 5) is not 3 5 5
INFO:root:XX add new best (2, 5) is not 3 5 5
INFO:root:XX add new best (2, 5) is not 3 5 5
INFO:root:XX add new best (2, 5) is not 3 5 5
INFO:root:Trace: [(5, [(2, 5) is not 3])]
INFO:root:Trace Quality: [(5, 1)]
INFO:root:Trace Sorted: [(5, 1)]
INFO:root:Finished
INFO:root:Full Trace [(5, [(2, 5) is not 3])]
INFO:root:Trying {'minPrecheckMUS': True}
INFO:root:Starting Step 1
INFO:root:Current state [[[[2], [3, 5, 7, 9], [3, 5, 7, 8], [3, 7, 8], [4], [1], [7, 8, 9], [3, 5], [6]], [[4], [3, 5, 7, 9], [3, 5, 7, 8], [6], [3, 5, 7, 8], [2], [7, 8, 9], [1], [3, 7, 8]], [[7, 8], [1], [6], [3, 7, 8], [9], [3, 5, 7], [2, 7, 8], [2, 3, 5], [4]], [[3], [5, 7], [5, 7, 8], [1], [2], [9], [6], [4], [7, 8]], [[1], [4], [2], [3, 7, 8], [6], [3, 7], [5], [9], [3, 7, 8]], [[7, 8], [6], [9], [5], [3, 7, 8], [4], [2, 7, 8], [2, 3], [1]], [[5], [8], [4], [2], [1], [6], [3], [7], [9]], [[9], [2], [3, 7], [4], [3, 7], [8], [1], [6], [5]], [[6], [3, 7], [1], [9], [3, 5, 7], [3, 5, 7], [4], [8], [2]]]]
INFO:root:Doing checkSmall1
INFO:root:Getting tiny MUSes, distance 1, for 1 puzlits, 1 repeats
INFO:root:Chunked 1 in [1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
INFO:root:Doing checkSmall2
INFO:root:Getting tiny MUSes, distance 2, for 1 puzlits, 1 repeats
INFO:root:Chunked 1 in [1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
INFO:root:Considering 100 * 1 jobs for minsize=3
INFO:root:Chunked 100 in [9, 9, 9, 9, 8, 8, 8, 8, 8, 8, 8, 8]
INFO:root:Considering 100 * 1 jobs for minsize=4
INFO:root:Chunked 100 in [9, 9, 9, 9, 8, 8, 8, 8, 8, 8, 8, 8]
INFO:root:XX found first (2, 5) is not 3 5
INFO:root:XX add new best (2, 5) is not 3 5 5
INFO:root:XX add new best (2, 5) is not 3 5 5
INFO:root:XX add new best (2, 5) is not 3 5 5
INFO:root:XX add new best (2, 5) is not 3 5 5
INFO:root:XX add new best (2, 5) is not 3 5 5
INFO:root:XX add new best (2, 5) is not 3 5 5
INFO:root:XX add new best (2, 5) is not 3 5 5
INFO:root:Considering 100 * 1 jobs for minsize=5
INFO:root:Chunked 100 in [9, 9, 9, 9, 8, 8, 8, 8, 8, 8, 8, 8]
INFO:root:XX add new best (2, 5) is not 3 5 5
INFO:root:XX add new best (2, 5) is not 3 5 5
INFO:root:XX add new best (2, 5) is not 3 5 5
INFO:root:XX add new best (2, 5) is not 3 5 5
INFO:root:XX add new best (2, 5) is not 3 5 5
INFO:root:XX add new best (2, 5) is not 3 5 5
INFO:root:XX add new best (2, 5) is not 3 5 5
INFO:root:XX add new best (2, 5) is not 3 5 5
INFO:root:XX add new best (2, 5) is not 3 5 5
INFO:root:XX add new best (2, 5) is not 3 5 5
INFO:root:XX add new best (2, 5) is not 3 5 5
INFO:root:Trace: [(5, [(2, 5) is not 3])]
INFO:root:Trace Quality: [(5, 1)]
INFO:root:Trace Sorted: [(5, 1)]
INFO:root:Finished
INFO:root:Full Trace [(5, [(2, 5) is not 3])]
INFO:root:Trying {'gallopingMUSes': True}
INFO:root:Starting Step 1
INFO:root:Current state [[[[2], [3, 5, 7, 9], [3, 5, 7, 8], [3, 7, 8], [4], [1], [7, 8, 9], [3, 5], [6]], [[4], [3, 5, 7, 9], [3, 5, 7, 8], [6], [3, 5, 7, 8], [2], [7, 8, 9], [1], [3, 7, 8]], [[7, 8], [1], [6], [3, 7, 8], [9], [3, 5, 7], [2, 7, 8], [2, 3, 5], [4]], [[3], [5, 7], [5, 7, 8], [1], [2], [9], [6], [4], [7, 8]], [[1], [4], [2], [3, 7, 8], [6], [3, 7], [5], [9], [3, 7, 8]], [[7, 8], [6], [9], [5], [3, 7, 8], [4], [2, 7, 8], [2, 3], [1]], [[5], [8], [4], [2], [1], [6], [3], [7], [9]], [[9], [2], [3, 7], [4], [3, 7], [8], [1], [6], [5]], [[6], [3, 7], [1], [9], [3, 5, 7], [3, 5, 7], [4], [8], [2]]]]
INFO:root:Doing checkSmall1
INFO:root:Getting tiny MUSes, distance 1, for 1 puzlits, 1 repeats
INFO:root:Chunked 1 in [1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
INFO:root:Doing checkSmall2
INFO:root:Getting tiny MUSes, distance 2, for 1 puzlits, 1 repeats
INFO:root:Chunked 1 in [1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
INFO:root:Considering 100 * 1 jobs for minsize=3
INFO:root:Chunked 100 in [9, 9, 9, 9, 8, 8, 8, 8, 8, 8, 8, 8]
INFO:root:Considering 100 * 1 jobs for minsize=4
INFO:root:Chunked 100 in [9, 9, 9, 9, 8, 8, 8, 8, 8, 8, 8, 8]
INFO:root:XX found first (2, 5) is not 3 5
INFO:root:XX add new best (2, 5) is not 3 5 5
INFO:root:XX add new best (2, 5) is not 3 5 5
INFO:root:XX add new best (2, 5) is not 3 5 5
INFO:root:XX add new best (2, 5) is not 3 5 5
INFO:root:XX add new best (2, 5) is not 3 5 5
INFO:root:XX add new best (2, 5) is not 3 5 5
INFO:root:Considering 100 * 1 jobs for minsize=5
INFO:root:Chunked 100 in [9, 9, 9, 9, 8, 8, 8, 8, 8, 8, 8, 8]
INFO:root:XX add new best (2, 5) is not 3 5 5
INFO:root:XX add new best (2, 5) is not 3 5 5
INFO:root:XX add new best (2, 5) is not 3 5 5
INFO:root:XX add new best (2, 5) is not 3 5 5
INFO:root:XX add new best (2, 5) is not 3 5 5
INFO:root:XX add new best (2, 5) is not 3 5 5
INFO:root:XX add new best (2, 5) is not 3 5 5
INFO:root:XX add new best (2, 5) is not 3 5 5
INFO:root:Trace: [(5, [(2, 5) is not 3])]
INFO:root:Trace Quality: [(5, 1)]
INFO:root:Trace Sorted: [(5, 1)]
INFO:root:Finished
INFO:root:Full Trace [(5, [(2, 5) is not 3])]
INFO:root:Trying {'minPrecheckStepsMUS': True}
INFO:root:Starting Step 1
INFO:root:Current state [[[[2], [3, 5, 7, 9], [3, 5, 7, 8], [3, 7, 8], [4], [1], [7, 8, 9], [3, 5], [6]], [[4], [3, 5, 7, 9], [3, 5, 7, 8], [6], [3, 5, 7, 8], [2], [7, 8, 9], [1], [3, 7, 8]], [[7, 8], [1], [6], [3, 7, 8], [9], [3, 5, 7], [2, 7, 8], [2, 3, 5], [4]], [[3], [5, 7], [5, 7, 8], [1], [2], [9], [6], [4], [7, 8]], [[1], [4], [2], [3, 7, 8], [6], [3, 7], [5], [9], [3, 7, 8]], [[7, 8], [6], [9], [5], [3, 7, 8], [4], [2, 7, 8], [2, 3], [1]], [[5], [8], [4], [2], [1], [6], [3], [7], [9]], [[9], [2], [3, 7], [4], [3, 7], [8], [1], [6], [5]], [[6], [3, 7], [1], [9], [3, 5, 7], [3, 5, 7], [4], [8], [2]]]]
INFO:root:Doing checkSmall1
INFO:root:Getting tiny MUSes, distance 1, for 1 puzlits, 1 repeats
INFO:root:Chunked 1 in [1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
INFO:root:Doing checkSmall2
INFO:root:Getting tiny MUSes, distance 2, for 1 puzlits, 1 repeats
INFO:root:Chunked 1 in [1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
INFO:root:Considering 100 * 1 jobs for minsize=3
INFO:root:Chunked 100 in [9, 9, 9, 9, 8, 8, 8, 8, 8, 8, 8, 8]
INFO:root:Considering 100 * 1 jobs for minsize=4
INFO:root:Chunked 100 in [9, 9, 9, 9, 8, 8, 8, 8, 8, 8, 8, 8]
INFO:root:XX found first (2, 5) is not 3 5
INFO:root:XX add new best (2, 5) is not 3 5 5
INFO:root:XX add new best (2, 5) is not 3 5 5
INFO:root:XX add new best (2, 5) is not 3 5 5
INFO:root:XX add new best (2, 5) is not 3 5 5
INFO:root:XX add new best (2, 5) is not 3 5 5
INFO:root:XX add new best (2, 5) is not 3 5 5
INFO:root:XX add new best (2, 5) is not 3 5 5
INFO:root:Considering 100 * 1 jobs for minsize=5
INFO:root:Chunked 100 in [9, 9, 9, 9, 8, 8, 8, 8, 8, 8, 8, 8]
INFO:root:XX add new best (2, 5) is not 3 5 5
INFO:root:XX add new best (2, 5) is not 3 5 5
INFO:root:XX add new best (2, 5) is not 3 5 5
INFO:root:XX add new best (2, 5) is not 3 5 5
INFO:root:XX add new best (2, 5) is not 3 5 5
INFO:root:XX add new best (2, 5) is not 3 5 5
INFO:root:XX add new best (2, 5) is not 3 5 5
INFO:root:XX add new best (2, 5) is not 3 5 5
INFO:root:XX add new best (2, 5) is not 3 5 5
INFO:root:XX add new best (2, 5) is not 3 5 5
INFO:root:XX add new best (2, 5) is not 3 5 5
INFO:root:Trace: [(5, [(2, 5) is not 3])]
INFO:root:Trace Quality: [(5, 1)]
INFO:root:Trace Sorted: [(5, 1)]
INFO:root:Finished
INFO:root:Full Trace [(5, [(2, 5) is not 3])]
INFO:root:Trying {'gallopingMUSes': True, 'minPrecheckMUS': True}
INFO:root:Starting Step 1
INFO:root:Current state [[[[2], [3, 5, 7, 9], [3, 5, 7, 8], [3, 7, 8], [4], [1], [7, 8, 9], [3, 5], [6]], [[4], [3, 5, 7, 9], [3, 5, 7, 8], [6], [3, 5, 7, 8], [2], [7, 8, 9], [1], [3, 7, 8]], [[7, 8], [1], [6], [3, 7, 8], [9], [3, 5, 7], [2, 7, 8], [2, 3, 5], [4]], [[3], [5, 7], [5, 7, 8], [1], [2], [9], [6], [4], [7, 8]], [[1], [4], [2], [3, 7, 8], [6], [3, 7], [5], [9], [3, 7, 8]], [[7, 8], [6], [9], [5], [3, 7, 8], [4], [2, 7, 8], [2, 3], [1]], [[5], [8], [4], [2], [1], [6], [3], [7], [9]], [[9], [2], [3, 7], [4], [3, 7], [8], [1], [6], [5]], [[6], [3, 7], [1], [9], [3, 5, 7], [3, 5, 7], [4], [8], [2]]]]
INFO:root:Doing checkSmall1
INFO:root:Getting tiny MUSes, distance 1, for 1 puzlits, 1 repeats
INFO:root:Chunked 1 in [1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
INFO:root:Doing checkSmall2
INFO:root:Getting tiny MUSes, distance 2, for 1 puzlits, 1 repeats
INFO:root:Chunked 1 in [1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
INFO:root:Considering 100 * 1 jobs for minsize=3
INFO:root:Chunked 100 in [9, 9, 9, 9, 8, 8, 8, 8, 8, 8, 8, 8]
INFO:root:Considering 100 * 1 jobs for minsize=4
INFO:root:Chunked 100 in [9, 9, 9, 9, 8, 8, 8, 8, 8, 8, 8, 8]
INFO:root:XX found first (2, 5) is not 3 5
INFO:root:XX add new best (2, 5) is not 3 5 5
INFO:root:XX add new best (2, 5) is not 3 5 5
INFO:root:XX add new best (2, 5) is not 3 5 5
INFO:root:XX add new best (2, 5) is not 3 5 5
INFO:root:XX add new best (2, 5) is not 3 5 5
INFO:root:XX add new best (2, 5) is not 3 5 5
INFO:root:XX add new best (2, 5) is not 3 5 5
INFO:root:Considering 100 * 1 jobs for minsize=5
INFO:root:Chunked 100 in [9, 9, 9, 9, 8, 8, 8, 8, 8, 8, 8, 8]
INFO:root:XX add new best (2, 5) is not 3 5 5
INFO:root:XX add new best (2, 5) is not 3 5 5
INFO:root:XX add new best (2, 5) is not 3 5 5
INFO:root:XX add new best (2, 5) is not 3 5 5
INFO:root:XX add new best (2, 5) is not 3 5 5
INFO:root:XX add new best (2, 5) is not 3 5 5
INFO:root:XX add new best (2, 5) is not 3 5 5
INFO:root:XX add new best (2, 5) is not 3 5 5
INFO:root:XX add new best (2, 5) is not 3 5 5
INFO:root:XX add new best (2, 5) is not 3 5 5
INFO:root:XX add new best (2, 5) is not 3 5 5
INFO:root:Trace: [(5, [(2, 5) is not 3])]
INFO:root:Trace Quality: [(5, 1)]
INFO:root:Trace Sorted: [(5, 1)]
INFO:root:Finished
INFO:root:Full Trace [(5, [(2, 5) is not 3])]
INFO:root:Trying {}
INFO:root:Starting Step 1
INFO:root:Current state [[[[2], [3, 5, 7, 9], [3, 5, 7, 8], [3, 7, 8], [4], [1], [7, 8, 9], [3, 5], [6]], [[4], [3, 5, 7, 9], [3, 5, 7, 8], [6], [5, 7, 8], [2], [7, 8, 9], [1], [3, 7]], [[7, 8], [1], [6], [3, 7, 8], [9], [3, 5, 7], [2, 7, 8], [2, 3, 5], [4]], [[3], [5, 7], [5, 7, 8], [1], [2], [9], [6], [4], [7, 8]], [[1], [4], [2], [3, 7, 8], [6], [3, 7], [5], [9], [3, 7, 8]], [[7, 8], [6], [9], [5], [3, 7, 8], [4], [2, 7], [2, 3], [1]], [[5], [8], [4], [2], [1], [6], [3], [7], [9]], [[9], [2], [3, 7], [4], [3, 7], [8], [1], [6], [5]], [[6], [3, 7], [1], [9], [3, 5, 7], [3, 5, 7], [4], [8], [2]]]]
INFO:root:Doing checkSmall1
INFO:root:Getting tiny MUSes, distance 1, for 1 puzlits, 1 repeats
INFO:root:Chunked 1 in [1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
INFO:root:Doing checkSmall2
INFO:root:Getting tiny MUSes, distance 2, for 1 puzlits, 1 repeats
INFO:root:Chunked 1 in [1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
INFO:root:Considering 100 * 1 jobs for minsize=3
INFO:root:Chunked 100 in [9, 9, 9, 9, 8, 8, 8, 8, 8, 8, 8, 8]
INFO:root:Considering 100 * 1 jobs for minsize=4
INFO:root:Chunked 100 in [9, 9, 9, 9, 8, 8, 8, 8, 8, 8, 8, 8]
INFO:root:Considering 100 * 1 jobs for minsize=5
INFO:root:Chunked 100 in [9, 9, 9, 9, 8, 8, 8, 8, 8, 8, 8, 8]
INFO:root:Considering 100 * 1 jobs for minsize=6
INFO:root:Chunked 100 in [9, 9, 9, 9, 8, 8, 8, 8, 8, 8, 8, 8]
INFO:root:XX found first (3, 4) is not 8 7
INFO:root:XX add new best (3, 4) is not 8 7 7
INFO:root:XX add new best (3, 4) is not 8 7 7
INFO:root:XX add new best (3, 4) is not 8 7 7
INFO:root:XX add new best (3, 4) is not 8 7 7
INFO:root:XX add new best (3, 4) is not 8 7 7
INFO:root:XX add new best (3, 4) is not 8 7 7
INFO:root:XX add new best (3, 4) is not 8 7 7
INFO:root:XX add new best (3, 4) is not 8 7 7
INFO:root:XX add new best (3, 4) is not 8 7 7
INFO:root:XX add new best (3, 4) is not 8 7 7
INFO:root:XX add new best (3, 4) is not 8 7 7
INFO:root:XX add new best (3, 4) is not 8 7 7
INFO:root:XX add new best (3, 4) is not 8 7 7
INFO:root:XX add new best (3, 4) is not 8 7 7
INFO:root:XX add new best (3, 4) is not 8 7 7
INFO:root:XX add new best (3, 4) is not 8 7 7
INFO:root:XX add new best (3, 4) is not 8 7 7
INFO:root:XX add new best (3, 4) is not 8 7 7
INFO:root:XX add new best (3, 4) is not 8 7 7
INFO:root:XX add new best (3, 4) is not 8 7 7
INFO:root:XX add new best (3, 4) is not 8 7 7
INFO:root:XX add new best (3, 4) is not 8 7 7
INFO:root:XX add new best (3, 4) is not 8 7 7
INFO:root:XX add new best (3, 4) is not 8 7 7
INFO:root:XX add new best (3, 4) is not 8 7 7
INFO:root:XX add new best (3, 4) is not 8 7 7
INFO:root:XX add new best (3, 4) is not 8 7 7
INFO:root:XX add new best (3, 4) is not 8 7 7
INFO:root:XX add new best (3, 4) is not 8 7 7
INFO:root:XX add new best (3, 4) is not 8 7 7
INFO:root:XX add new best (3, 4) is not 8 7 7
INFO:root:XX add new best (3, 4) is not 8 7 7
INFO:root:XX add new best (3, 4) is not 8 7 7
INFO:root:XX add new best (3, 4) is not 8 7 7
INFO:root:XX add new best (3, 4) is not 8 7 7
INFO:root:XX add new best (3, 4) is not 8 7 7
INFO:root:XX add new best (3, 4) is not 8 7 7
INFO:root:XX add new best (3, 4) is not 8 7 7
INFO:root:XX add new best (3, 4) is not 8 7 7
INFO:root:XX add new best (3, 4) is not 8 7 7
INFO:root:XX add new best (3, 4) is not 8 7 7
INFO:root:XX add new best (3, 4) is not 8 7 7
INFO:root:XX add new best (3, 4) is not 8 7 7
INFO:root:XX add new best (3, 4) is not 8 7 7
INFO:root:XX add new best (3, 4) is not 8 7 7
INFO:root:XX add new best (3, 4) is not 8 7 7
INFO:root:XX add new best (3, 4) is not 8 7 7
INFO:root:XX add new best (3, 4) is not 8 7 7
INFO:root:XX add new best (3, 4) is not 8 7 7
INFO:root:XX add new best (3, 4) is not 8 7 7
INFO:root:XX add new best (3, 4) is not 8 7 7
INFO:root:XX add new best (3, 4) is not 8 7 7
INFO:root:XX add new best (3, 4) is not 8 7 7
INFO:root:XX add new best (3, 4) is not 8 7 7
INFO:root:XX add new best (3, 4) is not 8 7 7
INFO:root:XX add new best (3, 4) is not 8 7 7
INFO:root:XX add new best (3, 4) is not 8 7 7
INFO:root:XX add new best (3, 4) is not 8 7 7
INFO:root:XX add new best (3, 4) is not 8 7 7
INFO:root:XX add new best (3, 4) is not 8 7 7
INFO:root:XX add new best (3, 4) is not 8 7 7
INFO:root:XX add new best (3, 4) is not 8 7 7
INFO:root:XX add new best (3, 4) is not 8 7 7
INFO:root:XX add new best (3, 4) is not 8 7 7
INFO:root:XX add new best (3, 4) is not 8 7 7
INFO:root:XX add new best (3, 4) is not 8 7 7
INFO:root:XX add new best (3, 4) is not 8 7 7
INFO:root:XX add new best (3, 4) is not 8 7 7
INFO:root:XX add new best (3, 4) is not 8 7 7
INFO:root:XX add new best (3, 4) is not 8 7 7
INFO:root:XX add new best (3, 4) is not 8 7 7
INFO:root:XX add new best (3, 4) is not 8 7 7
INFO:root:XX add new best (3, 4) is not 8 7 7
INFO:root:XX add new best (3, 4) is not 8 7 7
INFO:root:XX add new best (3, 4) is not 8 7 7
INFO:root:XX add new best (3, 4) is not 8 7 7
INFO:root:XX add new best (3, 4) is not 8 7 7
INFO:root:XX add new best (3, 4) is not 8 7 7
INFO:root:XX add new best (3, 4) is not 8 7 7
INFO:root:XX add new best (3, 4) is not 8 7 7
INFO:root:XX add new best (3, 4) is not 8 7 7
INFO:root:XX add new best (3, 4) is not 8 7 7
INFO:root:XX add new best (3, 4) is not 8 7 7
INFO:root:XX add new best (3, 4) is not 8 7 7
INFO:root:XX add new best (3, 4) is not 8 7 7
INFO:root:XX add new best (3, 4) is not 8 7 7
INFO:root:XX add new best (3, 4) is not 8 7 7
INFO:root:XX add new best (3, 4) is not 8 7 7
INFO:root:XX add new best (3, 4) is not 8 7 7
INFO:root:XX add new best (3, 4) is not 8 7 7
INFO:root:XX add new best (3, 4) is not 8 7 7
INFO:root:XX add new best (3, 4) is not 8 7 7
INFO:root:XX add new best (3, 4) is not 8 7 7
INFO:root:XX add new best (3, 4) is not 8 7 7
INFO:root:XX add new best (3, 4) is not 8 7 7
INFO:root:XX add new best (3, 4) is not 8 7 7
INFO:root:XX add new best (3, 4) is not 8 7 7
INFO:root:XX add new best (3, 4) is not 8 7 7
INFO:root:XX add new best (3, 4) is not 8 7 7
INFO:root:Considering 100 * 1 jobs for minsize=7
INFO:root:Chunked 100 in [9, 9, 9, 9, 8, 8, 8, 8, 8, 8, 8, 8]
INFO:root:XX add new best (3, 4) is not 8 7 7
INFO:root:XX add new best (3, 4) is not 8 7 7
INFO:root:XX add new best (3, 4) is not 8 7 7
INFO:root:XX add new best (3, 4) is not 8 7 7
INFO:root:XX add new best (3, 4) is not 8 7 7
INFO:root:XX add new best (3, 4) is not 8 7 7
INFO:root:XX add new best (3, 4) is not 8 7 7
INFO:root:XX add new best (3, 4) is not 8 7 7
INFO:root:XX add new best (3, 4) is not 8 7 7
INFO:root:XX add new best (3, 4) is not 8 7 7
INFO:root:XX add new best (3, 4) is not 8 7 7
INFO:root:XX add new best (3, 4) is not 8 7 7
INFO:root:XX add new best (3, 4) is not 8 7 7
INFO:root:XX add new best (3, 4) is not 8 7 7
INFO:root:XX add new best (3, 4) is not 8 7 7
INFO:root:XX add new best (3, 4) is not 8 7 7
INFO:root:XX add new best (3, 4) is not 8 7 7
INFO:root:XX add new best (3, 4) is not 8 7 7
INFO:root:XX add new best (3, 4) is not 8 7 7
INFO:root:XX add new best (3, 4) is not 8 7 7
INFO:root:XX add new best (3, 4) is not 8 7 7
INFO:root:XX add new best (3, 4) is not 8 7 7
INFO:root:XX add new best (3, 4) is not 8 7 7
INFO:root:XX add new best (3, 4) is not 8 7 7
INFO:root:XX add new best (3, 4) is not 8 7 7
INFO:root:XX add new best (3, 4) is not 8 7 7
INFO:root:XX add new best (3, 4) is not 8 7 7
INFO:root:XX add new best (3, 4) is not 8 7 7
INFO:root:XX add new best (3, 4) is not 8 7 7
INFO:root:XX add new best (3, 4) is not 8 7 7
INFO:root:XX add new best (3, 4) is not 8 7 7
INFO:root:XX add new best (3, 4) is not 8 7 7
INFO:root:XX add new best (3, 4) is not 8 7 7
INFO:root:XX add new best (3, 4) is not 8 7 7
INFO:root:XX add new best (3, 4) is not 8 7 7
INFO:root:XX add new best (3, 4) is not 8 7 7
INFO:root:XX add new best (3, 4) is not 8 7 7
INFO:root:XX add new best (3, 4) is not 8 7 7
INFO:root:XX add new best (3, 4) is not 8 7 7
INFO:root:XX add new best (3, 4) is not 8 7 7
INFO:root:XX add new best (3, 4) is not 8 7 7
INFO:root:XX add new best (3, 4) is not 8 7 7
INFO:root:XX add new best (3, 4) is not 8 7 7
INFO:root:XX add new best (3, 4) is not 8 7 7
INFO:root:XX add new best (3, 4) is not 8 7 7
INFO:root:XX add new best (3, 4) is not 8 7 7
INFO:root:XX add new best (3, 4) is not 8 7 7
INFO:root:XX add new best (3, 4) is not 8 7 7
INFO:root:XX add new best (3, 4) is not 8 7 7
INFO:root:XX add new best (3, 4) is not 8 7 7
INFO:root:XX add new best (3, 4) is not 8 7 7
INFO:root:XX add new best (3, 4) is not 8 7 7
INFO:root:XX add new best (3, 4) is not 8 7 7
INFO:root:XX add new best (3, 4) is not 8 7 7
INFO:root:XX add new best (3, 4) is not 8 7 7
INFO:root:XX add new best (3, 4) is not 8 7 7
INFO:root:XX add new best (3, 4) is not 8 7 7
INFO:root:XX add new best (3, 4) is not 8 7 7
INFO:root:XX add new best (3, 4) is not 8 7 7
INFO:root:XX add new best (3, 4) is not 8 7 7
INFO:root:XX add new best (3, 4) is not 8 7 7
INFO:root:XX add new best (3, 4) is not 8 7 7
INFO:root:XX add new best (3, 4) is not 8 7 7
INFO:root:XX add new best (3, 4) is not 8 7 7
INFO:root:XX add new best (3, 4) is not 8 7 7
INFO:root:XX add new best (3, 4) is not 8 7 7
INFO:root:XX add new best (3, 4) is not 8 7 7
INFO:root:XX add new best (3, 4) is not 8 7 7
INFO:root:XX add new best (3, 4) is not 8 7 7
INFO:root:XX add new best (3, 4) is not 8 7 7
INFO:root:XX add new best (3, 4) is not 8 7 7
INFO:root:XX add new best (3, 4) is not 8 7 7
INFO:root:XX add new best (3, 4) is not 8 7 7
INFO:root:XX add new best (3, 4) is not 8 7 7
INFO:root:XX add new best (3, 4) is not 8 7 7
INFO:root:XX add new best (3, 4) is not 8 7 7
INFO:root:XX add new best (3, 4) is not 8 7 7
INFO:root:XX add new best (3, 4) is not 8 7 7
INFO:root:XX add new best (3, 4) is not 8 7 7
INFO:root:XX add new best (3, 4) is not 8 7 7
INFO:root:XX add new best (3, 4) is not 8 7 7
INFO:root:XX add new best (3, 4) is not 8 7 7
INFO:root:XX add new best (3, 4) is not 8 7 7
INFO:root:XX add new best (3, 4) is not 8 7 7
INFO:root:XX add new best (3, 4) is not 8 7 7
INFO:root:XX add new best (3, 4) is not 8 7 7
INFO:root:XX add new best (3, 4) is not 8 7 7
INFO:root:XX add new best (3, 4) is not 8 7 7
INFO:root:XX add new best (3, 4) is not 8 7 7
INFO:root:XX add new best (3, 4) is not 8 7 7
INFO:root:XX add new best (3, 4) is not 8 7 7
INFO:root:XX add new best (3, 4) is not 8 7 7
INFO:root:XX add new best (3, 4) is not 8 7 7
INFO:root:XX add new best (3, 4) is not 8 7 7
INFO:root:XX add new best (3, 4) is not 8 7 7
INFO:root:XX add new best (3, 4) is not 8 7 7
INFO:root:XX add new best (3, 4) is not 8 7 7
INFO:root:XX add new best (3, 4) is not 8 7 7
INFO:root:XX add new best (3, 4) is not 8 7 7
INFO:root:XX add new best (3, 4) is not 8 7 7
INFO:root:Trace: [(7, [(3, 4) is not 8])]
INFO:root:Trace Quality: [(7, 1)]
INFO:root:Trace Sorted: [(7, 1)]
INFO:root:Finished
INFO:root:Full Trace [(7, [(3, 4) is not 8])]
INFO:root:Trying {'prechopMUSes': True}
INFO:root:Starting Step 1
INFO:root:Current state [[[[2], [3, 5, 7, 9], [3, 5, 7, 8], [3, 7, 8], [4], [1], [7, 8, 9], [3, 5], [6]], [[4], [3, 5, 7, 9], [3, 5, 7, 8], [6], [5, 7, 8], [2], [7, 8, 9], [1], [3, 7]], [[7, 8], [1], [6], [3, 7, 8], [9], [3, 5, 7], [2, 7, 8], [2, 3, 5], [4]], [[3], [5, 7], [5, 7, 8], [1], [2], [9], [6], [4], [7, 8]], [[1], [4], [2], [3, 7, 8], [6], [3, 7], [5], [9], [3, 7, 8]], [[7, 8], [6], [9], [5], [3, 7, 8], [4], [2, 7], [2, 3], [1]], [[5], [8], [4], [2], [1], [6], [3], [7], [9]], [[9], [2], [3, 7], [4], [3, 7], [8], [1], [6], [5]], [[6], [3, 7], [1], [9], [3, 5, 7], [3, 5, 7], [4], [8], [2]]]]
INFO:root:Doing checkSmall1
INFO:root:Getting tiny MUSes, distance 1, for 1 puzlits, 1 repeats
INFO:root:Chunked 1 in [1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
INFO:root:Doing checkSmall2
INFO:root:Getting tiny MUSes, distance 2, for 1 puzlits, 1 repeats
INFO:root:Chunked 1 in [1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
INFO:root:Considering 100 * 1 jobs for minsize=3
INFO:root:Chunked 100 in [9, 9, 9, 9, 8, 8, 8, 8, 8, 8, 8, 8]
INFO:root:Considering 100 * 1 jobs for minsize=4
INFO:root:Chunked 100 in [9, 9, 9, 9, 8, 8, 8, 8, 8, 8, 8, 8]
INFO:root:XX found first (3, 4) is not 8 5
INFO:root:XX add new best (3, 4) is not 8 5 5
INFO:root:XX add new best (3, 4) is not 8 5 5
INFO:root:XX add new best (3, 4) is not 8 5 5
INFO:root:XX add new best (3, 4) is not 8 5 5
INFO:root:XX add new best (3, 4) is not 8 5 5
INFO:root:XX add new best (3, 4) is not 8 5 5
INFO:root:XX add new best (3, 4) is not 8 5 5
INFO:root:XX add new best (3, 4) is not 8 5 5
INFO:root:XX add new best (3, 4) is not 8 5 5
INFO:root:XX add new best (3, 4) is not 8 5 5
INFO:root:XX add new best (3, 4) is not 8 5 5
INFO:root:XX add new best (3, 4) is not 8 5 5
INFO:root:XX add new best (3, 4) is not 8 5 5
INFO:root:XX add new best (3, 4) is not 8 5 5
INFO:root:XX add new best (3, 4) is not 8 5 5
INFO:root:XX add new best (3, 4) is not 8 5 5
INFO:root:XX add new best (3, 4) is not 8 5 5
INFO:root:XX add new best (3, 4) is not 8 5 5
INFO:root:XX add new best (3, 4) is not 8 5 5
INFO:root:XX add new best (3, 4) is not 8 5 5
INFO:root:Considering 100 * 1 jobs for minsize=5
INFO:root:Chunked 100 in [9, 9, 9, 9, 8, 8, 8, 8, 8, 8, 8, 8]
INFO:root:XX add new best (3, 4) is not 8 5 5
INFO:root:XX add new best (3, 4) is not 8 5 5
INFO:root:XX add new best (3, 4) is not 8 5 5
INFO:root:XX add new best (3, 4) is not 8 5 5
INFO:root:XX add new best (3, 4) is not 8 5 5
INFO:root:XX add new best (3, 4) is not 8 5 5
INFO:root:XX add new best (3, 4) is not 8 5 5
INFO:root:XX add new best (3, 4) is not 8 5 5
INFO:root:XX add new best (3, 4) is not 8 5 5
INFO:root:XX add new best (3, 4) is not 8 5 5
INFO:root:XX add new best (3, 4) is not 8 5 5
INFO:root:XX add new best (3, 4) is not 8 5 5
INFO:root:XX add new best (3, 4) is not 8 5 5
INFO:root:XX add new best (3, 4) is not 8 5 5
INFO:root:XX add new best (3, 4) is not 8 5 5
INFO:root:XX add new best (3, 4) is not 8 5 5
INFO:root:XX add new best (3, 4) is not 8 5 5
INFO:root:XX add new best (3, 4) is not 8 5 5
INFO:root:XX add new best (3, 4) is not 8 5 5
INFO:root:XX add new best (3, 4) is not 8 5 5
INFO:root:XX add new best (3, 4) is not 8 5 5
INFO:root:XX add new best (3, 4) is not 8 5 5
INFO:root:XX add new best (3, 4) is not 8 5 5
INFO:root:XX add new best (3, 4) is not 8 5 5
INFO:root:XX add new best (3, 4) is not 8 5 5
INFO:root:XX add new best (3, 4) is not 8 5 5
INFO:root:XX add new best (3, 4) is not 8 5 5
INFO:root:Trace: [(5, [(3, 4) is not 8])]
INFO:root:Trace Quality: [(5, 1)]
INFO:root:Trace Sorted: [(5, 1)]
INFO:root:Finished
INFO:root:Full Trace [(5, [(3, 4) is not 8])]
INFO:root:Trying {'quarterChopMUS': True}
INFO:root:Starting Step 1
INFO:root:Current state [[[[2], [3, 5, 7, 9], [3, 5, 7, 8], [3, 7, 8], [4], [1], [7, 8, 9], [3, 5], [6]], [[4], [3, 5, 7, 9], [3, 5, 7, 8], [6], [5, 7, 8], [2], [7, 8, 9], [1], [3, 7]], [[7, 8], [1], [6], [3, 7, 8], [9], [3, 5, 7], [2, 7, 8], [2, 3, 5], [4]], [[3], [5, 7], [5, 7, 8], [1], [2], [9], [6], [4], [7, 8]], [[1], [4], [2], [3, 7, 8], [6], [3, 7], [5], [9], [3, 7, 8]], [[7, 8], [6], [9], [5], [3, 7, 8], [4], [2, 7], [2, 3], [1]], [[5], [8], [4], [2], [1], [6], [3], [7], [9]], [[9], [2], [3, 7], [4], [3, 7], [8], [1], [6], [5]], [[6], [3, 7], [1], [9], [3, 5, 7], [3, 5, 7], [4], [8], [2]]]]
INFO:root:Doing checkSmall1
INFO:root:Getting tiny MUSes, distance 1, for 1 puzlits, 1 repeats
INFO:root:Chunked 1 in [1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
INFO:root:Doing checkSmall2
INFO:root:Getting tiny MUSes, distance 2, for 1 puzlits, 1 repeats
INFO:root:Chunked 1 in [1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
INFO:root:Considering 100 * 1 jobs for minsize=3
INFO:root:Chunked 100 in [9, 9, 9, 9, 8, 8, 8, 8, 8, 8, 8, 8]
INFO:root:Considering 100 * 1 jobs for minsize=4
INFO:root:Chunked 100 in [9, 9, 9, 9, 8, 8, 8, 8, 8, 8, 8, 8]
INFO:root:XX found first (3, 4) is not 8 5
INFO:root:XX add new best (3, 4) is not 8 5 5
INFO:root:XX add new best (3, 4) is not 8 5 5
INFO:root:XX add new best (3, 4) is not 8 5 5
INFO:root:XX add new best (3, 4) is not 8 5 5
INFO:root:XX add new best (3, 4) is not 8 5 5
INFO:root:XX add new best (3, 4) is not 8 5 5
INFO:root:XX add new best (3, 4) is not 8 5 5
INFO:root:XX add new best (3, 4) is not 8 5 5
INFO:root:XX add new best (3, 4) is not 8 5 5
INFO:root:XX add new best (3, 4) is not 8 5 5
INFO:root:XX add new best (3, 4) is not 8 5 5
INFO:root:XX add new best (3, 4) is not 8 5 5
INFO:root:XX add new best (3, 4) is not 8 5 5
INFO:root:XX add new best (3, 4) is not 8 5 5
INFO:root:XX add new best (3, 4) is not 8 5 5
INFO:root:XX add new best (3, 4) is not 8 5 5
INFO:root:XX add new best (3, 4) is not 8 5 5
INFO:root:XX add new best (3, 4) is not 8 5 5
INFO:root:XX add new best (3, 4) is not 8 5 5
INFO:root:XX add new best (3, 4) is not 8 5 5
INFO:root:Considering 100 * 1 jobs for minsize=5
INFO:root:Chunked 100 in [9, 9, 9, 9, 8, 8, 8, 8, 8, 8, 8, 8]
INFO:root:XX add new best (3, 4) is not 8 5 5
INFO:root:XX add new best (3, 4) is not 8 5 5
INFO:root:XX add new best (3, 4) is not 8 5 5
INFO:root:XX add new best (3, 4) is not 8 5 5
INFO:root:XX add new best (3, 4) is not 8 5 5
INFO:root:XX add new best (3, 4) is not 8 5 5
INFO:root:XX add new best (3, 4) is not 8 5 5
INFO:root:XX add new best (3, 4) is not 8 5 5
INFO:root:XX add new best (3, 4) is not 8 5 5
INFO:root:XX add new best (3, 4) is not 8 5 5
INFO:root:XX add new best (3, 4) is not 8 5 5
INFO:root:XX add new best (3, 4) is not 8 5 5
INFO:root:XX add new best (3, 4) is not 8 5 5
INFO:root:XX add new best (3, 4) is not 8 5 5
INFO:root:XX add new best (3, 4) is not 8 5 5
INFO:root:XX add new best (3, 4) is not 8 5 5
INFO:root:XX add new best (3, 4) is not 8 5 5
INFO:root:XX add new best (3, 4) is not 8 5 5
INFO:root:XX add new best (3, 4) is not 8 5 5
INFO:root:XX add new best (3, 4) is not 8 5 5
INFO:root:XX add new best (3, 4) is not 8 5 5
INFO:root:XX add new best (3, 4) is not 8 5 5
INFO:root:XX add new best (3, 4) is not 8 5 5
INFO:root:XX add new best (3, 4) is not 8 5 5
INFO:root:XX add new best (3, 4) is not 8 5 5
INFO:root:XX add new best (3, 4) is not 8 5 5
INFO:root:XX add new best (3, 4) is not 8 5 5
INFO:root:Trace: [(5, [(3, 4) is not 8])]
INFO:root:Trace Quality: [(5, 1)]
INFO:root:Trace Sorted: [(5, 1)]
INFO:root:Finished
INFO:root:Full Trace [(5, [(3, 4) is not 8])]
INFO:root:Trying {'minPrecheckMUS': True}
INFO:root:Starting Step 1
INFO:root:Current state [[[[2], [3, 5, 7, 9], [3, 5, 7, 8], [3, 7, 8], [4], [1], [7, 8, 9], [3, 5], [6]], [[4], [3, 5, 7, 9], [3, 5, 7, 8], [6], [5, 7, 8], [2], [7, 8, 9], [1], [3, 7]], [[7, 8], [1], [6], [3, 7, 8], [9], [3, 5, 7], [2, 7, 8], [2, 3, 5], [4]], [[3], [5, 7], [5, 7, 8], [1], [2], [9], [6], [4], [7, 8]], [[1], [4], [2], [3, 7, 8], [6], [3, 7], [5], [9], [3, 7, 8]], [[7, 8], [6], [9], [5], [3, 7, 8], [4], [2, 7], [2, 3], [1]], [[5], [8], [4], [2], [1], [6], [3], [7], [9]], [[9], [2], [3, 7], [4], [3, 7], [8], [1], [6], [5]], [[6], [3, 7], [1], [9], [3, 5, 7], [3, 5, 7], [4], [8], [2]]]]
INFO:root:Doing checkSmall1
INFO:root:Getting tiny MUSes, distance 1, for 1 puzlits, 1 repeats
INFO:root:Chunked 1 in [1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
INFO:root:Doing checkSmall2
INFO:root:Getting tiny MUSes, distance 2, for 1 puzlits, 1 repeats
INFO:root:Chunked 1 in [1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
INFO:root:Considering 100 * 1 jobs for minsize=3
INFO:root:Chunked 100 in [9, 9, 9, 9, 8, 8, 8, 8, 8, 8, 8, 8]
INFO:root:Considering 100 * 1 jobs for minsize=4
INFO:root:Chunked 100 in [9, 9, 9, 9, 8, 8, 8, 8, 8, 8, 8, 8]
INFO:root:XX found first (3, 4) is not 8 5
INFO:root:XX add new best (3, 4) is not 8 5 5
INFO:root:XX add new best (3, 4) is not 8 5 5
INFO:root:XX add new best (3, 4) is not 8 5 5
INFO:root:XX add new best (3, 4) is not 8 5 5
INFO:root:XX add new best (3, 4) is not 8 5 5
INFO:root:XX add new best (3, 4) is not 8 5 5
INFO:root:XX add new best (3, 4) is not 8 5 5
INFO:root:XX add new best (3, 4) is not 8 5 5
INFO:root:XX add new best (3, 4) is not 8 5 5
INFO:root:XX add new best (3, 4) is not 8 5 5
INFO:root:XX add new best (3, 4) is not 8 5 5
INFO:root:XX add new best (3, 4) is not 8 5 5
INFO:root:XX add new best (3, 4) is not 8 5 5
INFO:root:XX add new best (3, 4) is not 8 5 5
INFO:root:XX add new best (3, 4) is not 8 5 5
INFO:root:XX add new best (3, 4) is not 8 5 5
INFO:root:XX add new best (3, 4) is not 8 5 5
INFO:root:XX add new best (3, 4) is not 8 5 5
INFO:root:XX add new best (3, 4) is not 8 5 5
INFO:root:XX add new best (3, 4) is not 8 5 5
INFO:root:XX add new best (3, 4) is not 8 5 5
INFO:root:XX add new best (3, 4) is not 8 5 5
INFO:root:XX add new best (3, 4) is not 8 5 5
INFO:root:Considering 100 * 1 jobs for minsize=5
INFO:root:Chunked 100 in [9, 9, 9, 9, 8, 8, 8, 8, 8, 8, 8, 8]
INFO:root:XX add new best (3, 4) is not 8 5 5
INFO:root:XX add new best (3, 4) is not 8 5 5
INFO:root:XX add new best (3, 4) is not 8 5 5
INFO:root:XX add new best (3, 4) is not 8 5 5
INFO:root:XX add new best (3, 4) is not 8 5 5
INFO:root:XX add new best (3, 4) is not 8 5 5
INFO:root:XX add new best (3, 4) is not 8 5 5
INFO:root:XX add new best (3, 4) is not 8 5 5
INFO:root:XX add new best (3, 4) is not 8 5 5
INFO:root:XX add new best (3, 4) is not 8 5 5
INFO:root:XX add new best (3, 4) is not 8 5 5
INFO:root:XX add new best (3, 4) is not 8 5 5
INFO:root:XX add new best (3, 4) is not 8 5 5
INFO:root:XX add new best (3, 4) is not 8 5 5
INFO:root:Trace: [(5, [(3, 4) is not 8])]
INFO:root:Trace Quality: [(5, 1)]
INFO:root:Trace Sorted: [(5, 1)]
INFO:root:Finished
INFO:root:Full Trace [(5, [(3, 4) is not 8])]
INFO:root:Trying {'gallopingMUSes': True}
INFO:root:Starting Step 1
INFO:root:Current state [[[[2], [3, 5, 7, 9], [3, 5, 7, 8], [3, 7, 8], [4], [1], [7, 8, 9], [3, 5], [6]], [[4], [3, 5, 7, 9], [3, 5, 7, 8], [6], [5, 7, 8], [2], [7, 8, 9], [1], [3, 7]], [[7, 8], [1], [6], [3, 7, 8], [9], [3, 5, 7], [2, 7, 8], [2, 3, 5], [4]], [[3], [5, 7], [5, 7, 8], [1], [2], [9], [6], [4], [7, 8]], [[1], [4], [2], [3, 7, 8], [6], [3, 7], [5], [9], [3, 7, 8]], [[7, 8], [6], [9], [5], [3, 7, 8], [4], [2, 7], [2, 3], [1]], [[5], [8], [4], [2], [1], [6], [3], [7], [9]], [[9], [2], [3, 7], [4], [3, 7], [8], [1], [6], [5]], [[6], [3, 7], [1], [9], [3, 5, 7], [3, 5, 7], [4], [8], [2]]]]
INFO:root:Doing checkSmall1
INFO:root:Getting tiny MUSes, distance 1, for 1 puzlits, 1 repeats
INFO:root:Chunked 1 in [1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
INFO:root:Doing checkSmall2
INFO:root:Getting tiny MUSes, distance 2, for 1 puzlits, 1 repeats
INFO:root:Chunked 1 in [1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
INFO:root:Considering 100 * 1 jobs for minsize=3
INFO:root:Chunked 100 in [9, 9, 9, 9, 8, 8, 8, 8, 8, 8, 8, 8]
INFO:root:Considering 100 * 1 jobs for minsize=4
INFO:root:Chunked 100 in [9, 9, 9, 9, 8, 8, 8, 8, 8, 8, 8, 8]
INFO:root:XX found first (3, 4) is not 8 5
INFO:root:XX add new best (3, 4) is not 8 5 5
INFO:root:XX add new best (3, 4) is not 8 5 5
INFO:root:XX add new best (3, 4) is not 8 5 5
INFO:root:XX add new best (3, 4) is not 8 5 5
INFO:root:XX add new best (3, 4) is not 8 5 5
INFO:root:XX add new best (3, 4) is not 8 5 5
INFO:root:XX add new best (3, 4) is not 8 5 5
INFO:root:XX add new best (3, 4) is not 8 5 5
INFO:root:XX add new best (3, 4) is not 8 5 5
INFO:root:XX add new best (3, 4) is not 8 5 5
INFO:root:XX add new best (3, 4) is not 8 5 5
INFO:root:XX add new best (3, 4) is not 8 5 5
INFO:root:XX add new best (3, 4) is not 8 5 5
INFO:root:Considering 100 * 1 jobs for minsize=5
INFO:root:Chunked 100 in [9, 9, 9, 9, 8, 8, 8, 8, 8, 8, 8, 8]
INFO:root:XX add new best (3, 4) is not 8 5 5
INFO:root:XX add new best (3, 4) is not 8 5 5
INFO:root:XX add new best (3, 4) is not 8 5 5
INFO:root:XX add new best (3, 4) is not 8 5 5
INFO:root:XX add new best (3, 4) is not 8 5 5
INFO:root:XX add new best (3, 4) is not 8 5 5
INFO:root:XX add new best (3, 4) is not 8 5 5
INFO:root:XX add new best (3, 4) is not 8 5 5
INFO:root:XX add new best (3, 4) is not 8 5 5
INFO:root:XX add new best (3, 4) is not 8 5 5
INFO:root:XX add new best (3, 4) is not 8 5 5
INFO:root:Trace: [(5, [(3, 4) is not 8])]
INFO:root:Trace Quality: [(5, 1)]
INFO:root:Trace Sorted: [(5, 1)]
INFO:root:Finished
INFO:root:Full Trace [(5, [(3, 4) is not 8])]
INFO:root:Trying {'minPrecheckStepsMUS': True}
INFO:root:Starting Step 1
INFO:root:Current state [[[[2], [3, 5, 7, 9], [3, 5, 7, 8], [3, 7, 8], [4], [1], [7, 8, 9], [3, 5], [6]], [[4], [3, 5, 7, 9], [3, 5, 7, 8], [6], [5, 7, 8], [2], [7, 8, 9], [1], [3, 7]], [[7, 8], [1], [6], [3, 7, 8], [9], [3, 5, 7], [2, 7, 8], [2, 3, 5], [4]], [[3], [5, 7], [5, 7, 8], [1], [2], [9], [6], [4], [7, 8]], [[1], [4], [2], [3, 7, 8], [6], [3, 7], [5], [9], [3, 7, 8]], [[7, 8], [6], [9], [5], [3, 7, 8], [4], [2, 7], [2, 3], [1]], [[5], [8], [4], [2], [1], [6], [3], [7], [9]], [[9], [2], [3, 7], [4], [3, 7], [8], [1], [6], [5]], [[6], [3, 7], [1], [9], [3, 5, 7], [3, 5, 7], [4], [8], [2]]]]
INFO:root:Doing checkSmall1
INFO:root:Getting tiny MUSes, distance 1, for 1 puzlits, 1 repeats
INFO:root:Chunked 1 in [1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
INFO:root:Doing checkSmall2
INFO:root:Getting tiny MUSes, distance 2, for 1 puzlits, 1 repeats
INFO:root:Chunked 1 in [1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
INFO:root:Considering 100 * 1 jobs for minsize=3
INFO:root:Chunked 100 in [9, 9, 9, 9, 8, 8, 8, 8, 8, 8, 8, 8]
INFO:root:Considering 100 * 1 jobs for minsize=4
INFO:root:Chunked 100 in [9, 9, 9, 9, 8, 8, 8, 8, 8, 8, 8, 8]
INFO:root:XX found first (3, 4) is not 8 5
INFO:root:XX add new best (3, 4) is not 8 5 5
INFO:root:XX add new best (3, 4) is not 8 5 5
INFO:root:XX add new best (3, 4) is not 8 5 5
INFO:root:XX add new best (3, 4) is not 8 5 5
INFO:root:XX add new best (3, 4) is not 8 5 5
INFO:root:XX add new best (3, 4) is not 8 5 5
INFO:root:XX add new best (3, 4) is not 8 5 5
INFO:root:XX add new best (3, 4) is not 8 5 5
INFO:root:XX add new best (3, 4) is not 8 5 5
INFO:root:XX add new best (3, 4) is not 8 5 5
INFO:root:XX add new best (3, 4) is not 8 5 5
INFO:root:XX add new best (3, 4) is not 8 5 5
INFO:root:XX add new best (3, 4) is not 8 5 5
INFO:root:XX add new best (3, 4) is not 8 5 5
INFO:root:XX add new best (3, 4) is not 8 5 5
INFO:root:XX add new best (3, 4) is not 8 5 5
INFO:root:XX add new best (3, 4) is not 8 5 5
INFO:root:XX add new best (3, 4) is not 8 5 5
INFO:root:XX add new best (3, 4) is not 8 5 5
INFO:root:XX add new best (3, 4) is not 8 5 5
INFO:root:XX add new best (3, 4) is not 8 5 5
INFO:root:XX add new best (3, 4) is not 8 5 5
INFO:root:XX add new best (3, 4) is not 8 5 5
INFO:root:Considering 100 * 1 jobs for minsize=5
INFO:root:Chunked 100 in [9, 9, 9, 9, 8, 8, 8, 8, 8, 8, 8, 8]
INFO:root:XX add new best (3, 4) is not 8 5 5
INFO:root:XX add new best (3, 4) is not 8 5 5
INFO:root:XX add new best (3, 4) is not 8 5 5
INFO:root:XX add new best (3, 4) is not 8 5 5
INFO:root:XX add new best (3, 4) is not 8 5 5
INFO:root:XX add new best (3, 4) is not 8 5 5
INFO:root:XX add new best (3, 4) is not 8 5 5
INFO:root:XX add new best (3, 4) is not 8 5 5
INFO:root:XX add new best (3, 4) is not 8 5 5
INFO:root:XX add new best (3, 4) is not 8 5 5
INFO:root:XX add new best (3, 4) is not 8 5 5
INFO:root:XX add new best (3, 4) is not 8 5 5
INFO:root:XX add new best (3, 4) is not 8 5 5
INFO:root:Trace: [(5, [(3, 4) is not 8])]
INFO:root:Trace Quality: [(5, 1)]
INFO:root:Trace Sorted: [(5, 1)]
INFO:root:Finished
INFO:root:Full Trace [(5, [(3, 4) is not 8])]
INFO:root:Trying {'gallopingMUSes': True, 'minPrecheckMUS': True}
INFO:root:Starting Step 1
INFO:root:Current state [[[[2], [3, 5, 7, 9], [3, 5, 7, 8], [3, 7, 8], [4], [1], [7, 8, 9], [3, 5], [6]], [[4], [3, 5, 7, 9], [3, 5, 7, 8], [6], [5, 7, 8], [2], [7, 8, 9], [1], [3, 7]], [[7, 8], [1], [6], [3, 7, 8], [9], [3, 5, 7], [2, 7, 8], [2, 3, 5], [4]], [[3], [5, 7], [5, 7, 8], [1], [2], [9], [6], [4], [7, 8]], [[1], [4], [2], [3, 7, 8], [6], [3, 7], [5], [9], [3, 7, 8]], [[7, 8], [6], [9], [5], [3, 7, 8], [4], [2, 7], [2, 3], [1]], [[5], [8], [4], [2], [1], [6], [3], [7], [9]], [[9], [2], [3, 7], [4], [3, 7], [8], [1], [6], [5]], [[6], [3, 7], [1], [9], [3, 5, 7], [3, 5, 7], [4], [8], [2]]]]
INFO:root:Doing checkSmall1
INFO:root:Getting tiny MUSes, distance 1, for 1 puzlits, 1 repeats
INFO:root:Chunked 1 in [1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
INFO:root:Doing checkSmall2
INFO:root:Getting tiny MUSes, distance 2, for 1 puzlits, 1 repeats
INFO:root:Chunked 1 in [1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
INFO:root:Considering 100 * 1 jobs for minsize=3
INFO:root:Chunked 100 in [9, 9, 9, 9, 8, 8, 8, 8, 8, 8, 8, 8]
INFO:root:Considering 100 * 1 jobs for minsize=4
INFO:root:Chunked 100 in [9, 9, 9, 9, 8, 8, 8, 8, 8, 8, 8, 8]
INFO:root:XX found first (3, 4) is not 8 5
INFO:root:XX add new best (3, 4) is not 8 5 5
INFO:root:XX add new best (3, 4) is not 8 5 5
INFO:root:XX add new best (3, 4) is not 8 5 5
INFO:root:XX add new best (3, 4) is not 8 5 5
INFO:root:XX add new best (3, 4) is not 8 5 5
INFO:root:XX add new best (3, 4) is not 8 5 5
INFO:root:XX add new best (3, 4) is not 8 5 5
INFO:root:XX add new best (3, 4) is not 8 5 5
INFO:root:XX add new best (3, 4) is not 8 5 5
INFO:root:XX add new best (3, 4) is not 8 5 5
INFO:root:XX add new best (3, 4) is not 8 5 5
INFO:root:XX add new best (3, 4) is not 8 5 5
INFO:root:XX add new best (3, 4) is not 8 5 5
INFO:root:XX add new best (3, 4) is not 8 5 5
INFO:root:XX add new best (3, 4) is not 8 5 5
INFO:root:XX add new best (3, 4) is not 8 5 5
INFO:root:XX add new best (3, 4) is not 8 5 5
INFO:root:XX add new best (3, 4) is not 8 5 5
INFO:root:XX add new best (3, 4) is not 8 5 5
INFO:root:XX add new best (3, 4) is not 8 5 5
INFO:root:XX add new best (3, 4) is not 8 5 5
INFO:root:XX add new best (3, 4) is not 8 5 5
INFO:root:XX add new best (3, 4) is not 8 5 5
INFO:root:Considering 100 * 1 jobs for minsize=5
INFO:root:Chunked 100 in [9, 9, 9, 9, 8, 8, 8, 8, 8, 8, 8, 8]
INFO:root:XX add new best (3, 4) is not 8 5 5
INFO:root:XX add new best (3, 4) is not 8 5 5
INFO:root:XX add new best (3, 4) is not 8 5 5
INFO:root:XX add new best (3, 4) is not 8 5 5
INFO:root:XX add new best (3, 4) is not 8 5 5
INFO:root:XX add new best (3, 4) is not 8 5 5
INFO:root:XX add new best (3, 4) is not 8 5 5
INFO:root:XX add new best (3, 4) is not 8 5 5
INFO:root:XX add new best (3, 4) is not 8 5 5
INFO:root:XX add new best (3, 4) is not 8 5 5
INFO:root:XX add new best (3, 4) is not 8 5 5
INFO:root:XX add new best (3, 4) is not 8 5 5
INFO:root:XX add new best (3, 4) is not 8 5 5
INFO:root:Trace: [(5, [(3, 4) is not 8])]
INFO:root:Trace Quality: [(5, 1)]
INFO:root:Trace Sorted: [(5, 1)]
INFO:root:Finished
INFO:root:Full Trace [(5, [(3, 4) is not 8])]
INFO:root:Trying {}
INFO:root:Starting Step 1
INFO:root:Current state [[[[9], [3, 8], [1, 3, 6, 8], [2], [4], [1, 3, 7, 8], [5, 7], [5, 8], [5, 6, 8]], [[4, 7, 8], [5], [4, 8], [6], [9], [7, 8], [2], [3], [1]], [[1, 3, 6, 7, 8], [2], [1, 3, 6, 8], [1, 8], [5], [1, 3, 7, 8], [4, 7], [9], [4, 6, 8]], [[1, 4, 6, 8], [9], [1, 4, 5, 6, 8], [7], [1, 6], [4, 8], [3], [2], [4, 5, 8]], [[1, 4, 8], [4, 8], [2], [9], [3], [5], [6], [1, 4, 8], [7]], [[1, 3, 4, 6, 8], [7], [1, 3, 4, 5, 6, 8], [4, 8], [1, 6], [2], [9], [1, 4, 5, 8], [4, 5, 8]], [[4, 8], [6], [9], [1, 4, 5], [2], [1, 4], [1, 4, 5, 8], [7], [3]], [[5], [1], [3, 4, 8], [3, 4], [7], [9], [4, 8], [6], [2]], [[2], [3, 4], [7], [1, 3, 4, 5], [8], [6], [1, 4, 5], [4, 5], [9]]]]
INFO:root:Doing checkSmall1
INFO:root:Getting tiny MUSes, distance 1, for 1 puzlits, 1 repeats
INFO:root:Chunked 1 in [1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
INFO:root:Doing checkSmall2
INFO:root:Getting tiny MUSes, distance 2, for 1 puzlits, 1 repeats
INFO:root:Chunked 1 in [1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
INFO:root:Considering 100 * 1 jobs for minsize=3
INFO:root:Chunked 100 in [9, 9, 9, 9, 8, 8, 8, 8, 8, 8, 8, 8]
INFO:root:Considering 100 * 1 jobs for minsize=4
INFO:root:Chunked 100 in [9, 9, 9, 9, 8, 8, 8, 8, 8, 8, 8, 8]
INFO:root:Considering 100 * 1 jobs for minsize=5
INFO:root:Chunked 100 in [9, 9, 9, 9, 8, 8, 8, 8, 8, 8, 8, 8]
INFO:root:Considering 100 * 1 jobs for minsize=6
INFO:root:Chunked 100 in [9, 9, 9, 9, 8, 8, 8, 8, 8, 8, 8, 8]
INFO:root:Considering 100 * 1 jobs for minsize=7
INFO:root:Chunked 100 in [9, 9, 9, 9, 8, 8, 8, 8, 8, 8, 8, 8]
INFO:root:Considering 100 * 1 jobs for minsize=8
INFO:root:Chunked 100 in [9, 9, 9, 9, 8, 8, 8, 8, 8, 8, 8, 8]
INFO:root:Considering 100 * 1 jobs for minsize=9
INFO:root:Chunked 100 in [9, 9, 9, 9, 8, 8, 8, 8, 8, 8, 8, 8]
INFO:root:Considering 100 * 1 jobs for minsize=10
INFO:root:Chunked 100 in [9, 9, 9, 9, 8, 8, 8, 8, 8, 8, 8, 8]
INFO:root:XX found first (8, 3) is not 4 7
INFO:root:Trace: [(7, [(8, 3) is not 4])]
INFO:root:Trace Quality: [(7, 1)]
INFO:root:Trace Sorted: [(7, 1)]
INFO:root:Finished
INFO:root:Full Trace [(7, [(8, 3) is not 4])]
INFO:root:Trying {'prechopMUSes': True}
INFO:root:Starting Step 1
INFO:root:Current state [[[[9], [3, 8], [1, 3, 6, 8], [2], [4], [1, 3, 7, 8], [5, 7], [5, 8], [5, 6, 8]], [[4, 7, 8], [5], [4, 8], [6], [9], [7, 8], [2], [3], [1]], [[1, 3, 6, 7, 8], [2], [1, 3, 6, 8], [1, 8], [5], [1, 3, 7, 8], [4, 7], [9], [4, 6, 8]], [[1, 4, 6, 8], [9], [1, 4, 5, 6, 8], [7], [1, 6], [4, 8], [3], [2], [4, 5, 8]], [[1, 4, 8], [4, 8], [2], [9], [3], [5], [6], [1, 4, 8], [7]], [[1, 3, 4, 6, 8], [7], [1, 3, 4, 5, 6, 8], [4, 8], [1, 6], [2], [9], [1, 4, 5, 8], [4, 5, 8]], [[4, 8], [6], [9], [1, 4, 5], [2], [1, 4], [1, 4, 5, 8], [7], [3]], [[5], [1], [3, 4, 8], [3, 4], [7], [9], [4, 8], [6], [2]], [[2], [3, 4], [7], [1, 3, 4, 5], [8], [6], [1, 4, 5], [4, 5], [9]]]]
INFO:root:Doing checkSmall1
INFO:root:Getting tiny MUSes, distance 1, for 1 puzlits, 1 repeats
INFO:root:Chunked 1 in [1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
INFO:root:Doing checkSmall2
INFO:root:Getting tiny MUSes, distance 2, for 1 puzlits, 1 repeats
INFO:root:Chunked 1 in [1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
INFO:root:Considering 100 * 1 jobs for minsize=3
INFO:root:Chunked 100 in [9, 9, 9, 9, 8, 8, 8, 8, 8, 8, 8, 8]
INFO:root:Considering 100 * 1 jobs for minsize=4
INFO:root:Chunked 100 in [9, 9, 9, 9, 8, 8, 8, 8, 8, 8, 8, 8]
INFO:root:Considering 100 * 1 jobs for minsize=5
INFO:root:Chunked 100 in [9, 9, 9, 9, 8, 8, 8, 8, 8, 8, 8, 8]
INFO:root:Considering 100 * 1 jobs for minsize=6
INFO:root:Chunked 100 in [9, 9, 9, 9, 8, 8, 8, 8, 8, 8, 8, 8]
INFO:root:XX found first (8, 3) is not 4 7
INFO:root:XX add new best (8, 3) is not 4 7 7
INFO:root:XX add new best (8, 3) is not 4 7 7
INFO:root:XX add new best (8, 3) is not 4 7 7
INFO:root:XX add new best (8, 3) is not 4 7 7
INFO:root:XX add new best (8, 3) is not 4 7 7
INFO:root:XX add new best (8, 3) is not 4 7 7
INFO:root:XX add new best (8, 3) is not 4 7 7
INFO:root:XX add new best (8, 3) is not 4 7 7
INFO:root:XX add new best (8, 3) is not 4 7 7
INFO:root:XX add new best (8, 3) is not 4 7 7
INFO:root:XX add new best (8, 3) is not 4 7 7
INFO:root:XX add new best (8, 3) is not 4 7 7
INFO:root:XX add new best (8, 3) is not 4 7 7
INFO:root:XX add new best (8, 3) is not 4 7 7
INFO:root:XX add new best (8, 3) is not 4 7 7
INFO:root:Considering 100 * 1 jobs for minsize=7
INFO:root:Chunked 100 in [9, 9, 9, 9, 8, 8, 8, 8, 8, 8, 8, 8]
INFO:root:XX add new best (8, 3) is not 4 7 7
INFO:root:XX add new best (8, 3) is not 4 7 7
INFO:root:XX add new best (8, 3) is not 4 7 7
INFO:root:XX add new best (8, 3) is not 4 7 7
INFO:root:XX add new best (8, 3) is not 4 7 7
INFO:root:XX add new best (8, 3) is not 4 7 7
INFO:root:XX add new best (8, 3) is not 4 7 7
INFO:root:XX add new best (8, 3) is not 4 7 7
INFO:root:XX add new best (8, 3) is not 4 7 7
INFO:root:XX add new best (8, 3) is not 4 7 7
INFO:root:XX add new best (8, 3) is not 4 7 7
INFO:root:XX add new best (8, 3) is not 4 7 7
INFO:root:XX add new best (8, 3) is not 4 7 7
INFO:root:XX add new best (8, 3) is not 4 7 7
INFO:root:XX add new best (8, 3) is not 4 7 7
INFO:root:XX add new best (8, 3) is not 4 7 7
INFO:root:XX add new best (8, 3) is not 4 7 7
INFO:root:XX add new best (8, 3) is not 4 7 7
INFO:root:XX add new best (8, 3) is not 4 7 7
INFO:root:Trace: [(7, [(8, 3) is not 4])]
INFO:root:Trace Quality: [(7, 1)]
INFO:root:Trace Sorted: [(7, 1)]
INFO:root:Finished
INFO:root:Full Trace [(7, [(8, 3) is not 4])]
INFO:root:Trying {'quarterChopMUS': True}
INFO:root:Starting Step 1
INFO:root:Current state [[[[9], [3, 8], [1, 3, 6, 8], [2], [4], [1, 3, 7, 8], [5, 7], [5, 8], [5, 6, 8]], [[4, 7, 8], [5], [4, 8], [6], [9], [7, 8], [2], [3], [1]], [[1, 3, 6, 7, 8], [2], [1, 3, 6, 8], [1, 8], [5], [1, 3, 7, 8], [4, 7], [9], [4, 6, 8]], [[1, 4, 6, 8], [9], [1, 4, 5, 6, 8], [7], [1, 6], [4, 8], [3], [2], [4, 5, 8]], [[1, 4, 8], [4, 8], [2], [9], [3], [5], [6], [1, 4, 8], [7]], [[1, 3, 4, 6, 8], [7], [1, 3, 4, 5, 6, 8], [4, 8], [1, 6], [2], [9], [1, 4, 5, 8], [4, 5, 8]], [[4, 8], [6], [9], [1, 4, 5], [2], [1, 4], [1, 4, 5, 8], [7], [3]], [[5], [1], [3, 4, 8], [3, 4], [7], [9], [4, 8], [6], [2]], [[2], [3, 4], [7], [1, 3, 4, 5], [8], [6], [1, 4, 5], [4, 5], [9]]]]
INFO:root:Doing checkSmall1
INFO:root:Getting tiny MUSes, distance 1, for 1 puzlits, 1 repeats
INFO:root:Chunked 1 in [1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
INFO:root:Doing checkSmall2
INFO:root:Getting tiny MUSes, distance 2, for 1 puzlits, 1 repeats
INFO:root:Chunked 1 in [1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
INFO:root:Considering 100 * 1 jobs for minsize=3
INFO:root:Chunked 100 in [9, 9, 9, 9, 8, 8, 8, 8, 8, 8, 8, 8]
INFO:root:Considering 100 * 1 jobs for minsize=4
INFO:root:Chunked 100 in [9, 9, 9, 9, 8, 8, 8, 8, 8, 8, 8, 8]
INFO:root:Considering 100 * 1 jobs for minsize=5
INFO:root:Chunked 100 in [9, 9, 9, 9, 8, 8, 8, 8, 8, 8, 8, 8]
INFO:root:Considering 100 * 1 jobs for minsize=6
INFO:root:Chunked 100 in [9, 9, 9, 9, 8, 8, 8, 8, 8, 8, 8, 8]
INFO:root:XX found first (8, 3) is not 4 7
INFO:root:XX add new best (8, 3) is not 4 7 7
INFO:root:XX add new best (8, 3) is not 4 7 7
INFO:root:XX add new best (8, 3) is not 4 7 7
INFO:root:XX add new best (8, 3) is not 4 7 7
INFO:root:XX add new best (8, 3) is not 4 7 7
INFO:root:XX add new best (8, 3) is not 4 7 7
INFO:root:XX add new best (8, 3) is not 4 7 7
INFO:root:XX add new best (8, 3) is not 4 7 7
INFO:root:XX add new best (8, 3) is not 4 7 7
INFO:root:XX add new best (8, 3) is not 4 7 7
INFO:root:XX add new best (8, 3) is not 4 7 7
INFO:root:XX add new best (8, 3) is not 4 7 7
INFO:root:XX add new best (8, 3) is not 4 7 7
INFO:root:Considering 100 * 1 jobs for minsize=7
INFO:root:Chunked 100 in [9, 9, 9, 9, 8, 8, 8, 8, 8, 8, 8, 8]
INFO:root:XX add new best (8, 3) is not 4 7 7
INFO:root:XX add new best (8, 3) is not 4 7 7
INFO:root:XX add new best (8, 3) is not 4 7 7
INFO:root:XX add new best (8, 3) is not 4 7 7
INFO:root:XX add new best (8, 3) is not 4 7 7
INFO:root:XX add new best (8, 3) is not 4 7 7
INFO:root:XX add new best (8, 3) is not 4 7 7
INFO:root:XX add new best (8, 3) is not 4 7 7
INFO:root:XX add new best (8, 3) is not 4 7 7
INFO:root:XX add new best (8, 3) is not 4 7 7
INFO:root:XX add new best (8, 3) is not 4 7 7
INFO:root:XX add new best (8, 3) is not 4 7 7
INFO:root:XX add new best (8, 3) is not 4 7 7
INFO:root:XX add new best (8, 3) is not 4 7 7
INFO:root:XX add new best (8, 3) is not 4 7 7
INFO:root:XX add new best (8, 3) is not 4 7 7
INFO:root:XX add new best (8, 3) is not 4 7 7
INFO:root:XX add new best (8, 3) is not 4 7 7
INFO:root:XX add new best (8, 3) is not 4 7 7
INFO:root:XX add new best (8, 3) is not 4 7 7
INFO:root:Trace: [(7, [(8, 3) is not 4])]
INFO:root:Trace Quality: [(7, 1)]
INFO:root:Trace Sorted: [(7, 1)]
INFO:root:Finished
INFO:root:Full Trace [(7, [(8, 3) is not 4])]
INFO:root:Trying {'minPrecheckMUS': True}
INFO:root:Starting Step 1
INFO:root:Current state [[[[9], [3, 8], [1, 3, 6, 8], [2], [4], [1, 3, 7, 8], [5, 7], [5, 8], [5, 6, 8]], [[4, 7, 8], [5], [4, 8], [6], [9], [7, 8], [2], [3], [1]], [[1, 3, 6, 7, 8], [2], [1, 3, 6, 8], [1, 8], [5], [1, 3, 7, 8], [4, 7], [9], [4, 6, 8]], [[1, 4, 6, 8], [9], [1, 4, 5, 6, 8], [7], [1, 6], [4, 8], [3], [2], [4, 5, 8]], [[1, 4, 8], [4, 8], [2], [9], [3], [5], [6], [1, 4, 8], [7]], [[1, 3, 4, 6, 8], [7], [1, 3, 4, 5, 6, 8], [4, 8], [1, 6], [2], [9], [1, 4, 5, 8], [4, 5, 8]], [[4, 8], [6], [9], [1, 4, 5], [2], [1, 4], [1, 4, 5, 8], [7], [3]], [[5], [1], [3, 4, 8], [3, 4], [7], [9], [4, 8], [6], [2]], [[2], [3, 4], [7], [1, 3, 4, 5], [8], [6], [1, 4, 5], [4, 5], [9]]]]
INFO:root:Doing checkSmall1
INFO:root:Getting tiny MUSes, distance 1, for 1 puzlits, 1 repeats
INFO:root:Chunked 1 in [1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
INFO:root:Doing checkSmall2
INFO:root:Getting tiny MUSes, distance 2, for 1 puzlits, 1 repeats
INFO:root:Chunked 1 in [1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
INFO:root:Considering 100 * 1 jobs for minsize=3
INFO:root:Chunked 100 in [9, 9, 9, 9, 8, 8, 8, 8, 8, 8, 8, 8]
INFO:root:Considering 100 * 1 jobs for minsize=4
INFO:root:Chunked 100 in [9, 9, 9, 9, 8, 8, 8, 8, 8, 8, 8, 8]
INFO:root:Considering 100 * 1 jobs for minsize=5
INFO:root:Chunked 100 in [9, 9, 9, 9, 8, 8, 8, 8, 8, 8, 8, 8]
INFO:root:Considering 100 * 1 jobs for minsize=6
INFO:root:Chunked 100 in [9, 9, 9, 9, 8, 8, 8, 8, 8, 8, 8, 8]
INFO:root:XX found first (8, 3) is not 4 7
INFO:root:XX add new best (8, 3) is not 4 7 7
INFO:root:XX add new best (8, 3) is not 4 7 7
INFO:root:XX add new best (8, 3) is not 4 7 7
INFO:root:XX add new best (8, 3) is not 4 7 7
INFO:root:XX add new best (8, 3) is not 4 7 7
INFO:root:XX add new best (8, 3) is not 4 7 7
INFO:root:XX add new best (8, 3) is not 4 7 7
INFO:root:XX add new best (8, 3) is not 4 7 7
INFO:root:XX add new best (8, 3) is not 4 7 7
INFO:root:XX add new best (8, 3) is not 4 7 7
INFO:root:XX add new best (8, 3) is not 4 7 7
INFO:root:XX add new best (8, 3) is not 4 7 7
INFO:root:XX add new best (8, 3) is not 4 7 7
INFO:root:XX add new best (8, 3) is not 4 7 7
INFO:root:XX add new best (8, 3) is not 4 7 7
INFO:root:XX add new best (8, 3) is not 4 7 7
INFO:root:XX add new best (8, 3) is not 4 7 7
INFO:root:XX add new best (8, 3) is not 4 7 7
INFO:root:XX add new best (8, 3) is not 4 7 7
INFO:root:XX add new best (8, 3) is not 4 7 7
INFO:root:XX add new best (8, 3) is not 4 7 7
INFO:root:XX add new best (8, 3) is not 4 7 7
INFO:root:XX add new best (8, 3) is not 4 7 7
INFO:root:XX add new best (8, 3) is not 4 7 7
INFO:root:XX add new best (8, 3) is not 4 7 7
INFO:root:Considering 100 * 1 jobs for minsize=7
INFO:root:Chunked 100 in [9, 9, 9, 9, 8, 8, 8, 8, 8, 8, 8, 8]
INFO:root:XX add new best (8, 3) is not 4 7 7
INFO:root:XX add new best (8, 3) is not 4 7 7
INFO:root:XX add new best (8, 3) is not 4 7 7
INFO:root:XX add new best (8, 3) is not 4 7 7
INFO:root:XX add new best (8, 3) is not 4 7 7
INFO:root:XX add new best (8, 3) is not 4 7 7
INFO:root:XX add new best (8, 3) is not 4 7 7
INFO:root:XX add new best (8, 3) is not 4 7 7
INFO:root:XX add new best (8, 3) is not 4 7 7
INFO:root:XX add new best (8, 3) is not 4 7 7
INFO:root:XX add new best (8, 3) is not 4 7 7
INFO:root:XX add new best (8, 3) is not 4 7 7
INFO:root:XX add new best (8, 3) is not 4 7 7
INFO:root:XX add new best (8, 3) is not 4 7 7
INFO:root:XX add new best (8, 3) is not 4 7 7
INFO:root:Trace: [(7, [(8, 3) is not 4])]
INFO:root:Trace Quality: [(7, 1)]
INFO:root:Trace Sorted: [(7, 1)]
INFO:root:Finished
INFO:root:Full Trace [(7, [(8, 3) is not 4])]
INFO:root:Trying {'gallopingMUSes': True}
INFO:root:Starting Step 1
INFO:root:Current state [[[[9], [3, 8], [1, 3, 6, 8], [2], [4], [1, 3, 7, 8], [5, 7], [5, 8], [5, 6, 8]], [[4, 7, 8], [5], [4, 8], [6], [9], [7, 8], [2], [3], [1]], [[1, 3, 6, 7, 8], [2], [1, 3, 6, 8], [1, 8], [5], [1, 3, 7, 8], [4, 7], [9], [4, 6, 8]], [[1, 4, 6, 8], [9], [1, 4, 5, 6, 8], [7], [1, 6], [4, 8], [3], [2], [4, 5, 8]], [[1, 4, 8], [4, 8], [2], [9], [3], [5], [6], [1, 4, 8], [7]], [[1, 3, 4, 6, 8], [7], [1, 3, 4, 5, 6, 8], [4, 8], [1, 6], [2], [9], [1, 4, 5, 8], [4, 5, 8]], [[4, 8], [6], [9], [1, 4, 5], [2], [1, 4], [1, 4, 5, 8], [7], [3]], [[5], [1], [3, 4, 8], [3, 4], [7], [9], [4, 8], [6], [2]], [[2], [3, 4], [7], [1, 3, 4, 5], [8], [6], [1, 4, 5], [4, 5], [9]]]]
INFO:root:Doing checkSmall1
INFO:root:Getting tiny MUSes, distance 1, for 1 puzlits, 1 repeats
INFO:root:Chunked 1 in [1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
INFO:root:Doing checkSmall2
INFO:root:Getting tiny MUSes, distance 2, for 1 puzlits, 1 repeats
INFO:root:Chunked 1 in [1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
INFO:root:Considering 100 * 1 jobs for minsize=3
INFO:root:Chunked 100 in [9, 9, 9, 9, 8, 8, 8, 8, 8, 8, 8, 8]
INFO:root:Considering 100 * 1 jobs for minsize=4
INFO:root:Chunked 100 in [9, 9, 9, 9, 8, 8, 8, 8, 8, 8, 8, 8]
INFO:root:Considering 100 * 1 jobs for minsize=5
INFO:root:Chunked 100 in [9, 9, 9, 9, 8, 8, 8, 8, 8, 8, 8, 8]
INFO:root:Considering 100 * 1 jobs for minsize=6
INFO:root:Chunked 100 in [9, 9, 9, 9, 8, 8, 8, 8, 8, 8, 8, 8]
INFO:root:XX found first (8, 3) is not 4 7
INFO:root:XX add new best (8, 3) is not 4 7 7
INFO:root:XX add new best (8, 3) is not 4 7 7
INFO:root:XX add new best (8, 3) is not 4 7 7
INFO:root:XX add new best (8, 3) is not 4 7 7
INFO:root:XX add new best (8, 3) is not 4 7 7
INFO:root:XX add new best (8, 3) is not 4 7 7
INFO:root:XX add new best (8, 3) is not 4 7 7
INFO:root:XX add new best (8, 3) is not 4 7 7
INFO:root:XX add new best (8, 3) is not 4 7 7
INFO:root:XX add new best (8, 3) is not 4 7 7
INFO:root:XX add new best (8, 3) is not 4 7 7
INFO:root:XX add new best (8, 3) is not 4 7 7
INFO:root:XX add new best (8, 3) is not 4 7 7
INFO:root:XX add new best (8, 3) is not 4 7 7
INFO:root:XX add new best (8, 3) is not 4 7 7
INFO:root:XX add new best (8, 3) is not 4 7 7
INFO:root:XX add new best (8, 3) is not 4 7 7
INFO:root:Considering 100 * 1 jobs for minsize=7
INFO:root:Chunked 100 in [9, 9, 9, 9, 8, 8, 8, 8, 8, 8, 8, 8]
INFO:root:XX add new best (8, 3) is not 4 7 7
INFO:root:XX add new best (8, 3) is not 4 7 7
INFO:root:XX add new best (8, 3) is not 4 7 7
INFO:root:XX add new best (8, 3) is not 4 7 7
INFO:root:XX add new best (8, 3) is not 4 7 7
INFO:root:XX add new best (8, 3) is not 4 7 7
INFO:root:XX add new best (8, 3) is not 4 7 7
INFO:root:XX add new best (8, 3) is not 4 7 7
INFO:root:XX add new best (8, 3) is not 4 7 7
INFO:root:XX add new best (8, 3) is not 4 7 7
INFO:root:XX add new best (8, 3) is not 4 7 7
INFO:root:XX add new best (8, 3) is not 4 7 7
INFO:root:XX add new best (8, 3) is not 4 7 7
INFO:root:XX add new best (8, 3) is not 4 7 7
INFO:root:Trace: [(7, [(8, 3) is not 4])]
INFO:root:Trace Quality: [(7, 1)]
INFO:root:Trace Sorted: [(7, 1)]
INFO:root:Finished
INFO:root:Full Trace [(7, [(8, 3) is not 4])]
INFO:root:Trying {'minPrecheckStepsMUS': True}
INFO:root:Starting Step 1
INFO:root:Current state [[[[9], [3, 8], [1, 3, 6, 8], [2], [4], [1, 3, 7, 8], [5, 7], [5, 8], [5, 6, 8]], [[4, 7, 8], [5], [4, 8], [6], [9], [7, 8], [2], [3], [1]], [[1, 3, 6, 7, 8], [2], [1, 3, 6, 8], [1, 8], [5], [1, 3, 7, 8], [4, 7], [9], [4, 6, 8]], [[1, 4, 6, 8], [9], [1, 4, 5, 6, 8], [7], [1, 6], [4, 8], [3], [2], [4, 5, 8]], [[1, 4, 8], [4, 8], [2], [9], [3], [5], [6], [1, 4, 8], [7]], [[1, 3, 4, 6, 8], [7], [1, 3, 4, 5, 6, 8], [4, 8], [1, 6], [2], [9], [1, 4, 5, 8], [4, 5, 8]], [[4, 8], [6], [9], [1, 4, 5], [2], [1, 4], [1, 4, 5, 8], [7], [3]], [[5], [1], [3, 4, 8], [3, 4], [7], [9], [4, 8], [6], [2]], [[2], [3, 4], [7], [1, 3, 4, 5], [8], [6], [1, 4, 5], [4, 5], [9]]]]
INFO:root:Doing checkSmall1
INFO:root:Getting tiny MUSes, distance 1, for 1 puzlits, 1 repeats
INFO:root:Chunked 1 in [1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
INFO:root:Doing checkSmall2
INFO:root:Getting tiny MUSes, distance 2, for 1 puzlits, 1 repeats
INFO:root:Chunked 1 in [1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
INFO:root:Considering 100 * 1 jobs for minsize=3
INFO:root:Chunked 100 in [9, 9, 9, 9, 8, 8, 8, 8, 8, 8, 8, 8]
INFO:root:Considering 100 * 1 jobs for minsize=4
INFO:root:Chunked 100 in [9, 9, 9, 9, 8, 8, 8, 8, 8, 8, 8, 8]
INFO:root:Considering 100 * 1 jobs for minsize=5
INFO:root:Chunked 100 in [9, 9, 9, 9, 8, 8, 8, 8, 8, 8, 8, 8]
INFO:root:Considering 100 * 1 jobs for minsize=6
INFO:root:Chunked 100 in [9, 9, 9, 9, 8, 8, 8, 8, 8, 8, 8, 8]
INFO:root:XX found first (8, 3) is not 4 7
INFO:root:XX add new best (8, 3) is not 4 7 7
INFO:root:XX add new best (8, 3) is not 4 7 7
INFO:root:XX add new best (8, 3) is not 4 7 7
INFO:root:XX add new best (8, 3) is not 4 7 7
INFO:root:XX add new best (8, 3) is not 4 7 7
INFO:root:XX add new best (8, 3) is not 4 7 7
INFO:root:XX add new best (8, 3) is not 4 7 7
INFO:root:XX add new best (8, 3) is not 4 7 7
INFO:root:XX add new best (8, 3) is not 4 7 7
INFO:root:XX add new best (8, 3) is not 4 7 7
INFO:root:XX add new best (8, 3) is not 4 7 7
INFO:root:XX add new best (8, 3) is not 4 7 7
INFO:root:XX add new best (8, 3) is not 4 7 7
INFO:root:XX add new best (8, 3) is not 4 7 7
INFO:root:XX add new best (8, 3) is not 4 7 7
INFO:root:XX add new best (8, 3) is not 4 7 7
INFO:root:XX add new best (8, 3) is not 4 7 7
INFO:root:XX add new best (8, 3) is not 4 7 7
INFO:root:XX add new best (8, 3) is not 4 7 7
INFO:root:XX add new best (8, 3) is not 4 7 7
INFO:root:XX add new best (8, 3) is not 4 7 7
INFO:root:XX add new best (8, 3) is not 4 7 7
INFO:root:XX add new best (8, 3) is not 4 7 7
INFO:root:XX add new best (8, 3) is not 4 7 7
INFO:root:XX add new best (8, 3) is not 4 7 7
INFO:root:Considering 100 * 1 jobs for minsize=7
INFO:root:Chunked 100 in [9, 9, 9, 9, 8, 8, 8, 8, 8, 8, 8, 8]
INFO:root:XX add new best (8, 3) is not 4 7 7
INFO:root:XX add new best (8, 3) is not 4 7 7
INFO:root:XX add new best (8, 3) is not 4 7 7
INFO:root:XX add new best (8, 3) is not 4 7 7
INFO:root:XX add new best (8, 3) is not 4 7 7
INFO:root:XX add new best (8, 3) is not 4 7 7
INFO:root:XX add new best (8, 3) is not 4 7 7
INFO:root:XX add new best (8, 3) is not 4 7 7
INFO:root:XX add new best (8, 3) is not 4 7 7
INFO:root:XX add new best (8, 3) is not 4 7 7
INFO:root:XX add new best (8, 3) is not 4 7 7
INFO:root:XX add new best (8, 3) is not 4 7 7
INFO:root:XX add new best (8, 3) is not 4 7 7
INFO:root:XX add new best (8, 3) is not 4 7 7
INFO:root:XX add new best (8, 3) is not 4 7 7
INFO:root:Trace: [(7, [(8, 3) is not 4])]
INFO:root:Trace Quality: [(7, 1)]
INFO:root:Trace Sorted: [(7, 1)]
INFO:root:Finished
INFO:root:Full Trace [(7, [(8, 3) is not 4])]
INFO:root:Trying {'gallopingMUSes': True, 'minPrecheckMUS': True}
INFO:root:Starting Step 1
INFO:root:Current state [[[[9], [3, 8], [1, 3, 6, 8], [2], [4], [1, 3, 7, 8], [5, 7], [5, 8], [5, 6, 8]], [[4, 7, 8], [5], [4, 8], [6], [9], [7, 8], [2], [3], [1]], [[1, 3, 6, 7, 8], [2], [1, 3, 6, 8], [1, 8], [5], [1, 3, 7, 8], [4, 7], [9], [4, 6, 8]], [[1, 4, 6, 8], [9], [1, 4, 5, 6, 8], [7], [1, 6], [4, 8], [3], [2], [4, 5, 8]], [[1, 4, 8], [4, 8], [2], [9], [3], [5], [6], [1, 4, 8], [7]], [[1, 3, 4, 6, 8], [7], [1, 3, 4, 5, 6, 8], [4, 8], [1, 6], [2], [9], [1, 4, 5, 8], [4, 5, 8]], [[4, 8], [6], [9], [1, 4, 5], [2], [1, 4], [1, 4, 5, 8], [7], [3]], [[5], [1], [3, 4, 8], [3, 4], [7], [9], [4, 8], [6], [2]], [[2], [3, 4], [7], [1, 3, 4, 5], [8], [6], [1, 4, 5], [4, 5], [9]]]]
INFO:root:Doing checkSmall1
INFO:root:Getting tiny MUSes, distance 1, for 1 puzlits, 1 repeats
INFO:root:Chunked 1 in [1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
INFO:root:Doing checkSmall2
INFO:root:Getting tiny MUSes, distance 2, for 1 puzlits, 1 repeats
INFO:root:Chunked 1 in [1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
INFO:root:Considering 100 * 1 jobs for minsize=3
INFO:root:Chunked 100 in [9, 9, 9, 9, 8, 8, 8, 8, 8, 8, 8, 8]
INFO:root:Considering 100 * 1 jobs for minsize=4
INFO:root:Chunked 100 in [9, 9, 9, 9, 8, 8, 8, 8, 8, 8, 8, 8]
INFO:root:Considering 100 * 1 jobs for minsize=5
INFO:root:Chunked 100 in [9, 9, 9, 9, 8, 8, 8, 8, 8, 8, 8, 8]
INFO:root:Considering 100 * 1 jobs for minsize=6
INFO:root:Chunked 100 in [9, 9, 9, 9, 8, 8, 8, 8, 8, 8, 8, 8]
INFO:root:XX found first (8, 3) is not 4 7
INFO:root:XX add new best (8, 3) is not 4 7 7
INFO:root:XX add new best (8, 3) is not 4 7 7
INFO:root:XX add new best (8, 3) is not 4 7 7
INFO:root:XX add new best (8, 3) is not 4 7 7
INFO:root:XX add new best (8, 3) is not 4 7 7
INFO:root:XX add new best (8, 3) is not 4 7 7
INFO:root:XX add new best (8, 3) is not 4 7 7
INFO:root:XX add new best (8, 3) is not 4 7 7
INFO:root:XX add new best (8, 3) is not 4 7 7
INFO:root:XX add new best (8, 3) is not 4 7 7
INFO:root:XX add new best (8, 3) is not 4 7 7
INFO:root:XX add new best (8, 3) is not 4 7 7
INFO:root:XX add new best (8, 3) is not 4 7 7
INFO:root:XX add new best (8, 3) is not 4 7 7
INFO:root:XX add new best (8, 3) is not 4 7 7
INFO:root:XX add new best (8, 3) is not 4 7 7
INFO:root:XX add new best (8, 3) is not 4 7 7
INFO:root:XX add new best (8, 3) is not 4 7 7
INFO:root:XX add new best (8, 3) is not 4 7 7
INFO:root:XX add new best (8, 3) is not 4 7 7
INFO:root:XX add new best (8, 3) is not 4 7 7
INFO:root:XX add new best (8, 3) is not 4 7 7
INFO:root:XX add new best (8, 3) is not 4 7 7
INFO:root:XX add new best (8, 3) is not 4 7 7
INFO:root:XX add new best (8, 3) is not 4 7 7
INFO:root:Considering 100 * 1 jobs for minsize=7
INFO:root:Chunked 100 in [9, 9, 9, 9, 8, 8, 8, 8, 8, 8, 8, 8]
INFO:root:XX add new best (8, 3) is not 4 7 7
INFO:root:XX add new best (8, 3) is not 4 7 7
INFO:root:XX add new best (8, 3) is not 4 7 7
INFO:root:XX add new best (8, 3) is not 4 7 7
INFO:root:XX add new best (8, 3) is not 4 7 7
INFO:root:XX add new best (8, 3) is not 4 7 7
INFO:root:XX add new best (8, 3) is not 4 7 7
INFO:root:XX add new best (8, 3) is not 4 7 7
INFO:root:XX add new best (8, 3) is not 4 7 7
INFO:root:XX add new best (8, 3) is not 4 7 7
INFO:root:XX add new best (8, 3) is not 4 7 7
INFO:root:XX add new best (8, 3) is not 4 7 7
INFO:root:XX add new best (8, 3) is not 4 7 7
INFO:root:XX add new best (8, 3) is not 4 7 7
INFO:root:XX add new best (8, 3) is not 4 7 7
INFO:root:Trace: [(7, [(8, 3) is not 4])]
INFO:root:Trace Quality: [(7, 1)]
INFO:root:Trace Sorted: [(7, 1)]
INFO:root:Finished
INFO:root:Full Trace [(7, [(8, 3) is not 4])]
INFO:root:Trying {}
INFO:root:Starting Step 1
INFO:root:Current state [[[[9], [3, 8], [1, 3, 6, 8], [2], [4], [1, 3, 7, 8], [5, 7], [5, 8], [5, 6, 8]], [[4, 7, 8], [5], [4, 8], [6], [9], [7, 8], [2], [3], [1]], [[1, 3, 6, 7, 8], [2], [1, 3, 6, 8], [1, 8], [5], [1, 3, 7, 8], [4, 7], [9], [4, 6, 8]], [[1, 4, 6, 8], [9], [1, 4, 5, 6, 8], [7], [1, 6], [4, 8], [3], [2], [4, 5, 8]], [[1, 4, 8], [4, 8], [2], [9], [3], [5], [6], [1, 4, 8], [7]], [[1, 3, 4, 6, 8], [7], [1, 3, 4, 5, 6, 8], [4, 8], [1, 6], [2], [9], [1, 4, 5, 8], [4, 5, 8]], [[4, 8], [6], [9], [1, 4, 5], [2], [1, 4], [1, 4, 5, 8], [7], [3]], [[5], [1], [3, 8], [3, 4], [7], [9], [4, 8], [6], [2]], [[2], [3, 4], [7], [1, 3, 4, 5], [8], [6], [1, 4, 5], [4, 5], [9]]]]
INFO:root:Doing checkSmall1
INFO:root:Getting tiny MUSes, distance 1, for 1 puzlits, 1 repeats
INFO:root:Chunked 1 in [1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
INFO:root:Doing checkSmall2
INFO:root:Getting tiny MUSes, distance 2, for 1 puzlits, 1 repeats
INFO:root:Chunked 1 in [1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
INFO:root:Considering 100 * 1 jobs for minsize=3
INFO:root:Chunked 100 in [9, 9, 9, 9, 8, 8, 8, 8, 8, 8, 8, 8]
INFO:root:Considering 100 * 1 jobs for minsize=4
INFO:root:Chunked 100 in [9, 9, 9, 9, 8, 8, 8, 8, 8, 8, 8, 8]
INFO:root:Considering 100 * 1 jobs for minsize=5
INFO:root:Chunked 100 in [9, 9, 9, 9, 8, 8, 8, 8, 8, 8, 8, 8]
INFO:root:Considering 100 * 1 jobs for minsize=6
INFO:root:Chunked 100 in [9, 9, 9, 9, 8, 8, 8, 8, 8, 8, 8, 8]
INFO:root:Considering 100 * 1 jobs for minsize=7
INFO:root:Chunked 100 in [9, 9, 9, 9, 8, 8, 8, 8, 8, 8, 8, 8]
INFO:root:Considering 100 * 1 jobs for minsize=8
INFO:root:Chunked 100 in [9, 9, 9, 9, 8, 8, 8, 8, 8, 8, 8, 8]
INFO:root:Considering 100 * 1 jobs for minsize=9
INFO:root:Chunked 100 in [9, 9, 9, 9, 8, 8, 8, 8, 8, 8, 8, 8]
INFO:root:XX found first (7, 6) is not 4 7
INFO:root:XX add new best (7, 6) is not 4 7 7
INFO:root:XX add new best (7, 6) is not 4 7 7
INFO:root:XX add new best (7, 6) is not 4 7 7
INFO:root:Trace: [(7, [(7, 6) is not 4])]
INFO:root:Trace Quality: [(7, 1)]
INFO:root:Trace Sorted: [(7, 1)]
INFO:root:Finished
INFO:root:Full Trace [(7, [(7, 6) is not 4])]
INFO:root:Trying {'prechopMUSes': True}
INFO:root:Starting Step 1
INFO:root:Current state [[[[9], [3, 8], [1, 3, 6, 8], [2], [4], [1, 3, 7, 8], [5, 7], [5, 8], [5, 6, 8]], [[4, 7, 8], [5], [4, 8], [6], [9], [7, 8], [2], [3], [1]], [[1, 3, 6, 7, 8], [2], [1, 3, 6, 8], [1, 8], [5], [1, 3, 7, 8], [4, 7], [9], [4, 6, 8]], [[1, 4, 6, 8], [9], [1, 4, 5, 6, 8], [7], [1, 6], [4, 8], [3], [2], [4, 5, 8]], [[1, 4, 8], [4, 8], [2], [9], [3], [5], [6], [1, 4, 8], [7]], [[1, 3, 4, 6, 8], [7], [1, 3, 4, 5, 6, 8], [4, 8], [1, 6], [2], [9], [1, 4, 5, 8], [4, 5, 8]], [[4, 8], [6], [9], [1, 4, 5], [2], [1, 4], [1, 4, 5, 8], [7], [3]], [[5], [1], [3, 8], [3, 4], [7], [9], [4, 8], [6], [2]], [[2], [3, 4], [7], [1, 3, 4, 5], [8], [6], [1, 4, 5], [4, 5], [9]]]]
INFO:root:Doing checkSmall1
INFO:root:Getting tiny MUSes, distance 1, for 1 puzlits, 1 repeats
INFO:root:Chunked 1 in [1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
INFO:root:Doing checkSmall2
INFO:root:Getting tiny MUSes, distance 2, for 1 puzlits, 1 repeats
INFO:root:Chunked 1 in [1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
INFO:root:Considering 100 * 1 jobs for minsize=3
INFO:root:Chunked 100 in [9, 9, 9, 9, 8, 8, 8, 8, 8, 8, 8, 8]
INFO:root:Considering 100 * 1 jobs for minsize=4
INFO:root:Chunked 100 in [9, 9, 9, 9, 8, 8, 8, 8, 8, 8, 8, 8]
INFO:root:Considering 100 * 1 jobs for minsize=5
INFO:root:Chunked 100 in [9, 9, 9, 9, 8, 8, 8, 8, 8, 8, 8, 8]
INFO:root:Considering 100 * 1 jobs for minsize=6
INFO:root:Chunked 100 in [9, 9, 9, 9, 8, 8, 8, 8, 8, 8, 8, 8]
INFO:root:XX found first (7, 6) is not 4 7
INFO:root:XX add new best (7, 6) is not 4 7 7
INFO:root:XX add new best (7, 6) is not 4 7 7
INFO:root:XX add new best (7, 6) is not 4 7 7
INFO:root:XX add new best (7, 6) is not 4 7 7
INFO:root:XX add new best (7, 6) is not 4 7 7
INFO:root:XX add new best (7, 6) is not 4 7 7
INFO:root:XX add new best (7, 6) is not 4 7 7
INFO:root:XX add new best (7, 6) is not 4 7 7
INFO:root:XX add new best (7, 6) is not 4 7 7
INFO:root:XX add new best (7, 6) is not 4 7 7
INFO:root:XX add new best (7, 6) is not 4 7 7
INFO:root:XX add new best (7, 6) is not 4 7 7
INFO:root:XX add new best (7, 6) is not 4 7 7
INFO:root:XX add new best (7, 6) is not 4 7 7
INFO:root:XX add new best (7, 6) is not 4 7 7
INFO:root:XX add new best (7, 6) is not 4 7 7
INFO:root:XX add new best (7, 6) is not 4 7 7
INFO:root:XX add new best (7, 6) is not 4 7 7
INFO:root:XX add new best (7, 6) is not 4 7 7
INFO:root:XX add new best (7, 6) is not 4 7 7
INFO:root:XX add new best (7, 6) is not 4 7 7
INFO:root:Considering 100 * 1 jobs for minsize=7
INFO:root:Chunked 100 in [9, 9, 9, 9, 8, 8, 8, 8, 8, 8, 8, 8]
INFO:root:XX add new best (7, 6) is not 4 7 7
INFO:root:XX add new best (7, 6) is not 4 7 7
INFO:root:XX add new best (7, 6) is not 4 7 7
INFO:root:XX add new best (7, 6) is not 4 7 7
INFO:root:XX add new best (7, 6) is not 4 7 7
INFO:root:XX add new best (7, 6) is not 4 7 7
INFO:root:XX add new best (7, 6) is not 4 7 7
INFO:root:XX add new best (7, 6) is not 4 7 7
INFO:root:XX add new best (7, 6) is not 4 7 7
INFO:root:XX add new best (7, 6) is not 4 7 7
INFO:root:XX add new best (7, 6) is not 4 7 7
INFO:root:XX add new best (7, 6) is not 4 7 7
INFO:root:XX add new best (7, 6) is not 4 7 7
INFO:root:XX add new best (7, 6) is not 4 7 7
INFO:root:XX add new best (7, 6) is not 4 7 7
INFO:root:XX add new best (7, 6) is not 4 7 7
INFO:root:XX add new best (7, 6) is not 4 7 7
INFO:root:XX add new best (7, 6) is not 4 7 7
INFO:root:Trace: [(7, [(7, 6) is not 4])]
INFO:root:Trace Quality: [(7, 1)]
INFO:root:Trace Sorted: [(7, 1)]
INFO:root:Finished
INFO:root:Full Trace [(7, [(7, 6) is not 4])]
INFO:root:Trying {'quarterChopMUS': True}
INFO:root:Starting Step 1
INFO:root:Current state [[[[9], [3, 8], [1, 3, 6, 8], [2], [4], [1, 3, 7, 8], [5, 7], [5, 8], [5, 6, 8]], [[4, 7, 8], [5], [4, 8], [6], [9], [7, 8], [2], [3], [1]], [[1, 3, 6, 7, 8], [2], [1, 3, 6, 8], [1, 8], [5], [1, 3, 7, 8], [4, 7], [9], [4, 6, 8]], [[1, 4, 6, 8], [9], [1, 4, 5, 6, 8], [7], [1, 6], [4, 8], [3], [2], [4, 5, 8]], [[1, 4, 8], [4, 8], [2], [9], [3], [5], [6], [1, 4, 8], [7]], [[1, 3, 4, 6, 8], [7], [1, 3, 4, 5, 6, 8], [4, 8], [1, 6], [2], [9], [1, 4, 5, 8], [4, 5, 8]], [[4, 8], [6], [9], [1, 4, 5], [2], [1, 4], [1, 4, 5, 8], [7], [3]], [[5], [1], [3, 8], [3, 4], [7], [9], [4, 8], [6], [2]], [[2], [3, 4], [7], [1, 3, 4, 5], [8], [6], [1, 4, 5], [4, 5], [9]]]]
INFO:root:Doing checkSmall1
INFO:root:Getting tiny MUSes, distance 1, for 1 puzlits, 1 repeats
INFO:root:Chunked 1 in [1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
INFO:root:Doing checkSmall2
INFO:root:Getting tiny MUSes, distance 2, for 1 puzlits, 1 repeats
INFO:root:Chunked 1 in [1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
INFO:root:Considering 100 * 1 jobs for minsize=3
INFO:root:Chunked 100 in [9, 9, 9, 9, 8, 8, 8, 8, 8, 8, 8, 8]
INFO:root:Considering 100 * 1 jobs for minsize=4
INFO:root:Chunked 100 in [9, 9, 9, 9, 8, 8, 8, 8, 8, 8, 8, 8]
INFO:root:Considering 100 * 1 jobs for minsize=5
INFO:root:Chunked 100 in [9, 9, 9, 9, 8, 8, 8, 8, 8, 8, 8, 8]
INFO:root:Considering 100 * 1 jobs for minsize=6
INFO:root:Chunked 100 in [9, 9, 9, 9, 8, 8, 8, 8, 8, 8, 8, 8]
INFO:root:XX found first (7, 6) is not 4 7
INFO:root:XX add new best (7, 6) is not 4 7 7
INFO:root:XX add new best (7, 6) is not 4 7 7
INFO:root:XX add new best (7, 6) is not 4 7 7
INFO:root:XX add new best (7, 6) is not 4 7 7
INFO:root:XX add new best (7, 6) is not 4 7 7
INFO:root:XX add new best (7, 6) is not 4 7 7
INFO:root:XX add new best (7, 6) is not 4 7 7
INFO:root:XX add new best (7, 6) is not 4 7 7
INFO:root:XX add new best (7, 6) is not 4 7 7
INFO:root:XX add new best (7, 6) is not 4 7 7
INFO:root:XX add new best (7, 6) is not 4 7 7
INFO:root:XX add new best (7, 6) is not 4 7 7
INFO:root:XX add new best (7, 6) is not 4 7 7
INFO:root:XX add new best (7, 6) is not 4 7 7
INFO:root:XX add new best (7, 6) is not 4 7 7
INFO:root:XX add new best (7, 6) is not 4 7 7
INFO:root:XX add new best (7, 6) is not 4 7 7
INFO:root:XX add new best (7, 6) is not 4 7 7
INFO:root:XX add new best (7, 6) is not 4 7 7
INFO:root:XX add new best (7, 6) is not 4 7 7
INFO:root:XX add new best (7, 6) is not 4 7 7
INFO:root:XX add new best (7, 6) is not 4 7 7
INFO:root:XX add new best (7, 6) is not 4 7 7
INFO:root:XX add new best (7, 6) is not 4 7 7
INFO:root:XX add new best (7, 6) is not 4 7 7
INFO:root:XX add new best (7, 6) is not 4 7 7
INFO:root:XX add new best (7, 6) is not 4 7 7
INFO:root:XX add new best (7, 6) is not 4 7 7
INFO:root:XX add new best (7, 6) is not 4 7 7
INFO:root:XX add new best (7, 6) is not 4 7 7
INFO:root:XX add new best (7, 6) is not 4 7 7
INFO:root:Considering 100 * 1 jobs for minsize=7
INFO:root:Chunked 100 in [9, 9, 9, 9, 8, 8, 8, 8, 8, 8, 8, 8]
INFO:root:XX add new best (7, 6) is not 4 7 7
INFO:root:XX add new best (7, 6) is not 4 7 7
INFO:root:XX add new best (7, 6) is not 4 7 7
INFO:root:XX add new best (7, 6) is not 4 7 7
INFO:root:XX add new best (7, 6) is not 4 7 7
INFO:root:XX add new best (7, 6) is not 4 7 7
INFO:root:XX add new best (7, 6) is not 4 7 7
INFO:root:XX add new best (7, 6) is not 4 7 7
INFO:root:XX add new best (7, 6) is not 4 7 7
INFO:root:XX add new best (7, 6) is not 4 7 7
INFO:root:XX add new best (7, 6) is not 4 7 7
INFO:root:XX add new best (7, 6) is not 4 7 7
INFO:root:XX add new best (7, 6) is not 4 7 7
INFO:root:XX add new best (7, 6) is not 4 7 7
INFO:root:XX add new best (7, 6) is not 4 7 7
INFO:root:XX add new best (7, 6) is not 4 7 7
INFO:root:XX add new best (7, 6) is not 4 7 7
INFO:root:XX add new best (7, 6) is not 4 7 7
INFO:root:XX add new best (7, 6) is not 4 7 7
INFO:root:XX add new best (7, 6) is not 4 7 7
INFO:root:XX add new best (7, 6) is not 4 7 7
INFO:root:XX add new best (7, 6) is not 4 7 7
INFO:root:XX add new best (7, 6) is not 4 7 7
INFO:root:XX add new best (7, 6) is not 4 7 7
INFO:root:Trace: [(7, [(7, 6) is not 4])]
INFO:root:Trace Quality: [(7, 1)]
INFO:root:Trace Sorted: [(7, 1)]
INFO:root:Finished
INFO:root:Full Trace [(7, [(7, 6) is not 4])]
INFO:root:Trying {'minPrecheckMUS': True}
INFO:root:Starting Step 1
INFO:root:Current state [[[[9], [3, 8], [1, 3, 6, 8], [2], [4], [1, 3, 7, 8], [5, 7], [5, 8], [5, 6, 8]], [[4, 7, 8], [5], [4, 8], [6], [9], [7, 8], [2], [3], [1]], [[1, 3, 6, 7, 8], [2], [1, 3, 6, 8], [1, 8], [5], [1, 3, 7, 8], [4, 7], [9], [4, 6, 8]], [[1, 4, 6, 8], [9], [1, 4, 5, 6, 8], [7], [1, 6], [4, 8], [3], [2], [4, 5, 8]], [[1, 4, 8], [4, 8], [2], [9], [3], [5], [6], [1, 4, 8], [7]], [[1, 3, 4, 6, 8], [7], [1, 3, 4, 5, 6, 8], [4, 8], [1, 6], [2], [9], [1, 4, 5, 8], [4, 5, 8]], [[4, 8], [6], [9], [1, 4, 5], [2], [1, 4], [1, 4, 5, 8], [7], [3]], [[5], [1], [3, 8], [3, 4], [7], [9], [4, 8], [6], [2]], [[2], [3, 4], [7], [1, 3, 4, 5], [8], [6], [1, 4, 5], [4, 5], [9]]]]
INFO:root:Doing checkSmall1
INFO:root:Getting tiny MUSes, distance 1, for 1 puzlits, 1 repeats
INFO:root:Chunked 1 in [1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
INFO:root:Doing checkSmall2
INFO:root:Getting tiny MUSes, distance 2, for 1 puzlits, 1 repeats
INFO:root:Chunked 1 in [1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
INFO:root:Considering 100 * 1 jobs for minsize=3
INFO:root:Chunked 100 in [9, 9, 9, 9, 8, 8, 8, 8, 8, 8, 8, 8]
INFO:root:Considering 100 * 1 jobs for minsize=4
INFO:root:Chunked 100 in [9, 9, 9, 9, 8, 8, 8, 8, 8, 8, 8, 8]
INFO:root:Considering 100 * 1 jobs for minsize=5
INFO:root:Chunked 100 in [9, 9, 9, 9, 8, 8, 8, 8, 8, 8, 8, 8]
INFO:root:Considering 100 * 1 jobs for minsize=6
INFO:root:Chunked 100 in [9, 9, 9, 9, 8, 8, 8, 8, 8, 8, 8, 8]
INFO:root:XX found first (7, 6) is not 4 7
INFO:root:XX add new best (7, 6) is not 4 7 7
INFO:root:XX add new best (7, 6) is not 4 7 7
INFO:root:XX add new best (7, 6) is not 4 7 7
INFO:root:XX add new best (7, 6) is not 4 7 7
INFO:root:XX add new best (7, 6) is not 4 7 7
INFO:root:XX add new best (7, 6) is not 4 7 7
INFO:root:XX add new best (7, 6) is not 4 7 7
INFO:root:XX add new best (7, 6) is not 4 7 7
INFO:root:XX add new best (7, 6) is not 4 7 7
INFO:root:XX add new best (7, 6) is not 4 7 7
INFO:root:XX add new best (7, 6) is not 4 7 7
INFO:root:XX add new best (7, 6) is not 4 7 7
INFO:root:XX add new best (7, 6) is not 4 7 7
INFO:root:XX add new best (7, 6) is not 4 7 7
INFO:root:XX add new best (7, 6) is not 4 7 7
INFO:root:Considering 100 * 1 jobs for minsize=7
INFO:root:Chunked 100 in [9, 9, 9, 9, 8, 8, 8, 8, 8, 8, 8, 8]
INFO:root:XX add new best (7, 6) is not 4 7 7
INFO:root:XX add new best (7, 6) is not 4 7 7
INFO:root:XX add new best (7, 6) is not 4 7 7
INFO:root:XX add new best (7, 6) is not 4 7 7
INFO:root:XX add new best (7, 6) is not 4 7 7
INFO:root:XX add new best (7, 6) is not 4 7 7
INFO:root:XX add new best (7, 6) is not 4 7 7
INFO:root:XX add new best (7, 6) is not 4 7 7
INFO:root:XX add new best (7, 6) is not 4 7 7
INFO:root:XX add new best (7, 6) is not 4 7 7
INFO:root:XX add new best (7, 6) is not 4 7 7
INFO:root:XX add new best (7, 6) is not 4 7 7
INFO:root:XX add new best (7, 6) is not 4 7 7
INFO:root:Trace: [(7, [(7, 6) is not 4])]
INFO:root:Trace Quality: [(7, 1)]
INFO:root:Trace Sorted: [(7, 1)]
INFO:root:Finished
INFO:root:Full Trace [(7, [(7, 6) is not 4])]
INFO:root:Trying {'gallopingMUSes': True}
INFO:root:Starting Step 1
INFO:root:Current state [[[[9], [3, 8], [1, 3, 6, 8], [2], [4], [1, 3, 7, 8], [5, 7], [5, 8], [5, 6, 8]], [[4, 7, 8], [5], [4, 8], [6], [9], [7, 8], [2], [3], [1]], [[1, 3, 6, 7, 8], [2], [1, 3, 6, 8], [1, 8], [5], [1, 3, 7, 8], [4, 7], [9], [4, 6, 8]], [[1, 4, 6, 8], [9], [1, 4, 5, 6, 8], [7], [1, 6], [4, 8], [3], [2], [4, 5, 8]], [[1, 4, 8], [4, 8], [2], [9], [3], [5], [6], [1, 4, 8], [7]], [[1, 3, 4, 6, 8], [7], [1, 3, 4, 5, 6, 8], [4, 8], [1, 6], [2], [9], [1, 4, 5, 8], [4, 5, 8]], [[4, 8], [6], [9], [1, 4, 5], [2], [1, 4], [1, 4, 5, 8], [7], [3]], [[5], [1], [3, 8], [3, 4], [7], [9], [4, 8], [6], [2]], [[2], [3, 4], [7], [1, 3, 4, 5], [8], [6], [1, 4, 5], [4, 5], [9]]]]
INFO:root:Doing checkSmall1
INFO:root:Getting tiny MUSes, distance 1, for 1 puzlits, 1 repeats
INFO:root:Chunked 1 in [1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
INFO:root:Doing checkSmall2
INFO:root:Getting tiny MUSes, distance 2, for 1 puzlits, 1 repeats
INFO:root:Chunked 1 in [1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
INFO:root:Considering 100 * 1 jobs for minsize=3
INFO:root:Chunked 100 in [9, 9, 9, 9, 8, 8, 8, 8, 8, 8, 8, 8]
INFO:root:Considering 100 * 1 jobs for minsize=4
INFO:root:Chunked 100 in [9, 9, 9, 9, 8, 8, 8, 8, 8, 8, 8, 8]
INFO:root:Considering 100 * 1 jobs for minsize=5
INFO:root:Chunked 100 in [9, 9, 9, 9, 8, 8, 8, 8, 8, 8, 8, 8]
INFO:root:Considering 100 * 1 jobs for minsize=6
INFO:root:Chunked 100 in [9, 9, 9, 9, 8, 8, 8, 8, 8, 8, 8, 8]
INFO:root:XX found first (7, 6) is not 4 7
INFO:root:XX add new best (7, 6) is not 4 7 7
INFO:root:XX add new best (7, 6) is not 4 7 7
INFO:root:XX add new best (7, 6) is not 4 7 7
INFO:root:XX add new best (7, 6) is not 4 7 7
INFO:root:XX add new best (7, 6) is not 4 7 7
INFO:root:XX add new best (7, 6) is not 4 7 7
INFO:root:XX add new best (7, 6) is not 4 7 7
INFO:root:XX add new best (7, 6) is not 4 7 7
INFO:root:XX add new best (7, 6) is not 4 7 7
INFO:root:XX add new best (7, 6) is not 4 7 7
INFO:root:XX add new best (7, 6) is not 4 7 7
INFO:root:Considering 100 * 1 jobs for minsize=7
INFO:root:Chunked 100 in [9, 9, 9, 9, 8, 8, 8, 8, 8, 8, 8, 8]
INFO:root:XX add new best (7, 6) is not 4 7 7
INFO:root:XX add new best (7, 6) is not 4 7 7
INFO:root:XX add new best (7, 6) is not 4 7 7
INFO:root:XX add new best (7, 6) is not 4 7 7
INFO:root:XX add new best (7, 6) is not 4 7 7
INFO:root:XX add new best (7, 6) is not 4 7 7
INFO:root:XX add new best (7, 6) is not 4 7 7
INFO:root:XX add new best (7, 6) is not 4 7 7
INFO:root:XX add new best (7, 6) is not 4 7 7
INFO:root:Trace: [(7, [(7, 6) is not 4])]
INFO:root:Trace Quality: [(7, 1)]
INFO:root:Trace Sorted: [(7, 1)]
INFO:root:Finished
INFO:root:Full Trace [(7, [(7, 6) is not 4])]
INFO:root:Trying {'minPrecheckStepsMUS': True}
INFO:root:Starting Step 1
INFO:root:Current state [[[[9], [3, 8], [1, 3, 6, 8], [2], [4], [1, 3, 7, 8], [5, 7], [5, 8], [5, 6, 8]], [[4, 7, 8], [5], [4, 8], [6], [9], [7, 8], [2], [3], [1]], [[1, 3, 6, 7, 8], [2], [1, 3, 6, 8], [1, 8], [5], [1, 3, 7, 8], [4, 7], [9], [4, 6, 8]], [[1, 4, 6, 8], [9], [1, 4, 5, 6, 8], [7], [1, 6], [4, 8], [3], [2], [4, 5, 8]], [[1, 4, 8], [4, 8], [2], [9], [3], [5], [6], [1, 4, 8], [7]], [[1, 3, 4, 6, 8], [7], [1, 3, 4, 5, 6, 8], [4, 8], [1, 6], [2], [9], [1, 4, 5, 8], [4, 5, 8]], [[4, 8], [6], [9], [1, 4, 5], [2], [1, 4], [1, 4, 5, 8], [7], [3]], [[5], [1], [3, 8], [3, 4], [7], [9], [4, 8], [6], [2]], [[2], [3, 4], [7], [1, 3, 4, 5], [8], [6], [1, 4, 5], [4, 5], [9]]]]
INFO:root:Doing checkSmall1
INFO:root:Getting tiny MUSes, distance 1, for 1 puzlits, 1 repeats
INFO:root:Chunked 1 in [1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
INFO:root:Doing checkSmall2
INFO:root:Getting tiny MUSes, distance 2, for 1 puzlits, 1 repeats
INFO:root:Chunked 1 in [1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
INFO:root:Considering 100 * 1 jobs for minsize=3
INFO:root:Chunked 100 in [9, 9, 9, 9, 8, 8, 8, 8, 8, 8, 8, 8]
INFO:root:Considering 100 * 1 jobs for minsize=4
INFO:root:Chunked 100 in [9, 9, 9, 9, 8, 8, 8, 8, 8, 8, 8, 8]
INFO:root:Considering 100 * 1 jobs for minsize=5
INFO:root:Chunked 100 in [9, 9, 9, 9, 8, 8, 8, 8, 8, 8, 8, 8]
INFO:root:Considering 100 * 1 jobs for minsize=6
INFO:root:Chunked 100 in [9, 9, 9, 9, 8, 8, 8, 8, 8, 8, 8, 8]
INFO:root:XX found first (7, 6) is not 4 7
INFO:root:XX add new best (7, 6) is not 4 7 7
INFO:root:XX add new best (7, 6) is not 4 7 7
INFO:root:XX add new best (7, 6) is not 4 7 7
INFO:root:XX add new best (7, 6) is not 4 7 7
INFO:root:XX add new best (7, 6) is not 4 7 7
INFO:root:XX add new best (7, 6) is not 4 7 7
INFO:root:XX add new best (7, 6) is not 4 7 7
INFO:root:XX add new best (7, 6) is not 4 7 7
INFO:root:XX add new best (7, 6) is not 4 7 7
INFO:root:XX add new best (7, 6) is not 4 7 7
INFO:root:XX add new best (7, 6) is not 4 7 7
INFO:root:XX add new best (7, 6) is not 4 7 7
INFO:root:XX add new best (7, 6) is not 4 7 7
INFO:root:XX add new best (7, 6) is not 4 7 7
INFO:root:Considering 100 * 1 jobs for minsize=7
INFO:root:Chunked 100 in [9, 9, 9, 9, 8, 8, 8, 8, 8, 8, 8, 8]
INFO:root:XX add new best (7, 6) is not 4 7 7
INFO:root:XX add new best (7, 6) is not 4 7 7
INFO:root:XX add new best (7, 6) is not 4 7 7
INFO:root:XX add new best (7, 6) is not 4 7 7
INFO:root:XX add new best (7, 6) is not 4 7 7
INFO:root:XX add new best (7, 6) is not 4 7 7
INFO:root:XX add new best (7, 6) is not 4 7 7
INFO:root:XX add new best (7, 6) is not 4 7 7
INFO:root:XX add new best (7, 6) is not 4 7 7
INFO:root:XX add new best (7, 6) is not 4 7 7
INFO:root:XX add new best (7, 6) is not 4 7 7
INFO:root:XX add new best (7, 6) is not 4 7 7
INFO:root:XX add new best (7, 6) is not 4 7 7
INFO:root:Trace: [(7, [(7, 6) is not 4])]
INFO:root:Trace Quality: [(7, 1)]
INFO:root:Trace Sorted: [(7, 1)]
INFO:root:Finished
INFO:root:Full Trace [(7, [(7, 6) is not 4])]
INFO:root:Trying {'gallopingMUSes': True, 'minPrecheckMUS': True}
INFO:root:Starting Step 1
INFO:root:Current state [[[[9], [3, 8], [1, 3, 6, 8], [2], [4], [1, 3, 7, 8], [5, 7], [5, 8], [5, 6, 8]], [[4, 7, 8], [5], [4, 8], [6], [9], [7, 8], [2], [3], [1]], [[1, 3, 6, 7, 8], [2], [1, 3, 6, 8], [1, 8], [5], [1, 3, 7, 8], [4, 7], [9], [4, 6, 8]], [[1, 4, 6, 8], [9], [1, 4, 5, 6, 8], [7], [1, 6], [4, 8], [3], [2], [4, 5, 8]], [[1, 4, 8], [4, 8], [2], [9], [3], [5], [6], [1, 4, 8], [7]], [[1, 3, 4, 6, 8], [7], [1, 3, 4, 5, 6, 8], [4, 8], [1, 6], [2], [9], [1, 4, 5, 8], [4, 5, 8]], [[4, 8], [6], [9], [1, 4, 5], [2], [1, 4], [1, 4, 5, 8], [7], [3]], [[5], [1], [3, 8], [3, 4], [7], [9], [4, 8], [6], [2]], [[2], [3, 4], [7], [1, 3, 4, 5], [8], [6], [1, 4, 5], [4, 5], [9]]]]
INFO:root:Doing checkSmall1
INFO:root:Getting tiny MUSes, distance 1, for 1 puzlits, 1 repeats
INFO:root:Chunked 1 in [1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
INFO:root:Doing checkSmall2
INFO:root:Getting tiny MUSes, distance 2, for 1 puzlits, 1 repeats
INFO:root:Chunked 1 in [1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
INFO:root:Considering 100 * 1 jobs for minsize=3
INFO:root:Chunked 100 in [9, 9, 9, 9, 8, 8, 8, 8, 8, 8, 8, 8]
INFO:root:Considering 100 * 1 jobs for minsize=4
INFO:root:Chunked 100 in [9, 9, 9, 9, 8, 8, 8, 8, 8, 8, 8, 8]
INFO:root:Considering 100 * 1 jobs for minsize=5
INFO:root:Chunked 100 in [9, 9, 9, 9, 8, 8, 8, 8, 8, 8, 8, 8]
INFO:root:Considering 100 * 1 jobs for minsize=6
INFO:root:Chunked 100 in [9, 9, 9, 9, 8, 8, 8, 8, 8, 8, 8, 8]
INFO:root:XX found first (7, 6) is not 4 7
INFO:root:XX add new best (7, 6) is not 4 7 7
INFO:root:XX add new best (7, 6) is not 4 7 7
INFO:root:XX add new best (7, 6) is not 4 7 7
INFO:root:XX add new best (7, 6) is not 4 7 7
INFO:root:XX add new best (7, 6) is not 4 7 7
INFO:root:XX add new best (7, 6) is not 4 7 7
INFO:root:XX add new best (7, 6) is not 4 7 7
INFO:root:XX add new best (7, 6) is not 4 7 7
INFO:root:XX add new best (7, 6) is not 4 7 7
INFO:root:XX add new best (7, 6) is not 4 7 7
INFO:root:XX add new best (7, 6) is not 4 7 7
INFO:root:XX add new best (7, 6) is not 4 7 7
INFO:root:XX add new best (7, 6) is not 4 7 7
INFO:root:XX add new best (7, 6) is not 4 7 7
INFO:root:Considering 100 * 1 jobs for minsize=7
INFO:root:Chunked 100 in [9, 9, 9, 9, 8, 8, 8, 8, 8, 8, 8, 8]
INFO:root:XX add new best (7, 6) is not 4 7 7
INFO:root:XX add new best (7, 6) is not 4 7 7
INFO:root:XX add new best (7, 6) is not 4 7 7
INFO:root:XX add new best (7, 6) is not 4 7 7
INFO:root:XX add new best (7, 6) is not 4 7 7
INFO:root:XX add new best (7, 6) is not 4 7 7
INFO:root:XX add new best (7, 6) is not 4 7 7
INFO:root:XX add new best (7, 6) is not 4 7 7
INFO:root:XX add new best (7, 6) is not 4 7 7
INFO:root:XX add new best (7, 6) is not 4 7 7
INFO:root:XX add new best (7, 6) is not 4 7 7
INFO:root:XX add new best (7, 6) is not 4 7 7
INFO:root:XX add new best (7, 6) is not 4 7 7
INFO:root:Trace: [(7, [(7, 6) is not 4])]
INFO:root:Trace Quality: [(7, 1)]
INFO:root:Trace Sorted: [(7, 1)]
INFO:root:Finished
INFO:root:Full Trace [(7, [(7, 6) is not 4])]
INFO:root:Trying {}
INFO:root:Starting Step 1
INFO:root:Current state [[[[5], [2], [9], [4], [1], [6, 8], [7], [6, 8], [3]], [[4, 7, 8], [1, 4, 8], [6], [5, 9], [7, 8, 9], [3], [1, 8], [1, 4, 5, 8, 9], [2]], [[4, 7, 8], [1, 4, 8], [3], [2], [7, 8, 9], [5, 6], [1, 8, 9], [5, 6], [1, 4, 8, 9]], [[4, 8], [5], [2], [3], [8, 9], [1, 4, 8], [1, 8, 9], [7], [6]], [[6], [3], [7], [1, 9], [5], [1, 4, 8], [2], [1, 4, 8, 9], [1, 4, 8, 9]], [[1], [9], [4, 8], [6], [2], [7], [5], [3], [4, 8]], [[3], [7, 8], [1, 5, 8], [1, 5], [6], [9], [4], [2], [1, 7, 8]], [[2], [4, 7], [1, 4, 5], [8], [3], [1, 5], [6], [1, 9], [1, 7, 9]], [[9], [6], [1, 8], [7], [4], [2], [3], [1, 8], [5]]]]
INFO:root:Doing checkSmall1
INFO:root:Getting tiny MUSes, distance 1, for 1 puzlits, 1 repeats
INFO:root:Chunked 1 in [1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
INFO:root:Doing checkSmall2
INFO:root:Getting tiny MUSes, distance 2, for 1 puzlits, 1 repeats
INFO:root:Chunked 1 in [1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
INFO:root:Considering 100 * 1 jobs for minsize=3
INFO:root:Chunked 100 in [9, 9, 9, 9, 8, 8, 8, 8, 8, 8, 8, 8]
INFO:root:Considering 100 * 1 jobs for minsize=4
INFO:root:Chunked 100 in [9, 9, 9, 9, 8, 8, 8, 8, 8, 8, 8, 8]
INFO:root:Considering 100 * 1 jobs for minsize=5
INFO:root:Chunked 100 in [9, 9, 9, 9, 8, 8, 8, 8, 8, 8, 8, 8]
INFO:root:Considering 100 * 1 jobs for minsize=6
INFO:root:Chunked 100 in [9, 9, 9, 9, 8, 8, 8, 8, 8, 8, 8, 8]
INFO:root:Considering 100 * 1 jobs for minsize=7
INFO:root:Chunked 100 in [9, 9, 9, 9, 8, 8, 8, 8, 8, 8, 8, 8]
INFO:root:Considering 100 * 1 jobs for minsize=8
INFO:root:Chunked 100 in [9, 9, 9, 9, 8, 8, 8, 8, 8, 8, 8, 8]
INFO:root:Considering 100 * 1 jobs for minsize=9
INFO:root:Chunked 100 in [9, 9, 9, 9, 8, 8, 8, 8, 8, 8, 8, 8]
INFO:root:XX found first (2, 2) is not 8 10
INFO:root:XX add new best (2, 2) is not 8 10 10
INFO:root:XX add new best (2, 2) is not 8 10 10
INFO:root:XX add new best (2, 2) is not 8 10 10
INFO:root:XX add new best (2, 2) is not 8 10 10
INFO:root:XX add new best (2, 2) is not 8 10 10
INFO:root:XX add new best (2, 2) is not 8 10 10
INFO:root:XX add new best (2, 2) is not 8 10 10
INFO:root:XX add new best (2, 2) is not 8 10 10
INFO:root:XX add new best (2, 2) is not 8 10 10
INFO:root:XX add new best (2, 2) is not 8 10 10
INFO:root:XX add new best (2, 2) is not 8 10 10
INFO:root:XX add new best (2, 2) is not 8 10 10
INFO:root:XX add new best (2, 2) is not 8 10 10
INFO:root:XX add new best (2, 2) is not 8 10 10
INFO:root:XX add new best (2, 2) is not 8 10 10
INFO:root:XX add new best (2, 2) is not 8 10 10
INFO:root:XX add new best (2, 2) is not 8 10 10
INFO:root:XX add new best (2, 2) is not 8 10 10
INFO:root:XX add new best (2, 2) is not 8 10 10
INFO:root:XX add new best (2, 2) is not 8 10 10
INFO:root:XX add new best (2, 2) is not 8 10 10
INFO:root:XX add new best (2, 2) is not 8 10 10
INFO:root:XX add new best (2, 2) is not 8 10 10
INFO:root:XX add new best (2, 2) is not 8 10 10
INFO:root:XX add new best (2, 2) is not 8 10 10
INFO:root:XX add new best (2, 2) is not 8 10 10
INFO:root:XX add new best (2, 2) is not 8 10 10
INFO:root:XX add new best (2, 2) is not 8 10 10
INFO:root:XX add new best (2, 2) is not 8 10 10
INFO:root:XX add new best (2, 2) is not 8 10 10
INFO:root:XX add new best (2, 2) is not 8 10 10
INFO:root:XX add new best (2, 2) is not 8 10 10
INFO:root:XX add new best (2, 2) is not 8 10 10
INFO:root:XX add new best (2, 2) is not 8 10 10
INFO:root:XX add new best (2, 2) is not 8 10 10
INFO:root:XX add new best (2, 2) is not 8 10 10
INFO:root:XX add new best (2, 2) is not 8 10 10
INFO:root:XX add new best (2, 2) is not 8 10 10
INFO:root:XX add new best (2, 2) is not 8 10 10
INFO:root:XX add new best (2, 2) is not 8 10 10
INFO:root:XX add new best (2, 2) is not 8 10 10
INFO:root:XX add new best (2, 2) is not 8 10 10
INFO:root:XX add new best (2, 2) is not 8 10 10
INFO:root:XX add new best (2, 2) is not 8 10 10
INFO:root:XX add new best (2, 2) is not 8 10 10
INFO:root:XX add new best (2, 2) is not 8 10 10
INFO:root:XX add new best (2, 2) is not 8 10 10
INFO:root:XX add new best (2, 2) is not 8 10 10
INFO:root:XX add new best (2, 2) is not 8 10 10
INFO:root:XX add new best (2, 2) is not 8 10 10
INFO:root:XX add new best (2, 2) is not 8 10 10
INFO:root:XX add new best (2, 2) is not 8 10 10
INFO:root:XX add new best (2, 2) is not 8 10 10
INFO:root:XX add new best (2, 2) is not 8 10 10
INFO:root:XX add new best (2, 2) is not 8 10 10
INFO:root:XX add new best (2, 2) is not 8 10 10
INFO:root:XX add new best (2, 2) is not 8 10 10
INFO:root:XX add new best (2, 2) is not 8 10 10
INFO:root:XX add new best (2, 2) is not 8 10 10
INFO:root:XX add new best (2, 2) is not 8 10 10
INFO:root:XX add new best (2, 2) is not 8 10 10
INFO:root:XX add new best (2, 2) is not 8 10 10
INFO:root:XX add new best (2, 2) is not 8 10 10
INFO:root:XX add new best (2, 2) is not 8 10 10
INFO:root:XX add new best (2, 2) is not 8 10 10
INFO:root:XX add new best (2, 2) is not 8 10 10
INFO:root:XX add new best (2, 2) is not 8 10 10
INFO:root:XX add new best (2, 2) is not 8 10 10
INFO:root:XX add new best (2, 2) is not 8 10 10
INFO:root:XX add new best (2, 2) is not 8 10 10
INFO:root:XX add new best (2, 2) is not 8 10 10
INFO:root:XX add new best (2, 2) is not 8 10 10
INFO:root:XX add new best (2, 2) is not 8 10 10
INFO:root:XX add new best (2, 2) is not 8 10 10
INFO:root:XX add new best (2, 2) is not 8 10 10
INFO:root:XX add new best (2, 2) is not 8 10 10
INFO:root:XX add new best (2, 2) is not 8 10 10
INFO:root:XX add new best (2, 2) is not 8 10 10
INFO:root:XX add new best (2, 2) is not 8 10 10
INFO:root:XX add new best (2, 2) is not 8 10 10
INFO:root:XX add new best (2, 2) is not 8 10 10
INFO:root:XX add new best (2, 2) is not 8 10 10
INFO:root:XX add new best (2, 2) is not 8 10 10
INFO:root:XX add new best (2, 2) is not 8 10 10
INFO:root:XX add new best (2, 2) is not 8 10 10
INFO:root:XX add new best (2, 2) is not 8 10 10
INFO:root:XX add new best (2, 2) is not 8 10 10
INFO:root:XX add new best (2, 2) is not 8 10 10
INFO:root:XX add new best (2, 2) is not 8 10 10
INFO:root:XX add new best (2, 2) is not 8 10 10
INFO:root:XX add new best (2, 2) is not 8 10 10
INFO:root:XX add new best (2, 2) is not 8 10 10
INFO:root:XX add new best (2, 2) is not 8 10 10
INFO:root:XX add new best (2, 2) is not 8 10 10
INFO:root:Considering 100 * 1 jobs for minsize=10
INFO:root:Chunked 100 in [9, 9, 9, 9, 8, 8, 8, 8, 8, 8, 8, 8]
INFO:root:XX add new best (2, 2) is not 8 10 10
INFO:root:XX add new best (2, 2) is not 8 10 10
INFO:root:XX add new best (2, 2) is not 8 10 10
INFO:root:XX add new best (2, 2) is not 8 10 10
INFO:root:XX add new best (2, 2) is not 8 10 10
INFO:root:XX add new best (2, 2) is not 8 10 10
INFO:root:XX add new best (2, 2) is not 8 10 10
INFO:root:XX add new best (2, 2) is not 8 10 10
INFO:root:XX add new best (2, 2) is not 8 10 10
INFO:root:XX add new best (2, 2) is not 8 10 10
INFO:root:XX add new best (2, 2) is not 8 10 10
INFO:root:XX add new best (2, 2) is not 8 10 10
INFO:root:XX add new best (2, 2) is not 8 10 10
INFO:root:XX add new best (2, 2) is not 8 10 10
INFO:root:XX add new best (2, 2) is not 8 10 10
INFO:root:XX add new best (2, 2) is not 8 10 10
INFO:root:XX add new best (2, 2) is not 8 10 10
INFO:root:XX add new best (2, 2) is not 8 10 10
INFO:root:XX add new best (2, 2) is not 8 10 10
INFO:root:XX add new best (2, 2) is not 8 10 10
INFO:root:XX add new best (2, 2) is not 8 10 10
INFO:root:XX add new best (2, 2) is not 8 10 10
INFO:root:XX add new best (2, 2) is not 8 10 10
INFO:root:XX add new best (2, 2) is not 8 10 10
INFO:root:XX add new best (2, 2) is not 8 10 10
INFO:root:XX add new best (2, 2) is not 8 10 10
INFO:root:XX add new best (2, 2) is not 8 10 10
INFO:root:XX add new best (2, 2) is not 8 10 10
INFO:root:XX add new best (2, 2) is not 8 10 10
INFO:root:XX add new best (2, 2) is not 8 10 10
INFO:root:XX add new best (2, 2) is not 8 10 10
INFO:root:XX add new best (2, 2) is not 8 10 10
INFO:root:XX add new best (2, 2) is not 8 10 10
INFO:root:XX add new best (2, 2) is not 8 10 10
INFO:root:XX add new best (2, 2) is not 8 10 10
INFO:root:XX add new best (2, 2) is not 8 10 10
INFO:root:XX add new best (2, 2) is not 8 10 10
INFO:root:XX add new best (2, 2) is not 8 10 10
INFO:root:XX add new best (2, 2) is not 8 10 10
INFO:root:XX add new best (2, 2) is not 8 10 10
INFO:root:XX add new best (2, 2) is not 8 10 10
INFO:root:XX add new best (2, 2) is not 8 10 10
INFO:root:XX add new best (2, 2) is not 8 10 10
INFO:root:XX add new best (2, 2) is not 8 10 10
INFO:root:XX add new best (2, 2) is not 8 10 10
INFO:root:XX add new best (2, 2) is not 8 10 10
INFO:root:XX add new best (2, 2) is not 8 10 10
INFO:root:XX add new best (2, 2) is not 8 10 10
INFO:root:XX add new best (2, 2) is not 8 10 10
INFO:root:XX add new best (2, 2) is not 8 10 10
INFO:root:XX add new best (2, 2) is not 8 10 10
INFO:root:XX add new best (2, 2) is not 8 10 10
INFO:root:XX add new best (2, 2) is not 8 10 10
INFO:root:XX add new best (2, 2) is not 8 10 10
INFO:root:XX add new best (2, 2) is not 8 10 10
INFO:root:XX add new best (2, 2) is not 8 10 10
INFO:root:XX add new best (2, 2) is not 8 10 10
INFO:root:XX add new best (2, 2) is not 8 10 10
INFO:root:XX add new best (2, 2) is not 8 10 10
INFO:root:XX add new best (2, 2) is not 8 10 10
INFO:root:XX add new best (2, 2) is not 8 10 10
INFO:root:XX add new best (2, 2) is not 8 10 10
INFO:root:XX add new best (2, 2) is not 8 10 10
INFO:root:XX add new best (2, 2) is not 8 10 10
INFO:root:XX add new best (2, 2) is not 8 10 10
INFO:root:XX add new best (2, 2) is not 8 10 10
INFO:root:XX add new best (2, 2) is not 8 10 10
INFO:root:XX add new best (2, 2) is not 8 10 10
INFO:root:XX add new best (2, 2) is not 8 10 10
INFO:root:XX add new best (2, 2) is not 8 10 10
INFO:root:XX add new best (2, 2) is not 8 10 10
INFO:root:XX add new best (2, 2) is not 8 10 10
INFO:root:XX add new best (2, 2) is not 8 10 10
INFO:root:XX add new best (2, 2) is not 8 10 10
INFO:root:XX add new best (2, 2) is not 8 10 10
INFO:root:XX add new best (2, 2) is not 8 10 10
INFO:root:XX add new best (2, 2) is not 8 10 10
INFO:root:XX add new best (2, 2) is not 8 10 10
INFO:root:XX add new best (2, 2) is not 8 10 10
INFO:root:XX add new best (2, 2) is not 8 10 10
INFO:root:XX add new best (2, 2) is not 8 10 10
INFO:root:XX add new best (2, 2) is not 8 10 10
INFO:root:XX add new best (2, 2) is not 8 10 10
INFO:root:XX add new best (2, 2) is not 8 10 10
INFO:root:XX add new best (2, 2) is not 8 10 10
INFO:root:XX add new best (2, 2) is not 8 10 10
INFO:root:XX add new best (2, 2) is not 8 10 10
INFO:root:XX add new best (2, 2) is not 8 10 10
INFO:root:XX add new best (2, 2) is not 8 10 10
INFO:root:XX add new best (2, 2) is not 8 10 10
INFO:root:XX add new best (2, 2) is not 8 10 10
INFO:root:XX add new best (2, 2) is not 8 10 10
INFO:root:XX add new best (2, 2) is not 8 10 10
INFO:root:XX add new best (2, 2) is not 8 10 10
INFO:root:XX add new best (2, 2) is not 8 10 10
INFO:root:Trace: [(10, [(2, 2) is not 8])]
INFO:root:Trace Quality: [(10, 1)]
INFO:root:Trace Sorted: [(10, 1)]
INFO:root:Finished
INFO:root:Full Trace [(10, [(2, 2) is not 8])]
INFO:root:Trying {'prechopMUSes': True}
INFO:root:Starting Step 1
INFO:root:Current state [[[[5], [2], [9], [4], [1], [6, 8], [7], [6, 8], [3]], [[4, 7, 8], [1, 4, 8], [6], [5, 9], [7, 8, 9], [3], [1, 8], [1, 4, 5, 8, 9], [2]], [[4, 7, 8], [1, 4, 8], [3], [2], [7, 8, 9], [5, 6], [1, 8, 9], [5, 6], [1, 4, 8, 9]], [[4, 8], [5], [2], [3], [8, 9], [1, 4, 8], [1, 8, 9], [7], [6]], [[6], [3], [7], [1, 9], [5], [1, 4, 8], [2], [1, 4, 8, 9], [1, 4, 8, 9]], [[1], [9], [4, 8], [6], [2], [7], [5], [3], [4, 8]], [[3], [7, 8], [1, 5, 8], [1, 5], [6], [9], [4], [2], [1, 7, 8]], [[2], [4, 7], [1, 4, 5], [8], [3], [1, 5], [6], [1, 9], [1, 7, 9]], [[9], [6], [1, 8], [7], [4], [2], [3], [1, 8], [5]]]]
INFO:root:Doing checkSmall1
INFO:root:Getting tiny MUSes, distance 1, for 1 puzlits, 1 repeats
INFO:root:Chunked 1 in [1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
INFO:root:Doing checkSmall2
INFO:root:Getting tiny MUSes, distance 2, for 1 puzlits, 1 repeats
INFO:root:Chunked 1 in [1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
INFO:root:Considering 100 * 1 jobs for minsize=3
INFO:root:Chunked 100 in [9, 9, 9, 9, 8, 8, 8, 8, 8, 8, 8, 8]
INFO:root:Considering 100 * 1 jobs for minsize=4
INFO:root:Chunked 100 in [9, 9, 9, 9, 8, 8, 8, 8, 8, 8, 8, 8]
INFO:root:Considering 100 * 1 jobs for minsize=5
INFO:root:Chunked 100 in [9, 9, 9, 9, 8, 8, 8, 8, 8, 8, 8, 8]
INFO:root:Considering 100 * 1 jobs for minsize=6
INFO:root:Chunked 100 in [9, 9, 9, 9, 8, 8, 8, 8, 8, 8, 8, 8]
INFO:root:Considering 100 * 1 jobs for minsize=7
INFO:root:Chunked 100 in [9, 9, 9, 9, 8, 8, 8, 8, 8, 8, 8, 8]
INFO:root:Considering 100 * 1 jobs for minsize=8
INFO:root:Chunked 100 in [9, 9, 9, 9, 8, 8, 8, 8, 8, 8, 8, 8]
INFO:root:Considering 100 * 1 jobs for minsize=9
INFO:root:Chunked 100 in [9, 9, 9, 9, 8, 8, 8, 8, 8, 8, 8, 8]
INFO:root:XX found first (2, 2) is not 8 10
INFO:root:XX add new best (2, 2) is not 8 10 10
INFO:root:Considering 100 * 1 jobs for minsize=10
INFO:root:Chunked 100 in [9, 9, 9, 9, 8, 8, 8, 8, 8, 8, 8, 8]
INFO:root:XX add new best (2, 2) is not 8 10 10
INFO:root:Trace: [(10, [(2, 2) is not 8])]
INFO:root:Trace Quality: [(10, 1)]
INFO:root:Trace Sorted: [(10, 1)]
INFO:root:Finished
INFO:root:Full Trace [(10, [(2, 2) is not 8])]
INFO:root:Trying {'quarterChopMUS': True}
INFO:root:Starting Step 1
INFO:root:Current state [[[[5], [2], [9], [4], [1], [6, 8], [7], [6, 8], [3]], [[4, 7, 8], [1, 4, 8], [6], [5, 9], [7, 8, 9], [3], [1, 8], [1, 4, 5, 8, 9], [2]], [[4, 7, 8], [1, 4, 8], [3], [2], [7, 8, 9], [5, 6], [1, 8, 9], [5, 6], [1, 4, 8, 9]], [[4, 8], [5], [2], [3], [8, 9], [1, 4, 8], [1, 8, 9], [7], [6]], [[6], [3], [7], [1, 9], [5], [1, 4, 8], [2], [1, 4, 8, 9], [1, 4, 8, 9]], [[1], [9], [4, 8], [6], [2], [7], [5], [3], [4, 8]], [[3], [7, 8], [1, 5, 8], [1, 5], [6], [9], [4], [2], [1, 7, 8]], [[2], [4, 7], [1, 4, 5], [8], [3], [1, 5], [6], [1, 9], [1, 7, 9]], [[9], [6], [1, 8], [7], [4], [2], [3], [1, 8], [5]]]]
INFO:root:Doing checkSmall1
INFO:root:Getting tiny MUSes, distance 1, for 1 puzlits, 1 repeats
INFO:root:Chunked 1 in [1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
INFO:root:Doing checkSmall2
INFO:root:Getting tiny MUSes, distance 2, for 1 puzlits, 1 repeats
INFO:root:Chunked 1 in [1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
INFO:root:Considering 100 * 1 jobs for minsize=3
INFO:root:Chunked 100 in [9, 9, 9, 9, 8, 8, 8, 8, 8, 8, 8, 8]
INFO:root:Considering 100 * 1 jobs for minsize=4
INFO:root:Chunked 100 in [9, 9, 9, 9, 8, 8, 8, 8, 8, 8, 8, 8]
INFO:root:Considering 100 * 1 jobs for minsize=5
INFO:root:Chunked 100 in [9, 9, 9, 9, 8, 8, 8, 8, 8, 8, 8, 8]
INFO:root:Considering 100 * 1 jobs for minsize=6
INFO:root:Chunked 100 in [9, 9, 9, 9, 8, 8, 8, 8, 8, 8, 8, 8]
INFO:root:Considering 100 * 1 jobs for minsize=7
INFO:root:Chunked 100 in [9, 9, 9, 9, 8, 8, 8, 8, 8, 8, 8, 8]
INFO:root:Considering 100 * 1 jobs for minsize=8
INFO:root:Chunked 100 in [9, 9, 9, 9, 8, 8, 8, 8, 8, 8, 8, 8]
INFO:root:Considering 100 * 1 jobs for minsize=9
INFO:root:Chunked 100 in [9, 9, 9, 9, 8, 8, 8, 8, 8, 8, 8, 8]
INFO:root:XX found first (2, 2) is not 8 10
INFO:root:XX add new best (2, 2) is not 8 10 10
INFO:root:XX add new best (2, 2) is not 8 10 10
INFO:root:Considering 100 * 1 jobs for minsize=10
INFO:root:Chunked 100 in [9, 9, 9, 9, 8, 8, 8, 8, 8, 8, 8, 8]
INFO:root:XX add new best (2, 2) is not 8 10 10
INFO:root:XX add new best (2, 2) is not 8 10 10
INFO:root:Trace: [(10, [(2, 2) is not 8])]
INFO:root:Trace Quality: [(10, 1)]
INFO:root:Trace Sorted: [(10, 1)]
INFO:root:Finished
INFO:root:Full Trace [(10, [(2, 2) is not 8])]
INFO:root:Trying {'minPrecheckMUS': True}
INFO:root:Starting Step 1
INFO:root:Current state [[[[5], [2], [9], [4], [1], [6, 8], [7], [6, 8], [3]], [[4, 7, 8], [1, 4, 8], [6], [5, 9], [7, 8, 9], [3], [1, 8], [1, 4, 5, 8, 9], [2]], [[4, 7, 8], [1, 4, 8], [3], [2], [7, 8, 9], [5, 6], [1, 8, 9], [5, 6], [1, 4, 8, 9]], [[4, 8], [5], [2], [3], [8, 9], [1, 4, 8], [1, 8, 9], [7], [6]], [[6], [3], [7], [1, 9], [5], [1, 4, 8], [2], [1, 4, 8, 9], [1, 4, 8, 9]], [[1], [9], [4, 8], [6], [2], [7], [5], [3], [4, 8]], [[3], [7, 8], [1, 5, 8], [1, 5], [6], [9], [4], [2], [1, 7, 8]], [[2], [4, 7], [1, 4, 5], [8], [3], [1, 5], [6], [1, 9], [1, 7, 9]], [[9], [6], [1, 8], [7], [4], [2], [3], [1, 8], [5]]]]
INFO:root:Doing checkSmall1
INFO:root:Getting tiny MUSes, distance 1, for 1 puzlits, 1 repeats
INFO:root:Chunked 1 in [1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
INFO:root:Doing checkSmall2
INFO:root:Getting tiny MUSes, distance 2, for 1 puzlits, 1 repeats
INFO:root:Chunked 1 in [1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
INFO:root:Considering 100 * 1 jobs for minsize=3
INFO:root:Chunked 100 in [9, 9, 9, 9, 8, 8, 8, 8, 8, 8, 8, 8]
INFO:root:Considering 100 * 1 jobs for minsize=4
INFO:root:Chunked 100 in [9, 9, 9, 9, 8, 8, 8, 8, 8, 8, 8, 8]
INFO:root:Considering 100 * 1 jobs for minsize=5
INFO:root:Chunked 100 in [9, 9, 9, 9, 8, 8, 8, 8, 8, 8, 8, 8]
INFO:root:Considering 100 * 1 jobs for minsize=6
INFO:root:Chunked 100 in [9, 9, 9, 9, 8, 8, 8, 8, 8, 8, 8, 8]
INFO:root:Considering 100 * 1 jobs for minsize=7
INFO:root:Chunked 100 in [9, 9, 9, 9, 8, 8, 8, 8, 8, 8, 8, 8]
INFO:root:Considering 100 * 1 jobs for minsize=8
INFO:root:Chunked 100 in [9, 9, 9, 9, 8, 8, 8, 8, 8, 8, 8, 8]
INFO:root:Considering 100 * 1 jobs for minsize=9
INFO:root:Chunked 100 in [9, 9, 9, 9, 8, 8, 8, 8, 8, 8, 8, 8]
INFO:root:Considering 100 * 1 jobs for minsize=10
INFO:root:Chunked 100 in [9, 9, 9, 9, 8, 8, 8, 8, 8, 8, 8, 8]
INFO:root:XX found first (2, 2) is not 8 10
INFO:root:Trace: [(10, [(2, 2) is not 8])]
INFO:root:Trace Quality: [(10, 1)]
INFO:root:Trace Sorted: [(10, 1)]
INFO:root:Finished
INFO:root:Full Trace [(10, [(2, 2) is not 8])]
INFO:root:Trying {'gallopingMUSes': True}
INFO:root:Starting Step 1
INFO:root:Current state [[[[5], [2], [9], [4], [1], [6, 8], [7], [6, 8], [3]], [[4, 7, 8], [1, 4, 8], [6], [5, 9], [7, 8, 9], [3], [1, 8], [1, 4, 5, 8, 9], [2]], [[4, 7, 8], [1, 4, 8], [3], [2], [7, 8, 9], [5, 6], [1, 8, 9], [5, 6], [1, 4, 8, 9]], [[4, 8], [5], [2], [3], [8, 9], [1, 4, 8], [1, 8, 9], [7], [6]], [[6], [3], [7], [1, 9], [5], [1, 4, 8], [2], [1, 4, 8, 9], [1, 4, 8, 9]], [[1], [9], [4, 8], [6], [2], [7], [5], [3], [4, 8]], [[3], [7, 8], [1, 5, 8], [1, 5], [6], [9], [4], [2], [1, 7, 8]], [[2], [4, 7], [1, 4, 5], [8], [3], [1, 5], [6], [1, 9], [1, 7, 9]], [[9], [6], [1, 8], [7], [4], [2], [3], [1, 8], [5]]]]
INFO:root:Doing checkSmall1
INFO:root:Getting tiny MUSes, distance 1, for 1 puzlits, 1 repeats
INFO:root:Chunked 1 in [1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
INFO:root:Doing checkSmall2
INFO:root:Getting tiny MUSes, distance 2, for 1 puzlits, 1 repeats
INFO:root:Chunked 1 in [1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
INFO:root:Considering 100 * 1 jobs for minsize=3
INFO:root:Chunked 100 in [9, 9, 9, 9, 8, 8, 8, 8, 8, 8, 8, 8]
INFO:root:Considering 100 * 1 jobs for minsize=4
INFO:root:Chunked 100 in [9, 9, 9, 9, 8, 8, 8, 8, 8, 8, 8, 8]
INFO:root:Considering 100 * 1 jobs for minsize=5
INFO:root:Chunked 100 in [9, 9, 9, 9, 8, 8, 8, 8, 8, 8, 8, 8]
INFO:root:Considering 100 * 1 jobs for minsize=6
INFO:root:Chunked 100 in [9, 9, 9, 9, 8, 8, 8, 8, 8, 8, 8, 8]
INFO:root:Considering 100 * 1 jobs for minsize=7
INFO:root:Chunked 100 in [9, 9, 9, 9, 8, 8, 8, 8, 8, 8, 8, 8]
INFO:root:Considering 100 * 1 jobs for minsize=8
INFO:root:Chunked 100 in [9, 9, 9, 9, 8, 8, 8, 8, 8, 8, 8, 8]
INFO:root:Considering 100 * 1 jobs for minsize=9
INFO:root:Chunked 100 in [9, 9, 9, 9, 8, 8, 8, 8, 8, 8, 8, 8]
INFO:root:Considering 100 * 1 jobs for minsize=10
INFO:root:Chunked 100 in [9, 9, 9, 9, 8, 8, 8, 8, 8, 8, 8, 8]
INFO:root:XX found first (2, 2) is not 8 10
INFO:root:Trace: [(10, [(2, 2) is not 8])]
INFO:root:Trace Quality: [(10, 1)]
INFO:root:Trace Sorted: [(10, 1)]
INFO:root:Finished
INFO:root:Full Trace [(10, [(2, 2) is not 8])]
INFO:root:Trying {'minPrecheckStepsMUS': True}
INFO:root:Starting Step 1
INFO:root:Current state [[[[5], [2], [9], [4], [1], [6, 8], [7], [6, 8], [3]], [[4, 7, 8], [1, 4, 8], [6], [5, 9], [7, 8, 9], [3], [1, 8], [1, 4, 5, 8, 9], [2]], [[4, 7, 8], [1, 4, 8], [3], [2], [7, 8, 9], [5, 6], [1, 8, 9], [5, 6], [1, 4, 8, 9]], [[4, 8], [5], [2], [3], [8, 9], [1, 4, 8], [1, 8, 9], [7], [6]], [[6], [3], [7], [1, 9], [5], [1, 4, 8], [2], [1, 4, 8, 9], [1, 4, 8, 9]], [[1], [9], [4, 8], [6], [2], [7], [5], [3], [4, 8]], [[3], [7, 8], [1, 5, 8], [1, 5], [6], [9], [4], [2], [1, 7, 8]], [[2], [4, 7], [1, 4, 5], [8], [3], [1, 5], [6], [1, 9], [1, 7, 9]], [[9], [6], [1, 8], [7], [4], [2], [3], [1, 8], [5]]]]
INFO:root:Doing checkSmall1
INFO:root:Getting tiny MUSes, distance 1, for 1 puzlits, 1 repeats
INFO:root:Chunked 1 in [1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
INFO:root:Doing checkSmall2
INFO:root:Getting tiny MUSes, distance 2, for 1 puzlits, 1 repeats
INFO:root:Chunked 1 in [1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
INFO:root:Considering 100 * 1 jobs for minsize=3
INFO:root:Chunked 100 in [9, 9, 9, 9, 8, 8, 8, 8, 8, 8, 8, 8]
INFO:root:Considering 100 * 1 jobs for minsize=4
INFO:root:Chunked 100 in [9, 9, 9, 9, 8, 8, 8, 8, 8, 8, 8, 8]
INFO:root:Considering 100 * 1 jobs for minsize=5
INFO:root:Chunked 100 in [9, 9, 9, 9, 8, 8, 8, 8, 8, 8, 8, 8]
INFO:root:Considering 100 * 1 jobs for minsize=6
INFO:root:Chunked 100 in [9, 9, 9, 9, 8, 8, 8, 8, 8, 8, 8, 8]
INFO:root:Considering 100 * 1 jobs for minsize=7
INFO:root:Chunked 100 in [9, 9, 9, 9, 8, 8, 8, 8, 8, 8, 8, 8]
INFO:root:Considering 100 * 1 jobs for minsize=8
INFO:root:Chunked 100 in [9, 9, 9, 9, 8, 8, 8, 8, 8, 8, 8, 8]
INFO:root:Considering 100 * 1 jobs for minsize=9
INFO:root:Chunked 100 in [9, 9, 9, 9, 8, 8, 8, 8, 8, 8, 8, 8]
INFO:root:Considering 100 * 1 jobs for minsize=10
INFO:root:Chunked 100 in [9, 9, 9, 9, 8, 8, 8, 8, 8, 8, 8, 8]
INFO:root:XX found first (2, 2) is not 8 10
INFO:root:Trace: [(10, [(2, 2) is not 8])]
INFO:root:Trace Quality: [(10, 1)]
INFO:root:Trace Sorted: [(10, 1)]
INFO:root:Finished
INFO:root:Full Trace [(10, [(2, 2) is not 8])]
INFO:root:Trying {'gallopingMUSes': True, 'minPrecheckMUS': True}
INFO:root:Starting Step 1
INFO:root:Current state [[[[5], [2], [9], [4], [1], [6, 8], [7], [6, 8], [3]], [[4, 7, 8], [1, 4, 8], [6], [5, 9], [7, 8, 9], [3], [1, 8], [1, 4, 5, 8, 9], [2]], [[4, 7, 8], [1, 4, 8], [3], [2], [7, 8, 9], [5, 6], [1, 8, 9], [5, 6], [1, 4, 8, 9]], [[4, 8], [5], [2], [3], [8, 9], [1, 4, 8], [1, 8, 9], [7], [6]], [[6], [3], [7], [1, 9], [5], [1, 4, 8], [2], [1, 4, 8, 9], [1, 4, 8, 9]], [[1], [9], [4, 8], [6], [2], [7], [5], [3], [4, 8]], [[3], [7, 8], [1, 5, 8], [1, 5], [6], [9], [4], [2], [1, 7, 8]], [[2], [4, 7], [1, 4, 5], [8], [3], [1, 5], [6], [1, 9], [1, 7, 9]], [[9], [6], [1, 8], [7], [4], [2], [3], [1, 8], [5]]]]
INFO:root:Doing checkSmall1
INFO:root:Getting tiny MUSes, distance 1, for 1 puzlits, 1 repeats
INFO:root:Chunked 1 in [1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
INFO:root:Doing checkSmall2
INFO:root:Getting tiny MUSes, distance 2, for 1 puzlits, 1 repeats
INFO:root:Chunked 1 in [1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
INFO:root:Considering 100 * 1 jobs for minsize=3
INFO:root:Chunked 100 in [9, 9, 9, 9, 8, 8, 8, 8, 8, 8, 8, 8]
INFO:root:Considering 100 * 1 jobs for minsize=4
INFO:root:Chunked 100 in [9, 9, 9, 9, 8, 8, 8, 8, 8, 8, 8, 8]
INFO:root:Considering 100 * 1 jobs for minsize=5
INFO:root:Chunked 100 in [9, 9, 9, 9, 8, 8, 8, 8, 8, 8, 8, 8]
INFO:root:Considering 100 * 1 jobs for minsize=6
INFO:root:Chunked 100 in [9, 9, 9, 9, 8, 8, 8, 8, 8, 8, 8, 8]
INFO:root:Considering 100 * 1 jobs for minsize=7
INFO:root:Chunked 100 in [9, 9, 9, 9, 8, 8, 8, 8, 8, 8, 8, 8]
INFO:root:Considering 100 * 1 jobs for minsize=8
INFO:root:Chunked 100 in [9, 9, 9, 9, 8, 8, 8, 8, 8, 8, 8, 8]
INFO:root:Considering 100 * 1 jobs for minsize=9
INFO:root:Chunked 100 in [9, 9, 9, 9, 8, 8, 8, 8, 8, 8, 8, 8]
INFO:root:Considering 100 * 1 jobs for minsize=10
INFO:root:Chunked 100 in [9, 9, 9, 9, 8, 8, 8, 8, 8, 8, 8, 8]
INFO:root:XX found first (2, 2) is not 8 10
INFO:root:Trace: [(10, [(2, 2) is not 8])]
INFO:root:Trace Quality: [(10, 1)]
INFO:root:Trace Sorted: [(10, 1)]
INFO:root:Finished
INFO:root:Full Trace [(10, [(2, 2) is not 8])]
INFO:root:Trying {}
INFO:root:Starting Step 1
INFO:root:Current state [[[[9], [2], [6], [3, 4, 5, 8], [4, 8], [3, 5, 7, 8], [1], [5, 7], [5, 7, 8]], [[5], [3], [7], [6, 8, 9], [1], [6, 8, 9], [4], [2], [8, 9]], [[8], [4], [1], [2, 5, 9], [5, 9], [2, 5, 7, 9], [6], [5, 7, 9], [3]], [[2], [5], [9], [7], [3], [4], [8], [1], [6]], [[7], [1], [4], [5, 8, 9], [6], [5, 8, 9], [2, 5, 9], [3], [2, 5, 9]], [[3], [6], [8], [1], [2], [5, 9], [5, 7, 9], [4], [5, 7, 9]], [[1], [7, 9], [2], [3, 6], [5, 9], [3, 6], [5, 7, 9], [8], [4]], [[4], [8], [5], [2, 9], [7], [1], [3], [6], [2, 9]], [[6], [7, 9], [3], [2, 4, 5, 8, 9], [4, 8], [2, 5, 8, 9], [2, 5, 7, 9], [5, 7, 9], [1]]]]
INFO:root:Doing checkSmall1
INFO:root:Getting tiny MUSes, distance 1, for 1 puzlits, 1 repeats
INFO:root:Chunked 1 in [1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
INFO:root:Doing checkSmall2
INFO:root:Getting tiny MUSes, distance 2, for 1 puzlits, 1 repeats
INFO:root:Chunked 1 in [1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
INFO:root:Considering 100 * 1 jobs for minsize=3
INFO:root:Chunked 100 in [9, 9, 9, 9, 8, 8, 8, 8, 8, 8, 8, 8]
INFO:root:Considering 100 * 1 jobs for minsize=4
INFO:root:Chunked 100 in [9, 9, 9, 9, 8, 8, 8, 8, 8, 8, 8, 8]
INFO:root:Considering 100 * 1 jobs for minsize=5
INFO:root:Chunked 100 in [9, 9, 9, 9, 8, 8, 8, 8, 8, 8, 8, 8]
INFO:root:Considering 100 * 1 jobs for minsize=6
INFO:root:Chunked 100 in [9, 9, 9, 9, 8, 8, 8, 8, 8, 8, 8, 8]
INFO:root:XX found first (7, 7) is not 9 7
INFO:root:XX add new best (7, 7) is not 9 7 7
INFO:root:XX add new best (7, 7) is not 9 7 7
INFO:root:XX add new best (7, 7) is not 9 7 7
INFO:root:XX add new best (7, 7) is not 9 7 7
INFO:root:XX add new best (7, 7) is not 9 7 7
INFO:root:XX add new best (7, 7) is not 9 7 7
INFO:root:XX add new best (7, 7) is not 9 7 7
INFO:root:XX add new best (7, 7) is not 9 7 7
INFO:root:XX add new best (7, 7) is not 9 7 7
INFO:root:XX add new best (7, 7) is not 9 7 7
INFO:root:XX add new best (7, 7) is not 9 7 7
INFO:root:XX add new best (7, 7) is not 9 7 7
INFO:root:XX add new best (7, 7) is not 9 7 7
INFO:root:XX add new best (7, 7) is not 9 7 7
INFO:root:XX add new best (7, 7) is not 9 7 7
INFO:root:XX add new best (7, 7) is not 9 7 7
INFO:root:XX add new best (7, 7) is not 9 7 7
INFO:root:XX add new best (7, 7) is not 9 7 7
INFO:root:XX add new best (7, 7) is not 9 7 7
INFO:root:XX add new best (7, 7) is not 9 7 7
INFO:root:XX add new best (7, 7) is not 9 7 7
INFO:root:XX add new best (7, 7) is not 9 7 7
INFO:root:XX add new best (7, 7) is not 9 7 7
INFO:root:XX add new best (7, 7) is not 9 7 7
INFO:root:XX add new best (7, 7) is not 9 7 7
INFO:root:XX add new best (7, 7) is not 9 7 7
INFO:root:XX add new best (7, 7) is not 9 7 7
INFO:root:XX add new best (7, 7) is not 9 7 7
INFO:root:XX add new best (7, 7) is not 9 7 7
INFO:root:XX add new best (7, 7) is not 9 7 7
INFO:root:XX add new best (7, 7) is not 9 7 7
INFO:root:XX add new best (7, 7) is not 9 7 7
INFO:root:XX add new best (7, 7) is not 9 7 7
INFO:root:XX add new best (7, 7) is not 9 7 7
INFO:root:XX add new best (7, 7) is not 9 7 7
INFO:root:XX add new best (7, 7) is not 9 7 7
INFO:root:XX add new best (7, 7) is not 9 7 7
INFO:root:XX add new best (7, 7) is not 9 7 7
INFO:root:XX add new best (7, 7) is not 9 7 7
INFO:root:XX add new best (7, 7) is not 9 7 7
INFO:root:XX add new best (7, 7) is not 9 7 7
INFO:root:XX add new best (7, 7) is not 9 7 7
INFO:root:XX add new best (7, 7) is not 9 7 7
INFO:root:XX add new best (7, 7) is not 9 7 7
INFO:root:XX add new best (7, 7) is not 9 7 7
INFO:root:XX add new best (7, 7) is not 9 7 7
INFO:root:XX add new best (7, 7) is not 9 7 7
INFO:root:XX add new best (7, 7) is not 9 7 7
INFO:root:XX add new best (7, 7) is not 9 7 7
INFO:root:XX add new best (7, 7) is not 9 7 7
INFO:root:XX add new best (7, 7) is not 9 7 7
INFO:root:XX add new best (7, 7) is not 9 7 7
INFO:root:XX add new best (7, 7) is not 9 7 7
INFO:root:XX add new best (7, 7) is not 9 7 7
INFO:root:XX add new best (7, 7) is not 9 7 7
INFO:root:XX add new best (7, 7) is not 9 7 7
INFO:root:XX add new best (7, 7) is not 9 7 7
INFO:root:XX add new best (7, 7) is not 9 7 7
INFO:root:XX add new best (7, 7) is not 9 7 7
INFO:root:XX add new best (7, 7) is not 9 7 7
INFO:root:XX add new best (7, 7) is not 9 7 7
INFO:root:XX add new best (7, 7) is not 9 7 7
INFO:root:XX add new best (7, 7) is not 9 7 7
INFO:root:XX add new best (7, 7) is not 9 7 7
INFO:root:XX add new best (7, 7) is not 9 7 7
INFO:root:XX add new best (7, 7) is not 9 7 7
INFO:root:XX add new best (7, 7) is not 9 7 7
INFO:root:XX add new best (7, 7) is not 9 7 7
INFO:root:XX add new best (7, 7) is not 9 7 7
INFO:root:XX add new best (7, 7) is not 9 7 7
INFO:root:XX add new best (7, 7) is not 9 7 7
INFO:root:XX add new best (7, 7) is not 9 7 7
INFO:root:XX add new best (7, 7) is not 9 7 7
INFO:root:XX add new best (7, 7) is not 9 7 7
INFO:root:XX add new best (7, 7) is not 9 7 7
INFO:root:XX add new best (7, 7) is not 9 7 7
INFO:root:XX add new best (7, 7) is not 9 7 7
INFO:root:XX add new best (7, 7) is not 9 7 7
INFO:root:XX add new best (7, 7) is not 9 7 7
INFO:root:XX add new best (7, 7) is not 9 7 7
INFO:root:XX add new best (7, 7) is not 9 7 7
INFO:root:XX add new best (7, 7) is not 9 7 7
INFO:root:XX add new best (7, 7) is not 9 7 7
INFO:root:XX add new best (7, 7) is not 9 7 7
INFO:root:XX add new best (7, 7) is not 9 7 7
INFO:root:XX add new best (7, 7) is not 9 7 7
INFO:root:XX add new best (7, 7) is not 9 7 7
INFO:root:XX add new best (7, 7) is not 9 7 7
INFO:root:XX add new best (7, 7) is not 9 7 7
INFO:root:XX add new best (7, 7) is not 9 7 7
INFO:root:XX add new best (7, 7) is not 9 7 7
INFO:root:XX add new best (7, 7) is not 9 7 7
INFO:root:XX add new best (7, 7) is not 9 7 7
INFO:root:XX add new best (7, 7) is not 9 7 7
INFO:root:XX add new best (7, 7) is not 9 7 7
INFO:root:XX add new best (7, 7) is not 9 7 7
INFO:root:XX add new best (7, 7) is not 9 7 7
INFO:root:XX add new best (7, 7) is not 9 7 7
INFO:root:XX add new best (7, 7) is not 9 7 7
INFO:root:Considering 100 * 1 jobs for minsize=7
INFO:root:Chunked 100 in [9, 9, 9, 9, 8, 8, 8, 8, 8, 8, 8, 8]
INFO:root:XX add new best (7, 7) is not 9 7 7
INFO:root:XX add new best (7, 7) is not 9 7 7
INFO:root:XX add new best (7, 7) is not 9 7 7
INFO:root:XX add new best (7, 7) is not 9 7 7
INFO:root:XX add new best (7, 7) is not 9 7 7
INFO:root:XX add new best (7, 7) is not 9 7 7
INFO:root:XX add new best (7, 7) is not 9 7 7
INFO:root:XX add new best (7, 7) is not 9 7 7
INFO:root:XX add new best (7, 7) is not 9 7 7
INFO:root:XX add new best (7, 7) is not 9 7 7
INFO:root:XX add new best (7, 7) is not 9 7 7
INFO:root:XX add new best (7, 7) is not 9 7 7
INFO:root:XX add new best (7, 7) is not 9 7 7
INFO:root:XX add new best (7, 7) is not 9 7 7
INFO:root:XX add new best (7, 7) is not 9 7 7
INFO:root:XX add new best (7, 7) is not 9 7 7
INFO:root:XX add new best (7, 7) is not 9 7 7
INFO:root:XX add new best (7, 7) is not 9 7 7
INFO:root:XX add new best (7, 7) is not 9 7 7
INFO:root:XX add new best (7, 7) is not 9 7 7
INFO:root:XX add new best (7, 7) is not 9 7 7
INFO:root:XX add new best (7, 7) is not 9 7 7
INFO:root:XX add new best (7, 7) is not 9 7 7
INFO:root:XX add new best (7, 7) is not 9 7 7
INFO:root:XX add new best (7, 7) is not 9 7 7
INFO:root:XX add new best (7, 7) is not 9 7 7
INFO:root:XX add new best (7, 7) is not 9 7 7
INFO:root:XX add new best (7, 7) is not 9 7 7
INFO:root:XX add new best (7, 7) is not 9 7 7
INFO:root:XX add new best (7, 7) is not 9 7 7
INFO:root:XX add new best (7, 7) is not 9 7 7
INFO:root:XX add new best (7, 7) is not 9 7 7
INFO:root:XX add new best (7, 7) is not 9 7 7
INFO:root:XX add new best (7, 7) is not 9 7 7
INFO:root:XX add new best (7, 7) is not 9 7 7
INFO:root:XX add new best (7, 7) is not 9 7 7
INFO:root:XX add new best (7, 7) is not 9 7 7
INFO:root:XX add new best (7, 7) is not 9 7 7
INFO:root:XX add new best (7, 7) is not 9 7 7
INFO:root:XX add new best (7, 7) is not 9 7 7
INFO:root:XX add new best (7, 7) is not 9 7 7
INFO:root:XX add new best (7, 7) is not 9 7 7
INFO:root:XX add new best (7, 7) is not 9 7 7
INFO:root:XX add new best (7, 7) is not 9 7 7
INFO:root:XX add new best (7, 7) is not 9 7 7
INFO:root:XX add new best (7, 7) is not 9 7 7
INFO:root:XX add new best (7, 7) is not 9 7 7
INFO:root:XX add new best (7, 7) is not 9 7 7
INFO:root:XX add new best (7, 7) is not 9 7 7
INFO:root:XX add new best (7, 7) is not 9 7 7
INFO:root:XX add new best (7, 7) is not 9 7 7
INFO:root:XX add new best (7, 7) is not 9 7 7
INFO:root:XX add new best (7, 7) is not 9 7 7
INFO:root:XX add new best (7, 7) is not 9 7 7
INFO:root:XX add new best (7, 7) is not 9 7 7
INFO:root:XX add new best (7, 7) is not 9 7 7
INFO:root:XX add new best (7, 7) is not 9 7 7
INFO:root:XX add new best (7, 7) is not 9 7 7
INFO:root:XX add new best (7, 7) is not 9 7 7
INFO:root:XX add new best (7, 7) is not 9 7 7
INFO:root:XX add new best (7, 7) is not 9 7 7
INFO:root:XX add new best (7, 7) is not 9 7 7
INFO:root:XX add new best (7, 7) is not 9 7 7
INFO:root:XX add new best (7, 7) is not 9 7 7
INFO:root:XX add new best (7, 7) is not 9 7 7
INFO:root:XX add new best (7, 7) is not 9 7 7
INFO:root:XX add new best (7, 7) is not 9 7 7
INFO:root:XX add new best (7, 7) is not 9 7 7
INFO:root:XX add new best (7, 7) is not 9 7 7
INFO:root:XX add new best (7, 7) is not 9 7 7
INFO:root:XX add new best (7, 7) is not 9 7 7
INFO:root:XX add new best (7, 7) is not 9 7 7
INFO:root:XX add new best (7, 7) is not 9 7 7
INFO:root:XX add new best (7, 7) is not 9 7 7
INFO:root:XX add new best (7, 7) is not 9 7 7
INFO:root:XX add new best (7, 7) is not 9 7 7
INFO:root:XX add new best (7, 7) is not 9 7 7
INFO:root:XX add new best (7, 7) is not 9 7 7
INFO:root:XX add new best (7, 7) is not 9 7 7
INFO:root:XX add new best (7, 7) is not 9 7 7
INFO:root:XX add new best (7, 7) is not 9 7 7
INFO:root:XX add new best (7, 7) is not 9 7 7
INFO:root:XX add new best (7, 7) is not 9 7 7
INFO:root:XX add new best (7, 7) is not 9 7 7
INFO:root:XX add new best (7, 7) is not 9 7 7
INFO:root:XX add new best (7, 7) is not 9 7 7
INFO:root:XX add new best (7, 7) is not 9 7 7
INFO:root:XX add new best (7, 7) is not 9 7 7
INFO:root:XX add new best (7, 7) is not 9 7 7
INFO:root:XX add new best (7, 7) is not 9 7 7
INFO:root:XX add new best (7, 7) is not 9 7 7
INFO:root:XX add new best (7, 7) is not 9 7 7
INFO:root:XX add new best (7, 7) is not 9 7 7
INFO:root:XX add new best (7, 7) is not 9 7 7
INFO:root:XX add new best (7, 7) is not 9 7 7
INFO:root:XX add new best (7, 7) is not 9 7 7
INFO:root:XX add new best (7, 7) is not 9 7 7
INFO:root:XX add new best (7, 7) is not 9 7 7
INFO:root:XX add new best (7, 7) is not 9 7 7
INFO:root:XX add new best (7, 7) is not 9 7 7
INFO:root:Trace: [(7, [(7, 7) is not 9])]
INFO:root:Trace Quality: [(7, 1)]
INFO:root:Trace Sorted: [(7, 1)]
INFO:root:Finished
INFO:root:Full Trace [(7, [(7, 7) is not 9])]
INFO:root:Trying {'prechopMUSes': True}
INFO:root:Starting Step 1
INFO:root:Current state [[[[9], [2], [6], [3, 4, 5, 8], [4, 8], [3, 5, 7, 8], [1], [5, 7], [5, 7, 8]], [[5], [3], [7], [6, 8, 9], [1], [6, 8, 9], [4], [2], [8, 9]], [[8], [4], [1], [2, 5, 9], [5, 9], [2, 5, 7, 9], [6], [5, 7, 9], [3]], [[2], [5], [9], [7], [3], [4], [8], [1], [6]], [[7], [1], [4], [5, 8, 9], [6], [5, 8, 9], [2, 5, 9], [3], [2, 5, 9]], [[3], [6], [8], [1], [2], [5, 9], [5, 7, 9], [4], [5, 7, 9]], [[1], [7, 9], [2], [3, 6], [5, 9], [3, 6], [5, 7, 9], [8], [4]], [[4], [8], [5], [2, 9], [7], [1], [3], [6], [2, 9]], [[6], [7, 9], [3], [2, 4, 5, 8, 9], [4, 8], [2, 5, 8, 9], [2, 5, 7, 9], [5, 7, 9], [1]]]]
INFO:root:Doing checkSmall1
INFO:root:Getting tiny MUSes, distance 1, for 1 puzlits, 1 repeats
INFO:root:Chunked 1 in [1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
INFO:root:Doing checkSmall2
INFO:root:Getting tiny MUSes, distance 2, for 1 puzlits, 1 repeats
INFO:root:Chunked 1 in [1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
INFO:root:Considering 100 * 1 jobs for minsize=3
INFO:root:Chunked 100 in [9, 9, 9, 9, 8, 8, 8, 8, 8, 8, 8, 8]
INFO:root:Considering 100 * 1 jobs for minsize=4
INFO:root:Chunked 100 in [9, 9, 9, 9, 8, 8, 8, 8, 8, 8, 8, 8]
INFO:root:XX found first (7, 7) is not 9 5
INFO:root:XX add new best (7, 7) is not 9 5 5
INFO:root:XX add new best (7, 7) is not 9 5 5
INFO:root:XX add new best (7, 7) is not 9 5 5
INFO:root:XX add new best (7, 7) is not 9 5 5
INFO:root:XX add new best (7, 7) is not 9 5 5
INFO:root:XX add new best (7, 7) is not 9 5 5
INFO:root:XX add new best (7, 7) is not 9 5 5
INFO:root:XX add new best (7, 7) is not 9 5 5
INFO:root:XX add new best (7, 7) is not 9 5 5
INFO:root:XX add new best (7, 7) is not 9 5 5
INFO:root:XX add new best (7, 7) is not 9 5 5
INFO:root:XX add new best (7, 7) is not 9 5 5
INFO:root:XX add new best (7, 7) is not 9 5 5
INFO:root:XX add new best (7, 7) is not 9 5 5
INFO:root:XX add new best (7, 7) is not 9 5 5
INFO:root:Considering 100 * 1 jobs for minsize=5
INFO:root:Chunked 100 in [9, 9, 9, 9, 8, 8, 8, 8, 8, 8, 8, 8]
INFO:root:XX add new best (7, 7) is not 9 5 5
INFO:root:XX add new best (7, 7) is not 9 5 5
INFO:root:XX add new best (7, 7) is not 9 5 5
INFO:root:XX add new best (7, 7) is not 9 5 5
INFO:root:XX add new best (7, 7) is not 9 5 5
INFO:root:XX add new best (7, 7) is not 9 5 5
INFO:root:XX add new best (7, 7) is not 9 5 5
INFO:root:XX add new best (7, 7) is not 9 5 5
INFO:root:XX add new best (7, 7) is not 9 5 5
INFO:root:XX add new best (7, 7) is not 9 5 5
INFO:root:XX add new best (7, 7) is not 9 5 5
INFO:root:XX add new best (7, 7) is not 9 5 5
INFO:root:Trace: [(5, [(7, 7) is not 9])]
INFO:root:Trace Quality: [(5, 1)]
INFO:root:Trace Sorted: [(5, 1)]
INFO:root:Finished
INFO:root:Full Trace [(5, [(7, 7) is not 9])]
INFO:root:Trying {'quarterChopMUS': True}
INFO:root:Starting Step 1
INFO:root:Current state [[[[9], [2], [6], [3, 4, 5, 8], [4, 8], [3, 5, 7, 8], [1], [5, 7], [5, 7, 8]], [[5], [3], [7], [6, 8, 9], [1], [6, 8, 9], [4], [2], [8, 9]], [[8], [4], [1], [2, 5, 9], [5, 9], [2, 5, 7, 9], [6], [5, 7, 9], [3]], [[2], [5], [9], [7], [3], [4], [8], [1], [6]], [[7], [1], [4], [5, 8, 9], [6], [5, 8, 9], [2, 5, 9], [3], [2, 5, 9]], [[3], [6], [8], [1], [2], [5, 9], [5, 7, 9], [4], [5, 7, 9]], [[1], [7, 9], [2], [3, 6], [5, 9], [3, 6], [5, 7, 9], [8], [4]], [[4], [8], [5], [2, 9], [7], [1], [3], [6], [2, 9]], [[6], [7, 9], [3], [2, 4, 5, 8, 9], [4, 8], [2, 5, 8, 9], [2, 5, 7, 9], [5, 7, 9], [1]]]]
INFO:root:Doing checkSmall1
INFO:root:Getting tiny MUSes, distance 1, for 1 puzlits, 1 repeats
INFO:root:Chunked 1 in [1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
INFO:root:Doing checkSmall2
INFO:root:Getting tiny MUSes, distance 2, for 1 puzlits, 1 repeats
INFO:root:Chunked 1 in [1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
INFO:root:Considering 100 * 1 jobs for minsize=3
INFO:root:Chunked 100 in [9, 9, 9, 9, 8, 8, 8, 8, 8, 8, 8, 8]
INFO:root:Considering 100 * 1 jobs for minsize=4
INFO:root:Chunked 100 in [9, 9, 9, 9, 8, 8, 8, 8, 8, 8, 8, 8]
INFO:root:XX found first (7, 7) is not 9 5
INFO:root:XX add new best (7, 7) is not 9 5 5
INFO:root:XX add new best (7, 7) is not 9 5 5
INFO:root:XX add new best (7, 7) is not 9 5 5
INFO:root:XX add new best (7, 7) is not 9 5 5
INFO:root:XX add new best (7, 7) is not 9 5 5
INFO:root:XX add new best (7, 7) is not 9 5 5
INFO:root:XX add new best (7, 7) is not 9 5 5
INFO:root:XX add new best (7, 7) is not 9 5 5
INFO:root:XX add new best (7, 7) is not 9 5 5
INFO:root:XX add new best (7, 7) is not 9 5 5
INFO:root:XX add new best (7, 7) is not 9 5 5
INFO:root:XX add new best (7, 7) is not 9 5 5
INFO:root:XX add new best (7, 7) is not 9 5 5
INFO:root:XX add new best (7, 7) is not 9 5 5
INFO:root:Considering 100 * 1 jobs for minsize=5
INFO:root:Chunked 100 in [9, 9, 9, 9, 8, 8, 8, 8, 8, 8, 8, 8]
INFO:root:XX add new best (7, 7) is not 9 5 5
INFO:root:XX add new best (7, 7) is not 9 5 5
INFO:root:XX add new best (7, 7) is not 9 5 5
INFO:root:XX add new best (7, 7) is not 9 5 5
INFO:root:XX add new best (7, 7) is not 9 5 5
INFO:root:XX add new best (7, 7) is not 9 5 5
INFO:root:XX add new best (7, 7) is not 9 5 5
INFO:root:XX add new best (7, 7) is not 9 5 5
INFO:root:XX add new best (7, 7) is not 9 5 5
INFO:root:XX add new best (7, 7) is not 9 5 5
INFO:root:XX add new best (7, 7) is not 9 5 5
INFO:root:XX add new best (7, 7) is not 9 5 5
INFO:root:Trace: [(5, [(7, 7) is not 9])]
INFO:root:Trace Quality: [(5, 1)]
INFO:root:Trace Sorted: [(5, 1)]
INFO:root:Finished
INFO:root:Full Trace [(5, [(7, 7) is not 9])]
INFO:root:Trying {'minPrecheckMUS': True}
INFO:root:Starting Step 1
INFO:root:Current state [[[[9], [2], [6], [3, 4, 5, 8], [4, 8], [3, 5, 7, 8], [1], [5, 7], [5, 7, 8]], [[5], [3], [7], [6, 8, 9], [1], [6, 8, 9], [4], [2], [8, 9]], [[8], [4], [1], [2, 5, 9], [5, 9], [2, 5, 7, 9], [6], [5, 7, 9], [3]], [[2], [5], [9], [7], [3], [4], [8], [1], [6]], [[7], [1], [4], [5, 8, 9], [6], [5, 8, 9], [2, 5, 9], [3], [2, 5, 9]], [[3], [6], [8], [1], [2], [5, 9], [5, 7, 9], [4], [5, 7, 9]], [[1], [7, 9], [2], [3, 6], [5, 9], [3, 6], [5, 7, 9], [8], [4]], [[4], [8], [5], [2, 9], [7], [1], [3], [6], [2, 9]], [[6], [7, 9], [3], [2, 4, 5, 8, 9], [4, 8], [2, 5, 8, 9], [2, 5, 7, 9], [5, 7, 9], [1]]]]
INFO:root:Doing checkSmall1
INFO:root:Getting tiny MUSes, distance 1, for 1 puzlits, 1 repeats
INFO:root:Chunked 1 in [1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
INFO:root:Doing checkSmall2
INFO:root:Getting tiny MUSes, distance 2, for 1 puzlits, 1 repeats
INFO:root:Chunked 1 in [1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
INFO:root:Considering 100 * 1 jobs for minsize=3
INFO:root:Chunked 100 in [9, 9, 9, 9, 8, 8, 8, 8, 8, 8, 8, 8]
INFO:root:Considering 100 * 1 jobs for minsize=4
INFO:root:Chunked 100 in [9, 9, 9, 9, 8, 8, 8, 8, 8, 8, 8, 8]
INFO:root:XX found first (7, 7) is not 9 5
INFO:root:XX add new best (7, 7) is not 9 5 5
INFO:root:XX add new best (7, 7) is not 9 5 5
INFO:root:XX add new best (7, 7) is not 9 5 5
INFO:root:XX add new best (7, 7) is not 9 5 5
INFO:root:XX add new best (7, 7) is not 9 5 5
INFO:root:XX add new best (7, 7) is not 9 5 5
INFO:root:XX add new best (7, 7) is not 9 5 5
INFO:root:XX add new best (7, 7) is not 9 5 5
INFO:root:XX add new best (7, 7) is not 9 5 5
INFO:root:XX add new best (7, 7) is not 9 5 5
INFO:root:XX add new best (7, 7) is not 9 5 5
INFO:root:XX add new best (7, 7) is not 9 5 5
INFO:root:Considering 100 * 1 jobs for minsize=5
INFO:root:Chunked 100 in [9, 9, 9, 9, 8, 8, 8, 8, 8, 8, 8, 8]
INFO:root:XX add new best (7, 7) is not 9 5 5
INFO:root:XX add new best (7, 7) is not 9 5 5
INFO:root:XX add new best (7, 7) is not 9 5 5
INFO:root:XX add new best (7, 7) is not 9 5 5
INFO:root:XX add new best (7, 7) is not 9 5 5
INFO:root:XX add new best (7, 7) is not 9 5 5
INFO:root:XX add new best (7, 7) is not 9 5 5
INFO:root:XX add new best (7, 7) is not 9 5 5
INFO:root:XX add new best (7, 7) is not 9 5 5
INFO:root:XX add new best (7, 7) is not 9 5 5
INFO:root:XX add new best (7, 7) is not 9 5 5
INFO:root:XX add new best (7, 7) is not 9 5 5
INFO:root:XX add new best (7, 7) is not 9 5 5
INFO:root:Trace: [(5, [(7, 7) is not 9])]
INFO:root:Trace Quality: [(5, 1)]
INFO:root:Trace Sorted: [(5, 1)]
INFO:root:Finished
INFO:root:Full Trace [(5, [(7, 7) is not 9])]
INFO:root:Trying {'gallopingMUSes': True}
INFO:root:Starting Step 1
INFO:root:Current state [[[[9], [2], [6], [3, 4, 5, 8], [4, 8], [3, 5, 7, 8], [1], [5, 7], [5, 7, 8]], [[5], [3], [7], [6, 8, 9], [1], [6, 8, 9], [4], [2], [8, 9]], [[8], [4], [1], [2, 5, 9], [5, 9], [2, 5, 7, 9], [6], [5, 7, 9], [3]], [[2], [5], [9], [7], [3], [4], [8], [1], [6]], [[7], [1], [4], [5, 8, 9], [6], [5, 8, 9], [2, 5, 9], [3], [2, 5, 9]], [[3], [6], [8], [1], [2], [5, 9], [5, 7, 9], [4], [5, 7, 9]], [[1], [7, 9], [2], [3, 6], [5, 9], [3, 6], [5, 7, 9], [8], [4]], [[4], [8], [5], [2, 9], [7], [1], [3], [6], [2, 9]], [[6], [7, 9], [3], [2, 4, 5, 8, 9], [4, 8], [2, 5, 8, 9], [2, 5, 7, 9], [5, 7, 9], [1]]]]
INFO:root:Doing checkSmall1
INFO:root:Getting tiny MUSes, distance 1, for 1 puzlits, 1 repeats
INFO:root:Chunked 1 in [1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
INFO:root:Doing checkSmall2
INFO:root:Getting tiny MUSes, distance 2, for 1 puzlits, 1 repeats
INFO:root:Chunked 1 in [1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
INFO:root:Considering 100 * 1 jobs for minsize=3
INFO:root:Chunked 100 in [9, 9, 9, 9, 8, 8, 8, 8, 8, 8, 8, 8]
INFO:root:Considering 100 * 1 jobs for minsize=4
INFO:root:Chunked 100 in [9, 9, 9, 9, 8, 8, 8, 8, 8, 8, 8, 8]
INFO:root:XX found first (7, 7) is not 9 5
INFO:root:XX add new best (7, 7) is not 9 5 5
INFO:root:XX add new best (7, 7) is not 9 5 5
INFO:root:XX add new best (7, 7) is not 9 5 5
INFO:root:XX add new best (7, 7) is not 9 5 5
INFO:root:XX add new best (7, 7) is not 9 5 5
INFO:root:XX add new best (7, 7) is not 9 5 5
INFO:root:XX add new best (7, 7) is not 9 5 5
INFO:root:XX add new best (7, 7) is not 9 5 5
INFO:root:XX add new best (7, 7) is not 9 5 5
INFO:root:XX add new best (7, 7) is not 9 5 5
INFO:root:Considering 100 * 1 jobs for minsize=5
INFO:root:Chunked 100 in [9, 9, 9, 9, 8, 8, 8, 8, 8, 8, 8, 8]
INFO:root:XX add new best (7, 7) is not 9 5 5
INFO:root:XX add new best (7, 7) is not 9 5 5
INFO:root:XX add new best (7, 7) is not 9 5 5
INFO:root:XX add new best (7, 7) is not 9 5 5
INFO:root:XX add new best (7, 7) is not 9 5 5
INFO:root:XX add new best (7, 7) is not 9 5 5
INFO:root:XX add new best (7, 7) is not 9 5 5
INFO:root:XX add new best (7, 7) is not 9 5 5
INFO:root:XX add new best (7, 7) is not 9 5 5
INFO:root:XX add new best (7, 7) is not 9 5 5
INFO:root:XX add new best (7, 7) is not 9 5 5
INFO:root:Trace: [(5, [(7, 7) is not 9])]
INFO:root:Trace Quality: [(5, 1)]
INFO:root:Trace Sorted: [(5, 1)]
INFO:root:Finished
INFO:root:Full Trace [(5, [(7, 7) is not 9])]
INFO:root:Trying {'minPrecheckStepsMUS': True}
INFO:root:Starting Step 1
INFO:root:Current state [[[[9], [2], [6], [3, 4, 5, 8], [4, 8], [3, 5, 7, 8], [1], [5, 7], [5, 7, 8]], [[5], [3], [7], [6, 8, 9], [1], [6, 8, 9], [4], [2], [8, 9]], [[8], [4], [1], [2, 5, 9], [5, 9], [2, 5, 7, 9], [6], [5, 7, 9], [3]], [[2], [5], [9], [7], [3], [4], [8], [1], [6]], [[7], [1], [4], [5, 8, 9], [6], [5, 8, 9], [2, 5, 9], [3], [2, 5, 9]], [[3], [6], [8], [1], [2], [5, 9], [5, 7, 9], [4], [5, 7, 9]], [[1], [7, 9], [2], [3, 6], [5, 9], [3, 6], [5, 7, 9], [8], [4]], [[4], [8], [5], [2, 9], [7], [1], [3], [6], [2, 9]], [[6], [7, 9], [3], [2, 4, 5, 8, 9], [4, 8], [2, 5, 8, 9], [2, 5, 7, 9], [5, 7, 9], [1]]]]
INFO:root:Doing checkSmall1
INFO:root:Getting tiny MUSes, distance 1, for 1 puzlits, 1 repeats
INFO:root:Chunked 1 in [1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
INFO:root:Doing checkSmall2
INFO:root:Getting tiny MUSes, distance 2, for 1 puzlits, 1 repeats
INFO:root:Chunked 1 in [1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
INFO:root:Considering 100 * 1 jobs for minsize=3
INFO:root:Chunked 100 in [9, 9, 9, 9, 8, 8, 8, 8, 8, 8, 8, 8]
INFO:root:Considering 100 * 1 jobs for minsize=4
INFO:root:Chunked 100 in [9, 9, 9, 9, 8, 8, 8, 8, 8, 8, 8, 8]
INFO:root:XX found first (7, 7) is not 9 5
INFO:root:XX add new best (7, 7) is not 9 5 5
INFO:root:XX add new best (7, 7) is not 9 5 5
INFO:root:XX add new best (7, 7) is not 9 5 5
INFO:root:XX add new best (7, 7) is not 9 5 5
INFO:root:XX add new best (7, 7) is not 9 5 5
INFO:root:XX add new best (7, 7) is not 9 5 5
INFO:root:XX add new best (7, 7) is not 9 5 5
INFO:root:XX add new best (7, 7) is not 9 5 5
INFO:root:XX add new best (7, 7) is not 9 5 5
INFO:root:XX add new best (7, 7) is not 9 5 5
INFO:root:XX add new best (7, 7) is not 9 5 5
INFO:root:XX add new best (7, 7) is not 9 5 5
INFO:root:XX add new best (7, 7) is not 9 5 5
INFO:root:Considering 100 * 1 jobs for minsize=5
INFO:root:Chunked 100 in [9, 9, 9, 9, 8, 8, 8, 8, 8, 8, 8, 8]
INFO:root:XX add new best (7, 7) is not 9 5 5
INFO:root:XX add new best (7, 7) is not 9 5 5
INFO:root:XX add new best (7, 7) is not 9 5 5
INFO:root:XX add new best (7, 7) is not 9 5 5
INFO:root:XX add new best (7, 7) is not 9 5 5
INFO:root:XX add new best (7, 7) is not 9 5 5
INFO:root:XX add new best (7, 7) is not 9 5 5
INFO:root:XX add new best (7, 7) is not 9 5 5
INFO:root:XX add new best (7, 7) is not 9 5 5
INFO:root:XX add new best (7, 7) is not 9 5 5
INFO:root:XX add new best (7, 7) is not 9 5 5
INFO:root:XX add new best (7, 7) is not 9 5 5
INFO:root:XX add new best (7, 7) is not 9 5 5
INFO:root:XX add new best (7, 7) is not 9 5 5
INFO:root:Trace: [(5, [(7, 7) is not 9])]
INFO:root:Trace Quality: [(5, 1)]
INFO:root:Trace Sorted: [(5, 1)]
INFO:root:Finished
INFO:root:Full Trace [(5, [(7, 7) is not 9])]
INFO:root:Trying {'gallopingMUSes': True, 'minPrecheckMUS': True}
INFO:root:Starting Step 1
INFO:root:Current state [[[[9], [2], [6], [3, 4, 5, 8], [4, 8], [3, 5, 7, 8], [1], [5, 7], [5, 7, 8]], [[5], [3], [7], [6, 8, 9], [1], [6, 8, 9], [4], [2], [8, 9]], [[8], [4], [1], [2, 5, 9], [5, 9], [2, 5, 7, 9], [6], [5, 7, 9], [3]], [[2], [5], [9], [7], [3], [4], [8], [1], [6]], [[7], [1], [4], [5, 8, 9], [6], [5, 8, 9], [2, 5, 9], [3], [2, 5, 9]], [[3], [6], [8], [1], [2], [5, 9], [5, 7, 9], [4], [5, 7, 9]], [[1], [7, 9], [2], [3, 6], [5, 9], [3, 6], [5, 7, 9], [8], [4]], [[4], [8], [5], [2, 9], [7], [1], [3], [6], [2, 9]], [[6], [7, 9], [3], [2, 4, 5, 8, 9], [4, 8], [2, 5, 8, 9], [2, 5, 7, 9], [5, 7, 9], [1]]]]
INFO:root:Doing checkSmall1
INFO:root:Getting tiny MUSes, distance 1, for 1 puzlits, 1 repeats
INFO:root:Chunked 1 in [1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
INFO:root:Doing checkSmall2
INFO:root:Getting tiny MUSes, distance 2, for 1 puzlits, 1 repeats
INFO:root:Chunked 1 in [1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
INFO:root:Considering 100 * 1 jobs for minsize=3
INFO:root:Chunked 100 in [9, 9, 9, 9, 8, 8, 8, 8, 8, 8, 8, 8]
INFO:root:Considering 100 * 1 jobs for minsize=4
INFO:root:Chunked 100 in [9, 9, 9, 9, 8, 8, 8, 8, 8, 8, 8, 8]
INFO:root:XX found first (7, 7) is not 9 5
INFO:root:XX add new best (7, 7) is not 9 5 5
INFO:root:XX add new best (7, 7) is not 9 5 5
INFO:root:XX add new best (7, 7) is not 9 5 5
INFO:root:XX add new best (7, 7) is not 9 5 5
INFO:root:XX add new best (7, 7) is not 9 5 5
INFO:root:XX add new best (7, 7) is not 9 5 5
INFO:root:XX add new best (7, 7) is not 9 5 5
INFO:root:XX add new best (7, 7) is not 9 5 5
INFO:root:XX add new best (7, 7) is not 9 5 5
INFO:root:XX add new best (7, 7) is not 9 5 5
INFO:root:XX add new best (7, 7) is not 9 5 5
INFO:root:XX add new best (7, 7) is not 9 5 5
INFO:root:XX add new best (7, 7) is not 9 5 5
INFO:root:Considering 100 * 1 jobs for minsize=5
INFO:root:Chunked 100 in [9, 9, 9, 9, 8, 8, 8, 8, 8, 8, 8, 8]
INFO:root:XX add new best (7, 7) is not 9 5 5
INFO:root:XX add new best (7, 7) is not 9 5 5
INFO:root:XX add new best (7, 7) is not 9 5 5
INFO:root:XX add new best (7, 7) is not 9 5 5
INFO:root:XX add new best (7, 7) is not 9 5 5
INFO:root:XX add new best (7, 7) is not 9 5 5
INFO:root:XX add new best (7, 7) is not 9 5 5
INFO:root:XX add new best (7, 7) is not 9 5 5
INFO:root:XX add new best (7, 7) is not 9 5 5
INFO:root:XX add new best (7, 7) is not 9 5 5
INFO:root:XX add new best (7, 7) is not 9 5 5
INFO:root:XX add new best (7, 7) is not 9 5 5
INFO:root:XX add new best (7, 7) is not 9 5 5
INFO:root:XX add new best (7, 7) is not 9 5 5
INFO:root:Trace: [(5, [(7, 7) is not 9])]
INFO:root:Trace Quality: [(5, 1)]
INFO:root:Trace Sorted: [(5, 1)]
INFO:root:Finished
INFO:root:Full Trace [(5, [(7, 7) is not 9])]
INFO:root:Trying {}
INFO:root:Starting Step 1
INFO:root:Current state [[[[1, 5, 7], [2], [1, 5, 7, 8], [1, 7], [4], [3], [1, 5, 7, 8], [6], [9]], [[1, 4, 5, 7], [1, 4, 5], [3], [8], [9], [6], [2], [4, 5], [1, 4, 5, 7]], [[9], [6], [1, 4, 7, 8], [1, 7], [2], [5], [1, 4, 7, 8], [3], [1, 4, 7, 8]], [[8], [9], [2, 4, 7], [5], [6], [2, 7], [4, 7], [1], [3]], [[6], [1, 4, 5], [1, 2, 4, 5, 7], [2, 4, 9], [3], [2, 7, 9], [4, 5, 7, 8, 9], [4, 5, 8], [4, 5, 7, 8]], [[4, 5, 7], [3], [4, 5, 7], [4, 9], [8], [1], [4, 5, 7, 9], [2], [6]], [[3], [4, 5, 8], [4, 5, 6], [2, 9], [1], [2, 9], [4, 5, 6, 8], [7], [4, 5, 8]], [[1, 5], [1, 5, 8], [9], [6], [7], [4], [3], [5, 8], [2]], [[2], [7], [4, 6], [3], [5], [8], [1, 4, 6], [9], [1, 4]]]]
INFO:root:Doing checkSmall1
INFO:root:Getting tiny MUSes, distance 1, for 1 puzlits, 1 repeats
INFO:root:Chunked 1 in [1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
INFO:root:Doing checkSmall2
INFO:root:Getting tiny MUSes, distance 2, for 1 puzlits, 1 repeats
INFO:root:Chunked 1 in [1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
INFO:root:Considering 100 * 1 jobs for minsize=3
INFO:root:Chunked 100 in [9, 9, 9, 9, 8, 8, 8, 8, 8, 8, 8, 8]
INFO:root:Considering 100 * 1 jobs for minsize=4
INFO:root:Chunked 100 in [9, 9, 9, 9, 8, 8, 8, 8, 8, 8, 8, 8]
INFO:root:Considering 100 * 1 jobs for minsize=5
INFO:root:Chunked 100 in [9, 9, 9, 9, 8, 8, 8, 8, 8, 8, 8, 8]
INFO:root:Considering 100 * 1 jobs for minsize=6
INFO:root:Chunked 100 in [9, 9, 9, 9, 8, 8, 8, 8, 8, 8, 8, 8]
INFO:root:Considering 100 * 1 jobs for minsize=7
INFO:root:Chunked 100 in [9, 9, 9, 9, 8, 8, 8, 8, 8, 8, 8, 8]
INFO:root:Considering 100 * 1 jobs for minsize=8
INFO:root:Chunked 100 in [9, 9, 9, 9, 8, 8, 8, 8, 8, 8, 8, 8]
INFO:root:Considering 100 * 1 jobs for minsize=9
INFO:root:Chunked 100 in [9, 9, 9, 9, 8, 8, 8, 8, 8, 8, 8, 8]
INFO:root:Considering 100 * 1 jobs for minsize=10
INFO:root:Chunked 100 in [9, 9, 9, 9, 8, 8, 8, 8, 8, 8, 8, 8]
INFO:root:Considering 100 * 1 jobs for minsize=11
INFO:root:Chunked 100 in [9, 9, 9, 9, 8, 8, 8, 8, 8, 8, 8, 8]
INFO:root:XX found first (2, 9) is not 4 10
INFO:root:Trace: [(10, [(2, 9) is not 4])]
INFO:root:Trace Quality: [(10, 1)]
INFO:root:Trace Sorted: [(10, 1)]
INFO:root:Finished
INFO:root:Full Trace [(10, [(2, 9) is not 4])]
INFO:root:Trying {'prechopMUSes': True}
INFO:root:Starting Step 1
INFO:root:Current state [[[[1, 5, 7], [2], [1, 5, 7, 8], [1, 7], [4], [3], [1, 5, 7, 8], [6], [9]], [[1, 4, 5, 7], [1, 4, 5], [3], [8], [9], [6], [2], [4, 5], [1, 4, 5, 7]], [[9], [6], [1, 4, 7, 8], [1, 7], [2], [5], [1, 4, 7, 8], [3], [1, 4, 7, 8]], [[8], [9], [2, 4, 7], [5], [6], [2, 7], [4, 7], [1], [3]], [[6], [1, 4, 5], [1, 2, 4, 5, 7], [2, 4, 9], [3], [2, 7, 9], [4, 5, 7, 8, 9], [4, 5, 8], [4, 5, 7, 8]], [[4, 5, 7], [3], [4, 5, 7], [4, 9], [8], [1], [4, 5, 7, 9], [2], [6]], [[3], [4, 5, 8], [4, 5, 6], [2, 9], [1], [2, 9], [4, 5, 6, 8], [7], [4, 5, 8]], [[1, 5], [1, 5, 8], [9], [6], [7], [4], [3], [5, 8], [2]], [[2], [7], [4, 6], [3], [5], [8], [1, 4, 6], [9], [1, 4]]]]
INFO:root:Doing checkSmall1
INFO:root:Getting tiny MUSes, distance 1, for 1 puzlits, 1 repeats
INFO:root:Chunked 1 in [1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
INFO:root:Doing checkSmall2
INFO:root:Getting tiny MUSes, distance 2, for 1 puzlits, 1 repeats
INFO:root:Chunked 1 in [1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
INFO:root:Considering 100 * 1 jobs for minsize=3
INFO:root:Chunked 100 in [9, 9, 9, 9, 8, 8, 8, 8, 8, 8, 8, 8]
INFO:root:Considering 100 * 1 jobs for minsize=4
INFO:root:Chunked 100 in [9, 9, 9, 9, 8, 8, 8, 8, 8, 8, 8, 8]
INFO:root:Considering 100 * 1 jobs for minsize=5
INFO:root:Chunked 100 in [9, 9, 9, 9, 8, 8, 8, 8, 8, 8, 8, 8]
INFO:root:Considering 100 * 1 jobs for minsize=6
INFO:root:Chunked 100 in [9, 9, 9, 9, 8, 8, 8, 8, 8, 8, 8, 8]
INFO:root:XX found first (2, 9) is not 4 7
INFO:root:XX add new best (2, 9) is not 4 7 7
INFO:root:XX add new best (2, 9) is not 4 7 7
INFO:root:XX add new best (2, 9) is not 4 7 7
INFO:root:XX add new best (2, 9) is not 4 7 7
INFO:root:Considering 100 * 1 jobs for minsize=7
INFO:root:Chunked 100 in [9, 9, 9, 9, 8, 8, 8, 8, 8, 8, 8, 8]
INFO:root:XX add new best (2, 9) is not 4 7 7
INFO:root:XX add new best (2, 9) is not 4 7 7
INFO:root:XX add new best (2, 9) is not 4 7 7
INFO:root:XX add new best (2, 9) is not 4 7 7
INFO:root:XX add new best (2, 9) is not 4 7 7
INFO:root:XX add new best (2, 9) is not 4 7 7
INFO:root:XX add new best (2, 9) is not 4 7 7
INFO:root:Trace: [(7, [(2, 9) is not 4])]
INFO:root:Trace Quality: [(7, 1)]
INFO:root:Trace Sorted: [(7, 1)]
INFO:root:Finished
INFO:root:Full Trace [(7, [(2, 9) is not 4])]
INFO:root:Trying {'quarterChopMUS': True}
INFO:root:Starting Step 1
INFO:root:Current state [[[[1, 5, 7], [2], [1, 5, 7, 8], [1, 7], [4], [3], [1, 5, 7, 8], [6], [9]], [[1, 4, 5, 7], [1, 4, 5], [3], [8], [9], [6], [2], [4, 5], [1, 4, 5, 7]], [[9], [6], [1, 4, 7, 8], [1, 7], [2], [5], [1, 4, 7, 8], [3], [1, 4, 7, 8]], [[8], [9], [2, 4, 7], [5], [6], [2, 7], [4, 7], [1], [3]], [[6], [1, 4, 5], [1, 2, 4, 5, 7], [2, 4, 9], [3], [2, 7, 9], [4, 5, 7, 8, 9], [4, 5, 8], [4, 5, 7, 8]], [[4, 5, 7], [3], [4, 5, 7], [4, 9], [8], [1], [4, 5, 7, 9], [2], [6]], [[3], [4, 5, 8], [4, 5, 6], [2, 9], [1], [2, 9], [4, 5, 6, 8], [7], [4, 5, 8]], [[1, 5], [1, 5, 8], [9], [6], [7], [4], [3], [5, 8], [2]], [[2], [7], [4, 6], [3], [5], [8], [1, 4, 6], [9], [1, 4]]]]
INFO:root:Doing checkSmall1
INFO:root:Getting tiny MUSes, distance 1, for 1 puzlits, 1 repeats
INFO:root:Chunked 1 in [1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
INFO:root:Doing checkSmall2
INFO:root:Getting tiny MUSes, distance 2, for 1 puzlits, 1 repeats
INFO:root:Chunked 1 in [1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
INFO:root:Considering 100 * 1 jobs for minsize=3
INFO:root:Chunked 100 in [9, 9, 9, 9, 8, 8, 8, 8, 8, 8, 8, 8]
INFO:root:Considering 100 * 1 jobs for minsize=4
INFO:root:Chunked 100 in [9, 9, 9, 9, 8, 8, 8, 8, 8, 8, 8, 8]
INFO:root:Considering 100 * 1 jobs for minsize=5
INFO:root:Chunked 100 in [9, 9, 9, 9, 8, 8, 8, 8, 8, 8, 8, 8]
INFO:root:Considering 100 * 1 jobs for minsize=6
INFO:root:Chunked 100 in [9, 9, 9, 9, 8, 8, 8, 8, 8, 8, 8, 8]
INFO:root:XX found first (2, 9) is not 4 7
INFO:root:XX add new best (2, 9) is not 4 7 7
INFO:root:XX add new best (2, 9) is not 4 7 7
INFO:root:XX add new best (2, 9) is not 4 7 7
INFO:root:XX add new best (2, 9) is not 4 7 7
INFO:root:XX add new best (2, 9) is not 4 7 7
INFO:root:XX add new best (2, 9) is not 4 7 7
INFO:root:XX add new best (2, 9) is not 4 7 7
INFO:root:Considering 100 * 1 jobs for minsize=7
INFO:root:Chunked 100 in [9, 9, 9, 9, 8, 8, 8, 8, 8, 8, 8, 8]
INFO:root:XX add new best (2, 9) is not 4 7 7
INFO:root:XX add new best (2, 9) is not 4 7 7
INFO:root:XX add new best (2, 9) is not 4 7 7
INFO:root:XX add new best (2, 9) is not 4 7 7
INFO:root:XX add new best (2, 9) is not 4 7 7
INFO:root:XX add new best (2, 9) is not 4 7 7
INFO:root:XX add new best (2, 9) is not 4 7 7
INFO:root:Trace: [(7, [(2, 9) is not 4])]
INFO:root:Trace Quality: [(7, 1)]
INFO:root:Trace Sorted: [(7, 1)]
INFO:root:Finished
INFO:root:Full Trace [(7, [(2, 9) is not 4])]
INFO:root:Trying {'minPrecheckMUS': True}
INFO:root:Starting Step 1
INFO:root:Current state [[[[1, 5, 7], [2], [1, 5, 7, 8], [1, 7], [4], [3], [1, 5, 7, 8], [6], [9]], [[1, 4, 5, 7], [1, 4, 5], [3], [8], [9], [6], [2], [4, 5], [1, 4, 5, 7]], [[9], [6], [1, 4, 7, 8], [1, 7], [2], [5], [1, 4, 7, 8], [3], [1, 4, 7, 8]], [[8], [9], [2, 4, 7], [5], [6], [2, 7], [4, 7], [1], [3]], [[6], [1, 4, 5], [1, 2, 4, 5, 7], [2, 4, 9], [3], [2, 7, 9], [4, 5, 7, 8, 9], [4, 5, 8], [4, 5, 7, 8]], [[4, 5, 7], [3], [4, 5, 7], [4, 9], [8], [1], [4, 5, 7, 9], [2], [6]], [[3], [4, 5, 8], [4, 5, 6], [2, 9], [1], [2, 9], [4, 5, 6, 8], [7], [4, 5, 8]], [[1, 5], [1, 5, 8], [9], [6], [7], [4], [3], [5, 8], [2]], [[2], [7], [4, 6], [3], [5], [8], [1, 4, 6], [9], [1, 4]]]]
INFO:root:Doing checkSmall1
INFO:root:Getting tiny MUSes, distance 1, for 1 puzlits, 1 repeats
INFO:root:Chunked 1 in [1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
INFO:root:Doing checkSmall2
INFO:root:Getting tiny MUSes, distance 2, for 1 puzlits, 1 repeats
INFO:root:Chunked 1 in [1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
INFO:root:Considering 100 * 1 jobs for minsize=3
INFO:root:Chunked 100 in [9, 9, 9, 9, 8, 8, 8, 8, 8, 8, 8, 8]
INFO:root:Considering 100 * 1 jobs for minsize=4
INFO:root:Chunked 100 in [9, 9, 9, 9, 8, 8, 8, 8, 8, 8, 8, 8]
INFO:root:Considering 100 * 1 jobs for minsize=5
INFO:root:Chunked 100 in [9, 9, 9, 9, 8, 8, 8, 8, 8, 8, 8, 8]
INFO:root:Considering 100 * 1 jobs for minsize=6
INFO:root:Chunked 100 in [9, 9, 9, 9, 8, 8, 8, 8, 8, 8, 8, 8]
INFO:root:XX found first (2, 9) is not 4 7
INFO:root:XX add new best (2, 9) is not 4 7 7
INFO:root:XX add new best (2, 9) is not 4 7 7
INFO:root:XX add new best (2, 9) is not 4 7 7
INFO:root:XX add new best (2, 9) is not 4 7 7
INFO:root:XX add new best (2, 9) is not 4 7 7
INFO:root:XX add new best (2, 9) is not 4 7 7
INFO:root:XX add new best (2, 9) is not 4 7 7
INFO:root:XX add new best (2, 9) is not 4 7 7
INFO:root:XX add new best (2, 9) is not 4 7 7
INFO:root:XX add new best (2, 9) is not 4 7 7
INFO:root:XX add new best (2, 9) is not 4 7 7
INFO:root:XX add new best (2, 9) is not 4 7 7
INFO:root:XX add new best (2, 9) is not 4 7 7
INFO:root:Considering 100 * 1 jobs for minsize=7
INFO:root:Chunked 100 in [9, 9, 9, 9, 8, 8, 8, 8, 8, 8, 8, 8]
INFO:root:XX add new best (2, 9) is not 4 7 7
INFO:root:XX add new best (2, 9) is not 4 7 7
INFO:root:XX add new best (2, 9) is not 4 7 7
INFO:root:XX add new best (2, 9) is not 4 7 7
INFO:root:XX add new best (2, 9) is not 4 7 7
INFO:root:XX add new best (2, 9) is not 4 7 7
INFO:root:Trace: [(7, [(2, 9) is not 4])]
INFO:root:Trace Quality: [(7, 1)]
INFO:root:Trace Sorted: [(7, 1)]
INFO:root:Finished
INFO:root:Full Trace [(7, [(2, 9) is not 4])]
INFO:root:Trying {'gallopingMUSes': True}
INFO:root:Starting Step 1
INFO:root:Current state [[[[1, 5, 7], [2], [1, 5, 7, 8], [1, 7], [4], [3], [1, 5, 7, 8], [6], [9]], [[1, 4, 5, 7], [1, 4, 5], [3], [8], [9], [6], [2], [4, 5], [1, 4, 5, 7]], [[9], [6], [1, 4, 7, 8], [1, 7], [2], [5], [1, 4, 7, 8], [3], [1, 4, 7, 8]], [[8], [9], [2, 4, 7], [5], [6], [2, 7], [4, 7], [1], [3]], [[6], [1, 4, 5], [1, 2, 4, 5, 7], [2, 4, 9], [3], [2, 7, 9], [4, 5, 7, 8, 9], [4, 5, 8], [4, 5, 7, 8]], [[4, 5, 7], [3], [4, 5, 7], [4, 9], [8], [1], [4, 5, 7, 9], [2], [6]], [[3], [4, 5, 8], [4, 5, 6], [2, 9], [1], [2, 9], [4, 5, 6, 8], [7], [4, 5, 8]], [[1, 5], [1, 5, 8], [9], [6], [7], [4], [3], [5, 8], [2]], [[2], [7], [4, 6], [3], [5], [8], [1, 4, 6], [9], [1, 4]]]]
INFO:root:Doing checkSmall1
INFO:root:Getting tiny MUSes, distance 1, for 1 puzlits, 1 repeats
INFO:root:Chunked 1 in [1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
INFO:root:Doing checkSmall2
INFO:root:Getting tiny MUSes, distance 2, for 1 puzlits, 1 repeats
INFO:root:Chunked 1 in [1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
INFO:root:Considering 100 * 1 jobs for minsize=3
INFO:root:Chunked 100 in [9, 9, 9, 9, 8, 8, 8, 8, 8, 8, 8, 8]
INFO:root:Considering 100 * 1 jobs for minsize=4
INFO:root:Chunked 100 in [9, 9, 9, 9, 8, 8, 8, 8, 8, 8, 8, 8]
INFO:root:Considering 100 * 1 jobs for minsize=5
INFO:root:Chunked 100 in [9, 9, 9, 9, 8, 8, 8, 8, 8, 8, 8, 8]
INFO:root:Considering 100 * 1 jobs for minsize=6
INFO:root:Chunked 100 in [9, 9, 9, 9, 8, 8, 8, 8, 8, 8, 8, 8]
INFO:root:XX found first (2, 9) is not 4 7
INFO:root:XX add new best (2, 9) is not 4 7 7
INFO:root:XX add new best (2, 9) is not 4 7 7
INFO:root:XX add new best (2, 9) is not 4 7 7
INFO:root:XX add new best (2, 9) is not 4 7 7
INFO:root:XX add new best (2, 9) is not 4 7 7
INFO:root:XX add new best (2, 9) is not 4 7 7
INFO:root:XX add new best (2, 9) is not 4 7 7
INFO:root:XX add new best (2, 9) is not 4 7 7
INFO:root:XX add new best (2, 9) is not 4 7 7
INFO:root:Considering 100 * 1 jobs for minsize=7
INFO:root:Chunked 100 in [9, 9, 9, 9, 8, 8, 8, 8, 8, 8, 8, 8]
INFO:root:XX add new best (2, 9) is not 4 7 7
INFO:root:XX add new best (2, 9) is not 4 7 7
INFO:root:XX add new best (2, 9) is not 4 7 7
INFO:root:XX add new best (2, 9) is not 4 7 7
INFO:root:XX add new best (2, 9) is not 4 7 7
INFO:root:Trace: [(7, [(2, 9) is not 4])]
INFO:root:Trace Quality: [(7, 1)]
INFO:root:Trace Sorted: [(7, 1)]
INFO:root:Finished
INFO:root:Full Trace [(7, [(2, 9) is not 4])]
INFO:root:Trying {'minPrecheckStepsMUS': True}
INFO:root:Starting Step 1
INFO:root:Current state [[[[1, 5, 7], [2], [1, 5, 7, 8], [1, 7], [4], [3], [1, 5, 7, 8], [6], [9]], [[1, 4, 5, 7], [1, 4, 5], [3], [8], [9], [6], [2], [4, 5], [1, 4, 5, 7]], [[9], [6], [1, 4, 7, 8], [1, 7], [2], [5], [1, 4, 7, 8], [3], [1, 4, 7, 8]], [[8], [9], [2, 4, 7], [5], [6], [2, 7], [4, 7], [1], [3]], [[6], [1, 4, 5], [1, 2, 4, 5, 7], [2, 4, 9], [3], [2, 7, 9], [4, 5, 7, 8, 9], [4, 5, 8], [4, 5, 7, 8]], [[4, 5, 7], [3], [4, 5, 7], [4, 9], [8], [1], [4, 5, 7, 9], [2], [6]], [[3], [4, 5, 8], [4, 5, 6], [2, 9], [1], [2, 9], [4, 5, 6, 8], [7], [4, 5, 8]], [[1, 5], [1, 5, 8], [9], [6], [7], [4], [3], [5, 8], [2]], [[2], [7], [4, 6], [3], [5], [8], [1, 4, 6], [9], [1, 4]]]]
INFO:root:Doing checkSmall1
INFO:root:Getting tiny MUSes, distance 1, for 1 puzlits, 1 repeats
INFO:root:Chunked 1 in [1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
INFO:root:Doing checkSmall2
INFO:root:Getting tiny MUSes, distance 2, for 1 puzlits, 1 repeats
INFO:root:Chunked 1 in [1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
INFO:root:Considering 100 * 1 jobs for minsize=3
INFO:root:Chunked 100 in [9, 9, 9, 9, 8, 8, 8, 8, 8, 8, 8, 8]
INFO:root:Considering 100 * 1 jobs for minsize=4
INFO:root:Chunked 100 in [9, 9, 9, 9, 8, 8, 8, 8, 8, 8, 8, 8]
INFO:root:Considering 100 * 1 jobs for minsize=5
INFO:root:Chunked 100 in [9, 9, 9, 9, 8, 8, 8, 8, 8, 8, 8, 8]
INFO:root:Considering 100 * 1 jobs for minsize=6
INFO:root:Chunked 100 in [9, 9, 9, 9, 8, 8, 8, 8, 8, 8, 8, 8]
INFO:root:XX found first (2, 9) is not 4 7
INFO:root:XX add new best (2, 9) is not 4 7 7
INFO:root:XX add new best (2, 9) is not 4 7 7
INFO:root:XX add new best (2, 9) is not 4 7 7
INFO:root:XX add new best (2, 9) is not 4 7 7
INFO:root:XX add new best (2, 9) is not 4 7 7
INFO:root:XX add new best (2, 9) is not 4 7 7
INFO:root:XX add new best (2, 9) is not 4 7 7
INFO:root:XX add new best (2, 9) is not 4 7 7
INFO:root:XX add new best (2, 9) is not 4 7 7
INFO:root:XX add new best (2, 9) is not 4 7 7
INFO:root:XX add new best (2, 9) is not 4 7 7
INFO:root:XX add new best (2, 9) is not 4 7 7
INFO:root:XX add new best (2, 9) is not 4 7 7
INFO:root:Considering 100 * 1 jobs for minsize=7
INFO:root:Chunked 100 in [9, 9, 9, 9, 8, 8, 8, 8, 8, 8, 8, 8]
INFO:root:XX add new best (2, 9) is not 4 7 7
INFO:root:XX add new best (2, 9) is not 4 7 7
INFO:root:XX add new best (2, 9) is not 4 7 7
INFO:root:XX add new best (2, 9) is not 4 7 7
INFO:root:XX add new best (2, 9) is not 4 7 7
INFO:root:XX add new best (2, 9) is not 4 7 7
INFO:root:Trace: [(7, [(2, 9) is not 4])]
INFO:root:Trace Quality: [(7, 1)]
INFO:root:Trace Sorted: [(7, 1)]
INFO:root:Finished
INFO:root:Full Trace [(7, [(2, 9) is not 4])]
INFO:root:Trying {'gallopingMUSes': True, 'minPrecheckMUS': True}
INFO:root:Starting Step 1
INFO:root:Current state [[[[1, 5, 7], [2], [1, 5, 7, 8], [1, 7], [4], [3], [1, 5, 7, 8], [6], [9]], [[1, 4, 5, 7], [1, 4, 5], [3], [8], [9], [6], [2], [4, 5], [1, 4, 5, 7]], [[9], [6], [1, 4, 7, 8], [1, 7], [2], [5], [1, 4, 7, 8], [3], [1, 4, 7, 8]], [[8], [9], [2, 4, 7], [5], [6], [2, 7], [4, 7], [1], [3]], [[6], [1, 4, 5], [1, 2, 4, 5, 7], [2, 4, 9], [3], [2, 7, 9], [4, 5, 7, 8, 9], [4, 5, 8], [4, 5, 7, 8]], [[4, 5, 7], [3], [4, 5, 7], [4, 9], [8], [1], [4, 5, 7, 9], [2], [6]], [[3], [4, 5, 8], [4, 5, 6], [2, 9], [1], [2, 9], [4, 5, 6, 8], [7], [4, 5, 8]], [[1, 5], [1, 5, 8], [9], [6], [7], [4], [3], [5, 8], [2]], [[2], [7], [4, 6], [3], [5], [8], [1, 4, 6], [9], [1, 4]]]]
INFO:root:Doing checkSmall1
INFO:root:Getting tiny MUSes, distance 1, for 1 puzlits, 1 repeats
INFO:root:Chunked 1 in [1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
INFO:root:Doing checkSmall2
INFO:root:Getting tiny MUSes, distance 2, for 1 puzlits, 1 repeats
INFO:root:Chunked 1 in [1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
INFO:root:Considering 100 * 1 jobs for minsize=3
INFO:root:Chunked 100 in [9, 9, 9, 9, 8, 8, 8, 8, 8, 8, 8, 8]
INFO:root:Considering 100 * 1 jobs for minsize=4
INFO:root:Chunked 100 in [9, 9, 9, 9, 8, 8, 8, 8, 8, 8, 8, 8]
INFO:root:Considering 100 * 1 jobs for minsize=5
INFO:root:Chunked 100 in [9, 9, 9, 9, 8, 8, 8, 8, 8, 8, 8, 8]
INFO:root:Considering 100 * 1 jobs for minsize=6
INFO:root:Chunked 100 in [9, 9, 9, 9, 8, 8, 8, 8, 8, 8, 8, 8]
INFO:root:XX found first (2, 9) is not 4 7
INFO:root:XX add new best (2, 9) is not 4 7 7
INFO:root:XX add new best (2, 9) is not 4 7 7
INFO:root:XX add new best (2, 9) is not 4 7 7
INFO:root:XX add new best (2, 9) is not 4 7 7
INFO:root:XX add new best (2, 9) is not 4 7 7
INFO:root:XX add new best (2, 9) is not 4 7 7
INFO:root:XX add new best (2, 9) is not 4 7 7
INFO:root:XX add new best (2, 9) is not 4 7 7
INFO:root:XX add new best (2, 9) is not 4 7 7
INFO:root:XX add new best (2, 9) is not 4 7 7
INFO:root:XX add new best (2, 9) is not 4 7 7
INFO:root:XX add new best (2, 9) is not 4 7 7
INFO:root:XX add new best (2, 9) is not 4 7 7
INFO:root:Considering 100 * 1 jobs for minsize=7
INFO:root:Chunked 100 in [9, 9, 9, 9, 8, 8, 8, 8, 8, 8, 8, 8]
INFO:root:XX add new best (2, 9) is not 4 7 7
INFO:root:XX add new best (2, 9) is not 4 7 7
INFO:root:XX add new best (2, 9) is not 4 7 7
INFO:root:XX add new best (2, 9) is not 4 7 7
INFO:root:XX add new best (2, 9) is not 4 7 7
INFO:root:XX add new best (2, 9) is not 4 7 7
INFO:root:Trace: [(7, [(2, 9) is not 4])]
INFO:root:Trace Quality: [(7, 1)]
INFO:root:Trace Sorted: [(7, 1)]
INFO:root:Finished
INFO:root:Full Trace [(7, [(2, 9) is not 4])]
INFO:root:Trying {}
INFO:root:Starting Step 1
INFO:root:Current state [[[[3, 8], [9], [2], [4, 6], [4, 8], [1], [7], [5], [3, 4, 6]], [[5], [1, 3, 4], [1, 4, 6, 7], [2], [4, 7], [6, 7, 9], [3, 4, 6], [1, 9], [8]], [[1, 4, 6], [1, 4, 8], [1, 4, 6, 7], [4, 5, 6, 9], [3], [5, 6, 7, 8, 9], [2], [1, 9], [4, 6]], [[3, 8], [7], [5], [1, 3], [1, 2, 8], [4], [9], [6], [1, 2]], [[2], [3, 8], [1, 4], [1, 3, 9], [6], [8, 9], [1, 4, 8], [7], [5]], [[1, 4], [6], [9], [7], [1, 2, 5], [2, 5, 8], [1, 4, 8], [3], [1, 2, 4]], [[1, 4, 6], [1, 4, 5], [8], [1, 4, 5, 6], [9], [5, 6, 7], [1, 3, 5, 6], [2], [1, 3, 6, 7]], [[7], [1, 2, 4, 5], [1, 4, 6], [1, 4, 5, 6], [1, 2, 4, 5], [3], [1, 5, 6], [8], [9]], [[9], [1, 2, 5], [3], [8], [1, 2, 5, 7], [2, 5, 6, 7], [1, 5, 6], [4], [1, 6, 7]]]]
INFO:root:Doing checkSmall1
INFO:root:Getting tiny MUSes, distance 1, for 1 puzlits, 1 repeats
INFO:root:Chunked 1 in [1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
INFO:root:Doing checkSmall2
INFO:root:Getting tiny MUSes, distance 2, for 1 puzlits, 1 repeats
INFO:root:Chunked 1 in [1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
INFO:root:Considering 100 * 1 jobs for minsize=3
INFO:root:Chunked 100 in [9, 9, 9, 9, 8, 8, 8, 8, 8, 8, 8, 8]
INFO:root:Considering 100 * 1 jobs for minsize=4
INFO:root:Chunked 100 in [9, 9, 9, 9, 8, 8, 8, 8, 8, 8, 8, 8]
INFO:root:Considering 100 * 1 jobs for minsize=5
INFO:root:Chunked 100 in [9, 9, 9, 9, 8, 8, 8, 8, 8, 8, 8, 8]
INFO:root:Considering 100 * 1 jobs for minsize=6
INFO:root:Chunked 100 in [9, 9, 9, 9, 8, 8, 8, 8, 8, 8, 8, 8]
INFO:root:Considering 100 * 1 jobs for minsize=7
INFO:root:Chunked 100 in [9, 9, 9, 9, 8, 8, 8, 8, 8, 8, 8, 8]
INFO:root:XX found first (6, 7) is not 1 8
INFO:root:XX add new best (6, 7) is not 1 8 8
INFO:root:XX add new best (6, 7) is not 1 8 8
INFO:root:XX add new best (6, 7) is not 1 8 8
INFO:root:XX add new best (6, 7) is not 1 8 8
INFO:root:XX add new best (6, 7) is not 1 8 8
INFO:root:XX add new best (6, 7) is not 1 8 8
INFO:root:XX add new best (6, 7) is not 1 8 8
INFO:root:XX add new best (6, 7) is not 1 8 8
INFO:root:XX add new best (6, 7) is not 1 8 8
INFO:root:XX add new best (6, 7) is not 1 8 8
INFO:root:XX add new best (6, 7) is not 1 8 8
INFO:root:XX add new best (6, 7) is not 1 8 8
INFO:root:XX add new best (6, 7) is not 1 8 8
INFO:root:XX add new best (6, 7) is not 1 8 8
INFO:root:XX add new best (6, 7) is not 1 8 8
INFO:root:XX add new best (6, 7) is not 1 8 8
INFO:root:XX add new best (6, 7) is not 1 8 8
INFO:root:XX add new best (6, 7) is not 1 8 8
INFO:root:XX add new best (6, 7) is not 1 8 8
INFO:root:XX add new best (6, 7) is not 1 8 8
INFO:root:XX add new best (6, 7) is not 1 8 8
INFO:root:XX add new best (6, 7) is not 1 8 8
INFO:root:XX add new best (6, 7) is not 1 8 8
INFO:root:XX add new best (6, 7) is not 1 8 8
INFO:root:XX add new best (6, 7) is not 1 8 8
INFO:root:XX add new best (6, 7) is not 1 8 8
INFO:root:XX add new best (6, 7) is not 1 8 8
INFO:root:XX add new best (6, 7) is not 1 8 8
INFO:root:XX add new best (6, 7) is not 1 8 8
INFO:root:XX add new best (6, 7) is not 1 8 8
INFO:root:XX add new best (6, 7) is not 1 8 8
INFO:root:XX add new best (6, 7) is not 1 8 8
INFO:root:XX add new best (6, 7) is not 1 8 8
INFO:root:XX add new best (6, 7) is not 1 8 8
INFO:root:XX add new best (6, 7) is not 1 8 8
INFO:root:XX add new best (6, 7) is not 1 8 8
INFO:root:XX add new best (6, 7) is not 1 8 8
INFO:root:XX add new best (6, 7) is not 1 8 8
INFO:root:XX add new best (6, 7) is not 1 8 8
INFO:root:XX add new best (6, 7) is not 1 8 8
INFO:root:XX add new best (6, 7) is not 1 8 8
INFO:root:XX add new best (6, 7) is not 1 8 8
INFO:root:XX add new best (6, 7) is not 1 8 8
INFO:root:XX add new best (6, 7) is not 1 8 8
INFO:root:XX add new best (6, 7) is not 1 8 8
INFO:root:XX add new best (6, 7) is not 1 8 8
INFO:root:XX add new best (6, 7) is not 1 8 8
INFO:root:XX add new best (6, 7) is not 1 8 8
INFO:root:XX add new best (6, 7) is not 1 8 8
INFO:root:XX add new best (6, 7) is not 1 8 8
INFO:root:XX add new best (6, 7) is not 1 8 8
INFO:root:XX add new best (6, 7) is not 1 8 8
INFO:root:XX add new best (6, 7) is not 1 8 8
INFO:root:XX add new best (6, 7) is not 1 8 8
INFO:root:XX add new best (6, 7) is not 1 8 8
INFO:root:XX add new best (6, 7) is not 1 8 8
INFO:root:XX add new best (6, 7) is not 1 8 8
INFO:root:XX add new best (6, 7) is not 1 8 8
INFO:root:XX add new best (6, 7) is not 1 8 8
INFO:root:XX add new best (6, 7) is not 1 8 8
INFO:root:XX add new best (6, 7) is not 1 8 8
INFO:root:XX add new best (6, 7) is not 1 8 8
INFO:root:XX add new best (6, 7) is not 1 8 8
INFO:root:XX add new best (6, 7) is not 1 8 8
INFO:root:XX add new best (6, 7) is not 1 8 8
INFO:root:XX add new best (6, 7) is not 1 8 8
INFO:root:XX add new best (6, 7) is not 1 8 8
INFO:root:XX add new best (6, 7) is not 1 8 8
INFO:root:XX add new best (6, 7) is not 1 8 8
INFO:root:XX add new best (6, 7) is not 1 8 8
INFO:root:XX add new best (6, 7) is not 1 8 8
INFO:root:XX add new best (6, 7) is not 1 8 8
INFO:root:XX add new best (6, 7) is not 1 8 8
INFO:root:XX add new best (6, 7) is not 1 8 8
INFO:root:XX add new best (6, 7) is not 1 8 8
INFO:root:XX add new best (6, 7) is not 1 8 8
INFO:root:XX add new best (6, 7) is not 1 8 8
INFO:root:XX add new best (6, 7) is not 1 8 8
INFO:root:XX add new best (6, 7) is not 1 8 8
INFO:root:XX add new best (6, 7) is not 1 8 8
INFO:root:XX add new best (6, 7) is not 1 8 8
INFO:root:XX add new best (6, 7) is not 1 8 8
INFO:root:XX add new best (6, 7) is not 1 8 8
INFO:root:XX add new best (6, 7) is not 1 8 8
INFO:root:XX add new best (6, 7) is not 1 8 8
INFO:root:XX add new best (6, 7) is not 1 8 8
INFO:root:XX add new best (6, 7) is not 1 8 8
INFO:root:XX add new best (6, 7) is not 1 8 8
INFO:root:XX add new best (6, 7) is not 1 8 8
INFO:root:XX add new best (6, 7) is not 1 8 8
INFO:root:XX add new best (6, 7) is not 1 8 8
INFO:root:XX add new best (6, 7) is not 1 8 8
INFO:root:XX add new best (6, 7) is not 1 8 8
INFO:root:XX add new best (6, 7) is not 1 8 8
INFO:root:XX add new best (6, 7) is not 1 8 8
INFO:root:XX add new best (6, 7) is not 1 8 8
INFO:root:XX add new best (6, 7) is not 1 8 8
INFO:root:XX add new best (6, 7) is not 1 8 8
INFO:root:XX add new best (6, 7) is not 1 8 8
INFO:root:Considering 100 * 1 jobs for minsize=8
INFO:root:Chunked 100 in [9, 9, 9, 9, 8, 8, 8, 8, 8, 8, 8, 8]
INFO:root:XX add new best (6, 7) is not 1 8 8
INFO:root:XX add new best (6, 7) is not 1 8 8
INFO:root:XX add new best (6, 7) is not 1 8 8
INFO:root:XX add new best (6, 7) is not 1 8 8
INFO:root:XX add new best (6, 7) is not 1 8 8
INFO:root:XX add new best (6, 7) is not 1 8 8
INFO:root:XX add new best (6, 7) is not 1 8 8
INFO:root:XX add new best (6, 7) is not 1 8 8
INFO:root:XX add new best (6, 7) is not 1 8 8
INFO:root:XX add new best (6, 7) is not 1 8 8
INFO:root:XX add new best (6, 7) is not 1 8 8
INFO:root:XX add new best (6, 7) is not 1 8 8
INFO:root:XX add new best (6, 7) is not 1 8 8
INFO:root:XX add new best (6, 7) is not 1 8 8
INFO:root:XX add new best (6, 7) is not 1 8 8
INFO:root:XX add new best (6, 7) is not 1 8 8
INFO:root:XX add new best (6, 7) is not 1 8 8
INFO:root:XX add new best (6, 7) is not 1 8 8
INFO:root:XX add new best (6, 7) is not 1 8 8
INFO:root:XX add new best (6, 7) is not 1 8 8
INFO:root:XX add new best (6, 7) is not 1 8 8
INFO:root:XX add new best (6, 7) is not 1 8 8
INFO:root:XX add new best (6, 7) is not 1 8 8
INFO:root:XX add new best (6, 7) is not 1 8 8
INFO:root:XX add new best (6, 7) is not 1 8 8
INFO:root:XX add new best (6, 7) is not 1 8 8
INFO:root:XX add new best (6, 7) is not 1 8 8
INFO:root:XX add new best (6, 7) is not 1 8 8
INFO:root:XX add new best (6, 7) is not 1 8 8
INFO:root:XX add new best (6, 7) is not 1 8 8
INFO:root:XX add new best (6, 7) is not 1 8 8
INFO:root:XX add new best (6, 7) is not 1 8 8
INFO:root:XX add new best (6, 7) is not 1 8 8
INFO:root:XX add new best (6, 7) is not 1 8 8
INFO:root:XX add new best (6, 7) is not 1 8 8
INFO:root:XX add new best (6, 7) is not 1 8 8
INFO:root:XX add new best (6, 7) is not 1 8 8
INFO:root:XX add new best (6, 7) is not 1 8 8
INFO:root:XX add new best (6, 7) is not 1 8 8
INFO:root:XX add new best (6, 7) is not 1 8 8
INFO:root:XX add new best (6, 7) is not 1 8 8
INFO:root:XX add new best (6, 7) is not 1 8 8
INFO:root:XX add new best (6, 7) is not 1 8 8
INFO:root:XX add new best (6, 7) is not 1 8 8
INFO:root:XX add new best (6, 7) is not 1 8 8
INFO:root:XX add new best (6, 7) is not 1 8 8
INFO:root:XX add new best (6, 7) is not 1 8 8
INFO:root:XX add new best (6, 7) is not 1 8 8
INFO:root:XX add new best (6, 7) is not 1 8 8
INFO:root:XX add new best (6, 7) is not 1 8 8
INFO:root:XX add new best (6, 7) is not 1 8 8
INFO:root:XX add new best (6, 7) is not 1 8 8
INFO:root:XX add new best (6, 7) is not 1 8 8
INFO:root:XX add new best (6, 7) is not 1 8 8
INFO:root:XX add new best (6, 7) is not 1 8 8
INFO:root:XX add new best (6, 7) is not 1 8 8
INFO:root:XX add new best (6, 7) is not 1 8 8
INFO:root:XX add new best (6, 7) is not 1 8 8
INFO:root:XX add new best (6, 7) is not 1 8 8
INFO:root:XX add new best (6, 7) is not 1 8 8
INFO:root:XX add new best (6, 7) is not 1 8 8
INFO:root:XX add new best (6, 7) is not 1 8 8
INFO:root:XX add new best (6, 7) is not 1 8 8
INFO:root:XX add new best (6, 7) is not 1 8 8
INFO:root:XX add new best (6, 7) is not 1 8 8
INFO:root:XX add new best (6, 7) is not 1 8 8
INFO:root:XX add new best (6, 7) is not 1 8 8
INFO:root:XX add new best (6, 7) is not 1 8 8
INFO:root:XX add new best (6, 7) is not 1 8 8
INFO:root:XX add new best (6, 7) is not 1 8 8
INFO:root:XX add new best (6, 7) is not 1 8 8
INFO:root:XX add new best (6, 7) is not 1 8 8
INFO:root:XX add new best (6, 7) is not 1 8 8
INFO:root:XX add new best (6, 7) is not 1 8 8
INFO:root:XX add new best (6, 7) is not 1 8 8
INFO:root:XX add new best (6, 7) is not 1 8 8
INFO:root:XX add new best (6, 7) is not 1 8 8
INFO:root:XX add new best (6, 7) is not 1 8 8
INFO:root:XX add new best (6, 7) is not 1 8 8
INFO:root:XX add new best (6, 7) is not 1 8 8
INFO:root:XX add new best (6, 7) is not 1 8 8
INFO:root:XX add new best (6, 7) is not 1 8 8
INFO:root:XX add new best (6, 7) is not 1 8 8
INFO:root:XX add new best (6, 7) is not 1 8 8
INFO:root:XX add new best (6, 7) is not 1 8 8
INFO:root:XX add new best (6, 7) is not 1 8 8
INFO:root:XX add new best (6, 7) is not 1 8 8
INFO:root:XX add new best (6, 7) is not 1 8 8
INFO:root:XX add new best (6, 7) is not 1 8 8
INFO:root:XX add new best (6, 7) is not 1 8 8
INFO:root:XX add new best (6, 7) is not 1 8 8
INFO:root:XX add new best (6, 7) is not 1 8 8
INFO:root:XX add new best (6, 7) is not 1 8 8
INFO:root:XX add new best (6, 7) is not 1 8 8
INFO:root:XX add new best (6, 7) is not 1 8 8
INFO:root:XX add new best (6, 7) is not 1 8 8
INFO:root:XX add new best (6, 7) is not 1 8 8
INFO:root:XX add new best (6, 7) is not 1 8 8
INFO:root:XX add new best (6, 7) is not 1 8 8
INFO:root:XX add new best (6, 7) is not 1 8 8
INFO:root:Trace: [(8, [(6, 7) is not 1])]
INFO:root:Trace Quality: [(8, 1)]
INFO:root:Trace Sorted: [(8, 1)]
INFO:root:Finished
INFO:root:Full Trace [(8, [(6, 7) is not 1])]
INFO:root:Trying {'prechopMUSes': True}
INFO:root:Starting Step 1
INFO:root:Current state [[[[3, 8], [9], [2], [4, 6], [4, 8], [1], [7], [5], [3, 4, 6]], [[5], [1, 3, 4], [1, 4, 6, 7], [2], [4, 7], [6, 7, 9], [3, 4, 6], [1, 9], [8]], [[1, 4, 6], [1, 4, 8], [1, 4, 6, 7], [4, 5, 6, 9], [3], [5, 6, 7, 8, 9], [2], [1, 9], [4, 6]], [[3, 8], [7], [5], [1, 3], [1, 2, 8], [4], [9], [6], [1, 2]], [[2], [3, 8], [1, 4], [1, 3, 9], [6], [8, 9], [1, 4, 8], [7], [5]], [[1, 4], [6], [9], [7], [1, 2, 5], [2, 5, 8], [1, 4, 8], [3], [1, 2, 4]], [[1, 4, 6], [1, 4, 5], [8], [1, 4, 5, 6], [9], [5, 6, 7], [1, 3, 5, 6], [2], [1, 3, 6, 7]], [[7], [1, 2, 4, 5], [1, 4, 6], [1, 4, 5, 6], [1, 2, 4, 5], [3], [1, 5, 6], [8], [9]], [[9], [1, 2, 5], [3], [8], [1, 2, 5, 7], [2, 5, 6, 7], [1, 5, 6], [4], [1, 6, 7]]]]
INFO:root:Doing checkSmall1
INFO:root:Getting tiny MUSes, distance 1, for 1 puzlits, 1 repeats
INFO:root:Chunked 1 in [1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
INFO:root:Doing checkSmall2
INFO:root:Getting tiny MUSes, distance 2, for 1 puzlits, 1 repeats
INFO:root:Chunked 1 in [1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
INFO:root:Considering 100 * 1 jobs for minsize=3
INFO:root:Chunked 100 in [9, 9, 9, 9, 8, 8, 8, 8, 8, 8, 8, 8]
INFO:root:Considering 100 * 1 jobs for minsize=4
INFO:root:Chunked 100 in [9, 9, 9, 9, 8, 8, 8, 8, 8, 8, 8, 8]
INFO:root:Considering 100 * 1 jobs for minsize=5
INFO:root:Chunked 100 in [9, 9, 9, 9, 8, 8, 8, 8, 8, 8, 8, 8]
INFO:root:Considering 100 * 1 jobs for minsize=6
INFO:root:Chunked 100 in [9, 9, 9, 9, 8, 8, 8, 8, 8, 8, 8, 8]
INFO:root:XX found first (6, 7) is not 1 7
INFO:root:XX add new best (6, 7) is not 1 7 7
INFO:root:XX add new best (6, 7) is not 1 7 7
INFO:root:XX add new best (6, 7) is not 1 7 7
INFO:root:XX add new best (6, 7) is not 1 7 7
INFO:root:XX add new best (6, 7) is not 1 7 7
INFO:root:XX add new best (6, 7) is not 1 7 7
INFO:root:XX add new best (6, 7) is not 1 7 7
INFO:root:XX add new best (6, 7) is not 1 7 7
INFO:root:XX add new best (6, 7) is not 1 7 7
INFO:root:Considering 100 * 1 jobs for minsize=7
INFO:root:Chunked 100 in [9, 9, 9, 9, 8, 8, 8, 8, 8, 8, 8, 8]
INFO:root:XX add new best (6, 7) is not 1 7 7
INFO:root:XX add new best (6, 7) is not 1 7 7
INFO:root:XX add new best (6, 7) is not 1 7 7
INFO:root:XX add new best (6, 7) is not 1 7 7
INFO:root:XX add new best (6, 7) is not 1 7 7
INFO:root:XX add new best (6, 7) is not 1 7 7
INFO:root:XX add new best (6, 7) is not 1 7 7
INFO:root:XX add new best (6, 7) is not 1 7 7
INFO:root:XX add new best (6, 7) is not 1 7 7
INFO:root:XX add new best (6, 7) is not 1 7 7
INFO:root:XX add new best (6, 7) is not 1 7 7
INFO:root:XX add new best (6, 7) is not 1 7 7
INFO:root:XX add new best (6, 7) is not 1 7 7
INFO:root:XX add new best (6, 7) is not 1 7 7
INFO:root:XX add new best (6, 7) is not 1 7 7
INFO:root:Trace: [(7, [(6, 7) is not 1])]
INFO:root:Trace Quality: [(7, 1)]
INFO:root:Trace Sorted: [(7, 1)]
INFO:root:Finished
INFO:root:Full Trace [(7, [(6, 7) is not 1])]
INFO:root:Trying {'quarterChopMUS': True}
INFO:root:Starting Step 1
INFO:root:Current state [[[[3, 8], [9], [2], [4, 6], [4, 8], [1], [7], [5], [3, 4, 6]], [[5], [1, 3, 4], [1, 4, 6, 7], [2], [4, 7], [6, 7, 9], [3, 4, 6], [1, 9], [8]], [[1, 4, 6], [1, 4, 8], [1, 4, 6, 7], [4, 5, 6, 9], [3], [5, 6, 7, 8, 9], [2], [1, 9], [4, 6]], [[3, 8], [7], [5], [1, 3], [1, 2, 8], [4], [9], [6], [1, 2]], [[2], [3, 8], [1, 4], [1, 3, 9], [6], [8, 9], [1, 4, 8], [7], [5]], [[1, 4], [6], [9], [7], [1, 2, 5], [2, 5, 8], [1, 4, 8], [3], [1, 2, 4]], [[1, 4, 6], [1, 4, 5], [8], [1, 4, 5, 6], [9], [5, 6, 7], [1, 3, 5, 6], [2], [1, 3, 6, 7]], [[7], [1, 2, 4, 5], [1, 4, 6], [1, 4, 5, 6], [1, 2, 4, 5], [3], [1, 5, 6], [8], [9]], [[9], [1, 2, 5], [3], [8], [1, 2, 5, 7], [2, 5, 6, 7], [1, 5, 6], [4], [1, 6, 7]]]]
INFO:root:Doing checkSmall1
INFO:root:Getting tiny MUSes, distance 1, for 1 puzlits, 1 repeats
INFO:root:Chunked 1 in [1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
INFO:root:Doing checkSmall2
INFO:root:Getting tiny MUSes, distance 2, for 1 puzlits, 1 repeats
INFO:root:Chunked 1 in [1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
INFO:root:Considering 100 * 1 jobs for minsize=3
INFO:root:Chunked 100 in [9, 9, 9, 9, 8, 8, 8, 8, 8, 8, 8, 8]
INFO:root:Considering 100 * 1 jobs for minsize=4
INFO:root:Chunked 100 in [9, 9, 9, 9, 8, 8, 8, 8, 8, 8, 8, 8]
INFO:root:Considering 100 * 1 jobs for minsize=5
INFO:root:Chunked 100 in [9, 9, 9, 9, 8, 8, 8, 8, 8, 8, 8, 8]
INFO:root:Considering 100 * 1 jobs for minsize=6
INFO:root:Chunked 100 in [9, 9, 9, 9, 8, 8, 8, 8, 8, 8, 8, 8]
INFO:root:XX found first (6, 7) is not 1 7
INFO:root:XX add new best (6, 7) is not 1 7 7
INFO:root:XX add new best (6, 7) is not 1 7 7
INFO:root:XX add new best (6, 7) is not 1 7 7
INFO:root:XX add new best (6, 7) is not 1 7 7
INFO:root:XX add new best (6, 7) is not 1 7 7
INFO:root:XX add new best (6, 7) is not 1 7 7
INFO:root:XX add new best (6, 7) is not 1 7 7
INFO:root:XX add new best (6, 7) is not 1 7 7
INFO:root:XX add new best (6, 7) is not 1 7 7
INFO:root:XX add new best (6, 7) is not 1 7 7
INFO:root:XX add new best (6, 7) is not 1 7 7
INFO:root:Considering 100 * 1 jobs for minsize=7
INFO:root:Chunked 100 in [9, 9, 9, 9, 8, 8, 8, 8, 8, 8, 8, 8]
INFO:root:XX add new best (6, 7) is not 1 7 7
INFO:root:XX add new best (6, 7) is not 1 7 7
INFO:root:XX add new best (6, 7) is not 1 7 7
INFO:root:XX add new best (6, 7) is not 1 7 7
INFO:root:XX add new best (6, 7) is not 1 7 7
INFO:root:XX add new best (6, 7) is not 1 7 7
INFO:root:XX add new best (6, 7) is not 1 7 7
INFO:root:XX add new best (6, 7) is not 1 7 7
INFO:root:XX add new best (6, 7) is not 1 7 7
INFO:root:XX add new best (6, 7) is not 1 7 7
INFO:root:Trace: [(7, [(6, 7) is not 1])]
INFO:root:Trace Quality: [(7, 1)]
INFO:root:Trace Sorted: [(7, 1)]
INFO:root:Finished
INFO:root:Full Trace [(7, [(6, 7) is not 1])]
INFO:root:Trying {'minPrecheckMUS': True}
INFO:root:Starting Step 1
INFO:root:Current state [[[[3, 8], [9], [2], [4, 6], [4, 8], [1], [7], [5], [3, 4, 6]], [[5], [1, 3, 4], [1, 4, 6, 7], [2], [4, 7], [6, 7, 9], [3, 4, 6], [1, 9], [8]], [[1, 4, 6], [1, 4, 8], [1, 4, 6, 7], [4, 5, 6, 9], [3], [5, 6, 7, 8, 9], [2], [1, 9], [4, 6]], [[3, 8], [7], [5], [1, 3], [1, 2, 8], [4], [9], [6], [1, 2]], [[2], [3, 8], [1, 4], [1, 3, 9], [6], [8, 9], [1, 4, 8], [7], [5]], [[1, 4], [6], [9], [7], [1, 2, 5], [2, 5, 8], [1, 4, 8], [3], [1, 2, 4]], [[1, 4, 6], [1, 4, 5], [8], [1, 4, 5, 6], [9], [5, 6, 7], [1, 3, 5, 6], [2], [1, 3, 6, 7]], [[7], [1, 2, 4, 5], [1, 4, 6], [1, 4, 5, 6], [1, 2, 4, 5], [3], [1, 5, 6], [8], [9]], [[9], [1, 2, 5], [3], [8], [1, 2, 5, 7], [2, 5, 6, 7], [1, 5, 6], [4], [1, 6, 7]]]]
INFO:root:Doing checkSmall1
INFO:root:Getting tiny MUSes, distance 1, for 1 puzlits, 1 repeats
INFO:root:Chunked 1 in [1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
INFO:root:Doing checkSmall2
INFO:root:Getting tiny MUSes, distance 2, for 1 puzlits, 1 repeats
INFO:root:Chunked 1 in [1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
INFO:root:Considering 100 * 1 jobs for minsize=3
INFO:root:Chunked 100 in [9, 9, 9, 9, 8, 8, 8, 8, 8, 8, 8, 8]
INFO:root:Considering 100 * 1 jobs for minsize=4
INFO:root:Chunked 100 in [9, 9, 9, 9, 8, 8, 8, 8, 8, 8, 8, 8]
INFO:root:Considering 100 * 1 jobs for minsize=5
INFO:root:Chunked 100 in [9, 9, 9, 9, 8, 8, 8, 8, 8, 8, 8, 8]
INFO:root:Considering 100 * 1 jobs for minsize=6
INFO:root:Chunked 100 in [9, 9, 9, 9, 8, 8, 8, 8, 8, 8, 8, 8]
INFO:root:XX found first (6, 7) is not 1 7
INFO:root:XX add new best (6, 7) is not 1 7 7
INFO:root:XX add new best (6, 7) is not 1 7 7
INFO:root:XX add new best (6, 7) is not 1 7 7
INFO:root:XX add new best (6, 7) is not 1 7 7
INFO:root:XX add new best (6, 7) is not 1 7 7
INFO:root:XX add new best (6, 7) is not 1 7 7
INFO:root:XX add new best (6, 7) is not 1 7 7
INFO:root:XX add new best (6, 7) is not 1 7 7
INFO:root:XX add new best (6, 7) is not 1 7 7
INFO:root:XX add new best (6, 7) is not 1 7 7
INFO:root:XX add new best (6, 7) is not 1 7 7
INFO:root:Considering 100 * 1 jobs for minsize=7
INFO:root:Chunked 100 in [9, 9, 9, 9, 8, 8, 8, 8, 8, 8, 8, 8]
INFO:root:XX add new best (6, 7) is not 1 7 7
INFO:root:XX add new best (6, 7) is not 1 7 7
INFO:root:XX add new best (6, 7) is not 1 7 7
INFO:root:XX add new best (6, 7) is not 1 7 7
INFO:root:XX add new best (6, 7) is not 1 7 7
INFO:root:XX add new best (6, 7) is not 1 7 7
INFO:root:XX add new best (6, 7) is not 1 7 7
INFO:root:XX add new best (6, 7) is not 1 7 7
INFO:root:XX add new best (6, 7) is not 1 7 7
INFO:root:XX add new best (6, 7) is not 1 7 7
INFO:root:XX add new best (6, 7) is not 1 7 7
INFO:root:XX add new best (6, 7) is not 1 7 7
INFO:root:Trace: [(7, [(6, 7) is not 1])]
INFO:root:Trace Quality: [(7, 1)]
INFO:root:Trace Sorted: [(7, 1)]
INFO:root:Finished
INFO:root:Full Trace [(7, [(6, 7) is not 1])]
INFO:root:Trying {'gallopingMUSes': True}
INFO:root:Starting Step 1
INFO:root:Current state [[[[3, 8], [9], [2], [4, 6], [4, 8], [1], [7], [5], [3, 4, 6]], [[5], [1, 3, 4], [1, 4, 6, 7], [2], [4, 7], [6, 7, 9], [3, 4, 6], [1, 9], [8]], [[1, 4, 6], [1, 4, 8], [1, 4, 6, 7], [4, 5, 6, 9], [3], [5, 6, 7, 8, 9], [2], [1, 9], [4, 6]], [[3, 8], [7], [5], [1, 3], [1, 2, 8], [4], [9], [6], [1, 2]], [[2], [3, 8], [1, 4], [1, 3, 9], [6], [8, 9], [1, 4, 8], [7], [5]], [[1, 4], [6], [9], [7], [1, 2, 5], [2, 5, 8], [1, 4, 8], [3], [1, 2, 4]], [[1, 4, 6], [1, 4, 5], [8], [1, 4, 5, 6], [9], [5, 6, 7], [1, 3, 5, 6], [2], [1, 3, 6, 7]], [[7], [1, 2, 4, 5], [1, 4, 6], [1, 4, 5, 6], [1, 2, 4, 5], [3], [1, 5, 6], [8], [9]], [[9], [1, 2, 5], [3], [8], [1, 2, 5, 7], [2, 5, 6, 7], [1, 5, 6], [4], [1, 6, 7]]]]
INFO:root:Doing checkSmall1
INFO:root:Getting tiny MUSes, distance 1, for 1 puzlits, 1 repeats
INFO:root:Chunked 1 in [1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
INFO:root:Doing checkSmall2
INFO:root:Getting tiny MUSes, distance 2, for 1 puzlits, 1 repeats
INFO:root:Chunked 1 in [1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
INFO:root:Considering 100 * 1 jobs for minsize=3
INFO:root:Chunked 100 in [9, 9, 9, 9, 8, 8, 8, 8, 8, 8, 8, 8]
INFO:root:Considering 100 * 1 jobs for minsize=4
INFO:root:Chunked 100 in [9, 9, 9, 9, 8, 8, 8, 8, 8, 8, 8, 8]
INFO:root:Considering 100 * 1 jobs for minsize=5
INFO:root:Chunked 100 in [9, 9, 9, 9, 8, 8, 8, 8, 8, 8, 8, 8]
INFO:root:Considering 100 * 1 jobs for minsize=6
INFO:root:Chunked 100 in [9, 9, 9, 9, 8, 8, 8, 8, 8, 8, 8, 8]
INFO:root:XX found first (6, 7) is not 1 7
INFO:root:XX add new best (6, 7) is not 1 7 7
INFO:root:XX add new best (6, 7) is not 1 7 7
INFO:root:XX add new best (6, 7) is not 1 7 7
INFO:root:XX add new best (6, 7) is not 1 7 7
INFO:root:XX add new best (6, 7) is not 1 7 7
INFO:root:XX add new best (6, 7) is not 1 7 7
INFO:root:XX add new best (6, 7) is not 1 7 7
INFO:root:XX add new best (6, 7) is not 1 7 7
INFO:root:XX add new best (6, 7) is not 1 7 7
INFO:root:Considering 100 * 1 jobs for minsize=7
INFO:root:Chunked 100 in [9, 9, 9, 9, 8, 8, 8, 8, 8, 8, 8, 8]
INFO:root:XX add new best (6, 7) is not 1 7 7
INFO:root:XX add new best (6, 7) is not 1 7 7
INFO:root:XX add new best (6, 7) is not 1 7 7
INFO:root:XX add new best (6, 7) is not 1 7 7
INFO:root:XX add new best (6, 7) is not 1 7 7
INFO:root:XX add new best (6, 7) is not 1 7 7
INFO:root:XX add new best (6, 7) is not 1 7 7
INFO:root:XX add new best (6, 7) is not 1 7 7
INFO:root:XX add new best (6, 7) is not 1 7 7
INFO:root:XX add new best (6, 7) is not 1 7 7
INFO:root:XX add new best (6, 7) is not 1 7 7
INFO:root:XX add new best (6, 7) is not 1 7 7
INFO:root:Trace: [(7, [(6, 7) is not 1])]
INFO:root:Trace Quality: [(7, 1)]
INFO:root:Trace Sorted: [(7, 1)]
INFO:root:Finished
INFO:root:Full Trace [(7, [(6, 7) is not 1])]
INFO:root:Trying {'minPrecheckStepsMUS': True}
INFO:root:Starting Step 1
INFO:root:Current state [[[[3, 8], [9], [2], [4, 6], [4, 8], [1], [7], [5], [3, 4, 6]], [[5], [1, 3, 4], [1, 4, 6, 7], [2], [4, 7], [6, 7, 9], [3, 4, 6], [1, 9], [8]], [[1, 4, 6], [1, 4, 8], [1, 4, 6, 7], [4, 5, 6, 9], [3], [5, 6, 7, 8, 9], [2], [1, 9], [4, 6]], [[3, 8], [7], [5], [1, 3], [1, 2, 8], [4], [9], [6], [1, 2]], [[2], [3, 8], [1, 4], [1, 3, 9], [6], [8, 9], [1, 4, 8], [7], [5]], [[1, 4], [6], [9], [7], [1, 2, 5], [2, 5, 8], [1, 4, 8], [3], [1, 2, 4]], [[1, 4, 6], [1, 4, 5], [8], [1, 4, 5, 6], [9], [5, 6, 7], [1, 3, 5, 6], [2], [1, 3, 6, 7]], [[7], [1, 2, 4, 5], [1, 4, 6], [1, 4, 5, 6], [1, 2, 4, 5], [3], [1, 5, 6], [8], [9]], [[9], [1, 2, 5], [3], [8], [1, 2, 5, 7], [2, 5, 6, 7], [1, 5, 6], [4], [1, 6, 7]]]]
INFO:root:Doing checkSmall1
INFO:root:Getting tiny MUSes, distance 1, for 1 puzlits, 1 repeats
INFO:root:Chunked 1 in [1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
INFO:root:Doing checkSmall2
INFO:root:Getting tiny MUSes, distance 2, for 1 puzlits, 1 repeats
INFO:root:Chunked 1 in [1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
INFO:root:Considering 100 * 1 jobs for minsize=3
INFO:root:Chunked 100 in [9, 9, 9, 9, 8, 8, 8, 8, 8, 8, 8, 8]
INFO:root:Considering 100 * 1 jobs for minsize=4
INFO:root:Chunked 100 in [9, 9, 9, 9, 8, 8, 8, 8, 8, 8, 8, 8]
INFO:root:Considering 100 * 1 jobs for minsize=5
INFO:root:Chunked 100 in [9, 9, 9, 9, 8, 8, 8, 8, 8, 8, 8, 8]
INFO:root:Considering 100 * 1 jobs for minsize=6
INFO:root:Chunked 100 in [9, 9, 9, 9, 8, 8, 8, 8, 8, 8, 8, 8]
INFO:root:XX found first (6, 7) is not 1 7
INFO:root:XX add new best (6, 7) is not 1 7 7
INFO:root:XX add new best (6, 7) is not 1 7 7
INFO:root:XX add new best (6, 7) is not 1 7 7
INFO:root:XX add new best (6, 7) is not 1 7 7
INFO:root:XX add new best (6, 7) is not 1 7 7
INFO:root:XX add new best (6, 7) is not 1 7 7
INFO:root:XX add new best (6, 7) is not 1 7 7
INFO:root:XX add new best (6, 7) is not 1 7 7
INFO:root:XX add new best (6, 7) is not 1 7 7
INFO:root:XX add new best (6, 7) is not 1 7 7
INFO:root:XX add new best (6, 7) is not 1 7 7
INFO:root:Considering 100 * 1 jobs for minsize=7
INFO:root:Chunked 100 in [9, 9, 9, 9, 8, 8, 8, 8, 8, 8, 8, 8]
INFO:root:XX add new best (6, 7) is not 1 7 7
INFO:root:XX add new best (6, 7) is not 1 7 7
INFO:root:XX add new best (6, 7) is not 1 7 7
INFO:root:XX add new best (6, 7) is not 1 7 7
INFO:root:XX add new best (6, 7) is not 1 7 7
INFO:root:XX add new best (6, 7) is not 1 7 7
INFO:root:XX add new best (6, 7) is not 1 7 7
INFO:root:XX add new best (6, 7) is not 1 7 7
INFO:root:XX add new best (6, 7) is not 1 7 7
INFO:root:XX add new best (6, 7) is not 1 7 7
INFO:root:XX add new best (6, 7) is not 1 7 7
INFO:root:XX add new best (6, 7) is not 1 7 7
INFO:root:Trace: [(7, [(6, 7) is not 1])]
INFO:root:Trace Quality: [(7, 1)]
INFO:root:Trace Sorted: [(7, 1)]
INFO:root:Finished
INFO:root:Full Trace [(7, [(6, 7) is not 1])]
INFO:root:Trying {'gallopingMUSes': True, 'minPrecheckMUS': True}
INFO:root:Starting Step 1
INFO:root:Current state [[[[3, 8], [9], [2], [4, 6], [4, 8], [1], [7], [5], [3, 4, 6]], [[5], [1, 3, 4], [1, 4, 6, 7], [2], [4, 7], [6, 7, 9], [3, 4, 6], [1, 9], [8]], [[1, 4, 6], [1, 4, 8], [1, 4, 6, 7], [4, 5, 6, 9], [3], [5, 6, 7, 8, 9], [2], [1, 9], [4, 6]], [[3, 8], [7], [5], [1, 3], [1, 2, 8], [4], [9], [6], [1, 2]], [[2], [3, 8], [1, 4], [1, 3, 9], [6], [8, 9], [1, 4, 8], [7], [5]], [[1, 4], [6], [9], [7], [1, 2, 5], [2, 5, 8], [1, 4, 8], [3], [1, 2, 4]], [[1, 4, 6], [1, 4, 5], [8], [1, 4, 5, 6], [9], [5, 6, 7], [1, 3, 5, 6], [2], [1, 3, 6, 7]], [[7], [1, 2, 4, 5], [1, 4, 6], [1, 4, 5, 6], [1, 2, 4, 5], [3], [1, 5, 6], [8], [9]], [[9], [1, 2, 5], [3], [8], [1, 2, 5, 7], [2, 5, 6, 7], [1, 5, 6], [4], [1, 6, 7]]]]
INFO:root:Doing checkSmall1
INFO:root:Getting tiny MUSes, distance 1, for 1 puzlits, 1 repeats
INFO:root:Chunked 1 in [1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
INFO:root:Doing checkSmall2
INFO:root:Getting tiny MUSes, distance 2, for 1 puzlits, 1 repeats
INFO:root:Chunked 1 in [1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
INFO:root:Considering 100 * 1 jobs for minsize=3
INFO:root:Chunked 100 in [9, 9, 9, 9, 8, 8, 8, 8, 8, 8, 8, 8]
INFO:root:Considering 100 * 1 jobs for minsize=4
INFO:root:Chunked 100 in [9, 9, 9, 9, 8, 8, 8, 8, 8, 8, 8, 8]
INFO:root:Considering 100 * 1 jobs for minsize=5
INFO:root:Chunked 100 in [9, 9, 9, 9, 8, 8, 8, 8, 8, 8, 8, 8]
INFO:root:Considering 100 * 1 jobs for minsize=6
INFO:root:Chunked 100 in [9, 9, 9, 9, 8, 8, 8, 8, 8, 8, 8, 8]
INFO:root:XX found first (6, 7) is not 1 7
INFO:root:XX add new best (6, 7) is not 1 7 7
INFO:root:XX add new best (6, 7) is not 1 7 7
INFO:root:XX add new best (6, 7) is not 1 7 7
INFO:root:XX add new best (6, 7) is not 1 7 7
INFO:root:XX add new best (6, 7) is not 1 7 7
INFO:root:XX add new best (6, 7) is not 1 7 7
INFO:root:XX add new best (6, 7) is not 1 7 7
INFO:root:XX add new best (6, 7) is not 1 7 7
INFO:root:XX add new best (6, 7) is not 1 7 7
INFO:root:XX add new best (6, 7) is not 1 7 7
INFO:root:XX add new best (6, 7) is not 1 7 7
INFO:root:Considering 100 * 1 jobs for minsize=7
INFO:root:Chunked 100 in [9, 9, 9, 9, 8, 8, 8, 8, 8, 8, 8, 8]
INFO:root:XX add new best (6, 7) is not 1 7 7
INFO:root:XX add new best (6, 7) is not 1 7 7
INFO:root:XX add new best (6, 7) is not 1 7 7
INFO:root:XX add new best (6, 7) is not 1 7 7
INFO:root:XX add new best (6, 7) is not 1 7 7
INFO:root:XX add new best (6, 7) is not 1 7 7
INFO:root:XX add new best (6, 7) is not 1 7 7
INFO:root:XX add new best (6, 7) is not 1 7 7
INFO:root:XX add new best (6, 7) is not 1 7 7
INFO:root:XX add new best (6, 7) is not 1 7 7
INFO:root:XX add new best (6, 7) is not 1 7 7
INFO:root:XX add new best (6, 7) is not 1 7 7
INFO:root:Trace: [(7, [(6, 7) is not 1])]
INFO:root:Trace Quality: [(7, 1)]
INFO:root:Trace Sorted: [(7, 1)]
INFO:root:Finished
INFO:root:Full Trace [(7, [(6, 7) is not 1])]
INFO:root:Trying {}
INFO:root:Starting Step 1
INFO:root:Current state [[[[6], [7, 9], [1, 3, 4, 7, 9], [5, 7], [2, 3, 4, 5, 7], [2, 3, 4], [1, 2, 5], [1, 4, 5], [8]], [[5], [1, 3], [1, 3, 4], [9], [2, 3, 4, 6], [8], [1, 2, 4, 6], [1, 4, 6], [7]], [[8], [2], [4, 7], [5, 6, 7], [4, 5, 6, 7], [1], [4, 5, 6, 9], [3], [6, 9]], [[3], [4], [5, 6, 7], [2], [1, 5], [9], [6, 7], [8], [1, 6]], [[2], [7, 9], [5, 6, 7, 9], [1, 5], [8], [4, 6], [3], [4, 6, 7], [1, 6, 9]], [[1], [8], [6, 9], [3], [4, 6], [7], [4, 6, 9], [2], [5]], [[7], [5], [1, 3, 8], [4], [1, 3, 6], [3, 6], [1, 6, 8], [9], [2]], [[9], [1, 3, 6], [1, 2, 3, 8], [1, 6, 7, 8], [1, 2, 3, 6, 7], [5], [1, 6, 7, 8], [1, 6, 7], [4]], [[4], [1, 6], [1, 2, 8], [1, 6, 7, 8], [9], [2, 6], [1, 5, 6, 7, 8], [1, 5, 6, 7], [3]]]]
INFO:root:Doing checkSmall1
INFO:root:Getting tiny MUSes, distance 1, for 1 puzlits, 1 repeats
INFO:root:Chunked 1 in [1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
INFO:root:Doing checkSmall2
INFO:root:Getting tiny MUSes, distance 2, for 1 puzlits, 1 repeats
INFO:root:Chunked 1 in [1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
INFO:root:Considering 100 * 1 jobs for minsize=3
INFO:root:Chunked 100 in [9, 9, 9, 9, 8, 8, 8, 8, 8, 8, 8, 8]
INFO:root:Considering 100 * 1 jobs for minsize=4
INFO:root:Chunked 100 in [9, 9, 9, 9, 8, 8, 8, 8, 8, 8, 8, 8]
INFO:root:Considering 100 * 1 jobs for minsize=5
INFO:root:Chunked 100 in [9, 9, 9, 9, 8, 8, 8, 8, 8, 8, 8, 8]
INFO:root:Considering 100 * 1 jobs for minsize=6
INFO:root:Chunked 100 in [9, 9, 9, 9, 8, 8, 8, 8, 8, 8, 8, 8]
INFO:root:Considering 100 * 1 jobs for minsize=7
INFO:root:Chunked 100 in [9, 9, 9, 9, 8, 8, 8, 8, 8, 8, 8, 8]
INFO:root:XX found first (5, 9) is not 6 8
INFO:root:XX add new best (5, 9) is not 6 8 8
INFO:root:XX add new best (5, 9) is not 6 8 8
INFO:root:XX add new best (5, 9) is not 6 8 8
INFO:root:XX add new best (5, 9) is not 6 8 8
INFO:root:XX add new best (5, 9) is not 6 8 8
INFO:root:XX add new best (5, 9) is not 6 8 8
INFO:root:XX add new best (5, 9) is not 6 8 8
INFO:root:XX add new best (5, 9) is not 6 8 8
INFO:root:XX add new best (5, 9) is not 6 8 8
INFO:root:XX add new best (5, 9) is not 6 8 8
INFO:root:XX add new best (5, 9) is not 6 8 8
INFO:root:XX add new best (5, 9) is not 6 8 8
INFO:root:XX add new best (5, 9) is not 6 8 8
INFO:root:XX add new best (5, 9) is not 6 8 8
INFO:root:XX add new best (5, 9) is not 6 8 8
INFO:root:XX add new best (5, 9) is not 6 8 8
INFO:root:XX add new best (5, 9) is not 6 8 8
INFO:root:XX add new best (5, 9) is not 6 8 8
INFO:root:XX add new best (5, 9) is not 6 8 8
INFO:root:XX add new best (5, 9) is not 6 8 8
INFO:root:XX add new best (5, 9) is not 6 8 8
INFO:root:XX add new best (5, 9) is not 6 8 8
INFO:root:XX add new best (5, 9) is not 6 8 8
INFO:root:XX add new best (5, 9) is not 6 8 8
INFO:root:XX add new best (5, 9) is not 6 8 8
INFO:root:XX add new best (5, 9) is not 6 8 8
INFO:root:XX add new best (5, 9) is not 6 8 8
INFO:root:XX add new best (5, 9) is not 6 8 8
INFO:root:XX add new best (5, 9) is not 6 8 8
INFO:root:XX add new best (5, 9) is not 6 8 8
INFO:root:XX add new best (5, 9) is not 6 8 8
INFO:root:XX add new best (5, 9) is not 6 8 8
INFO:root:XX add new best (5, 9) is not 6 8 8
INFO:root:XX add new best (5, 9) is not 6 8 8
INFO:root:XX add new best (5, 9) is not 6 8 8
INFO:root:XX add new best (5, 9) is not 6 8 8
INFO:root:XX add new best (5, 9) is not 6 8 8
INFO:root:XX add new best (5, 9) is not 6 8 8
INFO:root:XX add new best (5, 9) is not 6 8 8
INFO:root:XX add new best (5, 9) is not 6 8 8
INFO:root:XX add new best (5, 9) is not 6 8 8
INFO:root:XX add new best (5, 9) is not 6 8 8
INFO:root:XX add new best (5, 9) is not 6 8 8
INFO:root:XX add new best (5, 9) is not 6 8 8
INFO:root:XX add new best (5, 9) is not 6 8 8
INFO:root:XX add new best (5, 9) is not 6 8 8
INFO:root:XX add new best (5, 9) is not 6 8 8
INFO:root:XX add new best (5, 9) is not 6 8 8
INFO:root:XX add new best (5, 9) is not 6 8 8
INFO:root:XX add new best (5, 9) is not 6 8 8
INFO:root:XX add new best (5, 9) is not 6 8 8
INFO:root:XX add new best (5, 9) is not 6 8 8
INFO:root:XX add new best (5, 9) is not 6 8 8
INFO:root:XX add new best (5, 9) is not 6 8 8
INFO:root:XX add new best (5, 9) is not 6 8 8
INFO:root:XX add new best (5, 9) is not 6 8 8
INFO:root:XX add new best (5, 9) is not 6 8 8
INFO:root:XX add new best (5, 9) is not 6 8 8
INFO:root:XX add new best (5, 9) is not 6 8 8
INFO:root:XX add new best (5, 9) is not 6 8 8
INFO:root:XX add new best (5, 9) is not 6 8 8
INFO:root:XX add new best (5, 9) is not 6 8 8
INFO:root:XX add new best (5, 9) is not 6 8 8
INFO:root:XX add new best (5, 9) is not 6 8 8
INFO:root:XX add new best (5, 9) is not 6 8 8
INFO:root:XX add new best (5, 9) is not 6 8 8
INFO:root:XX add new best (5, 9) is not 6 8 8
INFO:root:XX add new best (5, 9) is not 6 8 8
INFO:root:XX add new best (5, 9) is not 6 8 8
INFO:root:XX add new best (5, 9) is not 6 8 8
INFO:root:XX add new best (5, 9) is not 6 8 8
INFO:root:XX add new best (5, 9) is not 6 8 8
INFO:root:XX add new best (5, 9) is not 6 8 8
INFO:root:XX add new best (5, 9) is not 6 8 8
INFO:root:XX add new best (5, 9) is not 6 8 8
INFO:root:XX add new best (5, 9) is not 6 8 8
INFO:root:XX add new best (5, 9) is not 6 8 8
INFO:root:XX add new best (5, 9) is not 6 8 8
INFO:root:XX add new best (5, 9) is not 6 8 8
INFO:root:XX add new best (5, 9) is not 6 8 8
INFO:root:XX add new best (5, 9) is not 6 8 8
INFO:root:XX add new best (5, 9) is not 6 8 8
INFO:root:XX add new best (5, 9) is not 6 8 8
INFO:root:XX add new best (5, 9) is not 6 8 8
INFO:root:XX add new best (5, 9) is not 6 8 8
INFO:root:XX add new best (5, 9) is not 6 8 8
INFO:root:XX add new best (5, 9) is not 6 8 8
INFO:root:XX add new best (5, 9) is not 6 8 8
INFO:root:XX add new best (5, 9) is not 6 8 8
INFO:root:XX add new best (5, 9) is not 6 8 8
INFO:root:XX add new best (5, 9) is not 6 8 8
INFO:root:XX add new best (5, 9) is not 6 8 8
INFO:root:XX add new best (5, 9) is not 6 8 8
INFO:root:XX add new best (5, 9) is not 6 8 8
INFO:root:XX add new best (5, 9) is not 6 8 8
INFO:root:XX add new best (5, 9) is not 6 8 8
INFO:root:XX add new best (5, 9) is not 6 8 8
INFO:root:XX add new best (5, 9) is not 6 8 8
INFO:root:XX add new best (5, 9) is not 6 8 8
INFO:root:Considering 100 * 1 jobs for minsize=8
INFO:root:Chunked 100 in [9, 9, 9, 9, 8, 8, 8, 8, 8, 8, 8, 8]
INFO:root:XX add new best (5, 9) is not 6 8 8
INFO:root:XX add new best (5, 9) is not 6 8 8
INFO:root:XX add new best (5, 9) is not 6 8 8
INFO:root:XX add new best (5, 9) is not 6 8 8
INFO:root:XX add new best (5, 9) is not 6 8 8
INFO:root:XX add new best (5, 9) is not 6 8 8
INFO:root:XX add new best (5, 9) is not 6 8 8
INFO:root:XX add new best (5, 9) is not 6 8 8
INFO:root:XX add new best (5, 9) is not 6 8 8
INFO:root:XX add new best (5, 9) is not 6 8 8
INFO:root:XX add new best (5, 9) is not 6 8 8
INFO:root:XX add new best (5, 9) is not 6 8 8
INFO:root:XX add new best (5, 9) is not 6 8 8
INFO:root:XX add new best (5, 9) is not 6 8 8
INFO:root:XX add new best (5, 9) is not 6 8 8
INFO:root:XX add new best (5, 9) is not 6 8 8
INFO:root:XX add new best (5, 9) is not 6 8 8
INFO:root:XX add new best (5, 9) is not 6 8 8
INFO:root:XX add new best (5, 9) is not 6 8 8
INFO:root:XX add new best (5, 9) is not 6 8 8
INFO:root:XX add new best (5, 9) is not 6 8 8
INFO:root:XX add new best (5, 9) is not 6 8 8
INFO:root:XX add new best (5, 9) is not 6 8 8
INFO:root:XX add new best (5, 9) is not 6 8 8
INFO:root:XX add new best (5, 9) is not 6 8 8
INFO:root:XX add new best (5, 9) is not 6 8 8
INFO:root:XX add new best (5, 9) is not 6 8 8
INFO:root:XX add new best (5, 9) is not 6 8 8
INFO:root:XX add new best (5, 9) is not 6 8 8
INFO:root:XX add new best (5, 9) is not 6 8 8
INFO:root:XX add new best (5, 9) is not 6 8 8
INFO:root:XX add new best (5, 9) is not 6 8 8
INFO:root:XX add new best (5, 9) is not 6 8 8
INFO:root:XX add new best (5, 9) is not 6 8 8
INFO:root:XX add new best (5, 9) is not 6 8 8
INFO:root:XX add new best (5, 9) is not 6 8 8
INFO:root:XX add new best (5, 9) is not 6 8 8
INFO:root:XX add new best (5, 9) is not 6 8 8
INFO:root:XX add new best (5, 9) is not 6 8 8
INFO:root:XX add new best (5, 9) is not 6 8 8
INFO:root:XX add new best (5, 9) is not 6 8 8
INFO:root:XX add new best (5, 9) is not 6 8 8
INFO:root:XX add new best (5, 9) is not 6 8 8
INFO:root:XX add new best (5, 9) is not 6 8 8
INFO:root:XX add new best (5, 9) is not 6 8 8
INFO:root:XX add new best (5, 9) is not 6 8 8
INFO:root:XX add new best (5, 9) is not 6 8 8
INFO:root:XX add new best (5, 9) is not 6 8 8
INFO:root:XX add new best (5, 9) is not 6 8 8
INFO:root:XX add new best (5, 9) is not 6 8 8
INFO:root:XX add new best (5, 9) is not 6 8 8
INFO:root:XX add new best (5, 9) is not 6 8 8
INFO:root:XX add new best (5, 9) is not 6 8 8
INFO:root:XX add new best (5, 9) is not 6 8 8
INFO:root:XX add new best (5, 9) is not 6 8 8
INFO:root:XX add new best (5, 9) is not 6 8 8
INFO:root:XX add new best (5, 9) is not 6 8 8
INFO:root:XX add new best (5, 9) is not 6 8 8
INFO:root:XX add new best (5, 9) is not 6 8 8
INFO:root:XX add new best (5, 9) is not 6 8 8
INFO:root:XX add new best (5, 9) is not 6 8 8
INFO:root:XX add new best (5, 9) is not 6 8 8
INFO:root:XX add new best (5, 9) is not 6 8 8
INFO:root:XX add new best (5, 9) is not 6 8 8
INFO:root:XX add new best (5, 9) is not 6 8 8
INFO:root:XX add new best (5, 9) is not 6 8 8
INFO:root:XX add new best (5, 9) is not 6 8 8
INFO:root:XX add new best (5, 9) is not 6 8 8
INFO:root:XX add new best (5, 9) is not 6 8 8
INFO:root:XX add new best (5, 9) is not 6 8 8
INFO:root:XX add new best (5, 9) is not 6 8 8
INFO:root:XX add new best (5, 9) is not 6 8 8
INFO:root:XX add new best (5, 9) is not 6 8 8
INFO:root:XX add new best (5, 9) is not 6 8 8
INFO:root:XX add new best (5, 9) is not 6 8 8
INFO:root:XX add new best (5, 9) is not 6 8 8
INFO:root:XX add new best (5, 9) is not 6 8 8
INFO:root:XX add new best (5, 9) is not 6 8 8
INFO:root:XX add new best (5, 9) is not 6 8 8
INFO:root:XX add new best (5, 9) is not 6 8 8
INFO:root:XX add new best (5, 9) is not 6 8 8
INFO:root:XX add new best (5, 9) is not 6 8 8
INFO:root:XX add new best (5, 9) is not 6 8 8
INFO:root:XX add new best (5, 9) is not 6 8 8
INFO:root:XX add new best (5, 9) is not 6 8 8
INFO:root:XX add new best (5, 9) is not 6 8 8
INFO:root:XX add new best (5, 9) is not 6 8 8
INFO:root:XX add new best (5, 9) is not 6 8 8
INFO:root:XX add new best (5, 9) is not 6 8 8
INFO:root:XX add new best (5, 9) is not 6 8 8
INFO:root:XX add new best (5, 9) is not 6 8 8
INFO:root:XX add new best (5, 9) is not 6 8 8
INFO:root:XX add new best (5, 9) is not 6 8 8
INFO:root:XX add new best (5, 9) is not 6 8 8
INFO:root:XX add new best (5, 9) is not 6 8 8
INFO:root:XX add new best (5, 9) is not 6 8 8
INFO:root:XX add new best (5, 9) is not 6 8 8
INFO:root:XX add new best (5, 9) is not 6 8 8
INFO:root:XX add new best (5, 9) is not 6 8 8
INFO:root:XX add new best (5, 9) is not 6 8 8
INFO:root:Trace: [(8, [(5, 9) is not 6])]
INFO:root:Trace Quality: [(8, 1)]
INFO:root:Trace Sorted: [(8, 1)]
INFO:root:Finished
INFO:root:Full Trace [(8, [(5, 9) is not 6])]
INFO:root:Trying {'prechopMUSes': True}
INFO:root:Starting Step 1
INFO:root:Current state [[[[6], [7, 9], [1, 3, 4, 7, 9], [5, 7], [2, 3, 4, 5, 7], [2, 3, 4], [1, 2, 5], [1, 4, 5], [8]], [[5], [1, 3], [1, 3, 4], [9], [2, 3, 4, 6], [8], [1, 2, 4, 6], [1, 4, 6], [7]], [[8], [2], [4, 7], [5, 6, 7], [4, 5, 6, 7], [1], [4, 5, 6, 9], [3], [6, 9]], [[3], [4], [5, 6, 7], [2], [1, 5], [9], [6, 7], [8], [1, 6]], [[2], [7, 9], [5, 6, 7, 9], [1, 5], [8], [4, 6], [3], [4, 6, 7], [1, 6, 9]], [[1], [8], [6, 9], [3], [4, 6], [7], [4, 6, 9], [2], [5]], [[7], [5], [1, 3, 8], [4], [1, 3, 6], [3, 6], [1, 6, 8], [9], [2]], [[9], [1, 3, 6], [1, 2, 3, 8], [1, 6, 7, 8], [1, 2, 3, 6, 7], [5], [1, 6, 7, 8], [1, 6, 7], [4]], [[4], [1, 6], [1, 2, 8], [1, 6, 7, 8], [9], [2, 6], [1, 5, 6, 7, 8], [1, 5, 6, 7], [3]]]]
INFO:root:Doing checkSmall1
INFO:root:Getting tiny MUSes, distance 1, for 1 puzlits, 1 repeats
INFO:root:Chunked 1 in [1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
INFO:root:Doing checkSmall2
INFO:root:Getting tiny MUSes, distance 2, for 1 puzlits, 1 repeats
INFO:root:Chunked 1 in [1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
INFO:root:Considering 100 * 1 jobs for minsize=3
INFO:root:Chunked 100 in [9, 9, 9, 9, 8, 8, 8, 8, 8, 8, 8, 8]
INFO:root:Considering 100 * 1 jobs for minsize=4
INFO:root:Chunked 100 in [9, 9, 9, 9, 8, 8, 8, 8, 8, 8, 8, 8]
INFO:root:Considering 100 * 1 jobs for minsize=5
INFO:root:Chunked 100 in [9, 9, 9, 9, 8, 8, 8, 8, 8, 8, 8, 8]
INFO:root:Considering 100 * 1 jobs for minsize=6
INFO:root:Chunked 100 in [9, 9, 9, 9, 8, 8, 8, 8, 8, 8, 8, 8]
INFO:root:XX found first (5, 9) is not 6 7
INFO:root:XX add new best (5, 9) is not 6 7 7
INFO:root:XX add new best (5, 9) is not 6 7 7
INFO:root:XX add new best (5, 9) is not 6 7 7
INFO:root:XX add new best (5, 9) is not 6 7 7
INFO:root:XX add new best (5, 9) is not 6 7 7
INFO:root:XX add new best (5, 9) is not 6 7 7
INFO:root:XX add new best (5, 9) is not 6 7 7
INFO:root:XX add new best (5, 9) is not 6 7 7
INFO:root:XX add new best (5, 9) is not 6 7 7
INFO:root:XX add new best (5, 9) is not 6 7 7
INFO:root:XX add new best (5, 9) is not 6 7 7
INFO:root:Considering 100 * 1 jobs for minsize=7
INFO:root:Chunked 100 in [9, 9, 9, 9, 8, 8, 8, 8, 8, 8, 8, 8]
INFO:root:XX add new best (5, 9) is not 6 7 7
INFO:root:XX add new best (5, 9) is not 6 7 7
INFO:root:XX add new best (5, 9) is not 6 7 7
INFO:root:XX add new best (5, 9) is not 6 7 7
INFO:root:XX add new best (5, 9) is not 6 7 7
INFO:root:XX add new best (5, 9) is not 6 7 7
INFO:root:XX add new best (5, 9) is not 6 7 7
INFO:root:XX add new best (5, 9) is not 6 7 7
INFO:root:XX add new best (5, 9) is not 6 7 7
INFO:root:XX add new best (5, 9) is not 6 7 7
INFO:root:XX add new best (5, 9) is not 6 7 7
INFO:root:XX add new best (5, 9) is not 6 7 7
INFO:root:XX add new best (5, 9) is not 6 7 7
INFO:root:XX add new best (5, 9) is not 6 7 7
INFO:root:XX add new best (5, 9) is not 6 7 7
INFO:root:XX add new best (5, 9) is not 6 7 7
INFO:root:XX add new best (5, 9) is not 6 7 7
INFO:root:XX add new best (5, 9) is not 6 7 7
INFO:root:XX add new best (5, 9) is not 6 7 7
INFO:root:Trace: [(7, [(5, 9) is not 6])]
INFO:root:Trace Quality: [(7, 1)]
INFO:root:Trace Sorted: [(7, 1)]
INFO:root:Finished
INFO:root:Full Trace [(7, [(5, 9) is not 6])]
INFO:root:Trying {'quarterChopMUS': True}
INFO:root:Starting Step 1
INFO:root:Current state [[[[6], [7, 9], [1, 3, 4, 7, 9], [5, 7], [2, 3, 4, 5, 7], [2, 3, 4], [1, 2, 5], [1, 4, 5], [8]], [[5], [1, 3], [1, 3, 4], [9], [2, 3, 4, 6], [8], [1, 2, 4, 6], [1, 4, 6], [7]], [[8], [2], [4, 7], [5, 6, 7], [4, 5, 6, 7], [1], [4, 5, 6, 9], [3], [6, 9]], [[3], [4], [5, 6, 7], [2], [1, 5], [9], [6, 7], [8], [1, 6]], [[2], [7, 9], [5, 6, 7, 9], [1, 5], [8], [4, 6], [3], [4, 6, 7], [1, 6, 9]], [[1], [8], [6, 9], [3], [4, 6], [7], [4, 6, 9], [2], [5]], [[7], [5], [1, 3, 8], [4], [1, 3, 6], [3, 6], [1, 6, 8], [9], [2]], [[9], [1, 3, 6], [1, 2, 3, 8], [1, 6, 7, 8], [1, 2, 3, 6, 7], [5], [1, 6, 7, 8], [1, 6, 7], [4]], [[4], [1, 6], [1, 2, 8], [1, 6, 7, 8], [9], [2, 6], [1, 5, 6, 7, 8], [1, 5, 6, 7], [3]]]]
INFO:root:Doing checkSmall1
INFO:root:Getting tiny MUSes, distance 1, for 1 puzlits, 1 repeats
INFO:root:Chunked 1 in [1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
INFO:root:Doing checkSmall2
INFO:root:Getting tiny MUSes, distance 2, for 1 puzlits, 1 repeats
INFO:root:Chunked 1 in [1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
INFO:root:Considering 100 * 1 jobs for minsize=3
INFO:root:Chunked 100 in [9, 9, 9, 9, 8, 8, 8, 8, 8, 8, 8, 8]
INFO:root:Considering 100 * 1 jobs for minsize=4
INFO:root:Chunked 100 in [9, 9, 9, 9, 8, 8, 8, 8, 8, 8, 8, 8]
INFO:root:Considering 100 * 1 jobs for minsize=5
INFO:root:Chunked 100 in [9, 9, 9, 9, 8, 8, 8, 8, 8, 8, 8, 8]
INFO:root:Considering 100 * 1 jobs for minsize=6
INFO:root:Chunked 100 in [9, 9, 9, 9, 8, 8, 8, 8, 8, 8, 8, 8]
INFO:root:XX found first (5, 9) is not 6 7
INFO:root:XX add new best (5, 9) is not 6 7 7
INFO:root:XX add new best (5, 9) is not 6 7 7
INFO:root:XX add new best (5, 9) is not 6 7 7
INFO:root:XX add new best (5, 9) is not 6 7 7
INFO:root:XX add new best (5, 9) is not 6 7 7
INFO:root:XX add new best (5, 9) is not 6 7 7
INFO:root:XX add new best (5, 9) is not 6 7 7
INFO:root:XX add new best (5, 9) is not 6 7 7
INFO:root:XX add new best (5, 9) is not 6 7 7
INFO:root:XX add new best (5, 9) is not 6 7 7
INFO:root:XX add new best (5, 9) is not 6 7 7
INFO:root:Considering 100 * 1 jobs for minsize=7
INFO:root:Chunked 100 in [9, 9, 9, 9, 8, 8, 8, 8, 8, 8, 8, 8]
INFO:root:XX add new best (5, 9) is not 6 7 7
INFO:root:XX add new best (5, 9) is not 6 7 7
INFO:root:XX add new best (5, 9) is not 6 7 7
INFO:root:XX add new best (5, 9) is not 6 7 7
INFO:root:XX add new best (5, 9) is not 6 7 7
INFO:root:XX add new best (5, 9) is not 6 7 7
INFO:root:XX add new best (5, 9) is not 6 7 7
INFO:root:XX add new best (5, 9) is not 6 7 7
INFO:root:XX add new best (5, 9) is not 6 7 7
INFO:root:XX add new best (5, 9) is not 6 7 7
INFO:root:XX add new best (5, 9) is not 6 7 7
INFO:root:XX add new best (5, 9) is not 6 7 7
INFO:root:XX add new best (5, 9) is not 6 7 7
INFO:root:XX add new best (5, 9) is not 6 7 7
INFO:root:XX add new best (5, 9) is not 6 7 7
INFO:root:XX add new best (5, 9) is not 6 7 7
INFO:root:Trace: [(7, [(5, 9) is not 6])]
INFO:root:Trace Quality: [(7, 1)]
INFO:root:Trace Sorted: [(7, 1)]
INFO:root:Finished
INFO:root:Full Trace [(7, [(5, 9) is not 6])]
INFO:root:Trying {'minPrecheckMUS': True}
INFO:root:Starting Step 1
INFO:root:Current state [[[[6], [7, 9], [1, 3, 4, 7, 9], [5, 7], [2, 3, 4, 5, 7], [2, 3, 4], [1, 2, 5], [1, 4, 5], [8]], [[5], [1, 3], [1, 3, 4], [9], [2, 3, 4, 6], [8], [1, 2, 4, 6], [1, 4, 6], [7]], [[8], [2], [4, 7], [5, 6, 7], [4, 5, 6, 7], [1], [4, 5, 6, 9], [3], [6, 9]], [[3], [4], [5, 6, 7], [2], [1, 5], [9], [6, 7], [8], [1, 6]], [[2], [7, 9], [5, 6, 7, 9], [1, 5], [8], [4, 6], [3], [4, 6, 7], [1, 6, 9]], [[1], [8], [6, 9], [3], [4, 6], [7], [4, 6, 9], [2], [5]], [[7], [5], [1, 3, 8], [4], [1, 3, 6], [3, 6], [1, 6, 8], [9], [2]], [[9], [1, 3, 6], [1, 2, 3, 8], [1, 6, 7, 8], [1, 2, 3, 6, 7], [5], [1, 6, 7, 8], [1, 6, 7], [4]], [[4], [1, 6], [1, 2, 8], [1, 6, 7, 8], [9], [2, 6], [1, 5, 6, 7, 8], [1, 5, 6, 7], [3]]]]
INFO:root:Doing checkSmall1
INFO:root:Getting tiny MUSes, distance 1, for 1 puzlits, 1 repeats
INFO:root:Chunked 1 in [1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
INFO:root:Doing checkSmall2
INFO:root:Getting tiny MUSes, distance 2, for 1 puzlits, 1 repeats
INFO:root:Chunked 1 in [1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
INFO:root:Considering 100 * 1 jobs for minsize=3
INFO:root:Chunked 100 in [9, 9, 9, 9, 8, 8, 8, 8, 8, 8, 8, 8]
INFO:root:Considering 100 * 1 jobs for minsize=4
INFO:root:Chunked 100 in [9, 9, 9, 9, 8, 8, 8, 8, 8, 8, 8, 8]
INFO:root:Considering 100 * 1 jobs for minsize=5
INFO:root:Chunked 100 in [9, 9, 9, 9, 8, 8, 8, 8, 8, 8, 8, 8]
INFO:root:Considering 100 * 1 jobs for minsize=6
INFO:root:Chunked 100 in [9, 9, 9, 9, 8, 8, 8, 8, 8, 8, 8, 8]
INFO:root:XX found first (5, 9) is not 6 7
INFO:root:XX add new best (5, 9) is not 6 7 7
INFO:root:XX add new best (5, 9) is not 6 7 7
INFO:root:XX add new best (5, 9) is not 6 7 7
INFO:root:XX add new best (5, 9) is not 6 7 7
INFO:root:XX add new best (5, 9) is not 6 7 7
INFO:root:XX add new best (5, 9) is not 6 7 7
INFO:root:XX add new best (5, 9) is not 6 7 7
INFO:root:XX add new best (5, 9) is not 6 7 7
INFO:root:XX add new best (5, 9) is not 6 7 7
INFO:root:XX add new best (5, 9) is not 6 7 7
INFO:root:XX add new best (5, 9) is not 6 7 7
INFO:root:Considering 100 * 1 jobs for minsize=7
INFO:root:Chunked 100 in [9, 9, 9, 9, 8, 8, 8, 8, 8, 8, 8, 8]
INFO:root:XX add new best (5, 9) is not 6 7 7
INFO:root:XX add new best (5, 9) is not 6 7 7
INFO:root:XX add new best (5, 9) is not 6 7 7
INFO:root:XX add new best (5, 9) is not 6 7 7
INFO:root:XX add new best (5, 9) is not 6 7 7
INFO:root:XX add new best (5, 9) is not 6 7 7
INFO:root:XX add new best (5, 9) is not 6 7 7
INFO:root:XX add new best (5, 9) is not 6 7 7
INFO:root:XX add new best (5, 9) is not 6 7 7
INFO:root:XX add new best (5, 9) is not 6 7 7
INFO:root:XX add new best (5, 9) is not 6 7 7
INFO:root:XX add new best (5, 9) is not 6 7 7
INFO:root:XX add new best (5, 9) is not 6 7 7
INFO:root:Trace: [(7, [(5, 9) is not 6])]
INFO:root:Trace Quality: [(7, 1)]
INFO:root:Trace Sorted: [(7, 1)]
INFO:root:Finished
INFO:root:Full Trace [(7, [(5, 9) is not 6])]
INFO:root:Trying {'gallopingMUSes': True}
INFO:root:Starting Step 1
INFO:root:Current state [[[[6], [7, 9], [1, 3, 4, 7, 9], [5, 7], [2, 3, 4, 5, 7], [2, 3, 4], [1, 2, 5], [1, 4, 5], [8]], [[5], [1, 3], [1, 3, 4], [9], [2, 3, 4, 6], [8], [1, 2, 4, 6], [1, 4, 6], [7]], [[8], [2], [4, 7], [5, 6, 7], [4, 5, 6, 7], [1], [4, 5, 6, 9], [3], [6, 9]], [[3], [4], [5, 6, 7], [2], [1, 5], [9], [6, 7], [8], [1, 6]], [[2], [7, 9], [5, 6, 7, 9], [1, 5], [8], [4, 6], [3], [4, 6, 7], [1, 6, 9]], [[1], [8], [6, 9], [3], [4, 6], [7], [4, 6, 9], [2], [5]], [[7], [5], [1, 3, 8], [4], [1, 3, 6], [3, 6], [1, 6, 8], [9], [2]], [[9], [1, 3, 6], [1, 2, 3, 8], [1, 6, 7, 8], [1, 2, 3, 6, 7], [5], [1, 6, 7, 8], [1, 6, 7], [4]], [[4], [1, 6], [1, 2, 8], [1, 6, 7, 8], [9], [2, 6], [1, 5, 6, 7, 8], [1, 5, 6, 7], [3]]]]
INFO:root:Doing checkSmall1
INFO:root:Getting tiny MUSes, distance 1, for 1 puzlits, 1 repeats
INFO:root:Chunked 1 in [1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
INFO:root:Doing checkSmall2
INFO:root:Getting tiny MUSes, distance 2, for 1 puzlits, 1 repeats
INFO:root:Chunked 1 in [1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
INFO:root:Considering 100 * 1 jobs for minsize=3
INFO:root:Chunked 100 in [9, 9, 9, 9, 8, 8, 8, 8, 8, 8, 8, 8]
INFO:root:Considering 100 * 1 jobs for minsize=4
INFO:root:Chunked 100 in [9, 9, 9, 9, 8, 8, 8, 8, 8, 8, 8, 8]
INFO:root:Considering 100 * 1 jobs for minsize=5
INFO:root:Chunked 100 in [9, 9, 9, 9, 8, 8, 8, 8, 8, 8, 8, 8]
INFO:root:Considering 100 * 1 jobs for minsize=6
INFO:root:Chunked 100 in [9, 9, 9, 9, 8, 8, 8, 8, 8, 8, 8, 8]
INFO:root:XX found first (5, 9) is not 6 7
INFO:root:XX add new best (5, 9) is not 6 7 7
INFO:root:XX add new best (5, 9) is not 6 7 7
INFO:root:XX add new best (5, 9) is not 6 7 7
INFO:root:XX add new best (5, 9) is not 6 7 7
INFO:root:XX add new best (5, 9) is not 6 7 7
INFO:root:XX add new best (5, 9) is not 6 7 7
INFO:root:XX add new best (5, 9) is not 6 7 7
INFO:root:XX add new best (5, 9) is not 6 7 7
INFO:root:XX add new best (5, 9) is not 6 7 7
INFO:root:XX add new best (5, 9) is not 6 7 7
INFO:root:Considering 100 * 1 jobs for minsize=7
INFO:root:Chunked 100 in [9, 9, 9, 9, 8, 8, 8, 8, 8, 8, 8, 8]
INFO:root:XX add new best (5, 9) is not 6 7 7
INFO:root:XX add new best (5, 9) is not 6 7 7
INFO:root:XX add new best (5, 9) is not 6 7 7
INFO:root:XX add new best (5, 9) is not 6 7 7
INFO:root:XX add new best (5, 9) is not 6 7 7
INFO:root:XX add new best (5, 9) is not 6 7 7
INFO:root:XX add new best (5, 9) is not 6 7 7
INFO:root:XX add new best (5, 9) is not 6 7 7
INFO:root:XX add new best (5, 9) is not 6 7 7
INFO:root:XX add new best (5, 9) is not 6 7 7
INFO:root:Trace: [(7, [(5, 9) is not 6])]
INFO:root:Trace Quality: [(7, 1)]
INFO:root:Trace Sorted: [(7, 1)]
INFO:root:Finished
INFO:root:Full Trace [(7, [(5, 9) is not 6])]
INFO:root:Trying {'minPrecheckStepsMUS': True}
INFO:root:Starting Step 1
INFO:root:Current state [[[[6], [7, 9], [1, 3, 4, 7, 9], [5, 7], [2, 3, 4, 5, 7], [2, 3, 4], [1, 2, 5], [1, 4, 5], [8]], [[5], [1, 3], [1, 3, 4], [9], [2, 3, 4, 6], [8], [1, 2, 4, 6], [1, 4, 6], [7]], [[8], [2], [4, 7], [5, 6, 7], [4, 5, 6, 7], [1], [4, 5, 6, 9], [3], [6, 9]], [[3], [4], [5, 6, 7], [2], [1, 5], [9], [6, 7], [8], [1, 6]], [[2], [7, 9], [5, 6, 7, 9], [1, 5], [8], [4, 6], [3], [4, 6, 7], [1, 6, 9]], [[1], [8], [6, 9], [3], [4, 6], [7], [4, 6, 9], [2], [5]], [[7], [5], [1, 3, 8], [4], [1, 3, 6], [3, 6], [1, 6, 8], [9], [2]], [[9], [1, 3, 6], [1, 2, 3, 8], [1, 6, 7, 8], [1, 2, 3, 6, 7], [5], [1, 6, 7, 8], [1, 6, 7], [4]], [[4], [1, 6], [1, 2, 8], [1, 6, 7, 8], [9], [2, 6], [1, 5, 6, 7, 8], [1, 5, 6, 7], [3]]]]
INFO:root:Doing checkSmall1
INFO:root:Getting tiny MUSes, distance 1, for 1 puzlits, 1 repeats
INFO:root:Chunked 1 in [1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
INFO:root:Doing checkSmall2
INFO:root:Getting tiny MUSes, distance 2, for 1 puzlits, 1 repeats
INFO:root:Chunked 1 in [1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
INFO:root:Considering 100 * 1 jobs for minsize=3
INFO:root:Chunked 100 in [9, 9, 9, 9, 8, 8, 8, 8, 8, 8, 8, 8]
INFO:root:Considering 100 * 1 jobs for minsize=4
INFO:root:Chunked 100 in [9, 9, 9, 9, 8, 8, 8, 8, 8, 8, 8, 8]
INFO:root:Considering 100 * 1 jobs for minsize=5
INFO:root:Chunked 100 in [9, 9, 9, 9, 8, 8, 8, 8, 8, 8, 8, 8]
INFO:root:Considering 100 * 1 jobs for minsize=6
INFO:root:Chunked 100 in [9, 9, 9, 9, 8, 8, 8, 8, 8, 8, 8, 8]
INFO:root:XX found first (5, 9) is not 6 7
INFO:root:XX add new best (5, 9) is not 6 7 7
INFO:root:XX add new best (5, 9) is not 6 7 7
INFO:root:XX add new best (5, 9) is not 6 7 7
INFO:root:XX add new best (5, 9) is not 6 7 7
INFO:root:XX add new best (5, 9) is not 6 7 7
INFO:root:XX add new best (5, 9) is not 6 7 7
INFO:root:XX add new best (5, 9) is not 6 7 7
INFO:root:XX add new best (5, 9) is not 6 7 7
INFO:root:XX add new best (5, 9) is not 6 7 7
INFO:root:XX add new best (5, 9) is not 6 7 7
INFO:root:XX add new best (5, 9) is not 6 7 7
INFO:root:Considering 100 * 1 jobs for minsize=7
INFO:root:Chunked 100 in [9, 9, 9, 9, 8, 8, 8, 8, 8, 8, 8, 8]
INFO:root:XX add new best (5, 9) is not 6 7 7
INFO:root:XX add new best (5, 9) is not 6 7 7
INFO:root:XX add new best (5, 9) is not 6 7 7
INFO:root:XX add new best (5, 9) is not 6 7 7
INFO:root:XX add new best (5, 9) is not 6 7 7
INFO:root:XX add new best (5, 9) is not 6 7 7
INFO:root:XX add new best (5, 9) is not 6 7 7
INFO:root:XX add new best (5, 9) is not 6 7 7
INFO:root:XX add new best (5, 9) is not 6 7 7
INFO:root:XX add new best (5, 9) is not 6 7 7
INFO:root:XX add new best (5, 9) is not 6 7 7
INFO:root:XX add new best (5, 9) is not 6 7 7
INFO:root:XX add new best (5, 9) is not 6 7 7
INFO:root:Trace: [(7, [(5, 9) is not 6])]
INFO:root:Trace Quality: [(7, 1)]
INFO:root:Trace Sorted: [(7, 1)]
INFO:root:Finished
INFO:root:Full Trace [(7, [(5, 9) is not 6])]
INFO:root:Trying {'gallopingMUSes': True, 'minPrecheckMUS': True}
INFO:root:Starting Step 1
INFO:root:Current state [[[[6], [7, 9], [1, 3, 4, 7, 9], [5, 7], [2, 3, 4, 5, 7], [2, 3, 4], [1, 2, 5], [1, 4, 5], [8]], [[5], [1, 3], [1, 3, 4], [9], [2, 3, 4, 6], [8], [1, 2, 4, 6], [1, 4, 6], [7]], [[8], [2], [4, 7], [5, 6, 7], [4, 5, 6, 7], [1], [4, 5, 6, 9], [3], [6, 9]], [[3], [4], [5, 6, 7], [2], [1, 5], [9], [6, 7], [8], [1, 6]], [[2], [7, 9], [5, 6, 7, 9], [1, 5], [8], [4, 6], [3], [4, 6, 7], [1, 6, 9]], [[1], [8], [6, 9], [3], [4, 6], [7], [4, 6, 9], [2], [5]], [[7], [5], [1, 3, 8], [4], [1, 3, 6], [3, 6], [1, 6, 8], [9], [2]], [[9], [1, 3, 6], [1, 2, 3, 8], [1, 6, 7, 8], [1, 2, 3, 6, 7], [5], [1, 6, 7, 8], [1, 6, 7], [4]], [[4], [1, 6], [1, 2, 8], [1, 6, 7, 8], [9], [2, 6], [1, 5, 6, 7, 8], [1, 5, 6, 7], [3]]]]
INFO:root:Doing checkSmall1
INFO:root:Getting tiny MUSes, distance 1, for 1 puzlits, 1 repeats
INFO:root:Chunked 1 in [1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
INFO:root:Doing checkSmall2
INFO:root:Getting tiny MUSes, distance 2, for 1 puzlits, 1 repeats
INFO:root:Chunked 1 in [1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
INFO:root:Considering 100 * 1 jobs for minsize=3
INFO:root:Chunked 100 in [9, 9, 9, 9, 8, 8, 8, 8, 8, 8, 8, 8]
INFO:root:Considering 100 * 1 jobs for minsize=4
INFO:root:Chunked 100 in [9, 9, 9, 9, 8, 8, 8, 8, 8, 8, 8, 8]
INFO:root:Considering 100 * 1 jobs for minsize=5
INFO:root:Chunked 100 in [9, 9, 9, 9, 8, 8, 8, 8, 8, 8, 8, 8]
INFO:root:Considering 100 * 1 jobs for minsize=6
INFO:root:Chunked 100 in [9, 9, 9, 9, 8, 8, 8, 8, 8, 8, 8, 8]
INFO:root:XX found first (5, 9) is not 6 7
INFO:root:XX add new best (5, 9) is not 6 7 7
INFO:root:XX add new best (5, 9) is not 6 7 7
INFO:root:XX add new best (5, 9) is not 6 7 7
INFO:root:XX add new best (5, 9) is not 6 7 7
INFO:root:XX add new best (5, 9) is not 6 7 7
INFO:root:XX add new best (5, 9) is not 6 7 7
INFO:root:XX add new best (5, 9) is not 6 7 7
INFO:root:XX add new best (5, 9) is not 6 7 7
INFO:root:XX add new best (5, 9) is not 6 7 7
INFO:root:XX add new best (5, 9) is not 6 7 7
INFO:root:XX add new best (5, 9) is not 6 7 7
INFO:root:Considering 100 * 1 jobs for minsize=7
INFO:root:Chunked 100 in [9, 9, 9, 9, 8, 8, 8, 8, 8, 8, 8, 8]
INFO:root:XX add new best (5, 9) is not 6 7 7
INFO:root:XX add new best (5, 9) is not 6 7 7
INFO:root:XX add new best (5, 9) is not 6 7 7
INFO:root:XX add new best (5, 9) is not 6 7 7
INFO:root:XX add new best (5, 9) is not 6 7 7
INFO:root:XX add new best (5, 9) is not 6 7 7
INFO:root:XX add new best (5, 9) is not 6 7 7
INFO:root:XX add new best (5, 9) is not 6 7 7
INFO:root:XX add new best (5, 9) is not 6 7 7
INFO:root:XX add new best (5, 9) is not 6 7 7
INFO:root:XX add new best (5, 9) is not 6 7 7
INFO:root:XX add new best (5, 9) is not 6 7 7
INFO:root:XX add new best (5, 9) is not 6 7 7
INFO:root:Trace: [(7, [(5, 9) is not 6])]
INFO:root:Trace Quality: [(7, 1)]
INFO:root:Trace Sorted: [(7, 1)]
INFO:root:Finished
INFO:root:Full Trace [(7, [(5, 9) is not 6])]
INFO:root:Trying {}
INFO:root:Starting Step 1
INFO:root:Current state [[[[5, 9], [2], [4], [1], [3, 5], [5, 8], [6], [7], [3, 8, 9]], [[5, 9], [6], [3, 8], [2, 3, 8], [7], [2, 5, 8], [4], [1], [3, 8, 9]], [[7], [1, 8], [1, 3, 8], [9], [6], [4], [5, 8], [2], [3, 5, 8]], [[2], [4], [6], [5], [9], [1], [3], [8], [7]], [[1], [3], [5], [4], [8], [7], [2], [9], [6]], [[8], [7], [9], [6], [2], [3], [1], [5], [4]], [[4], [1, 8], [1, 2, 8], [3, 8], [3, 5], [9], [7], [6], [2, 5, 8]], [[3], [5], [2, 8], [7], [1], [6], [9], [4], [2, 8]], [[6], [9], [7], [2, 8], [4], [2, 5, 8], [5, 8], [3], [1]]]]
INFO:root:Doing checkSmall1
INFO:root:Getting tiny MUSes, distance 1, for 1 puzlits, 1 repeats
INFO:root:Chunked 1 in [1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
INFO:root:Doing checkSmall2
INFO:root:Getting tiny MUSes, distance 2, for 1 puzlits, 1 repeats
INFO:root:Chunked 1 in [1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
INFO:root:Considering 100 * 1 jobs for minsize=3
INFO:root:Chunked 100 in [9, 9, 9, 9, 8, 8, 8, 8, 8, 8, 8, 8]
INFO:root:Considering 100 * 1 jobs for minsize=4
INFO:root:Chunked 100 in [9, 9, 9, 9, 8, 8, 8, 8, 8, 8, 8, 8]
INFO:root:Considering 100 * 1 jobs for minsize=5
INFO:root:Chunked 100 in [9, 9, 9, 9, 8, 8, 8, 8, 8, 8, 8, 8]
INFO:root:Considering 100 * 1 jobs for minsize=6
INFO:root:Chunked 100 in [9, 9, 9, 9, 8, 8, 8, 8, 8, 8, 8, 8]
INFO:root:XX found first (3, 3) is not 8 7
INFO:root:XX add new best (3, 3) is not 8 7 7
INFO:root:XX add new best (3, 3) is not 8 7 7
INFO:root:XX add new best (3, 3) is not 8 7 7
INFO:root:XX add new best (3, 3) is not 8 7 7
INFO:root:XX add new best (3, 3) is not 8 7 7
INFO:root:XX add new best (3, 3) is not 8 7 7
INFO:root:XX add new best (3, 3) is not 8 7 7
INFO:root:XX add new best (3, 3) is not 8 7 7
INFO:root:XX add new best (3, 3) is not 8 7 7
INFO:root:XX add new best (3, 3) is not 8 7 7
INFO:root:XX add new best (3, 3) is not 8 7 7
INFO:root:XX add new best (3, 3) is not 8 7 7
INFO:root:XX add new best (3, 3) is not 8 7 7
INFO:root:XX add new best (3, 3) is not 8 7 7
INFO:root:XX add new best (3, 3) is not 8 7 7
INFO:root:XX add new best (3, 3) is not 8 7 7
INFO:root:XX add new best (3, 3) is not 8 7 7
INFO:root:XX add new best (3, 3) is not 8 7 7
INFO:root:XX add new best (3, 3) is not 8 7 7
INFO:root:XX add new best (3, 3) is not 8 7 7
INFO:root:XX add new best (3, 3) is not 8 7 7
INFO:root:XX add new best (3, 3) is not 8 7 7
INFO:root:XX add new best (3, 3) is not 8 7 7
INFO:root:XX add new best (3, 3) is not 8 7 7
INFO:root:XX add new best (3, 3) is not 8 7 7
INFO:root:XX add new best (3, 3) is not 8 7 7
INFO:root:XX add new best (3, 3) is not 8 7 7
INFO:root:XX add new best (3, 3) is not 8 7 7
INFO:root:XX add new best (3, 3) is not 8 7 7
INFO:root:XX add new best (3, 3) is not 8 7 7
INFO:root:XX add new best (3, 3) is not 8 7 7
INFO:root:XX add new best (3, 3) is not 8 7 7
INFO:root:XX add new best (3, 3) is not 8 7 7
INFO:root:XX add new best (3, 3) is not 8 7 7
INFO:root:XX add new best (3, 3) is not 8 7 7
INFO:root:XX add new best (3, 3) is not 8 7 7
INFO:root:XX add new best (3, 3) is not 8 7 7
INFO:root:XX add new best (3, 3) is not 8 7 7
INFO:root:XX add new best (3, 3) is not 8 7 7
INFO:root:XX add new best (3, 3) is not 8 7 7
INFO:root:XX add new best (3, 3) is not 8 7 7
INFO:root:XX add new best (3, 3) is not 8 7 7
INFO:root:XX add new best (3, 3) is not 8 7 7
INFO:root:XX add new best (3, 3) is not 8 7 7
INFO:root:XX add new best (3, 3) is not 8 7 7
INFO:root:XX add new best (3, 3) is not 8 7 7
INFO:root:XX add new best (3, 3) is not 8 7 7
INFO:root:XX add new best (3, 3) is not 8 7 7
INFO:root:XX add new best (3, 3) is not 8 7 7
INFO:root:XX add new best (3, 3) is not 8 7 7
INFO:root:XX add new best (3, 3) is not 8 7 7
INFO:root:XX add new best (3, 3) is not 8 7 7
INFO:root:XX add new best (3, 3) is not 8 7 7
INFO:root:XX add new best (3, 3) is not 8 7 7
INFO:root:XX add new best (3, 3) is not 8 7 7
INFO:root:XX add new best (3, 3) is not 8 7 7
INFO:root:XX add new best (3, 3) is not 8 7 7
INFO:root:XX add new best (3, 3) is not 8 7 7
INFO:root:XX add new best (3, 3) is not 8 7 7
INFO:root:XX add new best (3, 3) is not 8 7 7
INFO:root:XX add new best (3, 3) is not 8 7 7
INFO:root:XX add new best (3, 3) is not 8 7 7
INFO:root:XX add new best (3, 3) is not 8 7 7
INFO:root:XX add new best (3, 3) is not 8 7 7
INFO:root:XX add new best (3, 3) is not 8 7 7
INFO:root:XX add new best (3, 3) is not 8 7 7
INFO:root:XX add new best (3, 3) is not 8 7 7
INFO:root:XX add new best (3, 3) is not 8 7 7
INFO:root:XX add new best (3, 3) is not 8 7 7
INFO:root:XX add new best (3, 3) is not 8 7 7
INFO:root:XX add new best (3, 3) is not 8 7 7
INFO:root:XX add new best (3, 3) is not 8 7 7
INFO:root:XX add new best (3, 3) is not 8 7 7
INFO:root:XX add new best (3, 3) is not 8 7 7
INFO:root:Considering 100 * 1 jobs for minsize=7
INFO:root:Chunked 100 in [9, 9, 9, 9, 8, 8, 8, 8, 8, 8, 8, 8]
INFO:root:XX add new best (3, 3) is not 8 7 7
INFO:root:XX add new best (3, 3) is not 8 7 7
INFO:root:XX add new best (3, 3) is not 8 7 7
INFO:root:XX add new best (3, 3) is not 8 7 7
INFO:root:XX add new best (3, 3) is not 8 7 7
INFO:root:XX add new best (3, 3) is not 8 7 7
INFO:root:XX add new best (3, 3) is not 8 7 7
INFO:root:XX add new best (3, 3) is not 8 7 7
INFO:root:XX add new best (3, 3) is not 8 7 7
INFO:root:XX add new best (3, 3) is not 8 7 7
INFO:root:XX add new best (3, 3) is not 8 7 7
INFO:root:XX add new best (3, 3) is not 8 7 7
INFO:root:XX add new best (3, 3) is not 8 7 7
INFO:root:XX add new best (3, 3) is not 8 7 7
INFO:root:XX add new best (3, 3) is not 8 7 7
INFO:root:XX add new best (3, 3) is not 8 7 7
INFO:root:XX add new best (3, 3) is not 8 7 7
INFO:root:XX add new best (3, 3) is not 8 7 7
INFO:root:XX add new best (3, 3) is not 8 7 7
INFO:root:XX add new best (3, 3) is not 8 7 7
INFO:root:XX add new best (3, 3) is not 8 7 7
INFO:root:XX add new best (3, 3) is not 8 7 7
INFO:root:XX add new best (3, 3) is not 8 7 7
INFO:root:XX add new best (3, 3) is not 8 7 7
INFO:root:XX add new best (3, 3) is not 8 7 7
INFO:root:XX add new best (3, 3) is not 8 7 7
INFO:root:XX add new best (3, 3) is not 8 7 7
INFO:root:XX add new best (3, 3) is not 8 7 7
INFO:root:XX add new best (3, 3) is not 8 7 7
INFO:root:XX add new best (3, 3) is not 8 7 7
INFO:root:XX add new best (3, 3) is not 8 7 7
INFO:root:XX add new best (3, 3) is not 8 7 7
INFO:root:XX add new best (3, 3) is not 8 7 7
INFO:root:XX add new best (3, 3) is not 8 7 7
INFO:root:XX add new best (3, 3) is not 8 7 7
INFO:root:XX add new best (3, 3) is not 8 7 7
INFO:root:XX add new best (3, 3) is not 8 7 7
INFO:root:XX add new best (3, 3) is not 8 7 7
INFO:root:XX add new best (3, 3) is not 8 7 7
INFO:root:XX add new best (3, 3) is not 8 7 7
INFO:root:XX add new best (3, 3) is not 8 7 7
INFO:root:XX add new best (3, 3) is not 8 7 7
INFO:root:XX add new best (3, 3) is not 8 7 7
INFO:root:XX add new best (3, 3) is not 8 7 7
INFO:root:XX add new best (3, 3) is not 8 7 7
INFO:root:XX add new best (3, 3) is not 8 7 7
INFO:root:XX add new best (3, 3) is not 8 7 7
INFO:root:XX add new best (3, 3) is not 8 7 7
INFO:root:XX add new best (3, 3) is not 8 7 7
INFO:root:XX add new best (3, 3) is not 8 7 7
INFO:root:XX add new best (3, 3) is not 8 7 7
INFO:root:XX add new best (3, 3) is not 8 7 7
INFO:root:XX add new best (3, 3) is not 8 7 7
INFO:root:XX add new best (3, 3) is not 8 7 7
INFO:root:XX add new best (3, 3) is not 8 7 7
INFO:root:XX add new best (3, 3) is not 8 7 7
INFO:root:XX add new best (3, 3) is not 8 7 7
INFO:root:XX add new best (3, 3) is not 8 7 7
INFO:root:XX add new best (3, 3) is not 8 7 7
INFO:root:XX add new best (3, 3) is not 8 7 7
INFO:root:XX add new best (3, 3) is not 8 7 7
INFO:root:XX add new best (3, 3) is not 8 7 7
INFO:root:XX add new best (3, 3) is not 8 7 7
INFO:root:XX add new best (3, 3) is not 8 7 7
INFO:root:XX add new best (3, 3) is not 8 7 7
INFO:root:XX add new best (3, 3) is not 8 7 7
INFO:root:XX add new best (3, 3) is not 8 7 7
INFO:root:XX add new best (3, 3) is not 8 7 7
INFO:root:XX add new best (3, 3) is not 8 7 7
INFO:root:XX add new best (3, 3) is not 8 7 7
INFO:root:XX add new best (3, 3) is not 8 7 7
INFO:root:XX add new best (3, 3) is not 8 7 7
INFO:root:XX add new best (3, 3) is not 8 7 7
INFO:root:XX add new best (3, 3) is not 8 7 7
INFO:root:XX add new best (3, 3) is not 8 7 7
INFO:root:XX add new best (3, 3) is not 8 7 7
INFO:root:Trace: [(7, [(3, 3) is not 8])]
INFO:root:Trace Quality: [(7, 1)]
INFO:root:Trace Sorted: [(7, 1)]
INFO:root:Finished
INFO:root:Full Trace [(7, [(3, 3) is not 8])]
INFO:root:Trying {'prechopMUSes': True}
INFO:root:Starting Step 1
INFO:root:Current state [[[[5, 9], [2], [4], [1], [3, 5], [5, 8], [6], [7], [3, 8, 9]], [[5, 9], [6], [3, 8], [2, 3, 8], [7], [2, 5, 8], [4], [1], [3, 8, 9]], [[7], [1, 8], [1, 3, 8], [9], [6], [4], [5, 8], [2], [3, 5, 8]], [[2], [4], [6], [5], [9], [1], [3], [8], [7]], [[1], [3], [5], [4], [8], [7], [2], [9], [6]], [[8], [7], [9], [6], [2], [3], [1], [5], [4]], [[4], [1, 8], [1, 2, 8], [3, 8], [3, 5], [9], [7], [6], [2, 5, 8]], [[3], [5], [2, 8], [7], [1], [6], [9], [4], [2, 8]], [[6], [9], [7], [2, 8], [4], [2, 5, 8], [5, 8], [3], [1]]]]
INFO:root:Doing checkSmall1
INFO:root:Getting tiny MUSes, distance 1, for 1 puzlits, 1 repeats
INFO:root:Chunked 1 in [1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
INFO:root:Doing checkSmall2
INFO:root:Getting tiny MUSes, distance 2, for 1 puzlits, 1 repeats
INFO:root:Chunked 1 in [1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
INFO:root:Considering 100 * 1 jobs for minsize=3
INFO:root:Chunked 100 in [9, 9, 9, 9, 8, 8, 8, 8, 8, 8, 8, 8]
INFO:root:Considering 100 * 1 jobs for minsize=4
INFO:root:Chunked 100 in [9, 9, 9, 9, 8, 8, 8, 8, 8, 8, 8, 8]
INFO:root:XX found first (3, 3) is not 8 5
INFO:root:XX add new best (3, 3) is not 8 5 5
INFO:root:XX add new best (3, 3) is not 8 5 5
INFO:root:XX add new best (3, 3) is not 8 5 5
INFO:root:XX add new best (3, 3) is not 8 5 5
INFO:root:XX add new best (3, 3) is not 8 5 5
INFO:root:Considering 100 * 1 jobs for minsize=5
INFO:root:Chunked 100 in [9, 9, 9, 9, 8, 8, 8, 8, 8, 8, 8, 8]
INFO:root:XX add new best (3, 3) is not 8 5 5
INFO:root:XX add new best (3, 3) is not 8 5 5
INFO:root:XX add new best (3, 3) is not 8 5 5
INFO:root:XX add new best (3, 3) is not 8 5 5
INFO:root:XX add new best (3, 3) is not 8 5 5
INFO:root:XX add new best (3, 3) is not 8 5 5
INFO:root:Trace: [(5, [(3, 3) is not 8])]
INFO:root:Trace Quality: [(5, 1)]
INFO:root:Trace Sorted: [(5, 1)]
INFO:root:Finished
INFO:root:Full Trace [(5, [(3, 3) is not 8])]
INFO:root:Trying {'quarterChopMUS': True}
INFO:root:Starting Step 1
INFO:root:Current state [[[[5, 9], [2], [4], [1], [3, 5], [5, 8], [6], [7], [3, 8, 9]], [[5, 9], [6], [3, 8], [2, 3, 8], [7], [2, 5, 8], [4], [1], [3, 8, 9]], [[7], [1, 8], [1, 3, 8], [9], [6], [4], [5, 8], [2], [3, 5, 8]], [[2], [4], [6], [5], [9], [1], [3], [8], [7]], [[1], [3], [5], [4], [8], [7], [2], [9], [6]], [[8], [7], [9], [6], [2], [3], [1], [5], [4]], [[4], [1, 8], [1, 2, 8], [3, 8], [3, 5], [9], [7], [6], [2, 5, 8]], [[3], [5], [2, 8], [7], [1], [6], [9], [4], [2, 8]], [[6], [9], [7], [2, 8], [4], [2, 5, 8], [5, 8], [3], [1]]]]
INFO:root:Doing checkSmall1
INFO:root:Getting tiny MUSes, distance 1, for 1 puzlits, 1 repeats
INFO:root:Chunked 1 in [1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
INFO:root:Doing checkSmall2
INFO:root:Getting tiny MUSes, distance 2, for 1 puzlits, 1 repeats
INFO:root:Chunked 1 in [1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
INFO:root:Considering 100 * 1 jobs for minsize=3
INFO:root:Chunked 100 in [9, 9, 9, 9, 8, 8, 8, 8, 8, 8, 8, 8]
INFO:root:Considering 100 * 1 jobs for minsize=4
INFO:root:Chunked 100 in [9, 9, 9, 9, 8, 8, 8, 8, 8, 8, 8, 8]
INFO:root:XX found first (3, 3) is not 8 5
INFO:root:XX add new best (3, 3) is not 8 5 5
INFO:root:XX add new best (3, 3) is not 8 5 5
INFO:root:XX add new best (3, 3) is not 8 5 5
INFO:root:XX add new best (3, 3) is not 8 5 5
INFO:root:XX add new best (3, 3) is not 8 5 5
INFO:root:XX add new best (3, 3) is not 8 5 5
INFO:root:XX add new best (3, 3) is not 8 5 5
INFO:root:XX add new best (3, 3) is not 8 5 5
INFO:root:XX add new best (3, 3) is not 8 5 5
INFO:root:XX add new best (3, 3) is not 8 5 5
INFO:root:XX add new best (3, 3) is not 8 5 5
INFO:root:XX add new best (3, 3) is not 8 5 5
INFO:root:XX add new best (3, 3) is not 8 5 5
INFO:root:XX add new best (3, 3) is not 8 5 5
INFO:root:XX add new best (3, 3) is not 8 5 5
INFO:root:XX add new best (3, 3) is not 8 5 5
INFO:root:XX add new best (3, 3) is not 8 5 5
INFO:root:Considering 100 * 1 jobs for minsize=5
INFO:root:Chunked 100 in [9, 9, 9, 9, 8, 8, 8, 8, 8, 8, 8, 8]
INFO:root:XX add new best (3, 3) is not 8 5 5
INFO:root:XX add new best (3, 3) is not 8 5 5
INFO:root:XX add new best (3, 3) is not 8 5 5
INFO:root:XX add new best (3, 3) is not 8 5 5
INFO:root:XX add new best (3, 3) is not 8 5 5
INFO:root:XX add new best (3, 3) is not 8 5 5
INFO:root:XX add new best (3, 3) is not 8 5 5
INFO:root:XX add new best (3, 3) is not 8 5 5
INFO:root:XX add new best (3, 3) is not 8 5 5
INFO:root:XX add new best (3, 3) is not 8 5 5
INFO:root:XX add new best (3, 3) is not 8 5 5
INFO:root:XX add new best (3, 3) is not 8 5 5
INFO:root:Trace: [(5, [(3, 3) is not 8])]
INFO:root:Trace Quality: [(5, 1)]
INFO:root:Trace Sorted: [(5, 1)]
INFO:root:Finished
INFO:root:Full Trace [(5, [(3, 3) is not 8])]
INFO:root:Trying {'minPrecheckMUS': True}
INFO:root:Starting Step 1
INFO:root:Current state [[[[5, 9], [2], [4], [1], [3, 5], [5, 8], [6], [7], [3, 8, 9]], [[5, 9], [6], [3, 8], [2, 3, 8], [7], [2, 5, 8], [4], [1], [3, 8, 9]], [[7], [1, 8], [1, 3, 8], [9], [6], [4], [5, 8], [2], [3, 5, 8]], [[2], [4], [6], [5], [9], [1], [3], [8], [7]], [[1], [3], [5], [4], [8], [7], [2], [9], [6]], [[8], [7], [9], [6], [2], [3], [1], [5], [4]], [[4], [1, 8], [1, 2, 8], [3, 8], [3, 5], [9], [7], [6], [2, 5, 8]], [[3], [5], [2, 8], [7], [1], [6], [9], [4], [2, 8]], [[6], [9], [7], [2, 8], [4], [2, 5, 8], [5, 8], [3], [1]]]]
INFO:root:Doing checkSmall1
INFO:root:Getting tiny MUSes, distance 1, for 1 puzlits, 1 repeats
INFO:root:Chunked 1 in [1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
INFO:root:Doing checkSmall2
INFO:root:Getting tiny MUSes, distance 2, for 1 puzlits, 1 repeats
INFO:root:Chunked 1 in [1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
INFO:root:Considering 100 * 1 jobs for minsize=3
INFO:root:Chunked 100 in [9, 9, 9, 9, 8, 8, 8, 8, 8, 8, 8, 8]
INFO:root:Considering 100 * 1 jobs for minsize=4
INFO:root:Chunked 100 in [9, 9, 9, 9, 8, 8, 8, 8, 8, 8, 8, 8]
INFO:root:XX found first (3, 3) is not 8 5
INFO:root:XX add new best (3, 3) is not 8 5 5
INFO:root:XX add new best (3, 3) is not 8 5 5
INFO:root:XX add new best (3, 3) is not 8 5 5
INFO:root:XX add new best (3, 3) is not 8 5 5
INFO:root:XX add new best (3, 3) is not 8 5 5
INFO:root:XX add new best (3, 3) is not 8 5 5
INFO:root:XX add new best (3, 3) is not 8 5 5
INFO:root:XX add new best (3, 3) is not 8 5 5
INFO:root:XX add new best (3, 3) is not 8 5 5
INFO:root:XX add new best (3, 3) is not 8 5 5
INFO:root:XX add new best (3, 3) is not 8 5 5
INFO:root:XX add new best (3, 3) is not 8 5 5
INFO:root:XX add new best (3, 3) is not 8 5 5
INFO:root:Considering 100 * 1 jobs for minsize=5
INFO:root:Chunked 100 in [9, 9, 9, 9, 8, 8, 8, 8, 8, 8, 8, 8]
INFO:root:XX add new best (3, 3) is not 8 5 5
INFO:root:XX add new best (3, 3) is not 8 5 5
INFO:root:XX add new best (3, 3) is not 8 5 5
INFO:root:XX add new best (3, 3) is not 8 5 5
INFO:root:XX add new best (3, 3) is not 8 5 5
INFO:root:XX add new best (3, 3) is not 8 5 5
INFO:root:Trace: [(5, [(3, 3) is not 8])]
INFO:root:Trace Quality: [(5, 1)]
INFO:root:Trace Sorted: [(5, 1)]
INFO:root:Finished
INFO:root:Full Trace [(5, [(3, 3) is not 8])]
INFO:root:Trying {'gallopingMUSes': True}
INFO:root:Starting Step 1
INFO:root:Current state [[[[5, 9], [2], [4], [1], [3, 5], [5, 8], [6], [7], [3, 8, 9]], [[5, 9], [6], [3, 8], [2, 3, 8], [7], [2, 5, 8], [4], [1], [3, 8, 9]], [[7], [1, 8], [1, 3, 8], [9], [6], [4], [5, 8], [2], [3, 5, 8]], [[2], [4], [6], [5], [9], [1], [3], [8], [7]], [[1], [3], [5], [4], [8], [7], [2], [9], [6]], [[8], [7], [9], [6], [2], [3], [1], [5], [4]], [[4], [1, 8], [1, 2, 8], [3, 8], [3, 5], [9], [7], [6], [2, 5, 8]], [[3], [5], [2, 8], [7], [1], [6], [9], [4], [2, 8]], [[6], [9], [7], [2, 8], [4], [2, 5, 8], [5, 8], [3], [1]]]]
INFO:root:Doing checkSmall1
INFO:root:Getting tiny MUSes, distance 1, for 1 puzlits, 1 repeats
INFO:root:Chunked 1 in [1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
INFO:root:Doing checkSmall2
INFO:root:Getting tiny MUSes, distance 2, for 1 puzlits, 1 repeats
INFO:root:Chunked 1 in [1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
INFO:root:Considering 100 * 1 jobs for minsize=3
INFO:root:Chunked 100 in [9, 9, 9, 9, 8, 8, 8, 8, 8, 8, 8, 8]
INFO:root:Considering 100 * 1 jobs for minsize=4
INFO:root:Chunked 100 in [9, 9, 9, 9, 8, 8, 8, 8, 8, 8, 8, 8]
INFO:root:XX found first (3, 3) is not 8 5
INFO:root:XX add new best (3, 3) is not 8 5 5
INFO:root:XX add new best (3, 3) is not 8 5 5
INFO:root:XX add new best (3, 3) is not 8 5 5
INFO:root:XX add new best (3, 3) is not 8 5 5
INFO:root:XX add new best (3, 3) is not 8 5 5
INFO:root:XX add new best (3, 3) is not 8 5 5
INFO:root:XX add new best (3, 3) is not 8 5 5
INFO:root:Considering 100 * 1 jobs for minsize=5
INFO:root:Chunked 100 in [9, 9, 9, 9, 8, 8, 8, 8, 8, 8, 8, 8]
INFO:root:XX add new best (3, 3) is not 8 5 5
INFO:root:XX add new best (3, 3) is not 8 5 5
INFO:root:XX add new best (3, 3) is not 8 5 5
INFO:root:XX add new best (3, 3) is not 8 5 5
INFO:root:XX add new best (3, 3) is not 8 5 5
INFO:root:XX add new best (3, 3) is not 8 5 5
INFO:root:XX add new best (3, 3) is not 8 5 5
INFO:root:Trace: [(5, [(3, 3) is not 8])]
INFO:root:Trace Quality: [(5, 1)]
INFO:root:Trace Sorted: [(5, 1)]
INFO:root:Finished
INFO:root:Full Trace [(5, [(3, 3) is not 8])]
INFO:root:Trying {'minPrecheckStepsMUS': True}
INFO:root:Starting Step 1
INFO:root:Current state [[[[5, 9], [2], [4], [1], [3, 5], [5, 8], [6], [7], [3, 8, 9]], [[5, 9], [6], [3, 8], [2, 3, 8], [7], [2, 5, 8], [4], [1], [3, 8, 9]], [[7], [1, 8], [1, 3, 8], [9], [6], [4], [5, 8], [2], [3, 5, 8]], [[2], [4], [6], [5], [9], [1], [3], [8], [7]], [[1], [3], [5], [4], [8], [7], [2], [9], [6]], [[8], [7], [9], [6], [2], [3], [1], [5], [4]], [[4], [1, 8], [1, 2, 8], [3, 8], [3, 5], [9], [7], [6], [2, 5, 8]], [[3], [5], [2, 8], [7], [1], [6], [9], [4], [2, 8]], [[6], [9], [7], [2, 8], [4], [2, 5, 8], [5, 8], [3], [1]]]]
INFO:root:Doing checkSmall1
INFO:root:Getting tiny MUSes, distance 1, for 1 puzlits, 1 repeats
INFO:root:Chunked 1 in [1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
INFO:root:Doing checkSmall2
INFO:root:Getting tiny MUSes, distance 2, for 1 puzlits, 1 repeats
INFO:root:Chunked 1 in [1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
INFO:root:Considering 100 * 1 jobs for minsize=3
INFO:root:Chunked 100 in [9, 9, 9, 9, 8, 8, 8, 8, 8, 8, 8, 8]
INFO:root:Considering 100 * 1 jobs for minsize=4
INFO:root:Chunked 100 in [9, 9, 9, 9, 8, 8, 8, 8, 8, 8, 8, 8]
INFO:root:XX found first (3, 3) is not 8 5
INFO:root:XX add new best (3, 3) is not 8 5 5
INFO:root:XX add new best (3, 3) is not 8 5 5
INFO:root:XX add new best (3, 3) is not 8 5 5
INFO:root:XX add new best (3, 3) is not 8 5 5
INFO:root:XX add new best (3, 3) is not 8 5 5
INFO:root:XX add new best (3, 3) is not 8 5 5
INFO:root:XX add new best (3, 3) is not 8 5 5
INFO:root:XX add new best (3, 3) is not 8 5 5
INFO:root:XX add new best (3, 3) is not 8 5 5
INFO:root:XX add new best (3, 3) is not 8 5 5
INFO:root:XX add new best (3, 3) is not 8 5 5
INFO:root:XX add new best (3, 3) is not 8 5 5
INFO:root:Considering 100 * 1 jobs for minsize=5
INFO:root:Chunked 100 in [9, 9, 9, 9, 8, 8, 8, 8, 8, 8, 8, 8]
INFO:root:XX add new best (3, 3) is not 8 5 5
INFO:root:XX add new best (3, 3) is not 8 5 5
INFO:root:XX add new best (3, 3) is not 8 5 5
INFO:root:XX add new best (3, 3) is not 8 5 5
INFO:root:XX add new best (3, 3) is not 8 5 5
INFO:root:XX add new best (3, 3) is not 8 5 5
INFO:root:XX add new best (3, 3) is not 8 5 5
INFO:root:Trace: [(5, [(3, 3) is not 8])]
INFO:root:Trace Quality: [(5, 1)]
INFO:root:Trace Sorted: [(5, 1)]
INFO:root:Finished
INFO:root:Full Trace [(5, [(3, 3) is not 8])]
INFO:root:Trying {'gallopingMUSes': True, 'minPrecheckMUS': True}
INFO:root:Starting Step 1
INFO:root:Current state [[[[5, 9], [2], [4], [1], [3, 5], [5, 8], [6], [7], [3, 8, 9]], [[5, 9], [6], [3, 8], [2, 3, 8], [7], [2, 5, 8], [4], [1], [3, 8, 9]], [[7], [1, 8], [1, 3, 8], [9], [6], [4], [5, 8], [2], [3, 5, 8]], [[2], [4], [6], [5], [9], [1], [3], [8], [7]], [[1], [3], [5], [4], [8], [7], [2], [9], [6]], [[8], [7], [9], [6], [2], [3], [1], [5], [4]], [[4], [1, 8], [1, 2, 8], [3, 8], [3, 5], [9], [7], [6], [2, 5, 8]], [[3], [5], [2, 8], [7], [1], [6], [9], [4], [2, 8]], [[6], [9], [7], [2, 8], [4], [2, 5, 8], [5, 8], [3], [1]]]]
INFO:root:Doing checkSmall1
INFO:root:Getting tiny MUSes, distance 1, for 1 puzlits, 1 repeats
INFO:root:Chunked 1 in [1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
INFO:root:Doing checkSmall2
INFO:root:Getting tiny MUSes, distance 2, for 1 puzlits, 1 repeats
INFO:root:Chunked 1 in [1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
INFO:root:Considering 100 * 1 jobs for minsize=3
INFO:root:Chunked 100 in [9, 9, 9, 9, 8, 8, 8, 8, 8, 8, 8, 8]
INFO:root:Considering 100 * 1 jobs for minsize=4
INFO:root:Chunked 100 in [9, 9, 9, 9, 8, 8, 8, 8, 8, 8, 8, 8]
INFO:root:XX found first (3, 3) is not 8 5
INFO:root:XX add new best (3, 3) is not 8 5 5
INFO:root:XX add new best (3, 3) is not 8 5 5
INFO:root:XX add new best (3, 3) is not 8 5 5
INFO:root:XX add new best (3, 3) is not 8 5 5
INFO:root:XX add new best (3, 3) is not 8 5 5
INFO:root:XX add new best (3, 3) is not 8 5 5
INFO:root:XX add new best (3, 3) is not 8 5 5
INFO:root:XX add new best (3, 3) is not 8 5 5
INFO:root:XX add new best (3, 3) is not 8 5 5
INFO:root:XX add new best (3, 3) is not 8 5 5
INFO:root:XX add new best (3, 3) is not 8 5 5
INFO:root:XX add new best (3, 3) is not 8 5 5
INFO:root:Considering 100 * 1 jobs for minsize=5
INFO:root:Chunked 100 in [9, 9, 9, 9, 8, 8, 8, 8, 8, 8, 8, 8]
INFO:root:XX add new best (3, 3) is not 8 5 5
INFO:root:XX add new best (3, 3) is not 8 5 5
INFO:root:XX add new best (3, 3) is not 8 5 5
INFO:root:XX add new best (3, 3) is not 8 5 5
INFO:root:XX add new best (3, 3) is not 8 5 5
INFO:root:XX add new best (3, 3) is not 8 5 5
INFO:root:XX add new best (3, 3) is not 8 5 5
INFO:root:Trace: [(5, [(3, 3) is not 8])]
INFO:root:Trace Quality: [(5, 1)]
INFO:root:Trace Sorted: [(5, 1)]
INFO:root:Finished
INFO:root:Full Trace [(5, [(3, 3) is not 8])]
INFO:root:Trying {}
INFO:root:Starting Step 1
INFO:root:Current state [[[[8], [1, 9], [4], [5], [3], [7], [1, 6, 9], [1, 2, 6], [1, 2]], [[7, 9], [2], [3], [6], [1], [4], [7, 9], [8], [5]], [[6], [1, 7], [5], [9], [8], [2], [1, 7], [3], [4]], [[3, 4, 9], [3, 4, 6], [2, 6, 9], [1], [4, 6, 9], [5], [8], [7], [2, 9]], [[5], [4, 9], [1, 2], [7], [4, 9], [8], [3], [1, 2], [6]], [[1, 7, 9], [8], [1, 6, 7, 9], [2], [6, 9], [3], [4], [5], [1, 9]], [[2], [4, 6, 7], [1, 6, 7], [8], [5], [9], [1, 6], [1, 4, 6], [3]], [[4, 9], [5], [6, 9], [3], [7], [1], [2], [4, 6, 9], [8]], [[1, 3, 9], [3, 9], [8], [4], [2], [6], [5], [1, 9], [7]]]]
INFO:root:Doing checkSmall1
INFO:root:Getting tiny MUSes, distance 1, for 1 puzlits, 1 repeats
INFO:root:Chunked 1 in [1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
INFO:root:Doing checkSmall2
INFO:root:Getting tiny MUSes, distance 2, for 1 puzlits, 1 repeats
INFO:root:Chunked 1 in [1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
INFO:root:Considering 100 * 1 jobs for minsize=3
INFO:root:Chunked 100 in [9, 9, 9, 9, 8, 8, 8, 8, 8, 8, 8, 8]
INFO:root:Considering 100 * 1 jobs for minsize=4
INFO:root:Chunked 100 in [9, 9, 9, 9, 8, 8, 8, 8, 8, 8, 8, 8]
INFO:root:Considering 100 * 1 jobs for minsize=5
INFO:root:Chunked 100 in [9, 9, 9, 9, 8, 8, 8, 8, 8, 8, 8, 8]
INFO:root:Considering 100 * 1 jobs for minsize=6
INFO:root:Chunked 100 in [9, 9, 9, 9, 8, 8, 8, 8, 8, 8, 8, 8]
INFO:root:Considering 100 * 1 jobs for minsize=7
INFO:root:Chunked 100 in [9, 9, 9, 9, 8, 8, 8, 8, 8, 8, 8, 8]
INFO:root:Considering 100 * 1 jobs for minsize=8
INFO:root:Chunked 100 in [9, 9, 9, 9, 8, 8, 8, 8, 8, 8, 8, 8]
INFO:root:Considering 100 * 1 jobs for minsize=9
INFO:root:Chunked 100 in [9, 9, 9, 9, 8, 8, 8, 8, 8, 8, 8, 8]
INFO:root:XX found first (9, 1) is not 9 10
INFO:root:XX add new best (9, 1) is not 9 10 10
INFO:root:XX add new best (9, 1) is not 9 10 10
INFO:root:XX add new best (9, 1) is not 9 10 10
INFO:root:XX add new best (9, 1) is not 9 10 10
INFO:root:XX add new best (9, 1) is not 9 10 10
INFO:root:XX add new best (9, 1) is not 9 10 10
INFO:root:XX add new best (9, 1) is not 9 10 10
INFO:root:XX add new best (9, 1) is not 9 10 10
INFO:root:XX add new best (9, 1) is not 9 10 10
INFO:root:XX add new best (9, 1) is not 9 10 10
INFO:root:XX add new best (9, 1) is not 9 10 10
INFO:root:XX add new best (9, 1) is not 9 10 10
INFO:root:XX add new best (9, 1) is not 9 10 10
INFO:root:XX add new best (9, 1) is not 9 10 10
INFO:root:XX add new best (9, 1) is not 9 10 10
INFO:root:XX add new best (9, 1) is not 9 10 10
INFO:root:XX add new best (9, 1) is not 9 10 10
INFO:root:XX add new best (9, 1) is not 9 10 10
INFO:root:XX add new best (9, 1) is not 9 10 10
INFO:root:XX add new best (9, 1) is not 9 10 10
INFO:root:XX add new best (9, 1) is not 9 10 10
INFO:root:XX add new best (9, 1) is not 9 10 10
INFO:root:XX add new best (9, 1) is not 9 10 10
INFO:root:XX add new best (9, 1) is not 9 10 10
INFO:root:XX add new best (9, 1) is not 9 10 10
INFO:root:XX add new best (9, 1) is not 9 10 10
INFO:root:XX add new best (9, 1) is not 9 10 10
INFO:root:XX add new best (9, 1) is not 9 10 10
INFO:root:XX add new best (9, 1) is not 9 10 10
INFO:root:XX add new best (9, 1) is not 9 10 10
INFO:root:XX add new best (9, 1) is not 9 10 10
INFO:root:XX add new best (9, 1) is not 9 10 10
INFO:root:XX add new best (9, 1) is not 9 10 10
INFO:root:XX add new best (9, 1) is not 9 10 10
INFO:root:XX add new best (9, 1) is not 9 10 10
INFO:root:XX add new best (9, 1) is not 9 10 10
INFO:root:XX add new best (9, 1) is not 9 10 10
INFO:root:XX add new best (9, 1) is not 9 10 10
INFO:root:XX add new best (9, 1) is not 9 10 10
INFO:root:XX add new best (9, 1) is not 9 10 10
INFO:root:XX add new best (9, 1) is not 9 10 10
INFO:root:XX add new best (9, 1) is not 9 10 10
INFO:root:XX add new best (9, 1) is not 9 10 10
INFO:root:XX add new best (9, 1) is not 9 10 10
INFO:root:XX add new best (9, 1) is not 9 10 10
INFO:root:XX add new best (9, 1) is not 9 10 10
INFO:root:XX add new best (9, 1) is not 9 10 10
INFO:root:XX add new best (9, 1) is not 9 10 10
INFO:root:XX add new best (9, 1) is not 9 10 10
INFO:root:XX add new best (9, 1) is not 9 10 10
INFO:root:XX add new best (9, 1) is not 9 10 10
INFO:root:XX add new best (9, 1) is not 9 10 10
INFO:root:XX add new best (9, 1) is not 9 10 10
INFO:root:XX add new best (9, 1) is not 9 10 10
INFO:root:XX add new best (9, 1) is not 9 10 10
INFO:root:XX add new best (9, 1) is not 9 10 10
INFO:root:XX add new best (9, 1) is not 9 10 10
INFO:root:XX add new best (9, 1) is not 9 10 10
INFO:root:XX add new best (9, 1) is not 9 10 10
INFO:root:XX add new best (9, 1) is not 9 10 10
INFO:root:XX add new best (9, 1) is not 9 10 10
INFO:root:XX add new best (9, 1) is not 9 10 10
INFO:root:XX add new best (9, 1) is not 9 10 10
INFO:root:XX add new best (9, 1) is not 9 10 10
INFO:root:XX add new best (9, 1) is not 9 10 10
INFO:root:XX add new best (9, 1) is not 9 10 10
INFO:root:XX add new best (9, 1) is not 9 10 10
INFO:root:XX add new best (9, 1) is not 9 10 10
INFO:root:XX add new best (9, 1) is not 9 10 10
INFO:root:XX add new best (9, 1) is not 9 10 10
INFO:root:XX add new best (9, 1) is not 9 10 10
INFO:root:XX add new best (9, 1) is not 9 10 10
INFO:root:XX add new best (9, 1) is not 9 10 10
INFO:root:XX add new best (9, 1) is not 9 10 10
INFO:root:XX add new best (9, 1) is not 9 10 10
INFO:root:XX add new best (9, 1) is not 9 10 10
INFO:root:XX add new best (9, 1) is not 9 10 10
INFO:root:XX add new best (9, 1) is not 9 10 10
INFO:root:XX add new best (9, 1) is not 9 10 10
INFO:root:XX add new best (9, 1) is not 9 10 10
INFO:root:XX add new best (9, 1) is not 9 10 10
INFO:root:XX add new best (9, 1) is not 9 10 10
INFO:root:XX add new best (9, 1) is not 9 10 10
INFO:root:XX add new best (9, 1) is not 9 10 10
INFO:root:XX add new best (9, 1) is not 9 10 10
INFO:root:XX add new best (9, 1) is not 9 10 10
INFO:root:XX add new best (9, 1) is not 9 10 10
INFO:root:XX add new best (9, 1) is not 9 10 10
INFO:root:XX add new best (9, 1) is not 9 10 10
INFO:root:XX add new best (9, 1) is not 9 10 10
INFO:root:XX add new best (9, 1) is not 9 10 10
INFO:root:XX add new best (9, 1) is not 9 10 10
INFO:root:XX add new best (9, 1) is not 9 10 10
INFO:root:XX add new best (9, 1) is not 9 10 10
INFO:root:Considering 100 * 1 jobs for minsize=10
INFO:root:Chunked 100 in [9, 9, 9, 9, 8, 8, 8, 8, 8, 8, 8, 8]
INFO:root:XX add new best (9, 1) is not 9 10 10
INFO:root:XX add new best (9, 1) is not 9 10 10
INFO:root:XX add new best (9, 1) is not 9 10 10
INFO:root:XX add new best (9, 1) is not 9 10 10
INFO:root:XX add new best (9, 1) is not 9 10 10
INFO:root:XX add new best (9, 1) is not 9 10 10
INFO:root:XX add new best (9, 1) is not 9 10 10
INFO:root:XX add new best (9, 1) is not 9 10 10
INFO:root:XX add new best (9, 1) is not 9 10 10
INFO:root:XX add new best (9, 1) is not 9 10 10
INFO:root:XX add new best (9, 1) is not 9 10 10
INFO:root:XX add new best (9, 1) is not 9 10 10
INFO:root:XX add new best (9, 1) is not 9 10 10
INFO:root:XX add new best (9, 1) is not 9 10 10
INFO:root:XX add new best (9, 1) is not 9 10 10
INFO:root:XX add new best (9, 1) is not 9 10 10
INFO:root:XX add new best (9, 1) is not 9 10 10
INFO:root:XX add new best (9, 1) is not 9 10 10
INFO:root:XX add new best (9, 1) is not 9 10 10
INFO:root:XX add new best (9, 1) is not 9 10 10
INFO:root:XX add new best (9, 1) is not 9 10 10
INFO:root:XX add new best (9, 1) is not 9 10 10
INFO:root:XX add new best (9, 1) is not 9 10 10
INFO:root:XX add new best (9, 1) is not 9 10 10
INFO:root:XX add new best (9, 1) is not 9 10 10
INFO:root:XX add new best (9, 1) is not 9 10 10
INFO:root:XX add new best (9, 1) is not 9 10 10
INFO:root:XX add new best (9, 1) is not 9 10 10
INFO:root:XX add new best (9, 1) is not 9 10 10
INFO:root:XX add new best (9, 1) is not 9 10 10
INFO:root:XX add new best (9, 1) is not 9 10 10
INFO:root:XX add new best (9, 1) is not 9 10 10
INFO:root:XX add new best (9, 1) is not 9 10 10
INFO:root:XX add new best (9, 1) is not 9 10 10
INFO:root:XX add new best (9, 1) is not 9 10 10
INFO:root:XX add new best (9, 1) is not 9 10 10
INFO:root:XX add new best (9, 1) is not 9 10 10
INFO:root:XX add new best (9, 1) is not 9 10 10
INFO:root:XX add new best (9, 1) is not 9 10 10
INFO:root:XX add new best (9, 1) is not 9 10 10
INFO:root:XX add new best (9, 1) is not 9 10 10
INFO:root:XX add new best (9, 1) is not 9 10 10
INFO:root:XX add new best (9, 1) is not 9 10 10
INFO:root:XX add new best (9, 1) is not 9 10 10
INFO:root:XX add new best (9, 1) is not 9 10 10
INFO:root:XX add new best (9, 1) is not 9 10 10
INFO:root:XX add new best (9, 1) is not 9 10 10
INFO:root:XX add new best (9, 1) is not 9 10 10
INFO:root:XX add new best (9, 1) is not 9 10 10
INFO:root:XX add new best (9, 1) is not 9 10 10
INFO:root:XX add new best (9, 1) is not 9 10 10
INFO:root:XX add new best (9, 1) is not 9 10 10
INFO:root:XX add new best (9, 1) is not 9 10 10
INFO:root:XX add new best (9, 1) is not 9 10 10
INFO:root:XX add new best (9, 1) is not 9 10 10
INFO:root:XX add new best (9, 1) is not 9 10 10
INFO:root:XX add new best (9, 1) is not 9 10 10
INFO:root:XX add new best (9, 1) is not 9 10 10
INFO:root:XX add new best (9, 1) is not 9 10 10
INFO:root:XX add new best (9, 1) is not 9 10 10
INFO:root:XX add new best (9, 1) is not 9 10 10
INFO:root:XX add new best (9, 1) is not 9 10 10
INFO:root:XX add new best (9, 1) is not 9 10 10
INFO:root:XX add new best (9, 1) is not 9 10 10
INFO:root:XX add new best (9, 1) is not 9 10 10
INFO:root:XX add new best (9, 1) is not 9 10 10
INFO:root:XX add new best (9, 1) is not 9 10 10
INFO:root:XX add new best (9, 1) is not 9 10 10
INFO:root:XX add new best (9, 1) is not 9 10 10
INFO:root:XX add new best (9, 1) is not 9 10 10
INFO:root:XX add new best (9, 1) is not 9 10 10
INFO:root:XX add new best (9, 1) is not 9 10 10
INFO:root:XX add new best (9, 1) is not 9 10 10
INFO:root:XX add new best (9, 1) is not 9 10 10
INFO:root:XX add new best (9, 1) is not 9 10 10
INFO:root:XX add new best (9, 1) is not 9 10 10
INFO:root:XX add new best (9, 1) is not 9 10 10
INFO:root:XX add new best (9, 1) is not 9 10 10
INFO:root:XX add new best (9, 1) is not 9 10 10
INFO:root:XX add new best (9, 1) is not 9 10 10
INFO:root:XX add new best (9, 1) is not 9 10 10
INFO:root:XX add new best (9, 1) is not 9 10 10
INFO:root:XX add new best (9, 1) is not 9 10 10
INFO:root:XX add new best (9, 1) is not 9 10 10
INFO:root:XX add new best (9, 1) is not 9 10 10
INFO:root:XX add new best (9, 1) is not 9 10 10
INFO:root:XX add new best (9, 1) is not 9 10 10
INFO:root:XX add new best (9, 1) is not 9 10 10
INFO:root:XX add new best (9, 1) is not 9 10 10
INFO:root:XX add new best (9, 1) is not 9 10 10
INFO:root:XX add new best (9, 1) is not 9 10 10
INFO:root:XX add new best (9, 1) is not 9 10 10
INFO:root:XX add new best (9, 1) is not 9 10 10
INFO:root:XX add new best (9, 1) is not 9 10 10
INFO:root:XX add new best (9, 1) is not 9 10 10
INFO:root:Trace: [(10, [(9, 1) is not 9])]
INFO:root:Trace Quality: [(10, 1)]
INFO:root:Trace Sorted: [(10, 1)]
INFO:root:Finished
INFO:root:Full Trace [(10, [(9, 1) is not 9])]
INFO:root:Trying {'prechopMUSes': True}
INFO:root:Starting Step 1
INFO:root:Current state [[[[8], [1, 9], [4], [5], [3], [7], [1, 6, 9], [1, 2, 6], [1, 2]], [[7, 9], [2], [3], [6], [1], [4], [7, 9], [8], [5]], [[6], [1, 7], [5], [9], [8], [2], [1, 7], [3], [4]], [[3, 4, 9], [3, 4, 6], [2, 6, 9], [1], [4, 6, 9], [5], [8], [7], [2, 9]], [[5], [4, 9], [1, 2], [7], [4, 9], [8], [3], [1, 2], [6]], [[1, 7, 9], [8], [1, 6, 7, 9], [2], [6, 9], [3], [4], [5], [1, 9]], [[2], [4, 6, 7], [1, 6, 7], [8], [5], [9], [1, 6], [1, 4, 6], [3]], [[4, 9], [5], [6, 9], [3], [7], [1], [2], [4, 6, 9], [8]], [[1, 3, 9], [3, 9], [8], [4], [2], [6], [5], [1, 9], [7]]]]
INFO:root:Doing checkSmall1
INFO:root:Getting tiny MUSes, distance 1, for 1 puzlits, 1 repeats
INFO:root:Chunked 1 in [1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
INFO:root:Doing checkSmall2
INFO:root:Getting tiny MUSes, distance 2, for 1 puzlits, 1 repeats
INFO:root:Chunked 1 in [1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
INFO:root:Considering 100 * 1 jobs for minsize=3
INFO:root:Chunked 100 in [9, 9, 9, 9, 8, 8, 8, 8, 8, 8, 8, 8]
INFO:root:Considering 100 * 1 jobs for minsize=4
INFO:root:Chunked 100 in [9, 9, 9, 9, 8, 8, 8, 8, 8, 8, 8, 8]
INFO:root:Considering 100 * 1 jobs for minsize=5
INFO:root:Chunked 100 in [9, 9, 9, 9, 8, 8, 8, 8, 8, 8, 8, 8]
INFO:root:XX found first (9, 1) is not 9 6
INFO:root:XX add new best (9, 1) is not 9 6 6
INFO:root:XX add new best (9, 1) is not 9 6 6
INFO:root:XX add new best (9, 1) is not 9 6 6
INFO:root:XX add new best (9, 1) is not 9 6 6
INFO:root:XX add new best (9, 1) is not 9 6 6
INFO:root:XX add new best (9, 1) is not 9 6 6
INFO:root:XX add new best (9, 1) is not 9 6 6
INFO:root:XX add new best (9, 1) is not 9 6 6
INFO:root:XX add new best (9, 1) is not 9 6 6
INFO:root:Considering 100 * 1 jobs for minsize=6
INFO:root:Chunked 100 in [9, 9, 9, 9, 8, 8, 8, 8, 8, 8, 8, 8]
INFO:root:XX add new best (9, 1) is not 9 6 6
INFO:root:XX add new best (9, 1) is not 9 6 6
INFO:root:XX add new best (9, 1) is not 9 6 6
INFO:root:XX add new best (9, 1) is not 9 6 6
INFO:root:XX add new best (9, 1) is not 9 6 6
INFO:root:XX add new best (9, 1) is not 9 6 6
INFO:root:XX add new best (9, 1) is not 9 6 6
INFO:root:XX add new best (9, 1) is not 9 6 6
INFO:root:XX add new best (9, 1) is not 9 6 6
INFO:root:Trace: [(6, [(9, 1) is not 9])]
INFO:root:Trace Quality: [(6, 1)]
INFO:root:Trace Sorted: [(6, 1)]
INFO:root:Finished
INFO:root:Full Trace [(6, [(9, 1) is not 9])]
INFO:root:Trying {'quarterChopMUS': True}
INFO:root:Starting Step 1
INFO:root:Current state [[[[8], [1, 9], [4], [5], [3], [7], [1, 6, 9], [1, 2, 6], [1, 2]], [[7, 9], [2], [3], [6], [1], [4], [7, 9], [8], [5]], [[6], [1, 7], [5], [9], [8], [2], [1, 7], [3], [4]], [[3, 4, 9], [3, 4, 6], [2, 6, 9], [1], [4, 6, 9], [5], [8], [7], [2, 9]], [[5], [4, 9], [1, 2], [7], [4, 9], [8], [3], [1, 2], [6]], [[1, 7, 9], [8], [1, 6, 7, 9], [2], [6, 9], [3], [4], [5], [1, 9]], [[2], [4, 6, 7], [1, 6, 7], [8], [5], [9], [1, 6], [1, 4, 6], [3]], [[4, 9], [5], [6, 9], [3], [7], [1], [2], [4, 6, 9], [8]], [[1, 3, 9], [3, 9], [8], [4], [2], [6], [5], [1, 9], [7]]]]
INFO:root:Doing checkSmall1
INFO:root:Getting tiny MUSes, distance 1, for 1 puzlits, 1 repeats
INFO:root:Chunked 1 in [1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
INFO:root:Doing checkSmall2
INFO:root:Getting tiny MUSes, distance 2, for 1 puzlits, 1 repeats
INFO:root:Chunked 1 in [1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
INFO:root:Considering 100 * 1 jobs for minsize=3
INFO:root:Chunked 100 in [9, 9, 9, 9, 8, 8, 8, 8, 8, 8, 8, 8]
INFO:root:Considering 100 * 1 jobs for minsize=4
INFO:root:Chunked 100 in [9, 9, 9, 9, 8, 8, 8, 8, 8, 8, 8, 8]
INFO:root:Considering 100 * 1 jobs for minsize=5
INFO:root:Chunked 100 in [9, 9, 9, 9, 8, 8, 8, 8, 8, 8, 8, 8]
INFO:root:XX found first (9, 1) is not 9 6
INFO:root:XX add new best (9, 1) is not 9 6 6
INFO:root:XX add new best (9, 1) is not 9 6 6
INFO:root:XX add new best (9, 1) is not 9 6 6
INFO:root:XX add new best (9, 1) is not 9 6 6
INFO:root:XX add new best (9, 1) is not 9 6 6
INFO:root:XX add new best (9, 1) is not 9 6 6
INFO:root:XX add new best (9, 1) is not 9 6 6
INFO:root:XX add new best (9, 1) is not 9 6 6
INFO:root:XX add new best (9, 1) is not 9 6 6
INFO:root:Considering 100 * 1 jobs for minsize=6
INFO:root:Chunked 100 in [9, 9, 9, 9, 8, 8, 8, 8, 8, 8, 8, 8]
INFO:root:XX add new best (9, 1) is not 9 6 6
INFO:root:XX add new best (9, 1) is not 9 6 6
INFO:root:XX add new best (9, 1) is not 9 6 6
INFO:root:XX add new best (9, 1) is not 9 6 6
INFO:root:XX add new best (9, 1) is not 9 6 6
INFO:root:XX add new best (9, 1) is not 9 6 6
INFO:root:XX add new best (9, 1) is not 9 6 6
INFO:root:XX add new best (9, 1) is not 9 6 6
INFO:root:XX add new best (9, 1) is not 9 6 6
INFO:root:Trace: [(6, [(9, 1) is not 9])]
INFO:root:Trace Quality: [(6, 1)]
INFO:root:Trace Sorted: [(6, 1)]
INFO:root:Finished
INFO:root:Full Trace [(6, [(9, 1) is not 9])]
INFO:root:Trying {'minPrecheckMUS': True}
INFO:root:Starting Step 1
INFO:root:Current state [[[[8], [1, 9], [4], [5], [3], [7], [1, 6, 9], [1, 2, 6], [1, 2]], [[7, 9], [2], [3], [6], [1], [4], [7, 9], [8], [5]], [[6], [1, 7], [5], [9], [8], [2], [1, 7], [3], [4]], [[3, 4, 9], [3, 4, 6], [2, 6, 9], [1], [4, 6, 9], [5], [8], [7], [2, 9]], [[5], [4, 9], [1, 2], [7], [4, 9], [8], [3], [1, 2], [6]], [[1, 7, 9], [8], [1, 6, 7, 9], [2], [6, 9], [3], [4], [5], [1, 9]], [[2], [4, 6, 7], [1, 6, 7], [8], [5], [9], [1, 6], [1, 4, 6], [3]], [[4, 9], [5], [6, 9], [3], [7], [1], [2], [4, 6, 9], [8]], [[1, 3, 9], [3, 9], [8], [4], [2], [6], [5], [1, 9], [7]]]]
INFO:root:Doing checkSmall1
INFO:root:Getting tiny MUSes, distance 1, for 1 puzlits, 1 repeats
INFO:root:Chunked 1 in [1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
INFO:root:Doing checkSmall2
INFO:root:Getting tiny MUSes, distance 2, for 1 puzlits, 1 repeats
INFO:root:Chunked 1 in [1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
INFO:root:Considering 100 * 1 jobs for minsize=3
INFO:root:Chunked 100 in [9, 9, 9, 9, 8, 8, 8, 8, 8, 8, 8, 8]
INFO:root:Considering 100 * 1 jobs for minsize=4
INFO:root:Chunked 100 in [9, 9, 9, 9, 8, 8, 8, 8, 8, 8, 8, 8]
INFO:root:Considering 100 * 1 jobs for minsize=5
INFO:root:Chunked 100 in [9, 9, 9, 9, 8, 8, 8, 8, 8, 8, 8, 8]
INFO:root:XX found first (9, 1) is not 9 6
INFO:root:XX add new best (9, 1) is not 9 6 6
INFO:root:XX add new best (9, 1) is not 9 6 6
INFO:root:XX add new best (9, 1) is not 9 6 6
INFO:root:XX add new best (9, 1) is not 9 6 6
INFO:root:XX add new best (9, 1) is not 9 6 6
INFO:root:XX add new best (9, 1) is not 9 6 6
INFO:root:XX add new best (9, 1) is not 9 6 6
INFO:root:XX add new best (9, 1) is not 9 6 6
INFO:root:XX add new best (9, 1) is not 9 6 6
INFO:root:XX add new best (9, 1) is not 9 6 6
INFO:root:XX add new best (9, 1) is not 9 6 6
INFO:root:XX add new best (9, 1) is not 9 6 6
INFO:root:Considering 100 * 1 jobs for minsize=6
INFO:root:Chunked 100 in [9, 9, 9, 9, 8, 8, 8, 8, 8, 8, 8, 8]
INFO:root:XX add new best (9, 1) is not 9 6 6
INFO:root:XX add new best (9, 1) is not 9 6 6
INFO:root:XX add new best (9, 1) is not 9 6 6
INFO:root:XX add new best (9, 1) is not 9 6 6
INFO:root:XX add new best (9, 1) is not 9 6 6
INFO:root:XX add new best (9, 1) is not 9 6 6
INFO:root:XX add new best (9, 1) is not 9 6 6
INFO:root:XX add new best (9, 1) is not 9 6 6
INFO:root:XX add new best (9, 1) is not 9 6 6
INFO:root:XX add new best (9, 1) is not 9 6 6
INFO:root:XX add new best (9, 1) is not 9 6 6
INFO:root:XX add new best (9, 1) is not 9 6 6
INFO:root:XX add new best (9, 1) is not 9 6 6
INFO:root:XX add new best (9, 1) is not 9 6 6
INFO:root:Trace: [(6, [(9, 1) is not 9])]
INFO:root:Trace Quality: [(6, 1)]
INFO:root:Trace Sorted: [(6, 1)]
INFO:root:Finished
INFO:root:Full Trace [(6, [(9, 1) is not 9])]
INFO:root:Trying {'gallopingMUSes': True}
INFO:root:Starting Step 1
INFO:root:Current state [[[[8], [1, 9], [4], [5], [3], [7], [1, 6, 9], [1, 2, 6], [1, 2]], [[7, 9], [2], [3], [6], [1], [4], [7, 9], [8], [5]], [[6], [1, 7], [5], [9], [8], [2], [1, 7], [3], [4]], [[3, 4, 9], [3, 4, 6], [2, 6, 9], [1], [4, 6, 9], [5], [8], [7], [2, 9]], [[5], [4, 9], [1, 2], [7], [4, 9], [8], [3], [1, 2], [6]], [[1, 7, 9], [8], [1, 6, 7, 9], [2], [6, 9], [3], [4], [5], [1, 9]], [[2], [4, 6, 7], [1, 6, 7], [8], [5], [9], [1, 6], [1, 4, 6], [3]], [[4, 9], [5], [6, 9], [3], [7], [1], [2], [4, 6, 9], [8]], [[1, 3, 9], [3, 9], [8], [4], [2], [6], [5], [1, 9], [7]]]]
INFO:root:Doing checkSmall1
INFO:root:Getting tiny MUSes, distance 1, for 1 puzlits, 1 repeats
INFO:root:Chunked 1 in [1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
INFO:root:Doing checkSmall2
INFO:root:Getting tiny MUSes, distance 2, for 1 puzlits, 1 repeats
INFO:root:Chunked 1 in [1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
INFO:root:Considering 100 * 1 jobs for minsize=3
INFO:root:Chunked 100 in [9, 9, 9, 9, 8, 8, 8, 8, 8, 8, 8, 8]
INFO:root:Considering 100 * 1 jobs for minsize=4
INFO:root:Chunked 100 in [9, 9, 9, 9, 8, 8, 8, 8, 8, 8, 8, 8]
INFO:root:Considering 100 * 1 jobs for minsize=5
INFO:root:Chunked 100 in [9, 9, 9, 9, 8, 8, 8, 8, 8, 8, 8, 8]
INFO:root:XX found first (9, 1) is not 9 6
INFO:root:XX add new best (9, 1) is not 9 6 6
INFO:root:XX add new best (9, 1) is not 9 6 6
INFO:root:XX add new best (9, 1) is not 9 6 6
INFO:root:XX add new best (9, 1) is not 9 6 6
INFO:root:XX add new best (9, 1) is not 9 6 6
INFO:root:XX add new best (9, 1) is not 9 6 6
INFO:root:Considering 100 * 1 jobs for minsize=6
INFO:root:Chunked 100 in [9, 9, 9, 9, 8, 8, 8, 8, 8, 8, 8, 8]
INFO:root:XX add new best (9, 1) is not 9 6 6
INFO:root:XX add new best (9, 1) is not 9 6 6
INFO:root:XX add new best (9, 1) is not 9 6 6
INFO:root:XX add new best (9, 1) is not 9 6 6
INFO:root:XX add new best (9, 1) is not 9 6 6
INFO:root:XX add new best (9, 1) is not 9 6 6
INFO:root:XX add new best (9, 1) is not 9 6 6
INFO:root:XX add new best (9, 1) is not 9 6 6
INFO:root:XX add new best (9, 1) is not 9 6 6
INFO:root:XX add new best (9, 1) is not 9 6 6
INFO:root:Trace: [(6, [(9, 1) is not 9])]
INFO:root:Trace Quality: [(6, 1)]
INFO:root:Trace Sorted: [(6, 1)]
INFO:root:Finished
INFO:root:Full Trace [(6, [(9, 1) is not 9])]
INFO:root:Trying {'minPrecheckStepsMUS': True}
INFO:root:Starting Step 1
INFO:root:Current state [[[[8], [1, 9], [4], [5], [3], [7], [1, 6, 9], [1, 2, 6], [1, 2]], [[7, 9], [2], [3], [6], [1], [4], [7, 9], [8], [5]], [[6], [1, 7], [5], [9], [8], [2], [1, 7], [3], [4]], [[3, 4, 9], [3, 4, 6], [2, 6, 9], [1], [4, 6, 9], [5], [8], [7], [2, 9]], [[5], [4, 9], [1, 2], [7], [4, 9], [8], [3], [1, 2], [6]], [[1, 7, 9], [8], [1, 6, 7, 9], [2], [6, 9], [3], [4], [5], [1, 9]], [[2], [4, 6, 7], [1, 6, 7], [8], [5], [9], [1, 6], [1, 4, 6], [3]], [[4, 9], [5], [6, 9], [3], [7], [1], [2], [4, 6, 9], [8]], [[1, 3, 9], [3, 9], [8], [4], [2], [6], [5], [1, 9], [7]]]]
INFO:root:Doing checkSmall1
INFO:root:Getting tiny MUSes, distance 1, for 1 puzlits, 1 repeats
INFO:root:Chunked 1 in [1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
INFO:root:Doing checkSmall2
INFO:root:Getting tiny MUSes, distance 2, for 1 puzlits, 1 repeats
INFO:root:Chunked 1 in [1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
INFO:root:Considering 100 * 1 jobs for minsize=3
INFO:root:Chunked 100 in [9, 9, 9, 9, 8, 8, 8, 8, 8, 8, 8, 8]
INFO:root:Considering 100 * 1 jobs for minsize=4
INFO:root:Chunked 100 in [9, 9, 9, 9, 8, 8, 8, 8, 8, 8, 8, 8]
INFO:root:Considering 100 * 1 jobs for minsize=5
INFO:root:Chunked 100 in [9, 9, 9, 9, 8, 8, 8, 8, 8, 8, 8, 8]
INFO:root:XX found first (9, 1) is not 9 6
INFO:root:XX add new best (9, 1) is not 9 6 6
INFO:root:XX add new best (9, 1) is not 9 6 6
INFO:root:XX add new best (9, 1) is not 9 6 6
INFO:root:XX add new best (9, 1) is not 9 6 6
INFO:root:XX add new best (9, 1) is not 9 6 6
INFO:root:XX add new best (9, 1) is not 9 6 6
INFO:root:XX add new best (9, 1) is not 9 6 6
INFO:root:XX add new best (9, 1) is not 9 6 6
INFO:root:XX add new best (9, 1) is not 9 6 6
INFO:root:XX add new best (9, 1) is not 9 6 6
INFO:root:XX add new best (9, 1) is not 9 6 6
INFO:root:XX add new best (9, 1) is not 9 6 6
INFO:root:Considering 100 * 1 jobs for minsize=6
INFO:root:Chunked 100 in [9, 9, 9, 9, 8, 8, 8, 8, 8, 8, 8, 8]
INFO:root:XX add new best (9, 1) is not 9 6 6
INFO:root:XX add new best (9, 1) is not 9 6 6
INFO:root:XX add new best (9, 1) is not 9 6 6
INFO:root:XX add new best (9, 1) is not 9 6 6
INFO:root:XX add new best (9, 1) is not 9 6 6
INFO:root:XX add new best (9, 1) is not 9 6 6
INFO:root:XX add new best (9, 1) is not 9 6 6
INFO:root:XX add new best (9, 1) is not 9 6 6
INFO:root:XX add new best (9, 1) is not 9 6 6
INFO:root:XX add new best (9, 1) is not 9 6 6
INFO:root:XX add new best (9, 1) is not 9 6 6
INFO:root:XX add new best (9, 1) is not 9 6 6
INFO:root:XX add new best (9, 1) is not 9 6 6
INFO:root:XX add new best (9, 1) is not 9 6 6
INFO:root:XX add new best (9, 1) is not 9 6 6
INFO:root:XX add new best (9, 1) is not 9 6 6
INFO:root:XX add new best (9, 1) is not 9 6 6
INFO:root:Trace: [(6, [(9, 1) is not 9])]
INFO:root:Trace Quality: [(6, 1)]
INFO:root:Trace Sorted: [(6, 1)]
INFO:root:Finished
INFO:root:Full Trace [(6, [(9, 1) is not 9])]
INFO:root:Trying {'gallopingMUSes': True, 'minPrecheckMUS': True}
INFO:root:Starting Step 1
INFO:root:Current state [[[[8], [1, 9], [4], [5], [3], [7], [1, 6, 9], [1, 2, 6], [1, 2]], [[7, 9], [2], [3], [6], [1], [4], [7, 9], [8], [5]], [[6], [1, 7], [5], [9], [8], [2], [1, 7], [3], [4]], [[3, 4, 9], [3, 4, 6], [2, 6, 9], [1], [4, 6, 9], [5], [8], [7], [2, 9]], [[5], [4, 9], [1, 2], [7], [4, 9], [8], [3], [1, 2], [6]], [[1, 7, 9], [8], [1, 6, 7, 9], [2], [6, 9], [3], [4], [5], [1, 9]], [[2], [4, 6, 7], [1, 6, 7], [8], [5], [9], [1, 6], [1, 4, 6], [3]], [[4, 9], [5], [6, 9], [3], [7], [1], [2], [4, 6, 9], [8]], [[1, 3, 9], [3, 9], [8], [4], [2], [6], [5], [1, 9], [7]]]]
INFO:root:Doing checkSmall1
INFO:root:Getting tiny MUSes, distance 1, for 1 puzlits, 1 repeats
INFO:root:Chunked 1 in [1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
INFO:root:Doing checkSmall2
INFO:root:Getting tiny MUSes, distance 2, for 1 puzlits, 1 repeats
INFO:root:Chunked 1 in [1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
INFO:root:Considering 100 * 1 jobs for minsize=3
INFO:root:Chunked 100 in [9, 9, 9, 9, 8, 8, 8, 8, 8, 8, 8, 8]
INFO:root:Considering 100 * 1 jobs for minsize=4
INFO:root:Chunked 100 in [9, 9, 9, 9, 8, 8, 8, 8, 8, 8, 8, 8]
INFO:root:Considering 100 * 1 jobs for minsize=5
INFO:root:Chunked 100 in [9, 9, 9, 9, 8, 8, 8, 8, 8, 8, 8, 8]
INFO:root:XX found first (9, 1) is not 9 6
INFO:root:XX add new best (9, 1) is not 9 6 6
INFO:root:XX add new best (9, 1) is not 9 6 6
INFO:root:XX add new best (9, 1) is not 9 6 6
INFO:root:XX add new best (9, 1) is not 9 6 6
INFO:root:XX add new best (9, 1) is not 9 6 6
INFO:root:XX add new best (9, 1) is not 9 6 6
INFO:root:XX add new best (9, 1) is not 9 6 6
INFO:root:XX add new best (9, 1) is not 9 6 6
INFO:root:XX add new best (9, 1) is not 9 6 6
INFO:root:XX add new best (9, 1) is not 9 6 6
INFO:root:XX add new best (9, 1) is not 9 6 6
INFO:root:XX add new best (9, 1) is not 9 6 6
INFO:root:XX add new best (9, 1) is not 9 6 6
INFO:root:Considering 100 * 1 jobs for minsize=6
INFO:root:Chunked 100 in [9, 9, 9, 9, 8, 8, 8, 8, 8, 8, 8, 8]
INFO:root:XX add new best (9, 1) is not 9 6 6
INFO:root:XX add new best (9, 1) is not 9 6 6
INFO:root:XX add new best (9, 1) is not 9 6 6
INFO:root:XX add new best (9, 1) is not 9 6 6
INFO:root:XX add new best (9, 1) is not 9 6 6
INFO:root:XX add new best (9, 1) is not 9 6 6
INFO:root:XX add new best (9, 1) is not 9 6 6
INFO:root:XX add new best (9, 1) is not 9 6 6
INFO:root:XX add new best (9, 1) is not 9 6 6
INFO:root:XX add new best (9, 1) is not 9 6 6
INFO:root:XX add new best (9, 1) is not 9 6 6
INFO:root:XX add new best (9, 1) is not 9 6 6
INFO:root:XX add new best (9, 1) is not 9 6 6
INFO:root:XX add new best (9, 1) is not 9 6 6
INFO:root:XX add new best (9, 1) is not 9 6 6
INFO:root:XX add new best (9, 1) is not 9 6 6
INFO:root:XX add new best (9, 1) is not 9 6 6
INFO:root:Trace: [(6, [(9, 1) is not 9])]
INFO:root:Trace Quality: [(6, 1)]
INFO:root:Trace Sorted: [(6, 1)]
INFO:root:Finished
INFO:root:Full Trace [(6, [(9, 1) is not 9])]
INFO:root:Trying {}
INFO:root:Starting Step 1
INFO:root:Current state [[[[9], [2], [4], [3, 7], [8], [5], [6], [3, 7], [1]], [[1, 5, 6, 7], [5, 6, 7], [3, 5, 6, 7], [4], [1, 3, 6, 7, 9], [3, 6, 7], [2], [8], [3, 9]], [[1, 6, 7, 8], [6, 7, 8], [3, 6, 7, 8], [3, 6, 7, 9], [1, 2, 3, 6, 7, 9], [2, 3, 6, 7], [3, 4, 7, 9], [5], [3, 4, 9]], [[3], [6, 7, 8, 9], [1], [2], [6, 7], [4], [7, 8], [7, 9], [5]], [[2, 6, 7, 8], [4, 9], [6, 7, 8], [3, 6, 7, 8], [5], [1], [3, 7, 8], [4, 9], [2, 8]], [[2, 5, 7, 8], [4, 5, 7, 8], [5, 7, 8], [3, 7, 8], [3, 7], [9], [1], [2, 3, 4, 7], [6]], [[4, 5, 7], [3], [5, 7], [5, 6, 7, 9], [2, 6, 7, 9], [2, 6, 7], [4, 8, 9], [1], [2, 8]], [[4, 5, 7], [1], [2], [3, 5, 7, 9], [3, 7, 9], [8], [3, 4, 9], [6], [3, 4, 9]], [[6, 8], [6, 8], [9], [1], [4], [2, 3], [5], [2, 3], [7]]]]
INFO:root:Doing checkSmall1
INFO:root:Getting tiny MUSes, distance 1, for 1 puzlits, 1 repeats
INFO:root:Chunked 1 in [1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
INFO:root:Doing checkSmall2
INFO:root:Getting tiny MUSes, distance 2, for 1 puzlits, 1 repeats
INFO:root:Chunked 1 in [1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
INFO:root:Considering 100 * 1 jobs for minsize=3
INFO:root:Chunked 100 in [9, 9, 9, 9, 8, 8, 8, 8, 8, 8, 8, 8]
INFO:root:Considering 100 * 1 jobs for minsize=4
INFO:root:Chunked 100 in [9, 9, 9, 9, 8, 8, 8, 8, 8, 8, 8, 8]
INFO:root:Considering 100 * 1 jobs for minsize=5
INFO:root:Chunked 100 in [9, 9, 9, 9, 8, 8, 8, 8, 8, 8, 8, 8]
INFO:root:Considering 100 * 1 jobs for minsize=6
INFO:root:Chunked 100 in [9, 9, 9, 9, 8, 8, 8, 8, 8, 8, 8, 8]
INFO:root:XX found first (5, 7) is not 7 7
INFO:root:XX add new best (5, 7) is not 7 7 7
INFO:root:XX add new best (5, 7) is not 7 7 7
INFO:root:XX add new best (5, 7) is not 7 7 7
INFO:root:XX add new best (5, 7) is not 7 7 7
INFO:root:XX add new best (5, 7) is not 7 7 7
INFO:root:XX add new best (5, 7) is not 7 7 7
INFO:root:XX add new best (5, 7) is not 7 7 7
INFO:root:XX add new best (5, 7) is not 7 7 7
INFO:root:XX add new best (5, 7) is not 7 7 7
INFO:root:XX add new best (5, 7) is not 7 7 7
INFO:root:XX add new best (5, 7) is not 7 7 7
INFO:root:XX add new best (5, 7) is not 7 7 7
INFO:root:XX add new best (5, 7) is not 7 7 7
INFO:root:XX add new best (5, 7) is not 7 7 7
INFO:root:XX add new best (5, 7) is not 7 7 7
INFO:root:XX add new best (5, 7) is not 7 7 7
INFO:root:XX add new best (5, 7) is not 7 7 7
INFO:root:XX add new best (5, 7) is not 7 7 7
INFO:root:XX add new best (5, 7) is not 7 7 7
INFO:root:XX add new best (5, 7) is not 7 7 7
INFO:root:XX add new best (5, 7) is not 7 7 7
INFO:root:XX add new best (5, 7) is not 7 7 7
INFO:root:XX add new best (5, 7) is not 7 7 7
INFO:root:XX add new best (5, 7) is not 7 7 7
INFO:root:XX add new best (5, 7) is not 7 7 7
INFO:root:XX add new best (5, 7) is not 7 7 7
INFO:root:XX add new best (5, 7) is not 7 7 7
INFO:root:XX add new best (5, 7) is not 7 7 7
INFO:root:XX add new best (5, 7) is not 7 7 7
INFO:root:XX add new best (5, 7) is not 7 7 7
INFO:root:XX add new best (5, 7) is not 7 7 7
INFO:root:XX add new best (5, 7) is not 7 7 7
INFO:root:XX add new best (5, 7) is not 7 7 7
INFO:root:XX add new best (5, 7) is not 7 7 7
INFO:root:XX add new best (5, 7) is not 7 7 7
INFO:root:XX add new best (5, 7) is not 7 7 7
INFO:root:XX add new best (5, 7) is not 7 7 7
INFO:root:XX add new best (5, 7) is not 7 7 7
INFO:root:XX add new best (5, 7) is not 7 7 7
INFO:root:XX add new best (5, 7) is not 7 7 7
INFO:root:XX add new best (5, 7) is not 7 7 7
INFO:root:Considering 100 * 1 jobs for minsize=7
INFO:root:Chunked 100 in [9, 9, 9, 9, 8, 8, 8, 8, 8, 8, 8, 8]
INFO:root:XX add new best (5, 7) is not 7 7 7
INFO:root:XX add new best (5, 7) is not 7 7 7
INFO:root:XX add new best (5, 7) is not 7 7 7
INFO:root:XX add new best (5, 7) is not 7 7 7
INFO:root:XX add new best (5, 7) is not 7 7 7
INFO:root:XX add new best (5, 7) is not 7 7 7
INFO:root:XX add new best (5, 7) is not 7 7 7
INFO:root:XX add new best (5, 7) is not 7 7 7
INFO:root:XX add new best (5, 7) is not 7 7 7
INFO:root:XX add new best (5, 7) is not 7 7 7
INFO:root:XX add new best (5, 7) is not 7 7 7
INFO:root:XX add new best (5, 7) is not 7 7 7
INFO:root:XX add new best (5, 7) is not 7 7 7
INFO:root:XX add new best (5, 7) is not 7 7 7
INFO:root:XX add new best (5, 7) is not 7 7 7
INFO:root:XX add new best (5, 7) is not 7 7 7
INFO:root:XX add new best (5, 7) is not 7 7 7
INFO:root:XX add new best (5, 7) is not 7 7 7
INFO:root:XX add new best (5, 7) is not 7 7 7
INFO:root:XX add new best (5, 7) is not 7 7 7
INFO:root:XX add new best (5, 7) is not 7 7 7
INFO:root:XX add new best (5, 7) is not 7 7 7
INFO:root:XX add new best (5, 7) is not 7 7 7
INFO:root:XX add new best (5, 7) is not 7 7 7
INFO:root:XX add new best (5, 7) is not 7 7 7
INFO:root:XX add new best (5, 7) is not 7 7 7
INFO:root:XX add new best (5, 7) is not 7 7 7
INFO:root:XX add new best (5, 7) is not 7 7 7
INFO:root:XX add new best (5, 7) is not 7 7 7
INFO:root:XX add new best (5, 7) is not 7 7 7
INFO:root:XX add new best (5, 7) is not 7 7 7
INFO:root:XX add new best (5, 7) is not 7 7 7
INFO:root:XX add new best (5, 7) is not 7 7 7
INFO:root:XX add new best (5, 7) is not 7 7 7
INFO:root:XX add new best (5, 7) is not 7 7 7
INFO:root:XX add new best (5, 7) is not 7 7 7
INFO:root:XX add new best (5, 7) is not 7 7 7
INFO:root:XX add new best (5, 7) is not 7 7 7
INFO:root:XX add new best (5, 7) is not 7 7 7
INFO:root:XX add new best (5, 7) is not 7 7 7
INFO:root:XX add new best (5, 7) is not 7 7 7
INFO:root:XX add new best (5, 7) is not 7 7 7
INFO:root:Trace: [(7, [(5, 7) is not 7])]
INFO:root:Trace Quality: [(7, 1)]
INFO:root:Trace Sorted: [(7, 1)]
INFO:root:Finished
INFO:root:Full Trace [(7, [(5, 7) is not 7])]
INFO:root:Trying {'prechopMUSes': True}
INFO:root:Starting Step 1
INFO:root:Current state [[[[9], [2], [4], [3, 7], [8], [5], [6], [3, 7], [1]], [[1, 5, 6, 7], [5, 6, 7], [3, 5, 6, 7], [4], [1, 3, 6, 7, 9], [3, 6, 7], [2], [8], [3, 9]], [[1, 6, 7, 8], [6, 7, 8], [3, 6, 7, 8], [3, 6, 7, 9], [1, 2, 3, 6, 7, 9], [2, 3, 6, 7], [3, 4, 7, 9], [5], [3, 4, 9]], [[3], [6, 7, 8, 9], [1], [2], [6, 7], [4], [7, 8], [7, 9], [5]], [[2, 6, 7, 8], [4, 9], [6, 7, 8], [3, 6, 7, 8], [5], [1], [3, 7, 8], [4, 9], [2, 8]], [[2, 5, 7, 8], [4, 5, 7, 8], [5, 7, 8], [3, 7, 8], [3, 7], [9], [1], [2, 3, 4, 7], [6]], [[4, 5, 7], [3], [5, 7], [5, 6, 7, 9], [2, 6, 7, 9], [2, 6, 7], [4, 8, 9], [1], [2, 8]], [[4, 5, 7], [1], [2], [3, 5, 7, 9], [3, 7, 9], [8], [3, 4, 9], [6], [3, 4, 9]], [[6, 8], [6, 8], [9], [1], [4], [2, 3], [5], [2, 3], [7]]]]
INFO:root:Doing checkSmall1
INFO:root:Getting tiny MUSes, distance 1, for 1 puzlits, 1 repeats
INFO:root:Chunked 1 in [1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
INFO:root:Doing checkSmall2
INFO:root:Getting tiny MUSes, distance 2, for 1 puzlits, 1 repeats
INFO:root:Chunked 1 in [1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
INFO:root:Considering 100 * 1 jobs for minsize=3
INFO:root:Chunked 100 in [9, 9, 9, 9, 8, 8, 8, 8, 8, 8, 8, 8]
INFO:root:Considering 100 * 1 jobs for minsize=4
INFO:root:Chunked 100 in [9, 9, 9, 9, 8, 8, 8, 8, 8, 8, 8, 8]
INFO:root:Considering 100 * 1 jobs for minsize=5
INFO:root:Chunked 100 in [9, 9, 9, 9, 8, 8, 8, 8, 8, 8, 8, 8]
INFO:root:XX found first (5, 7) is not 7 6
INFO:root:XX add new best (5, 7) is not 7 6 6
INFO:root:XX add new best (5, 7) is not 7 6 6
INFO:root:XX add new best (5, 7) is not 7 6 6
INFO:root:XX add new best (5, 7) is not 7 6 6
INFO:root:Considering 100 * 1 jobs for minsize=6
INFO:root:Chunked 100 in [9, 9, 9, 9, 8, 8, 8, 8, 8, 8, 8, 8]
INFO:root:XX add new best (5, 7) is not 7 6 6
INFO:root:XX add new best (5, 7) is not 7 6 6
INFO:root:XX add new best (5, 7) is not 7 6 6
INFO:root:XX add new best (5, 7) is not 7 6 6
INFO:root:XX add new best (5, 7) is not 7 6 6
INFO:root:XX add new best (5, 7) is not 7 6 6
INFO:root:XX add new best (5, 7) is not 7 6 6
INFO:root:XX add new best (5, 7) is not 7 6 6
INFO:root:Trace: [(6, [(5, 7) is not 7])]
INFO:root:Trace Quality: [(6, 1)]
INFO:root:Trace Sorted: [(6, 1)]
INFO:root:Finished
INFO:root:Full Trace [(6, [(5, 7) is not 7])]
INFO:root:Trying {'quarterChopMUS': True}
INFO:root:Starting Step 1
INFO:root:Current state [[[[9], [2], [4], [3, 7], [8], [5], [6], [3, 7], [1]], [[1, 5, 6, 7], [5, 6, 7], [3, 5, 6, 7], [4], [1, 3, 6, 7, 9], [3, 6, 7], [2], [8], [3, 9]], [[1, 6, 7, 8], [6, 7, 8], [3, 6, 7, 8], [3, 6, 7, 9], [1, 2, 3, 6, 7, 9], [2, 3, 6, 7], [3, 4, 7, 9], [5], [3, 4, 9]], [[3], [6, 7, 8, 9], [1], [2], [6, 7], [4], [7, 8], [7, 9], [5]], [[2, 6, 7, 8], [4, 9], [6, 7, 8], [3, 6, 7, 8], [5], [1], [3, 7, 8], [4, 9], [2, 8]], [[2, 5, 7, 8], [4, 5, 7, 8], [5, 7, 8], [3, 7, 8], [3, 7], [9], [1], [2, 3, 4, 7], [6]], [[4, 5, 7], [3], [5, 7], [5, 6, 7, 9], [2, 6, 7, 9], [2, 6, 7], [4, 8, 9], [1], [2, 8]], [[4, 5, 7], [1], [2], [3, 5, 7, 9], [3, 7, 9], [8], [3, 4, 9], [6], [3, 4, 9]], [[6, 8], [6, 8], [9], [1], [4], [2, 3], [5], [2, 3], [7]]]]
INFO:root:Doing checkSmall1
INFO:root:Getting tiny MUSes, distance 1, for 1 puzlits, 1 repeats
INFO:root:Chunked 1 in [1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
INFO:root:Doing checkSmall2
INFO:root:Getting tiny MUSes, distance 2, for 1 puzlits, 1 repeats
INFO:root:Chunked 1 in [1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
INFO:root:Considering 100 * 1 jobs for minsize=3
INFO:root:Chunked 100 in [9, 9, 9, 9, 8, 8, 8, 8, 8, 8, 8, 8]
INFO:root:Considering 100 * 1 jobs for minsize=4
INFO:root:Chunked 100 in [9, 9, 9, 9, 8, 8, 8, 8, 8, 8, 8, 8]
INFO:root:Considering 100 * 1 jobs for minsize=5
INFO:root:Chunked 100 in [9, 9, 9, 9, 8, 8, 8, 8, 8, 8, 8, 8]
INFO:root:XX found first (5, 7) is not 7 6
INFO:root:XX add new best (5, 7) is not 7 6 6
INFO:root:XX add new best (5, 7) is not 7 6 6
INFO:root:XX add new best (5, 7) is not 7 6 6
INFO:root:XX add new best (5, 7) is not 7 6 6
INFO:root:XX add new best (5, 7) is not 7 6 6
INFO:root:Considering 100 * 1 jobs for minsize=6
INFO:root:Chunked 100 in [9, 9, 9, 9, 8, 8, 8, 8, 8, 8, 8, 8]
INFO:root:XX add new best (5, 7) is not 7 6 6
INFO:root:XX add new best (5, 7) is not 7 6 6
INFO:root:XX add new best (5, 7) is not 7 6 6
INFO:root:XX add new best (5, 7) is not 7 6 6
INFO:root:Trace: [(6, [(5, 7) is not 7])]
INFO:root:Trace Quality: [(6, 1)]
INFO:root:Trace Sorted: [(6, 1)]
INFO:root:Finished
INFO:root:Full Trace [(6, [(5, 7) is not 7])]
INFO:root:Trying {'minPrecheckMUS': True}
INFO:root:Starting Step 1
INFO:root:Current state [[[[9], [2], [4], [3, 7], [8], [5], [6], [3, 7], [1]], [[1, 5, 6, 7], [5, 6, 7], [3, 5, 6, 7], [4], [1, 3, 6, 7, 9], [3, 6, 7], [2], [8], [3, 9]], [[1, 6, 7, 8], [6, 7, 8], [3, 6, 7, 8], [3, 6, 7, 9], [1, 2, 3, 6, 7, 9], [2, 3, 6, 7], [3, 4, 7, 9], [5], [3, 4, 9]], [[3], [6, 7, 8, 9], [1], [2], [6, 7], [4], [7, 8], [7, 9], [5]], [[2, 6, 7, 8], [4, 9], [6, 7, 8], [3, 6, 7, 8], [5], [1], [3, 7, 8], [4, 9], [2, 8]], [[2, 5, 7, 8], [4, 5, 7, 8], [5, 7, 8], [3, 7, 8], [3, 7], [9], [1], [2, 3, 4, 7], [6]], [[4, 5, 7], [3], [5, 7], [5, 6, 7, 9], [2, 6, 7, 9], [2, 6, 7], [4, 8, 9], [1], [2, 8]], [[4, 5, 7], [1], [2], [3, 5, 7, 9], [3, 7, 9], [8], [3, 4, 9], [6], [3, 4, 9]], [[6, 8], [6, 8], [9], [1], [4], [2, 3], [5], [2, 3], [7]]]]
INFO:root:Doing checkSmall1
INFO:root:Getting tiny MUSes, distance 1, for 1 puzlits, 1 repeats
INFO:root:Chunked 1 in [1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
INFO:root:Doing checkSmall2
INFO:root:Getting tiny MUSes, distance 2, for 1 puzlits, 1 repeats
INFO:root:Chunked 1 in [1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
INFO:root:Considering 100 * 1 jobs for minsize=3
INFO:root:Chunked 100 in [9, 9, 9, 9, 8, 8, 8, 8, 8, 8, 8, 8]
INFO:root:Considering 100 * 1 jobs for minsize=4
INFO:root:Chunked 100 in [9, 9, 9, 9, 8, 8, 8, 8, 8, 8, 8, 8]
INFO:root:Considering 100 * 1 jobs for minsize=5
INFO:root:Chunked 100 in [9, 9, 9, 9, 8, 8, 8, 8, 8, 8, 8, 8]
INFO:root:XX found first (5, 7) is not 7 6
INFO:root:XX add new best (5, 7) is not 7 6 6
INFO:root:XX add new best (5, 7) is not 7 6 6
INFO:root:XX add new best (5, 7) is not 7 6 6
INFO:root:XX add new best (5, 7) is not 7 6 6
INFO:root:Considering 100 * 1 jobs for minsize=6
INFO:root:Chunked 100 in [9, 9, 9, 9, 8, 8, 8, 8, 8, 8, 8, 8]
INFO:root:XX add new best (5, 7) is not 7 6 6
INFO:root:XX add new best (5, 7) is not 7 6 6
INFO:root:XX add new best (5, 7) is not 7 6 6
INFO:root:XX add new best (5, 7) is not 7 6 6
INFO:root:XX add new best (5, 7) is not 7 6 6
INFO:root:XX add new best (5, 7) is not 7 6 6
INFO:root:XX add new best (5, 7) is not 7 6 6
INFO:root:XX add new best (5, 7) is not 7 6 6
INFO:root:Trace: [(6, [(5, 7) is not 7])]
INFO:root:Trace Quality: [(6, 1)]
INFO:root:Trace Sorted: [(6, 1)]
INFO:root:Finished
INFO:root:Full Trace [(6, [(5, 7) is not 7])]
INFO:root:Trying {'gallopingMUSes': True}
INFO:root:Starting Step 1
INFO:root:Current state [[[[9], [2], [4], [3, 7], [8], [5], [6], [3, 7], [1]], [[1, 5, 6, 7], [5, 6, 7], [3, 5, 6, 7], [4], [1, 3, 6, 7, 9], [3, 6, 7], [2], [8], [3, 9]], [[1, 6, 7, 8], [6, 7, 8], [3, 6, 7, 8], [3, 6, 7, 9], [1, 2, 3, 6, 7, 9], [2, 3, 6, 7], [3, 4, 7, 9], [5], [3, 4, 9]], [[3], [6, 7, 8, 9], [1], [2], [6, 7], [4], [7, 8], [7, 9], [5]], [[2, 6, 7, 8], [4, 9], [6, 7, 8], [3, 6, 7, 8], [5], [1], [3, 7, 8], [4, 9], [2, 8]], [[2, 5, 7, 8], [4, 5, 7, 8], [5, 7, 8], [3, 7, 8], [3, 7], [9], [1], [2, 3, 4, 7], [6]], [[4, 5, 7], [3], [5, 7], [5, 6, 7, 9], [2, 6, 7, 9], [2, 6, 7], [4, 8, 9], [1], [2, 8]], [[4, 5, 7], [1], [2], [3, 5, 7, 9], [3, 7, 9], [8], [3, 4, 9], [6], [3, 4, 9]], [[6, 8], [6, 8], [9], [1], [4], [2, 3], [5], [2, 3], [7]]]]
INFO:root:Doing checkSmall1
INFO:root:Getting tiny MUSes, distance 1, for 1 puzlits, 1 repeats
INFO:root:Chunked 1 in [1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
INFO:root:Doing checkSmall2
INFO:root:Getting tiny MUSes, distance 2, for 1 puzlits, 1 repeats
INFO:root:Chunked 1 in [1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
INFO:root:Considering 100 * 1 jobs for minsize=3
INFO:root:Chunked 100 in [9, 9, 9, 9, 8, 8, 8, 8, 8, 8, 8, 8]
INFO:root:Considering 100 * 1 jobs for minsize=4
INFO:root:Chunked 100 in [9, 9, 9, 9, 8, 8, 8, 8, 8, 8, 8, 8]
INFO:root:Considering 100 * 1 jobs for minsize=5
INFO:root:Chunked 100 in [9, 9, 9, 9, 8, 8, 8, 8, 8, 8, 8, 8]
INFO:root:XX found first (5, 7) is not 7 6
INFO:root:XX add new best (5, 7) is not 7 6 6
INFO:root:XX add new best (5, 7) is not 7 6 6
INFO:root:XX add new best (5, 7) is not 7 6 6
INFO:root:XX add new best (5, 7) is not 7 6 6
INFO:root:XX add new best (5, 7) is not 7 6 6
INFO:root:Considering 100 * 1 jobs for minsize=6
INFO:root:Chunked 100 in [9, 9, 9, 9, 8, 8, 8, 8, 8, 8, 8, 8]
INFO:root:XX add new best (5, 7) is not 7 6 6
INFO:root:XX add new best (5, 7) is not 7 6 6
INFO:root:XX add new best (5, 7) is not 7 6 6
INFO:root:XX add new best (5, 7) is not 7 6 6
INFO:root:XX add new best (5, 7) is not 7 6 6
INFO:root:XX add new best (5, 7) is not 7 6 6
INFO:root:XX add new best (5, 7) is not 7 6 6
INFO:root:Trace: [(6, [(5, 7) is not 7])]
INFO:root:Trace Quality: [(6, 1)]
INFO:root:Trace Sorted: [(6, 1)]
INFO:root:Finished
INFO:root:Full Trace [(6, [(5, 7) is not 7])]
INFO:root:Trying {'minPrecheckStepsMUS': True}
INFO:root:Starting Step 1
INFO:root:Current state [[[[9], [2], [4], [3, 7], [8], [5], [6], [3, 7], [1]], [[1, 5, 6, 7], [5, 6, 7], [3, 5, 6, 7], [4], [1, 3, 6, 7, 9], [3, 6, 7], [2], [8], [3, 9]], [[1, 6, 7, 8], [6, 7, 8], [3, 6, 7, 8], [3, 6, 7, 9], [1, 2, 3, 6, 7, 9], [2, 3, 6, 7], [3, 4, 7, 9], [5], [3, 4, 9]], [[3], [6, 7, 8, 9], [1], [2], [6, 7], [4], [7, 8], [7, 9], [5]], [[2, 6, 7, 8], [4, 9], [6, 7, 8], [3, 6, 7, 8], [5], [1], [3, 7, 8], [4, 9], [2, 8]], [[2, 5, 7, 8], [4, 5, 7, 8], [5, 7, 8], [3, 7, 8], [3, 7], [9], [1], [2, 3, 4, 7], [6]], [[4, 5, 7], [3], [5, 7], [5, 6, 7, 9], [2, 6, 7, 9], [2, 6, 7], [4, 8, 9], [1], [2, 8]], [[4, 5, 7], [1], [2], [3, 5, 7, 9], [3, 7, 9], [8], [3, 4, 9], [6], [3, 4, 9]], [[6, 8], [6, 8], [9], [1], [4], [2, 3], [5], [2, 3], [7]]]]
INFO:root:Doing checkSmall1
INFO:root:Getting tiny MUSes, distance 1, for 1 puzlits, 1 repeats
INFO:root:Chunked 1 in [1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
INFO:root:Doing checkSmall2
INFO:root:Getting tiny MUSes, distance 2, for 1 puzlits, 1 repeats
INFO:root:Chunked 1 in [1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
INFO:root:Considering 100 * 1 jobs for minsize=3
INFO:root:Chunked 100 in [9, 9, 9, 9, 8, 8, 8, 8, 8, 8, 8, 8]
INFO:root:Considering 100 * 1 jobs for minsize=4
INFO:root:Chunked 100 in [9, 9, 9, 9, 8, 8, 8, 8, 8, 8, 8, 8]
INFO:root:Considering 100 * 1 jobs for minsize=5
INFO:root:Chunked 100 in [9, 9, 9, 9, 8, 8, 8, 8, 8, 8, 8, 8]
INFO:root:XX found first (5, 7) is not 7 6
INFO:root:XX add new best (5, 7) is not 7 6 6
INFO:root:XX add new best (5, 7) is not 7 6 6
INFO:root:XX add new best (5, 7) is not 7 6 6
INFO:root:XX add new best (5, 7) is not 7 6 6
INFO:root:Considering 100 * 1 jobs for minsize=6
INFO:root:Chunked 100 in [9, 9, 9, 9, 8, 8, 8, 8, 8, 8, 8, 8]
INFO:root:XX add new best (5, 7) is not 7 6 6
INFO:root:XX add new best (5, 7) is not 7 6 6
INFO:root:XX add new best (5, 7) is not 7 6 6
INFO:root:XX add new best (5, 7) is not 7 6 6
INFO:root:XX add new best (5, 7) is not 7 6 6
INFO:root:XX add new best (5, 7) is not 7 6 6
INFO:root:XX add new best (5, 7) is not 7 6 6
INFO:root:XX add new best (5, 7) is not 7 6 6
INFO:root:Trace: [(6, [(5, 7) is not 7])]
INFO:root:Trace Quality: [(6, 1)]
INFO:root:Trace Sorted: [(6, 1)]
INFO:root:Finished
INFO:root:Full Trace [(6, [(5, 7) is not 7])]
INFO:root:Trying {'gallopingMUSes': True, 'minPrecheckMUS': True}
INFO:root:Starting Step 1
INFO:root:Current state [[[[9], [2], [4], [3, 7], [8], [5], [6], [3, 7], [1]], [[1, 5, 6, 7], [5, 6, 7], [3, 5, 6, 7], [4], [1, 3, 6, 7, 9], [3, 6, 7], [2], [8], [3, 9]], [[1, 6, 7, 8], [6, 7, 8], [3, 6, 7, 8], [3, 6, 7, 9], [1, 2, 3, 6, 7, 9], [2, 3, 6, 7], [3, 4, 7, 9], [5], [3, 4, 9]], [[3], [6, 7, 8, 9], [1], [2], [6, 7], [4], [7, 8], [7, 9], [5]], [[2, 6, 7, 8], [4, 9], [6, 7, 8], [3, 6, 7, 8], [5], [1], [3, 7, 8], [4, 9], [2, 8]], [[2, 5, 7, 8], [4, 5, 7, 8], [5, 7, 8], [3, 7, 8], [3, 7], [9], [1], [2, 3, 4, 7], [6]], [[4, 5, 7], [3], [5, 7], [5, 6, 7, 9], [2, 6, 7, 9], [2, 6, 7], [4, 8, 9], [1], [2, 8]], [[4, 5, 7], [1], [2], [3, 5, 7, 9], [3, 7, 9], [8], [3, 4, 9], [6], [3, 4, 9]], [[6, 8], [6, 8], [9], [1], [4], [2, 3], [5], [2, 3], [7]]]]
INFO:root:Doing checkSmall1
INFO:root:Getting tiny MUSes, distance 1, for 1 puzlits, 1 repeats
INFO:root:Chunked 1 in [1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
INFO:root:Doing checkSmall2
INFO:root:Getting tiny MUSes, distance 2, for 1 puzlits, 1 repeats
INFO:root:Chunked 1 in [1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
INFO:root:Considering 100 * 1 jobs for minsize=3
INFO:root:Chunked 100 in [9, 9, 9, 9, 8, 8, 8, 8, 8, 8, 8, 8]
INFO:root:Considering 100 * 1 jobs for minsize=4
INFO:root:Chunked 100 in [9, 9, 9, 9, 8, 8, 8, 8, 8, 8, 8, 8]
INFO:root:Considering 100 * 1 jobs for minsize=5
INFO:root:Chunked 100 in [9, 9, 9, 9, 8, 8, 8, 8, 8, 8, 8, 8]
INFO:root:XX found first (5, 7) is not 7 6
INFO:root:XX add new best (5, 7) is not 7 6 6
INFO:root:XX add new best (5, 7) is not 7 6 6
INFO:root:XX add new best (5, 7) is not 7 6 6
INFO:root:XX add new best (5, 7) is not 7 6 6
INFO:root:Considering 100 * 1 jobs for minsize=6
INFO:root:Chunked 100 in [9, 9, 9, 9, 8, 8, 8, 8, 8, 8, 8, 8]
INFO:root:XX add new best (5, 7) is not 7 6 6
INFO:root:XX add new best (5, 7) is not 7 6 6
INFO:root:XX add new best (5, 7) is not 7 6 6
INFO:root:XX add new best (5, 7) is not 7 6 6
INFO:root:XX add new best (5, 7) is not 7 6 6
INFO:root:XX add new best (5, 7) is not 7 6 6
INFO:root:XX add new best (5, 7) is not 7 6 6
INFO:root:XX add new best (5, 7) is not 7 6 6
INFO:root:Trace: [(6, [(5, 7) is not 7])]
INFO:root:Trace Quality: [(6, 1)]
INFO:root:Trace Sorted: [(6, 1)]
INFO:root:Finished
INFO:root:Full Trace [(6, [(5, 7) is not 7])]
INFO:root:Trying {}
INFO:root:Starting Step 1
INFO:root:Current state [[[[1, 5], [7], [6], [2], [3, 5], [8, 9], [4], [5, 8, 9], [1, 3, 8, 9]], [[5, 8], [9], [4], [1], [3, 5], [7], [2, 3, 8], [6], [2, 3, 8]], [[2], [1, 3], [3, 5, 8], [4], [6], [8, 9], [1, 8, 9], [5, 8, 9], [7]], [[5, 8, 9], [6], [2, 5, 8], [3], [7], [1], [2, 5, 8, 9], [2, 4, 8, 9], [2, 4, 8, 9]], [[7], [4], [3, 8], [5], [9], [2], [3, 8], [1], [6]], [[1, 5, 9], [1, 2, 3], [1, 2, 3, 5], [6], [8], [4], [2, 3, 5, 9], [7], [2, 3, 9]], [[3], [1, 2], [9], [7], [1, 2, 4], [6], [1, 2, 8], [2, 4, 8], [5]], [[6], [8], [1, 2], [9], [1, 2, 4], [5], [7], [3], [1, 2, 4]], [[4], [5], [7], [8], [1, 2], [3], [6], [2, 9], [1, 2, 9]]]]
INFO:root:Doing checkSmall1
INFO:root:Getting tiny MUSes, distance 1, for 1 puzlits, 1 repeats
INFO:root:Chunked 1 in [1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
INFO:root:Doing checkSmall2
INFO:root:Getting tiny MUSes, distance 2, for 1 puzlits, 1 repeats
INFO:root:Chunked 1 in [1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
INFO:root:Considering 100 * 1 jobs for minsize=3
INFO:root:Chunked 100 in [9, 9, 9, 9, 8, 8, 8, 8, 8, 8, 8, 8]
INFO:root:Considering 100 * 1 jobs for minsize=4
INFO:root:Chunked 100 in [9, 9, 9, 9, 8, 8, 8, 8, 8, 8, 8, 8]
INFO:root:Considering 100 * 1 jobs for minsize=5
INFO:root:Chunked 100 in [9, 9, 9, 9, 8, 8, 8, 8, 8, 8, 8, 8]
INFO:root:Considering 100 * 1 jobs for minsize=6
INFO:root:Chunked 100 in [9, 9, 9, 9, 8, 8, 8, 8, 8, 8, 8, 8]
INFO:root:Considering 100 * 1 jobs for minsize=7
INFO:root:Chunked 100 in [9, 9, 9, 9, 8, 8, 8, 8, 8, 8, 8, 8]
INFO:root:Considering 100 * 1 jobs for minsize=8
INFO:root:Chunked 100 in [9, 9, 9, 9, 8, 8, 8, 8, 8, 8, 8, 8]
INFO:root:Considering 100 * 1 jobs for minsize=9
INFO:root:Chunked 100 in [9, 9, 9, 9, 8, 8, 8, 8, 8, 8, 8, 8]
INFO:root:XX found first (2, 7) is not 8 5
INFO:root:Trace: [(5, [(2, 7) is not 8])]
INFO:root:Trace Quality: [(5, 1)]
INFO:root:Trace Sorted: [(5, 1)]
INFO:root:Finished
INFO:root:Full Trace [(5, [(2, 7) is not 8])]
INFO:root:Trying {'prechopMUSes': True}
INFO:root:Starting Step 1
INFO:root:Current state [[[[1, 5], [7], [6], [2], [3, 5], [8, 9], [4], [5, 8, 9], [1, 3, 8, 9]], [[5, 8], [9], [4], [1], [3, 5], [7], [2, 3, 8], [6], [2, 3, 8]], [[2], [1, 3], [3, 5, 8], [4], [6], [8, 9], [1, 8, 9], [5, 8, 9], [7]], [[5, 8, 9], [6], [2, 5, 8], [3], [7], [1], [2, 5, 8, 9], [2, 4, 8, 9], [2, 4, 8, 9]], [[7], [4], [3, 8], [5], [9], [2], [3, 8], [1], [6]], [[1, 5, 9], [1, 2, 3], [1, 2, 3, 5], [6], [8], [4], [2, 3, 5, 9], [7], [2, 3, 9]], [[3], [1, 2], [9], [7], [1, 2, 4], [6], [1, 2, 8], [2, 4, 8], [5]], [[6], [8], [1, 2], [9], [1, 2, 4], [5], [7], [3], [1, 2, 4]], [[4], [5], [7], [8], [1, 2], [3], [6], [2, 9], [1, 2, 9]]]]
INFO:root:Doing checkSmall1
INFO:root:Getting tiny MUSes, distance 1, for 1 puzlits, 1 repeats
INFO:root:Chunked 1 in [1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
INFO:root:Doing checkSmall2
INFO:root:Getting tiny MUSes, distance 2, for 1 puzlits, 1 repeats
INFO:root:Chunked 1 in [1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
INFO:root:Considering 100 * 1 jobs for minsize=3
INFO:root:Chunked 100 in [9, 9, 9, 9, 8, 8, 8, 8, 8, 8, 8, 8]
INFO:root:Considering 100 * 1 jobs for minsize=4
INFO:root:Chunked 100 in [9, 9, 9, 9, 8, 8, 8, 8, 8, 8, 8, 8]
INFO:root:XX found first (2, 7) is not 8 5
INFO:root:XX add new best (2, 7) is not 8 5 5
INFO:root:XX add new best (2, 7) is not 8 5 5
INFO:root:XX add new best (2, 7) is not 8 5 5
INFO:root:XX add new best (2, 7) is not 8 5 5
INFO:root:XX add new best (2, 7) is not 8 5 5
INFO:root:XX add new best (2, 7) is not 8 5 5
INFO:root:XX add new best (2, 7) is not 8 5 5
INFO:root:XX add new best (2, 7) is not 8 5 5
INFO:root:XX add new best (2, 7) is not 8 5 5
INFO:root:XX add new best (2, 7) is not 8 5 5
INFO:root:XX add new best (2, 7) is not 8 5 5
INFO:root:XX add new best (2, 7) is not 8 5 5
INFO:root:XX add new best (2, 7) is not 8 5 5
INFO:root:XX add new best (2, 7) is not 8 5 5
INFO:root:XX add new best (2, 7) is not 8 5 5
INFO:root:XX add new best (2, 7) is not 8 5 5
INFO:root:XX add new best (2, 7) is not 8 5 5
INFO:root:XX add new best (2, 7) is not 8 5 5
INFO:root:XX add new best (2, 7) is not 8 5 5
INFO:root:XX add new best (2, 7) is not 8 5 5
INFO:root:Considering 100 * 1 jobs for minsize=5
INFO:root:Chunked 100 in [9, 9, 9, 9, 8, 8, 8, 8, 8, 8, 8, 8]
INFO:root:XX add new best (2, 7) is not 8 5 5
INFO:root:XX add new best (2, 7) is not 8 5 5
INFO:root:XX add new best (2, 7) is not 8 5 5
INFO:root:XX add new best (2, 7) is not 8 5 5
INFO:root:XX add new best (2, 7) is not 8 5 5
INFO:root:XX add new best (2, 7) is not 8 5 5
INFO:root:XX add new best (2, 7) is not 8 5 5
INFO:root:XX add new best (2, 7) is not 8 5 5
INFO:root:XX add new best (2, 7) is not 8 5 5
INFO:root:XX add new best (2, 7) is not 8 5 5
INFO:root:XX add new best (2, 7) is not 8 5 5
INFO:root:XX add new best (2, 7) is not 8 5 5
INFO:root:XX add new best (2, 7) is not 8 5 5
INFO:root:XX add new best (2, 7) is not 8 5 5
INFO:root:XX add new best (2, 7) is not 8 5 5
INFO:root:Trace: [(5, [(2, 7) is not 8])]
INFO:root:Trace Quality: [(5, 1)]
INFO:root:Trace Sorted: [(5, 1)]
INFO:root:Finished
INFO:root:Full Trace [(5, [(2, 7) is not 8])]
INFO:root:Trying {'quarterChopMUS': True}
INFO:root:Starting Step 1
INFO:root:Current state [[[[1, 5], [7], [6], [2], [3, 5], [8, 9], [4], [5, 8, 9], [1, 3, 8, 9]], [[5, 8], [9], [4], [1], [3, 5], [7], [2, 3, 8], [6], [2, 3, 8]], [[2], [1, 3], [3, 5, 8], [4], [6], [8, 9], [1, 8, 9], [5, 8, 9], [7]], [[5, 8, 9], [6], [2, 5, 8], [3], [7], [1], [2, 5, 8, 9], [2, 4, 8, 9], [2, 4, 8, 9]], [[7], [4], [3, 8], [5], [9], [2], [3, 8], [1], [6]], [[1, 5, 9], [1, 2, 3], [1, 2, 3, 5], [6], [8], [4], [2, 3, 5, 9], [7], [2, 3, 9]], [[3], [1, 2], [9], [7], [1, 2, 4], [6], [1, 2, 8], [2, 4, 8], [5]], [[6], [8], [1, 2], [9], [1, 2, 4], [5], [7], [3], [1, 2, 4]], [[4], [5], [7], [8], [1, 2], [3], [6], [2, 9], [1, 2, 9]]]]
INFO:root:Doing checkSmall1
INFO:root:Getting tiny MUSes, distance 1, for 1 puzlits, 1 repeats
INFO:root:Chunked 1 in [1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
INFO:root:Doing checkSmall2
INFO:root:Getting tiny MUSes, distance 2, for 1 puzlits, 1 repeats
INFO:root:Chunked 1 in [1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
INFO:root:Considering 100 * 1 jobs for minsize=3
INFO:root:Chunked 100 in [9, 9, 9, 9, 8, 8, 8, 8, 8, 8, 8, 8]
INFO:root:Considering 100 * 1 jobs for minsize=4
INFO:root:Chunked 100 in [9, 9, 9, 9, 8, 8, 8, 8, 8, 8, 8, 8]
INFO:root:XX found first (2, 7) is not 8 5
INFO:root:XX add new best (2, 7) is not 8 5 5
INFO:root:XX add new best (2, 7) is not 8 5 5
INFO:root:XX add new best (2, 7) is not 8 5 5
INFO:root:XX add new best (2, 7) is not 8 5 5
INFO:root:XX add new best (2, 7) is not 8 5 5
INFO:root:XX add new best (2, 7) is not 8 5 5
INFO:root:XX add new best (2, 7) is not 8 5 5
INFO:root:XX add new best (2, 7) is not 8 5 5
INFO:root:XX add new best (2, 7) is not 8 5 5
INFO:root:XX add new best (2, 7) is not 8 5 5
INFO:root:XX add new best (2, 7) is not 8 5 5
INFO:root:XX add new best (2, 7) is not 8 5 5
INFO:root:XX add new best (2, 7) is not 8 5 5
INFO:root:XX add new best (2, 7) is not 8 5 5
INFO:root:XX add new best (2, 7) is not 8 5 5
INFO:root:XX add new best (2, 7) is not 8 5 5
INFO:root:XX add new best (2, 7) is not 8 5 5
INFO:root:XX add new best (2, 7) is not 8 5 5
INFO:root:XX add new best (2, 7) is not 8 5 5
INFO:root:XX add new best (2, 7) is not 8 5 5
INFO:root:XX add new best (2, 7) is not 8 5 5
INFO:root:XX add new best (2, 7) is not 8 5 5
INFO:root:XX add new best (2, 7) is not 8 5 5
INFO:root:XX add new best (2, 7) is not 8 5 5
INFO:root:Considering 100 * 1 jobs for minsize=5
INFO:root:Chunked 100 in [9, 9, 9, 9, 8, 8, 8, 8, 8, 8, 8, 8]
INFO:root:XX add new best (2, 7) is not 8 5 5
INFO:root:XX add new best (2, 7) is not 8 5 5
INFO:root:XX add new best (2, 7) is not 8 5 5
INFO:root:XX add new best (2, 7) is not 8 5 5
INFO:root:XX add new best (2, 7) is not 8 5 5
INFO:root:XX add new best (2, 7) is not 8 5 5
INFO:root:XX add new best (2, 7) is not 8 5 5
INFO:root:XX add new best (2, 7) is not 8 5 5
INFO:root:XX add new best (2, 7) is not 8 5 5
INFO:root:XX add new best (2, 7) is not 8 5 5
INFO:root:XX add new best (2, 7) is not 8 5 5
INFO:root:XX add new best (2, 7) is not 8 5 5
INFO:root:XX add new best (2, 7) is not 8 5 5
INFO:root:XX add new best (2, 7) is not 8 5 5
INFO:root:XX add new best (2, 7) is not 8 5 5
INFO:root:Trace: [(5, [(2, 7) is not 8])]
INFO:root:Trace Quality: [(5, 1)]
INFO:root:Trace Sorted: [(5, 1)]
INFO:root:Finished
INFO:root:Full Trace [(5, [(2, 7) is not 8])]
INFO:root:Trying {'minPrecheckMUS': True}
INFO:root:Starting Step 1
INFO:root:Current state [[[[1, 5], [7], [6], [2], [3, 5], [8, 9], [4], [5, 8, 9], [1, 3, 8, 9]], [[5, 8], [9], [4], [1], [3, 5], [7], [2, 3, 8], [6], [2, 3, 8]], [[2], [1, 3], [3, 5, 8], [4], [6], [8, 9], [1, 8, 9], [5, 8, 9], [7]], [[5, 8, 9], [6], [2, 5, 8], [3], [7], [1], [2, 5, 8, 9], [2, 4, 8, 9], [2, 4, 8, 9]], [[7], [4], [3, 8], [5], [9], [2], [3, 8], [1], [6]], [[1, 5, 9], [1, 2, 3], [1, 2, 3, 5], [6], [8], [4], [2, 3, 5, 9], [7], [2, 3, 9]], [[3], [1, 2], [9], [7], [1, 2, 4], [6], [1, 2, 8], [2, 4, 8], [5]], [[6], [8], [1, 2], [9], [1, 2, 4], [5], [7], [3], [1, 2, 4]], [[4], [5], [7], [8], [1, 2], [3], [6], [2, 9], [1, 2, 9]]]]
INFO:root:Doing checkSmall1
INFO:root:Getting tiny MUSes, distance 1, for 1 puzlits, 1 repeats
INFO:root:Chunked 1 in [1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
INFO:root:Doing checkSmall2
INFO:root:Getting tiny MUSes, distance 2, for 1 puzlits, 1 repeats
INFO:root:Chunked 1 in [1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
INFO:root:Considering 100 * 1 jobs for minsize=3
INFO:root:Chunked 100 in [9, 9, 9, 9, 8, 8, 8, 8, 8, 8, 8, 8]
INFO:root:Considering 100 * 1 jobs for minsize=4
INFO:root:Chunked 100 in [9, 9, 9, 9, 8, 8, 8, 8, 8, 8, 8, 8]
INFO:root:XX found first (2, 7) is not 8 5
INFO:root:XX add new best (2, 7) is not 8 5 5
INFO:root:XX add new best (2, 7) is not 8 5 5
INFO:root:XX add new best (2, 7) is not 8 5 5
INFO:root:XX add new best (2, 7) is not 8 5 5
INFO:root:XX add new best (2, 7) is not 8 5 5
INFO:root:XX add new best (2, 7) is not 8 5 5
INFO:root:XX add new best (2, 7) is not 8 5 5
INFO:root:XX add new best (2, 7) is not 8 5 5
INFO:root:XX add new best (2, 7) is not 8 5 5
INFO:root:XX add new best (2, 7) is not 8 5 5
INFO:root:XX add new best (2, 7) is not 8 5 5
INFO:root:XX add new best (2, 7) is not 8 5 5
INFO:root:XX add new best (2, 7) is not 8 5 5
INFO:root:XX add new best (2, 7) is not 8 5 5
INFO:root:XX add new best (2, 7) is not 8 5 5
INFO:root:XX add new best (2, 7) is not 8 5 5
INFO:root:XX add new best (2, 7) is not 8 5 5
INFO:root:XX add new best (2, 7) is not 8 5 5
INFO:root:Considering 100 * 1 jobs for minsize=5
INFO:root:Chunked 100 in [9, 9, 9, 9, 8, 8, 8, 8, 8, 8, 8, 8]
INFO:root:XX add new best (2, 7) is not 8 5 5
INFO:root:XX add new best (2, 7) is not 8 5 5
INFO:root:XX add new best (2, 7) is not 8 5 5
INFO:root:XX add new best (2, 7) is not 8 5 5
INFO:root:XX add new best (2, 7) is not 8 5 5
INFO:root:XX add new best (2, 7) is not 8 5 5
INFO:root:XX add new best (2, 7) is not 8 5 5
INFO:root:XX add new best (2, 7) is not 8 5 5
INFO:root:XX add new best (2, 7) is not 8 5 5
INFO:root:XX add new best (2, 7) is not 8 5 5
INFO:root:XX add new best (2, 7) is not 8 5 5
INFO:root:Trace: [(5, [(2, 7) is not 8])]
INFO:root:Trace Quality: [(5, 1)]
INFO:root:Trace Sorted: [(5, 1)]
INFO:root:Finished
INFO:root:Full Trace [(5, [(2, 7) is not 8])]
INFO:root:Trying {'gallopingMUSes': True}
INFO:root:Starting Step 1
INFO:root:Current state [[[[1, 5], [7], [6], [2], [3, 5], [8, 9], [4], [5, 8, 9], [1, 3, 8, 9]], [[5, 8], [9], [4], [1], [3, 5], [7], [2, 3, 8], [6], [2, 3, 8]], [[2], [1, 3], [3, 5, 8], [4], [6], [8, 9], [1, 8, 9], [5, 8, 9], [7]], [[5, 8, 9], [6], [2, 5, 8], [3], [7], [1], [2, 5, 8, 9], [2, 4, 8, 9], [2, 4, 8, 9]], [[7], [4], [3, 8], [5], [9], [2], [3, 8], [1], [6]], [[1, 5, 9], [1, 2, 3], [1, 2, 3, 5], [6], [8], [4], [2, 3, 5, 9], [7], [2, 3, 9]], [[3], [1, 2], [9], [7], [1, 2, 4], [6], [1, 2, 8], [2, 4, 8], [5]], [[6], [8], [1, 2], [9], [1, 2, 4], [5], [7], [3], [1, 2, 4]], [[4], [5], [7], [8], [1, 2], [3], [6], [2, 9], [1, 2, 9]]]]
INFO:root:Doing checkSmall1
INFO:root:Getting tiny MUSes, distance 1, for 1 puzlits, 1 repeats
INFO:root:Chunked 1 in [1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
INFO:root:Doing checkSmall2
INFO:root:Getting tiny MUSes, distance 2, for 1 puzlits, 1 repeats
INFO:root:Chunked 1 in [1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
INFO:root:Considering 100 * 1 jobs for minsize=3
INFO:root:Chunked 100 in [9, 9, 9, 9, 8, 8, 8, 8, 8, 8, 8, 8]
INFO:root:Considering 100 * 1 jobs for minsize=4
INFO:root:Chunked 100 in [9, 9, 9, 9, 8, 8, 8, 8, 8, 8, 8, 8]
INFO:root:XX found first (2, 7) is not 8 5
INFO:root:XX add new best (2, 7) is not 8 5 5
INFO:root:XX add new best (2, 7) is not 8 5 5
INFO:root:XX add new best (2, 7) is not 8 5 5
INFO:root:XX add new best (2, 7) is not 8 5 5
INFO:root:XX add new best (2, 7) is not 8 5 5
INFO:root:XX add new best (2, 7) is not 8 5 5
INFO:root:XX add new best (2, 7) is not 8 5 5
INFO:root:XX add new best (2, 7) is not 8 5 5
INFO:root:XX add new best (2, 7) is not 8 5 5
INFO:root:XX add new best (2, 7) is not 8 5 5
INFO:root:XX add new best (2, 7) is not 8 5 5
INFO:root:XX add new best (2, 7) is not 8 5 5
INFO:root:XX add new best (2, 7) is not 8 5 5
INFO:root:XX add new best (2, 7) is not 8 5 5
INFO:root:XX add new best (2, 7) is not 8 5 5
INFO:root:XX add new best (2, 7) is not 8 5 5
INFO:root:Considering 100 * 1 jobs for minsize=5
INFO:root:Chunked 100 in [9, 9, 9, 9, 8, 8, 8, 8, 8, 8, 8, 8]
INFO:root:XX add new best (2, 7) is not 8 5 5
INFO:root:XX add new best (2, 7) is not 8 5 5
INFO:root:XX add new best (2, 7) is not 8 5 5
INFO:root:XX add new best (2, 7) is not 8 5 5
INFO:root:XX add new best (2, 7) is not 8 5 5
INFO:root:XX add new best (2, 7) is not 8 5 5
INFO:root:XX add new best (2, 7) is not 8 5 5
INFO:root:XX add new best (2, 7) is not 8 5 5
INFO:root:Trace: [(5, [(2, 7) is not 8])]
INFO:root:Trace Quality: [(5, 1)]
INFO:root:Trace Sorted: [(5, 1)]
INFO:root:Finished
INFO:root:Full Trace [(5, [(2, 7) is not 8])]
INFO:root:Trying {'minPrecheckStepsMUS': True}
INFO:root:Starting Step 1
INFO:root:Current state [[[[1, 5], [7], [6], [2], [3, 5], [8, 9], [4], [5, 8, 9], [1, 3, 8, 9]], [[5, 8], [9], [4], [1], [3, 5], [7], [2, 3, 8], [6], [2, 3, 8]], [[2], [1, 3], [3, 5, 8], [4], [6], [8, 9], [1, 8, 9], [5, 8, 9], [7]], [[5, 8, 9], [6], [2, 5, 8], [3], [7], [1], [2, 5, 8, 9], [2, 4, 8, 9], [2, 4, 8, 9]], [[7], [4], [3, 8], [5], [9], [2], [3, 8], [1], [6]], [[1, 5, 9], [1, 2, 3], [1, 2, 3, 5], [6], [8], [4], [2, 3, 5, 9], [7], [2, 3, 9]], [[3], [1, 2], [9], [7], [1, 2, 4], [6], [1, 2, 8], [2, 4, 8], [5]], [[6], [8], [1, 2], [9], [1, 2, 4], [5], [7], [3], [1, 2, 4]], [[4], [5], [7], [8], [1, 2], [3], [6], [2, 9], [1, 2, 9]]]]
INFO:root:Doing checkSmall1
INFO:root:Getting tiny MUSes, distance 1, for 1 puzlits, 1 repeats
INFO:root:Chunked 1 in [1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
INFO:root:Doing checkSmall2
INFO:root:Getting tiny MUSes, distance 2, for 1 puzlits, 1 repeats
INFO:root:Chunked 1 in [1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
INFO:root:Considering 100 * 1 jobs for minsize=3
INFO:root:Chunked 100 in [9, 9, 9, 9, 8, 8, 8, 8, 8, 8, 8, 8]
INFO:root:Considering 100 * 1 jobs for minsize=4
INFO:root:Chunked 100 in [9, 9, 9, 9, 8, 8, 8, 8, 8, 8, 8, 8]
INFO:root:XX found first (2, 7) is not 8 5
INFO:root:XX add new best (2, 7) is not 8 5 5
INFO:root:XX add new best (2, 7) is not 8 5 5
INFO:root:XX add new best (2, 7) is not 8 5 5
INFO:root:XX add new best (2, 7) is not 8 5 5
INFO:root:XX add new best (2, 7) is not 8 5 5
INFO:root:XX add new best (2, 7) is not 8 5 5
INFO:root:XX add new best (2, 7) is not 8 5 5
INFO:root:XX add new best (2, 7) is not 8 5 5
INFO:root:XX add new best (2, 7) is not 8 5 5
INFO:root:XX add new best (2, 7) is not 8 5 5
INFO:root:XX add new best (2, 7) is not 8 5 5
INFO:root:XX add new best (2, 7) is not 8 5 5
INFO:root:XX add new best (2, 7) is not 8 5 5
INFO:root:XX add new best (2, 7) is not 8 5 5
INFO:root:XX add new best (2, 7) is not 8 5 5
INFO:root:XX add new best (2, 7) is not 8 5 5
INFO:root:XX add new best (2, 7) is not 8 5 5
INFO:root:XX add new best (2, 7) is not 8 5 5
INFO:root:Considering 100 * 1 jobs for minsize=5
INFO:root:Chunked 100 in [9, 9, 9, 9, 8, 8, 8, 8, 8, 8, 8, 8]
INFO:root:XX add new best (2, 7) is not 8 5 5
INFO:root:XX add new best (2, 7) is not 8 5 5
INFO:root:XX add new best (2, 7) is not 8 5 5
INFO:root:XX add new best (2, 7) is not 8 5 5
INFO:root:XX add new best (2, 7) is not 8 5 5
INFO:root:XX add new best (2, 7) is not 8 5 5
INFO:root:XX add new best (2, 7) is not 8 5 5
INFO:root:XX add new best (2, 7) is not 8 5 5
INFO:root:XX add new best (2, 7) is not 8 5 5
INFO:root:XX add new best (2, 7) is not 8 5 5
INFO:root:XX add new best (2, 7) is not 8 5 5
INFO:root:Trace: [(5, [(2, 7) is not 8])]
INFO:root:Trace Quality: [(5, 1)]
INFO:root:Trace Sorted: [(5, 1)]
INFO:root:Finished
INFO:root:Full Trace [(5, [(2, 7) is not 8])]
INFO:root:Trying {'gallopingMUSes': True, 'minPrecheckMUS': True}
INFO:root:Starting Step 1
INFO:root:Current state [[[[1, 5], [7], [6], [2], [3, 5], [8, 9], [4], [5, 8, 9], [1, 3, 8, 9]], [[5, 8], [9], [4], [1], [3, 5], [7], [2, 3, 8], [6], [2, 3, 8]], [[2], [1, 3], [3, 5, 8], [4], [6], [8, 9], [1, 8, 9], [5, 8, 9], [7]], [[5, 8, 9], [6], [2, 5, 8], [3], [7], [1], [2, 5, 8, 9], [2, 4, 8, 9], [2, 4, 8, 9]], [[7], [4], [3, 8], [5], [9], [2], [3, 8], [1], [6]], [[1, 5, 9], [1, 2, 3], [1, 2, 3, 5], [6], [8], [4], [2, 3, 5, 9], [7], [2, 3, 9]], [[3], [1, 2], [9], [7], [1, 2, 4], [6], [1, 2, 8], [2, 4, 8], [5]], [[6], [8], [1, 2], [9], [1, 2, 4], [5], [7], [3], [1, 2, 4]], [[4], [5], [7], [8], [1, 2], [3], [6], [2, 9], [1, 2, 9]]]]
INFO:root:Doing checkSmall1
INFO:root:Getting tiny MUSes, distance 1, for 1 puzlits, 1 repeats
INFO:root:Chunked 1 in [1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
INFO:root:Doing checkSmall2
INFO:root:Getting tiny MUSes, distance 2, for 1 puzlits, 1 repeats
INFO:root:Chunked 1 in [1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
INFO:root:Considering 100 * 1 jobs for minsize=3
INFO:root:Chunked 100 in [9, 9, 9, 9, 8, 8, 8, 8, 8, 8, 8, 8]
INFO:root:Considering 100 * 1 jobs for minsize=4
INFO:root:Chunked 100 in [9, 9, 9, 9, 8, 8, 8, 8, 8, 8, 8, 8]
INFO:root:XX found first (2, 7) is not 8 5
INFO:root:XX add new best (2, 7) is not 8 5 5
INFO:root:XX add new best (2, 7) is not 8 5 5
INFO:root:XX add new best (2, 7) is not 8 5 5
INFO:root:XX add new best (2, 7) is not 8 5 5
INFO:root:XX add new best (2, 7) is not 8 5 5
INFO:root:XX add new best (2, 7) is not 8 5 5
INFO:root:XX add new best (2, 7) is not 8 5 5
INFO:root:XX add new best (2, 7) is not 8 5 5
INFO:root:XX add new best (2, 7) is not 8 5 5
INFO:root:XX add new best (2, 7) is not 8 5 5
INFO:root:XX add new best (2, 7) is not 8 5 5
INFO:root:XX add new best (2, 7) is not 8 5 5
INFO:root:XX add new best (2, 7) is not 8 5 5
INFO:root:XX add new best (2, 7) is not 8 5 5
INFO:root:XX add new best (2, 7) is not 8 5 5
INFO:root:XX add new best (2, 7) is not 8 5 5
INFO:root:XX add new best (2, 7) is not 8 5 5
INFO:root:XX add new best (2, 7) is not 8 5 5
INFO:root:Considering 100 * 1 jobs for minsize=5
INFO:root:Chunked 100 in [9, 9, 9, 9, 8, 8, 8, 8, 8, 8, 8, 8]
INFO:root:XX add new best (2, 7) is not 8 5 5
INFO:root:XX add new best (2, 7) is not 8 5 5
INFO:root:XX add new best (2, 7) is not 8 5 5
INFO:root:XX add new best (2, 7) is not 8 5 5
INFO:root:XX add new best (2, 7) is not 8 5 5
INFO:root:XX add new best (2, 7) is not 8 5 5
INFO:root:XX add new best (2, 7) is not 8 5 5
INFO:root:XX add new best (2, 7) is not 8 5 5
INFO:root:XX add new best (2, 7) is not 8 5 5
INFO:root:XX add new best (2, 7) is not 8 5 5
INFO:root:XX add new best (2, 7) is not 8 5 5
INFO:root:Trace: [(5, [(2, 7) is not 8])]
INFO:root:Trace Quality: [(5, 1)]
INFO:root:Trace Sorted: [(5, 1)]
INFO:root:Finished
INFO:root:Full Trace [(5, [(2, 7) is not 8])]
INFO:root:Trying {}
INFO:root:Starting Step 1
INFO:root:Current state [[[[2, 6], [8], [2, 4, 5], [1], [2, 9], [3], [5, 9], [7], [4, 5, 6]], [[3, 7], [9], [2, 4], [5], [2, 7], [6], [1, 8], [1, 4], [3, 4, 8]], [[3, 7], [5, 6], [1], [4], [7, 9], [8], [3, 5, 9], [2], [3, 5, 6]], [[5], [7], [8], [2], [4], [1], [6], [3], [9]], [[1], [4], [3], [6], [5], [9], [7], [8], [2]], [[9], [2], [6], [8], [3], [7], [4], [5], [1]], [[6, 8], [3], [7], [9], [1, 6], [5], [2], [1, 4], [4, 8]], [[2, 6, 8], [5, 6], [2, 5], [3], [1, 6], [4], [1, 8], [9], [7]], [[4], [1], [9], [7], [8], [2], [3, 5], [6], [3, 5]]]]
INFO:root:Doing checkSmall1
INFO:root:Getting tiny MUSes, distance 1, for 1 puzlits, 1 repeats
INFO:root:Chunked 1 in [1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
INFO:root:Doing checkSmall2
INFO:root:Getting tiny MUSes, distance 2, for 1 puzlits, 1 repeats
INFO:root:Chunked 1 in [1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
INFO:root:Considering 100 * 1 jobs for minsize=3
INFO:root:Chunked 100 in [9, 9, 9, 9, 8, 8, 8, 8, 8, 8, 8, 8]
INFO:root:Considering 100 * 1 jobs for minsize=4
INFO:root:Chunked 100 in [9, 9, 9, 9, 8, 8, 8, 8, 8, 8, 8, 8]
INFO:root:Considering 100 * 1 jobs for minsize=5
INFO:root:Chunked 100 in [9, 9, 9, 9, 8, 8, 8, 8, 8, 8, 8, 8]
INFO:root:Considering 100 * 1 jobs for minsize=6
INFO:root:Chunked 100 in [9, 9, 9, 9, 8, 8, 8, 8, 8, 8, 8, 8]
INFO:root:Considering 100 * 1 jobs for minsize=7
INFO:root:Chunked 100 in [9, 9, 9, 9, 8, 8, 8, 8, 8, 8, 8, 8]
INFO:root:Considering 100 * 1 jobs for minsize=8
INFO:root:Chunked 100 in [9, 9, 9, 9, 8, 8, 8, 8, 8, 8, 8, 8]
INFO:root:XX found first (1, 3) is not 5 9
INFO:root:XX add new best (1, 3) is not 5 9 9
INFO:root:XX add new best (1, 3) is not 5 9 9
INFO:root:XX add new best (1, 3) is not 5 9 9
INFO:root:XX add new best (1, 3) is not 5 9 9
INFO:root:XX add new best (1, 3) is not 5 9 9
INFO:root:XX add new best (1, 3) is not 5 9 9
INFO:root:XX add new best (1, 3) is not 5 9 9
INFO:root:XX add new best (1, 3) is not 5 9 9
INFO:root:XX add new best (1, 3) is not 5 9 9
INFO:root:XX add new best (1, 3) is not 5 9 9
INFO:root:XX add new best (1, 3) is not 5 9 9
INFO:root:XX add new best (1, 3) is not 5 9 9
INFO:root:XX add new best (1, 3) is not 5 9 9
INFO:root:XX add new best (1, 3) is not 5 9 9
INFO:root:XX add new best (1, 3) is not 5 9 9
INFO:root:XX add new best (1, 3) is not 5 9 9
INFO:root:XX add new best (1, 3) is not 5 9 9
INFO:root:XX add new best (1, 3) is not 5 9 9
INFO:root:XX add new best (1, 3) is not 5 9 9
INFO:root:XX add new best (1, 3) is not 5 9 9
INFO:root:XX add new best (1, 3) is not 5 9 9
INFO:root:XX add new best (1, 3) is not 5 9 9
INFO:root:XX add new best (1, 3) is not 5 9 9
INFO:root:XX add new best (1, 3) is not 5 9 9
INFO:root:XX add new best (1, 3) is not 5 9 9
INFO:root:XX add new best (1, 3) is not 5 9 9
INFO:root:XX add new best (1, 3) is not 5 9 9
INFO:root:XX add new best (1, 3) is not 5 9 9
INFO:root:XX add new best (1, 3) is not 5 9 9
INFO:root:XX add new best (1, 3) is not 5 9 9
INFO:root:XX add new best (1, 3) is not 5 9 9
INFO:root:XX add new best (1, 3) is not 5 9 9
INFO:root:XX add new best (1, 3) is not 5 9 9
INFO:root:XX add new best (1, 3) is not 5 9 9
INFO:root:XX add new best (1, 3) is not 5 9 9
INFO:root:XX add new best (1, 3) is not 5 9 9
INFO:root:XX add new best (1, 3) is not 5 9 9
INFO:root:XX add new best (1, 3) is not 5 9 9
INFO:root:XX add new best (1, 3) is not 5 9 9
INFO:root:XX add new best (1, 3) is not 5 9 9
INFO:root:XX add new best (1, 3) is not 5 9 9
INFO:root:XX add new best (1, 3) is not 5 9 9
INFO:root:XX add new best (1, 3) is not 5 9 9
INFO:root:XX add new best (1, 3) is not 5 9 9
INFO:root:XX add new best (1, 3) is not 5 9 9
INFO:root:XX add new best (1, 3) is not 5 9 9
INFO:root:XX add new best (1, 3) is not 5 9 9
INFO:root:XX add new best (1, 3) is not 5 9 9
INFO:root:XX add new best (1, 3) is not 5 9 9
INFO:root:XX add new best (1, 3) is not 5 9 9
INFO:root:XX add new best (1, 3) is not 5 9 9
INFO:root:XX add new best (1, 3) is not 5 9 9
INFO:root:XX add new best (1, 3) is not 5 9 9
INFO:root:XX add new best (1, 3) is not 5 9 9
INFO:root:XX add new best (1, 3) is not 5 9 9
INFO:root:XX add new best (1, 3) is not 5 9 9
INFO:root:XX add new best (1, 3) is not 5 9 9
INFO:root:XX add new best (1, 3) is not 5 9 9
INFO:root:XX add new best (1, 3) is not 5 9 9
INFO:root:XX add new best (1, 3) is not 5 9 9
INFO:root:XX add new best (1, 3) is not 5 9 9
INFO:root:XX add new best (1, 3) is not 5 9 9
INFO:root:XX add new best (1, 3) is not 5 9 9
INFO:root:XX add new best (1, 3) is not 5 9 9
INFO:root:XX add new best (1, 3) is not 5 9 9
INFO:root:XX add new best (1, 3) is not 5 9 9
INFO:root:XX add new best (1, 3) is not 5 9 9
INFO:root:XX add new best (1, 3) is not 5 9 9
INFO:root:XX add new best (1, 3) is not 5 9 9
INFO:root:XX add new best (1, 3) is not 5 9 9
INFO:root:XX add new best (1, 3) is not 5 9 9
INFO:root:XX add new best (1, 3) is not 5 9 9
INFO:root:XX add new best (1, 3) is not 5 9 9
INFO:root:XX add new best (1, 3) is not 5 9 9
INFO:root:XX add new best (1, 3) is not 5 9 9
INFO:root:XX add new best (1, 3) is not 5 9 9
INFO:root:XX add new best (1, 3) is not 5 9 9
INFO:root:XX add new best (1, 3) is not 5 9 9
INFO:root:XX add new best (1, 3) is not 5 9 9
INFO:root:XX add new best (1, 3) is not 5 9 9
INFO:root:XX add new best (1, 3) is not 5 9 9
INFO:root:XX add new best (1, 3) is not 5 9 9
INFO:root:XX add new best (1, 3) is not 5 9 9
INFO:root:XX add new best (1, 3) is not 5 9 9
INFO:root:XX add new best (1, 3) is not 5 9 9
INFO:root:XX add new best (1, 3) is not 5 9 9
INFO:root:XX add new best (1, 3) is not 5 9 9
INFO:root:XX add new best (1, 3) is not 5 9 9
INFO:root:XX add new best (1, 3) is not 5 9 9
INFO:root:XX add new best (1, 3) is not 5 9 9
INFO:root:XX add new best (1, 3) is not 5 9 9
INFO:root:XX add new best (1, 3) is not 5 9 9
INFO:root:XX add new best (1, 3) is not 5 9 9
INFO:root:XX add new best (1, 3) is not 5 9 9
INFO:root:XX add new best (1, 3) is not 5 9 9
INFO:root:XX add new best (1, 3) is not 5 9 9
INFO:root:XX add new best (1, 3) is not 5 9 9
INFO:root:XX add new best (1, 3) is not 5 9 9
INFO:root:Considering 100 * 1 jobs for minsize=9
INFO:root:Chunked 100 in [9, 9, 9, 9, 8, 8, 8, 8, 8, 8, 8, 8]
INFO:root:XX add new best (1, 3) is not 5 9 9
INFO:root:XX add new best (1, 3) is not 5 9 9
INFO:root:XX add new best (1, 3) is not 5 9 9
INFO:root:XX add new best (1, 3) is not 5 9 9
INFO:root:XX add new best (1, 3) is not 5 9 9
INFO:root:XX add new best (1, 3) is not 5 9 9
INFO:root:XX add new best (1, 3) is not 5 9 9
INFO:root:XX add new best (1, 3) is not 5 9 9
INFO:root:XX add new best (1, 3) is not 5 9 9
INFO:root:XX add new best (1, 3) is not 5 9 9
INFO:root:XX add new best (1, 3) is not 5 9 9
INFO:root:XX add new best (1, 3) is not 5 9 9
INFO:root:XX add new best (1, 3) is not 5 9 9
INFO:root:XX add new best (1, 3) is not 5 9 9
INFO:root:XX add new best (1, 3) is not 5 9 9
INFO:root:XX add new best (1, 3) is not 5 9 9
INFO:root:XX add new best (1, 3) is not 5 9 9
INFO:root:XX add new best (1, 3) is not 5 9 9
INFO:root:XX add new best (1, 3) is not 5 9 9
INFO:root:XX add new best (1, 3) is not 5 9 9
INFO:root:XX add new best (1, 3) is not 5 9 9
INFO:root:XX add new best (1, 3) is not 5 9 9
INFO:root:XX add new best (1, 3) is not 5 9 9
INFO:root:XX add new best (1, 3) is not 5 9 9
INFO:root:XX add new best (1, 3) is not 5 9 9
INFO:root:XX add new best (1, 3) is not 5 9 9
INFO:root:XX add new best (1, 3) is not 5 9 9
INFO:root:XX add new best (1, 3) is not 5 9 9
INFO:root:XX add new best (1, 3) is not 5 9 9
INFO:root:XX add new best (1, 3) is not 5 9 9
INFO:root:XX add new best (1, 3) is not 5 9 9
INFO:root:XX add new best (1, 3) is not 5 9 9
INFO:root:XX add new best (1, 3) is not 5 9 9
INFO:root:XX add new best (1, 3) is not 5 9 9
INFO:root:XX add new best (1, 3) is not 5 9 9
INFO:root:XX add new best (1, 3) is not 5 9 9
INFO:root:XX add new best (1, 3) is not 5 9 9
INFO:root:XX add new best (1, 3) is not 5 9 9
INFO:root:XX add new best (1, 3) is not 5 9 9
INFO:root:XX add new best (1, 3) is not 5 9 9
INFO:root:XX add new best (1, 3) is not 5 9 9
INFO:root:XX add new best (1, 3) is not 5 9 9
INFO:root:XX add new best (1, 3) is not 5 9 9
INFO:root:XX add new best (1, 3) is not 5 9 9
INFO:root:XX add new best (1, 3) is not 5 9 9
INFO:root:XX add new best (1, 3) is not 5 9 9
INFO:root:XX add new best (1, 3) is not 5 9 9
INFO:root:XX add new best (1, 3) is not 5 9 9
INFO:root:XX add new best (1, 3) is not 5 9 9
INFO:root:XX add new best (1, 3) is not 5 9 9
INFO:root:XX add new best (1, 3) is not 5 9 9
INFO:root:XX add new best (1, 3) is not 5 9 9
INFO:root:XX add new best (1, 3) is not 5 9 9
INFO:root:XX add new best (1, 3) is not 5 9 9
INFO:root:XX add new best (1, 3) is not 5 9 9
INFO:root:XX add new best (1, 3) is not 5 9 9
INFO:root:XX add new best (1, 3) is not 5 9 9
INFO:root:XX add new best (1, 3) is not 5 9 9
INFO:root:XX add new best (1, 3) is not 5 9 9
INFO:root:XX add new best (1, 3) is not 5 9 9
INFO:root:XX add new best (1, 3) is not 5 9 9
INFO:root:XX add new best (1, 3) is not 5 9 9
INFO:root:XX add new best (1, 3) is not 5 9 9
INFO:root:XX add new best (1, 3) is not 5 9 9
INFO:root:XX add new best (1, 3) is not 5 9 9
INFO:root:XX add new best (1, 3) is not 5 9 9
INFO:root:XX add new best (1, 3) is not 5 9 9
INFO:root:XX add new best (1, 3) is not 5 9 9
INFO:root:XX add new best (1, 3) is not 5 9 9
INFO:root:XX add new best (1, 3) is not 5 9 9
INFO:root:XX add new best (1, 3) is not 5 9 9
INFO:root:XX add new best (1, 3) is not 5 9 9
INFO:root:XX add new best (1, 3) is not 5 9 9
INFO:root:XX add new best (1, 3) is not 5 9 9
INFO:root:XX add new best (1, 3) is not 5 9 9
INFO:root:XX add new best (1, 3) is not 5 9 9
INFO:root:XX add new best (1, 3) is not 5 9 9
INFO:root:XX add new best (1, 3) is not 5 9 9
INFO:root:XX add new best (1, 3) is not 5 9 9
INFO:root:XX add new best (1, 3) is not 5 9 9
INFO:root:XX add new best (1, 3) is not 5 9 9
INFO:root:XX add new best (1, 3) is not 5 9 9
INFO:root:XX add new best (1, 3) is not 5 9 9
INFO:root:XX add new best (1, 3) is not 5 9 9
INFO:root:XX add new best (1, 3) is not 5 9 9
INFO:root:XX add new best (1, 3) is not 5 9 9
INFO:root:XX add new best (1, 3) is not 5 9 9
INFO:root:XX add new best (1, 3) is not 5 9 9
INFO:root:XX add new best (1, 3) is not 5 9 9
INFO:root:XX add new best (1, 3) is not 5 9 9
INFO:root:XX add new best (1, 3) is not 5 9 9
INFO:root:XX add new best (1, 3) is not 5 9 9
INFO:root:XX add new best (1, 3) is not 5 9 9
INFO:root:XX add new best (1, 3) is not 5 9 9
INFO:root:XX add new best (1, 3) is not 5 9 9
INFO:root:XX add new best (1, 3) is not 5 9 9
INFO:root:XX add new best (1, 3) is not 5 9 9
INFO:root:XX add new best (1, 3) is not 5 9 9
INFO:root:XX add new best (1, 3) is not 5 9 9
INFO:root:XX add new best (1, 3) is not 5 9 9
INFO:root:Trace: [(9, [(1, 3) is not 5])]
INFO:root:Trace Quality: [(9, 1)]
INFO:root:Trace Sorted: [(9, 1)]
INFO:root:Finished
INFO:root:Full Trace [(9, [(1, 3) is not 5])]
INFO:root:Trying {'prechopMUSes': True}
INFO:root:Starting Step 1
INFO:root:Current state [[[[2, 6], [8], [2, 4, 5], [1], [2, 9], [3], [5, 9], [7], [4, 5, 6]], [[3, 7], [9], [2, 4], [5], [2, 7], [6], [1, 8], [1, 4], [3, 4, 8]], [[3, 7], [5, 6], [1], [4], [7, 9], [8], [3, 5, 9], [2], [3, 5, 6]], [[5], [7], [8], [2], [4], [1], [6], [3], [9]], [[1], [4], [3], [6], [5], [9], [7], [8], [2]], [[9], [2], [6], [8], [3], [7], [4], [5], [1]], [[6, 8], [3], [7], [9], [1, 6], [5], [2], [1, 4], [4, 8]], [[2, 6, 8], [5, 6], [2, 5], [3], [1, 6], [4], [1, 8], [9], [7]], [[4], [1], [9], [7], [8], [2], [3, 5], [6], [3, 5]]]]
INFO:root:Doing checkSmall1
INFO:root:Getting tiny MUSes, distance 1, for 1 puzlits, 1 repeats
INFO:root:Chunked 1 in [1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
INFO:root:Doing checkSmall2
INFO:root:Getting tiny MUSes, distance 2, for 1 puzlits, 1 repeats
INFO:root:Chunked 1 in [1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
INFO:root:Considering 100 * 1 jobs for minsize=3
INFO:root:Chunked 100 in [9, 9, 9, 9, 8, 8, 8, 8, 8, 8, 8, 8]
INFO:root:Considering 100 * 1 jobs for minsize=4
INFO:root:Chunked 100 in [9, 9, 9, 9, 8, 8, 8, 8, 8, 8, 8, 8]
INFO:root:Considering 100 * 1 jobs for minsize=5
INFO:root:Chunked 100 in [9, 9, 9, 9, 8, 8, 8, 8, 8, 8, 8, 8]
INFO:root:Considering 100 * 1 jobs for minsize=6
INFO:root:Chunked 100 in [9, 9, 9, 9, 8, 8, 8, 8, 8, 8, 8, 8]
INFO:root:XX found first (1, 3) is not 5 7
INFO:root:XX add new best (1, 3) is not 5 7 7
INFO:root:XX add new best (1, 3) is not 5 7 7
INFO:root:Considering 100 * 1 jobs for minsize=7
INFO:root:Chunked 100 in [9, 9, 9, 9, 8, 8, 8, 8, 8, 8, 8, 8]
INFO:root:XX add new best (1, 3) is not 5 7 7
INFO:root:XX add new best (1, 3) is not 5 7 7
INFO:root:XX add new best (1, 3) is not 5 7 7
INFO:root:XX add new best (1, 3) is not 5 7 7
INFO:root:XX add new best (1, 3) is not 5 7 7
INFO:root:XX add new best (1, 3) is not 5 7 7
INFO:root:XX add new best (1, 3) is not 5 7 7
INFO:root:Trace: [(7, [(1, 3) is not 5])]
INFO:root:Trace Quality: [(7, 1)]
INFO:root:Trace Sorted: [(7, 1)]
INFO:root:Finished
INFO:root:Full Trace [(7, [(1, 3) is not 5])]
INFO:root:Trying {'quarterChopMUS': True}
INFO:root:Starting Step 1
INFO:root:Current state [[[[2, 6], [8], [2, 4, 5], [1], [2, 9], [3], [5, 9], [7], [4, 5, 6]], [[3, 7], [9], [2, 4], [5], [2, 7], [6], [1, 8], [1, 4], [3, 4, 8]], [[3, 7], [5, 6], [1], [4], [7, 9], [8], [3, 5, 9], [2], [3, 5, 6]], [[5], [7], [8], [2], [4], [1], [6], [3], [9]], [[1], [4], [3], [6], [5], [9], [7], [8], [2]], [[9], [2], [6], [8], [3], [7], [4], [5], [1]], [[6, 8], [3], [7], [9], [1, 6], [5], [2], [1, 4], [4, 8]], [[2, 6, 8], [5, 6], [2, 5], [3], [1, 6], [4], [1, 8], [9], [7]], [[4], [1], [9], [7], [8], [2], [3, 5], [6], [3, 5]]]]
INFO:root:Doing checkSmall1
INFO:root:Getting tiny MUSes, distance 1, for 1 puzlits, 1 repeats
INFO:root:Chunked 1 in [1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
INFO:root:Doing checkSmall2
INFO:root:Getting tiny MUSes, distance 2, for 1 puzlits, 1 repeats
INFO:root:Chunked 1 in [1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
INFO:root:Considering 100 * 1 jobs for minsize=3
INFO:root:Chunked 100 in [9, 9, 9, 9, 8, 8, 8, 8, 8, 8, 8, 8]
INFO:root:Considering 100 * 1 jobs for minsize=4
INFO:root:Chunked 100 in [9, 9, 9, 9, 8, 8, 8, 8, 8, 8, 8, 8]
INFO:root:Considering 100 * 1 jobs for minsize=5
INFO:root:Chunked 100 in [9, 9, 9, 9, 8, 8, 8, 8, 8, 8, 8, 8]
INFO:root:Considering 100 * 1 jobs for minsize=6
INFO:root:Chunked 100 in [9, 9, 9, 9, 8, 8, 8, 8, 8, 8, 8, 8]
INFO:root:XX found first (1, 3) is not 5 7
INFO:root:XX add new best (1, 3) is not 5 7 7
INFO:root:XX add new best (1, 3) is not 5 7 7
INFO:root:XX add new best (1, 3) is not 5 7 7
INFO:root:XX add new best (1, 3) is not 5 7 7
INFO:root:XX add new best (1, 3) is not 5 7 7
INFO:root:XX add new best (1, 3) is not 5 7 7
INFO:root:Considering 100 * 1 jobs for minsize=7
INFO:root:Chunked 100 in [9, 9, 9, 9, 8, 8, 8, 8, 8, 8, 8, 8]
INFO:root:XX add new best (1, 3) is not 5 7 7
INFO:root:XX add new best (1, 3) is not 5 7 7
INFO:root:XX add new best (1, 3) is not 5 7 7
INFO:root:XX add new best (1, 3) is not 5 7 7
INFO:root:XX add new best (1, 3) is not 5 7 7
INFO:root:Trace: [(7, [(1, 3) is not 5])]
INFO:root:Trace Quality: [(7, 1)]
INFO:root:Trace Sorted: [(7, 1)]
INFO:root:Finished
INFO:root:Full Trace [(7, [(1, 3) is not 5])]
INFO:root:Trying {'minPrecheckMUS': True}
INFO:root:Starting Step 1
INFO:root:Current state [[[[2, 6], [8], [2, 4, 5], [1], [2, 9], [3], [5, 9], [7], [4, 5, 6]], [[3, 7], [9], [2, 4], [5], [2, 7], [6], [1, 8], [1, 4], [3, 4, 8]], [[3, 7], [5, 6], [1], [4], [7, 9], [8], [3, 5, 9], [2], [3, 5, 6]], [[5], [7], [8], [2], [4], [1], [6], [3], [9]], [[1], [4], [3], [6], [5], [9], [7], [8], [2]], [[9], [2], [6], [8], [3], [7], [4], [5], [1]], [[6, 8], [3], [7], [9], [1, 6], [5], [2], [1, 4], [4, 8]], [[2, 6, 8], [5, 6], [2, 5], [3], [1, 6], [4], [1, 8], [9], [7]], [[4], [1], [9], [7], [8], [2], [3, 5], [6], [3, 5]]]]
INFO:root:Doing checkSmall1
INFO:root:Getting tiny MUSes, distance 1, for 1 puzlits, 1 repeats
INFO:root:Chunked 1 in [1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
INFO:root:Doing checkSmall2
INFO:root:Getting tiny MUSes, distance 2, for 1 puzlits, 1 repeats
INFO:root:Chunked 1 in [1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
INFO:root:Considering 100 * 1 jobs for minsize=3
INFO:root:Chunked 100 in [9, 9, 9, 9, 8, 8, 8, 8, 8, 8, 8, 8]
INFO:root:Considering 100 * 1 jobs for minsize=4
INFO:root:Chunked 100 in [9, 9, 9, 9, 8, 8, 8, 8, 8, 8, 8, 8]
INFO:root:Considering 100 * 1 jobs for minsize=5
INFO:root:Chunked 100 in [9, 9, 9, 9, 8, 8, 8, 8, 8, 8, 8, 8]
INFO:root:Considering 100 * 1 jobs for minsize=6
INFO:root:Chunked 100 in [9, 9, 9, 9, 8, 8, 8, 8, 8, 8, 8, 8]
INFO:root:XX found first (1, 3) is not 5 7
INFO:root:XX add new best (1, 3) is not 5 7 7
INFO:root:XX add new best (1, 3) is not 5 7 7
INFO:root:XX add new best (1, 3) is not 5 7 7
INFO:root:XX add new best (1, 3) is not 5 7 7
INFO:root:XX add new best (1, 3) is not 5 7 7
INFO:root:XX add new best (1, 3) is not 5 7 7
INFO:root:XX add new best (1, 3) is not 5 7 7
INFO:root:XX add new best (1, 3) is not 5 7 7
INFO:root:Considering 100 * 1 jobs for minsize=7
INFO:root:Chunked 100 in [9, 9, 9, 9, 8, 8, 8, 8, 8, 8, 8, 8]
INFO:root:XX add new best (1, 3) is not 5 7 7
INFO:root:XX add new best (1, 3) is not 5 7 7
INFO:root:XX add new best (1, 3) is not 5 7 7
INFO:root:XX add new best (1, 3) is not 5 7 7
INFO:root:XX add new best (1, 3) is not 5 7 7
INFO:root:XX add new best (1, 3) is not 5 7 7
INFO:root:XX add new best (1, 3) is not 5 7 7
INFO:root:Trace: [(7, [(1, 3) is not 5])]
INFO:root:Trace Quality: [(7, 1)]
INFO:root:Trace Sorted: [(7, 1)]
INFO:root:Finished
INFO:root:Full Trace [(7, [(1, 3) is not 5])]
INFO:root:Trying {'gallopingMUSes': True}
INFO:root:Starting Step 1
INFO:root:Current state [[[[2, 6], [8], [2, 4, 5], [1], [2, 9], [3], [5, 9], [7], [4, 5, 6]], [[3, 7], [9], [2, 4], [5], [2, 7], [6], [1, 8], [1, 4], [3, 4, 8]], [[3, 7], [5, 6], [1], [4], [7, 9], [8], [3, 5, 9], [2], [3, 5, 6]], [[5], [7], [8], [2], [4], [1], [6], [3], [9]], [[1], [4], [3], [6], [5], [9], [7], [8], [2]], [[9], [2], [6], [8], [3], [7], [4], [5], [1]], [[6, 8], [3], [7], [9], [1, 6], [5], [2], [1, 4], [4, 8]], [[2, 6, 8], [5, 6], [2, 5], [3], [1, 6], [4], [1, 8], [9], [7]], [[4], [1], [9], [7], [8], [2], [3, 5], [6], [3, 5]]]]
INFO:root:Doing checkSmall1
INFO:root:Getting tiny MUSes, distance 1, for 1 puzlits, 1 repeats
INFO:root:Chunked 1 in [1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
INFO:root:Doing checkSmall2
INFO:root:Getting tiny MUSes, distance 2, for 1 puzlits, 1 repeats
INFO:root:Chunked 1 in [1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
INFO:root:Considering 100 * 1 jobs for minsize=3
INFO:root:Chunked 100 in [9, 9, 9, 9, 8, 8, 8, 8, 8, 8, 8, 8]
INFO:root:Considering 100 * 1 jobs for minsize=4
INFO:root:Chunked 100 in [9, 9, 9, 9, 8, 8, 8, 8, 8, 8, 8, 8]
INFO:root:Considering 100 * 1 jobs for minsize=5
INFO:root:Chunked 100 in [9, 9, 9, 9, 8, 8, 8, 8, 8, 8, 8, 8]
INFO:root:Considering 100 * 1 jobs for minsize=6
INFO:root:Chunked 100 in [9, 9, 9, 9, 8, 8, 8, 8, 8, 8, 8, 8]
INFO:root:XX found first (1, 3) is not 5 7
INFO:root:XX add new best (1, 3) is not 5 7 7
INFO:root:XX add new best (1, 3) is not 5 7 7
INFO:root:XX add new best (1, 3) is not 5 7 7
INFO:root:XX add new best (1, 3) is not 5 7 7
INFO:root:XX add new best (1, 3) is not 5 7 7
INFO:root:XX add new best (1, 3) is not 5 7 7
INFO:root:XX add new best (1, 3) is not 5 7 7
INFO:root:XX add new best (1, 3) is not 5 7 7
INFO:root:XX add new best (1, 3) is not 5 7 7
INFO:root:Considering 100 * 1 jobs for minsize=7
INFO:root:Chunked 100 in [9, 9, 9, 9, 8, 8, 8, 8, 8, 8, 8, 8]
INFO:root:XX add new best (1, 3) is not 5 7 7
INFO:root:XX add new best (1, 3) is not 5 7 7
INFO:root:XX add new best (1, 3) is not 5 7 7
INFO:root:XX add new best (1, 3) is not 5 7 7
INFO:root:XX add new best (1, 3) is not 5 7 7
INFO:root:XX add new best (1, 3) is not 5 7 7
INFO:root:XX add new best (1, 3) is not 5 7 7
INFO:root:XX add new best (1, 3) is not 5 7 7
INFO:root:Trace: [(7, [(1, 3) is not 5])]
INFO:root:Trace Quality: [(7, 1)]
INFO:root:Trace Sorted: [(7, 1)]
INFO:root:Finished
INFO:root:Full Trace [(7, [(1, 3) is not 5])]
INFO:root:Trying {'minPrecheckStepsMUS': True}
INFO:root:Starting Step 1
INFO:root:Current state [[[[2, 6], [8], [2, 4, 5], [1], [2, 9], [3], [5, 9], [7], [4, 5, 6]], [[3, 7], [9], [2, 4], [5], [2, 7], [6], [1, 8], [1, 4], [3, 4, 8]], [[3, 7], [5, 6], [1], [4], [7, 9], [8], [3, 5, 9], [2], [3, 5, 6]], [[5], [7], [8], [2], [4], [1], [6], [3], [9]], [[1], [4], [3], [6], [5], [9], [7], [8], [2]], [[9], [2], [6], [8], [3], [7], [4], [5], [1]], [[6, 8], [3], [7], [9], [1, 6], [5], [2], [1, 4], [4, 8]], [[2, 6, 8], [5, 6], [2, 5], [3], [1, 6], [4], [1, 8], [9], [7]], [[4], [1], [9], [7], [8], [2], [3, 5], [6], [3, 5]]]]
INFO:root:Doing checkSmall1
INFO:root:Getting tiny MUSes, distance 1, for 1 puzlits, 1 repeats
INFO:root:Chunked 1 in [1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
INFO:root:Doing checkSmall2
INFO:root:Getting tiny MUSes, distance 2, for 1 puzlits, 1 repeats
INFO:root:Chunked 1 in [1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
INFO:root:Considering 100 * 1 jobs for minsize=3
INFO:root:Chunked 100 in [9, 9, 9, 9, 8, 8, 8, 8, 8, 8, 8, 8]
INFO:root:Considering 100 * 1 jobs for minsize=4
INFO:root:Chunked 100 in [9, 9, 9, 9, 8, 8, 8, 8, 8, 8, 8, 8]
INFO:root:Considering 100 * 1 jobs for minsize=5
INFO:root:Chunked 100 in [9, 9, 9, 9, 8, 8, 8, 8, 8, 8, 8, 8]
INFO:root:Considering 100 * 1 jobs for minsize=6
INFO:root:Chunked 100 in [9, 9, 9, 9, 8, 8, 8, 8, 8, 8, 8, 8]
INFO:root:XX found first (1, 3) is not 5 7
INFO:root:XX add new best (1, 3) is not 5 7 7
INFO:root:XX add new best (1, 3) is not 5 7 7
INFO:root:XX add new best (1, 3) is not 5 7 7
INFO:root:XX add new best (1, 3) is not 5 7 7
INFO:root:XX add new best (1, 3) is not 5 7 7
INFO:root:XX add new best (1, 3) is not 5 7 7
INFO:root:XX add new best (1, 3) is not 5 7 7
INFO:root:XX add new best (1, 3) is not 5 7 7
INFO:root:Considering 100 * 1 jobs for minsize=7
INFO:root:Chunked 100 in [9, 9, 9, 9, 8, 8, 8, 8, 8, 8, 8, 8]
INFO:root:XX add new best (1, 3) is not 5 7 7
INFO:root:XX add new best (1, 3) is not 5 7 7
INFO:root:XX add new best (1, 3) is not 5 7 7
INFO:root:XX add new best (1, 3) is not 5 7 7
INFO:root:XX add new best (1, 3) is not 5 7 7
INFO:root:XX add new best (1, 3) is not 5 7 7
INFO:root:XX add new best (1, 3) is not 5 7 7
INFO:root:Trace: [(7, [(1, 3) is not 5])]
INFO:root:Trace Quality: [(7, 1)]
INFO:root:Trace Sorted: [(7, 1)]
INFO:root:Finished
INFO:root:Full Trace [(7, [(1, 3) is not 5])]
INFO:root:Trying {'gallopingMUSes': True, 'minPrecheckMUS': True}
INFO:root:Starting Step 1
INFO:root:Current state [[[[2, 6], [8], [2, 4, 5], [1], [2, 9], [3], [5, 9], [7], [4, 5, 6]], [[3, 7], [9], [2, 4], [5], [2, 7], [6], [1, 8], [1, 4], [3, 4, 8]], [[3, 7], [5, 6], [1], [4], [7, 9], [8], [3, 5, 9], [2], [3, 5, 6]], [[5], [7], [8], [2], [4], [1], [6], [3], [9]], [[1], [4], [3], [6], [5], [9], [7], [8], [2]], [[9], [2], [6], [8], [3], [7], [4], [5], [1]], [[6, 8], [3], [7], [9], [1, 6], [5], [2], [1, 4], [4, 8]], [[2, 6, 8], [5, 6], [2, 5], [3], [1, 6], [4], [1, 8], [9], [7]], [[4], [1], [9], [7], [8], [2], [3, 5], [6], [3, 5]]]]
INFO:root:Doing checkSmall1
INFO:root:Getting tiny MUSes, distance 1, for 1 puzlits, 1 repeats
INFO:root:Chunked 1 in [1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
INFO:root:Doing checkSmall2
INFO:root:Getting tiny MUSes, distance 2, for 1 puzlits, 1 repeats
INFO:root:Chunked 1 in [1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
INFO:root:Considering 100 * 1 jobs for minsize=3
INFO:root:Chunked 100 in [9, 9, 9, 9, 8, 8, 8, 8, 8, 8, 8, 8]
INFO:root:Considering 100 * 1 jobs for minsize=4
INFO:root:Chunked 100 in [9, 9, 9, 9, 8, 8, 8, 8, 8, 8, 8, 8]
INFO:root:Considering 100 * 1 jobs for minsize=5
INFO:root:Chunked 100 in [9, 9, 9, 9, 8, 8, 8, 8, 8, 8, 8, 8]
INFO:root:Considering 100 * 1 jobs for minsize=6
INFO:root:Chunked 100 in [9, 9, 9, 9, 8, 8, 8, 8, 8, 8, 8, 8]
INFO:root:XX found first (1, 3) is not 5 7
INFO:root:XX add new best (1, 3) is not 5 7 7
INFO:root:XX add new best (1, 3) is not 5 7 7
INFO:root:XX add new best (1, 3) is not 5 7 7
INFO:root:XX add new best (1, 3) is not 5 7 7
INFO:root:XX add new best (1, 3) is not 5 7 7
INFO:root:XX add new best (1, 3) is not 5 7 7
INFO:root:XX add new best (1, 3) is not 5 7 7
INFO:root:XX add new best (1, 3) is not 5 7 7
INFO:root:Considering 100 * 1 jobs for minsize=7
INFO:root:Chunked 100 in [9, 9, 9, 9, 8, 8, 8, 8, 8, 8, 8, 8]
INFO:root:XX add new best (1, 3) is not 5 7 7
INFO:root:XX add new best (1, 3) is not 5 7 7
INFO:root:XX add new best (1, 3) is not 5 7 7
INFO:root:XX add new best (1, 3) is not 5 7 7
INFO:root:XX add new best (1, 3) is not 5 7 7
INFO:root:XX add new best (1, 3) is not 5 7 7
INFO:root:XX add new best (1, 3) is not 5 7 7
INFO:root:Trace: [(7, [(1, 3) is not 5])]
INFO:root:Trace Quality: [(7, 1)]
INFO:root:Trace Sorted: [(7, 1)]
INFO:root:Finished
INFO:root:Full Trace [(7, [(1, 3) is not 5])]
INFO:root:Trying {}
INFO:root:Starting Step 1
INFO:root:Current state [[[[4, 8], [9], [2], [1, 4, 5], [1, 8], [1, 5, 8], [3], [7], [6]], [[4, 7, 8], [1], [6, 8], [2, 4, 6, 7, 9], [3], [2, 6, 8, 9], [5], [2, 8], [2, 4, 8]], [[3], [5, 6, 7], [5, 6, 8], [2, 4, 6, 7], [2, 6, 7, 8], [2, 6, 8], [1], [9], [2, 4, 8]], [[9], [3], [4, 6], [8], [5], [2, 6], [7], [2, 4], [1]], [[7, 8], [5, 6, 7], [1, 5, 6, 8], [3], [1, 2, 6], [4], [6, 8, 9], [2, 5, 8], [2, 8, 9]], [[2], [5, 6], [1, 4, 5, 6, 8], [1, 6], [9], [7], [6, 8], [4, 5, 8], [3]], [[6], [8], [9], [2, 5, 7], [2, 7], [3], [4], [1], [5, 7]], [[5], [2], [3], [1, 7, 9], [4], [1, 8, 9], [8, 9], [6], [7, 8, 9]], [[1], [4], [7], [5, 6, 9], [6, 8], [5, 6, 8, 9], [2], [3], [5, 8, 9]]]]
INFO:root:Doing checkSmall1
INFO:root:Getting tiny MUSes, distance 1, for 1 puzlits, 1 repeats
INFO:root:Chunked 1 in [1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
INFO:root:Doing checkSmall2
INFO:root:Getting tiny MUSes, distance 2, for 1 puzlits, 1 repeats
INFO:root:Chunked 1 in [1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
INFO:root:Considering 100 * 1 jobs for minsize=3
INFO:root:Chunked 100 in [9, 9, 9, 9, 8, 8, 8, 8, 8, 8, 8, 8]
INFO:root:Considering 100 * 1 jobs for minsize=4
INFO:root:Chunked 100 in [9, 9, 9, 9, 8, 8, 8, 8, 8, 8, 8, 8]
INFO:root:Considering 100 * 1 jobs for minsize=5
INFO:root:Chunked 100 in [9, 9, 9, 9, 8, 8, 8, 8, 8, 8, 8, 8]
INFO:root:Considering 100 * 1 jobs for minsize=6
INFO:root:Chunked 100 in [9, 9, 9, 9, 8, 8, 8, 8, 8, 8, 8, 8]
INFO:root:Considering 100 * 1 jobs for minsize=7
INFO:root:Chunked 100 in [9, 9, 9, 9, 8, 8, 8, 8, 8, 8, 8, 8]
INFO:root:Considering 100 * 1 jobs for minsize=8
INFO:root:Chunked 100 in [9, 9, 9, 9, 8, 8, 8, 8, 8, 8, 8, 8]
INFO:root:XX found first (2, 1) is not 8 9
INFO:root:XX add new best (2, 1) is not 8 9 9
INFO:root:XX add new best (2, 1) is not 8 9 9
INFO:root:XX add new best (2, 1) is not 8 9 9
INFO:root:XX add new best (2, 1) is not 8 9 9
INFO:root:XX add new best (2, 1) is not 8 9 9
INFO:root:XX add new best (2, 1) is not 8 9 9
INFO:root:XX add new best (2, 1) is not 8 9 9
INFO:root:XX add new best (2, 1) is not 8 9 9
INFO:root:XX add new best (2, 1) is not 8 9 9
INFO:root:XX add new best (2, 1) is not 8 9 9
INFO:root:XX add new best (2, 1) is not 8 9 9
INFO:root:XX add new best (2, 1) is not 8 9 9
INFO:root:XX add new best (2, 1) is not 8 9 9
INFO:root:XX add new best (2, 1) is not 8 9 9
INFO:root:XX add new best (2, 1) is not 8 9 9
INFO:root:XX add new best (2, 1) is not 8 9 9
INFO:root:XX add new best (2, 1) is not 8 9 9
INFO:root:XX add new best (2, 1) is not 8 9 9
INFO:root:XX add new best (2, 1) is not 8 9 9
INFO:root:XX add new best (2, 1) is not 8 9 9
INFO:root:XX add new best (2, 1) is not 8 9 9
INFO:root:XX add new best (2, 1) is not 8 9 9
INFO:root:XX add new best (2, 1) is not 8 9 9
INFO:root:XX add new best (2, 1) is not 8 9 9
INFO:root:XX add new best (2, 1) is not 8 9 9
INFO:root:XX add new best (2, 1) is not 8 9 9
INFO:root:XX add new best (2, 1) is not 8 9 9
INFO:root:XX add new best (2, 1) is not 8 9 9
INFO:root:XX add new best (2, 1) is not 8 9 9
INFO:root:XX add new best (2, 1) is not 8 9 9
INFO:root:XX add new best (2, 1) is not 8 9 9
INFO:root:XX add new best (2, 1) is not 8 9 9
INFO:root:XX add new best (2, 1) is not 8 9 9
INFO:root:XX add new best (2, 1) is not 8 9 9
INFO:root:XX add new best (2, 1) is not 8 9 9
INFO:root:Considering 100 * 1 jobs for minsize=9
INFO:root:Chunked 100 in [9, 9, 9, 9, 8, 8, 8, 8, 8, 8, 8, 8]
INFO:root:XX add new best (2, 1) is not 8 9 9
INFO:root:XX add new best (2, 1) is not 8 9 9
INFO:root:XX add new best (2, 1) is not 8 9 9
INFO:root:XX add new best (2, 1) is not 8 9 9
INFO:root:XX add new best (2, 1) is not 8 9 9
INFO:root:XX add new best (2, 1) is not 8 9 9
INFO:root:XX add new best (2, 1) is not 8 9 9
INFO:root:XX add new best (2, 1) is not 8 9 9
INFO:root:XX add new best (2, 1) is not 8 9 9
INFO:root:XX add new best (2, 1) is not 8 9 9
INFO:root:XX add new best (2, 1) is not 8 9 9
INFO:root:XX add new best (2, 1) is not 8 9 9
INFO:root:XX add new best (2, 1) is not 8 9 9
INFO:root:XX add new best (2, 1) is not 8 9 9
INFO:root:XX add new best (2, 1) is not 8 9 9
INFO:root:XX add new best (2, 1) is not 8 9 9
INFO:root:XX add new best (2, 1) is not 8 9 9
INFO:root:XX add new best (2, 1) is not 8 9 9
INFO:root:XX add new best (2, 1) is not 8 9 9
INFO:root:XX add new best (2, 1) is not 8 9 9
INFO:root:XX add new best (2, 1) is not 8 9 9
INFO:root:XX add new best (2, 1) is not 8 9 9
INFO:root:XX add new best (2, 1) is not 8 9 9
INFO:root:XX add new best (2, 1) is not 8 9 9
INFO:root:XX add new best (2, 1) is not 8 9 9
INFO:root:XX add new best (2, 1) is not 8 9 9
INFO:root:XX add new best (2, 1) is not 8 9 9
INFO:root:XX add new best (2, 1) is not 8 9 9
INFO:root:XX add new best (2, 1) is not 8 9 9
INFO:root:XX add new best (2, 1) is not 8 9 9
INFO:root:XX add new best (2, 1) is not 8 9 9
INFO:root:XX add new best (2, 1) is not 8 9 9
INFO:root:XX add new best (2, 1) is not 8 9 9
INFO:root:XX add new best (2, 1) is not 8 9 9
INFO:root:XX add new best (2, 1) is not 8 9 9
INFO:root:XX add new best (2, 1) is not 8 9 9
INFO:root:XX add new best (2, 1) is not 8 9 9
INFO:root:Trace: [(9, [(2, 1) is not 8])]
INFO:root:Trace Quality: [(9, 1)]
INFO:root:Trace Sorted: [(9, 1)]
INFO:root:Finished
INFO:root:Full Trace [(9, [(2, 1) is not 8])]
INFO:root:Trying {'prechopMUSes': True}
INFO:root:Starting Step 1
INFO:root:Current state [[[[4, 8], [9], [2], [1, 4, 5], [1, 8], [1, 5, 8], [3], [7], [6]], [[4, 7, 8], [1], [6, 8], [2, 4, 6, 7, 9], [3], [2, 6, 8, 9], [5], [2, 8], [2, 4, 8]], [[3], [5, 6, 7], [5, 6, 8], [2, 4, 6, 7], [2, 6, 7, 8], [2, 6, 8], [1], [9], [2, 4, 8]], [[9], [3], [4, 6], [8], [5], [2, 6], [7], [2, 4], [1]], [[7, 8], [5, 6, 7], [1, 5, 6, 8], [3], [1, 2, 6], [4], [6, 8, 9], [2, 5, 8], [2, 8, 9]], [[2], [5, 6], [1, 4, 5, 6, 8], [1, 6], [9], [7], [6, 8], [4, 5, 8], [3]], [[6], [8], [9], [2, 5, 7], [2, 7], [3], [4], [1], [5, 7]], [[5], [2], [3], [1, 7, 9], [4], [1, 8, 9], [8, 9], [6], [7, 8, 9]], [[1], [4], [7], [5, 6, 9], [6, 8], [5, 6, 8, 9], [2], [3], [5, 8, 9]]]]
INFO:root:Doing checkSmall1
INFO:root:Getting tiny MUSes, distance 1, for 1 puzlits, 1 repeats
INFO:root:Chunked 1 in [1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
INFO:root:Doing checkSmall2
INFO:root:Getting tiny MUSes, distance 2, for 1 puzlits, 1 repeats
INFO:root:Chunked 1 in [1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
INFO:root:Considering 100 * 1 jobs for minsize=3
INFO:root:Chunked 100 in [9, 9, 9, 9, 8, 8, 8, 8, 8, 8, 8, 8]
INFO:root:Considering 100 * 1 jobs for minsize=4
INFO:root:Chunked 100 in [9, 9, 9, 9, 8, 8, 8, 8, 8, 8, 8, 8]
INFO:root:Considering 100 * 1 jobs for minsize=5
INFO:root:Chunked 100 in [9, 9, 9, 9, 8, 8, 8, 8, 8, 8, 8, 8]
INFO:root:Considering 100 * 1 jobs for minsize=6
INFO:root:Chunked 100 in [9, 9, 9, 9, 8, 8, 8, 8, 8, 8, 8, 8]
INFO:root:Considering 100 * 1 jobs for minsize=7
INFO:root:Chunked 100 in [9, 9, 9, 9, 8, 8, 8, 8, 8, 8, 8, 8]
INFO:root:Considering 100 * 1 jobs for minsize=8
INFO:root:Chunked 100 in [9, 9, 9, 9, 8, 8, 8, 8, 8, 8, 8, 8]
INFO:root:XX found first (2, 1) is not 8 9
INFO:root:XX add new best (2, 1) is not 8 9 9
INFO:root:XX add new best (2, 1) is not 8 9 9
INFO:root:XX add new best (2, 1) is not 8 9 9
INFO:root:Considering 100 * 1 jobs for minsize=9
INFO:root:Chunked 100 in [9, 9, 9, 9, 8, 8, 8, 8, 8, 8, 8, 8]
INFO:root:XX add new best (2, 1) is not 8 9 9
INFO:root:XX add new best (2, 1) is not 8 9 9
INFO:root:XX add new best (2, 1) is not 8 9 9
INFO:root:XX add new best (2, 1) is not 8 9 9
INFO:root:Trace: [(9, [(2, 1) is not 8])]
INFO:root:Trace Quality: [(9, 1)]
INFO:root:Trace Sorted: [(9, 1)]
INFO:root:Finished
INFO:root:Full Trace [(9, [(2, 1) is not 8])]
INFO:root:Trying {'quarterChopMUS': True}
INFO:root:Starting Step 1
INFO:root:Current state [[[[4, 8], [9], [2], [1, 4, 5], [1, 8], [1, 5, 8], [3], [7], [6]], [[4, 7, 8], [1], [6, 8], [2, 4, 6, 7, 9], [3], [2, 6, 8, 9], [5], [2, 8], [2, 4, 8]], [[3], [5, 6, 7], [5, 6, 8], [2, 4, 6, 7], [2, 6, 7, 8], [2, 6, 8], [1], [9], [2, 4, 8]], [[9], [3], [4, 6], [8], [5], [2, 6], [7], [2, 4], [1]], [[7, 8], [5, 6, 7], [1, 5, 6, 8], [3], [1, 2, 6], [4], [6, 8, 9], [2, 5, 8], [2, 8, 9]], [[2], [5, 6], [1, 4, 5, 6, 8], [1, 6], [9], [7], [6, 8], [4, 5, 8], [3]], [[6], [8], [9], [2, 5, 7], [2, 7], [3], [4], [1], [5, 7]], [[5], [2], [3], [1, 7, 9], [4], [1, 8, 9], [8, 9], [6], [7, 8, 9]], [[1], [4], [7], [5, 6, 9], [6, 8], [5, 6, 8, 9], [2], [3], [5, 8, 9]]]]
INFO:root:Doing checkSmall1
INFO:root:Getting tiny MUSes, distance 1, for 1 puzlits, 1 repeats
INFO:root:Chunked 1 in [1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
INFO:root:Doing checkSmall2
INFO:root:Getting tiny MUSes, distance 2, for 1 puzlits, 1 repeats
INFO:root:Chunked 1 in [1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
INFO:root:Considering 100 * 1 jobs for minsize=3
INFO:root:Chunked 100 in [9, 9, 9, 9, 8, 8, 8, 8, 8, 8, 8, 8]
INFO:root:Considering 100 * 1 jobs for minsize=4
INFO:root:Chunked 100 in [9, 9, 9, 9, 8, 8, 8, 8, 8, 8, 8, 8]
INFO:root:Considering 100 * 1 jobs for minsize=5
INFO:root:Chunked 100 in [9, 9, 9, 9, 8, 8, 8, 8, 8, 8, 8, 8]
INFO:root:Considering 100 * 1 jobs for minsize=6
INFO:root:Chunked 100 in [9, 9, 9, 9, 8, 8, 8, 8, 8, 8, 8, 8]
INFO:root:Considering 100 * 1 jobs for minsize=7
INFO:root:Chunked 100 in [9, 9, 9, 9, 8, 8, 8, 8, 8, 8, 8, 8]
INFO:root:Considering 100 * 1 jobs for minsize=8
INFO:root:Chunked 100 in [9, 9, 9, 9, 8, 8, 8, 8, 8, 8, 8, 8]
INFO:root:XX found first (2, 1) is not 8 9
INFO:root:XX add new best (2, 1) is not 8 9 9
INFO:root:XX add new best (2, 1) is not 8 9 9
INFO:root:XX add new best (2, 1) is not 8 9 9
INFO:root:XX add new best (2, 1) is not 8 9 9
INFO:root:XX add new best (2, 1) is not 8 9 9
INFO:root:XX add new best (2, 1) is not 8 9 9
INFO:root:XX add new best (2, 1) is not 8 9 9
INFO:root:XX add new best (2, 1) is not 8 9 9
INFO:root:XX add new best (2, 1) is not 8 9 9
INFO:root:XX add new best (2, 1) is not 8 9 9
INFO:root:XX add new best (2, 1) is not 8 9 9
INFO:root:Considering 100 * 1 jobs for minsize=9
INFO:root:Chunked 100 in [9, 9, 9, 9, 8, 8, 8, 8, 8, 8, 8, 8]
INFO:root:XX add new best (2, 1) is not 8 9 9
INFO:root:XX add new best (2, 1) is not 8 9 9
INFO:root:XX add new best (2, 1) is not 8 9 9
INFO:root:XX add new best (2, 1) is not 8 9 9
INFO:root:XX add new best (2, 1) is not 8 9 9
INFO:root:XX add new best (2, 1) is not 8 9 9
INFO:root:XX add new best (2, 1) is not 8 9 9
INFO:root:XX add new best (2, 1) is not 8 9 9
INFO:root:XX add new best (2, 1) is not 8 9 9
INFO:root:XX add new best (2, 1) is not 8 9 9
INFO:root:Trace: [(9, [(2, 1) is not 8])]
INFO:root:Trace Quality: [(9, 1)]
INFO:root:Trace Sorted: [(9, 1)]
INFO:root:Finished
INFO:root:Full Trace [(9, [(2, 1) is not 8])]
INFO:root:Trying {'minPrecheckMUS': True}
INFO:root:Starting Step 1
INFO:root:Current state [[[[4, 8], [9], [2], [1, 4, 5], [1, 8], [1, 5, 8], [3], [7], [6]], [[4, 7, 8], [1], [6, 8], [2, 4, 6, 7, 9], [3], [2, 6, 8, 9], [5], [2, 8], [2, 4, 8]], [[3], [5, 6, 7], [5, 6, 8], [2, 4, 6, 7], [2, 6, 7, 8], [2, 6, 8], [1], [9], [2, 4, 8]], [[9], [3], [4, 6], [8], [5], [2, 6], [7], [2, 4], [1]], [[7, 8], [5, 6, 7], [1, 5, 6, 8], [3], [1, 2, 6], [4], [6, 8, 9], [2, 5, 8], [2, 8, 9]], [[2], [5, 6], [1, 4, 5, 6, 8], [1, 6], [9], [7], [6, 8], [4, 5, 8], [3]], [[6], [8], [9], [2, 5, 7], [2, 7], [3], [4], [1], [5, 7]], [[5], [2], [3], [1, 7, 9], [4], [1, 8, 9], [8, 9], [6], [7, 8, 9]], [[1], [4], [7], [5, 6, 9], [6, 8], [5, 6, 8, 9], [2], [3], [5, 8, 9]]]]
INFO:root:Doing checkSmall1
INFO:root:Getting tiny MUSes, distance 1, for 1 puzlits, 1 repeats
INFO:root:Chunked 1 in [1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
INFO:root:Doing checkSmall2
INFO:root:Getting tiny MUSes, distance 2, for 1 puzlits, 1 repeats
INFO:root:Chunked 1 in [1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
INFO:root:Considering 100 * 1 jobs for minsize=3
INFO:root:Chunked 100 in [9, 9, 9, 9, 8, 8, 8, 8, 8, 8, 8, 8]
INFO:root:Considering 100 * 1 jobs for minsize=4
INFO:root:Chunked 100 in [9, 9, 9, 9, 8, 8, 8, 8, 8, 8, 8, 8]
INFO:root:Considering 100 * 1 jobs for minsize=5
INFO:root:Chunked 100 in [9, 9, 9, 9, 8, 8, 8, 8, 8, 8, 8, 8]
INFO:root:Considering 100 * 1 jobs for minsize=6
INFO:root:Chunked 100 in [9, 9, 9, 9, 8, 8, 8, 8, 8, 8, 8, 8]
INFO:root:Considering 100 * 1 jobs for minsize=7
INFO:root:Chunked 100 in [9, 9, 9, 9, 8, 8, 8, 8, 8, 8, 8, 8]
INFO:root:Considering 100 * 1 jobs for minsize=8
INFO:root:Chunked 100 in [9, 9, 9, 9, 8, 8, 8, 8, 8, 8, 8, 8]
INFO:root:XX found first (2, 1) is not 8 9
INFO:root:XX add new best (2, 1) is not 8 9 9
INFO:root:XX add new best (2, 1) is not 8 9 9
INFO:root:XX add new best (2, 1) is not 8 9 9
INFO:root:Considering 100 * 1 jobs for minsize=9
INFO:root:Chunked 100 in [9, 9, 9, 9, 8, 8, 8, 8, 8, 8, 8, 8]
INFO:root:XX add new best (2, 1) is not 8 9 9
INFO:root:Trace: [(9, [(2, 1) is not 8])]
INFO:root:Trace Quality: [(9, 1)]
INFO:root:Trace Sorted: [(9, 1)]
INFO:root:Finished
INFO:root:Full Trace [(9, [(2, 1) is not 8])]
INFO:root:Trying {'gallopingMUSes': True}
INFO:root:Starting Step 1
INFO:root:Current state [[[[4, 8], [9], [2], [1, 4, 5], [1, 8], [1, 5, 8], [3], [7], [6]], [[4, 7, 8], [1], [6, 8], [2, 4, 6, 7, 9], [3], [2, 6, 8, 9], [5], [2, 8], [2, 4, 8]], [[3], [5, 6, 7], [5, 6, 8], [2, 4, 6, 7], [2, 6, 7, 8], [2, 6, 8], [1], [9], [2, 4, 8]], [[9], [3], [4, 6], [8], [5], [2, 6], [7], [2, 4], [1]], [[7, 8], [5, 6, 7], [1, 5, 6, 8], [3], [1, 2, 6], [4], [6, 8, 9], [2, 5, 8], [2, 8, 9]], [[2], [5, 6], [1, 4, 5, 6, 8], [1, 6], [9], [7], [6, 8], [4, 5, 8], [3]], [[6], [8], [9], [2, 5, 7], [2, 7], [3], [4], [1], [5, 7]], [[5], [2], [3], [1, 7, 9], [4], [1, 8, 9], [8, 9], [6], [7, 8, 9]], [[1], [4], [7], [5, 6, 9], [6, 8], [5, 6, 8, 9], [2], [3], [5, 8, 9]]]]
INFO:root:Doing checkSmall1
INFO:root:Getting tiny MUSes, distance 1, for 1 puzlits, 1 repeats
INFO:root:Chunked 1 in [1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
INFO:root:Doing checkSmall2
INFO:root:Getting tiny MUSes, distance 2, for 1 puzlits, 1 repeats
INFO:root:Chunked 1 in [1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
INFO:root:Considering 100 * 1 jobs for minsize=3
INFO:root:Chunked 100 in [9, 9, 9, 9, 8, 8, 8, 8, 8, 8, 8, 8]
INFO:root:Considering 100 * 1 jobs for minsize=4
INFO:root:Chunked 100 in [9, 9, 9, 9, 8, 8, 8, 8, 8, 8, 8, 8]
INFO:root:Considering 100 * 1 jobs for minsize=5
INFO:root:Chunked 100 in [9, 9, 9, 9, 8, 8, 8, 8, 8, 8, 8, 8]
INFO:root:Considering 100 * 1 jobs for minsize=6
INFO:root:Chunked 100 in [9, 9, 9, 9, 8, 8, 8, 8, 8, 8, 8, 8]
INFO:root:Considering 100 * 1 jobs for minsize=7
INFO:root:Chunked 100 in [9, 9, 9, 9, 8, 8, 8, 8, 8, 8, 8, 8]
INFO:root:Considering 100 * 1 jobs for minsize=8
INFO:root:Chunked 100 in [9, 9, 9, 9, 8, 8, 8, 8, 8, 8, 8, 8]
INFO:root:XX found first (2, 1) is not 8 9
INFO:root:Considering 100 * 1 jobs for minsize=9
INFO:root:Chunked 100 in [9, 9, 9, 9, 8, 8, 8, 8, 8, 8, 8, 8]
INFO:root:XX add new best (2, 1) is not 8 9 9
INFO:root:Trace: [(9, [(2, 1) is not 8])]
INFO:root:Trace Quality: [(9, 1)]
INFO:root:Trace Sorted: [(9, 1)]
INFO:root:Finished
INFO:root:Full Trace [(9, [(2, 1) is not 8])]
INFO:root:Trying {'minPrecheckStepsMUS': True}
INFO:root:Starting Step 1
INFO:root:Current state [[[[4, 8], [9], [2], [1, 4, 5], [1, 8], [1, 5, 8], [3], [7], [6]], [[4, 7, 8], [1], [6, 8], [2, 4, 6, 7, 9], [3], [2, 6, 8, 9], [5], [2, 8], [2, 4, 8]], [[3], [5, 6, 7], [5, 6, 8], [2, 4, 6, 7], [2, 6, 7, 8], [2, 6, 8], [1], [9], [2, 4, 8]], [[9], [3], [4, 6], [8], [5], [2, 6], [7], [2, 4], [1]], [[7, 8], [5, 6, 7], [1, 5, 6, 8], [3], [1, 2, 6], [4], [6, 8, 9], [2, 5, 8], [2, 8, 9]], [[2], [5, 6], [1, 4, 5, 6, 8], [1, 6], [9], [7], [6, 8], [4, 5, 8], [3]], [[6], [8], [9], [2, 5, 7], [2, 7], [3], [4], [1], [5, 7]], [[5], [2], [3], [1, 7, 9], [4], [1, 8, 9], [8, 9], [6], [7, 8, 9]], [[1], [4], [7], [5, 6, 9], [6, 8], [5, 6, 8, 9], [2], [3], [5, 8, 9]]]]
INFO:root:Doing checkSmall1
INFO:root:Getting tiny MUSes, distance 1, for 1 puzlits, 1 repeats
INFO:root:Chunked 1 in [1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
INFO:root:Doing checkSmall2
INFO:root:Getting tiny MUSes, distance 2, for 1 puzlits, 1 repeats
INFO:root:Chunked 1 in [1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
INFO:root:Considering 100 * 1 jobs for minsize=3
INFO:root:Chunked 100 in [9, 9, 9, 9, 8, 8, 8, 8, 8, 8, 8, 8]
INFO:root:Considering 100 * 1 jobs for minsize=4
INFO:root:Chunked 100 in [9, 9, 9, 9, 8, 8, 8, 8, 8, 8, 8, 8]
INFO:root:Considering 100 * 1 jobs for minsize=5
INFO:root:Chunked 100 in [9, 9, 9, 9, 8, 8, 8, 8, 8, 8, 8, 8]
INFO:root:Considering 100 * 1 jobs for minsize=6
INFO:root:Chunked 100 in [9, 9, 9, 9, 8, 8, 8, 8, 8, 8, 8, 8]
INFO:root:Considering 100 * 1 jobs for minsize=7
INFO:root:Chunked 100 in [9, 9, 9, 9, 8, 8, 8, 8, 8, 8, 8, 8]
INFO:root:Considering 100 * 1 jobs for minsize=8
INFO:root:Chunked 100 in [9, 9, 9, 9, 8, 8, 8, 8, 8, 8, 8, 8]
INFO:root:XX found first (2, 1) is not 8 9
INFO:root:XX add new best (2, 1) is not 8 9 9
INFO:root:XX add new best (2, 1) is not 8 9 9
INFO:root:XX add new best (2, 1) is not 8 9 9
INFO:root:Considering 100 * 1 jobs for minsize=9
INFO:root:Chunked 100 in [9, 9, 9, 9, 8, 8, 8, 8, 8, 8, 8, 8]
INFO:root:XX add new best (2, 1) is not 8 9 9
INFO:root:Trace: [(9, [(2, 1) is not 8])]
INFO:root:Trace Quality: [(9, 1)]
INFO:root:Trace Sorted: [(9, 1)]
INFO:root:Finished
INFO:root:Full Trace [(9, [(2, 1) is not 8])]
INFO:root:Trying {'gallopingMUSes': True, 'minPrecheckMUS': True}
INFO:root:Starting Step 1
INFO:root:Current state [[[[4, 8], [9], [2], [1, 4, 5], [1, 8], [1, 5, 8], [3], [7], [6]], [[4, 7, 8], [1], [6, 8], [2, 4, 6, 7, 9], [3], [2, 6, 8, 9], [5], [2, 8], [2, 4, 8]], [[3], [5, 6, 7], [5, 6, 8], [2, 4, 6, 7], [2, 6, 7, 8], [2, 6, 8], [1], [9], [2, 4, 8]], [[9], [3], [4, 6], [8], [5], [2, 6], [7], [2, 4], [1]], [[7, 8], [5, 6, 7], [1, 5, 6, 8], [3], [1, 2, 6], [4], [6, 8, 9], [2, 5, 8], [2, 8, 9]], [[2], [5, 6], [1, 4, 5, 6, 8], [1, 6], [9], [7], [6, 8], [4, 5, 8], [3]], [[6], [8], [9], [2, 5, 7], [2, 7], [3], [4], [1], [5, 7]], [[5], [2], [3], [1, 7, 9], [4], [1, 8, 9], [8, 9], [6], [7, 8, 9]], [[1], [4], [7], [5, 6, 9], [6, 8], [5, 6, 8, 9], [2], [3], [5, 8, 9]]]]
INFO:root:Doing checkSmall1
INFO:root:Getting tiny MUSes, distance 1, for 1 puzlits, 1 repeats
INFO:root:Chunked 1 in [1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
INFO:root:Doing checkSmall2
INFO:root:Getting tiny MUSes, distance 2, for 1 puzlits, 1 repeats
INFO:root:Chunked 1 in [1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
INFO:root:Considering 100 * 1 jobs for minsize=3
INFO:root:Chunked 100 in [9, 9, 9, 9, 8, 8, 8, 8, 8, 8, 8, 8]
INFO:root:Considering 100 * 1 jobs for minsize=4
INFO:root:Chunked 100 in [9, 9, 9, 9, 8, 8, 8, 8, 8, 8, 8, 8]
INFO:root:Considering 100 * 1 jobs for minsize=5
INFO:root:Chunked 100 in [9, 9, 9, 9, 8, 8, 8, 8, 8, 8, 8, 8]
INFO:root:Considering 100 * 1 jobs for minsize=6
INFO:root:Chunked 100 in [9, 9, 9, 9, 8, 8, 8, 8, 8, 8, 8, 8]
INFO:root:Considering 100 * 1 jobs for minsize=7
INFO:root:Chunked 100 in [9, 9, 9, 9, 8, 8, 8, 8, 8, 8, 8, 8]
INFO:root:Considering 100 * 1 jobs for minsize=8
INFO:root:Chunked 100 in [9, 9, 9, 9, 8, 8, 8, 8, 8, 8, 8, 8]
INFO:root:XX found first (2, 1) is not 8 9
INFO:root:XX add new best (2, 1) is not 8 9 9
INFO:root:XX add new best (2, 1) is not 8 9 9
INFO:root:XX add new best (2, 1) is not 8 9 9
INFO:root:Considering 100 * 1 jobs for minsize=9
INFO:root:Chunked 100 in [9, 9, 9, 9, 8, 8, 8, 8, 8, 8, 8, 8]
INFO:root:XX add new best (2, 1) is not 8 9 9
INFO:root:Trace: [(9, [(2, 1) is not 8])]
INFO:root:Trace Quality: [(9, 1)]
INFO:root:Trace Sorted: [(9, 1)]
INFO:root:Finished
INFO:root:Full Trace [(9, [(2, 1) is not 8])]
INFO:root:Trying {}
INFO:root:Starting Step 1
INFO:root:Current state [[[[4, 8], [9], [2], [1, 4, 5], [1, 8], [1, 5, 8], [3], [7], [6]], [[4, 7], [1], [6, 8], [2, 4, 6, 7, 9], [3], [2, 6, 9], [5], [2, 8], [2, 4]], [[3], [5, 6, 7], [5, 6, 8], [2, 4, 6, 7], [2, 6, 7, 8], [2, 6, 8], [1], [9], [2, 4, 8]], [[9], [3], [4, 6], [8], [5], [2, 6], [7], [2, 4], [1]], [[7, 8], [5, 6, 7], [1, 5, 6, 8], [3], [1, 2, 6], [4], [6, 8, 9], [2, 5], [2, 8, 9]], [[2], [5, 6], [1, 4, 5, 6, 8], [1, 6], [9], [7], [6, 8], [4, 5, 8], [3]], [[6], [8], [9], [2, 5, 7], [2, 7], [3], [4], [1], [5, 7]], [[5], [2], [3], [1, 7, 9], [4], [1, 8, 9], [8, 9], [6], [7, 8, 9]], [[1], [4], [7], [5, 6, 9], [6, 8], [5, 6, 8, 9], [2], [3], [5, 8, 9]]]]
INFO:root:Doing checkSmall1
INFO:root:Getting tiny MUSes, distance 1, for 1 puzlits, 1 repeats
INFO:root:Chunked 1 in [1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
INFO:root:Doing checkSmall2
INFO:root:Getting tiny MUSes, distance 2, for 1 puzlits, 1 repeats
INFO:root:Chunked 1 in [1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
INFO:root:Considering 100 * 1 jobs for minsize=3
INFO:root:Chunked 100 in [9, 9, 9, 9, 8, 8, 8, 8, 8, 8, 8, 8]
INFO:root:Considering 100 * 1 jobs for minsize=4
INFO:root:Chunked 100 in [9, 9, 9, 9, 8, 8, 8, 8, 8, 8, 8, 8]
INFO:root:Considering 100 * 1 jobs for minsize=5
INFO:root:Chunked 100 in [9, 9, 9, 9, 8, 8, 8, 8, 8, 8, 8, 8]
INFO:root:Considering 100 * 1 jobs for minsize=6
INFO:root:Chunked 100 in [9, 9, 9, 9, 8, 8, 8, 8, 8, 8, 8, 8]
INFO:root:Considering 100 * 1 jobs for minsize=7
INFO:root:Chunked 100 in [9, 9, 9, 9, 8, 8, 8, 8, 8, 8, 8, 8]
INFO:root:Considering 100 * 1 jobs for minsize=8
INFO:root:Chunked 100 in [9, 9, 9, 9, 8, 8, 8, 8, 8, 8, 8, 8]
INFO:root:Considering 100 * 1 jobs for minsize=9
INFO:root:Chunked 100 in [9, 9, 9, 9, 8, 8, 8, 8, 8, 8, 8, 8]
INFO:root:Considering 100 * 1 jobs for minsize=10
INFO:root:Chunked 100 in [9, 9, 9, 9, 8, 8, 8, 8, 8, 8, 8, 8]
INFO:root:Considering 100 * 1 jobs for minsize=11
INFO:root:Chunked 100 in [9, 9, 9, 9, 8, 8, 8, 8, 8, 8, 8, 8]
INFO:root:Considering 100 * 1 jobs for minsize=12
INFO:root:Chunked 100 in [9, 9, 9, 9, 8, 8, 8, 8, 8, 8, 8, 8]
INFO:root:Considering 100 * 1 jobs for minsize=13
INFO:root:Chunked 100 in [9, 9, 9, 9, 8, 8, 8, 8, 8, 8, 8, 8]
INFO:root:Considering 100 * 1 jobs for minsize=14
INFO:root:Chunked 100 in [9, 9, 9, 9, 8, 8, 8, 8, 8, 8, 8, 8]
INFO:root:Considering 100 * 1 jobs for minsize=15
INFO:root:Chunked 100 in [9, 9, 9, 9, 8, 8, 8, 8, 8, 8, 8, 8]
INFO:root:Considering 100 * 1 jobs for minsize=16
INFO:root:Chunked 100 in [9, 9, 9, 9, 8, 8, 8, 8, 8, 8, 8, 8]
INFO:root:Considering 100 * 1 jobs for minsize=17
INFO:root:Chunked 100 in [9, 9, 9, 9, 8, 8, 8, 8, 8, 8, 8, 8]
INFO:root:Considering 100 * 1 jobs for minsize=18
INFO:root:Chunked 100 in [9, 9, 9, 9, 8, 8, 8, 8, 8, 8, 8, 8]
INFO:root:Considering 100 * 1 jobs for minsize=19
INFO:root:Chunked 100 in [9, 9, 9, 9, 8, 8, 8, 8, 8, 8, 8, 8]
INFO:root:Considering 100 * 1 jobs for minsize=20
INFO:root:Chunked 100 in [9, 9, 9, 9, 8, 8, 8, 8, 8, 8, 8, 8]
INFO:root:Considering 100 * 1 jobs for minsize=21
INFO:root:Chunked 100 in [9, 9, 9, 9, 8, 8, 8, 8, 8, 8, 8, 8]
INFO:root:XX found first (3, 3) is not 6 22
INFO:root:XX add new best (3, 3) is not 6 22 22
INFO:root:XX add new best (3, 3) is not 6 22 22
INFO:root:XX add new best (3, 3) is not 6 22 22
INFO:root:XX add new best (3, 3) is not 6 22 22
INFO:root:XX add new best (3, 3) is not 6 22 22
INFO:root:XX add new best (3, 3) is not 6 22 22
INFO:root:XX add new best (3, 3) is not 6 22 22
INFO:root:XX add new best (3, 3) is not 6 22 22
INFO:root:Considering 100 * 1 jobs for minsize=22
INFO:root:Chunked 100 in [9, 9, 9, 9, 8, 8, 8, 8, 8, 8, 8, 8]
INFO:root:XX add new best (3, 3) is not 6 22 22
INFO:root:XX add new best (3, 3) is not 6 22 22
INFO:root:XX add new best (3, 3) is not 6 22 22
INFO:root:XX add new best (3, 3) is not 6 22 22
INFO:root:XX add new best (3, 3) is not 6 22 22
INFO:root:XX add new best (3, 3) is not 6 22 22
INFO:root:XX add new best (3, 3) is not 6 22 22
INFO:root:XX add new best (3, 3) is not 6 22 22
INFO:root:XX add new best (3, 3) is not 6 22 22
INFO:root:XX found new best (3, 3) is not 6 22 20
INFO:root:Trace: [(20, [(3, 3) is not 6])]
INFO:root:Trace Quality: [(20, 1)]
INFO:root:Trace Sorted: [(20, 1)]
INFO:root:Finished
INFO:root:Full Trace [(20, [(3, 3) is not 6])]
INFO:root:Trying {'prechopMUSes': True}
INFO:root:Starting Step 1
INFO:root:Current state [[[[4, 8], [9], [2], [1, 4, 5], [1, 8], [1, 5, 8], [3], [7], [6]], [[4, 7], [1], [6, 8], [2, 4, 6, 7, 9], [3], [2, 6, 9], [5], [2, 8], [2, 4]], [[3], [5, 6, 7], [5, 6, 8], [2, 4, 6, 7], [2, 6, 7, 8], [2, 6, 8], [1], [9], [2, 4, 8]], [[9], [3], [4, 6], [8], [5], [2, 6], [7], [2, 4], [1]], [[7, 8], [5, 6, 7], [1, 5, 6, 8], [3], [1, 2, 6], [4], [6, 8, 9], [2, 5], [2, 8, 9]], [[2], [5, 6], [1, 4, 5, 6, 8], [1, 6], [9], [7], [6, 8], [4, 5, 8], [3]], [[6], [8], [9], [2, 5, 7], [2, 7], [3], [4], [1], [5, 7]], [[5], [2], [3], [1, 7, 9], [4], [1, 8, 9], [8, 9], [6], [7, 8, 9]], [[1], [4], [7], [5, 6, 9], [6, 8], [5, 6, 8, 9], [2], [3], [5, 8, 9]]]]
INFO:root:Doing checkSmall1
INFO:root:Getting tiny MUSes, distance 1, for 1 puzlits, 1 repeats
INFO:root:Chunked 1 in [1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
INFO:root:Doing checkSmall2
INFO:root:Getting tiny MUSes, distance 2, for 1 puzlits, 1 repeats
INFO:root:Chunked 1 in [1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
INFO:root:Considering 100 * 1 jobs for minsize=3
INFO:root:Chunked 100 in [9, 9, 9, 9, 8, 8, 8, 8, 8, 8, 8, 8]
INFO:root:Considering 100 * 1 jobs for minsize=4
INFO:root:Chunked 100 in [9, 9, 9, 9, 8, 8, 8, 8, 8, 8, 8, 8]
INFO:root:Considering 100 * 1 jobs for minsize=5
INFO:root:Chunked 100 in [9, 9, 9, 9, 8, 8, 8, 8, 8, 8, 8, 8]
INFO:root:Considering 100 * 1 jobs for minsize=6
INFO:root:Chunked 100 in [9, 9, 9, 9, 8, 8, 8, 8, 8, 8, 8, 8]
INFO:root:Considering 100 * 1 jobs for minsize=7
INFO:root:Chunked 100 in [9, 9, 9, 9, 8, 8, 8, 8, 8, 8, 8, 8]
INFO:root:Considering 100 * 1 jobs for minsize=8
INFO:root:Chunked 100 in [9, 9, 9, 9, 8, 8, 8, 8, 8, 8, 8, 8]
INFO:root:XX found first (3, 3) is not 6 9
INFO:root:XX add new best (3, 3) is not 6 9 9
INFO:root:XX add new best (3, 3) is not 6 9 9
INFO:root:XX add new best (3, 3) is not 6 9 9
INFO:root:XX add new best (3, 3) is not 6 9 9
INFO:root:Considering 100 * 1 jobs for minsize=9
INFO:root:Chunked 100 in [9, 9, 9, 9, 8, 8, 8, 8, 8, 8, 8, 8]
INFO:root:XX add new best (3, 3) is not 6 9 9
INFO:root:XX add new best (3, 3) is not 6 9 9
INFO:root:XX add new best (3, 3) is not 6 9 9
INFO:root:XX add new best (3, 3) is not 6 9 9
INFO:root:XX add new best (3, 3) is not 6 9 9
INFO:root:XX add new best (3, 3) is not 6 9 9
INFO:root:XX add new best (3, 3) is not 6 9 9
INFO:root:Trace: [(9, [(3, 3) is not 6])]
INFO:root:Trace Quality: [(9, 1)]
INFO:root:Trace Sorted: [(9, 1)]
INFO:root:Finished
INFO:root:Full Trace [(9, [(3, 3) is not 6])]
INFO:root:Trying {'quarterChopMUS': True}
INFO:root:Starting Step 1
INFO:root:Current state [[[[4, 8], [9], [2], [1, 4, 5], [1, 8], [1, 5, 8], [3], [7], [6]], [[4, 7], [1], [6, 8], [2, 4, 6, 7, 9], [3], [2, 6, 9], [5], [2, 8], [2, 4]], [[3], [5, 6, 7], [5, 6, 8], [2, 4, 6, 7], [2, 6, 7, 8], [2, 6, 8], [1], [9], [2, 4, 8]], [[9], [3], [4, 6], [8], [5], [2, 6], [7], [2, 4], [1]], [[7, 8], [5, 6, 7], [1, 5, 6, 8], [3], [1, 2, 6], [4], [6, 8, 9], [2, 5], [2, 8, 9]], [[2], [5, 6], [1, 4, 5, 6, 8], [1, 6], [9], [7], [6, 8], [4, 5, 8], [3]], [[6], [8], [9], [2, 5, 7], [2, 7], [3], [4], [1], [5, 7]], [[5], [2], [3], [1, 7, 9], [4], [1, 8, 9], [8, 9], [6], [7, 8, 9]], [[1], [4], [7], [5, 6, 9], [6, 8], [5, 6, 8, 9], [2], [3], [5, 8, 9]]]]
INFO:root:Doing checkSmall1
INFO:root:Getting tiny MUSes, distance 1, for 1 puzlits, 1 repeats
INFO:root:Chunked 1 in [1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
INFO:root:Doing checkSmall2
INFO:root:Getting tiny MUSes, distance 2, for 1 puzlits, 1 repeats
INFO:root:Chunked 1 in [1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
INFO:root:Considering 100 * 1 jobs for minsize=3
INFO:root:Chunked 100 in [9, 9, 9, 9, 8, 8, 8, 8, 8, 8, 8, 8]
INFO:root:Considering 100 * 1 jobs for minsize=4
INFO:root:Chunked 100 in [9, 9, 9, 9, 8, 8, 8, 8, 8, 8, 8, 8]
INFO:root:Considering 100 * 1 jobs for minsize=5
INFO:root:Chunked 100 in [9, 9, 9, 9, 8, 8, 8, 8, 8, 8, 8, 8]
INFO:root:Considering 100 * 1 jobs for minsize=6
INFO:root:Chunked 100 in [9, 9, 9, 9, 8, 8, 8, 8, 8, 8, 8, 8]
INFO:root:Considering 100 * 1 jobs for minsize=7
INFO:root:Chunked 100 in [9, 9, 9, 9, 8, 8, 8, 8, 8, 8, 8, 8]
INFO:root:Considering 100 * 1 jobs for minsize=8
INFO:root:Chunked 100 in [9, 9, 9, 9, 8, 8, 8, 8, 8, 8, 8, 8]
INFO:root:XX found first (3, 3) is not 6 9
INFO:root:XX add new best (3, 3) is not 6 9 9
INFO:root:XX add new best (3, 3) is not 6 9 9
INFO:root:XX add new best (3, 3) is not 6 9 9
INFO:root:XX add new best (3, 3) is not 6 9 9
INFO:root:XX add new best (3, 3) is not 6 9 9
INFO:root:XX add new best (3, 3) is not 6 9 9
INFO:root:XX add new best (3, 3) is not 6 9 9
INFO:root:Considering 100 * 1 jobs for minsize=9
INFO:root:Chunked 100 in [9, 9, 9, 9, 8, 8, 8, 8, 8, 8, 8, 8]
INFO:root:XX add new best (3, 3) is not 6 9 9
INFO:root:XX add new best (3, 3) is not 6 9 9
INFO:root:XX add new best (3, 3) is not 6 9 9
INFO:root:XX add new best (3, 3) is not 6 9 9
INFO:root:XX add new best (3, 3) is not 6 9 9
INFO:root:XX add new best (3, 3) is not 6 9 9
INFO:root:XX add new best (3, 3) is not 6 9 9
INFO:root:Trace: [(9, [(3, 3) is not 6])]
INFO:root:Trace Quality: [(9, 1)]
INFO:root:Trace Sorted: [(9, 1)]
INFO:root:Finished
INFO:root:Full Trace [(9, [(3, 3) is not 6])]
INFO:root:Trying {'minPrecheckMUS': True}
INFO:root:Starting Step 1
INFO:root:Current state [[[[4, 8], [9], [2], [1, 4, 5], [1, 8], [1, 5, 8], [3], [7], [6]], [[4, 7], [1], [6, 8], [2, 4, 6, 7, 9], [3], [2, 6, 9], [5], [2, 8], [2, 4]], [[3], [5, 6, 7], [5, 6, 8], [2, 4, 6, 7], [2, 6, 7, 8], [2, 6, 8], [1], [9], [2, 4, 8]], [[9], [3], [4, 6], [8], [5], [2, 6], [7], [2, 4], [1]], [[7, 8], [5, 6, 7], [1, 5, 6, 8], [3], [1, 2, 6], [4], [6, 8, 9], [2, 5], [2, 8, 9]], [[2], [5, 6], [1, 4, 5, 6, 8], [1, 6], [9], [7], [6, 8], [4, 5, 8], [3]], [[6], [8], [9], [2, 5, 7], [2, 7], [3], [4], [1], [5, 7]], [[5], [2], [3], [1, 7, 9], [4], [1, 8, 9], [8, 9], [6], [7, 8, 9]], [[1], [4], [7], [5, 6, 9], [6, 8], [5, 6, 8, 9], [2], [3], [5, 8, 9]]]]
INFO:root:Doing checkSmall1
INFO:root:Getting tiny MUSes, distance 1, for 1 puzlits, 1 repeats
INFO:root:Chunked 1 in [1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
INFO:root:Doing checkSmall2
INFO:root:Getting tiny MUSes, distance 2, for 1 puzlits, 1 repeats
INFO:root:Chunked 1 in [1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
INFO:root:Considering 100 * 1 jobs for minsize=3
INFO:root:Chunked 100 in [9, 9, 9, 9, 8, 8, 8, 8, 8, 8, 8, 8]
INFO:root:Considering 100 * 1 jobs for minsize=4
INFO:root:Chunked 100 in [9, 9, 9, 9, 8, 8, 8, 8, 8, 8, 8, 8]
INFO:root:Considering 100 * 1 jobs for minsize=5
INFO:root:Chunked 100 in [9, 9, 9, 9, 8, 8, 8, 8, 8, 8, 8, 8]
INFO:root:Considering 100 * 1 jobs for minsize=6
INFO:root:Chunked 100 in [9, 9, 9, 9, 8, 8, 8, 8, 8, 8, 8, 8]
INFO:root:Considering 100 * 1 jobs for minsize=7
INFO:root:Chunked 100 in [9, 9, 9, 9, 8, 8, 8, 8, 8, 8, 8, 8]
INFO:root:Considering 100 * 1 jobs for minsize=8
INFO:root:Chunked 100 in [9, 9, 9, 9, 8, 8, 8, 8, 8, 8, 8, 8]
INFO:root:XX found first (3, 3) is not 6 9
INFO:root:XX add new best (3, 3) is not 6 9 9
INFO:root:XX add new best (3, 3) is not 6 9 9
INFO:root:XX add new best (3, 3) is not 6 9 9
INFO:root:XX add new best (3, 3) is not 6 9 9
INFO:root:XX add new best (3, 3) is not 6 9 9
INFO:root:XX add new best (3, 3) is not 6 9 9
INFO:root:XX add new best (3, 3) is not 6 9 9
INFO:root:XX add new best (3, 3) is not 6 9 9
INFO:root:XX add new best (3, 3) is not 6 9 9
INFO:root:Considering 100 * 1 jobs for minsize=9
INFO:root:Chunked 100 in [9, 9, 9, 9, 8, 8, 8, 8, 8, 8, 8, 8]
INFO:root:XX add new best (3, 3) is not 6 9 9
INFO:root:XX add new best (3, 3) is not 6 9 9
INFO:root:XX add new best (3, 3) is not 6 9 9
INFO:root:XX add new best (3, 3) is not 6 9 9
INFO:root:XX add new best (3, 3) is not 6 9 9
INFO:root:XX add new best (3, 3) is not 6 9 9
INFO:root:XX add new best (3, 3) is not 6 9 9
INFO:root:Trace: [(9, [(3, 3) is not 6])]
INFO:root:Trace Quality: [(9, 1)]
INFO:root:Trace Sorted: [(9, 1)]
INFO:root:Finished
INFO:root:Full Trace [(9, [(3, 3) is not 6])]
INFO:root:Trying {'gallopingMUSes': True}
INFO:root:Starting Step 1
INFO:root:Current state [[[[4, 8], [9], [2], [1, 4, 5], [1, 8], [1, 5, 8], [3], [7], [6]], [[4, 7], [1], [6, 8], [2, 4, 6, 7, 9], [3], [2, 6, 9], [5], [2, 8], [2, 4]], [[3], [5, 6, 7], [5, 6, 8], [2, 4, 6, 7], [2, 6, 7, 8], [2, 6, 8], [1], [9], [2, 4, 8]], [[9], [3], [4, 6], [8], [5], [2, 6], [7], [2, 4], [1]], [[7, 8], [5, 6, 7], [1, 5, 6, 8], [3], [1, 2, 6], [4], [6, 8, 9], [2, 5], [2, 8, 9]], [[2], [5, 6], [1, 4, 5, 6, 8], [1, 6], [9], [7], [6, 8], [4, 5, 8], [3]], [[6], [8], [9], [2, 5, 7], [2, 7], [3], [4], [1], [5, 7]], [[5], [2], [3], [1, 7, 9], [4], [1, 8, 9], [8, 9], [6], [7, 8, 9]], [[1], [4], [7], [5, 6, 9], [6, 8], [5, 6, 8, 9], [2], [3], [5, 8, 9]]]]
INFO:root:Doing checkSmall1
INFO:root:Getting tiny MUSes, distance 1, for 1 puzlits, 1 repeats
INFO:root:Chunked 1 in [1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
INFO:root:Doing checkSmall2
INFO:root:Getting tiny MUSes, distance 2, for 1 puzlits, 1 repeats
INFO:root:Chunked 1 in [1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
INFO:root:Considering 100 * 1 jobs for minsize=3
INFO:root:Chunked 100 in [9, 9, 9, 9, 8, 8, 8, 8, 8, 8, 8, 8]
INFO:root:Considering 100 * 1 jobs for minsize=4
INFO:root:Chunked 100 in [9, 9, 9, 9, 8, 8, 8, 8, 8, 8, 8, 8]
INFO:root:Considering 100 * 1 jobs for minsize=5
INFO:root:Chunked 100 in [9, 9, 9, 9, 8, 8, 8, 8, 8, 8, 8, 8]
INFO:root:Considering 100 * 1 jobs for minsize=6
INFO:root:Chunked 100 in [9, 9, 9, 9, 8, 8, 8, 8, 8, 8, 8, 8]
INFO:root:Considering 100 * 1 jobs for minsize=7
INFO:root:Chunked 100 in [9, 9, 9, 9, 8, 8, 8, 8, 8, 8, 8, 8]
INFO:root:Considering 100 * 1 jobs for minsize=8
INFO:root:Chunked 100 in [9, 9, 9, 9, 8, 8, 8, 8, 8, 8, 8, 8]
INFO:root:XX found first (3, 3) is not 6 9
INFO:root:XX add new best (3, 3) is not 6 9 9
INFO:root:XX add new best (3, 3) is not 6 9 9
INFO:root:XX add new best (3, 3) is not 6 9 9
INFO:root:XX add new best (3, 3) is not 6 9 9
INFO:root:XX add new best (3, 3) is not 6 9 9
INFO:root:Considering 100 * 1 jobs for minsize=9
INFO:root:Chunked 100 in [9, 9, 9, 9, 8, 8, 8, 8, 8, 8, 8, 8]
INFO:root:XX add new best (3, 3) is not 6 9 9
INFO:root:XX add new best (3, 3) is not 6 9 9
INFO:root:XX add new best (3, 3) is not 6 9 9
INFO:root:XX add new best (3, 3) is not 6 9 9
INFO:root:XX add new best (3, 3) is not 6 9 9
INFO:root:XX add new best (3, 3) is not 6 9 9
INFO:root:Trace: [(9, [(3, 3) is not 6])]
INFO:root:Trace Quality: [(9, 1)]
INFO:root:Trace Sorted: [(9, 1)]
INFO:root:Finished
INFO:root:Full Trace [(9, [(3, 3) is not 6])]
INFO:root:Trying {'minPrecheckStepsMUS': True}
INFO:root:Starting Step 1
INFO:root:Current state [[[[4, 8], [9], [2], [1, 4, 5], [1, 8], [1, 5, 8], [3], [7], [6]], [[4, 7], [1], [6, 8], [2, 4, 6, 7, 9], [3], [2, 6, 9], [5], [2, 8], [2, 4]], [[3], [5, 6, 7], [5, 6, 8], [2, 4, 6, 7], [2, 6, 7, 8], [2, 6, 8], [1], [9], [2, 4, 8]], [[9], [3], [4, 6], [8], [5], [2, 6], [7], [2, 4], [1]], [[7, 8], [5, 6, 7], [1, 5, 6, 8], [3], [1, 2, 6], [4], [6, 8, 9], [2, 5], [2, 8, 9]], [[2], [5, 6], [1, 4, 5, 6, 8], [1, 6], [9], [7], [6, 8], [4, 5, 8], [3]], [[6], [8], [9], [2, 5, 7], [2, 7], [3], [4], [1], [5, 7]], [[5], [2], [3], [1, 7, 9], [4], [1, 8, 9], [8, 9], [6], [7, 8, 9]], [[1], [4], [7], [5, 6, 9], [6, 8], [5, 6, 8, 9], [2], [3], [5, 8, 9]]]]
INFO:root:Doing checkSmall1
INFO:root:Getting tiny MUSes, distance 1, for 1 puzlits, 1 repeats
INFO:root:Chunked 1 in [1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
INFO:root:Doing checkSmall2
INFO:root:Getting tiny MUSes, distance 2, for 1 puzlits, 1 repeats
INFO:root:Chunked 1 in [1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
INFO:root:Considering 100 * 1 jobs for minsize=3
INFO:root:Chunked 100 in [9, 9, 9, 9, 8, 8, 8, 8, 8, 8, 8, 8]
INFO:root:Considering 100 * 1 jobs for minsize=4
INFO:root:Chunked 100 in [9, 9, 9, 9, 8, 8, 8, 8, 8, 8, 8, 8]
INFO:root:Considering 100 * 1 jobs for minsize=5
INFO:root:Chunked 100 in [9, 9, 9, 9, 8, 8, 8, 8, 8, 8, 8, 8]
INFO:root:Considering 100 * 1 jobs for minsize=6
INFO:root:Chunked 100 in [9, 9, 9, 9, 8, 8, 8, 8, 8, 8, 8, 8]
INFO:root:Considering 100 * 1 jobs for minsize=7
INFO:root:Chunked 100 in [9, 9, 9, 9, 8, 8, 8, 8, 8, 8, 8, 8]
INFO:root:Considering 100 * 1 jobs for minsize=8
INFO:root:Chunked 100 in [9, 9, 9, 9, 8, 8, 8, 8, 8, 8, 8, 8]
INFO:root:XX found first (3, 3) is not 6 9
INFO:root:XX add new best (3, 3) is not 6 9 9
INFO:root:XX add new best (3, 3) is not 6 9 9
INFO:root:XX add new best (3, 3) is not 6 9 9
INFO:root:XX add new best (3, 3) is not 6 9 9
INFO:root:XX add new best (3, 3) is not 6 9 9
INFO:root:XX add new best (3, 3) is not 6 9 9
INFO:root:XX add new best (3, 3) is not 6 9 9
INFO:root:XX add new best (3, 3) is not 6 9 9
INFO:root:XX add new best (3, 3) is not 6 9 9
INFO:root:Considering 100 * 1 jobs for minsize=9
INFO:root:Chunked 100 in [9, 9, 9, 9, 8, 8, 8, 8, 8, 8, 8, 8]
INFO:root:XX add new best (3, 3) is not 6 9 9
INFO:root:XX add new best (3, 3) is not 6 9 9
INFO:root:XX add new best (3, 3) is not 6 9 9
INFO:root:XX add new best (3, 3) is not 6 9 9
INFO:root:XX add new best (3, 3) is not 6 9 9
INFO:root:XX add new best (3, 3) is not 6 9 9
INFO:root:XX add new best (3, 3) is not 6 9 9
INFO:root:Trace: [(9, [(3, 3) is not 6])]
INFO:root:Trace Quality: [(9, 1)]
INFO:root:Trace Sorted: [(9, 1)]
INFO:root:Finished
INFO:root:Full Trace [(9, [(3, 3) is not 6])]
INFO:root:Trying {'gallopingMUSes': True, 'minPrecheckMUS': True}
INFO:root:Starting Step 1
INFO:root:Current state [[[[4, 8], [9], [2], [1, 4, 5], [1, 8], [1, 5, 8], [3], [7], [6]], [[4, 7], [1], [6, 8], [2, 4, 6, 7, 9], [3], [2, 6, 9], [5], [2, 8], [2, 4]], [[3], [5, 6, 7], [5, 6, 8], [2, 4, 6, 7], [2, 6, 7, 8], [2, 6, 8], [1], [9], [2, 4, 8]], [[9], [3], [4, 6], [8], [5], [2, 6], [7], [2, 4], [1]], [[7, 8], [5, 6, 7], [1, 5, 6, 8], [3], [1, 2, 6], [4], [6, 8, 9], [2, 5], [2, 8, 9]], [[2], [5, 6], [1, 4, 5, 6, 8], [1, 6], [9], [7], [6, 8], [4, 5, 8], [3]], [[6], [8], [9], [2, 5, 7], [2, 7], [3], [4], [1], [5, 7]], [[5], [2], [3], [1, 7, 9], [4], [1, 8, 9], [8, 9], [6], [7, 8, 9]], [[1], [4], [7], [5, 6, 9], [6, 8], [5, 6, 8, 9], [2], [3], [5, 8, 9]]]]
INFO:root:Doing checkSmall1
INFO:root:Getting tiny MUSes, distance 1, for 1 puzlits, 1 repeats
INFO:root:Chunked 1 in [1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
INFO:root:Doing checkSmall2
INFO:root:Getting tiny MUSes, distance 2, for 1 puzlits, 1 repeats
INFO:root:Chunked 1 in [1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
INFO:root:Considering 100 * 1 jobs for minsize=3
INFO:root:Chunked 100 in [9, 9, 9, 9, 8, 8, 8, 8, 8, 8, 8, 8]
INFO:root:Considering 100 * 1 jobs for minsize=4
INFO:root:Chunked 100 in [9, 9, 9, 9, 8, 8, 8, 8, 8, 8, 8, 8]
INFO:root:Considering 100 * 1 jobs for minsize=5
INFO:root:Chunked 100 in [9, 9, 9, 9, 8, 8, 8, 8, 8, 8, 8, 8]
INFO:root:Considering 100 * 1 jobs for minsize=6
INFO:root:Chunked 100 in [9, 9, 9, 9, 8, 8, 8, 8, 8, 8, 8, 8]
INFO:root:Considering 100 * 1 jobs for minsize=7
INFO:root:Chunked 100 in [9, 9, 9, 9, 8, 8, 8, 8, 8, 8, 8, 8]
INFO:root:Considering 100 * 1 jobs for minsize=8
INFO:root:Chunked 100 in [9, 9, 9, 9, 8, 8, 8, 8, 8, 8, 8, 8]
INFO:root:XX found first (3, 3) is not 6 9
INFO:root:XX add new best (3, 3) is not 6 9 9
INFO:root:XX add new best (3, 3) is not 6 9 9
INFO:root:XX add new best (3, 3) is not 6 9 9
INFO:root:XX add new best (3, 3) is not 6 9 9
INFO:root:XX add new best (3, 3) is not 6 9 9
INFO:root:XX add new best (3, 3) is not 6 9 9
INFO:root:XX add new best (3, 3) is not 6 9 9
INFO:root:XX add new best (3, 3) is not 6 9 9
INFO:root:XX add new best (3, 3) is not 6 9 9
INFO:root:Considering 100 * 1 jobs for minsize=9
INFO:root:Chunked 100 in [9, 9, 9, 9, 8, 8, 8, 8, 8, 8, 8, 8]
INFO:root:XX add new best (3, 3) is not 6 9 9
INFO:root:XX add new best (3, 3) is not 6 9 9
INFO:root:XX add new best (3, 3) is not 6 9 9
INFO:root:XX add new best (3, 3) is not 6 9 9
INFO:root:XX add new best (3, 3) is not 6 9 9
INFO:root:XX add new best (3, 3) is not 6 9 9
INFO:root:XX add new best (3, 3) is not 6 9 9
INFO:root:Trace: [(9, [(3, 3) is not 6])]
INFO:root:Trace Quality: [(9, 1)]
INFO:root:Trace Sorted: [(9, 1)]
INFO:root:Finished
INFO:root:Full Trace [(9, [(3, 3) is not 6])]
INFO:root:Trying {}
INFO:root:Starting Step 1
INFO:root:Current state [[[[1, 7], [9], [3], [8], [2], [4], [5], [6], [1, 7]], [[1, 4, 7], [8], [5], [6], [3, 9], [1, 3], [4, 9], [1, 3, 7], [2]], [[2], [1, 4], [6], [1, 3, 9], [7], [5], [4, 9], [1, 3], [8]], [[3], [2], [1], [7], [6], [9], [8], [4], [5]], [[4, 6, 9], [4, 6], [4, 9], [2], [5], [8], [3], [1, 7], [1, 7]], [[5], [7], [8], [1, 3], [4], [1, 3], [2], [9], [6]], [[8], [5], [4, 9], [4, 9], [1], [6], [7], [2], [3]], [[1, 4, 9], [1, 3, 4], [7], [3, 4, 9], [8], [2], [6], [5], [4, 9]], [[6, 9], [3, 4, 6], [2], [5], [3, 9], [7], [1], [8], [4, 9]]]]
INFO:root:Doing checkSmall1
INFO:root:Getting tiny MUSes, distance 1, for 1 puzlits, 1 repeats
INFO:root:Chunked 1 in [1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
INFO:root:Doing checkSmall2
INFO:root:Getting tiny MUSes, distance 2, for 1 puzlits, 1 repeats
INFO:root:Chunked 1 in [1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
INFO:root:Considering 100 * 1 jobs for minsize=3
INFO:root:Chunked 100 in [9, 9, 9, 9, 8, 8, 8, 8, 8, 8, 8, 8]
INFO:root:Considering 100 * 1 jobs for minsize=4
INFO:root:Chunked 100 in [9, 9, 9, 9, 8, 8, 8, 8, 8, 8, 8, 8]
INFO:root:Considering 100 * 1 jobs for minsize=5
INFO:root:Chunked 100 in [9, 9, 9, 9, 8, 8, 8, 8, 8, 8, 8, 8]
INFO:root:Considering 100 * 1 jobs for minsize=6
INFO:root:Chunked 100 in [9, 9, 9, 9, 8, 8, 8, 8, 8, 8, 8, 8]
INFO:root:Considering 100 * 1 jobs for minsize=7
INFO:root:Chunked 100 in [9, 9, 9, 9, 8, 8, 8, 8, 8, 8, 8, 8]
INFO:root:Considering 100 * 1 jobs for minsize=8
INFO:root:Chunked 100 in [9, 9, 9, 9, 8, 8, 8, 8, 8, 8, 8, 8]
INFO:root:Considering 100 * 1 jobs for minsize=9
INFO:root:Chunked 100 in [9, 9, 9, 9, 8, 8, 8, 8, 8, 8, 8, 8]
INFO:root:Considering 100 * 1 jobs for minsize=10
INFO:root:Chunked 100 in [9, 9, 9, 9, 8, 8, 8, 8, 8, 8, 8, 8]
INFO:root:Considering 100 * 1 jobs for minsize=11
INFO:root:Chunked 100 in [9, 9, 9, 9, 8, 8, 8, 8, 8, 8, 8, 8]
INFO:root:XX found first (3, 2) is not 4 12
INFO:root:XX add new best (3, 2) is not 4 12 12
INFO:root:XX add new best (3, 2) is not 4 12 12
INFO:root:XX add new best (3, 2) is not 4 12 12
INFO:root:XX add new best (3, 2) is not 4 12 12
INFO:root:XX add new best (3, 2) is not 4 12 12
INFO:root:XX add new best (3, 2) is not 4 12 12
INFO:root:XX add new best (3, 2) is not 4 12 12
INFO:root:XX add new best (3, 2) is not 4 12 12
INFO:root:XX add new best (3, 2) is not 4 12 12
INFO:root:XX add new best (3, 2) is not 4 12 12
INFO:root:XX add new best (3, 2) is not 4 12 12
INFO:root:XX add new best (3, 2) is not 4 12 12
INFO:root:XX add new best (3, 2) is not 4 12 12
INFO:root:XX add new best (3, 2) is not 4 12 12
INFO:root:XX add new best (3, 2) is not 4 12 12
INFO:root:XX add new best (3, 2) is not 4 12 12
INFO:root:XX add new best (3, 2) is not 4 12 12
INFO:root:XX add new best (3, 2) is not 4 12 12
INFO:root:XX add new best (3, 2) is not 4 12 12
INFO:root:XX add new best (3, 2) is not 4 12 12
INFO:root:XX add new best (3, 2) is not 4 12 12
INFO:root:XX add new best (3, 2) is not 4 12 12
INFO:root:XX add new best (3, 2) is not 4 12 12
INFO:root:XX add new best (3, 2) is not 4 12 12
INFO:root:XX add new best (3, 2) is not 4 12 12
INFO:root:XX add new best (3, 2) is not 4 12 12
INFO:root:XX add new best (3, 2) is not 4 12 12
INFO:root:XX add new best (3, 2) is not 4 12 12
INFO:root:XX add new best (3, 2) is not 4 12 12
INFO:root:XX add new best (3, 2) is not 4 12 12
INFO:root:XX add new best (3, 2) is not 4 12 12
INFO:root:XX add new best (3, 2) is not 4 12 12
INFO:root:XX add new best (3, 2) is not 4 12 12
INFO:root:XX add new best (3, 2) is not 4 12 12
INFO:root:XX add new best (3, 2) is not 4 12 12
INFO:root:XX add new best (3, 2) is not 4 12 12
INFO:root:XX add new best (3, 2) is not 4 12 12
INFO:root:XX add new best (3, 2) is not 4 12 12
INFO:root:XX add new best (3, 2) is not 4 12 12
INFO:root:XX add new best (3, 2) is not 4 12 12
INFO:root:XX add new best (3, 2) is not 4 12 12
INFO:root:XX add new best (3, 2) is not 4 12 12
INFO:root:XX add new best (3, 2) is not 4 12 12
INFO:root:XX add new best (3, 2) is not 4 12 12
INFO:root:XX add new best (3, 2) is not 4 12 12
INFO:root:XX add new best (3, 2) is not 4 12 12
INFO:root:XX add new best (3, 2) is not 4 12 12
INFO:root:XX add new best (3, 2) is not 4 12 12
INFO:root:XX add new best (3, 2) is not 4 12 12
INFO:root:XX add new best (3, 2) is not 4 12 12
INFO:root:XX add new best (3, 2) is not 4 12 12
INFO:root:XX add new best (3, 2) is not 4 12 12
INFO:root:XX add new best (3, 2) is not 4 12 12
INFO:root:XX add new best (3, 2) is not 4 12 12
INFO:root:XX add new best (3, 2) is not 4 12 12
INFO:root:XX add new best (3, 2) is not 4 12 12
INFO:root:XX add new best (3, 2) is not 4 12 12
INFO:root:XX add new best (3, 2) is not 4 12 12
INFO:root:XX add new best (3, 2) is not 4 12 12
INFO:root:XX add new best (3, 2) is not 4 12 12
INFO:root:XX add new best (3, 2) is not 4 12 12
INFO:root:XX add new best (3, 2) is not 4 12 12
INFO:root:XX add new best (3, 2) is not 4 12 12
INFO:root:XX add new best (3, 2) is not 4 12 12
INFO:root:XX add new best (3, 2) is not 4 12 12
INFO:root:XX add new best (3, 2) is not 4 12 12
INFO:root:XX add new best (3, 2) is not 4 12 12
INFO:root:XX add new best (3, 2) is not 4 12 12
INFO:root:XX add new best (3, 2) is not 4 12 12
INFO:root:XX add new best (3, 2) is not 4 12 12
INFO:root:XX add new best (3, 2) is not 4 12 12
INFO:root:XX add new best (3, 2) is not 4 12 12
INFO:root:XX add new best (3, 2) is not 4 12 12
INFO:root:XX add new best (3, 2) is not 4 12 12
INFO:root:XX add new best (3, 2) is not 4 12 12
INFO:root:XX add new best (3, 2) is not 4 12 12
INFO:root:XX add new best (3, 2) is not 4 12 12
INFO:root:XX add new best (3, 2) is not 4 12 12
INFO:root:XX add new best (3, 2) is not 4 12 12
INFO:root:XX add new best (3, 2) is not 4 12 12
INFO:root:XX add new best (3, 2) is not 4 12 12
INFO:root:XX add new best (3, 2) is not 4 12 12
INFO:root:XX add new best (3, 2) is not 4 12 12
INFO:root:XX add new best (3, 2) is not 4 12 12
INFO:root:XX add new best (3, 2) is not 4 12 12
INFO:root:XX add new best (3, 2) is not 4 12 12
INFO:root:XX add new best (3, 2) is not 4 12 12
INFO:root:XX add new best (3, 2) is not 4 12 12
INFO:root:XX add new best (3, 2) is not 4 12 12
INFO:root:XX add new best (3, 2) is not 4 12 12
INFO:root:XX add new best (3, 2) is not 4 12 12
INFO:root:XX add new best (3, 2) is not 4 12 12
INFO:root:XX add new best (3, 2) is not 4 12 12
INFO:root:XX add new best (3, 2) is not 4 12 12
INFO:root:XX add new best (3, 2) is not 4 12 12
INFO:root:XX add new best (3, 2) is not 4 12 12
INFO:root:XX add new best (3, 2) is not 4 12 12
INFO:root:XX add new best (3, 2) is not 4 12 12
INFO:root:Considering 100 * 1 jobs for minsize=12
INFO:root:Chunked 100 in [9, 9, 9, 9, 8, 8, 8, 8, 8, 8, 8, 8]
INFO:root:XX add new best (3, 2) is not 4 12 12
INFO:root:XX add new best (3, 2) is not 4 12 12
INFO:root:XX add new best (3, 2) is not 4 12 12
INFO:root:XX add new best (3, 2) is not 4 12 12
INFO:root:XX add new best (3, 2) is not 4 12 12
INFO:root:XX add new best (3, 2) is not 4 12 12
INFO:root:XX add new best (3, 2) is not 4 12 12
INFO:root:XX add new best (3, 2) is not 4 12 12
INFO:root:XX add new best (3, 2) is not 4 12 12
INFO:root:XX add new best (3, 2) is not 4 12 12
INFO:root:XX add new best (3, 2) is not 4 12 12
INFO:root:XX add new best (3, 2) is not 4 12 12
INFO:root:XX add new best (3, 2) is not 4 12 12
INFO:root:XX add new best (3, 2) is not 4 12 12
INFO:root:XX add new best (3, 2) is not 4 12 12
INFO:root:XX add new best (3, 2) is not 4 12 12
INFO:root:XX add new best (3, 2) is not 4 12 12
INFO:root:XX add new best (3, 2) is not 4 12 12
INFO:root:XX add new best (3, 2) is not 4 12 12
INFO:root:XX add new best (3, 2) is not 4 12 12
INFO:root:XX add new best (3, 2) is not 4 12 12
INFO:root:XX add new best (3, 2) is not 4 12 12
INFO:root:XX add new best (3, 2) is not 4 12 12
INFO:root:XX add new best (3, 2) is not 4 12 12
INFO:root:XX add new best (3, 2) is not 4 12 12
INFO:root:XX add new best (3, 2) is not 4 12 12
INFO:root:XX add new best (3, 2) is not 4 12 12
INFO:root:XX add new best (3, 2) is not 4 12 12
INFO:root:XX add new best (3, 2) is not 4 12 12
INFO:root:XX add new best (3, 2) is not 4 12 12
INFO:root:XX add new best (3, 2) is not 4 12 12
INFO:root:XX add new best (3, 2) is not 4 12 12
INFO:root:XX add new best (3, 2) is not 4 12 12
INFO:root:XX add new best (3, 2) is not 4 12 12
INFO:root:XX add new best (3, 2) is not 4 12 12
INFO:root:XX add new best (3, 2) is not 4 12 12
INFO:root:XX add new best (3, 2) is not 4 12 12
INFO:root:XX add new best (3, 2) is not 4 12 12
INFO:root:XX add new best (3, 2) is not 4 12 12
INFO:root:XX add new best (3, 2) is not 4 12 12
INFO:root:XX add new best (3, 2) is not 4 12 12
INFO:root:XX add new best (3, 2) is not 4 12 12
INFO:root:XX add new best (3, 2) is not 4 12 12
INFO:root:XX add new best (3, 2) is not 4 12 12
INFO:root:XX add new best (3, 2) is not 4 12 12
INFO:root:XX add new best (3, 2) is not 4 12 12
INFO:root:XX add new best (3, 2) is not 4 12 12
INFO:root:XX add new best (3, 2) is not 4 12 12
INFO:root:XX add new best (3, 2) is not 4 12 12
INFO:root:XX add new best (3, 2) is not 4 12 12
INFO:root:XX add new best (3, 2) is not 4 12 12
INFO:root:XX add new best (3, 2) is not 4 12 12
INFO:root:XX add new best (3, 2) is not 4 12 12
INFO:root:XX add new best (3, 2) is not 4 12 12
INFO:root:XX add new best (3, 2) is not 4 12 12
INFO:root:XX add new best (3, 2) is not 4 12 12
INFO:root:XX add new best (3, 2) is not 4 12 12
INFO:root:XX add new best (3, 2) is not 4 12 12
INFO:root:XX add new best (3, 2) is not 4 12 12
INFO:root:XX add new best (3, 2) is not 4 12 12
INFO:root:XX add new best (3, 2) is not 4 12 12
INFO:root:XX add new best (3, 2) is not 4 12 12
INFO:root:XX add new best (3, 2) is not 4 12 12
INFO:root:XX add new best (3, 2) is not 4 12 12
INFO:root:XX add new best (3, 2) is not 4 12 12
INFO:root:XX add new best (3, 2) is not 4 12 12
INFO:root:XX add new best (3, 2) is not 4 12 12
INFO:root:XX add new best (3, 2) is not 4 12 12
INFO:root:XX add new best (3, 2) is not 4 12 12
INFO:root:XX add new best (3, 2) is not 4 12 12
INFO:root:XX add new best (3, 2) is not 4 12 12
INFO:root:XX add new best (3, 2) is not 4 12 12
INFO:root:XX add new best (3, 2) is not 4 12 12
INFO:root:XX add new best (3, 2) is not 4 12 12
INFO:root:XX add new best (3, 2) is not 4 12 12
INFO:root:XX add new best (3, 2) is not 4 12 12
INFO:root:XX add new best (3, 2) is not 4 12 12
INFO:root:XX add new best (3, 2) is not 4 12 12
INFO:root:XX add new best (3, 2) is not 4 12 12
INFO:root:XX add new best (3, 2) is not 4 12 12
INFO:root:XX add new best (3, 2) is not 4 12 12
INFO:root:XX add new best (3, 2) is not 4 12 12
INFO:root:XX add new best (3, 2) is not 4 12 12
INFO:root:XX add new best (3, 2) is not 4 12 12
INFO:root:XX add new best (3, 2) is not 4 12 12
INFO:root:XX add new best (3, 2) is not 4 12 12
INFO:root:XX add new best (3, 2) is not 4 12 12
INFO:root:XX add new best (3, 2) is not 4 12 12
INFO:root:XX add new best (3, 2) is not 4 12 12
INFO:root:XX add new best (3, 2) is not 4 12 12
INFO:root:XX add new best (3, 2) is not 4 12 12
INFO:root:XX add new best (3, 2) is not 4 12 12
INFO:root:XX add new best (3, 2) is not 4 12 12
INFO:root:XX add new best (3, 2) is not 4 12 12
INFO:root:XX add new best (3, 2) is not 4 12 12
INFO:root:XX add new best (3, 2) is not 4 12 12
INFO:root:XX add new best (3, 2) is not 4 12 12
INFO:root:XX add new best (3, 2) is not 4 12 12
INFO:root:XX add new best (3, 2) is not 4 12 12
INFO:root:Trace: [(12, [(3, 2) is not 4])]
INFO:root:Trace Quality: [(12, 1)]
INFO:root:Trace Sorted: [(12, 1)]
INFO:root:Finished
INFO:root:Full Trace [(12, [(3, 2) is not 4])]
INFO:root:Trying {'prechopMUSes': True}
INFO:root:Starting Step 1
INFO:root:Current state [[[[1, 7], [9], [3], [8], [2], [4], [5], [6], [1, 7]], [[1, 4, 7], [8], [5], [6], [3, 9], [1, 3], [4, 9], [1, 3, 7], [2]], [[2], [1, 4], [6], [1, 3, 9], [7], [5], [4, 9], [1, 3], [8]], [[3], [2], [1], [7], [6], [9], [8], [4], [5]], [[4, 6, 9], [4, 6], [4, 9], [2], [5], [8], [3], [1, 7], [1, 7]], [[5], [7], [8], [1, 3], [4], [1, 3], [2], [9], [6]], [[8], [5], [4, 9], [4, 9], [1], [6], [7], [2], [3]], [[1, 4, 9], [1, 3, 4], [7], [3, 4, 9], [8], [2], [6], [5], [4, 9]], [[6, 9], [3, 4, 6], [2], [5], [3, 9], [7], [1], [8], [4, 9]]]]
INFO:root:Doing checkSmall1
INFO:root:Getting tiny MUSes, distance 1, for 1 puzlits, 1 repeats
INFO:root:Chunked 1 in [1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
INFO:root:Doing checkSmall2
INFO:root:Getting tiny MUSes, distance 2, for 1 puzlits, 1 repeats
INFO:root:Chunked 1 in [1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
INFO:root:Considering 100 * 1 jobs for minsize=3
INFO:root:Chunked 100 in [9, 9, 9, 9, 8, 8, 8, 8, 8, 8, 8, 8]
INFO:root:Considering 100 * 1 jobs for minsize=4
INFO:root:Chunked 100 in [9, 9, 9, 9, 8, 8, 8, 8, 8, 8, 8, 8]
INFO:root:Considering 100 * 1 jobs for minsize=5
INFO:root:Chunked 100 in [9, 9, 9, 9, 8, 8, 8, 8, 8, 8, 8, 8]
INFO:root:Considering 100 * 1 jobs for minsize=6
INFO:root:Chunked 100 in [9, 9, 9, 9, 8, 8, 8, 8, 8, 8, 8, 8]
INFO:root:Considering 100 * 1 jobs for minsize=7
INFO:root:Chunked 100 in [9, 9, 9, 9, 8, 8, 8, 8, 8, 8, 8, 8]
INFO:root:Considering 100 * 1 jobs for minsize=8
INFO:root:Chunked 100 in [9, 9, 9, 9, 8, 8, 8, 8, 8, 8, 8, 8]
INFO:root:Considering 100 * 1 jobs for minsize=9
INFO:root:Chunked 100 in [9, 9, 9, 9, 8, 8, 8, 8, 8, 8, 8, 8]
INFO:root:Considering 100 * 1 jobs for minsize=10
INFO:root:Chunked 100 in [9, 9, 9, 9, 8, 8, 8, 8, 8, 8, 8, 8]
INFO:root:XX found first (3, 2) is not 4 11
INFO:root:XX add new best (3, 2) is not 4 11 11
INFO:root:XX add new best (3, 2) is not 4 11 11
INFO:root:XX add new best (3, 2) is not 4 11 11
INFO:root:XX add new best (3, 2) is not 4 11 11
INFO:root:XX add new best (3, 2) is not 4 11 11
INFO:root:XX add new best (3, 2) is not 4 11 11
INFO:root:XX add new best (3, 2) is not 4 11 11
INFO:root:Considering 100 * 1 jobs for minsize=11
INFO:root:Chunked 100 in [9, 9, 9, 9, 8, 8, 8, 8, 8, 8, 8, 8]
INFO:root:XX add new best (3, 2) is not 4 11 11
INFO:root:XX add new best (3, 2) is not 4 11 11
INFO:root:XX add new best (3, 2) is not 4 11 11
INFO:root:XX add new best (3, 2) is not 4 11 11
INFO:root:XX add new best (3, 2) is not 4 11 11
INFO:root:XX add new best (3, 2) is not 4 11 11
INFO:root:XX add new best (3, 2) is not 4 11 11
INFO:root:XX add new best (3, 2) is not 4 11 11
INFO:root:Trace: [(11, [(3, 2) is not 4])]
INFO:root:Trace Quality: [(11, 1)]
INFO:root:Trace Sorted: [(11, 1)]
INFO:root:Finished
INFO:root:Full Trace [(11, [(3, 2) is not 4])]
INFO:root:Trying {'quarterChopMUS': True}
INFO:root:Starting Step 1
INFO:root:Current state [[[[1, 7], [9], [3], [8], [2], [4], [5], [6], [1, 7]], [[1, 4, 7], [8], [5], [6], [3, 9], [1, 3], [4, 9], [1, 3, 7], [2]], [[2], [1, 4], [6], [1, 3, 9], [7], [5], [4, 9], [1, 3], [8]], [[3], [2], [1], [7], [6], [9], [8], [4], [5]], [[4, 6, 9], [4, 6], [4, 9], [2], [5], [8], [3], [1, 7], [1, 7]], [[5], [7], [8], [1, 3], [4], [1, 3], [2], [9], [6]], [[8], [5], [4, 9], [4, 9], [1], [6], [7], [2], [3]], [[1, 4, 9], [1, 3, 4], [7], [3, 4, 9], [8], [2], [6], [5], [4, 9]], [[6, 9], [3, 4, 6], [2], [5], [3, 9], [7], [1], [8], [4, 9]]]]
INFO:root:Doing checkSmall1
INFO:root:Getting tiny MUSes, distance 1, for 1 puzlits, 1 repeats
INFO:root:Chunked 1 in [1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
INFO:root:Doing checkSmall2
INFO:root:Getting tiny MUSes, distance 2, for 1 puzlits, 1 repeats
INFO:root:Chunked 1 in [1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
INFO:root:Considering 100 * 1 jobs for minsize=3
INFO:root:Chunked 100 in [9, 9, 9, 9, 8, 8, 8, 8, 8, 8, 8, 8]
INFO:root:Considering 100 * 1 jobs for minsize=4
INFO:root:Chunked 100 in [9, 9, 9, 9, 8, 8, 8, 8, 8, 8, 8, 8]
INFO:root:Considering 100 * 1 jobs for minsize=5
INFO:root:Chunked 100 in [9, 9, 9, 9, 8, 8, 8, 8, 8, 8, 8, 8]
INFO:root:Considering 100 * 1 jobs for minsize=6
INFO:root:Chunked 100 in [9, 9, 9, 9, 8, 8, 8, 8, 8, 8, 8, 8]
INFO:root:Considering 100 * 1 jobs for minsize=7
INFO:root:Chunked 100 in [9, 9, 9, 9, 8, 8, 8, 8, 8, 8, 8, 8]
INFO:root:Considering 100 * 1 jobs for minsize=8
INFO:root:Chunked 100 in [9, 9, 9, 9, 8, 8, 8, 8, 8, 8, 8, 8]
INFO:root:Considering 100 * 1 jobs for minsize=9
INFO:root:Chunked 100 in [9, 9, 9, 9, 8, 8, 8, 8, 8, 8, 8, 8]
INFO:root:Considering 100 * 1 jobs for minsize=10
INFO:root:Chunked 100 in [9, 9, 9, 9, 8, 8, 8, 8, 8, 8, 8, 8]
INFO:root:XX found first (3, 2) is not 4 11
INFO:root:XX add new best (3, 2) is not 4 11 11
INFO:root:XX add new best (3, 2) is not 4 11 11
INFO:root:XX add new best (3, 2) is not 4 11 11
INFO:root:XX add new best (3, 2) is not 4 11 11
INFO:root:XX add new best (3, 2) is not 4 11 11
INFO:root:XX add new best (3, 2) is not 4 11 11
INFO:root:XX add new best (3, 2) is not 4 11 11
INFO:root:XX add new best (3, 2) is not 4 11 11
INFO:root:XX add new best (3, 2) is not 4 11 11
INFO:root:XX add new best (3, 2) is not 4 11 11
INFO:root:Considering 100 * 1 jobs for minsize=11
INFO:root:Chunked 100 in [9, 9, 9, 9, 8, 8, 8, 8, 8, 8, 8, 8]
INFO:root:XX add new best (3, 2) is not 4 11 11
INFO:root:XX add new best (3, 2) is not 4 11 11
INFO:root:XX add new best (3, 2) is not 4 11 11
INFO:root:XX add new best (3, 2) is not 4 11 11
INFO:root:XX add new best (3, 2) is not 4 11 11
INFO:root:XX add new best (3, 2) is not 4 11 11
INFO:root:XX add new best (3, 2) is not 4 11 11
INFO:root:XX add new best (3, 2) is not 4 11 11
INFO:root:XX add new best (3, 2) is not 4 11 11
INFO:root:XX add new best (3, 2) is not 4 11 11
INFO:root:XX add new best (3, 2) is not 4 11 11
INFO:root:XX add new best (3, 2) is not 4 11 11
INFO:root:XX add new best (3, 2) is not 4 11 11
INFO:root:Trace: [(11, [(3, 2) is not 4])]
INFO:root:Trace Quality: [(11, 1)]
INFO:root:Trace Sorted: [(11, 1)]
INFO:root:Finished
INFO:root:Full Trace [(11, [(3, 2) is not 4])]
INFO:root:Trying {'minPrecheckMUS': True}
INFO:root:Starting Step 1
INFO:root:Current state [[[[1, 7], [9], [3], [8], [2], [4], [5], [6], [1, 7]], [[1, 4, 7], [8], [5], [6], [3, 9], [1, 3], [4, 9], [1, 3, 7], [2]], [[2], [1, 4], [6], [1, 3, 9], [7], [5], [4, 9], [1, 3], [8]], [[3], [2], [1], [7], [6], [9], [8], [4], [5]], [[4, 6, 9], [4, 6], [4, 9], [2], [5], [8], [3], [1, 7], [1, 7]], [[5], [7], [8], [1, 3], [4], [1, 3], [2], [9], [6]], [[8], [5], [4, 9], [4, 9], [1], [6], [7], [2], [3]], [[1, 4, 9], [1, 3, 4], [7], [3, 4, 9], [8], [2], [6], [5], [4, 9]], [[6, 9], [3, 4, 6], [2], [5], [3, 9], [7], [1], [8], [4, 9]]]]
INFO:root:Doing checkSmall1
INFO:root:Getting tiny MUSes, distance 1, for 1 puzlits, 1 repeats
INFO:root:Chunked 1 in [1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
INFO:root:Doing checkSmall2
INFO:root:Getting tiny MUSes, distance 2, for 1 puzlits, 1 repeats
INFO:root:Chunked 1 in [1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
INFO:root:Considering 100 * 1 jobs for minsize=3
INFO:root:Chunked 100 in [9, 9, 9, 9, 8, 8, 8, 8, 8, 8, 8, 8]
INFO:root:Considering 100 * 1 jobs for minsize=4
INFO:root:Chunked 100 in [9, 9, 9, 9, 8, 8, 8, 8, 8, 8, 8, 8]
INFO:root:Considering 100 * 1 jobs for minsize=5
INFO:root:Chunked 100 in [9, 9, 9, 9, 8, 8, 8, 8, 8, 8, 8, 8]
INFO:root:Considering 100 * 1 jobs for minsize=6
INFO:root:Chunked 100 in [9, 9, 9, 9, 8, 8, 8, 8, 8, 8, 8, 8]
INFO:root:Considering 100 * 1 jobs for minsize=7
INFO:root:Chunked 100 in [9, 9, 9, 9, 8, 8, 8, 8, 8, 8, 8, 8]
INFO:root:Considering 100 * 1 jobs for minsize=8
INFO:root:Chunked 100 in [9, 9, 9, 9, 8, 8, 8, 8, 8, 8, 8, 8]
INFO:root:Considering 100 * 1 jobs for minsize=9
INFO:root:Chunked 100 in [9, 9, 9, 9, 8, 8, 8, 8, 8, 8, 8, 8]
INFO:root:Considering 100 * 1 jobs for minsize=10
INFO:root:Chunked 100 in [9, 9, 9, 9, 8, 8, 8, 8, 8, 8, 8, 8]
INFO:root:XX found first (3, 2) is not 4 11
INFO:root:XX add new best (3, 2) is not 4 11 11
INFO:root:XX add new best (3, 2) is not 4 11 11
INFO:root:XX add new best (3, 2) is not 4 11 11
INFO:root:Considering 100 * 1 jobs for minsize=11
INFO:root:Chunked 100 in [9, 9, 9, 9, 8, 8, 8, 8, 8, 8, 8, 8]
INFO:root:XX add new best (3, 2) is not 4 11 11
INFO:root:XX add new best (3, 2) is not 4 11 11
INFO:root:XX add new best (3, 2) is not 4 11 11
INFO:root:XX add new best (3, 2) is not 4 11 11
INFO:root:XX add new best (3, 2) is not 4 11 11
INFO:root:XX add new best (3, 2) is not 4 11 11
INFO:root:XX add new best (3, 2) is not 4 11 11
INFO:root:Trace: [(11, [(3, 2) is not 4])]
INFO:root:Trace Quality: [(11, 1)]
INFO:root:Trace Sorted: [(11, 1)]
INFO:root:Finished
INFO:root:Full Trace [(11, [(3, 2) is not 4])]
INFO:root:Trying {'gallopingMUSes': True}
INFO:root:Starting Step 1
INFO:root:Current state [[[[1, 7], [9], [3], [8], [2], [4], [5], [6], [1, 7]], [[1, 4, 7], [8], [5], [6], [3, 9], [1, 3], [4, 9], [1, 3, 7], [2]], [[2], [1, 4], [6], [1, 3, 9], [7], [5], [4, 9], [1, 3], [8]], [[3], [2], [1], [7], [6], [9], [8], [4], [5]], [[4, 6, 9], [4, 6], [4, 9], [2], [5], [8], [3], [1, 7], [1, 7]], [[5], [7], [8], [1, 3], [4], [1, 3], [2], [9], [6]], [[8], [5], [4, 9], [4, 9], [1], [6], [7], [2], [3]], [[1, 4, 9], [1, 3, 4], [7], [3, 4, 9], [8], [2], [6], [5], [4, 9]], [[6, 9], [3, 4, 6], [2], [5], [3, 9], [7], [1], [8], [4, 9]]]]
INFO:root:Doing checkSmall1
INFO:root:Getting tiny MUSes, distance 1, for 1 puzlits, 1 repeats
INFO:root:Chunked 1 in [1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
INFO:root:Doing checkSmall2
INFO:root:Getting tiny MUSes, distance 2, for 1 puzlits, 1 repeats
INFO:root:Chunked 1 in [1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
INFO:root:Considering 100 * 1 jobs for minsize=3
INFO:root:Chunked 100 in [9, 9, 9, 9, 8, 8, 8, 8, 8, 8, 8, 8]
INFO:root:Considering 100 * 1 jobs for minsize=4
INFO:root:Chunked 100 in [9, 9, 9, 9, 8, 8, 8, 8, 8, 8, 8, 8]
INFO:root:Considering 100 * 1 jobs for minsize=5
INFO:root:Chunked 100 in [9, 9, 9, 9, 8, 8, 8, 8, 8, 8, 8, 8]
INFO:root:Considering 100 * 1 jobs for minsize=6
INFO:root:Chunked 100 in [9, 9, 9, 9, 8, 8, 8, 8, 8, 8, 8, 8]
INFO:root:Considering 100 * 1 jobs for minsize=7
INFO:root:Chunked 100 in [9, 9, 9, 9, 8, 8, 8, 8, 8, 8, 8, 8]
INFO:root:Considering 100 * 1 jobs for minsize=8
INFO:root:Chunked 100 in [9, 9, 9, 9, 8, 8, 8, 8, 8, 8, 8, 8]
INFO:root:Considering 100 * 1 jobs for minsize=9
INFO:root:Chunked 100 in [9, 9, 9, 9, 8, 8, 8, 8, 8, 8, 8, 8]
INFO:root:Considering 100 * 1 jobs for minsize=10
INFO:root:Chunked 100 in [9, 9, 9, 9, 8, 8, 8, 8, 8, 8, 8, 8]
INFO:root:XX found first (3, 2) is not 4 11
INFO:root:XX add new best (3, 2) is not 4 11 11
INFO:root:XX add new best (3, 2) is not 4 11 11
INFO:root:XX add new best (3, 2) is not 4 11 11
INFO:root:Considering 100 * 1 jobs for minsize=11
INFO:root:Chunked 100 in [9, 9, 9, 9, 8, 8, 8, 8, 8, 8, 8, 8]
INFO:root:XX add new best (3, 2) is not 4 11 11
INFO:root:XX add new best (3, 2) is not 4 11 11
INFO:root:XX add new best (3, 2) is not 4 11 11
INFO:root:XX add new best (3, 2) is not 4 11 11
INFO:root:XX add new best (3, 2) is not 4 11 11
INFO:root:Trace: [(11, [(3, 2) is not 4])]
INFO:root:Trace Quality: [(11, 1)]
INFO:root:Trace Sorted: [(11, 1)]
INFO:root:Finished
INFO:root:Full Trace [(11, [(3, 2) is not 4])]
INFO:root:Trying {'minPrecheckStepsMUS': True}
INFO:root:Starting Step 1
INFO:root:Current state [[[[1, 7], [9], [3], [8], [2], [4], [5], [6], [1, 7]], [[1, 4, 7], [8], [5], [6], [3, 9], [1, 3], [4, 9], [1, 3, 7], [2]], [[2], [1, 4], [6], [1, 3, 9], [7], [5], [4, 9], [1, 3], [8]], [[3], [2], [1], [7], [6], [9], [8], [4], [5]], [[4, 6, 9], [4, 6], [4, 9], [2], [5], [8], [3], [1, 7], [1, 7]], [[5], [7], [8], [1, 3], [4], [1, 3], [2], [9], [6]], [[8], [5], [4, 9], [4, 9], [1], [6], [7], [2], [3]], [[1, 4, 9], [1, 3, 4], [7], [3, 4, 9], [8], [2], [6], [5], [4, 9]], [[6, 9], [3, 4, 6], [2], [5], [3, 9], [7], [1], [8], [4, 9]]]]
INFO:root:Doing checkSmall1
INFO:root:Getting tiny MUSes, distance 1, for 1 puzlits, 1 repeats
INFO:root:Chunked 1 in [1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
INFO:root:Doing checkSmall2
INFO:root:Getting tiny MUSes, distance 2, for 1 puzlits, 1 repeats
INFO:root:Chunked 1 in [1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
INFO:root:Considering 100 * 1 jobs for minsize=3
INFO:root:Chunked 100 in [9, 9, 9, 9, 8, 8, 8, 8, 8, 8, 8, 8]
INFO:root:Considering 100 * 1 jobs for minsize=4
INFO:root:Chunked 100 in [9, 9, 9, 9, 8, 8, 8, 8, 8, 8, 8, 8]
INFO:root:Considering 100 * 1 jobs for minsize=5
INFO:root:Chunked 100 in [9, 9, 9, 9, 8, 8, 8, 8, 8, 8, 8, 8]
INFO:root:Considering 100 * 1 jobs for minsize=6
INFO:root:Chunked 100 in [9, 9, 9, 9, 8, 8, 8, 8, 8, 8, 8, 8]
INFO:root:Considering 100 * 1 jobs for minsize=7
INFO:root:Chunked 100 in [9, 9, 9, 9, 8, 8, 8, 8, 8, 8, 8, 8]
INFO:root:Considering 100 * 1 jobs for minsize=8
INFO:root:Chunked 100 in [9, 9, 9, 9, 8, 8, 8, 8, 8, 8, 8, 8]
INFO:root:Considering 100 * 1 jobs for minsize=9
INFO:root:Chunked 100 in [9, 9, 9, 9, 8, 8, 8, 8, 8, 8, 8, 8]
INFO:root:Considering 100 * 1 jobs for minsize=10
INFO:root:Chunked 100 in [9, 9, 9, 9, 8, 8, 8, 8, 8, 8, 8, 8]
INFO:root:XX found first (3, 2) is not 4 11
INFO:root:XX add new best (3, 2) is not 4 11 11
INFO:root:XX add new best (3, 2) is not 4 11 11
INFO:root:Considering 100 * 1 jobs for minsize=11
INFO:root:Chunked 100 in [9, 9, 9, 9, 8, 8, 8, 8, 8, 8, 8, 8]
INFO:root:XX add new best (3, 2) is not 4 11 11
INFO:root:XX add new best (3, 2) is not 4 11 11
INFO:root:XX add new best (3, 2) is not 4 11 11
INFO:root:XX add new best (3, 2) is not 4 11 11
INFO:root:XX add new best (3, 2) is not 4 11 11
INFO:root:XX add new best (3, 2) is not 4 11 11
INFO:root:XX add new best (3, 2) is not 4 11 11
INFO:root:Trace: [(11, [(3, 2) is not 4])]
INFO:root:Trace Quality: [(11, 1)]
INFO:root:Trace Sorted: [(11, 1)]
INFO:root:Finished
INFO:root:Full Trace [(11, [(3, 2) is not 4])]
INFO:root:Trying {'gallopingMUSes': True, 'minPrecheckMUS': True}
INFO:root:Starting Step 1
INFO:root:Current state [[[[1, 7], [9], [3], [8], [2], [4], [5], [6], [1, 7]], [[1, 4, 7], [8], [5], [6], [3, 9], [1, 3], [4, 9], [1, 3, 7], [2]], [[2], [1, 4], [6], [1, 3, 9], [7], [5], [4, 9], [1, 3], [8]], [[3], [2], [1], [7], [6], [9], [8], [4], [5]], [[4, 6, 9], [4, 6], [4, 9], [2], [5], [8], [3], [1, 7], [1, 7]], [[5], [7], [8], [1, 3], [4], [1, 3], [2], [9], [6]], [[8], [5], [4, 9], [4, 9], [1], [6], [7], [2], [3]], [[1, 4, 9], [1, 3, 4], [7], [3, 4, 9], [8], [2], [6], [5], [4, 9]], [[6, 9], [3, 4, 6], [2], [5], [3, 9], [7], [1], [8], [4, 9]]]]
INFO:root:Doing checkSmall1
INFO:root:Getting tiny MUSes, distance 1, for 1 puzlits, 1 repeats
INFO:root:Chunked 1 in [1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
INFO:root:Doing checkSmall2
INFO:root:Getting tiny MUSes, distance 2, for 1 puzlits, 1 repeats
INFO:root:Chunked 1 in [1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
INFO:root:Considering 100 * 1 jobs for minsize=3
INFO:root:Chunked 100 in [9, 9, 9, 9, 8, 8, 8, 8, 8, 8, 8, 8]
INFO:root:Considering 100 * 1 jobs for minsize=4
INFO:root:Chunked 100 in [9, 9, 9, 9, 8, 8, 8, 8, 8, 8, 8, 8]
INFO:root:Considering 100 * 1 jobs for minsize=5
INFO:root:Chunked 100 in [9, 9, 9, 9, 8, 8, 8, 8, 8, 8, 8, 8]
INFO:root:Considering 100 * 1 jobs for minsize=6
INFO:root:Chunked 100 in [9, 9, 9, 9, 8, 8, 8, 8, 8, 8, 8, 8]
INFO:root:Considering 100 * 1 jobs for minsize=7
INFO:root:Chunked 100 in [9, 9, 9, 9, 8, 8, 8, 8, 8, 8, 8, 8]
INFO:root:Considering 100 * 1 jobs for minsize=8
INFO:root:Chunked 100 in [9, 9, 9, 9, 8, 8, 8, 8, 8, 8, 8, 8]
INFO:root:Considering 100 * 1 jobs for minsize=9
INFO:root:Chunked 100 in [9, 9, 9, 9, 8, 8, 8, 8, 8, 8, 8, 8]
INFO:root:Considering 100 * 1 jobs for minsize=10
INFO:root:Chunked 100 in [9, 9, 9, 9, 8, 8, 8, 8, 8, 8, 8, 8]
INFO:root:XX found first (3, 2) is not 4 11
INFO:root:XX add new best (3, 2) is not 4 11 11
INFO:root:XX add new best (3, 2) is not 4 11 11
INFO:root:Considering 100 * 1 jobs for minsize=11
INFO:root:Chunked 100 in [9, 9, 9, 9, 8, 8, 8, 8, 8, 8, 8, 8]
INFO:root:XX add new best (3, 2) is not 4 11 11
INFO:root:XX add new best (3, 2) is not 4 11 11
INFO:root:XX add new best (3, 2) is not 4 11 11
INFO:root:XX add new best (3, 2) is not 4 11 11
INFO:root:XX add new best (3, 2) is not 4 11 11
INFO:root:XX add new best (3, 2) is not 4 11 11
INFO:root:XX add new best (3, 2) is not 4 11 11
INFO:root:Trace: [(11, [(3, 2) is not 4])]
INFO:root:Trace Quality: [(11, 1)]
INFO:root:Trace Sorted: [(11, 1)]
INFO:root:Finished
INFO:root:Full Trace [(11, [(3, 2) is not 4])]
INFO:root:Trying {}
INFO:root:Starting Step 1
INFO:root:Current state [[[[3], [1, 6, 8], [1, 6, 7, 9], [1, 8, 9], [5], [2], [4, 6], [4, 7, 9], [7, 8, 9]], [[2], [5], [6, 7, 9], [3], [4, 8, 9], [4, 9], [6, 7], [1], [7, 8, 9]], [[1, 9], [1, 8], [4], [6], [1, 8, 9], [7], [5], [2], [3]], [[1, 6], [9], [3], [2], [4, 6, 7], [1, 4], [8], [4, 7], [5]], [[5], [7], [1, 2, 6], [8, 9], [6, 8, 9], [1, 4, 9], [1, 2, 4, 9], [3], [1, 9]], [[4], [1, 2], [8], [7, 9], [3], [5], [1, 7, 9], [6], [1, 2, 7]], [[1, 6, 7, 9], [1, 2, 6], [5], [4], [1, 7, 9], [8], [3], [7, 9], [1, 2, 7, 9]], [[1, 7, 9], [3], [1, 2, 9], [5], [1, 7, 9], [6], [1, 2, 7, 9], [8], [4]], [[8], [4], [1, 9], [1, 7, 9], [2], [3], [1, 7, 9], [5], [6]]]]
INFO:root:Doing checkSmall1
INFO:root:Getting tiny MUSes, distance 1, for 1 puzlits, 1 repeats
INFO:root:Chunked 1 in [1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
INFO:root:Doing checkSmall2
INFO:root:Getting tiny MUSes, distance 2, for 1 puzlits, 1 repeats
INFO:root:Chunked 1 in [1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
INFO:root:Considering 100 * 1 jobs for minsize=3
INFO:root:Chunked 100 in [9, 9, 9, 9, 8, 8, 8, 8, 8, 8, 8, 8]
INFO:root:Considering 100 * 1 jobs for minsize=4
INFO:root:Chunked 100 in [9, 9, 9, 9, 8, 8, 8, 8, 8, 8, 8, 8]
INFO:root:Considering 100 * 1 jobs for minsize=5
INFO:root:Chunked 100 in [9, 9, 9, 9, 8, 8, 8, 8, 8, 8, 8, 8]
INFO:root:Considering 100 * 1 jobs for minsize=6
INFO:root:Chunked 100 in [9, 9, 9, 9, 8, 8, 8, 8, 8, 8, 8, 8]
INFO:root:Considering 100 * 1 jobs for minsize=7
INFO:root:Chunked 100 in [9, 9, 9, 9, 8, 8, 8, 8, 8, 8, 8, 8]
INFO:root:Considering 100 * 1 jobs for minsize=8
INFO:root:Chunked 100 in [9, 9, 9, 9, 8, 8, 8, 8, 8, 8, 8, 8]
INFO:root:Considering 100 * 1 jobs for minsize=9
INFO:root:Chunked 100 in [9, 9, 9, 9, 8, 8, 8, 8, 8, 8, 8, 8]
INFO:root:Considering 100 * 1 jobs for minsize=10
INFO:root:Chunked 100 in [9, 9, 9, 9, 8, 8, 8, 8, 8, 8, 8, 8]
INFO:root:Considering 100 * 1 jobs for minsize=11
INFO:root:Chunked 100 in [9, 9, 9, 9, 8, 8, 8, 8, 8, 8, 8, 8]
INFO:root:Considering 100 * 1 jobs for minsize=12
INFO:root:Chunked 100 in [9, 9, 9, 9, 8, 8, 8, 8, 8, 8, 8, 8]
INFO:root:XX found first (2, 3) is not 6 13
INFO:root:XX add new best (2, 3) is not 6 13 13
INFO:root:XX add new best (2, 3) is not 6 13 13
INFO:root:XX add new best (2, 3) is not 6 13 13
INFO:root:XX add new best (2, 3) is not 6 13 13
INFO:root:XX add new best (2, 3) is not 6 13 13
INFO:root:XX add new best (2, 3) is not 6 13 13
INFO:root:XX add new best (2, 3) is not 6 13 13
INFO:root:XX add new best (2, 3) is not 6 13 13
INFO:root:XX add new best (2, 3) is not 6 13 13
INFO:root:XX add new best (2, 3) is not 6 13 13
INFO:root:XX add new best (2, 3) is not 6 13 13
INFO:root:XX add new best (2, 3) is not 6 13 13
INFO:root:XX add new best (2, 3) is not 6 13 13
INFO:root:XX add new best (2, 3) is not 6 13 13
INFO:root:XX add new best (2, 3) is not 6 13 13
INFO:root:XX add new best (2, 3) is not 6 13 13
INFO:root:XX add new best (2, 3) is not 6 13 13
INFO:root:XX add new best (2, 3) is not 6 13 13
INFO:root:XX add new best (2, 3) is not 6 13 13
INFO:root:XX add new best (2, 3) is not 6 13 13
INFO:root:XX add new best (2, 3) is not 6 13 13
INFO:root:XX add new best (2, 3) is not 6 13 13
INFO:root:XX add new best (2, 3) is not 6 13 13
INFO:root:XX add new best (2, 3) is not 6 13 13
INFO:root:XX add new best (2, 3) is not 6 13 13
INFO:root:XX add new best (2, 3) is not 6 13 13
INFO:root:XX add new best (2, 3) is not 6 13 13
INFO:root:XX add new best (2, 3) is not 6 13 13
INFO:root:XX add new best (2, 3) is not 6 13 13
INFO:root:XX add new best (2, 3) is not 6 13 13
INFO:root:XX add new best (2, 3) is not 6 13 13
INFO:root:XX add new best (2, 3) is not 6 13 13
INFO:root:XX add new best (2, 3) is not 6 13 13
INFO:root:XX add new best (2, 3) is not 6 13 13
INFO:root:XX add new best (2, 3) is not 6 13 13
INFO:root:XX add new best (2, 3) is not 6 13 13
INFO:root:XX add new best (2, 3) is not 6 13 13
INFO:root:XX add new best (2, 3) is not 6 13 13
INFO:root:XX add new best (2, 3) is not 6 13 13
INFO:root:XX add new best (2, 3) is not 6 13 13
INFO:root:XX add new best (2, 3) is not 6 13 13
INFO:root:XX add new best (2, 3) is not 6 13 13
INFO:root:XX add new best (2, 3) is not 6 13 13
INFO:root:XX add new best (2, 3) is not 6 13 13
INFO:root:XX add new best (2, 3) is not 6 13 13
INFO:root:XX add new best (2, 3) is not 6 13 13
INFO:root:XX add new best (2, 3) is not 6 13 13
INFO:root:XX add new best (2, 3) is not 6 13 13
INFO:root:XX add new best (2, 3) is not 6 13 13
INFO:root:XX add new best (2, 3) is not 6 13 13
INFO:root:XX add new best (2, 3) is not 6 13 13
INFO:root:XX add new best (2, 3) is not 6 13 13
INFO:root:XX add new best (2, 3) is not 6 13 13
INFO:root:XX add new best (2, 3) is not 6 13 13
INFO:root:XX add new best (2, 3) is not 6 13 13
INFO:root:XX add new best (2, 3) is not 6 13 13
INFO:root:XX add new best (2, 3) is not 6 13 13
INFO:root:XX add new best (2, 3) is not 6 13 13
INFO:root:XX add new best (2, 3) is not 6 13 13
INFO:root:XX add new best (2, 3) is not 6 13 13
INFO:root:XX add new best (2, 3) is not 6 13 13
INFO:root:XX add new best (2, 3) is not 6 13 13
INFO:root:XX add new best (2, 3) is not 6 13 13
INFO:root:XX add new best (2, 3) is not 6 13 13
INFO:root:XX add new best (2, 3) is not 6 13 13
INFO:root:XX add new best (2, 3) is not 6 13 13
INFO:root:XX add new best (2, 3) is not 6 13 13
INFO:root:XX add new best (2, 3) is not 6 13 13
INFO:root:XX add new best (2, 3) is not 6 13 13
INFO:root:XX add new best (2, 3) is not 6 13 13
INFO:root:XX add new best (2, 3) is not 6 13 13
INFO:root:XX add new best (2, 3) is not 6 13 13
INFO:root:XX add new best (2, 3) is not 6 13 13
INFO:root:XX add new best (2, 3) is not 6 13 13
INFO:root:Considering 100 * 1 jobs for minsize=13
INFO:root:Chunked 100 in [9, 9, 9, 9, 8, 8, 8, 8, 8, 8, 8, 8]
INFO:root:XX add new best (2, 3) is not 6 13 13
INFO:root:XX add new best (2, 3) is not 6 13 13
INFO:root:XX add new best (2, 3) is not 6 13 13
INFO:root:XX add new best (2, 3) is not 6 13 13
INFO:root:XX add new best (2, 3) is not 6 13 13
INFO:root:XX add new best (2, 3) is not 6 13 13
INFO:root:XX add new best (2, 3) is not 6 13 13
INFO:root:XX add new best (2, 3) is not 6 13 13
INFO:root:XX add new best (2, 3) is not 6 13 13
INFO:root:XX add new best (2, 3) is not 6 13 13
INFO:root:XX add new best (2, 3) is not 6 13 13
INFO:root:XX add new best (2, 3) is not 6 13 13
INFO:root:XX add new best (2, 3) is not 6 13 13
INFO:root:XX add new best (2, 3) is not 6 13 13
INFO:root:XX add new best (2, 3) is not 6 13 13
INFO:root:XX add new best (2, 3) is not 6 13 13
INFO:root:XX add new best (2, 3) is not 6 13 13
INFO:root:XX add new best (2, 3) is not 6 13 13
INFO:root:XX add new best (2, 3) is not 6 13 13
INFO:root:XX add new best (2, 3) is not 6 13 13
INFO:root:XX add new best (2, 3) is not 6 13 13
INFO:root:XX add new best (2, 3) is not 6 13 13
INFO:root:XX add new best (2, 3) is not 6 13 13
INFO:root:XX add new best (2, 3) is not 6 13 13
INFO:root:XX add new best (2, 3) is not 6 13 13
INFO:root:XX add new best (2, 3) is not 6 13 13
INFO:root:XX add new best (2, 3) is not 6 13 13
INFO:root:XX add new best (2, 3) is not 6 13 13
INFO:root:XX add new best (2, 3) is not 6 13 13
INFO:root:XX add new best (2, 3) is not 6 13 13
INFO:root:XX add new best (2, 3) is not 6 13 13
INFO:root:XX add new best (2, 3) is not 6 13 13
INFO:root:XX add new best (2, 3) is not 6 13 13
INFO:root:XX add new best (2, 3) is not 6 13 13
INFO:root:XX add new best (2, 3) is not 6 13 13
INFO:root:XX add new best (2, 3) is not 6 13 13
INFO:root:XX add new best (2, 3) is not 6 13 13
INFO:root:XX add new best (2, 3) is not 6 13 13
INFO:root:XX add new best (2, 3) is not 6 13 13
INFO:root:XX add new best (2, 3) is not 6 13 13
INFO:root:XX add new best (2, 3) is not 6 13 13
INFO:root:XX add new best (2, 3) is not 6 13 13
INFO:root:XX add new best (2, 3) is not 6 13 13
INFO:root:XX add new best (2, 3) is not 6 13 13
INFO:root:XX add new best (2, 3) is not 6 13 13
INFO:root:XX add new best (2, 3) is not 6 13 13
INFO:root:XX add new best (2, 3) is not 6 13 13
INFO:root:XX add new best (2, 3) is not 6 13 13
INFO:root:XX add new best (2, 3) is not 6 13 13
INFO:root:XX add new best (2, 3) is not 6 13 13
INFO:root:XX add new best (2, 3) is not 6 13 13
INFO:root:XX add new best (2, 3) is not 6 13 13
INFO:root:XX add new best (2, 3) is not 6 13 13
INFO:root:XX add new best (2, 3) is not 6 13 13
INFO:root:XX add new best (2, 3) is not 6 13 13
INFO:root:XX add new best (2, 3) is not 6 13 13
INFO:root:XX add new best (2, 3) is not 6 13 13
INFO:root:XX add new best (2, 3) is not 6 13 13
INFO:root:XX add new best (2, 3) is not 6 13 13
INFO:root:XX add new best (2, 3) is not 6 13 13
INFO:root:XX add new best (2, 3) is not 6 13 13
INFO:root:XX add new best (2, 3) is not 6 13 13
INFO:root:XX add new best (2, 3) is not 6 13 13
INFO:root:XX add new best (2, 3) is not 6 13 13
INFO:root:XX add new best (2, 3) is not 6 13 13
INFO:root:XX add new best (2, 3) is not 6 13 13
INFO:root:XX add new best (2, 3) is not 6 13 13
INFO:root:Trace: [(13, [(2, 3) is not 6])]
INFO:root:Trace Quality: [(13, 1)]
INFO:root:Trace Sorted: [(13, 1)]
INFO:root:Finished
INFO:root:Full Trace [(13, [(2, 3) is not 6])]
INFO:root:Trying {'prechopMUSes': True}
INFO:root:Starting Step 1
INFO:root:Current state [[[[3], [1, 6, 8], [1, 6, 7, 9], [1, 8, 9], [5], [2], [4, 6], [4, 7, 9], [7, 8, 9]], [[2], [5], [6, 7, 9], [3], [4, 8, 9], [4, 9], [6, 7], [1], [7, 8, 9]], [[1, 9], [1, 8], [4], [6], [1, 8, 9], [7], [5], [2], [3]], [[1, 6], [9], [3], [2], [4, 6, 7], [1, 4], [8], [4, 7], [5]], [[5], [7], [1, 2, 6], [8, 9], [6, 8, 9], [1, 4, 9], [1, 2, 4, 9], [3], [1, 9]], [[4], [1, 2], [8], [7, 9], [3], [5], [1, 7, 9], [6], [1, 2, 7]], [[1, 6, 7, 9], [1, 2, 6], [5], [4], [1, 7, 9], [8], [3], [7, 9], [1, 2, 7, 9]], [[1, 7, 9], [3], [1, 2, 9], [5], [1, 7, 9], [6], [1, 2, 7, 9], [8], [4]], [[8], [4], [1, 9], [1, 7, 9], [2], [3], [1, 7, 9], [5], [6]]]]
INFO:root:Doing checkSmall1
INFO:root:Getting tiny MUSes, distance 1, for 1 puzlits, 1 repeats
INFO:root:Chunked 1 in [1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
INFO:root:Doing checkSmall2
INFO:root:Getting tiny MUSes, distance 2, for 1 puzlits, 1 repeats
INFO:root:Chunked 1 in [1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
INFO:root:Considering 100 * 1 jobs for minsize=3
INFO:root:Chunked 100 in [9, 9, 9, 9, 8, 8, 8, 8, 8, 8, 8, 8]
INFO:root:Considering 100 * 1 jobs for minsize=4
INFO:root:Chunked 100 in [9, 9, 9, 9, 8, 8, 8, 8, 8, 8, 8, 8]
INFO:root:Considering 100 * 1 jobs for minsize=5
INFO:root:Chunked 100 in [9, 9, 9, 9, 8, 8, 8, 8, 8, 8, 8, 8]
INFO:root:Considering 100 * 1 jobs for minsize=6
INFO:root:Chunked 100 in [9, 9, 9, 9, 8, 8, 8, 8, 8, 8, 8, 8]
INFO:root:Considering 100 * 1 jobs for minsize=7
INFO:root:Chunked 100 in [9, 9, 9, 9, 8, 8, 8, 8, 8, 8, 8, 8]
INFO:root:Considering 100 * 1 jobs for minsize=8
INFO:root:Chunked 100 in [9, 9, 9, 9, 8, 8, 8, 8, 8, 8, 8, 8]
INFO:root:Considering 100 * 1 jobs for minsize=9
INFO:root:Chunked 100 in [9, 9, 9, 9, 8, 8, 8, 8, 8, 8, 8, 8]
INFO:root:Considering 100 * 1 jobs for minsize=10
INFO:root:Chunked 100 in [9, 9, 9, 9, 8, 8, 8, 8, 8, 8, 8, 8]
INFO:root:XX found first (2, 3) is not 6 11
INFO:root:XX add new best (2, 3) is not 6 11 11
INFO:root:XX add new best (2, 3) is not 6 11 11
INFO:root:XX add new best (2, 3) is not 6 11 11
INFO:root:XX add new best (2, 3) is not 6 11 11
INFO:root:XX add new best (2, 3) is not 6 11 11
INFO:root:XX add new best (2, 3) is not 6 11 11
INFO:root:XX add new best (2, 3) is not 6 11 11
INFO:root:XX add new best (2, 3) is not 6 11 11
INFO:root:Considering 100 * 1 jobs for minsize=11
INFO:root:Chunked 100 in [9, 9, 9, 9, 8, 8, 8, 8, 8, 8, 8, 8]
INFO:root:XX add new best (2, 3) is not 6 11 11
INFO:root:XX add new best (2, 3) is not 6 11 11
INFO:root:XX add new best (2, 3) is not 6 11 11
INFO:root:Trace: [(11, [(2, 3) is not 6])]
INFO:root:Trace Quality: [(11, 1)]
INFO:root:Trace Sorted: [(11, 1)]
INFO:root:Finished
INFO:root:Full Trace [(11, [(2, 3) is not 6])]
INFO:root:Trying {'quarterChopMUS': True}
INFO:root:Starting Step 1
INFO:root:Current state [[[[3], [1, 6, 8], [1, 6, 7, 9], [1, 8, 9], [5], [2], [4, 6], [4, 7, 9], [7, 8, 9]], [[2], [5], [6, 7, 9], [3], [4, 8, 9], [4, 9], [6, 7], [1], [7, 8, 9]], [[1, 9], [1, 8], [4], [6], [1, 8, 9], [7], [5], [2], [3]], [[1, 6], [9], [3], [2], [4, 6, 7], [1, 4], [8], [4, 7], [5]], [[5], [7], [1, 2, 6], [8, 9], [6, 8, 9], [1, 4, 9], [1, 2, 4, 9], [3], [1, 9]], [[4], [1, 2], [8], [7, 9], [3], [5], [1, 7, 9], [6], [1, 2, 7]], [[1, 6, 7, 9], [1, 2, 6], [5], [4], [1, 7, 9], [8], [3], [7, 9], [1, 2, 7, 9]], [[1, 7, 9], [3], [1, 2, 9], [5], [1, 7, 9], [6], [1, 2, 7, 9], [8], [4]], [[8], [4], [1, 9], [1, 7, 9], [2], [3], [1, 7, 9], [5], [6]]]]
INFO:root:Doing checkSmall1
INFO:root:Getting tiny MUSes, distance 1, for 1 puzlits, 1 repeats
INFO:root:Chunked 1 in [1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
INFO:root:Doing checkSmall2
INFO:root:Getting tiny MUSes, distance 2, for 1 puzlits, 1 repeats
INFO:root:Chunked 1 in [1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
INFO:root:Considering 100 * 1 jobs for minsize=3
INFO:root:Chunked 100 in [9, 9, 9, 9, 8, 8, 8, 8, 8, 8, 8, 8]
INFO:root:Considering 100 * 1 jobs for minsize=4
INFO:root:Chunked 100 in [9, 9, 9, 9, 8, 8, 8, 8, 8, 8, 8, 8]
INFO:root:Considering 100 * 1 jobs for minsize=5
INFO:root:Chunked 100 in [9, 9, 9, 9, 8, 8, 8, 8, 8, 8, 8, 8]
INFO:root:Considering 100 * 1 jobs for minsize=6
INFO:root:Chunked 100 in [9, 9, 9, 9, 8, 8, 8, 8, 8, 8, 8, 8]
INFO:root:Considering 100 * 1 jobs for minsize=7
INFO:root:Chunked 100 in [9, 9, 9, 9, 8, 8, 8, 8, 8, 8, 8, 8]
INFO:root:Considering 100 * 1 jobs for minsize=8
INFO:root:Chunked 100 in [9, 9, 9, 9, 8, 8, 8, 8, 8, 8, 8, 8]
INFO:root:Considering 100 * 1 jobs for minsize=9
INFO:root:Chunked 100 in [9, 9, 9, 9, 8, 8, 8, 8, 8, 8, 8, 8]
INFO:root:Considering 100 * 1 jobs for minsize=10
INFO:root:Chunked 100 in [9, 9, 9, 9, 8, 8, 8, 8, 8, 8, 8, 8]
INFO:root:XX found first (2, 3) is not 6 11
INFO:root:XX add new best (2, 3) is not 6 11 11
INFO:root:XX add new best (2, 3) is not 6 11 11
INFO:root:XX add new best (2, 3) is not 6 11 11
INFO:root:XX add new best (2, 3) is not 6 11 11
INFO:root:XX add new best (2, 3) is not 6 11 11
INFO:root:XX add new best (2, 3) is not 6 11 11
INFO:root:XX add new best (2, 3) is not 6 11 11
INFO:root:XX add new best (2, 3) is not 6 11 11
INFO:root:XX add new best (2, 3) is not 6 11 11
INFO:root:XX add new best (2, 3) is not 6 11 11
INFO:root:Considering 100 * 1 jobs for minsize=11
INFO:root:Chunked 100 in [9, 9, 9, 9, 8, 8, 8, 8, 8, 8, 8, 8]
INFO:root:XX add new best (2, 3) is not 6 11 11
INFO:root:XX add new best (2, 3) is not 6 11 11
INFO:root:XX add new best (2, 3) is not 6 11 11
INFO:root:XX add new best (2, 3) is not 6 11 11
INFO:root:XX add new best (2, 3) is not 6 11 11
INFO:root:XX add new best (2, 3) is not 6 11 11
INFO:root:Trace: [(11, [(2, 3) is not 6])]
INFO:root:Trace Quality: [(11, 1)]
INFO:root:Trace Sorted: [(11, 1)]
INFO:root:Finished
INFO:root:Full Trace [(11, [(2, 3) is not 6])]
INFO:root:Trying {'minPrecheckMUS': True}
INFO:root:Starting Step 1
INFO:root:Current state [[[[3], [1, 6, 8], [1, 6, 7, 9], [1, 8, 9], [5], [2], [4, 6], [4, 7, 9], [7, 8, 9]], [[2], [5], [6, 7, 9], [3], [4, 8, 9], [4, 9], [6, 7], [1], [7, 8, 9]], [[1, 9], [1, 8], [4], [6], [1, 8, 9], [7], [5], [2], [3]], [[1, 6], [9], [3], [2], [4, 6, 7], [1, 4], [8], [4, 7], [5]], [[5], [7], [1, 2, 6], [8, 9], [6, 8, 9], [1, 4, 9], [1, 2, 4, 9], [3], [1, 9]], [[4], [1, 2], [8], [7, 9], [3], [5], [1, 7, 9], [6], [1, 2, 7]], [[1, 6, 7, 9], [1, 2, 6], [5], [4], [1, 7, 9], [8], [3], [7, 9], [1, 2, 7, 9]], [[1, 7, 9], [3], [1, 2, 9], [5], [1, 7, 9], [6], [1, 2, 7, 9], [8], [4]], [[8], [4], [1, 9], [1, 7, 9], [2], [3], [1, 7, 9], [5], [6]]]]
INFO:root:Doing checkSmall1
INFO:root:Getting tiny MUSes, distance 1, for 1 puzlits, 1 repeats
INFO:root:Chunked 1 in [1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
INFO:root:Doing checkSmall2
INFO:root:Getting tiny MUSes, distance 2, for 1 puzlits, 1 repeats
INFO:root:Chunked 1 in [1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
INFO:root:Considering 100 * 1 jobs for minsize=3
INFO:root:Chunked 100 in [9, 9, 9, 9, 8, 8, 8, 8, 8, 8, 8, 8]
INFO:root:Considering 100 * 1 jobs for minsize=4
INFO:root:Chunked 100 in [9, 9, 9, 9, 8, 8, 8, 8, 8, 8, 8, 8]
INFO:root:Considering 100 * 1 jobs for minsize=5
INFO:root:Chunked 100 in [9, 9, 9, 9, 8, 8, 8, 8, 8, 8, 8, 8]
INFO:root:Considering 100 * 1 jobs for minsize=6
INFO:root:Chunked 100 in [9, 9, 9, 9, 8, 8, 8, 8, 8, 8, 8, 8]
INFO:root:Considering 100 * 1 jobs for minsize=7
INFO:root:Chunked 100 in [9, 9, 9, 9, 8, 8, 8, 8, 8, 8, 8, 8]
INFO:root:Considering 100 * 1 jobs for minsize=8
INFO:root:Chunked 100 in [9, 9, 9, 9, 8, 8, 8, 8, 8, 8, 8, 8]
INFO:root:Considering 100 * 1 jobs for minsize=9
INFO:root:Chunked 100 in [9, 9, 9, 9, 8, 8, 8, 8, 8, 8, 8, 8]
INFO:root:Considering 100 * 1 jobs for minsize=10
INFO:root:Chunked 100 in [9, 9, 9, 9, 8, 8, 8, 8, 8, 8, 8, 8]
INFO:root:XX found first (2, 3) is not 6 11
INFO:root:XX add new best (2, 3) is not 6 11 11
INFO:root:XX add new best (2, 3) is not 6 11 11
INFO:root:XX add new best (2, 3) is not 6 11 11
INFO:root:XX add new best (2, 3) is not 6 11 11
INFO:root:XX add new best (2, 3) is not 6 11 11
INFO:root:XX add new best (2, 3) is not 6 11 11
INFO:root:XX add new best (2, 3) is not 6 11 11
INFO:root:XX add new best (2, 3) is not 6 11 11
INFO:root:XX add new best (2, 3) is not 6 11 11
INFO:root:Considering 100 * 1 jobs for minsize=11
INFO:root:Chunked 100 in [9, 9, 9, 9, 8, 8, 8, 8, 8, 8, 8, 8]
INFO:root:XX add new best (2, 3) is not 6 11 11
INFO:root:XX add new best (2, 3) is not 6 11 11
INFO:root:Trace: [(11, [(2, 3) is not 6])]
INFO:root:Trace Quality: [(11, 1)]
INFO:root:Trace Sorted: [(11, 1)]
INFO:root:Finished
INFO:root:Full Trace [(11, [(2, 3) is not 6])]
INFO:root:Trying {'gallopingMUSes': True}
INFO:root:Starting Step 1
INFO:root:Current state [[[[3], [1, 6, 8], [1, 6, 7, 9], [1, 8, 9], [5], [2], [4, 6], [4, 7, 9], [7, 8, 9]], [[2], [5], [6, 7, 9], [3], [4, 8, 9], [4, 9], [6, 7], [1], [7, 8, 9]], [[1, 9], [1, 8], [4], [6], [1, 8, 9], [7], [5], [2], [3]], [[1, 6], [9], [3], [2], [4, 6, 7], [1, 4], [8], [4, 7], [5]], [[5], [7], [1, 2, 6], [8, 9], [6, 8, 9], [1, 4, 9], [1, 2, 4, 9], [3], [1, 9]], [[4], [1, 2], [8], [7, 9], [3], [5], [1, 7, 9], [6], [1, 2, 7]], [[1, 6, 7, 9], [1, 2, 6], [5], [4], [1, 7, 9], [8], [3], [7, 9], [1, 2, 7, 9]], [[1, 7, 9], [3], [1, 2, 9], [5], [1, 7, 9], [6], [1, 2, 7, 9], [8], [4]], [[8], [4], [1, 9], [1, 7, 9], [2], [3], [1, 7, 9], [5], [6]]]]
INFO:root:Doing checkSmall1
INFO:root:Getting tiny MUSes, distance 1, for 1 puzlits, 1 repeats
INFO:root:Chunked 1 in [1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
INFO:root:Doing checkSmall2
INFO:root:Getting tiny MUSes, distance 2, for 1 puzlits, 1 repeats
INFO:root:Chunked 1 in [1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
INFO:root:Considering 100 * 1 jobs for minsize=3
INFO:root:Chunked 100 in [9, 9, 9, 9, 8, 8, 8, 8, 8, 8, 8, 8]
INFO:root:Considering 100 * 1 jobs for minsize=4
INFO:root:Chunked 100 in [9, 9, 9, 9, 8, 8, 8, 8, 8, 8, 8, 8]
INFO:root:Considering 100 * 1 jobs for minsize=5
INFO:root:Chunked 100 in [9, 9, 9, 9, 8, 8, 8, 8, 8, 8, 8, 8]
INFO:root:Considering 100 * 1 jobs for minsize=6
INFO:root:Chunked 100 in [9, 9, 9, 9, 8, 8, 8, 8, 8, 8, 8, 8]
INFO:root:Considering 100 * 1 jobs for minsize=7
INFO:root:Chunked 100 in [9, 9, 9, 9, 8, 8, 8, 8, 8, 8, 8, 8]
INFO:root:Considering 100 * 1 jobs for minsize=8
INFO:root:Chunked 100 in [9, 9, 9, 9, 8, 8, 8, 8, 8, 8, 8, 8]
INFO:root:Considering 100 * 1 jobs for minsize=9
INFO:root:Chunked 100 in [9, 9, 9, 9, 8, 8, 8, 8, 8, 8, 8, 8]
INFO:root:Considering 100 * 1 jobs for minsize=10
INFO:root:Chunked 100 in [9, 9, 9, 9, 8, 8, 8, 8, 8, 8, 8, 8]
INFO:root:XX found first (2, 3) is not 6 11
INFO:root:XX add new best (2, 3) is not 6 11 11
INFO:root:XX add new best (2, 3) is not 6 11 11
INFO:root:XX add new best (2, 3) is not 6 11 11
INFO:root:XX add new best (2, 3) is not 6 11 11
INFO:root:XX add new best (2, 3) is not 6 11 11
INFO:root:Considering 100 * 1 jobs for minsize=11
INFO:root:Chunked 100 in [9, 9, 9, 9, 8, 8, 8, 8, 8, 8, 8, 8]
INFO:root:XX add new best (2, 3) is not 6 11 11
INFO:root:XX add new best (2, 3) is not 6 11 11
INFO:root:XX add new best (2, 3) is not 6 11 11
INFO:root:Trace: [(11, [(2, 3) is not 6])]
INFO:root:Trace Quality: [(11, 1)]
INFO:root:Trace Sorted: [(11, 1)]
INFO:root:Finished
INFO:root:Full Trace [(11, [(2, 3) is not 6])]
INFO:root:Trying {'minPrecheckStepsMUS': True}
INFO:root:Starting Step 1
INFO:root:Current state [[[[3], [1, 6, 8], [1, 6, 7, 9], [1, 8, 9], [5], [2], [4, 6], [4, 7, 9], [7, 8, 9]], [[2], [5], [6, 7, 9], [3], [4, 8, 9], [4, 9], [6, 7], [1], [7, 8, 9]], [[1, 9], [1, 8], [4], [6], [1, 8, 9], [7], [5], [2], [3]], [[1, 6], [9], [3], [2], [4, 6, 7], [1, 4], [8], [4, 7], [5]], [[5], [7], [1, 2, 6], [8, 9], [6, 8, 9], [1, 4, 9], [1, 2, 4, 9], [3], [1, 9]], [[4], [1, 2], [8], [7, 9], [3], [5], [1, 7, 9], [6], [1, 2, 7]], [[1, 6, 7, 9], [1, 2, 6], [5], [4], [1, 7, 9], [8], [3], [7, 9], [1, 2, 7, 9]], [[1, 7, 9], [3], [1, 2, 9], [5], [1, 7, 9], [6], [1, 2, 7, 9], [8], [4]], [[8], [4], [1, 9], [1, 7, 9], [2], [3], [1, 7, 9], [5], [6]]]]
INFO:root:Doing checkSmall1
INFO:root:Getting tiny MUSes, distance 1, for 1 puzlits, 1 repeats
INFO:root:Chunked 1 in [1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
INFO:root:Doing checkSmall2
INFO:root:Getting tiny MUSes, distance 2, for 1 puzlits, 1 repeats
INFO:root:Chunked 1 in [1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
INFO:root:Considering 100 * 1 jobs for minsize=3
INFO:root:Chunked 100 in [9, 9, 9, 9, 8, 8, 8, 8, 8, 8, 8, 8]
INFO:root:Considering 100 * 1 jobs for minsize=4
INFO:root:Chunked 100 in [9, 9, 9, 9, 8, 8, 8, 8, 8, 8, 8, 8]
INFO:root:Considering 100 * 1 jobs for minsize=5
INFO:root:Chunked 100 in [9, 9, 9, 9, 8, 8, 8, 8, 8, 8, 8, 8]
INFO:root:Considering 100 * 1 jobs for minsize=6
INFO:root:Chunked 100 in [9, 9, 9, 9, 8, 8, 8, 8, 8, 8, 8, 8]
INFO:root:Considering 100 * 1 jobs for minsize=7
INFO:root:Chunked 100 in [9, 9, 9, 9, 8, 8, 8, 8, 8, 8, 8, 8]
INFO:root:Considering 100 * 1 jobs for minsize=8
INFO:root:Chunked 100 in [9, 9, 9, 9, 8, 8, 8, 8, 8, 8, 8, 8]
INFO:root:Considering 100 * 1 jobs for minsize=9
INFO:root:Chunked 100 in [9, 9, 9, 9, 8, 8, 8, 8, 8, 8, 8, 8]
INFO:root:Considering 100 * 1 jobs for minsize=10
INFO:root:Chunked 100 in [9, 9, 9, 9, 8, 8, 8, 8, 8, 8, 8, 8]
INFO:root:XX found first (2, 3) is not 6 11
INFO:root:XX add new best (2, 3) is not 6 11 11
INFO:root:XX add new best (2, 3) is not 6 11 11
INFO:root:XX add new best (2, 3) is not 6 11 11
INFO:root:XX add new best (2, 3) is not 6 11 11
INFO:root:XX add new best (2, 3) is not 6 11 11
INFO:root:XX add new best (2, 3) is not 6 11 11
INFO:root:XX add new best (2, 3) is not 6 11 11
INFO:root:XX add new best (2, 3) is not 6 11 11
INFO:root:XX add new best (2, 3) is not 6 11 11
INFO:root:Considering 100 * 1 jobs for minsize=11
INFO:root:Chunked 100 in [9, 9, 9, 9, 8, 8, 8, 8, 8, 8, 8, 8]
INFO:root:XX add new best (2, 3) is not 6 11 11
INFO:root:XX add new best (2, 3) is not 6 11 11
INFO:root:XX add new best (2, 3) is not 6 11 11
INFO:root:Trace: [(11, [(2, 3) is not 6])]
INFO:root:Trace Quality: [(11, 1)]
INFO:root:Trace Sorted: [(11, 1)]
INFO:root:Finished
INFO:root:Full Trace [(11, [(2, 3) is not 6])]
INFO:root:Trying {'gallopingMUSes': True, 'minPrecheckMUS': True}
INFO:root:Starting Step 1
INFO:root:Current state [[[[3], [1, 6, 8], [1, 6, 7, 9], [1, 8, 9], [5], [2], [4, 6], [4, 7, 9], [7, 8, 9]], [[2], [5], [6, 7, 9], [3], [4, 8, 9], [4, 9], [6, 7], [1], [7, 8, 9]], [[1, 9], [1, 8], [4], [6], [1, 8, 9], [7], [5], [2], [3]], [[1, 6], [9], [3], [2], [4, 6, 7], [1, 4], [8], [4, 7], [5]], [[5], [7], [1, 2, 6], [8, 9], [6, 8, 9], [1, 4, 9], [1, 2, 4, 9], [3], [1, 9]], [[4], [1, 2], [8], [7, 9], [3], [5], [1, 7, 9], [6], [1, 2, 7]], [[1, 6, 7, 9], [1, 2, 6], [5], [4], [1, 7, 9], [8], [3], [7, 9], [1, 2, 7, 9]], [[1, 7, 9], [3], [1, 2, 9], [5], [1, 7, 9], [6], [1, 2, 7, 9], [8], [4]], [[8], [4], [1, 9], [1, 7, 9], [2], [3], [1, 7, 9], [5], [6]]]]
INFO:root:Doing checkSmall1
INFO:root:Getting tiny MUSes, distance 1, for 1 puzlits, 1 repeats
INFO:root:Chunked 1 in [1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
INFO:root:Doing checkSmall2
INFO:root:Getting tiny MUSes, distance 2, for 1 puzlits, 1 repeats
INFO:root:Chunked 1 in [1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
INFO:root:Considering 100 * 1 jobs for minsize=3
INFO:root:Chunked 100 in [9, 9, 9, 9, 8, 8, 8, 8, 8, 8, 8, 8]
INFO:root:Considering 100 * 1 jobs for minsize=4
INFO:root:Chunked 100 in [9, 9, 9, 9, 8, 8, 8, 8, 8, 8, 8, 8]
INFO:root:Considering 100 * 1 jobs for minsize=5
INFO:root:Chunked 100 in [9, 9, 9, 9, 8, 8, 8, 8, 8, 8, 8, 8]
INFO:root:Considering 100 * 1 jobs for minsize=6
INFO:root:Chunked 100 in [9, 9, 9, 9, 8, 8, 8, 8, 8, 8, 8, 8]
INFO:root:Considering 100 * 1 jobs for minsize=7
INFO:root:Chunked 100 in [9, 9, 9, 9, 8, 8, 8, 8, 8, 8, 8, 8]
INFO:root:Considering 100 * 1 jobs for minsize=8
INFO:root:Chunked 100 in [9, 9, 9, 9, 8, 8, 8, 8, 8, 8, 8, 8]
INFO:root:Considering 100 * 1 jobs for minsize=9
INFO:root:Chunked 100 in [9, 9, 9, 9, 8, 8, 8, 8, 8, 8, 8, 8]
INFO:root:Considering 100 * 1 jobs for minsize=10
INFO:root:Chunked 100 in [9, 9, 9, 9, 8, 8, 8, 8, 8, 8, 8, 8]
INFO:root:XX found first (2, 3) is not 6 11
INFO:root:XX add new best (2, 3) is not 6 11 11
INFO:root:XX add new best (2, 3) is not 6 11 11
INFO:root:XX add new best (2, 3) is not 6 11 11
INFO:root:XX add new best (2, 3) is not 6 11 11
INFO:root:XX add new best (2, 3) is not 6 11 11
INFO:root:XX add new best (2, 3) is not 6 11 11
INFO:root:XX add new best (2, 3) is not 6 11 11
INFO:root:XX add new best (2, 3) is not 6 11 11
INFO:root:XX add new best (2, 3) is not 6 11 11
INFO:root:Considering 100 * 1 jobs for minsize=11
INFO:root:Chunked 100 in [9, 9, 9, 9, 8, 8, 8, 8, 8, 8, 8, 8]
INFO:root:XX add new best (2, 3) is not 6 11 11
INFO:root:XX add new best (2, 3) is not 6 11 11
INFO:root:Trace: [(11, [(2, 3) is not 6])]
INFO:root:Trace Quality: [(11, 1)]
INFO:root:Trace Sorted: [(11, 1)]
INFO:root:Finished
INFO:root:Full Trace [(11, [(2, 3) is not 6])]
INFO:root:Trying {}
INFO:root:Starting Step 1
INFO:root:Current state [[[[1], [7, 9], [2, 9], [2, 7, 8], [5], [6], [4, 7, 8], [4, 8, 9], [3]], [[2, 5, 6], [4], [3], [1, 2, 7, 8], [9], [7, 8], [1, 5, 7, 8], [5, 6, 8], [6, 8]], [[8], [6, 7, 9], [5, 6, 9], [1, 7], [4], [3], [1, 5, 7], [5, 6, 9], [2]], [[4, 7], [3], [4, 8], [5], [6], [7, 8, 9], [2], [1], [4, 9]], [[9], [5], [6, 8], [4], [2], [1], [6, 8], [3], [7]], [[4, 6, 7], [2], [1], [7, 8], [3], [7, 8, 9], [4, 5, 6, 8], [4, 5, 6, 8], [4, 6, 9]], [[3], [1], [7], [9], [8], [2, 4], [4, 6], [2, 4, 6], [5]], [[2, 4, 5, 6], [6, 8], [2, 4, 5], [3], [1], [2, 4, 5], [9], [7], [4, 8]], [[2, 4, 5], [8, 9], [2, 4, 5, 9], [6], [7], [2, 4, 5], [3], [2, 4, 8], [1]]]]
INFO:root:Doing checkSmall1
INFO:root:Getting tiny MUSes, distance 1, for 1 puzlits, 1 repeats
INFO:root:Chunked 1 in [1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
INFO:root:Doing checkSmall2
INFO:root:Getting tiny MUSes, distance 2, for 1 puzlits, 1 repeats
INFO:root:Chunked 1 in [1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
INFO:root:Considering 100 * 1 jobs for minsize=3
INFO:root:Chunked 100 in [9, 9, 9, 9, 8, 8, 8, 8, 8, 8, 8, 8]
INFO:root:Considering 100 * 1 jobs for minsize=4
INFO:root:Chunked 100 in [9, 9, 9, 9, 8, 8, 8, 8, 8, 8, 8, 8]
INFO:root:Considering 100 * 1 jobs for minsize=5
INFO:root:Chunked 100 in [9, 9, 9, 9, 8, 8, 8, 8, 8, 8, 8, 8]
INFO:root:Considering 100 * 1 jobs for minsize=6
INFO:root:Chunked 100 in [9, 9, 9, 9, 8, 8, 8, 8, 8, 8, 8, 8]
INFO:root:XX found first (2, 1) is not 6 7
INFO:root:XX add new best (2, 1) is not 6 7 7
INFO:root:XX add new best (2, 1) is not 6 7 7
INFO:root:XX add new best (2, 1) is not 6 7 7
INFO:root:XX add new best (2, 1) is not 6 7 7
INFO:root:XX add new best (2, 1) is not 6 7 7
INFO:root:XX add new best (2, 1) is not 6 7 7
INFO:root:XX add new best (2, 1) is not 6 7 7
INFO:root:XX add new best (2, 1) is not 6 7 7
INFO:root:XX add new best (2, 1) is not 6 7 7
INFO:root:XX add new best (2, 1) is not 6 7 7
INFO:root:XX add new best (2, 1) is not 6 7 7
INFO:root:XX add new best (2, 1) is not 6 7 7
INFO:root:XX add new best (2, 1) is not 6 7 7
INFO:root:XX add new best (2, 1) is not 6 7 7
INFO:root:XX add new best (2, 1) is not 6 7 7
INFO:root:XX add new best (2, 1) is not 6 7 7
INFO:root:Considering 100 * 1 jobs for minsize=7
INFO:root:Chunked 100 in [9, 9, 9, 9, 8, 8, 8, 8, 8, 8, 8, 8]
INFO:root:XX add new best (2, 1) is not 6 7 7
INFO:root:XX add new best (2, 1) is not 6 7 7
INFO:root:XX add new best (2, 1) is not 6 7 7
INFO:root:XX add new best (2, 1) is not 6 7 7
INFO:root:XX add new best (2, 1) is not 6 7 7
INFO:root:XX add new best (2, 1) is not 6 7 7
INFO:root:XX add new best (2, 1) is not 6 7 7
INFO:root:XX add new best (2, 1) is not 6 7 7
INFO:root:XX add new best (2, 1) is not 6 7 7
INFO:root:XX add new best (2, 1) is not 6 7 7
INFO:root:XX add new best (2, 1) is not 6 7 7
INFO:root:XX add new best (2, 1) is not 6 7 7
INFO:root:XX add new best (2, 1) is not 6 7 7
INFO:root:XX add new best (2, 1) is not 6 7 7
INFO:root:XX add new best (2, 1) is not 6 7 7
INFO:root:XX add new best (2, 1) is not 6 7 7
INFO:root:XX add new best (2, 1) is not 6 7 7
INFO:root:Trace: [(7, [(2, 1) is not 6])]
INFO:root:Trace Quality: [(7, 1)]
INFO:root:Trace Sorted: [(7, 1)]
INFO:root:Finished
INFO:root:Full Trace [(7, [(2, 1) is not 6])]
INFO:root:Trying {'prechopMUSes': True}
INFO:root:Starting Step 1
INFO:root:Current state [[[[1], [7, 9], [2, 9], [2, 7, 8], [5], [6], [4, 7, 8], [4, 8, 9], [3]], [[2, 5, 6], [4], [3], [1, 2, 7, 8], [9], [7, 8], [1, 5, 7, 8], [5, 6, 8], [6, 8]], [[8], [6, 7, 9], [5, 6, 9], [1, 7], [4], [3], [1, 5, 7], [5, 6, 9], [2]], [[4, 7], [3], [4, 8], [5], [6], [7, 8, 9], [2], [1], [4, 9]], [[9], [5], [6, 8], [4], [2], [1], [6, 8], [3], [7]], [[4, 6, 7], [2], [1], [7, 8], [3], [7, 8, 9], [4, 5, 6, 8], [4, 5, 6, 8], [4, 6, 9]], [[3], [1], [7], [9], [8], [2, 4], [4, 6], [2, 4, 6], [5]], [[2, 4, 5, 6], [6, 8], [2, 4, 5], [3], [1], [2, 4, 5], [9], [7], [4, 8]], [[2, 4, 5], [8, 9], [2, 4, 5, 9], [6], [7], [2, 4, 5], [3], [2, 4, 8], [1]]]]
INFO:root:Doing checkSmall1
INFO:root:Getting tiny MUSes, distance 1, for 1 puzlits, 1 repeats
INFO:root:Chunked 1 in [1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
INFO:root:Doing checkSmall2
INFO:root:Getting tiny MUSes, distance 2, for 1 puzlits, 1 repeats
INFO:root:Chunked 1 in [1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
INFO:root:Considering 100 * 1 jobs for minsize=3
INFO:root:Chunked 100 in [9, 9, 9, 9, 8, 8, 8, 8, 8, 8, 8, 8]
INFO:root:Considering 100 * 1 jobs for minsize=4
INFO:root:Chunked 100 in [9, 9, 9, 9, 8, 8, 8, 8, 8, 8, 8, 8]
INFO:root:Considering 100 * 1 jobs for minsize=5
INFO:root:Chunked 100 in [9, 9, 9, 9, 8, 8, 8, 8, 8, 8, 8, 8]
INFO:root:Considering 100 * 1 jobs for minsize=6
INFO:root:Chunked 100 in [9, 9, 9, 9, 8, 8, 8, 8, 8, 8, 8, 8]
INFO:root:XX found first (2, 1) is not 6 7
INFO:root:XX add new best (2, 1) is not 6 7 7
INFO:root:XX add new best (2, 1) is not 6 7 7
INFO:root:XX add new best (2, 1) is not 6 7 7
INFO:root:XX add new best (2, 1) is not 6 7 7
INFO:root:XX add new best (2, 1) is not 6 7 7
INFO:root:XX add new best (2, 1) is not 6 7 7
INFO:root:XX add new best (2, 1) is not 6 7 7
INFO:root:XX add new best (2, 1) is not 6 7 7
INFO:root:XX add new best (2, 1) is not 6 7 7
INFO:root:XX add new best (2, 1) is not 6 7 7
INFO:root:XX add new best (2, 1) is not 6 7 7
INFO:root:Considering 100 * 1 jobs for minsize=7
INFO:root:Chunked 100 in [9, 9, 9, 9, 8, 8, 8, 8, 8, 8, 8, 8]
INFO:root:XX add new best (2, 1) is not 6 7 7
INFO:root:XX add new best (2, 1) is not 6 7 7
INFO:root:XX add new best (2, 1) is not 6 7 7
INFO:root:XX add new best (2, 1) is not 6 7 7
INFO:root:XX add new best (2, 1) is not 6 7 7
INFO:root:XX add new best (2, 1) is not 6 7 7
INFO:root:XX add new best (2, 1) is not 6 7 7
INFO:root:XX add new best (2, 1) is not 6 7 7
INFO:root:XX add new best (2, 1) is not 6 7 7
INFO:root:XX add new best (2, 1) is not 6 7 7
INFO:root:XX add new best (2, 1) is not 6 7 7
INFO:root:XX add new best (2, 1) is not 6 7 7
INFO:root:XX add new best (2, 1) is not 6 7 7
INFO:root:XX add new best (2, 1) is not 6 7 7
INFO:root:XX add new best (2, 1) is not 6 7 7
INFO:root:XX add new best (2, 1) is not 6 7 7
INFO:root:XX add new best (2, 1) is not 6 7 7
INFO:root:Trace: [(7, [(2, 1) is not 6])]
INFO:root:Trace Quality: [(7, 1)]
INFO:root:Trace Sorted: [(7, 1)]
INFO:root:Finished
INFO:root:Full Trace [(7, [(2, 1) is not 6])]
INFO:root:Trying {'quarterChopMUS': True}
INFO:root:Starting Step 1
INFO:root:Current state [[[[1], [7, 9], [2, 9], [2, 7, 8], [5], [6], [4, 7, 8], [4, 8, 9], [3]], [[2, 5, 6], [4], [3], [1, 2, 7, 8], [9], [7, 8], [1, 5, 7, 8], [5, 6, 8], [6, 8]], [[8], [6, 7, 9], [5, 6, 9], [1, 7], [4], [3], [1, 5, 7], [5, 6, 9], [2]], [[4, 7], [3], [4, 8], [5], [6], [7, 8, 9], [2], [1], [4, 9]], [[9], [5], [6, 8], [4], [2], [1], [6, 8], [3], [7]], [[4, 6, 7], [2], [1], [7, 8], [3], [7, 8, 9], [4, 5, 6, 8], [4, 5, 6, 8], [4, 6, 9]], [[3], [1], [7], [9], [8], [2, 4], [4, 6], [2, 4, 6], [5]], [[2, 4, 5, 6], [6, 8], [2, 4, 5], [3], [1], [2, 4, 5], [9], [7], [4, 8]], [[2, 4, 5], [8, 9], [2, 4, 5, 9], [6], [7], [2, 4, 5], [3], [2, 4, 8], [1]]]]
INFO:root:Doing checkSmall1
INFO:root:Getting tiny MUSes, distance 1, for 1 puzlits, 1 repeats
INFO:root:Chunked 1 in [1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
INFO:root:Doing checkSmall2
INFO:root:Getting tiny MUSes, distance 2, for 1 puzlits, 1 repeats
INFO:root:Chunked 1 in [1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
INFO:root:Considering 100 * 1 jobs for minsize=3
INFO:root:Chunked 100 in [9, 9, 9, 9, 8, 8, 8, 8, 8, 8, 8, 8]
INFO:root:Considering 100 * 1 jobs for minsize=4
INFO:root:Chunked 100 in [9, 9, 9, 9, 8, 8, 8, 8, 8, 8, 8, 8]
INFO:root:Considering 100 * 1 jobs for minsize=5
INFO:root:Chunked 100 in [9, 9, 9, 9, 8, 8, 8, 8, 8, 8, 8, 8]
INFO:root:Considering 100 * 1 jobs for minsize=6
INFO:root:Chunked 100 in [9, 9, 9, 9, 8, 8, 8, 8, 8, 8, 8, 8]
INFO:root:XX found first (2, 1) is not 6 7
INFO:root:XX add new best (2, 1) is not 6 7 7
INFO:root:XX add new best (2, 1) is not 6 7 7
INFO:root:XX add new best (2, 1) is not 6 7 7
INFO:root:XX add new best (2, 1) is not 6 7 7
INFO:root:XX add new best (2, 1) is not 6 7 7
INFO:root:XX add new best (2, 1) is not 6 7 7
INFO:root:XX add new best (2, 1) is not 6 7 7
INFO:root:XX add new best (2, 1) is not 6 7 7
INFO:root:XX add new best (2, 1) is not 6 7 7
INFO:root:XX add new best (2, 1) is not 6 7 7
INFO:root:XX add new best (2, 1) is not 6 7 7
INFO:root:XX add new best (2, 1) is not 6 7 7
INFO:root:Considering 100 * 1 jobs for minsize=7
INFO:root:Chunked 100 in [9, 9, 9, 9, 8, 8, 8, 8, 8, 8, 8, 8]
INFO:root:XX add new best (2, 1) is not 6 7 7
INFO:root:XX add new best (2, 1) is not 6 7 7
INFO:root:XX add new best (2, 1) is not 6 7 7
INFO:root:XX add new best (2, 1) is not 6 7 7
INFO:root:XX add new best (2, 1) is not 6 7 7
INFO:root:XX add new best (2, 1) is not 6 7 7
INFO:root:XX add new best (2, 1) is not 6 7 7
INFO:root:XX add new best (2, 1) is not 6 7 7
INFO:root:XX add new best (2, 1) is not 6 7 7
INFO:root:XX add new best (2, 1) is not 6 7 7
INFO:root:XX add new best (2, 1) is not 6 7 7
INFO:root:XX add new best (2, 1) is not 6 7 7
INFO:root:Trace: [(7, [(2, 1) is not 6])]
INFO:root:Trace Quality: [(7, 1)]
INFO:root:Trace Sorted: [(7, 1)]
INFO:root:Finished
INFO:root:Full Trace [(7, [(2, 1) is not 6])]
INFO:root:Trying {'minPrecheckMUS': True}
INFO:root:Starting Step 1
INFO:root:Current state [[[[1], [7, 9], [2, 9], [2, 7, 8], [5], [6], [4, 7, 8], [4, 8, 9], [3]], [[2, 5, 6], [4], [3], [1, 2, 7, 8], [9], [7, 8], [1, 5, 7, 8], [5, 6, 8], [6, 8]], [[8], [6, 7, 9], [5, 6, 9], [1, 7], [4], [3], [1, 5, 7], [5, 6, 9], [2]], [[4, 7], [3], [4, 8], [5], [6], [7, 8, 9], [2], [1], [4, 9]], [[9], [5], [6, 8], [4], [2], [1], [6, 8], [3], [7]], [[4, 6, 7], [2], [1], [7, 8], [3], [7, 8, 9], [4, 5, 6, 8], [4, 5, 6, 8], [4, 6, 9]], [[3], [1], [7], [9], [8], [2, 4], [4, 6], [2, 4, 6], [5]], [[2, 4, 5, 6], [6, 8], [2, 4, 5], [3], [1], [2, 4, 5], [9], [7], [4, 8]], [[2, 4, 5], [8, 9], [2, 4, 5, 9], [6], [7], [2, 4, 5], [3], [2, 4, 8], [1]]]]
INFO:root:Doing checkSmall1
INFO:root:Getting tiny MUSes, distance 1, for 1 puzlits, 1 repeats
INFO:root:Chunked 1 in [1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
INFO:root:Doing checkSmall2
INFO:root:Getting tiny MUSes, distance 2, for 1 puzlits, 1 repeats
INFO:root:Chunked 1 in [1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
INFO:root:Considering 100 * 1 jobs for minsize=3
INFO:root:Chunked 100 in [9, 9, 9, 9, 8, 8, 8, 8, 8, 8, 8, 8]
INFO:root:Considering 100 * 1 jobs for minsize=4
INFO:root:Chunked 100 in [9, 9, 9, 9, 8, 8, 8, 8, 8, 8, 8, 8]
INFO:root:Considering 100 * 1 jobs for minsize=5
INFO:root:Chunked 100 in [9, 9, 9, 9, 8, 8, 8, 8, 8, 8, 8, 8]
INFO:root:Considering 100 * 1 jobs for minsize=6
INFO:root:Chunked 100 in [9, 9, 9, 9, 8, 8, 8, 8, 8, 8, 8, 8]
INFO:root:XX found first (2, 1) is not 6 7
INFO:root:XX add new best (2, 1) is not 6 7 7
INFO:root:XX add new best (2, 1) is not 6 7 7
INFO:root:XX add new best (2, 1) is not 6 7 7
INFO:root:XX add new best (2, 1) is not 6 7 7
INFO:root:XX add new best (2, 1) is not 6 7 7
INFO:root:XX add new best (2, 1) is not 6 7 7
INFO:root:XX add new best (2, 1) is not 6 7 7
INFO:root:XX add new best (2, 1) is not 6 7 7
INFO:root:XX add new best (2, 1) is not 6 7 7
INFO:root:Considering 100 * 1 jobs for minsize=7
INFO:root:Chunked 100 in [9, 9, 9, 9, 8, 8, 8, 8, 8, 8, 8, 8]
INFO:root:XX add new best (2, 1) is not 6 7 7
INFO:root:XX add new best (2, 1) is not 6 7 7
INFO:root:XX add new best (2, 1) is not 6 7 7
INFO:root:XX add new best (2, 1) is not 6 7 7
INFO:root:XX add new best (2, 1) is not 6 7 7
INFO:root:XX add new best (2, 1) is not 6 7 7
INFO:root:XX add new best (2, 1) is not 6 7 7
INFO:root:XX add new best (2, 1) is not 6 7 7
INFO:root:XX add new best (2, 1) is not 6 7 7
INFO:root:XX add new best (2, 1) is not 6 7 7
INFO:root:XX add new best (2, 1) is not 6 7 7
INFO:root:XX add new best (2, 1) is not 6 7 7
INFO:root:XX add new best (2, 1) is not 6 7 7
INFO:root:Trace: [(7, [(2, 1) is not 6])]
INFO:root:Trace Quality: [(7, 1)]
INFO:root:Trace Sorted: [(7, 1)]
INFO:root:Finished
INFO:root:Full Trace [(7, [(2, 1) is not 6])]
INFO:root:Trying {'gallopingMUSes': True}
INFO:root:Starting Step 1
INFO:root:Current state [[[[1], [7, 9], [2, 9], [2, 7, 8], [5], [6], [4, 7, 8], [4, 8, 9], [3]], [[2, 5, 6], [4], [3], [1, 2, 7, 8], [9], [7, 8], [1, 5, 7, 8], [5, 6, 8], [6, 8]], [[8], [6, 7, 9], [5, 6, 9], [1, 7], [4], [3], [1, 5, 7], [5, 6, 9], [2]], [[4, 7], [3], [4, 8], [5], [6], [7, 8, 9], [2], [1], [4, 9]], [[9], [5], [6, 8], [4], [2], [1], [6, 8], [3], [7]], [[4, 6, 7], [2], [1], [7, 8], [3], [7, 8, 9], [4, 5, 6, 8], [4, 5, 6, 8], [4, 6, 9]], [[3], [1], [7], [9], [8], [2, 4], [4, 6], [2, 4, 6], [5]], [[2, 4, 5, 6], [6, 8], [2, 4, 5], [3], [1], [2, 4, 5], [9], [7], [4, 8]], [[2, 4, 5], [8, 9], [2, 4, 5, 9], [6], [7], [2, 4, 5], [3], [2, 4, 8], [1]]]]
INFO:root:Doing checkSmall1
INFO:root:Getting tiny MUSes, distance 1, for 1 puzlits, 1 repeats
INFO:root:Chunked 1 in [1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
INFO:root:Doing checkSmall2
INFO:root:Getting tiny MUSes, distance 2, for 1 puzlits, 1 repeats
INFO:root:Chunked 1 in [1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
INFO:root:Considering 100 * 1 jobs for minsize=3
INFO:root:Chunked 100 in [9, 9, 9, 9, 8, 8, 8, 8, 8, 8, 8, 8]
INFO:root:Considering 100 * 1 jobs for minsize=4
INFO:root:Chunked 100 in [9, 9, 9, 9, 8, 8, 8, 8, 8, 8, 8, 8]
INFO:root:Considering 100 * 1 jobs for minsize=5
INFO:root:Chunked 100 in [9, 9, 9, 9, 8, 8, 8, 8, 8, 8, 8, 8]
INFO:root:Considering 100 * 1 jobs for minsize=6
INFO:root:Chunked 100 in [9, 9, 9, 9, 8, 8, 8, 8, 8, 8, 8, 8]
INFO:root:XX found first (2, 1) is not 6 7
INFO:root:XX add new best (2, 1) is not 6 7 7
INFO:root:XX add new best (2, 1) is not 6 7 7
INFO:root:XX add new best (2, 1) is not 6 7 7
INFO:root:XX add new best (2, 1) is not 6 7 7
INFO:root:XX add new best (2, 1) is not 6 7 7
INFO:root:XX add new best (2, 1) is not 6 7 7
INFO:root:XX add new best (2, 1) is not 6 7 7
INFO:root:Considering 100 * 1 jobs for minsize=7
INFO:root:Chunked 100 in [9, 9, 9, 9, 8, 8, 8, 8, 8, 8, 8, 8]
INFO:root:XX add new best (2, 1) is not 6 7 7
INFO:root:XX add new best (2, 1) is not 6 7 7
INFO:root:XX add new best (2, 1) is not 6 7 7
INFO:root:XX add new best (2, 1) is not 6 7 7
INFO:root:XX add new best (2, 1) is not 6 7 7
INFO:root:XX add new best (2, 1) is not 6 7 7
INFO:root:XX add new best (2, 1) is not 6 7 7
INFO:root:XX add new best (2, 1) is not 6 7 7
INFO:root:XX add new best (2, 1) is not 6 7 7
INFO:root:XX add new best (2, 1) is not 6 7 7
INFO:root:XX add new best (2, 1) is not 6 7 7
INFO:root:XX add new best (2, 1) is not 6 7 7
INFO:root:Trace: [(7, [(2, 1) is not 6])]
INFO:root:Trace Quality: [(7, 1)]
INFO:root:Trace Sorted: [(7, 1)]
INFO:root:Finished
INFO:root:Full Trace [(7, [(2, 1) is not 6])]
INFO:root:Trying {'minPrecheckStepsMUS': True}
INFO:root:Starting Step 1
INFO:root:Current state [[[[1], [7, 9], [2, 9], [2, 7, 8], [5], [6], [4, 7, 8], [4, 8, 9], [3]], [[2, 5, 6], [4], [3], [1, 2, 7, 8], [9], [7, 8], [1, 5, 7, 8], [5, 6, 8], [6, 8]], [[8], [6, 7, 9], [5, 6, 9], [1, 7], [4], [3], [1, 5, 7], [5, 6, 9], [2]], [[4, 7], [3], [4, 8], [5], [6], [7, 8, 9], [2], [1], [4, 9]], [[9], [5], [6, 8], [4], [2], [1], [6, 8], [3], [7]], [[4, 6, 7], [2], [1], [7, 8], [3], [7, 8, 9], [4, 5, 6, 8], [4, 5, 6, 8], [4, 6, 9]], [[3], [1], [7], [9], [8], [2, 4], [4, 6], [2, 4, 6], [5]], [[2, 4, 5, 6], [6, 8], [2, 4, 5], [3], [1], [2, 4, 5], [9], [7], [4, 8]], [[2, 4, 5], [8, 9], [2, 4, 5, 9], [6], [7], [2, 4, 5], [3], [2, 4, 8], [1]]]]
INFO:root:Doing checkSmall1
INFO:root:Getting tiny MUSes, distance 1, for 1 puzlits, 1 repeats
INFO:root:Chunked 1 in [1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
INFO:root:Doing checkSmall2
INFO:root:Getting tiny MUSes, distance 2, for 1 puzlits, 1 repeats
INFO:root:Chunked 1 in [1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
INFO:root:Considering 100 * 1 jobs for minsize=3
INFO:root:Chunked 100 in [9, 9, 9, 9, 8, 8, 8, 8, 8, 8, 8, 8]
INFO:root:Considering 100 * 1 jobs for minsize=4
INFO:root:Chunked 100 in [9, 9, 9, 9, 8, 8, 8, 8, 8, 8, 8, 8]
INFO:root:Considering 100 * 1 jobs for minsize=5
INFO:root:Chunked 100 in [9, 9, 9, 9, 8, 8, 8, 8, 8, 8, 8, 8]
INFO:root:Considering 100 * 1 jobs for minsize=6
INFO:root:Chunked 100 in [9, 9, 9, 9, 8, 8, 8, 8, 8, 8, 8, 8]
INFO:root:XX found first (2, 1) is not 6 7
INFO:root:XX add new best (2, 1) is not 6 7 7
INFO:root:XX add new best (2, 1) is not 6 7 7
INFO:root:XX add new best (2, 1) is not 6 7 7
INFO:root:XX add new best (2, 1) is not 6 7 7
INFO:root:XX add new best (2, 1) is not 6 7 7
INFO:root:XX add new best (2, 1) is not 6 7 7
INFO:root:XX add new best (2, 1) is not 6 7 7
INFO:root:XX add new best (2, 1) is not 6 7 7
INFO:root:XX add new best (2, 1) is not 6 7 7
INFO:root:Considering 100 * 1 jobs for minsize=7
INFO:root:Chunked 100 in [9, 9, 9, 9, 8, 8, 8, 8, 8, 8, 8, 8]
INFO:root:XX add new best (2, 1) is not 6 7 7
INFO:root:XX add new best (2, 1) is not 6 7 7
INFO:root:XX add new best (2, 1) is not 6 7 7
INFO:root:XX add new best (2, 1) is not 6 7 7
INFO:root:XX add new best (2, 1) is not 6 7 7
INFO:root:XX add new best (2, 1) is not 6 7 7
INFO:root:XX add new best (2, 1) is not 6 7 7
INFO:root:XX add new best (2, 1) is not 6 7 7
INFO:root:XX add new best (2, 1) is not 6 7 7
INFO:root:XX add new best (2, 1) is not 6 7 7
INFO:root:XX add new best (2, 1) is not 6 7 7
INFO:root:XX add new best (2, 1) is not 6 7 7
INFO:root:XX add new best (2, 1) is not 6 7 7
INFO:root:Trace: [(7, [(2, 1) is not 6])]
INFO:root:Trace Quality: [(7, 1)]
INFO:root:Trace Sorted: [(7, 1)]
INFO:root:Finished
INFO:root:Full Trace [(7, [(2, 1) is not 6])]
INFO:root:Trying {'gallopingMUSes': True, 'minPrecheckMUS': True}
INFO:root:Starting Step 1
INFO:root:Current state [[[[1], [7, 9], [2, 9], [2, 7, 8], [5], [6], [4, 7, 8], [4, 8, 9], [3]], [[2, 5, 6], [4], [3], [1, 2, 7, 8], [9], [7, 8], [1, 5, 7, 8], [5, 6, 8], [6, 8]], [[8], [6, 7, 9], [5, 6, 9], [1, 7], [4], [3], [1, 5, 7], [5, 6, 9], [2]], [[4, 7], [3], [4, 8], [5], [6], [7, 8, 9], [2], [1], [4, 9]], [[9], [5], [6, 8], [4], [2], [1], [6, 8], [3], [7]], [[4, 6, 7], [2], [1], [7, 8], [3], [7, 8, 9], [4, 5, 6, 8], [4, 5, 6, 8], [4, 6, 9]], [[3], [1], [7], [9], [8], [2, 4], [4, 6], [2, 4, 6], [5]], [[2, 4, 5, 6], [6, 8], [2, 4, 5], [3], [1], [2, 4, 5], [9], [7], [4, 8]], [[2, 4, 5], [8, 9], [2, 4, 5, 9], [6], [7], [2, 4, 5], [3], [2, 4, 8], [1]]]]
INFO:root:Doing checkSmall1
INFO:root:Getting tiny MUSes, distance 1, for 1 puzlits, 1 repeats
INFO:root:Chunked 1 in [1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
INFO:root:Doing checkSmall2
INFO:root:Getting tiny MUSes, distance 2, for 1 puzlits, 1 repeats
INFO:root:Chunked 1 in [1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
INFO:root:Considering 100 * 1 jobs for minsize=3
INFO:root:Chunked 100 in [9, 9, 9, 9, 8, 8, 8, 8, 8, 8, 8, 8]
INFO:root:Considering 100 * 1 jobs for minsize=4
INFO:root:Chunked 100 in [9, 9, 9, 9, 8, 8, 8, 8, 8, 8, 8, 8]
INFO:root:Considering 100 * 1 jobs for minsize=5
INFO:root:Chunked 100 in [9, 9, 9, 9, 8, 8, 8, 8, 8, 8, 8, 8]
INFO:root:Considering 100 * 1 jobs for minsize=6
INFO:root:Chunked 100 in [9, 9, 9, 9, 8, 8, 8, 8, 8, 8, 8, 8]
INFO:root:XX found first (2, 1) is not 6 7
INFO:root:XX add new best (2, 1) is not 6 7 7
INFO:root:XX add new best (2, 1) is not 6 7 7
INFO:root:XX add new best (2, 1) is not 6 7 7
INFO:root:XX add new best (2, 1) is not 6 7 7
INFO:root:XX add new best (2, 1) is not 6 7 7
INFO:root:XX add new best (2, 1) is not 6 7 7
INFO:root:XX add new best (2, 1) is not 6 7 7
INFO:root:XX add new best (2, 1) is not 6 7 7
INFO:root:XX add new best (2, 1) is not 6 7 7
INFO:root:Considering 100 * 1 jobs for minsize=7
INFO:root:Chunked 100 in [9, 9, 9, 9, 8, 8, 8, 8, 8, 8, 8, 8]
INFO:root:XX add new best (2, 1) is not 6 7 7
INFO:root:XX add new best (2, 1) is not 6 7 7
INFO:root:XX add new best (2, 1) is not 6 7 7
INFO:root:XX add new best (2, 1) is not 6 7 7
INFO:root:XX add new best (2, 1) is not 6 7 7
INFO:root:XX add new best (2, 1) is not 6 7 7
INFO:root:XX add new best (2, 1) is not 6 7 7
INFO:root:XX add new best (2, 1) is not 6 7 7
INFO:root:XX add new best (2, 1) is not 6 7 7
INFO:root:XX add new best (2, 1) is not 6 7 7
INFO:root:XX add new best (2, 1) is not 6 7 7
INFO:root:XX add new best (2, 1) is not 6 7 7
INFO:root:XX add new best (2, 1) is not 6 7 7
INFO:root:Trace: [(7, [(2, 1) is not 6])]
INFO:root:Trace Quality: [(7, 1)]
INFO:root:Trace Sorted: [(7, 1)]
INFO:root:Finished
INFO:root:Full Trace [(7, [(2, 1) is not 6])]
INFO:root:Trying {}
INFO:root:Starting Step 1
INFO:root:Current state [[[[1], [7, 9], [2, 9], [2, 7, 8], [5], [6], [4, 7, 8], [4, 8, 9], [3]], [[2, 5], [4], [3], [1, 2, 7, 8], [9], [7, 8], [1, 5, 7, 8], [5, 6, 8], [6, 8]], [[8], [6, 7, 9], [5, 6, 9], [1, 7], [4], [3], [1, 5, 7], [5, 9], [2]], [[4, 7], [3], [4, 8], [5], [6], [7, 8, 9], [2], [1], [4, 9]], [[9], [5], [6, 8], [4], [2], [1], [6, 8], [3], [7]], [[4, 6, 7], [2], [1], [7, 8], [3], [7, 8, 9], [4, 5, 6, 8], [4, 5, 6, 8], [4, 6, 9]], [[3], [1], [7], [9], [8], [2, 4], [4, 6], [2, 4, 6], [5]], [[2, 4, 5, 6], [6, 8], [2, 4, 5], [3], [1], [2, 4, 5], [9], [7], [4, 8]], [[2, 4, 5], [8, 9], [2, 4, 5, 9], [6], [7], [2, 4, 5], [3], [2, 4, 8], [1]]]]
INFO:root:Doing checkSmall1
INFO:root:Getting tiny MUSes, distance 1, for 1 puzlits, 1 repeats
INFO:root:Chunked 1 in [1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
INFO:root:Doing checkSmall2
INFO:root:Getting tiny MUSes, distance 2, for 1 puzlits, 1 repeats
INFO:root:Chunked 1 in [1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
INFO:root:Considering 100 * 1 jobs for minsize=3
INFO:root:Chunked 100 in [9, 9, 9, 9, 8, 8, 8, 8, 8, 8, 8, 8]
INFO:root:Considering 100 * 1 jobs for minsize=4
INFO:root:Chunked 100 in [9, 9, 9, 9, 8, 8, 8, 8, 8, 8, 8, 8]
INFO:root:Considering 100 * 1 jobs for minsize=5
INFO:root:Chunked 100 in [9, 9, 9, 9, 8, 8, 8, 8, 8, 8, 8, 8]
INFO:root:Considering 100 * 1 jobs for minsize=6
INFO:root:Chunked 100 in [9, 9, 9, 9, 8, 8, 8, 8, 8, 8, 8, 8]
INFO:root:Considering 100 * 1 jobs for minsize=7
INFO:root:Chunked 100 in [9, 9, 9, 9, 8, 8, 8, 8, 8, 8, 8, 8]
INFO:root:Considering 100 * 1 jobs for minsize=8
INFO:root:Chunked 100 in [9, 9, 9, 9, 8, 8, 8, 8, 8, 8, 8, 8]
INFO:root:Considering 100 * 1 jobs for minsize=9
INFO:root:Chunked 100 in [9, 9, 9, 9, 8, 8, 8, 8, 8, 8, 8, 8]
INFO:root:Considering 100 * 1 jobs for minsize=10
INFO:root:Chunked 100 in [9, 9, 9, 9, 8, 8, 8, 8, 8, 8, 8, 8]
INFO:root:Considering 100 * 1 jobs for minsize=11
INFO:root:Chunked 100 in [9, 9, 9, 9, 8, 8, 8, 8, 8, 8, 8, 8]
INFO:root:Considering 100 * 1 jobs for minsize=12
INFO:root:Chunked 100 in [9, 9, 9, 9, 8, 8, 8, 8, 8, 8, 8, 8]
INFO:root:XX found first (2, 6) is not 8 13
INFO:root:XX add new best (2, 6) is not 8 13 13
INFO:root:XX add new best (2, 6) is not 8 13 13
INFO:root:XX add new best (2, 6) is not 8 13 13
INFO:root:XX add new best (2, 6) is not 8 13 13
INFO:root:XX add new best (2, 6) is not 8 13 13
INFO:root:XX add new best (2, 6) is not 8 13 13
INFO:root:XX add new best (2, 6) is not 8 13 13
INFO:root:XX add new best (2, 6) is not 8 13 13
INFO:root:XX add new best (2, 6) is not 8 13 13
INFO:root:XX add new best (2, 6) is not 8 13 13
INFO:root:XX add new best (2, 6) is not 8 13 13
INFO:root:XX add new best (2, 6) is not 8 13 13
INFO:root:XX add new best (2, 6) is not 8 13 13
INFO:root:XX add new best (2, 6) is not 8 13 13
INFO:root:XX add new best (2, 6) is not 8 13 13
INFO:root:XX add new best (2, 6) is not 8 13 13
INFO:root:XX add new best (2, 6) is not 8 13 13
INFO:root:XX add new best (2, 6) is not 8 13 13
INFO:root:XX add new best (2, 6) is not 8 13 13
INFO:root:XX add new best (2, 6) is not 8 13 13
INFO:root:XX add new best (2, 6) is not 8 13 13
INFO:root:XX add new best (2, 6) is not 8 13 13
INFO:root:XX add new best (2, 6) is not 8 13 13
INFO:root:XX add new best (2, 6) is not 8 13 13
INFO:root:XX add new best (2, 6) is not 8 13 13
INFO:root:XX add new best (2, 6) is not 8 13 13
INFO:root:XX add new best (2, 6) is not 8 13 13
INFO:root:XX add new best (2, 6) is not 8 13 13
INFO:root:XX add new best (2, 6) is not 8 13 13
INFO:root:XX add new best (2, 6) is not 8 13 13
INFO:root:XX add new best (2, 6) is not 8 13 13
INFO:root:XX add new best (2, 6) is not 8 13 13
INFO:root:XX add new best (2, 6) is not 8 13 13
INFO:root:XX add new best (2, 6) is not 8 13 13
INFO:root:XX add new best (2, 6) is not 8 13 13
INFO:root:XX add new best (2, 6) is not 8 13 13
INFO:root:XX add new best (2, 6) is not 8 13 13
INFO:root:XX add new best (2, 6) is not 8 13 13
INFO:root:XX add new best (2, 6) is not 8 13 13
INFO:root:XX add new best (2, 6) is not 8 13 13
INFO:root:XX add new best (2, 6) is not 8 13 13
INFO:root:XX add new best (2, 6) is not 8 13 13
INFO:root:XX add new best (2, 6) is not 8 13 13
INFO:root:XX add new best (2, 6) is not 8 13 13
INFO:root:XX add new best (2, 6) is not 8 13 13
INFO:root:XX add new best (2, 6) is not 8 13 13
INFO:root:XX add new best (2, 6) is not 8 13 13
INFO:root:XX add new best (2, 6) is not 8 13 13
INFO:root:XX add new best (2, 6) is not 8 13 13
INFO:root:XX add new best (2, 6) is not 8 13 13
INFO:root:Considering 100 * 1 jobs for minsize=13
INFO:root:Chunked 100 in [9, 9, 9, 9, 8, 8, 8, 8, 8, 8, 8, 8]
INFO:root:XX add new best (2, 6) is not 8 13 13
INFO:root:XX add new best (2, 6) is not 8 13 13
INFO:root:XX add new best (2, 6) is not 8 13 13
INFO:root:XX add new best (2, 6) is not 8 13 13
INFO:root:XX add new best (2, 6) is not 8 13 13
INFO:root:XX add new best (2, 6) is not 8 13 13
INFO:root:XX add new best (2, 6) is not 8 13 13
INFO:root:XX add new best (2, 6) is not 8 13 13
INFO:root:XX add new best (2, 6) is not 8 13 13
INFO:root:XX add new best (2, 6) is not 8 13 13
INFO:root:XX add new best (2, 6) is not 8 13 13
INFO:root:XX add new best (2, 6) is not 8 13 13
INFO:root:XX add new best (2, 6) is not 8 13 13
INFO:root:XX add new best (2, 6) is not 8 13 13
INFO:root:XX add new best (2, 6) is not 8 13 13
INFO:root:XX add new best (2, 6) is not 8 13 13
INFO:root:XX add new best (2, 6) is not 8 13 13
INFO:root:XX add new best (2, 6) is not 8 13 13
INFO:root:XX add new best (2, 6) is not 8 13 13
INFO:root:XX add new best (2, 6) is not 8 13 13
INFO:root:XX add new best (2, 6) is not 8 13 13
INFO:root:XX add new best (2, 6) is not 8 13 13
INFO:root:XX add new best (2, 6) is not 8 13 13
INFO:root:XX add new best (2, 6) is not 8 13 13
INFO:root:XX add new best (2, 6) is not 8 13 13
INFO:root:XX add new best (2, 6) is not 8 13 13
INFO:root:XX add new best (2, 6) is not 8 13 13
INFO:root:XX add new best (2, 6) is not 8 13 13
INFO:root:XX add new best (2, 6) is not 8 13 13
INFO:root:XX add new best (2, 6) is not 8 13 13
INFO:root:XX add new best (2, 6) is not 8 13 13
INFO:root:XX add new best (2, 6) is not 8 13 13
INFO:root:XX add new best (2, 6) is not 8 13 13
INFO:root:XX add new best (2, 6) is not 8 13 13
INFO:root:XX add new best (2, 6) is not 8 13 13
INFO:root:XX add new best (2, 6) is not 8 13 13
INFO:root:XX add new best (2, 6) is not 8 13 13
INFO:root:XX add new best (2, 6) is not 8 13 13
INFO:root:XX add new best (2, 6) is not 8 13 13
INFO:root:XX add new best (2, 6) is not 8 13 13
INFO:root:XX add new best (2, 6) is not 8 13 13
INFO:root:XX add new best (2, 6) is not 8 13 13
INFO:root:XX add new best (2, 6) is not 8 13 13
INFO:root:XX add new best (2, 6) is not 8 13 13
INFO:root:XX add new best (2, 6) is not 8 13 13
INFO:root:XX add new best (2, 6) is not 8 13 13
INFO:root:XX add new best (2, 6) is not 8 13 13
INFO:root:XX add new best (2, 6) is not 8 13 13
INFO:root:XX add new best (2, 6) is not 8 13 13
INFO:root:XX add new best (2, 6) is not 8 13 13
INFO:root:XX add new best (2, 6) is not 8 13 13
INFO:root:Trace: [(13, [(2, 6) is not 8])]
INFO:root:Trace Quality: [(13, 1)]
INFO:root:Trace Sorted: [(13, 1)]
INFO:root:Finished
INFO:root:Full Trace [(13, [(2, 6) is not 8])]
INFO:root:Trying {'prechopMUSes': True}
INFO:root:Starting Step 1
INFO:root:Current state [[[[1], [7, 9], [2, 9], [2, 7, 8], [5], [6], [4, 7, 8], [4, 8, 9], [3]], [[2, 5], [4], [3], [1, 2, 7, 8], [9], [7, 8], [1, 5, 7, 8], [5, 6, 8], [6, 8]], [[8], [6, 7, 9], [5, 6, 9], [1, 7], [4], [3], [1, 5, 7], [5, 9], [2]], [[4, 7], [3], [4, 8], [5], [6], [7, 8, 9], [2], [1], [4, 9]], [[9], [5], [6, 8], [4], [2], [1], [6, 8], [3], [7]], [[4, 6, 7], [2], [1], [7, 8], [3], [7, 8, 9], [4, 5, 6, 8], [4, 5, 6, 8], [4, 6, 9]], [[3], [1], [7], [9], [8], [2, 4], [4, 6], [2, 4, 6], [5]], [[2, 4, 5, 6], [6, 8], [2, 4, 5], [3], [1], [2, 4, 5], [9], [7], [4, 8]], [[2, 4, 5], [8, 9], [2, 4, 5, 9], [6], [7], [2, 4, 5], [3], [2, 4, 8], [1]]]]
INFO:root:Doing checkSmall1
INFO:root:Getting tiny MUSes, distance 1, for 1 puzlits, 1 repeats
INFO:root:Chunked 1 in [1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
INFO:root:Doing checkSmall2
INFO:root:Getting tiny MUSes, distance 2, for 1 puzlits, 1 repeats
INFO:root:Chunked 1 in [1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
INFO:root:Considering 100 * 1 jobs for minsize=3
INFO:root:Chunked 100 in [9, 9, 9, 9, 8, 8, 8, 8, 8, 8, 8, 8]
INFO:root:Considering 100 * 1 jobs for minsize=4
INFO:root:Chunked 100 in [9, 9, 9, 9, 8, 8, 8, 8, 8, 8, 8, 8]
INFO:root:Considering 100 * 1 jobs for minsize=5
INFO:root:Chunked 100 in [9, 9, 9, 9, 8, 8, 8, 8, 8, 8, 8, 8]
INFO:root:Considering 100 * 1 jobs for minsize=6
INFO:root:Chunked 100 in [9, 9, 9, 9, 8, 8, 8, 8, 8, 8, 8, 8]
INFO:root:Considering 100 * 1 jobs for minsize=7
INFO:root:Chunked 100 in [9, 9, 9, 9, 8, 8, 8, 8, 8, 8, 8, 8]
INFO:root:Considering 100 * 1 jobs for minsize=8
INFO:root:Chunked 100 in [9, 9, 9, 9, 8, 8, 8, 8, 8, 8, 8, 8]
INFO:root:Considering 100 * 1 jobs for minsize=9
INFO:root:Chunked 100 in [9, 9, 9, 9, 8, 8, 8, 8, 8, 8, 8, 8]
INFO:root:Considering 100 * 1 jobs for minsize=10
INFO:root:Chunked 100 in [9, 9, 9, 9, 8, 8, 8, 8, 8, 8, 8, 8]
INFO:root:XX found first (2, 6) is not 8 11
INFO:root:XX add new best (2, 6) is not 8 11 11
INFO:root:XX add new best (2, 6) is not 8 11 11
INFO:root:XX add new best (2, 6) is not 8 11 11
INFO:root:Considering 100 * 1 jobs for minsize=11
INFO:root:Chunked 100 in [9, 9, 9, 9, 8, 8, 8, 8, 8, 8, 8, 8]
INFO:root:XX add new best (2, 6) is not 8 11 11
INFO:root:XX add new best (2, 6) is not 8 11 11
INFO:root:XX add new best (2, 6) is not 8 11 11
INFO:root:Trace: [(11, [(2, 6) is not 8])]
INFO:root:Trace Quality: [(11, 1)]
INFO:root:Trace Sorted: [(11, 1)]
INFO:root:Finished
INFO:root:Full Trace [(11, [(2, 6) is not 8])]
INFO:root:Trying {'quarterChopMUS': True}
INFO:root:Starting Step 1
INFO:root:Current state [[[[1], [7, 9], [2, 9], [2, 7, 8], [5], [6], [4, 7, 8], [4, 8, 9], [3]], [[2, 5], [4], [3], [1, 2, 7, 8], [9], [7, 8], [1, 5, 7, 8], [5, 6, 8], [6, 8]], [[8], [6, 7, 9], [5, 6, 9], [1, 7], [4], [3], [1, 5, 7], [5, 9], [2]], [[4, 7], [3], [4, 8], [5], [6], [7, 8, 9], [2], [1], [4, 9]], [[9], [5], [6, 8], [4], [2], [1], [6, 8], [3], [7]], [[4, 6, 7], [2], [1], [7, 8], [3], [7, 8, 9], [4, 5, 6, 8], [4, 5, 6, 8], [4, 6, 9]], [[3], [1], [7], [9], [8], [2, 4], [4, 6], [2, 4, 6], [5]], [[2, 4, 5, 6], [6, 8], [2, 4, 5], [3], [1], [2, 4, 5], [9], [7], [4, 8]], [[2, 4, 5], [8, 9], [2, 4, 5, 9], [6], [7], [2, 4, 5], [3], [2, 4, 8], [1]]]]
INFO:root:Doing checkSmall1
INFO:root:Getting tiny MUSes, distance 1, for 1 puzlits, 1 repeats
INFO:root:Chunked 1 in [1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
INFO:root:Doing checkSmall2
INFO:root:Getting tiny MUSes, distance 2, for 1 puzlits, 1 repeats
INFO:root:Chunked 1 in [1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
INFO:root:Considering 100 * 1 jobs for minsize=3
INFO:root:Chunked 100 in [9, 9, 9, 9, 8, 8, 8, 8, 8, 8, 8, 8]
INFO:root:Considering 100 * 1 jobs for minsize=4
INFO:root:Chunked 100 in [9, 9, 9, 9, 8, 8, 8, 8, 8, 8, 8, 8]
INFO:root:Considering 100 * 1 jobs for minsize=5
INFO:root:Chunked 100 in [9, 9, 9, 9, 8, 8, 8, 8, 8, 8, 8, 8]
INFO:root:Considering 100 * 1 jobs for minsize=6
INFO:root:Chunked 100 in [9, 9, 9, 9, 8, 8, 8, 8, 8, 8, 8, 8]
INFO:root:Considering 100 * 1 jobs for minsize=7
INFO:root:Chunked 100 in [9, 9, 9, 9, 8, 8, 8, 8, 8, 8, 8, 8]
INFO:root:Considering 100 * 1 jobs for minsize=8
INFO:root:Chunked 100 in [9, 9, 9, 9, 8, 8, 8, 8, 8, 8, 8, 8]
INFO:root:Considering 100 * 1 jobs for minsize=9
INFO:root:Chunked 100 in [9, 9, 9, 9, 8, 8, 8, 8, 8, 8, 8, 8]
INFO:root:Considering 100 * 1 jobs for minsize=10
INFO:root:Chunked 100 in [9, 9, 9, 9, 8, 8, 8, 8, 8, 8, 8, 8]
INFO:root:XX found first (2, 6) is not 8 11
INFO:root:XX add new best (2, 6) is not 8 11 11
INFO:root:XX add new best (2, 6) is not 8 11 11
INFO:root:XX add new best (2, 6) is not 8 11 11
INFO:root:XX add new best (2, 6) is not 8 11 11
INFO:root:XX add new best (2, 6) is not 8 11 11
INFO:root:XX add new best (2, 6) is not 8 11 11
INFO:root:Considering 100 * 1 jobs for minsize=11
INFO:root:Chunked 100 in [9, 9, 9, 9, 8, 8, 8, 8, 8, 8, 8, 8]
INFO:root:XX add new best (2, 6) is not 8 11 11
INFO:root:XX add new best (2, 6) is not 8 11 11
INFO:root:XX add new best (2, 6) is not 8 11 11
INFO:root:XX add new best (2, 6) is not 8 11 11
INFO:root:XX add new best (2, 6) is not 8 11 11
INFO:root:XX add new best (2, 6) is not 8 11 11
INFO:root:XX add new best (2, 6) is not 8 11 11
INFO:root:XX add new best (2, 6) is not 8 11 11
INFO:root:Trace: [(11, [(2, 6) is not 8])]
INFO:root:Trace Quality: [(11, 1)]
INFO:root:Trace Sorted: [(11, 1)]
INFO:root:Finished
INFO:root:Full Trace [(11, [(2, 6) is not 8])]
INFO:root:Trying {'minPrecheckMUS': True}
INFO:root:Starting Step 1
INFO:root:Current state [[[[1], [7, 9], [2, 9], [2, 7, 8], [5], [6], [4, 7, 8], [4, 8, 9], [3]], [[2, 5], [4], [3], [1, 2, 7, 8], [9], [7, 8], [1, 5, 7, 8], [5, 6, 8], [6, 8]], [[8], [6, 7, 9], [5, 6, 9], [1, 7], [4], [3], [1, 5, 7], [5, 9], [2]], [[4, 7], [3], [4, 8], [5], [6], [7, 8, 9], [2], [1], [4, 9]], [[9], [5], [6, 8], [4], [2], [1], [6, 8], [3], [7]], [[4, 6, 7], [2], [1], [7, 8], [3], [7, 8, 9], [4, 5, 6, 8], [4, 5, 6, 8], [4, 6, 9]], [[3], [1], [7], [9], [8], [2, 4], [4, 6], [2, 4, 6], [5]], [[2, 4, 5, 6], [6, 8], [2, 4, 5], [3], [1], [2, 4, 5], [9], [7], [4, 8]], [[2, 4, 5], [8, 9], [2, 4, 5, 9], [6], [7], [2, 4, 5], [3], [2, 4, 8], [1]]]]
INFO:root:Doing checkSmall1
INFO:root:Getting tiny MUSes, distance 1, for 1 puzlits, 1 repeats
INFO:root:Chunked 1 in [1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
INFO:root:Doing checkSmall2
INFO:root:Getting tiny MUSes, distance 2, for 1 puzlits, 1 repeats
INFO:root:Chunked 1 in [1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
INFO:root:Considering 100 * 1 jobs for minsize=3
INFO:root:Chunked 100 in [9, 9, 9, 9, 8, 8, 8, 8, 8, 8, 8, 8]
INFO:root:Considering 100 * 1 jobs for minsize=4
INFO:root:Chunked 100 in [9, 9, 9, 9, 8, 8, 8, 8, 8, 8, 8, 8]
INFO:root:Considering 100 * 1 jobs for minsize=5
INFO:root:Chunked 100 in [9, 9, 9, 9, 8, 8, 8, 8, 8, 8, 8, 8]
INFO:root:Considering 100 * 1 jobs for minsize=6
INFO:root:Chunked 100 in [9, 9, 9, 9, 8, 8, 8, 8, 8, 8, 8, 8]
INFO:root:Considering 100 * 1 jobs for minsize=7
INFO:root:Chunked 100 in [9, 9, 9, 9, 8, 8, 8, 8, 8, 8, 8, 8]
INFO:root:Considering 100 * 1 jobs for minsize=8
INFO:root:Chunked 100 in [9, 9, 9, 9, 8, 8, 8, 8, 8, 8, 8, 8]
INFO:root:Considering 100 * 1 jobs for minsize=9
INFO:root:Chunked 100 in [9, 9, 9, 9, 8, 8, 8, 8, 8, 8, 8, 8]
INFO:root:Considering 100 * 1 jobs for minsize=10
INFO:root:Chunked 100 in [9, 9, 9, 9, 8, 8, 8, 8, 8, 8, 8, 8]
INFO:root:XX found first (2, 6) is not 8 11
INFO:root:XX add new best (2, 6) is not 8 11 11
INFO:root:XX add new best (2, 6) is not 8 11 11
INFO:root:XX add new best (2, 6) is not 8 11 11
INFO:root:XX add new best (2, 6) is not 8 11 11
INFO:root:Considering 100 * 1 jobs for minsize=11
INFO:root:Chunked 100 in [9, 9, 9, 9, 8, 8, 8, 8, 8, 8, 8, 8]
INFO:root:Trace: [(11, [(2, 6) is not 8])]
INFO:root:Trace Quality: [(11, 1)]
INFO:root:Trace Sorted: [(11, 1)]
INFO:root:Finished
INFO:root:Full Trace [(11, [(2, 6) is not 8])]
INFO:root:Trying {'gallopingMUSes': True}
INFO:root:Starting Step 1
INFO:root:Current state [[[[1], [7, 9], [2, 9], [2, 7, 8], [5], [6], [4, 7, 8], [4, 8, 9], [3]], [[2, 5], [4], [3], [1, 2, 7, 8], [9], [7, 8], [1, 5, 7, 8], [5, 6, 8], [6, 8]], [[8], [6, 7, 9], [5, 6, 9], [1, 7], [4], [3], [1, 5, 7], [5, 9], [2]], [[4, 7], [3], [4, 8], [5], [6], [7, 8, 9], [2], [1], [4, 9]], [[9], [5], [6, 8], [4], [2], [1], [6, 8], [3], [7]], [[4, 6, 7], [2], [1], [7, 8], [3], [7, 8, 9], [4, 5, 6, 8], [4, 5, 6, 8], [4, 6, 9]], [[3], [1], [7], [9], [8], [2, 4], [4, 6], [2, 4, 6], [5]], [[2, 4, 5, 6], [6, 8], [2, 4, 5], [3], [1], [2, 4, 5], [9], [7], [4, 8]], [[2, 4, 5], [8, 9], [2, 4, 5, 9], [6], [7], [2, 4, 5], [3], [2, 4, 8], [1]]]]
INFO:root:Doing checkSmall1
INFO:root:Getting tiny MUSes, distance 1, for 1 puzlits, 1 repeats
INFO:root:Chunked 1 in [1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
INFO:root:Doing checkSmall2
INFO:root:Getting tiny MUSes, distance 2, for 1 puzlits, 1 repeats
INFO:root:Chunked 1 in [1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
INFO:root:Considering 100 * 1 jobs for minsize=3
INFO:root:Chunked 100 in [9, 9, 9, 9, 8, 8, 8, 8, 8, 8, 8, 8]
INFO:root:Considering 100 * 1 jobs for minsize=4
INFO:root:Chunked 100 in [9, 9, 9, 9, 8, 8, 8, 8, 8, 8, 8, 8]
INFO:root:Considering 100 * 1 jobs for minsize=5
INFO:root:Chunked 100 in [9, 9, 9, 9, 8, 8, 8, 8, 8, 8, 8, 8]
INFO:root:Considering 100 * 1 jobs for minsize=6
INFO:root:Chunked 100 in [9, 9, 9, 9, 8, 8, 8, 8, 8, 8, 8, 8]
INFO:root:Considering 100 * 1 jobs for minsize=7
INFO:root:Chunked 100 in [9, 9, 9, 9, 8, 8, 8, 8, 8, 8, 8, 8]
INFO:root:Considering 100 * 1 jobs for minsize=8
INFO:root:Chunked 100 in [9, 9, 9, 9, 8, 8, 8, 8, 8, 8, 8, 8]
INFO:root:Considering 100 * 1 jobs for minsize=9
INFO:root:Chunked 100 in [9, 9, 9, 9, 8, 8, 8, 8, 8, 8, 8, 8]
INFO:root:Considering 100 * 1 jobs for minsize=10
INFO:root:Chunked 100 in [9, 9, 9, 9, 8, 8, 8, 8, 8, 8, 8, 8]
INFO:root:XX found first (2, 6) is not 8 11
INFO:root:XX add new best (2, 6) is not 8 11 11
INFO:root:Considering 100 * 1 jobs for minsize=11
INFO:root:Chunked 100 in [9, 9, 9, 9, 8, 8, 8, 8, 8, 8, 8, 8]
INFO:root:Trace: [(11, [(2, 6) is not 8])]
INFO:root:Trace Quality: [(11, 1)]
INFO:root:Trace Sorted: [(11, 1)]
INFO:root:Finished
INFO:root:Full Trace [(11, [(2, 6) is not 8])]
INFO:root:Trying {'minPrecheckStepsMUS': True}
INFO:root:Starting Step 1
INFO:root:Current state [[[[1], [7, 9], [2, 9], [2, 7, 8], [5], [6], [4, 7, 8], [4, 8, 9], [3]], [[2, 5], [4], [3], [1, 2, 7, 8], [9], [7, 8], [1, 5, 7, 8], [5, 6, 8], [6, 8]], [[8], [6, 7, 9], [5, 6, 9], [1, 7], [4], [3], [1, 5, 7], [5, 9], [2]], [[4, 7], [3], [4, 8], [5], [6], [7, 8, 9], [2], [1], [4, 9]], [[9], [5], [6, 8], [4], [2], [1], [6, 8], [3], [7]], [[4, 6, 7], [2], [1], [7, 8], [3], [7, 8, 9], [4, 5, 6, 8], [4, 5, 6, 8], [4, 6, 9]], [[3], [1], [7], [9], [8], [2, 4], [4, 6], [2, 4, 6], [5]], [[2, 4, 5, 6], [6, 8], [2, 4, 5], [3], [1], [2, 4, 5], [9], [7], [4, 8]], [[2, 4, 5], [8, 9], [2, 4, 5, 9], [6], [7], [2, 4, 5], [3], [2, 4, 8], [1]]]]
INFO:root:Doing checkSmall1
INFO:root:Getting tiny MUSes, distance 1, for 1 puzlits, 1 repeats
INFO:root:Chunked 1 in [1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
INFO:root:Doing checkSmall2
INFO:root:Getting tiny MUSes, distance 2, for 1 puzlits, 1 repeats
INFO:root:Chunked 1 in [1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
INFO:root:Considering 100 * 1 jobs for minsize=3
INFO:root:Chunked 100 in [9, 9, 9, 9, 8, 8, 8, 8, 8, 8, 8, 8]
INFO:root:Considering 100 * 1 jobs for minsize=4
INFO:root:Chunked 100 in [9, 9, 9, 9, 8, 8, 8, 8, 8, 8, 8, 8]
INFO:root:Considering 100 * 1 jobs for minsize=5
INFO:root:Chunked 100 in [9, 9, 9, 9, 8, 8, 8, 8, 8, 8, 8, 8]
INFO:root:Considering 100 * 1 jobs for minsize=6
INFO:root:Chunked 100 in [9, 9, 9, 9, 8, 8, 8, 8, 8, 8, 8, 8]
INFO:root:Considering 100 * 1 jobs for minsize=7
INFO:root:Chunked 100 in [9, 9, 9, 9, 8, 8, 8, 8, 8, 8, 8, 8]
INFO:root:Considering 100 * 1 jobs for minsize=8
INFO:root:Chunked 100 in [9, 9, 9, 9, 8, 8, 8, 8, 8, 8, 8, 8]
INFO:root:Considering 100 * 1 jobs for minsize=9
INFO:root:Chunked 100 in [9, 9, 9, 9, 8, 8, 8, 8, 8, 8, 8, 8]
INFO:root:Considering 100 * 1 jobs for minsize=10
INFO:root:Chunked 100 in [9, 9, 9, 9, 8, 8, 8, 8, 8, 8, 8, 8]
INFO:root:XX found first (2, 6) is not 8 11
INFO:root:XX add new best (2, 6) is not 8 11 11
INFO:root:XX add new best (2, 6) is not 8 11 11
INFO:root:XX add new best (2, 6) is not 8 11 11
INFO:root:XX add new best (2, 6) is not 8 11 11
INFO:root:Considering 100 * 1 jobs for minsize=11
INFO:root:Chunked 100 in [9, 9, 9, 9, 8, 8, 8, 8, 8, 8, 8, 8]
INFO:root:Trace: [(11, [(2, 6) is not 8])]
INFO:root:Trace Quality: [(11, 1)]
INFO:root:Trace Sorted: [(11, 1)]
INFO:root:Finished
INFO:root:Full Trace [(11, [(2, 6) is not 8])]
INFO:root:Trying {'gallopingMUSes': True, 'minPrecheckMUS': True}
INFO:root:Starting Step 1
INFO:root:Current state [[[[1], [7, 9], [2, 9], [2, 7, 8], [5], [6], [4, 7, 8], [4, 8, 9], [3]], [[2, 5], [4], [3], [1, 2, 7, 8], [9], [7, 8], [1, 5, 7, 8], [5, 6, 8], [6, 8]], [[8], [6, 7, 9], [5, 6, 9], [1, 7], [4], [3], [1, 5, 7], [5, 9], [2]], [[4, 7], [3], [4, 8], [5], [6], [7, 8, 9], [2], [1], [4, 9]], [[9], [5], [6, 8], [4], [2], [1], [6, 8], [3], [7]], [[4, 6, 7], [2], [1], [7, 8], [3], [7, 8, 9], [4, 5, 6, 8], [4, 5, 6, 8], [4, 6, 9]], [[3], [1], [7], [9], [8], [2, 4], [4, 6], [2, 4, 6], [5]], [[2, 4, 5, 6], [6, 8], [2, 4, 5], [3], [1], [2, 4, 5], [9], [7], [4, 8]], [[2, 4, 5], [8, 9], [2, 4, 5, 9], [6], [7], [2, 4, 5], [3], [2, 4, 8], [1]]]]
INFO:root:Doing checkSmall1
INFO:root:Getting tiny MUSes, distance 1, for 1 puzlits, 1 repeats
INFO:root:Chunked 1 in [1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
INFO:root:Doing checkSmall2
INFO:root:Getting tiny MUSes, distance 2, for 1 puzlits, 1 repeats
INFO:root:Chunked 1 in [1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
INFO:root:Considering 100 * 1 jobs for minsize=3
INFO:root:Chunked 100 in [9, 9, 9, 9, 8, 8, 8, 8, 8, 8, 8, 8]
INFO:root:Considering 100 * 1 jobs for minsize=4
INFO:root:Chunked 100 in [9, 9, 9, 9, 8, 8, 8, 8, 8, 8, 8, 8]
INFO:root:Considering 100 * 1 jobs for minsize=5
INFO:root:Chunked 100 in [9, 9, 9, 9, 8, 8, 8, 8, 8, 8, 8, 8]
INFO:root:Considering 100 * 1 jobs for minsize=6
INFO:root:Chunked 100 in [9, 9, 9, 9, 8, 8, 8, 8, 8, 8, 8, 8]
INFO:root:Considering 100 * 1 jobs for minsize=7
INFO:root:Chunked 100 in [9, 9, 9, 9, 8, 8, 8, 8, 8, 8, 8, 8]
INFO:root:Considering 100 * 1 jobs for minsize=8
INFO:root:Chunked 100 in [9, 9, 9, 9, 8, 8, 8, 8, 8, 8, 8, 8]
INFO:root:Considering 100 * 1 jobs for minsize=9
INFO:root:Chunked 100 in [9, 9, 9, 9, 8, 8, 8, 8, 8, 8, 8, 8]
INFO:root:Considering 100 * 1 jobs for minsize=10
INFO:root:Chunked 100 in [9, 9, 9, 9, 8, 8, 8, 8, 8, 8, 8, 8]
INFO:root:XX found first (2, 6) is not 8 11
INFO:root:XX add new best (2, 6) is not 8 11 11
INFO:root:XX add new best (2, 6) is not 8 11 11
INFO:root:XX add new best (2, 6) is not 8 11 11
INFO:root:XX add new best (2, 6) is not 8 11 11
INFO:root:Considering 100 * 1 jobs for minsize=11
INFO:root:Chunked 100 in [9, 9, 9, 9, 8, 8, 8, 8, 8, 8, 8, 8]
INFO:root:Trace: [(11, [(2, 6) is not 8])]
INFO:root:Trace Quality: [(11, 1)]
INFO:root:Trace Sorted: [(11, 1)]
INFO:root:Finished
INFO:root:Full Trace [(11, [(2, 6) is not 8])]
INFO:root:Trying {}
INFO:root:Starting Step 1
INFO:root:Current state [[[[9], [2], [3], [4], [6, 8], [7], [6, 8], [1], [5]], [[8], [7], [6], [1, 3], [5], [1, 3], [9], [2], [4]], [[5], [1, 4], [1, 4], [2], [6, 8, 9], [6, 9], [6, 7, 8], [3], [7, 8]], [[7], [6], [9], [3, 5, 8], [2], [3, 5], [1], [4], [3, 8]], [[4], [3], [2], [1, 6, 8], [1, 6, 7], [1, 6], [7, 8], [5], [9]], [[1], [8], [5], [3, 9], [7, 9], [4], [2], [6], [3, 7]], [[3, 6], [9], [8], [5, 6], [4], [2], [3, 5], [7], [1]], [[2], [1, 5], [7], [1, 5, 9], [3], [1, 5, 9], [4], [8], [6]], [[3, 6], [1, 4, 5], [1, 4], [7], [1, 6], [8], [3, 5], [9], [2]]]]
INFO:root:Doing checkSmall1
INFO:root:Getting tiny MUSes, distance 1, for 1 puzlits, 1 repeats
INFO:root:Chunked 1 in [1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
INFO:root:Doing checkSmall2
INFO:root:Getting tiny MUSes, distance 2, for 1 puzlits, 1 repeats
INFO:root:Chunked 1 in [1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
INFO:root:Considering 100 * 1 jobs for minsize=3
INFO:root:Chunked 100 in [9, 9, 9, 9, 8, 8, 8, 8, 8, 8, 8, 8]
INFO:root:Considering 100 * 1 jobs for minsize=4
INFO:root:Chunked 100 in [9, 9, 9, 9, 8, 8, 8, 8, 8, 8, 8, 8]
INFO:root:Considering 100 * 1 jobs for minsize=5
INFO:root:Chunked 100 in [9, 9, 9, 9, 8, 8, 8, 8, 8, 8, 8, 8]
INFO:root:Considering 100 * 1 jobs for minsize=6
INFO:root:Chunked 100 in [9, 9, 9, 9, 8, 8, 8, 8, 8, 8, 8, 8]
INFO:root:Considering 100 * 1 jobs for minsize=7
INFO:root:Chunked 100 in [9, 9, 9, 9, 8, 8, 8, 8, 8, 8, 8, 8]
INFO:root:Considering 100 * 1 jobs for minsize=8
INFO:root:Chunked 100 in [9, 9, 9, 9, 8, 8, 8, 8, 8, 8, 8, 8]
INFO:root:Considering 100 * 1 jobs for minsize=9
INFO:root:Chunked 100 in [9, 9, 9, 9, 8, 8, 8, 8, 8, 8, 8, 8]
INFO:root:Considering 100 * 1 jobs for minsize=10
INFO:root:Chunked 100 in [9, 9, 9, 9, 8, 8, 8, 8, 8, 8, 8, 8]
INFO:root:XX found first (3, 5) is not 8 11
INFO:root:XX add new best (3, 5) is not 8 11 11
INFO:root:XX add new best (3, 5) is not 8 11 11
INFO:root:XX add new best (3, 5) is not 8 11 11
INFO:root:XX add new best (3, 5) is not 8 11 11
INFO:root:XX add new best (3, 5) is not 8 11 11
INFO:root:XX add new best (3, 5) is not 8 11 11
INFO:root:XX add new best (3, 5) is not 8 11 11
INFO:root:XX add new best (3, 5) is not 8 11 11
INFO:root:XX add new best (3, 5) is not 8 11 11
INFO:root:XX add new best (3, 5) is not 8 11 11
INFO:root:XX add new best (3, 5) is not 8 11 11
INFO:root:XX add new best (3, 5) is not 8 11 11
INFO:root:XX add new best (3, 5) is not 8 11 11
INFO:root:XX add new best (3, 5) is not 8 11 11
INFO:root:XX add new best (3, 5) is not 8 11 11
INFO:root:XX add new best (3, 5) is not 8 11 11
INFO:root:XX add new best (3, 5) is not 8 11 11
INFO:root:XX add new best (3, 5) is not 8 11 11
INFO:root:XX add new best (3, 5) is not 8 11 11
INFO:root:XX add new best (3, 5) is not 8 11 11
INFO:root:XX add new best (3, 5) is not 8 11 11
INFO:root:XX add new best (3, 5) is not 8 11 11
INFO:root:XX add new best (3, 5) is not 8 11 11
INFO:root:XX add new best (3, 5) is not 8 11 11
INFO:root:XX add new best (3, 5) is not 8 11 11
INFO:root:XX add new best (3, 5) is not 8 11 11
INFO:root:XX add new best (3, 5) is not 8 11 11
INFO:root:XX add new best (3, 5) is not 8 11 11
INFO:root:XX add new best (3, 5) is not 8 11 11
INFO:root:XX add new best (3, 5) is not 8 11 11
INFO:root:XX add new best (3, 5) is not 8 11 11
INFO:root:XX add new best (3, 5) is not 8 11 11
INFO:root:XX add new best (3, 5) is not 8 11 11
INFO:root:XX add new best (3, 5) is not 8 11 11
INFO:root:XX add new best (3, 5) is not 8 11 11
INFO:root:XX add new best (3, 5) is not 8 11 11
INFO:root:XX add new best (3, 5) is not 8 11 11
INFO:root:XX add new best (3, 5) is not 8 11 11
INFO:root:XX add new best (3, 5) is not 8 11 11
INFO:root:XX add new best (3, 5) is not 8 11 11
INFO:root:XX add new best (3, 5) is not 8 11 11
INFO:root:XX add new best (3, 5) is not 8 11 11
INFO:root:XX add new best (3, 5) is not 8 11 11
INFO:root:XX add new best (3, 5) is not 8 11 11
INFO:root:XX add new best (3, 5) is not 8 11 11
INFO:root:XX add new best (3, 5) is not 8 11 11
INFO:root:XX add new best (3, 5) is not 8 11 11
INFO:root:XX add new best (3, 5) is not 8 11 11
INFO:root:XX add new best (3, 5) is not 8 11 11
INFO:root:XX add new best (3, 5) is not 8 11 11
INFO:root:Considering 100 * 1 jobs for minsize=11
INFO:root:Chunked 100 in [9, 9, 9, 9, 8, 8, 8, 8, 8, 8, 8, 8]
INFO:root:XX add new best (3, 5) is not 8 11 11
INFO:root:XX add new best (3, 5) is not 8 11 11
INFO:root:XX add new best (3, 5) is not 8 11 11
INFO:root:XX add new best (3, 5) is not 8 11 11
INFO:root:XX add new best (3, 5) is not 8 11 11
INFO:root:XX add new best (3, 5) is not 8 11 11
INFO:root:XX add new best (3, 5) is not 8 11 11
INFO:root:XX add new best (3, 5) is not 8 11 11
INFO:root:XX add new best (3, 5) is not 8 11 11
INFO:root:XX add new best (3, 5) is not 8 11 11
INFO:root:XX add new best (3, 5) is not 8 11 11
INFO:root:XX add new best (3, 5) is not 8 11 11
INFO:root:XX add new best (3, 5) is not 8 11 11
INFO:root:XX add new best (3, 5) is not 8 11 11
INFO:root:XX add new best (3, 5) is not 8 11 11
INFO:root:XX add new best (3, 5) is not 8 11 11
INFO:root:XX add new best (3, 5) is not 8 11 11
INFO:root:XX add new best (3, 5) is not 8 11 11
INFO:root:XX add new best (3, 5) is not 8 11 11
INFO:root:XX add new best (3, 5) is not 8 11 11
INFO:root:XX add new best (3, 5) is not 8 11 11
INFO:root:XX add new best (3, 5) is not 8 11 11
INFO:root:XX add new best (3, 5) is not 8 11 11
INFO:root:XX add new best (3, 5) is not 8 11 11
INFO:root:XX add new best (3, 5) is not 8 11 11
INFO:root:XX add new best (3, 5) is not 8 11 11
INFO:root:XX add new best (3, 5) is not 8 11 11
INFO:root:XX add new best (3, 5) is not 8 11 11
INFO:root:XX add new best (3, 5) is not 8 11 11
INFO:root:XX add new best (3, 5) is not 8 11 11
INFO:root:XX add new best (3, 5) is not 8 11 11
INFO:root:XX add new best (3, 5) is not 8 11 11
INFO:root:XX add new best (3, 5) is not 8 11 11
INFO:root:XX add new best (3, 5) is not 8 11 11
INFO:root:XX add new best (3, 5) is not 8 11 11
INFO:root:XX add new best (3, 5) is not 8 11 11
INFO:root:XX add new best (3, 5) is not 8 11 11
INFO:root:XX add new best (3, 5) is not 8 11 11
INFO:root:XX add new best (3, 5) is not 8 11 11
INFO:root:XX add new best (3, 5) is not 8 11 11
INFO:root:XX add new best (3, 5) is not 8 11 11
INFO:root:XX add new best (3, 5) is not 8 11 11
INFO:root:XX add new best (3, 5) is not 8 11 11
INFO:root:XX add new best (3, 5) is not 8 11 11
INFO:root:XX add new best (3, 5) is not 8 11 11
INFO:root:XX add new best (3, 5) is not 8 11 11
INFO:root:XX add new best (3, 5) is not 8 11 11
INFO:root:XX add new best (3, 5) is not 8 11 11
INFO:root:XX add new best (3, 5) is not 8 11 11
INFO:root:Trace: [(11, [(3, 5) is not 8])]
INFO:root:Trace Quality: [(11, 1)]
INFO:root:Trace Sorted: [(11, 1)]
INFO:root:Finished
INFO:root:Full Trace [(11, [(3, 5) is not 8])]
INFO:root:Trying {'prechopMUSes': True}
INFO:root:Starting Step 1
INFO:root:Current state [[[[9], [2], [3], [4], [6, 8], [7], [6, 8], [1], [5]], [[8], [7], [6], [1, 3], [5], [1, 3], [9], [2], [4]], [[5], [1, 4], [1, 4], [2], [6, 8, 9], [6, 9], [6, 7, 8], [3], [7, 8]], [[7], [6], [9], [3, 5, 8], [2], [3, 5], [1], [4], [3, 8]], [[4], [3], [2], [1, 6, 8], [1, 6, 7], [1, 6], [7, 8], [5], [9]], [[1], [8], [5], [3, 9], [7, 9], [4], [2], [6], [3, 7]], [[3, 6], [9], [8], [5, 6], [4], [2], [3, 5], [7], [1]], [[2], [1, 5], [7], [1, 5, 9], [3], [1, 5, 9], [4], [8], [6]], [[3, 6], [1, 4, 5], [1, 4], [7], [1, 6], [8], [3, 5], [9], [2]]]]
INFO:root:Doing checkSmall1
INFO:root:Getting tiny MUSes, distance 1, for 1 puzlits, 1 repeats
INFO:root:Chunked 1 in [1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
INFO:root:Doing checkSmall2
INFO:root:Getting tiny MUSes, distance 2, for 1 puzlits, 1 repeats
INFO:root:Chunked 1 in [1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
INFO:root:Considering 100 * 1 jobs for minsize=3
INFO:root:Chunked 100 in [9, 9, 9, 9, 8, 8, 8, 8, 8, 8, 8, 8]
INFO:root:Considering 100 * 1 jobs for minsize=4
INFO:root:Chunked 100 in [9, 9, 9, 9, 8, 8, 8, 8, 8, 8, 8, 8]
INFO:root:Considering 100 * 1 jobs for minsize=5
INFO:root:Chunked 100 in [9, 9, 9, 9, 8, 8, 8, 8, 8, 8, 8, 8]
INFO:root:Considering 100 * 1 jobs for minsize=6
INFO:root:Chunked 100 in [9, 9, 9, 9, 8, 8, 8, 8, 8, 8, 8, 8]
INFO:root:XX found first (3, 5) is not 8 7
INFO:root:XX add new best (3, 5) is not 8 7 7
INFO:root:XX add new best (3, 5) is not 8 7 7
INFO:root:XX add new best (3, 5) is not 8 7 7
INFO:root:XX add new best (3, 5) is not 8 7 7
INFO:root:Considering 100 * 1 jobs for minsize=7
INFO:root:Chunked 100 in [9, 9, 9, 9, 8, 8, 8, 8, 8, 8, 8, 8]
INFO:root:XX add new best (3, 5) is not 8 7 7
INFO:root:XX add new best (3, 5) is not 8 7 7
INFO:root:XX add new best (3, 5) is not 8 7 7
INFO:root:XX add new best (3, 5) is not 8 7 7
INFO:root:XX add new best (3, 5) is not 8 7 7
INFO:root:Trace: [(7, [(3, 5) is not 8])]
INFO:root:Trace Quality: [(7, 1)]
INFO:root:Trace Sorted: [(7, 1)]
INFO:root:Finished
INFO:root:Full Trace [(7, [(3, 5) is not 8])]
INFO:root:Trying {'quarterChopMUS': True}
INFO:root:Starting Step 1
INFO:root:Current state [[[[9], [2], [3], [4], [6, 8], [7], [6, 8], [1], [5]], [[8], [7], [6], [1, 3], [5], [1, 3], [9], [2], [4]], [[5], [1, 4], [1, 4], [2], [6, 8, 9], [6, 9], [6, 7, 8], [3], [7, 8]], [[7], [6], [9], [3, 5, 8], [2], [3, 5], [1], [4], [3, 8]], [[4], [3], [2], [1, 6, 8], [1, 6, 7], [1, 6], [7, 8], [5], [9]], [[1], [8], [5], [3, 9], [7, 9], [4], [2], [6], [3, 7]], [[3, 6], [9], [8], [5, 6], [4], [2], [3, 5], [7], [1]], [[2], [1, 5], [7], [1, 5, 9], [3], [1, 5, 9], [4], [8], [6]], [[3, 6], [1, 4, 5], [1, 4], [7], [1, 6], [8], [3, 5], [9], [2]]]]
INFO:root:Doing checkSmall1
INFO:root:Getting tiny MUSes, distance 1, for 1 puzlits, 1 repeats
INFO:root:Chunked 1 in [1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
INFO:root:Doing checkSmall2
INFO:root:Getting tiny MUSes, distance 2, for 1 puzlits, 1 repeats
INFO:root:Chunked 1 in [1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
INFO:root:Considering 100 * 1 jobs for minsize=3
INFO:root:Chunked 100 in [9, 9, 9, 9, 8, 8, 8, 8, 8, 8, 8, 8]
INFO:root:Considering 100 * 1 jobs for minsize=4
INFO:root:Chunked 100 in [9, 9, 9, 9, 8, 8, 8, 8, 8, 8, 8, 8]
INFO:root:Considering 100 * 1 jobs for minsize=5
INFO:root:Chunked 100 in [9, 9, 9, 9, 8, 8, 8, 8, 8, 8, 8, 8]
INFO:root:Considering 100 * 1 jobs for minsize=6
INFO:root:Chunked 100 in [9, 9, 9, 9, 8, 8, 8, 8, 8, 8, 8, 8]
INFO:root:XX found first (3, 5) is not 8 7
INFO:root:XX add new best (3, 5) is not 8 7 7
INFO:root:XX add new best (3, 5) is not 8 7 7
INFO:root:XX add new best (3, 5) is not 8 7 7
INFO:root:XX add new best (3, 5) is not 8 7 7
INFO:root:XX add new best (3, 5) is not 8 7 7
INFO:root:XX add new best (3, 5) is not 8 7 7
INFO:root:XX add new best (3, 5) is not 8 7 7
INFO:root:Considering 100 * 1 jobs for minsize=7
INFO:root:Chunked 100 in [9, 9, 9, 9, 8, 8, 8, 8, 8, 8, 8, 8]
INFO:root:XX add new best (3, 5) is not 8 7 7
INFO:root:XX add new best (3, 5) is not 8 7 7
INFO:root:XX add new best (3, 5) is not 8 7 7
INFO:root:XX add new best (3, 5) is not 8 7 7
INFO:root:XX add new best (3, 5) is not 8 7 7
INFO:root:XX add new best (3, 5) is not 8 7 7
INFO:root:Trace: [(7, [(3, 5) is not 8])]
INFO:root:Trace Quality: [(7, 1)]
INFO:root:Trace Sorted: [(7, 1)]
INFO:root:Finished
INFO:root:Full Trace [(7, [(3, 5) is not 8])]
INFO:root:Trying {'minPrecheckMUS': True}
INFO:root:Starting Step 1
INFO:root:Current state [[[[9], [2], [3], [4], [6, 8], [7], [6, 8], [1], [5]], [[8], [7], [6], [1, 3], [5], [1, 3], [9], [2], [4]], [[5], [1, 4], [1, 4], [2], [6, 8, 9], [6, 9], [6, 7, 8], [3], [7, 8]], [[7], [6], [9], [3, 5, 8], [2], [3, 5], [1], [4], [3, 8]], [[4], [3], [2], [1, 6, 8], [1, 6, 7], [1, 6], [7, 8], [5], [9]], [[1], [8], [5], [3, 9], [7, 9], [4], [2], [6], [3, 7]], [[3, 6], [9], [8], [5, 6], [4], [2], [3, 5], [7], [1]], [[2], [1, 5], [7], [1, 5, 9], [3], [1, 5, 9], [4], [8], [6]], [[3, 6], [1, 4, 5], [1, 4], [7], [1, 6], [8], [3, 5], [9], [2]]]]
INFO:root:Doing checkSmall1
INFO:root:Getting tiny MUSes, distance 1, for 1 puzlits, 1 repeats
INFO:root:Chunked 1 in [1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
INFO:root:Doing checkSmall2
INFO:root:Getting tiny MUSes, distance 2, for 1 puzlits, 1 repeats
INFO:root:Chunked 1 in [1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
INFO:root:Considering 100 * 1 jobs for minsize=3
INFO:root:Chunked 100 in [9, 9, 9, 9, 8, 8, 8, 8, 8, 8, 8, 8]
INFO:root:Considering 100 * 1 jobs for minsize=4
INFO:root:Chunked 100 in [9, 9, 9, 9, 8, 8, 8, 8, 8, 8, 8, 8]
INFO:root:Considering 100 * 1 jobs for minsize=5
INFO:root:Chunked 100 in [9, 9, 9, 9, 8, 8, 8, 8, 8, 8, 8, 8]
INFO:root:Considering 100 * 1 jobs for minsize=6
INFO:root:Chunked 100 in [9, 9, 9, 9, 8, 8, 8, 8, 8, 8, 8, 8]
INFO:root:XX found first (3, 5) is not 8 7
INFO:root:XX add new best (3, 5) is not 8 7 7
INFO:root:XX add new best (3, 5) is not 8 7 7
INFO:root:Considering 100 * 1 jobs for minsize=7
INFO:root:Chunked 100 in [9, 9, 9, 9, 8, 8, 8, 8, 8, 8, 8, 8]
INFO:root:XX add new best (3, 5) is not 8 7 7
INFO:root:XX add new best (3, 5) is not 8 7 7
INFO:root:XX add new best (3, 5) is not 8 7 7
INFO:root:XX add new best (3, 5) is not 8 7 7
INFO:root:Trace: [(7, [(3, 5) is not 8])]
INFO:root:Trace Quality: [(7, 1)]
INFO:root:Trace Sorted: [(7, 1)]
INFO:root:Finished
INFO:root:Full Trace [(7, [(3, 5) is not 8])]
INFO:root:Trying {'gallopingMUSes': True}
INFO:root:Starting Step 1
INFO:root:Current state [[[[9], [2], [3], [4], [6, 8], [7], [6, 8], [1], [5]], [[8], [7], [6], [1, 3], [5], [1, 3], [9], [2], [4]], [[5], [1, 4], [1, 4], [2], [6, 8, 9], [6, 9], [6, 7, 8], [3], [7, 8]], [[7], [6], [9], [3, 5, 8], [2], [3, 5], [1], [4], [3, 8]], [[4], [3], [2], [1, 6, 8], [1, 6, 7], [1, 6], [7, 8], [5], [9]], [[1], [8], [5], [3, 9], [7, 9], [4], [2], [6], [3, 7]], [[3, 6], [9], [8], [5, 6], [4], [2], [3, 5], [7], [1]], [[2], [1, 5], [7], [1, 5, 9], [3], [1, 5, 9], [4], [8], [6]], [[3, 6], [1, 4, 5], [1, 4], [7], [1, 6], [8], [3, 5], [9], [2]]]]
INFO:root:Doing checkSmall1
INFO:root:Getting tiny MUSes, distance 1, for 1 puzlits, 1 repeats
INFO:root:Chunked 1 in [1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
INFO:root:Doing checkSmall2
INFO:root:Getting tiny MUSes, distance 2, for 1 puzlits, 1 repeats
INFO:root:Chunked 1 in [1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
INFO:root:Considering 100 * 1 jobs for minsize=3
INFO:root:Chunked 100 in [9, 9, 9, 9, 8, 8, 8, 8, 8, 8, 8, 8]
INFO:root:Considering 100 * 1 jobs for minsize=4
INFO:root:Chunked 100 in [9, 9, 9, 9, 8, 8, 8, 8, 8, 8, 8, 8]
INFO:root:Considering 100 * 1 jobs for minsize=5
INFO:root:Chunked 100 in [9, 9, 9, 9, 8, 8, 8, 8, 8, 8, 8, 8]
INFO:root:Considering 100 * 1 jobs for minsize=6
INFO:root:Chunked 100 in [9, 9, 9, 9, 8, 8, 8, 8, 8, 8, 8, 8]
INFO:root:XX found first (3, 5) is not 8 7
INFO:root:Considering 100 * 1 jobs for minsize=7
INFO:root:Chunked 100 in [9, 9, 9, 9, 8, 8, 8, 8, 8, 8, 8, 8]
INFO:root:XX add new best (3, 5) is not 8 7 7
INFO:root:XX add new best (3, 5) is not 8 7 7
INFO:root:XX add new best (3, 5) is not 8 7 7
INFO:root:Trace: [(7, [(3, 5) is not 8])]
INFO:root:Trace Quality: [(7, 1)]
INFO:root:Trace Sorted: [(7, 1)]
INFO:root:Finished
INFO:root:Full Trace [(7, [(3, 5) is not 8])]
INFO:root:Trying {'minPrecheckStepsMUS': True}
INFO:root:Starting Step 1
INFO:root:Current state [[[[9], [2], [3], [4], [6, 8], [7], [6, 8], [1], [5]], [[8], [7], [6], [1, 3], [5], [1, 3], [9], [2], [4]], [[5], [1, 4], [1, 4], [2], [6, 8, 9], [6, 9], [6, 7, 8], [3], [7, 8]], [[7], [6], [9], [3, 5, 8], [2], [3, 5], [1], [4], [3, 8]], [[4], [3], [2], [1, 6, 8], [1, 6, 7], [1, 6], [7, 8], [5], [9]], [[1], [8], [5], [3, 9], [7, 9], [4], [2], [6], [3, 7]], [[3, 6], [9], [8], [5, 6], [4], [2], [3, 5], [7], [1]], [[2], [1, 5], [7], [1, 5, 9], [3], [1, 5, 9], [4], [8], [6]], [[3, 6], [1, 4, 5], [1, 4], [7], [1, 6], [8], [3, 5], [9], [2]]]]
INFO:root:Doing checkSmall1
INFO:root:Getting tiny MUSes, distance 1, for 1 puzlits, 1 repeats
INFO:root:Chunked 1 in [1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
INFO:root:Doing checkSmall2
INFO:root:Getting tiny MUSes, distance 2, for 1 puzlits, 1 repeats
INFO:root:Chunked 1 in [1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
INFO:root:Considering 100 * 1 jobs for minsize=3
INFO:root:Chunked 100 in [9, 9, 9, 9, 8, 8, 8, 8, 8, 8, 8, 8]
INFO:root:Considering 100 * 1 jobs for minsize=4
INFO:root:Chunked 100 in [9, 9, 9, 9, 8, 8, 8, 8, 8, 8, 8, 8]
INFO:root:Considering 100 * 1 jobs for minsize=5
INFO:root:Chunked 100 in [9, 9, 9, 9, 8, 8, 8, 8, 8, 8, 8, 8]
INFO:root:Considering 100 * 1 jobs for minsize=6
INFO:root:Chunked 100 in [9, 9, 9, 9, 8, 8, 8, 8, 8, 8, 8, 8]
INFO:root:XX found first (3, 5) is not 8 7
INFO:root:XX add new best (3, 5) is not 8 7 7
INFO:root:XX add new best (3, 5) is not 8 7 7
INFO:root:Considering 100 * 1 jobs for minsize=7
INFO:root:Chunked 100 in [9, 9, 9, 9, 8, 8, 8, 8, 8, 8, 8, 8]
INFO:root:XX add new best (3, 5) is not 8 7 7
INFO:root:XX add new best (3, 5) is not 8 7 7
INFO:root:XX add new best (3, 5) is not 8 7 7
INFO:root:XX add new best (3, 5) is not 8 7 7
INFO:root:Trace: [(7, [(3, 5) is not 8])]
INFO:root:Trace Quality: [(7, 1)]
INFO:root:Trace Sorted: [(7, 1)]
INFO:root:Finished
INFO:root:Full Trace [(7, [(3, 5) is not 8])]
INFO:root:Trying {'gallopingMUSes': True, 'minPrecheckMUS': True}
INFO:root:Starting Step 1
INFO:root:Current state [[[[9], [2], [3], [4], [6, 8], [7], [6, 8], [1], [5]], [[8], [7], [6], [1, 3], [5], [1, 3], [9], [2], [4]], [[5], [1, 4], [1, 4], [2], [6, 8, 9], [6, 9], [6, 7, 8], [3], [7, 8]], [[7], [6], [9], [3, 5, 8], [2], [3, 5], [1], [4], [3, 8]], [[4], [3], [2], [1, 6, 8], [1, 6, 7], [1, 6], [7, 8], [5], [9]], [[1], [8], [5], [3, 9], [7, 9], [4], [2], [6], [3, 7]], [[3, 6], [9], [8], [5, 6], [4], [2], [3, 5], [7], [1]], [[2], [1, 5], [7], [1, 5, 9], [3], [1, 5, 9], [4], [8], [6]], [[3, 6], [1, 4, 5], [1, 4], [7], [1, 6], [8], [3, 5], [9], [2]]]]
INFO:root:Doing checkSmall1
INFO:root:Getting tiny MUSes, distance 1, for 1 puzlits, 1 repeats
INFO:root:Chunked 1 in [1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
INFO:root:Doing checkSmall2
INFO:root:Getting tiny MUSes, distance 2, for 1 puzlits, 1 repeats
INFO:root:Chunked 1 in [1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
INFO:root:Considering 100 * 1 jobs for minsize=3
INFO:root:Chunked 100 in [9, 9, 9, 9, 8, 8, 8, 8, 8, 8, 8, 8]
INFO:root:Considering 100 * 1 jobs for minsize=4
INFO:root:Chunked 100 in [9, 9, 9, 9, 8, 8, 8, 8, 8, 8, 8, 8]
INFO:root:Considering 100 * 1 jobs for minsize=5
INFO:root:Chunked 100 in [9, 9, 9, 9, 8, 8, 8, 8, 8, 8, 8, 8]
INFO:root:Considering 100 * 1 jobs for minsize=6
INFO:root:Chunked 100 in [9, 9, 9, 9, 8, 8, 8, 8, 8, 8, 8, 8]
INFO:root:XX found first (3, 5) is not 8 7
INFO:root:Considering 100 * 1 jobs for minsize=7
INFO:root:Chunked 100 in [9, 9, 9, 9, 8, 8, 8, 8, 8, 8, 8, 8]
INFO:root:XX add new best (3, 5) is not 8 7 7
INFO:root:XX add new best (3, 5) is not 8 7 7
INFO:root:XX add new best (3, 5) is not 8 7 7
INFO:root:XX add new best (3, 5) is not 8 7 7
INFO:root:Trace: [(7, [(3, 5) is not 8])]
INFO:root:Trace Quality: [(7, 1)]
INFO:root:Trace Sorted: [(7, 1)]
INFO:root:Finished
INFO:root:Full Trace [(7, [(3, 5) is not 8])]
INFO:root:Trying {}
INFO:root:Starting Step 1
INFO:root:Current state [[[[9], [8], [6], [7], [2], [1], [3], [4], [5]], [[3], [1, 2], [4], [9], [5], [6], [1, 8], [1, 2, 8], [7]], [[2, 5], [1, 2, 5], [7], [4, 8], [3], [4, 8], [9], [6], [1, 2]], [[2, 4, 8], [7], [3], [2, 4, 8], [6], [5], [1, 4, 8], [1, 8], [9]], [[6], [9], [2, 8], [2, 4, 8], [1], [7], [4, 5, 8], [5, 8], [3]], [[1], [4, 5], [5, 8], [3], [9], [4, 8], [2], [7], [6]], [[2, 4, 5, 8], [2, 4, 5], [2, 5, 8], [6], [7], [9], [1, 5], [3], [1, 2, 8]], [[2, 5, 8], [6], [9], [1], [4], [3], [7], [2, 5], [2, 8]], [[7], [3], [1], [5], [8], [2], [6], [9], [4]]]]
INFO:root:Doing checkSmall1
INFO:root:Getting tiny MUSes, distance 1, for 1 puzlits, 1 repeats
INFO:root:Chunked 1 in [1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
INFO:root:Doing checkSmall2
INFO:root:Getting tiny MUSes, distance 2, for 1 puzlits, 1 repeats
INFO:root:Chunked 1 in [1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
INFO:root:Considering 100 * 1 jobs for minsize=3
INFO:root:Chunked 100 in [9, 9, 9, 9, 8, 8, 8, 8, 8, 8, 8, 8]
INFO:root:Considering 100 * 1 jobs for minsize=4
INFO:root:Chunked 100 in [9, 9, 9, 9, 8, 8, 8, 8, 8, 8, 8, 8]
INFO:root:Considering 100 * 1 jobs for minsize=5
INFO:root:Chunked 100 in [9, 9, 9, 9, 8, 8, 8, 8, 8, 8, 8, 8]
INFO:root:Considering 100 * 1 jobs for minsize=6
INFO:root:Chunked 100 in [9, 9, 9, 9, 8, 8, 8, 8, 8, 8, 8, 8]
INFO:root:XX found first (2, 2) is not 2 7
INFO:root:XX add new best (2, 2) is not 2 7 7
INFO:root:XX add new best (2, 2) is not 2 7 7
INFO:root:XX add new best (2, 2) is not 2 7 7
INFO:root:XX add new best (2, 2) is not 2 7 7
INFO:root:XX add new best (2, 2) is not 2 7 7
INFO:root:XX add new best (2, 2) is not 2 7 7
INFO:root:XX add new best (2, 2) is not 2 7 7
INFO:root:XX add new best (2, 2) is not 2 7 7
INFO:root:XX add new best (2, 2) is not 2 7 7
INFO:root:XX add new best (2, 2) is not 2 7 7
INFO:root:XX add new best (2, 2) is not 2 7 7
INFO:root:XX add new best (2, 2) is not 2 7 7
INFO:root:XX add new best (2, 2) is not 2 7 7
INFO:root:XX add new best (2, 2) is not 2 7 7
INFO:root:XX add new best (2, 2) is not 2 7 7
INFO:root:XX add new best (2, 2) is not 2 7 7
INFO:root:XX add new best (2, 2) is not 2 7 7
INFO:root:XX add new best (2, 2) is not 2 7 7
INFO:root:XX add new best (2, 2) is not 2 7 7
INFO:root:XX add new best (2, 2) is not 2 7 7
INFO:root:XX add new best (2, 2) is not 2 7 7
INFO:root:XX add new best (2, 2) is not 2 7 7
INFO:root:XX add new best (2, 2) is not 2 7 7
INFO:root:XX add new best (2, 2) is not 2 7 7
INFO:root:XX add new best (2, 2) is not 2 7 7
INFO:root:XX add new best (2, 2) is not 2 7 7
INFO:root:XX add new best (2, 2) is not 2 7 7
INFO:root:XX add new best (2, 2) is not 2 7 7
INFO:root:XX add new best (2, 2) is not 2 7 7
INFO:root:XX add new best (2, 2) is not 2 7 7
INFO:root:XX add new best (2, 2) is not 2 7 7
INFO:root:XX add new best (2, 2) is not 2 7 7
INFO:root:XX add new best (2, 2) is not 2 7 7
INFO:root:XX add new best (2, 2) is not 2 7 7
INFO:root:XX add new best (2, 2) is not 2 7 7
INFO:root:XX add new best (2, 2) is not 2 7 7
INFO:root:Considering 100 * 1 jobs for minsize=7
INFO:root:Chunked 100 in [9, 9, 9, 9, 8, 8, 8, 8, 8, 8, 8, 8]
INFO:root:XX add new best (2, 2) is not 2 7 7
INFO:root:XX add new best (2, 2) is not 2 7 7
INFO:root:XX add new best (2, 2) is not 2 7 7
INFO:root:XX add new best (2, 2) is not 2 7 7
INFO:root:XX add new best (2, 2) is not 2 7 7
INFO:root:XX add new best (2, 2) is not 2 7 7
INFO:root:XX add new best (2, 2) is not 2 7 7
INFO:root:XX add new best (2, 2) is not 2 7 7
INFO:root:XX add new best (2, 2) is not 2 7 7
INFO:root:XX add new best (2, 2) is not 2 7 7
INFO:root:XX add new best (2, 2) is not 2 7 7
INFO:root:XX add new best (2, 2) is not 2 7 7
INFO:root:XX add new best (2, 2) is not 2 7 7
INFO:root:XX add new best (2, 2) is not 2 7 7
INFO:root:XX add new best (2, 2) is not 2 7 7
INFO:root:XX add new best (2, 2) is not 2 7 7
INFO:root:XX add new best (2, 2) is not 2 7 7
INFO:root:XX add new best (2, 2) is not 2 7 7
INFO:root:XX add new best (2, 2) is not 2 7 7
INFO:root:XX add new best (2, 2) is not 2 7 7
INFO:root:XX add new best (2, 2) is not 2 7 7
INFO:root:XX add new best (2, 2) is not 2 7 7
INFO:root:XX add new best (2, 2) is not 2 7 7
INFO:root:XX add new best (2, 2) is not 2 7 7
INFO:root:XX add new best (2, 2) is not 2 7 7
INFO:root:XX add new best (2, 2) is not 2 7 7
INFO:root:XX add new best (2, 2) is not 2 7 7
INFO:root:XX add new best (2, 2) is not 2 7 7
INFO:root:XX add new best (2, 2) is not 2 7 7
INFO:root:XX add new best (2, 2) is not 2 7 7
INFO:root:XX add new best (2, 2) is not 2 7 7
INFO:root:XX add new best (2, 2) is not 2 7 7
INFO:root:XX add new best (2, 2) is not 2 7 7
INFO:root:XX add new best (2, 2) is not 2 7 7
INFO:root:XX add new best (2, 2) is not 2 7 7
INFO:root:XX add new best (2, 2) is not 2 7 7
INFO:root:XX add new best (2, 2) is not 2 7 7
INFO:root:Trace: [(7, [(2, 2) is not 2])]
INFO:root:Trace Quality: [(7, 1)]
INFO:root:Trace Sorted: [(7, 1)]
INFO:root:Finished
INFO:root:Full Trace [(7, [(2, 2) is not 2])]
INFO:root:Trying {'prechopMUSes': True}
INFO:root:Starting Step 1
INFO:root:Current state [[[[9], [8], [6], [7], [2], [1], [3], [4], [5]], [[3], [1, 2], [4], [9], [5], [6], [1, 8], [1, 2, 8], [7]], [[2, 5], [1, 2, 5], [7], [4, 8], [3], [4, 8], [9], [6], [1, 2]], [[2, 4, 8], [7], [3], [2, 4, 8], [6], [5], [1, 4, 8], [1, 8], [9]], [[6], [9], [2, 8], [2, 4, 8], [1], [7], [4, 5, 8], [5, 8], [3]], [[1], [4, 5], [5, 8], [3], [9], [4, 8], [2], [7], [6]], [[2, 4, 5, 8], [2, 4, 5], [2, 5, 8], [6], [7], [9], [1, 5], [3], [1, 2, 8]], [[2, 5, 8], [6], [9], [1], [4], [3], [7], [2, 5], [2, 8]], [[7], [3], [1], [5], [8], [2], [6], [9], [4]]]]
INFO:root:Doing checkSmall1
INFO:root:Getting tiny MUSes, distance 1, for 1 puzlits, 1 repeats
INFO:root:Chunked 1 in [1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
INFO:root:Doing checkSmall2
INFO:root:Getting tiny MUSes, distance 2, for 1 puzlits, 1 repeats
INFO:root:Chunked 1 in [1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
INFO:root:Considering 100 * 1 jobs for minsize=3
INFO:root:Chunked 100 in [9, 9, 9, 9, 8, 8, 8, 8, 8, 8, 8, 8]
INFO:root:Considering 100 * 1 jobs for minsize=4
INFO:root:Chunked 100 in [9, 9, 9, 9, 8, 8, 8, 8, 8, 8, 8, 8]
INFO:root:Considering 100 * 1 jobs for minsize=5
INFO:root:Chunked 100 in [9, 9, 9, 9, 8, 8, 8, 8, 8, 8, 8, 8]
INFO:root:Considering 100 * 1 jobs for minsize=6
INFO:root:Chunked 100 in [9, 9, 9, 9, 8, 8, 8, 8, 8, 8, 8, 8]
INFO:root:XX found first (2, 2) is not 2 7
INFO:root:XX add new best (2, 2) is not 2 7 7
INFO:root:XX add new best (2, 2) is not 2 7 7
INFO:root:XX add new best (2, 2) is not 2 7 7
INFO:root:XX add new best (2, 2) is not 2 7 7
INFO:root:Considering 100 * 1 jobs for minsize=7
INFO:root:Chunked 100 in [9, 9, 9, 9, 8, 8, 8, 8, 8, 8, 8, 8]
INFO:root:XX add new best (2, 2) is not 2 7 7
INFO:root:XX add new best (2, 2) is not 2 7 7
INFO:root:Trace: [(7, [(2, 2) is not 2])]
INFO:root:Trace Quality: [(7, 1)]
INFO:root:Trace Sorted: [(7, 1)]
INFO:root:Finished
INFO:root:Full Trace [(7, [(2, 2) is not 2])]
INFO:root:Trying {'quarterChopMUS': True}
INFO:root:Starting Step 1
INFO:root:Current state [[[[9], [8], [6], [7], [2], [1], [3], [4], [5]], [[3], [1, 2], [4], [9], [5], [6], [1, 8], [1, 2, 8], [7]], [[2, 5], [1, 2, 5], [7], [4, 8], [3], [4, 8], [9], [6], [1, 2]], [[2, 4, 8], [7], [3], [2, 4, 8], [6], [5], [1, 4, 8], [1, 8], [9]], [[6], [9], [2, 8], [2, 4, 8], [1], [7], [4, 5, 8], [5, 8], [3]], [[1], [4, 5], [5, 8], [3], [9], [4, 8], [2], [7], [6]], [[2, 4, 5, 8], [2, 4, 5], [2, 5, 8], [6], [7], [9], [1, 5], [3], [1, 2, 8]], [[2, 5, 8], [6], [9], [1], [4], [3], [7], [2, 5], [2, 8]], [[7], [3], [1], [5], [8], [2], [6], [9], [4]]]]
INFO:root:Doing checkSmall1
INFO:root:Getting tiny MUSes, distance 1, for 1 puzlits, 1 repeats
INFO:root:Chunked 1 in [1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
INFO:root:Doing checkSmall2
INFO:root:Getting tiny MUSes, distance 2, for 1 puzlits, 1 repeats
INFO:root:Chunked 1 in [1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
INFO:root:Considering 100 * 1 jobs for minsize=3
INFO:root:Chunked 100 in [9, 9, 9, 9, 8, 8, 8, 8, 8, 8, 8, 8]
INFO:root:Considering 100 * 1 jobs for minsize=4
INFO:root:Chunked 100 in [9, 9, 9, 9, 8, 8, 8, 8, 8, 8, 8, 8]
INFO:root:Considering 100 * 1 jobs for minsize=5
INFO:root:Chunked 100 in [9, 9, 9, 9, 8, 8, 8, 8, 8, 8, 8, 8]
INFO:root:Considering 100 * 1 jobs for minsize=6
INFO:root:Chunked 100 in [9, 9, 9, 9, 8, 8, 8, 8, 8, 8, 8, 8]
INFO:root:XX found first (2, 2) is not 2 7
INFO:root:XX add new best (2, 2) is not 2 7 7
INFO:root:XX add new best (2, 2) is not 2 7 7
INFO:root:XX add new best (2, 2) is not 2 7 7
INFO:root:XX add new best (2, 2) is not 2 7 7
INFO:root:XX add new best (2, 2) is not 2 7 7
INFO:root:Considering 100 * 1 jobs for minsize=7
INFO:root:Chunked 100 in [9, 9, 9, 9, 8, 8, 8, 8, 8, 8, 8, 8]
INFO:root:XX add new best (2, 2) is not 2 7 7
INFO:root:Trace: [(7, [(2, 2) is not 2])]
INFO:root:Trace Quality: [(7, 1)]
INFO:root:Trace Sorted: [(7, 1)]
INFO:root:Finished
INFO:root:Full Trace [(7, [(2, 2) is not 2])]
INFO:root:Trying {'minPrecheckMUS': True}
INFO:root:Starting Step 1
INFO:root:Current state [[[[9], [8], [6], [7], [2], [1], [3], [4], [5]], [[3], [1, 2], [4], [9], [5], [6], [1, 8], [1, 2, 8], [7]], [[2, 5], [1, 2, 5], [7], [4, 8], [3], [4, 8], [9], [6], [1, 2]], [[2, 4, 8], [7], [3], [2, 4, 8], [6], [5], [1, 4, 8], [1, 8], [9]], [[6], [9], [2, 8], [2, 4, 8], [1], [7], [4, 5, 8], [5, 8], [3]], [[1], [4, 5], [5, 8], [3], [9], [4, 8], [2], [7], [6]], [[2, 4, 5, 8], [2, 4, 5], [2, 5, 8], [6], [7], [9], [1, 5], [3], [1, 2, 8]], [[2, 5, 8], [6], [9], [1], [4], [3], [7], [2, 5], [2, 8]], [[7], [3], [1], [5], [8], [2], [6], [9], [4]]]]
INFO:root:Doing checkSmall1
INFO:root:Getting tiny MUSes, distance 1, for 1 puzlits, 1 repeats
INFO:root:Chunked 1 in [1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
INFO:root:Doing checkSmall2
INFO:root:Getting tiny MUSes, distance 2, for 1 puzlits, 1 repeats
INFO:root:Chunked 1 in [1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
INFO:root:Considering 100 * 1 jobs for minsize=3
INFO:root:Chunked 100 in [9, 9, 9, 9, 8, 8, 8, 8, 8, 8, 8, 8]
INFO:root:Considering 100 * 1 jobs for minsize=4
INFO:root:Chunked 100 in [9, 9, 9, 9, 8, 8, 8, 8, 8, 8, 8, 8]
INFO:root:Considering 100 * 1 jobs for minsize=5
INFO:root:Chunked 100 in [9, 9, 9, 9, 8, 8, 8, 8, 8, 8, 8, 8]
INFO:root:Considering 100 * 1 jobs for minsize=6
INFO:root:Chunked 100 in [9, 9, 9, 9, 8, 8, 8, 8, 8, 8, 8, 8]
INFO:root:XX found first (2, 2) is not 2 7
INFO:root:XX add new best (2, 2) is not 2 7 7
INFO:root:Considering 100 * 1 jobs for minsize=7
INFO:root:Chunked 100 in [9, 9, 9, 9, 8, 8, 8, 8, 8, 8, 8, 8]
INFO:root:Trace: [(7, [(2, 2) is not 2])]
INFO:root:Trace Quality: [(7, 1)]
INFO:root:Trace Sorted: [(7, 1)]
INFO:root:Finished
INFO:root:Full Trace [(7, [(2, 2) is not 2])]
INFO:root:Trying {'gallopingMUSes': True}
INFO:root:Starting Step 1
INFO:root:Current state [[[[9], [8], [6], [7], [2], [1], [3], [4], [5]], [[3], [1, 2], [4], [9], [5], [6], [1, 8], [1, 2, 8], [7]], [[2, 5], [1, 2, 5], [7], [4, 8], [3], [4, 8], [9], [6], [1, 2]], [[2, 4, 8], [7], [3], [2, 4, 8], [6], [5], [1, 4, 8], [1, 8], [9]], [[6], [9], [2, 8], [2, 4, 8], [1], [7], [4, 5, 8], [5, 8], [3]], [[1], [4, 5], [5, 8], [3], [9], [4, 8], [2], [7], [6]], [[2, 4, 5, 8], [2, 4, 5], [2, 5, 8], [6], [7], [9], [1, 5], [3], [1, 2, 8]], [[2, 5, 8], [6], [9], [1], [4], [3], [7], [2, 5], [2, 8]], [[7], [3], [1], [5], [8], [2], [6], [9], [4]]]]
INFO:root:Doing checkSmall1
INFO:root:Getting tiny MUSes, distance 1, for 1 puzlits, 1 repeats
INFO:root:Chunked 1 in [1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
INFO:root:Doing checkSmall2
INFO:root:Getting tiny MUSes, distance 2, for 1 puzlits, 1 repeats
INFO:root:Chunked 1 in [1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
INFO:root:Considering 100 * 1 jobs for minsize=3
INFO:root:Chunked 100 in [9, 9, 9, 9, 8, 8, 8, 8, 8, 8, 8, 8]
INFO:root:Considering 100 * 1 jobs for minsize=4
INFO:root:Chunked 100 in [9, 9, 9, 9, 8, 8, 8, 8, 8, 8, 8, 8]
INFO:root:Considering 100 * 1 jobs for minsize=5
INFO:root:Chunked 100 in [9, 9, 9, 9, 8, 8, 8, 8, 8, 8, 8, 8]
INFO:root:Considering 100 * 1 jobs for minsize=6
INFO:root:Chunked 100 in [9, 9, 9, 9, 8, 8, 8, 8, 8, 8, 8, 8]
INFO:root:XX found first (2, 2) is not 2 7
INFO:root:XX add new best (2, 2) is not 2 7 7
INFO:root:XX add new best (2, 2) is not 2 7 7
INFO:root:Considering 100 * 1 jobs for minsize=7
INFO:root:Chunked 100 in [9, 9, 9, 9, 8, 8, 8, 8, 8, 8, 8, 8]
INFO:root:Trace: [(7, [(2, 2) is not 2])]
INFO:root:Trace Quality: [(7, 1)]
INFO:root:Trace Sorted: [(7, 1)]
INFO:root:Finished
INFO:root:Full Trace [(7, [(2, 2) is not 2])]
INFO:root:Trying {'minPrecheckStepsMUS': True}
INFO:root:Starting Step 1
INFO:root:Current state [[[[9], [8], [6], [7], [2], [1], [3], [4], [5]], [[3], [1, 2], [4], [9], [5], [6], [1, 8], [1, 2, 8], [7]], [[2, 5], [1, 2, 5], [7], [4, 8], [3], [4, 8], [9], [6], [1, 2]], [[2, 4, 8], [7], [3], [2, 4, 8], [6], [5], [1, 4, 8], [1, 8], [9]], [[6], [9], [2, 8], [2, 4, 8], [1], [7], [4, 5, 8], [5, 8], [3]], [[1], [4, 5], [5, 8], [3], [9], [4, 8], [2], [7], [6]], [[2, 4, 5, 8], [2, 4, 5], [2, 5, 8], [6], [7], [9], [1, 5], [3], [1, 2, 8]], [[2, 5, 8], [6], [9], [1], [4], [3], [7], [2, 5], [2, 8]], [[7], [3], [1], [5], [8], [2], [6], [9], [4]]]]
INFO:root:Doing checkSmall1
INFO:root:Getting tiny MUSes, distance 1, for 1 puzlits, 1 repeats
INFO:root:Chunked 1 in [1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
INFO:root:Doing checkSmall2
INFO:root:Getting tiny MUSes, distance 2, for 1 puzlits, 1 repeats
INFO:root:Chunked 1 in [1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
INFO:root:Considering 100 * 1 jobs for minsize=3
INFO:root:Chunked 100 in [9, 9, 9, 9, 8, 8, 8, 8, 8, 8, 8, 8]
INFO:root:Considering 100 * 1 jobs for minsize=4
INFO:root:Chunked 100 in [9, 9, 9, 9, 8, 8, 8, 8, 8, 8, 8, 8]
INFO:root:Considering 100 * 1 jobs for minsize=5
INFO:root:Chunked 100 in [9, 9, 9, 9, 8, 8, 8, 8, 8, 8, 8, 8]
INFO:root:Considering 100 * 1 jobs for minsize=6
INFO:root:Chunked 100 in [9, 9, 9, 9, 8, 8, 8, 8, 8, 8, 8, 8]
INFO:root:XX found first (2, 2) is not 2 7
INFO:root:XX add new best (2, 2) is not 2 7 7
INFO:root:Considering 100 * 1 jobs for minsize=7
INFO:root:Chunked 100 in [9, 9, 9, 9, 8, 8, 8, 8, 8, 8, 8, 8]
INFO:root:Trace: [(7, [(2, 2) is not 2])]
INFO:root:Trace Quality: [(7, 1)]
INFO:root:Trace Sorted: [(7, 1)]
INFO:root:Finished
INFO:root:Full Trace [(7, [(2, 2) is not 2])]
INFO:root:Trying {'gallopingMUSes': True, 'minPrecheckMUS': True}
INFO:root:Starting Step 1
INFO:root:Current state [[[[9], [8], [6], [7], [2], [1], [3], [4], [5]], [[3], [1, 2], [4], [9], [5], [6], [1, 8], [1, 2, 8], [7]], [[2, 5], [1, 2, 5], [7], [4, 8], [3], [4, 8], [9], [6], [1, 2]], [[2, 4, 8], [7], [3], [2, 4, 8], [6], [5], [1, 4, 8], [1, 8], [9]], [[6], [9], [2, 8], [2, 4, 8], [1], [7], [4, 5, 8], [5, 8], [3]], [[1], [4, 5], [5, 8], [3], [9], [4, 8], [2], [7], [6]], [[2, 4, 5, 8], [2, 4, 5], [2, 5, 8], [6], [7], [9], [1, 5], [3], [1, 2, 8]], [[2, 5, 8], [6], [9], [1], [4], [3], [7], [2, 5], [2, 8]], [[7], [3], [1], [5], [8], [2], [6], [9], [4]]]]
INFO:root:Doing checkSmall1
INFO:root:Getting tiny MUSes, distance 1, for 1 puzlits, 1 repeats
INFO:root:Chunked 1 in [1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
INFO:root:Doing checkSmall2
INFO:root:Getting tiny MUSes, distance 2, for 1 puzlits, 1 repeats
INFO:root:Chunked 1 in [1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
INFO:root:Considering 100 * 1 jobs for minsize=3
INFO:root:Chunked 100 in [9, 9, 9, 9, 8, 8, 8, 8, 8, 8, 8, 8]
INFO:root:Considering 100 * 1 jobs for minsize=4
INFO:root:Chunked 100 in [9, 9, 9, 9, 8, 8, 8, 8, 8, 8, 8, 8]
INFO:root:Considering 100 * 1 jobs for minsize=5
INFO:root:Chunked 100 in [9, 9, 9, 9, 8, 8, 8, 8, 8, 8, 8, 8]
INFO:root:Considering 100 * 1 jobs for minsize=6
INFO:root:Chunked 100 in [9, 9, 9, 9, 8, 8, 8, 8, 8, 8, 8, 8]
INFO:root:XX found first (2, 2) is not 2 7
INFO:root:XX add new best (2, 2) is not 2 7 7
INFO:root:Considering 100 * 1 jobs for minsize=7
INFO:root:Chunked 100 in [9, 9, 9, 9, 8, 8, 8, 8, 8, 8, 8, 8]
INFO:root:Trace: [(7, [(2, 2) is not 2])]
INFO:root:Trace Quality: [(7, 1)]
INFO:root:Trace Sorted: [(7, 1)]
INFO:root:Finished
INFO:root:Full Trace [(7, [(2, 2) is not 2])]
INFO:root:Trying {}
INFO:root:Starting Step 1
INFO:root:Current state [[[[9], [3, 5], [8], [1, 3], [2], [1, 3, 4], [4, 5], [7], [6]], [[6], [2, 5], [2, 4], [3, 8, 9], [3, 5, 9], [7], [1], [4, 8], [3, 8, 9]], [[1], [7], [3, 4], [3, 6, 8, 9], [4, 5, 6, 9], [4, 6, 9], [5, 9], [2], [3, 8, 9]], [[7, 8], [2, 8], [5], [4], [3, 6], [3, 6], [2, 7], [9], [1]], [[3], [9], [1], [7], [8], [2], [4, 6], [4, 6], [5]], [[4], [6], [2, 7], [1, 9], [1, 9], [5], [8], [3], [2, 7]], [[7, 8], [4], [3, 7], [1, 2, 3, 6], [1, 3, 6], [1, 3, 6, 8], [6, 9], [5], [2, 9]], [[5], [3, 8], [6], [2, 3, 9], [3, 4, 9], [4, 9], [2, 7], [1], [7, 8]], [[2], [1], [9], [5], [7], [6, 8], [3], [6, 8], [4]]]]
INFO:root:Doing checkSmall1
INFO:root:Getting tiny MUSes, distance 1, for 1 puzlits, 1 repeats
INFO:root:Chunked 1 in [1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
INFO:root:Doing checkSmall2
INFO:root:Getting tiny MUSes, distance 2, for 1 puzlits, 1 repeats
INFO:root:Chunked 1 in [1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
INFO:root:Considering 100 * 1 jobs for minsize=3
INFO:root:Chunked 100 in [9, 9, 9, 9, 8, 8, 8, 8, 8, 8, 8, 8]
INFO:root:Considering 100 * 1 jobs for minsize=4
INFO:root:Chunked 100 in [9, 9, 9, 9, 8, 8, 8, 8, 8, 8, 8, 8]
INFO:root:Considering 100 * 1 jobs for minsize=5
INFO:root:Chunked 100 in [9, 9, 9, 9, 8, 8, 8, 8, 8, 8, 8, 8]
INFO:root:Considering 100 * 1 jobs for minsize=6
INFO:root:Chunked 100 in [9, 9, 9, 9, 8, 8, 8, 8, 8, 8, 8, 8]
INFO:root:Considering 100 * 1 jobs for minsize=7
INFO:root:Chunked 100 in [9, 9, 9, 9, 8, 8, 8, 8, 8, 8, 8, 8]
INFO:root:Considering 100 * 1 jobs for minsize=8
INFO:root:Chunked 100 in [9, 9, 9, 9, 8, 8, 8, 8, 8, 8, 8, 8]
INFO:root:Considering 100 * 1 jobs for minsize=9
INFO:root:Chunked 100 in [9, 9, 9, 9, 8, 8, 8, 8, 8, 8, 8, 8]
INFO:root:Considering 100 * 1 jobs for minsize=10
INFO:root:Chunked 100 in [9, 9, 9, 9, 8, 8, 8, 8, 8, 8, 8, 8]
INFO:root:Considering 100 * 1 jobs for minsize=11
INFO:root:Chunked 100 in [9, 9, 9, 9, 8, 8, 8, 8, 8, 8, 8, 8]
INFO:root:Considering 100 * 1 jobs for minsize=12
INFO:root:Chunked 100 in [9, 9, 9, 9, 8, 8, 8, 8, 8, 8, 8, 8]
INFO:root:Considering 100 * 1 jobs for minsize=13
INFO:root:Chunked 100 in [9, 9, 9, 9, 8, 8, 8, 8, 8, 8, 8, 8]
INFO:root:Considering 100 * 1 jobs for minsize=14
INFO:root:Chunked 100 in [9, 9, 9, 9, 8, 8, 8, 8, 8, 8, 8, 8]
INFO:root:Considering 100 * 1 jobs for minsize=15
INFO:root:Chunked 100 in [9, 9, 9, 9, 8, 8, 8, 8, 8, 8, 8, 8]
INFO:root:XX found first (1, 2) is not 3 16
INFO:root:XX add new best (1, 2) is not 3 16 16
INFO:root:XX add new best (1, 2) is not 3 16 16
INFO:root:XX add new best (1, 2) is not 3 16 16
INFO:root:XX add new best (1, 2) is not 3 16 16
INFO:root:XX add new best (1, 2) is not 3 16 16
INFO:root:XX add new best (1, 2) is not 3 16 16
INFO:root:XX add new best (1, 2) is not 3 16 16
INFO:root:XX add new best (1, 2) is not 3 16 16
INFO:root:XX add new best (1, 2) is not 3 16 16
INFO:root:XX add new best (1, 2) is not 3 16 16
INFO:root:XX add new best (1, 2) is not 3 16 16
INFO:root:XX add new best (1, 2) is not 3 16 16
INFO:root:XX add new best (1, 2) is not 3 16 16
INFO:root:XX add new best (1, 2) is not 3 16 16
INFO:root:XX add new best (1, 2) is not 3 16 16
INFO:root:XX add new best (1, 2) is not 3 16 16
INFO:root:XX add new best (1, 2) is not 3 16 16
INFO:root:XX add new best (1, 2) is not 3 16 16
INFO:root:Considering 100 * 1 jobs for minsize=16
INFO:root:Chunked 100 in [9, 9, 9, 9, 8, 8, 8, 8, 8, 8, 8, 8]
INFO:root:XX add new best (1, 2) is not 3 16 16
INFO:root:XX add new best (1, 2) is not 3 16 16
INFO:root:XX add new best (1, 2) is not 3 16 16
INFO:root:XX add new best (1, 2) is not 3 16 16
INFO:root:XX add new best (1, 2) is not 3 16 16
INFO:root:XX add new best (1, 2) is not 3 16 16
INFO:root:XX add new best (1, 2) is not 3 16 16
INFO:root:XX add new best (1, 2) is not 3 16 16
INFO:root:XX add new best (1, 2) is not 3 16 16
INFO:root:XX add new best (1, 2) is not 3 16 16
INFO:root:XX add new best (1, 2) is not 3 16 16
INFO:root:XX add new best (1, 2) is not 3 16 16
INFO:root:XX add new best (1, 2) is not 3 16 16
INFO:root:XX add new best (1, 2) is not 3 16 16
INFO:root:XX add new best (1, 2) is not 3 16 16
INFO:root:XX add new best (1, 2) is not 3 16 16
INFO:root:XX add new best (1, 2) is not 3 16 16
INFO:root:XX add new best (1, 2) is not 3 16 16
INFO:root:XX add new best (1, 2) is not 3 16 16
INFO:root:XX add new best (1, 2) is not 3 16 16
INFO:root:XX add new best (1, 2) is not 3 16 16
INFO:root:XX add new best (1, 2) is not 3 16 16
INFO:root:XX add new best (1, 2) is not 3 16 16
INFO:root:XX add new best (1, 2) is not 3 16 16
INFO:root:XX add new best (1, 2) is not 3 16 16
INFO:root:Trace: [(16, [(1, 2) is not 3])]
INFO:root:Trace Quality: [(16, 1)]
INFO:root:Trace Sorted: [(16, 1)]
INFO:root:Finished
INFO:root:Full Trace [(16, [(1, 2) is not 3])]
INFO:root:Trying {'prechopMUSes': True}
INFO:root:Starting Step 1
INFO:root:Current state [[[[9], [3, 5], [8], [1, 3], [2], [1, 3, 4], [4, 5], [7], [6]], [[6], [2, 5], [2, 4], [3, 8, 9], [3, 5, 9], [7], [1], [4, 8], [3, 8, 9]], [[1], [7], [3, 4], [3, 6, 8, 9], [4, 5, 6, 9], [4, 6, 9], [5, 9], [2], [3, 8, 9]], [[7, 8], [2, 8], [5], [4], [3, 6], [3, 6], [2, 7], [9], [1]], [[3], [9], [1], [7], [8], [2], [4, 6], [4, 6], [5]], [[4], [6], [2, 7], [1, 9], [1, 9], [5], [8], [3], [2, 7]], [[7, 8], [4], [3, 7], [1, 2, 3, 6], [1, 3, 6], [1, 3, 6, 8], [6, 9], [5], [2, 9]], [[5], [3, 8], [6], [2, 3, 9], [3, 4, 9], [4, 9], [2, 7], [1], [7, 8]], [[2], [1], [9], [5], [7], [6, 8], [3], [6, 8], [4]]]]
INFO:root:Doing checkSmall1
INFO:root:Getting tiny MUSes, distance 1, for 1 puzlits, 1 repeats
INFO:root:Chunked 1 in [1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
INFO:root:Doing checkSmall2
INFO:root:Getting tiny MUSes, distance 2, for 1 puzlits, 1 repeats
INFO:root:Chunked 1 in [1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
INFO:root:Considering 100 * 1 jobs for minsize=3
INFO:root:Chunked 100 in [9, 9, 9, 9, 8, 8, 8, 8, 8, 8, 8, 8]
INFO:root:Considering 100 * 1 jobs for minsize=4
INFO:root:Chunked 100 in [9, 9, 9, 9, 8, 8, 8, 8, 8, 8, 8, 8]
INFO:root:Considering 100 * 1 jobs for minsize=5
INFO:root:Chunked 100 in [9, 9, 9, 9, 8, 8, 8, 8, 8, 8, 8, 8]
INFO:root:Considering 100 * 1 jobs for minsize=6
INFO:root:Chunked 100 in [9, 9, 9, 9, 8, 8, 8, 8, 8, 8, 8, 8]
INFO:root:Considering 100 * 1 jobs for minsize=7
INFO:root:Chunked 100 in [9, 9, 9, 9, 8, 8, 8, 8, 8, 8, 8, 8]
INFO:root:Considering 100 * 1 jobs for minsize=8
INFO:root:Chunked 100 in [9, 9, 9, 9, 8, 8, 8, 8, 8, 8, 8, 8]
INFO:root:XX found first (1, 2) is not 3 9
INFO:root:XX add new best (1, 2) is not 3 9 9
INFO:root:Considering 100 * 1 jobs for minsize=9
INFO:root:Chunked 100 in [9, 9, 9, 9, 8, 8, 8, 8, 8, 8, 8, 8]
INFO:root:Trace: [(9, [(1, 2) is not 3])]
INFO:root:Trace Quality: [(9, 1)]
INFO:root:Trace Sorted: [(9, 1)]
INFO:root:Finished
INFO:root:Full Trace [(9, [(1, 2) is not 3])]
INFO:root:Trying {'quarterChopMUS': True}
INFO:root:Starting Step 1
INFO:root:Current state [[[[9], [3, 5], [8], [1, 3], [2], [1, 3, 4], [4, 5], [7], [6]], [[6], [2, 5], [2, 4], [3, 8, 9], [3, 5, 9], [7], [1], [4, 8], [3, 8, 9]], [[1], [7], [3, 4], [3, 6, 8, 9], [4, 5, 6, 9], [4, 6, 9], [5, 9], [2], [3, 8, 9]], [[7, 8], [2, 8], [5], [4], [3, 6], [3, 6], [2, 7], [9], [1]], [[3], [9], [1], [7], [8], [2], [4, 6], [4, 6], [5]], [[4], [6], [2, 7], [1, 9], [1, 9], [5], [8], [3], [2, 7]], [[7, 8], [4], [3, 7], [1, 2, 3, 6], [1, 3, 6], [1, 3, 6, 8], [6, 9], [5], [2, 9]], [[5], [3, 8], [6], [2, 3, 9], [3, 4, 9], [4, 9], [2, 7], [1], [7, 8]], [[2], [1], [9], [5], [7], [6, 8], [3], [6, 8], [4]]]]
INFO:root:Doing checkSmall1
INFO:root:Getting tiny MUSes, distance 1, for 1 puzlits, 1 repeats
INFO:root:Chunked 1 in [1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
INFO:root:Doing checkSmall2
INFO:root:Getting tiny MUSes, distance 2, for 1 puzlits, 1 repeats
INFO:root:Chunked 1 in [1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
INFO:root:Considering 100 * 1 jobs for minsize=3
INFO:root:Chunked 100 in [9, 9, 9, 9, 8, 8, 8, 8, 8, 8, 8, 8]
INFO:root:Considering 100 * 1 jobs for minsize=4
INFO:root:Chunked 100 in [9, 9, 9, 9, 8, 8, 8, 8, 8, 8, 8, 8]
INFO:root:Considering 100 * 1 jobs for minsize=5
INFO:root:Chunked 100 in [9, 9, 9, 9, 8, 8, 8, 8, 8, 8, 8, 8]
INFO:root:Considering 100 * 1 jobs for minsize=6
INFO:root:Chunked 100 in [9, 9, 9, 9, 8, 8, 8, 8, 8, 8, 8, 8]
INFO:root:Considering 100 * 1 jobs for minsize=7
INFO:root:Chunked 100 in [9, 9, 9, 9, 8, 8, 8, 8, 8, 8, 8, 8]
INFO:root:Considering 100 * 1 jobs for minsize=8
INFO:root:Chunked 100 in [9, 9, 9, 9, 8, 8, 8, 8, 8, 8, 8, 8]
INFO:root:XX found first (1, 2) is not 3 9
INFO:root:XX add new best (1, 2) is not 3 9 9
INFO:root:Considering 100 * 1 jobs for minsize=9
INFO:root:Chunked 100 in [9, 9, 9, 9, 8, 8, 8, 8, 8, 8, 8, 8]
INFO:root:XX add new best (1, 2) is not 3 9 9
INFO:root:XX add new best (1, 2) is not 3 9 9
INFO:root:Trace: [(9, [(1, 2) is not 3])]
INFO:root:Trace Quality: [(9, 1)]
INFO:root:Trace Sorted: [(9, 1)]
INFO:root:Finished
INFO:root:Full Trace [(9, [(1, 2) is not 3])]
INFO:root:Trying {'minPrecheckMUS': True}
INFO:root:Starting Step 1
INFO:root:Current state [[[[9], [3, 5], [8], [1, 3], [2], [1, 3, 4], [4, 5], [7], [6]], [[6], [2, 5], [2, 4], [3, 8, 9], [3, 5, 9], [7], [1], [4, 8], [3, 8, 9]], [[1], [7], [3, 4], [3, 6, 8, 9], [4, 5, 6, 9], [4, 6, 9], [5, 9], [2], [3, 8, 9]], [[7, 8], [2, 8], [5], [4], [3, 6], [3, 6], [2, 7], [9], [1]], [[3], [9], [1], [7], [8], [2], [4, 6], [4, 6], [5]], [[4], [6], [2, 7], [1, 9], [1, 9], [5], [8], [3], [2, 7]], [[7, 8], [4], [3, 7], [1, 2, 3, 6], [1, 3, 6], [1, 3, 6, 8], [6, 9], [5], [2, 9]], [[5], [3, 8], [6], [2, 3, 9], [3, 4, 9], [4, 9], [2, 7], [1], [7, 8]], [[2], [1], [9], [5], [7], [6, 8], [3], [6, 8], [4]]]]
INFO:root:Doing checkSmall1
INFO:root:Getting tiny MUSes, distance 1, for 1 puzlits, 1 repeats
INFO:root:Chunked 1 in [1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
INFO:root:Doing checkSmall2
INFO:root:Getting tiny MUSes, distance 2, for 1 puzlits, 1 repeats
INFO:root:Chunked 1 in [1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
INFO:root:Considering 100 * 1 jobs for minsize=3
INFO:root:Chunked 100 in [9, 9, 9, 9, 8, 8, 8, 8, 8, 8, 8, 8]
INFO:root:Considering 100 * 1 jobs for minsize=4
INFO:root:Chunked 100 in [9, 9, 9, 9, 8, 8, 8, 8, 8, 8, 8, 8]
INFO:root:Considering 100 * 1 jobs for minsize=5
INFO:root:Chunked 100 in [9, 9, 9, 9, 8, 8, 8, 8, 8, 8, 8, 8]
INFO:root:Considering 100 * 1 jobs for minsize=6
INFO:root:Chunked 100 in [9, 9, 9, 9, 8, 8, 8, 8, 8, 8, 8, 8]
INFO:root:Considering 100 * 1 jobs for minsize=7
INFO:root:Chunked 100 in [9, 9, 9, 9, 8, 8, 8, 8, 8, 8, 8, 8]
INFO:root:Considering 100 * 1 jobs for minsize=8
INFO:root:Chunked 100 in [9, 9, 9, 9, 8, 8, 8, 8, 8, 8, 8, 8]
INFO:root:Considering 100 * 1 jobs for minsize=9
INFO:root:Chunked 100 in [9, 9, 9, 9, 8, 8, 8, 8, 8, 8, 8, 8]
INFO:root:Considering 100 * 1 jobs for minsize=10
INFO:root:Chunked 100 in [9, 9, 9, 9, 8, 8, 8, 8, 8, 8, 8, 8]
INFO:root:XX found first (1, 2) is not 3 11
INFO:root:XX add new best (1, 2) is not 3 11 11
INFO:root:Considering 100 * 1 jobs for minsize=11
INFO:root:Chunked 100 in [9, 9, 9, 9, 8, 8, 8, 8, 8, 8, 8, 8]
INFO:root:XX add new best (1, 2) is not 3 11 11
INFO:root:XX add new best (1, 2) is not 3 11 11
INFO:root:Trace: [(11, [(1, 2) is not 3])]
INFO:root:Trace Quality: [(11, 1)]
INFO:root:Trace Sorted: [(11, 1)]
INFO:root:Finished
INFO:root:Full Trace [(11, [(1, 2) is not 3])]
INFO:root:Trying {'gallopingMUSes': True}
INFO:root:Starting Step 1
INFO:root:Current state [[[[9], [3, 5], [8], [1, 3], [2], [1, 3, 4], [4, 5], [7], [6]], [[6], [2, 5], [2, 4], [3, 8, 9], [3, 5, 9], [7], [1], [4, 8], [3, 8, 9]], [[1], [7], [3, 4], [3, 6, 8, 9], [4, 5, 6, 9], [4, 6, 9], [5, 9], [2], [3, 8, 9]], [[7, 8], [2, 8], [5], [4], [3, 6], [3, 6], [2, 7], [9], [1]], [[3], [9], [1], [7], [8], [2], [4, 6], [4, 6], [5]], [[4], [6], [2, 7], [1, 9], [1, 9], [5], [8], [3], [2, 7]], [[7, 8], [4], [3, 7], [1, 2, 3, 6], [1, 3, 6], [1, 3, 6, 8], [6, 9], [5], [2, 9]], [[5], [3, 8], [6], [2, 3, 9], [3, 4, 9], [4, 9], [2, 7], [1], [7, 8]], [[2], [1], [9], [5], [7], [6, 8], [3], [6, 8], [4]]]]
INFO:root:Doing checkSmall1
INFO:root:Getting tiny MUSes, distance 1, for 1 puzlits, 1 repeats
INFO:root:Chunked 1 in [1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
INFO:root:Doing checkSmall2
INFO:root:Getting tiny MUSes, distance 2, for 1 puzlits, 1 repeats
INFO:root:Chunked 1 in [1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
INFO:root:Considering 100 * 1 jobs for minsize=3
INFO:root:Chunked 100 in [9, 9, 9, 9, 8, 8, 8, 8, 8, 8, 8, 8]
INFO:root:Considering 100 * 1 jobs for minsize=4
INFO:root:Chunked 100 in [9, 9, 9, 9, 8, 8, 8, 8, 8, 8, 8, 8]
INFO:root:Considering 100 * 1 jobs for minsize=5
INFO:root:Chunked 100 in [9, 9, 9, 9, 8, 8, 8, 8, 8, 8, 8, 8]
INFO:root:Considering 100 * 1 jobs for minsize=6
INFO:root:Chunked 100 in [9, 9, 9, 9, 8, 8, 8, 8, 8, 8, 8, 8]
INFO:root:Considering 100 * 1 jobs for minsize=7
INFO:root:Chunked 100 in [9, 9, 9, 9, 8, 8, 8, 8, 8, 8, 8, 8]
INFO:root:Considering 100 * 1 jobs for minsize=8
INFO:root:Chunked 100 in [9, 9, 9, 9, 8, 8, 8, 8, 8, 8, 8, 8]
INFO:root:Considering 100 * 1 jobs for minsize=9
INFO:root:Chunked 100 in [9, 9, 9, 9, 8, 8, 8, 8, 8, 8, 8, 8]
INFO:root:XX found first (1, 2) is not 3 9
INFO:root:Trace: [(9, [(1, 2) is not 3])]
INFO:root:Trace Quality: [(9, 1)]
INFO:root:Trace Sorted: [(9, 1)]
INFO:root:Finished
INFO:root:Full Trace [(9, [(1, 2) is not 3])]
INFO:root:Trying {'minPrecheckStepsMUS': True}
INFO:root:Starting Step 1
INFO:root:Current state [[[[9], [3, 5], [8], [1, 3], [2], [1, 3, 4], [4, 5], [7], [6]], [[6], [2, 5], [2, 4], [3, 8, 9], [3, 5, 9], [7], [1], [4, 8], [3, 8, 9]], [[1], [7], [3, 4], [3, 6, 8, 9], [4, 5, 6, 9], [4, 6, 9], [5, 9], [2], [3, 8, 9]], [[7, 8], [2, 8], [5], [4], [3, 6], [3, 6], [2, 7], [9], [1]], [[3], [9], [1], [7], [8], [2], [4, 6], [4, 6], [5]], [[4], [6], [2, 7], [1, 9], [1, 9], [5], [8], [3], [2, 7]], [[7, 8], [4], [3, 7], [1, 2, 3, 6], [1, 3, 6], [1, 3, 6, 8], [6, 9], [5], [2, 9]], [[5], [3, 8], [6], [2, 3, 9], [3, 4, 9], [4, 9], [2, 7], [1], [7, 8]], [[2], [1], [9], [5], [7], [6, 8], [3], [6, 8], [4]]]]
INFO:root:Doing checkSmall1
INFO:root:Getting tiny MUSes, distance 1, for 1 puzlits, 1 repeats
INFO:root:Chunked 1 in [1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
INFO:root:Doing checkSmall2
INFO:root:Getting tiny MUSes, distance 2, for 1 puzlits, 1 repeats
INFO:root:Chunked 1 in [1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
INFO:root:Considering 100 * 1 jobs for minsize=3
INFO:root:Chunked 100 in [9, 9, 9, 9, 8, 8, 8, 8, 8, 8, 8, 8]
INFO:root:Considering 100 * 1 jobs for minsize=4
INFO:root:Chunked 100 in [9, 9, 9, 9, 8, 8, 8, 8, 8, 8, 8, 8]
INFO:root:Considering 100 * 1 jobs for minsize=5
INFO:root:Chunked 100 in [9, 9, 9, 9, 8, 8, 8, 8, 8, 8, 8, 8]
INFO:root:Considering 100 * 1 jobs for minsize=6
INFO:root:Chunked 100 in [9, 9, 9, 9, 8, 8, 8, 8, 8, 8, 8, 8]
INFO:root:Considering 100 * 1 jobs for minsize=7
INFO:root:Chunked 100 in [9, 9, 9, 9, 8, 8, 8, 8, 8, 8, 8, 8]
INFO:root:Considering 100 * 1 jobs for minsize=8
INFO:root:Chunked 100 in [9, 9, 9, 9, 8, 8, 8, 8, 8, 8, 8, 8]
INFO:root:Considering 100 * 1 jobs for minsize=9
INFO:root:Chunked 100 in [9, 9, 9, 9, 8, 8, 8, 8, 8, 8, 8, 8]
INFO:root:Considering 100 * 1 jobs for minsize=10
INFO:root:Chunked 100 in [9, 9, 9, 9, 8, 8, 8, 8, 8, 8, 8, 8]
INFO:root:XX found first (1, 2) is not 3 11
INFO:root:XX add new best (1, 2) is not 3 11 11
INFO:root:Considering 100 * 1 jobs for minsize=11
INFO:root:Chunked 100 in [9, 9, 9, 9, 8, 8, 8, 8, 8, 8, 8, 8]
INFO:root:XX add new best (1, 2) is not 3 11 11
INFO:root:XX add new best (1, 2) is not 3 11 11
INFO:root:Trace: [(11, [(1, 2) is not 3])]
INFO:root:Trace Quality: [(11, 1)]
INFO:root:Trace Sorted: [(11, 1)]
INFO:root:Finished
INFO:root:Full Trace [(11, [(1, 2) is not 3])]
INFO:root:Trying {'gallopingMUSes': True, 'minPrecheckMUS': True}
INFO:root:Starting Step 1
INFO:root:Current state [[[[9], [3, 5], [8], [1, 3], [2], [1, 3, 4], [4, 5], [7], [6]], [[6], [2, 5], [2, 4], [3, 8, 9], [3, 5, 9], [7], [1], [4, 8], [3, 8, 9]], [[1], [7], [3, 4], [3, 6, 8, 9], [4, 5, 6, 9], [4, 6, 9], [5, 9], [2], [3, 8, 9]], [[7, 8], [2, 8], [5], [4], [3, 6], [3, 6], [2, 7], [9], [1]], [[3], [9], [1], [7], [8], [2], [4, 6], [4, 6], [5]], [[4], [6], [2, 7], [1, 9], [1, 9], [5], [8], [3], [2, 7]], [[7, 8], [4], [3, 7], [1, 2, 3, 6], [1, 3, 6], [1, 3, 6, 8], [6, 9], [5], [2, 9]], [[5], [3, 8], [6], [2, 3, 9], [3, 4, 9], [4, 9], [2, 7], [1], [7, 8]], [[2], [1], [9], [5], [7], [6, 8], [3], [6, 8], [4]]]]
INFO:root:Doing checkSmall1
INFO:root:Getting tiny MUSes, distance 1, for 1 puzlits, 1 repeats
INFO:root:Chunked 1 in [1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
INFO:root:Doing checkSmall2
INFO:root:Getting tiny MUSes, distance 2, for 1 puzlits, 1 repeats
INFO:root:Chunked 1 in [1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
INFO:root:Considering 100 * 1 jobs for minsize=3
INFO:root:Chunked 100 in [9, 9, 9, 9, 8, 8, 8, 8, 8, 8, 8, 8]
INFO:root:Considering 100 * 1 jobs for minsize=4
INFO:root:Chunked 100 in [9, 9, 9, 9, 8, 8, 8, 8, 8, 8, 8, 8]
INFO:root:Considering 100 * 1 jobs for minsize=5
INFO:root:Chunked 100 in [9, 9, 9, 9, 8, 8, 8, 8, 8, 8, 8, 8]
INFO:root:Considering 100 * 1 jobs for minsize=6
INFO:root:Chunked 100 in [9, 9, 9, 9, 8, 8, 8, 8, 8, 8, 8, 8]
INFO:root:Considering 100 * 1 jobs for minsize=7
INFO:root:Chunked 100 in [9, 9, 9, 9, 8, 8, 8, 8, 8, 8, 8, 8]
INFO:root:Considering 100 * 1 jobs for minsize=8
INFO:root:Chunked 100 in [9, 9, 9, 9, 8, 8, 8, 8, 8, 8, 8, 8]
INFO:root:Considering 100 * 1 jobs for minsize=9
INFO:root:Chunked 100 in [9, 9, 9, 9, 8, 8, 8, 8, 8, 8, 8, 8]
INFO:root:Considering 100 * 1 jobs for minsize=10
INFO:root:Chunked 100 in [9, 9, 9, 9, 8, 8, 8, 8, 8, 8, 8, 8]
INFO:root:XX found first (1, 2) is not 3 11
INFO:root:XX add new best (1, 2) is not 3 11 11
INFO:root:Considering 100 * 1 jobs for minsize=11
INFO:root:Chunked 100 in [9, 9, 9, 9, 8, 8, 8, 8, 8, 8, 8, 8]
INFO:root:XX add new best (1, 2) is not 3 11 11
INFO:root:XX add new best (1, 2) is not 3 11 11
INFO:root:Trace: [(11, [(1, 2) is not 3])]
INFO:root:Trace Quality: [(11, 1)]
INFO:root:Trace Sorted: [(11, 1)]
INFO:root:Finished
INFO:root:Full Trace [(11, [(1, 2) is not 3])]
INFO:root:Trying {}
INFO:root:Starting Step 1
INFO:root:Current state [[[[5, 6, 7], [2, 6, 7], [2, 6], [9], [1, 6], [8], [4], [3], [1, 5]], [[5, 9], [3, 5, 9], [4], [7], [1, 3], [2], [6], [8], [1, 5]], [[3, 6], [8], [1], [3, 6], [5], [4], [7, 9], [7, 9], [2]], [[7, 8], [4, 7], [5], [6, 8], [4, 6], [3], [1], [2], [9]], [[1, 6, 9], [4, 6, 9], [6, 9], [5], [2], [1, 7], [3], [4, 7], [8]], [[1, 2], [2, 3], [3, 8], [4, 8], [9], [1, 7], [5], [6], [4, 7]], [[2, 5, 6], [5, 6], [3, 6], [2, 4], [7], [9], [8], [1], [3, 4]], [[3, 8], [1], [7], [2, 3], [4, 8], [5], [2, 9], [4, 9], [6]], [[4], [2, 9], [2, 8, 9], [1], [3, 8], [6], [2, 7], [5], [3, 7]]]]
INFO:root:Doing checkSmall1
INFO:root:Getting tiny MUSes, distance 1, for 1 puzlits, 1 repeats
INFO:root:Chunked 1 in [1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
INFO:root:Doing checkSmall2
INFO:root:Getting tiny MUSes, distance 2, for 1 puzlits, 1 repeats
INFO:root:Chunked 1 in [1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
INFO:root:Considering 100 * 1 jobs for minsize=3
INFO:root:Chunked 100 in [9, 9, 9, 9, 8, 8, 8, 8, 8, 8, 8, 8]
INFO:root:Considering 100 * 1 jobs for minsize=4
INFO:root:Chunked 100 in [9, 9, 9, 9, 8, 8, 8, 8, 8, 8, 8, 8]
INFO:root:Considering 100 * 1 jobs for minsize=5
INFO:root:Chunked 100 in [9, 9, 9, 9, 8, 8, 8, 8, 8, 8, 8, 8]
INFO:root:Considering 100 * 1 jobs for minsize=6
INFO:root:Chunked 100 in [9, 9, 9, 9, 8, 8, 8, 8, 8, 8, 8, 8]
INFO:root:Considering 100 * 1 jobs for minsize=7
INFO:root:Chunked 100 in [9, 9, 9, 9, 8, 8, 8, 8, 8, 8, 8, 8]
INFO:root:Considering 100 * 1 jobs for minsize=8
INFO:root:Chunked 100 in [9, 9, 9, 9, 8, 8, 8, 8, 8, 8, 8, 8]
INFO:root:Considering 100 * 1 jobs for minsize=9
INFO:root:Chunked 100 in [9, 9, 9, 9, 8, 8, 8, 8, 8, 8, 8, 8]
INFO:root:Considering 100 * 1 jobs for minsize=10
INFO:root:Chunked 100 in [9, 9, 9, 9, 8, 8, 8, 8, 8, 8, 8, 8]
INFO:root:Considering 100 * 1 jobs for minsize=11
INFO:root:Chunked 100 in [9, 9, 9, 9, 8, 8, 8, 8, 8, 8, 8, 8]
INFO:root:Considering 100 * 1 jobs for minsize=12
INFO:root:Chunked 100 in [9, 9, 9, 9, 8, 8, 8, 8, 8, 8, 8, 8]
INFO:root:XX found first (1, 1) is not 5 13
INFO:root:XX add new best (1, 1) is not 5 13 13
INFO:root:XX add new best (1, 1) is not 5 13 13
INFO:root:XX add new best (1, 1) is not 5 13 13
INFO:root:Considering 100 * 1 jobs for minsize=13
INFO:root:Chunked 100 in [9, 9, 9, 9, 8, 8, 8, 8, 8, 8, 8, 8]
INFO:root:XX add new best (1, 1) is not 5 13 13
INFO:root:XX add new best (1, 1) is not 5 13 13
INFO:root:XX add new best (1, 1) is not 5 13 13
INFO:root:XX add new best (1, 1) is not 5 13 13
INFO:root:XX add new best (1, 1) is not 5 13 13
INFO:root:XX add new best (1, 1) is not 5 13 13
INFO:root:Trace: [(13, [(1, 1) is not 5])]
INFO:root:Trace Quality: [(13, 1)]
INFO:root:Trace Sorted: [(13, 1)]
INFO:root:Finished
INFO:root:Full Trace [(13, [(1, 1) is not 5])]
INFO:root:Trying {'prechopMUSes': True}
INFO:root:Starting Step 1
INFO:root:Current state [[[[5, 6, 7], [2, 6, 7], [2, 6], [9], [1, 6], [8], [4], [3], [1, 5]], [[5, 9], [3, 5, 9], [4], [7], [1, 3], [2], [6], [8], [1, 5]], [[3, 6], [8], [1], [3, 6], [5], [4], [7, 9], [7, 9], [2]], [[7, 8], [4, 7], [5], [6, 8], [4, 6], [3], [1], [2], [9]], [[1, 6, 9], [4, 6, 9], [6, 9], [5], [2], [1, 7], [3], [4, 7], [8]], [[1, 2], [2, 3], [3, 8], [4, 8], [9], [1, 7], [5], [6], [4, 7]], [[2, 5, 6], [5, 6], [3, 6], [2, 4], [7], [9], [8], [1], [3, 4]], [[3, 8], [1], [7], [2, 3], [4, 8], [5], [2, 9], [4, 9], [6]], [[4], [2, 9], [2, 8, 9], [1], [3, 8], [6], [2, 7], [5], [3, 7]]]]
INFO:root:Doing checkSmall1
INFO:root:Getting tiny MUSes, distance 1, for 1 puzlits, 1 repeats
INFO:root:Chunked 1 in [1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
INFO:root:Doing checkSmall2
INFO:root:Getting tiny MUSes, distance 2, for 1 puzlits, 1 repeats
INFO:root:Chunked 1 in [1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
INFO:root:Considering 100 * 1 jobs for minsize=3
INFO:root:Chunked 100 in [9, 9, 9, 9, 8, 8, 8, 8, 8, 8, 8, 8]
INFO:root:Considering 100 * 1 jobs for minsize=4
INFO:root:Chunked 100 in [9, 9, 9, 9, 8, 8, 8, 8, 8, 8, 8, 8]
INFO:root:Considering 100 * 1 jobs for minsize=5
INFO:root:Chunked 100 in [9, 9, 9, 9, 8, 8, 8, 8, 8, 8, 8, 8]
INFO:root:Considering 100 * 1 jobs for minsize=6
INFO:root:Chunked 100 in [9, 9, 9, 9, 8, 8, 8, 8, 8, 8, 8, 8]
INFO:root:Considering 100 * 1 jobs for minsize=7
INFO:root:Chunked 100 in [9, 9, 9, 9, 8, 8, 8, 8, 8, 8, 8, 8]
INFO:root:Considering 100 * 1 jobs for minsize=8
INFO:root:Chunked 100 in [9, 9, 9, 9, 8, 8, 8, 8, 8, 8, 8, 8]
INFO:root:Considering 100 * 1 jobs for minsize=9
INFO:root:Chunked 100 in [9, 9, 9, 9, 8, 8, 8, 8, 8, 8, 8, 8]
INFO:root:Considering 100 * 1 jobs for minsize=10
INFO:root:Chunked 100 in [9, 9, 9, 9, 8, 8, 8, 8, 8, 8, 8, 8]
INFO:root:XX found first (1, 1) is not 5 11
INFO:root:XX add new best (1, 1) is not 5 11 11
INFO:root:XX add new best (1, 1) is not 5 11 11
INFO:root:Considering 100 * 1 jobs for minsize=11
INFO:root:Chunked 100 in [9, 9, 9, 9, 8, 8, 8, 8, 8, 8, 8, 8]
INFO:root:Trace: [(11, [(1, 1) is not 5])]
INFO:root:Trace Quality: [(11, 1)]
INFO:root:Trace Sorted: [(11, 1)]
INFO:root:Finished
INFO:root:Full Trace [(11, [(1, 1) is not 5])]
INFO:root:Trying {'quarterChopMUS': True}
INFO:root:Starting Step 1
INFO:root:Current state [[[[5, 6, 7], [2, 6, 7], [2, 6], [9], [1, 6], [8], [4], [3], [1, 5]], [[5, 9], [3, 5, 9], [4], [7], [1, 3], [2], [6], [8], [1, 5]], [[3, 6], [8], [1], [3, 6], [5], [4], [7, 9], [7, 9], [2]], [[7, 8], [4, 7], [5], [6, 8], [4, 6], [3], [1], [2], [9]], [[1, 6, 9], [4, 6, 9], [6, 9], [5], [2], [1, 7], [3], [4, 7], [8]], [[1, 2], [2, 3], [3, 8], [4, 8], [9], [1, 7], [5], [6], [4, 7]], [[2, 5, 6], [5, 6], [3, 6], [2, 4], [7], [9], [8], [1], [3, 4]], [[3, 8], [1], [7], [2, 3], [4, 8], [5], [2, 9], [4, 9], [6]], [[4], [2, 9], [2, 8, 9], [1], [3, 8], [6], [2, 7], [5], [3, 7]]]]
INFO:root:Doing checkSmall1
INFO:root:Getting tiny MUSes, distance 1, for 1 puzlits, 1 repeats
INFO:root:Chunked 1 in [1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
INFO:root:Doing checkSmall2
INFO:root:Getting tiny MUSes, distance 2, for 1 puzlits, 1 repeats
INFO:root:Chunked 1 in [1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
INFO:root:Considering 100 * 1 jobs for minsize=3
INFO:root:Chunked 100 in [9, 9, 9, 9, 8, 8, 8, 8, 8, 8, 8, 8]
INFO:root:Considering 100 * 1 jobs for minsize=4
INFO:root:Chunked 100 in [9, 9, 9, 9, 8, 8, 8, 8, 8, 8, 8, 8]
INFO:root:Considering 100 * 1 jobs for minsize=5
INFO:root:Chunked 100 in [9, 9, 9, 9, 8, 8, 8, 8, 8, 8, 8, 8]
INFO:root:Considering 100 * 1 jobs for minsize=6
INFO:root:Chunked 100 in [9, 9, 9, 9, 8, 8, 8, 8, 8, 8, 8, 8]
INFO:root:Considering 100 * 1 jobs for minsize=7
INFO:root:Chunked 100 in [9, 9, 9, 9, 8, 8, 8, 8, 8, 8, 8, 8]
INFO:root:Considering 100 * 1 jobs for minsize=8
INFO:root:Chunked 100 in [9, 9, 9, 9, 8, 8, 8, 8, 8, 8, 8, 8]
INFO:root:Considering 100 * 1 jobs for minsize=9
INFO:root:Chunked 100 in [9, 9, 9, 9, 8, 8, 8, 8, 8, 8, 8, 8]
INFO:root:Considering 100 * 1 jobs for minsize=10
INFO:root:Chunked 100 in [9, 9, 9, 9, 8, 8, 8, 8, 8, 8, 8, 8]
INFO:root:XX found first (1, 1) is not 5 11
INFO:root:Considering 100 * 1 jobs for minsize=11
INFO:root:Chunked 100 in [9, 9, 9, 9, 8, 8, 8, 8, 8, 8, 8, 8]
INFO:root:XX add new best (1, 1) is not 5 11 11
INFO:root:Trace: [(11, [(1, 1) is not 5])]
INFO:root:Trace Quality: [(11, 1)]
INFO:root:Trace Sorted: [(11, 1)]
INFO:root:Finished
INFO:root:Full Trace [(11, [(1, 1) is not 5])]
INFO:root:Trying {'minPrecheckMUS': True}
INFO:root:Starting Step 1
INFO:root:Current state [[[[5, 6, 7], [2, 6, 7], [2, 6], [9], [1, 6], [8], [4], [3], [1, 5]], [[5, 9], [3, 5, 9], [4], [7], [1, 3], [2], [6], [8], [1, 5]], [[3, 6], [8], [1], [3, 6], [5], [4], [7, 9], [7, 9], [2]], [[7, 8], [4, 7], [5], [6, 8], [4, 6], [3], [1], [2], [9]], [[1, 6, 9], [4, 6, 9], [6, 9], [5], [2], [1, 7], [3], [4, 7], [8]], [[1, 2], [2, 3], [3, 8], [4, 8], [9], [1, 7], [5], [6], [4, 7]], [[2, 5, 6], [5, 6], [3, 6], [2, 4], [7], [9], [8], [1], [3, 4]], [[3, 8], [1], [7], [2, 3], [4, 8], [5], [2, 9], [4, 9], [6]], [[4], [2, 9], [2, 8, 9], [1], [3, 8], [6], [2, 7], [5], [3, 7]]]]
INFO:root:Doing checkSmall1
INFO:root:Getting tiny MUSes, distance 1, for 1 puzlits, 1 repeats
INFO:root:Chunked 1 in [1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
INFO:root:Doing checkSmall2
INFO:root:Getting tiny MUSes, distance 2, for 1 puzlits, 1 repeats
INFO:root:Chunked 1 in [1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
INFO:root:Considering 100 * 1 jobs for minsize=3
INFO:root:Chunked 100 in [9, 9, 9, 9, 8, 8, 8, 8, 8, 8, 8, 8]
INFO:root:Considering 100 * 1 jobs for minsize=4
INFO:root:Chunked 100 in [9, 9, 9, 9, 8, 8, 8, 8, 8, 8, 8, 8]
INFO:root:Considering 100 * 1 jobs for minsize=5
INFO:root:Chunked 100 in [9, 9, 9, 9, 8, 8, 8, 8, 8, 8, 8, 8]
INFO:root:Considering 100 * 1 jobs for minsize=6
INFO:root:Chunked 100 in [9, 9, 9, 9, 8, 8, 8, 8, 8, 8, 8, 8]
INFO:root:Considering 100 * 1 jobs for minsize=7
INFO:root:Chunked 100 in [9, 9, 9, 9, 8, 8, 8, 8, 8, 8, 8, 8]
INFO:root:Considering 100 * 1 jobs for minsize=8
INFO:root:Chunked 100 in [9, 9, 9, 9, 8, 8, 8, 8, 8, 8, 8, 8]
INFO:root:Considering 100 * 1 jobs for minsize=9
INFO:root:Chunked 100 in [9, 9, 9, 9, 8, 8, 8, 8, 8, 8, 8, 8]
INFO:root:Considering 100 * 1 jobs for minsize=10
INFO:root:Chunked 100 in [9, 9, 9, 9, 8, 8, 8, 8, 8, 8, 8, 8]
INFO:root:Considering 100 * 1 jobs for minsize=11
INFO:root:Chunked 100 in [9, 9, 9, 9, 8, 8, 8, 8, 8, 8, 8, 8]
INFO:root:XX found first (1, 1) is not 5 11
INFO:root:XX add new best (1, 1) is not 5 11 11
INFO:root:Trace: [(11, [(1, 1) is not 5])]
INFO:root:Trace Quality: [(11, 1)]
INFO:root:Trace Sorted: [(11, 1)]
INFO:root:Finished
INFO:root:Full Trace [(11, [(1, 1) is not 5])]
INFO:root:Trying {'gallopingMUSes': True}
INFO:root:Starting Step 1
INFO:root:Current state [[[[5, 6, 7], [2, 6, 7], [2, 6], [9], [1, 6], [8], [4], [3], [1, 5]], [[5, 9], [3, 5, 9], [4], [7], [1, 3], [2], [6], [8], [1, 5]], [[3, 6], [8], [1], [3, 6], [5], [4], [7, 9], [7, 9], [2]], [[7, 8], [4, 7], [5], [6, 8], [4, 6], [3], [1], [2], [9]], [[1, 6, 9], [4, 6, 9], [6, 9], [5], [2], [1, 7], [3], [4, 7], [8]], [[1, 2], [2, 3], [3, 8], [4, 8], [9], [1, 7], [5], [6], [4, 7]], [[2, 5, 6], [5, 6], [3, 6], [2, 4], [7], [9], [8], [1], [3, 4]], [[3, 8], [1], [7], [2, 3], [4, 8], [5], [2, 9], [4, 9], [6]], [[4], [2, 9], [2, 8, 9], [1], [3, 8], [6], [2, 7], [5], [3, 7]]]]
INFO:root:Doing checkSmall1
INFO:root:Getting tiny MUSes, distance 1, for 1 puzlits, 1 repeats
INFO:root:Chunked 1 in [1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
INFO:root:Doing checkSmall2
INFO:root:Getting tiny MUSes, distance 2, for 1 puzlits, 1 repeats
INFO:root:Chunked 1 in [1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
INFO:root:Considering 100 * 1 jobs for minsize=3
INFO:root:Chunked 100 in [9, 9, 9, 9, 8, 8, 8, 8, 8, 8, 8, 8]
INFO:root:Considering 100 * 1 jobs for minsize=4
INFO:root:Chunked 100 in [9, 9, 9, 9, 8, 8, 8, 8, 8, 8, 8, 8]
INFO:root:Considering 100 * 1 jobs for minsize=5
INFO:root:Chunked 100 in [9, 9, 9, 9, 8, 8, 8, 8, 8, 8, 8, 8]
INFO:root:Considering 100 * 1 jobs for minsize=6
INFO:root:Chunked 100 in [9, 9, 9, 9, 8, 8, 8, 8, 8, 8, 8, 8]
INFO:root:Considering 100 * 1 jobs for minsize=7
INFO:root:Chunked 100 in [9, 9, 9, 9, 8, 8, 8, 8, 8, 8, 8, 8]
INFO:root:Considering 100 * 1 jobs for minsize=8
INFO:root:Chunked 100 in [9, 9, 9, 9, 8, 8, 8, 8, 8, 8, 8, 8]
INFO:root:Considering 100 * 1 jobs for minsize=9
INFO:root:Chunked 100 in [9, 9, 9, 9, 8, 8, 8, 8, 8, 8, 8, 8]
INFO:root:Considering 100 * 1 jobs for minsize=10
INFO:root:Chunked 100 in [9, 9, 9, 9, 8, 8, 8, 8, 8, 8, 8, 8]
INFO:root:Considering 100 * 1 jobs for minsize=11
INFO:root:Chunked 100 in [9, 9, 9, 9, 8, 8, 8, 8, 8, 8, 8, 8]
INFO:root:XX found first (1, 1) is not 5 11
INFO:root:XX add new best (1, 1) is not 5 11 11
INFO:root:Trace: [(11, [(1, 1) is not 5])]
INFO:root:Trace Quality: [(11, 1)]
INFO:root:Trace Sorted: [(11, 1)]
INFO:root:Finished
INFO:root:Full Trace [(11, [(1, 1) is not 5])]
INFO:root:Trying {'minPrecheckStepsMUS': True}
INFO:root:Starting Step 1
INFO:root:Current state [[[[5, 6, 7], [2, 6, 7], [2, 6], [9], [1, 6], [8], [4], [3], [1, 5]], [[5, 9], [3, 5, 9], [4], [7], [1, 3], [2], [6], [8], [1, 5]], [[3, 6], [8], [1], [3, 6], [5], [4], [7, 9], [7, 9], [2]], [[7, 8], [4, 7], [5], [6, 8], [4, 6], [3], [1], [2], [9]], [[1, 6, 9], [4, 6, 9], [6, 9], [5], [2], [1, 7], [3], [4, 7], [8]], [[1, 2], [2, 3], [3, 8], [4, 8], [9], [1, 7], [5], [6], [4, 7]], [[2, 5, 6], [5, 6], [3, 6], [2, 4], [7], [9], [8], [1], [3, 4]], [[3, 8], [1], [7], [2, 3], [4, 8], [5], [2, 9], [4, 9], [6]], [[4], [2, 9], [2, 8, 9], [1], [3, 8], [6], [2, 7], [5], [3, 7]]]]
INFO:root:Doing checkSmall1
INFO:root:Getting tiny MUSes, distance 1, for 1 puzlits, 1 repeats
INFO:root:Chunked 1 in [1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
INFO:root:Doing checkSmall2
INFO:root:Getting tiny MUSes, distance 2, for 1 puzlits, 1 repeats
INFO:root:Chunked 1 in [1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
INFO:root:Considering 100 * 1 jobs for minsize=3
INFO:root:Chunked 100 in [9, 9, 9, 9, 8, 8, 8, 8, 8, 8, 8, 8]
INFO:root:Considering 100 * 1 jobs for minsize=4
INFO:root:Chunked 100 in [9, 9, 9, 9, 8, 8, 8, 8, 8, 8, 8, 8]
INFO:root:Considering 100 * 1 jobs for minsize=5
INFO:root:Chunked 100 in [9, 9, 9, 9, 8, 8, 8, 8, 8, 8, 8, 8]
INFO:root:Considering 100 * 1 jobs for minsize=6
INFO:root:Chunked 100 in [9, 9, 9, 9, 8, 8, 8, 8, 8, 8, 8, 8]
INFO:root:Considering 100 * 1 jobs for minsize=7
INFO:root:Chunked 100 in [9, 9, 9, 9, 8, 8, 8, 8, 8, 8, 8, 8]
INFO:root:Considering 100 * 1 jobs for minsize=8
INFO:root:Chunked 100 in [9, 9, 9, 9, 8, 8, 8, 8, 8, 8, 8, 8]
INFO:root:Considering 100 * 1 jobs for minsize=9
INFO:root:Chunked 100 in [9, 9, 9, 9, 8, 8, 8, 8, 8, 8, 8, 8]
INFO:root:Considering 100 * 1 jobs for minsize=10
INFO:root:Chunked 100 in [9, 9, 9, 9, 8, 8, 8, 8, 8, 8, 8, 8]
INFO:root:Considering 100 * 1 jobs for minsize=11
INFO:root:Chunked 100 in [9, 9, 9, 9, 8, 8, 8, 8, 8, 8, 8, 8]
INFO:root:XX found first (1, 1) is not 5 11
INFO:root:XX add new best (1, 1) is not 5 11 11
INFO:root:Trace: [(11, [(1, 1) is not 5])]
INFO:root:Trace Quality: [(11, 1)]
INFO:root:Trace Sorted: [(11, 1)]
INFO:root:Finished
INFO:root:Full Trace [(11, [(1, 1) is not 5])]
INFO:root:Trying {'gallopingMUSes': True, 'minPrecheckMUS': True}
INFO:root:Starting Step 1
INFO:root:Current state [[[[5, 6, 7], [2, 6, 7], [2, 6], [9], [1, 6], [8], [4], [3], [1, 5]], [[5, 9], [3, 5, 9], [4], [7], [1, 3], [2], [6], [8], [1, 5]], [[3, 6], [8], [1], [3, 6], [5], [4], [7, 9], [7, 9], [2]], [[7, 8], [4, 7], [5], [6, 8], [4, 6], [3], [1], [2], [9]], [[1, 6, 9], [4, 6, 9], [6, 9], [5], [2], [1, 7], [3], [4, 7], [8]], [[1, 2], [2, 3], [3, 8], [4, 8], [9], [1, 7], [5], [6], [4, 7]], [[2, 5, 6], [5, 6], [3, 6], [2, 4], [7], [9], [8], [1], [3, 4]], [[3, 8], [1], [7], [2, 3], [4, 8], [5], [2, 9], [4, 9], [6]], [[4], [2, 9], [2, 8, 9], [1], [3, 8], [6], [2, 7], [5], [3, 7]]]]
INFO:root:Doing checkSmall1
INFO:root:Getting tiny MUSes, distance 1, for 1 puzlits, 1 repeats
INFO:root:Chunked 1 in [1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
INFO:root:Doing checkSmall2
INFO:root:Getting tiny MUSes, distance 2, for 1 puzlits, 1 repeats
INFO:root:Chunked 1 in [1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
INFO:root:Considering 100 * 1 jobs for minsize=3
INFO:root:Chunked 100 in [9, 9, 9, 9, 8, 8, 8, 8, 8, 8, 8, 8]
INFO:root:Considering 100 * 1 jobs for minsize=4
INFO:root:Chunked 100 in [9, 9, 9, 9, 8, 8, 8, 8, 8, 8, 8, 8]
INFO:root:Considering 100 * 1 jobs for minsize=5
INFO:root:Chunked 100 in [9, 9, 9, 9, 8, 8, 8, 8, 8, 8, 8, 8]
INFO:root:Considering 100 * 1 jobs for minsize=6
INFO:root:Chunked 100 in [9, 9, 9, 9, 8, 8, 8, 8, 8, 8, 8, 8]
INFO:root:Considering 100 * 1 jobs for minsize=7
INFO:root:Chunked 100 in [9, 9, 9, 9, 8, 8, 8, 8, 8, 8, 8, 8]
INFO:root:Considering 100 * 1 jobs for minsize=8
INFO:root:Chunked 100 in [9, 9, 9, 9, 8, 8, 8, 8, 8, 8, 8, 8]
INFO:root:Considering 100 * 1 jobs for minsize=9
INFO:root:Chunked 100 in [9, 9, 9, 9, 8, 8, 8, 8, 8, 8, 8, 8]
INFO:root:Considering 100 * 1 jobs for minsize=10
INFO:root:Chunked 100 in [9, 9, 9, 9, 8, 8, 8, 8, 8, 8, 8, 8]
INFO:root:Considering 100 * 1 jobs for minsize=11
INFO:root:Chunked 100 in [9, 9, 9, 9, 8, 8, 8, 8, 8, 8, 8, 8]
INFO:root:XX found first (1, 1) is not 5 11
INFO:root:XX add new best (1, 1) is not 5 11 11
INFO:root:Trace: [(11, [(1, 1) is not 5])]
INFO:root:Trace Quality: [(11, 1)]
INFO:root:Trace Sorted: [(11, 1)]
INFO:root:Finished
INFO:root:Full Trace [(11, [(1, 1) is not 5])]
INFO:root:Trying {}
INFO:root:Starting Step 1
INFO:root:Current state [[[[2, 4, 9], [4, 6, 9], [1], [7], [5], [3], [8], [2, 4, 6, 9], [2, 6, 9]], [[2, 3, 4, 8, 9], [5], [2, 3, 4, 8, 9], [1, 2], [1, 4], [2, 4, 6], [2, 3, 6], [2, 4, 6, 9], [7]], [[7], [3, 4, 6], [2, 3, 4], [8], [9], [2, 4, 6], [1], [2, 4, 5, 6], [2, 3, 5, 6]], [[3, 4, 8, 9], [3, 4, 8, 9], [3, 4, 8, 9], [6], [2, 3], [1], [5], [7], [2, 8]], [[6], [2], [5], [4], [7], [8], [9], [3], [1]], [[3, 8], [1], [7], [9], [2, 3], [5], [4], [2, 6, 8], [2, 6, 8]], [[1, 2, 3, 5, 8, 9], [3, 8, 9], [2, 3, 8, 9], [1, 2, 5], [6], [7], [2, 3], [2, 5, 8, 9], [4]], [[2, 3, 4, 5, 8, 9], [7], [2, 3, 4, 8, 9], [2, 5], [4, 8], [2, 4], [2, 3, 6], [1], [2, 3, 5, 6, 8, 9]], [[1, 2, 4, 5, 8], [4, 8], [6], [3], [1, 4, 8], [9], [7], [2, 5, 8], [2, 5, 8]]]]
INFO:root:Doing checkSmall1
INFO:root:Getting tiny MUSes, distance 1, for 1 puzlits, 1 repeats
INFO:root:Chunked 1 in [1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
INFO:root:Doing checkSmall2
INFO:root:Getting tiny MUSes, distance 2, for 1 puzlits, 1 repeats
INFO:root:Chunked 1 in [1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
INFO:root:Considering 100 * 1 jobs for minsize=3
INFO:root:Chunked 100 in [9, 9, 9, 9, 8, 8, 8, 8, 8, 8, 8, 8]
INFO:root:Considering 100 * 1 jobs for minsize=4
INFO:root:Chunked 100 in [9, 9, 9, 9, 8, 8, 8, 8, 8, 8, 8, 8]
INFO:root:Considering 100 * 1 jobs for minsize=5
INFO:root:Chunked 100 in [9, 9, 9, 9, 8, 8, 8, 8, 8, 8, 8, 8]
INFO:root:Considering 100 * 1 jobs for minsize=6
INFO:root:Chunked 100 in [9, 9, 9, 9, 8, 8, 8, 8, 8, 8, 8, 8]
INFO:root:Considering 100 * 1 jobs for minsize=7
INFO:root:Chunked 100 in [9, 9, 9, 9, 8, 8, 8, 8, 8, 8, 8, 8]
INFO:root:Considering 100 * 1 jobs for minsize=8
INFO:root:Chunked 100 in [9, 9, 9, 9, 8, 8, 8, 8, 8, 8, 8, 8]
INFO:root:Considering 100 * 1 jobs for minsize=9
INFO:root:Chunked 100 in [9, 9, 9, 9, 8, 8, 8, 8, 8, 8, 8, 8]
INFO:root:Considering 100 * 1 jobs for minsize=10
INFO:root:Chunked 100 in [9, 9, 9, 9, 8, 8, 8, 8, 8, 8, 8, 8]
INFO:root:Considering 100 * 1 jobs for minsize=11
INFO:root:Chunked 100 in [9, 9, 9, 9, 8, 8, 8, 8, 8, 8, 8, 8]
INFO:root:Considering 100 * 1 jobs for minsize=12
INFO:root:Chunked 100 in [9, 9, 9, 9, 8, 8, 8, 8, 8, 8, 8, 8]
INFO:root:Considering 100 * 1 jobs for minsize=13
INFO:root:Chunked 100 in [9, 9, 9, 9, 8, 8, 8, 8, 8, 8, 8, 8]
INFO:root:Considering 100 * 1 jobs for minsize=14
INFO:root:Chunked 100 in [9, 9, 9, 9, 8, 8, 8, 8, 8, 8, 8, 8]
INFO:root:Considering 100 * 1 jobs for minsize=15
INFO:root:Chunked 100 in [9, 9, 9, 9, 8, 8, 8, 8, 8, 8, 8, 8]
INFO:root:Considering 100 * 1 jobs for minsize=16
INFO:root:Chunked 100 in [9, 9, 9, 9, 8, 8, 8, 8, 8, 8, 8, 8]
INFO:root:XX found first (2, 8) is not 2 17
INFO:root:XX add new best (2, 8) is not 2 17 17
INFO:root:XX add new best (2, 8) is not 2 17 17
INFO:root:XX add new best (2, 8) is not 2 17 17
INFO:root:XX add new best (2, 8) is not 2 17 17
INFO:root:XX add new best (2, 8) is not 2 17 17
INFO:root:XX add new best (2, 8) is not 2 17 17
INFO:root:XX add new best (2, 8) is not 2 17 17
INFO:root:XX add new best (2, 8) is not 2 17 17
INFO:root:XX add new best (2, 8) is not 2 17 17
INFO:root:XX add new best (2, 8) is not 2 17 17
INFO:root:XX add new best (2, 8) is not 2 17 17
INFO:root:XX add new best (2, 8) is not 2 17 17
INFO:root:XX add new best (2, 8) is not 2 17 17
INFO:root:XX add new best (2, 8) is not 2 17 17
INFO:root:XX add new best (2, 8) is not 2 17 17
INFO:root:XX add new best (2, 8) is not 2 17 17
INFO:root:XX add new best (2, 8) is not 2 17 17
INFO:root:XX add new best (2, 8) is not 2 17 17
INFO:root:XX add new best (2, 8) is not 2 17 17
INFO:root:XX add new best (2, 8) is not 2 17 17
INFO:root:XX add new best (2, 8) is not 2 17 17
INFO:root:XX add new best (2, 8) is not 2 17 17
INFO:root:XX add new best (2, 8) is not 2 17 17
INFO:root:XX add new best (2, 8) is not 2 17 17
INFO:root:XX add new best (2, 8) is not 2 17 17
INFO:root:XX add new best (2, 8) is not 2 17 17
INFO:root:XX add new best (2, 8) is not 2 17 17
INFO:root:XX add new best (2, 8) is not 2 17 17
INFO:root:XX add new best (2, 8) is not 2 17 17
INFO:root:XX add new best (2, 8) is not 2 17 17
INFO:root:XX add new best (2, 8) is not 2 17 17
INFO:root:XX add new best (2, 8) is not 2 17 17
INFO:root:XX add new best (2, 8) is not 2 17 17
INFO:root:XX add new best (2, 8) is not 2 17 17
INFO:root:XX add new best (2, 8) is not 2 17 17
INFO:root:XX add new best (2, 8) is not 2 17 17
INFO:root:XX add new best (2, 8) is not 2 17 17
INFO:root:XX add new best (2, 8) is not 2 17 17
INFO:root:Considering 100 * 1 jobs for minsize=17
INFO:root:Chunked 100 in [9, 9, 9, 9, 8, 8, 8, 8, 8, 8, 8, 8]
INFO:root:XX add new best (2, 8) is not 2 17 17
INFO:root:XX add new best (2, 8) is not 2 17 17
INFO:root:XX add new best (2, 8) is not 2 17 17
INFO:root:XX add new best (2, 8) is not 2 17 17
INFO:root:XX add new best (2, 8) is not 2 17 17
INFO:root:XX add new best (2, 8) is not 2 17 17
INFO:root:XX add new best (2, 8) is not 2 17 17
INFO:root:XX add new best (2, 8) is not 2 17 17
INFO:root:XX add new best (2, 8) is not 2 17 17
INFO:root:XX add new best (2, 8) is not 2 17 17
INFO:root:XX add new best (2, 8) is not 2 17 17
INFO:root:XX add new best (2, 8) is not 2 17 17
INFO:root:XX add new best (2, 8) is not 2 17 17
INFO:root:XX add new best (2, 8) is not 2 17 17
INFO:root:XX add new best (2, 8) is not 2 17 17
INFO:root:XX add new best (2, 8) is not 2 17 17
INFO:root:XX add new best (2, 8) is not 2 17 17
INFO:root:XX add new best (2, 8) is not 2 17 17
INFO:root:XX add new best (2, 8) is not 2 17 17
INFO:root:XX add new best (2, 8) is not 2 17 17
INFO:root:XX add new best (2, 8) is not 2 17 17
INFO:root:XX add new best (2, 8) is not 2 17 17
INFO:root:XX add new best (2, 8) is not 2 17 17
INFO:root:XX add new best (2, 8) is not 2 17 17
INFO:root:XX add new best (2, 8) is not 2 17 17
INFO:root:XX add new best (2, 8) is not 2 17 17
INFO:root:XX add new best (2, 8) is not 2 17 17
INFO:root:XX add new best (2, 8) is not 2 17 17
INFO:root:XX add new best (2, 8) is not 2 17 17
INFO:root:XX add new best (2, 8) is not 2 17 17
INFO:root:XX add new best (2, 8) is not 2 17 17
INFO:root:XX add new best (2, 8) is not 2 17 17
INFO:root:XX add new best (2, 8) is not 2 17 17
INFO:root:XX add new best (2, 8) is not 2 17 17
INFO:root:XX add new best (2, 8) is not 2 17 17
INFO:root:XX add new best (2, 8) is not 2 17 17
INFO:root:XX add new best (2, 8) is not 2 17 17
INFO:root:XX add new best (2, 8) is not 2 17 17
INFO:root:XX add new best (2, 8) is not 2 17 17
INFO:root:XX add new best (2, 8) is not 2 17 17
INFO:root:XX add new best (2, 8) is not 2 17 17
INFO:root:XX add new best (2, 8) is not 2 17 17
INFO:root:XX add new best (2, 8) is not 2 17 17
INFO:root:XX add new best (2, 8) is not 2 17 17
INFO:root:Trace: [(17, [(2, 8) is not 2])]
INFO:root:Trace Quality: [(17, 1)]
INFO:root:Trace Sorted: [(17, 1)]
INFO:root:Finished
INFO:root:Full Trace [(17, [(2, 8) is not 2])]
INFO:root:Trying {'prechopMUSes': True}
INFO:root:Starting Step 1
INFO:root:Current state [[[[2, 4, 9], [4, 6, 9], [1], [7], [5], [3], [8], [2, 4, 6, 9], [2, 6, 9]], [[2, 3, 4, 8, 9], [5], [2, 3, 4, 8, 9], [1, 2], [1, 4], [2, 4, 6], [2, 3, 6], [2, 4, 6, 9], [7]], [[7], [3, 4, 6], [2, 3, 4], [8], [9], [2, 4, 6], [1], [2, 4, 5, 6], [2, 3, 5, 6]], [[3, 4, 8, 9], [3, 4, 8, 9], [3, 4, 8, 9], [6], [2, 3], [1], [5], [7], [2, 8]], [[6], [2], [5], [4], [7], [8], [9], [3], [1]], [[3, 8], [1], [7], [9], [2, 3], [5], [4], [2, 6, 8], [2, 6, 8]], [[1, 2, 3, 5, 8, 9], [3, 8, 9], [2, 3, 8, 9], [1, 2, 5], [6], [7], [2, 3], [2, 5, 8, 9], [4]], [[2, 3, 4, 5, 8, 9], [7], [2, 3, 4, 8, 9], [2, 5], [4, 8], [2, 4], [2, 3, 6], [1], [2, 3, 5, 6, 8, 9]], [[1, 2, 4, 5, 8], [4, 8], [6], [3], [1, 4, 8], [9], [7], [2, 5, 8], [2, 5, 8]]]]
INFO:root:Doing checkSmall1
INFO:root:Getting tiny MUSes, distance 1, for 1 puzlits, 1 repeats
INFO:root:Chunked 1 in [1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
INFO:root:Doing checkSmall2
INFO:root:Getting tiny MUSes, distance 2, for 1 puzlits, 1 repeats
INFO:root:Chunked 1 in [1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
INFO:root:Considering 100 * 1 jobs for minsize=3
INFO:root:Chunked 100 in [9, 9, 9, 9, 8, 8, 8, 8, 8, 8, 8, 8]
INFO:root:Considering 100 * 1 jobs for minsize=4
INFO:root:Chunked 100 in [9, 9, 9, 9, 8, 8, 8, 8, 8, 8, 8, 8]
INFO:root:Considering 100 * 1 jobs for minsize=5
INFO:root:Chunked 100 in [9, 9, 9, 9, 8, 8, 8, 8, 8, 8, 8, 8]
INFO:root:Considering 100 * 1 jobs for minsize=6
INFO:root:Chunked 100 in [9, 9, 9, 9, 8, 8, 8, 8, 8, 8, 8, 8]
INFO:root:Considering 100 * 1 jobs for minsize=7
INFO:root:Chunked 100 in [9, 9, 9, 9, 8, 8, 8, 8, 8, 8, 8, 8]
INFO:root:Considering 100 * 1 jobs for minsize=8
INFO:root:Chunked 100 in [9, 9, 9, 9, 8, 8, 8, 8, 8, 8, 8, 8]
INFO:root:Considering 100 * 1 jobs for minsize=9
INFO:root:Chunked 100 in [9, 9, 9, 9, 8, 8, 8, 8, 8, 8, 8, 8]
INFO:root:XX found first (2, 8) is not 2 10
INFO:root:XX add new best (2, 8) is not 2 10 10
INFO:root:XX add new best (2, 8) is not 2 10 10
INFO:root:XX add new best (2, 8) is not 2 10 10
INFO:root:XX add new best (2, 8) is not 2 10 10
INFO:root:XX add new best (2, 8) is not 2 10 10
INFO:root:XX add new best (2, 8) is not 2 10 10
INFO:root:XX add new best (2, 8) is not 2 10 10
INFO:root:Considering 100 * 1 jobs for minsize=10
INFO:root:Chunked 100 in [9, 9, 9, 9, 8, 8, 8, 8, 8, 8, 8, 8]
INFO:root:XX add new best (2, 8) is not 2 10 10
INFO:root:XX add new best (2, 8) is not 2 10 10
INFO:root:XX add new best (2, 8) is not 2 10 10
INFO:root:XX add new best (2, 8) is not 2 10 10
INFO:root:XX add new best (2, 8) is not 2 10 10
INFO:root:XX add new best (2, 8) is not 2 10 10
INFO:root:XX add new best (2, 8) is not 2 10 10
INFO:root:Trace: [(10, [(2, 8) is not 2])]
INFO:root:Trace Quality: [(10, 1)]
INFO:root:Trace Sorted: [(10, 1)]
INFO:root:Finished
INFO:root:Full Trace [(10, [(2, 8) is not 2])]
INFO:root:Trying {'quarterChopMUS': True}
INFO:root:Starting Step 1
INFO:root:Current state [[[[2, 4, 9], [4, 6, 9], [1], [7], [5], [3], [8], [2, 4, 6, 9], [2, 6, 9]], [[2, 3, 4, 8, 9], [5], [2, 3, 4, 8, 9], [1, 2], [1, 4], [2, 4, 6], [2, 3, 6], [2, 4, 6, 9], [7]], [[7], [3, 4, 6], [2, 3, 4], [8], [9], [2, 4, 6], [1], [2, 4, 5, 6], [2, 3, 5, 6]], [[3, 4, 8, 9], [3, 4, 8, 9], [3, 4, 8, 9], [6], [2, 3], [1], [5], [7], [2, 8]], [[6], [2], [5], [4], [7], [8], [9], [3], [1]], [[3, 8], [1], [7], [9], [2, 3], [5], [4], [2, 6, 8], [2, 6, 8]], [[1, 2, 3, 5, 8, 9], [3, 8, 9], [2, 3, 8, 9], [1, 2, 5], [6], [7], [2, 3], [2, 5, 8, 9], [4]], [[2, 3, 4, 5, 8, 9], [7], [2, 3, 4, 8, 9], [2, 5], [4, 8], [2, 4], [2, 3, 6], [1], [2, 3, 5, 6, 8, 9]], [[1, 2, 4, 5, 8], [4, 8], [6], [3], [1, 4, 8], [9], [7], [2, 5, 8], [2, 5, 8]]]]
INFO:root:Doing checkSmall1
INFO:root:Getting tiny MUSes, distance 1, for 1 puzlits, 1 repeats
INFO:root:Chunked 1 in [1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
INFO:root:Doing checkSmall2
INFO:root:Getting tiny MUSes, distance 2, for 1 puzlits, 1 repeats
INFO:root:Chunked 1 in [1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
INFO:root:Considering 100 * 1 jobs for minsize=3
INFO:root:Chunked 100 in [9, 9, 9, 9, 8, 8, 8, 8, 8, 8, 8, 8]
INFO:root:Considering 100 * 1 jobs for minsize=4
INFO:root:Chunked 100 in [9, 9, 9, 9, 8, 8, 8, 8, 8, 8, 8, 8]
INFO:root:Considering 100 * 1 jobs for minsize=5
INFO:root:Chunked 100 in [9, 9, 9, 9, 8, 8, 8, 8, 8, 8, 8, 8]
INFO:root:Considering 100 * 1 jobs for minsize=6
INFO:root:Chunked 100 in [9, 9, 9, 9, 8, 8, 8, 8, 8, 8, 8, 8]
INFO:root:Considering 100 * 1 jobs for minsize=7
INFO:root:Chunked 100 in [9, 9, 9, 9, 8, 8, 8, 8, 8, 8, 8, 8]
INFO:root:Considering 100 * 1 jobs for minsize=8
INFO:root:Chunked 100 in [9, 9, 9, 9, 8, 8, 8, 8, 8, 8, 8, 8]
INFO:root:Considering 100 * 1 jobs for minsize=9
INFO:root:Chunked 100 in [9, 9, 9, 9, 8, 8, 8, 8, 8, 8, 8, 8]
INFO:root:XX found first (2, 8) is not 2 10
INFO:root:XX add new best (2, 8) is not 2 10 10
INFO:root:XX add new best (2, 8) is not 2 10 10
INFO:root:XX add new best (2, 8) is not 2 10 10
INFO:root:XX add new best (2, 8) is not 2 10 10
INFO:root:Considering 100 * 1 jobs for minsize=10
INFO:root:Chunked 100 in [9, 9, 9, 9, 8, 8, 8, 8, 8, 8, 8, 8]
INFO:root:XX add new best (2, 8) is not 2 10 10
INFO:root:XX add new best (2, 8) is not 2 10 10
INFO:root:XX add new best (2, 8) is not 2 10 10
INFO:root:XX add new best (2, 8) is not 2 10 10
INFO:root:Trace: [(10, [(2, 8) is not 2])]
INFO:root:Trace Quality: [(10, 1)]
INFO:root:Trace Sorted: [(10, 1)]
INFO:root:Finished
INFO:root:Full Trace [(10, [(2, 8) is not 2])]
INFO:root:Trying {'minPrecheckMUS': True}
INFO:root:Starting Step 1
INFO:root:Current state [[[[2, 4, 9], [4, 6, 9], [1], [7], [5], [3], [8], [2, 4, 6, 9], [2, 6, 9]], [[2, 3, 4, 8, 9], [5], [2, 3, 4, 8, 9], [1, 2], [1, 4], [2, 4, 6], [2, 3, 6], [2, 4, 6, 9], [7]], [[7], [3, 4, 6], [2, 3, 4], [8], [9], [2, 4, 6], [1], [2, 4, 5, 6], [2, 3, 5, 6]], [[3, 4, 8, 9], [3, 4, 8, 9], [3, 4, 8, 9], [6], [2, 3], [1], [5], [7], [2, 8]], [[6], [2], [5], [4], [7], [8], [9], [3], [1]], [[3, 8], [1], [7], [9], [2, 3], [5], [4], [2, 6, 8], [2, 6, 8]], [[1, 2, 3, 5, 8, 9], [3, 8, 9], [2, 3, 8, 9], [1, 2, 5], [6], [7], [2, 3], [2, 5, 8, 9], [4]], [[2, 3, 4, 5, 8, 9], [7], [2, 3, 4, 8, 9], [2, 5], [4, 8], [2, 4], [2, 3, 6], [1], [2, 3, 5, 6, 8, 9]], [[1, 2, 4, 5, 8], [4, 8], [6], [3], [1, 4, 8], [9], [7], [2, 5, 8], [2, 5, 8]]]]
INFO:root:Doing checkSmall1
INFO:root:Getting tiny MUSes, distance 1, for 1 puzlits, 1 repeats
INFO:root:Chunked 1 in [1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
INFO:root:Doing checkSmall2
INFO:root:Getting tiny MUSes, distance 2, for 1 puzlits, 1 repeats
INFO:root:Chunked 1 in [1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
INFO:root:Considering 100 * 1 jobs for minsize=3
INFO:root:Chunked 100 in [9, 9, 9, 9, 8, 8, 8, 8, 8, 8, 8, 8]
INFO:root:Considering 100 * 1 jobs for minsize=4
INFO:root:Chunked 100 in [9, 9, 9, 9, 8, 8, 8, 8, 8, 8, 8, 8]
INFO:root:Considering 100 * 1 jobs for minsize=5
INFO:root:Chunked 100 in [9, 9, 9, 9, 8, 8, 8, 8, 8, 8, 8, 8]
INFO:root:Considering 100 * 1 jobs for minsize=6
INFO:root:Chunked 100 in [9, 9, 9, 9, 8, 8, 8, 8, 8, 8, 8, 8]
INFO:root:Considering 100 * 1 jobs for minsize=7
INFO:root:Chunked 100 in [9, 9, 9, 9, 8, 8, 8, 8, 8, 8, 8, 8]
INFO:root:Considering 100 * 1 jobs for minsize=8
INFO:root:Chunked 100 in [9, 9, 9, 9, 8, 8, 8, 8, 8, 8, 8, 8]
INFO:root:Considering 100 * 1 jobs for minsize=9
INFO:root:Chunked 100 in [9, 9, 9, 9, 8, 8, 8, 8, 8, 8, 8, 8]
INFO:root:XX found first (2, 8) is not 2 10
INFO:root:XX add new best (2, 8) is not 2 10 10
INFO:root:XX add new best (2, 8) is not 2 10 10
INFO:root:XX add new best (2, 8) is not 2 10 10
INFO:root:Considering 100 * 1 jobs for minsize=10
INFO:root:Chunked 100 in [9, 9, 9, 9, 8, 8, 8, 8, 8, 8, 8, 8]
INFO:root:XX add new best (2, 8) is not 2 10 10
INFO:root:XX add new best (2, 8) is not 2 10 10
INFO:root:XX add new best (2, 8) is not 2 10 10
INFO:root:XX add new best (2, 8) is not 2 10 10
INFO:root:XX add new best (2, 8) is not 2 10 10
INFO:root:Trace: [(10, [(2, 8) is not 2])]
INFO:root:Trace Quality: [(10, 1)]
INFO:root:Trace Sorted: [(10, 1)]
INFO:root:Finished
INFO:root:Full Trace [(10, [(2, 8) is not 2])]
INFO:root:Trying {'gallopingMUSes': True}
INFO:root:Starting Step 1
INFO:root:Current state [[[[2, 4, 9], [4, 6, 9], [1], [7], [5], [3], [8], [2, 4, 6, 9], [2, 6, 9]], [[2, 3, 4, 8, 9], [5], [2, 3, 4, 8, 9], [1, 2], [1, 4], [2, 4, 6], [2, 3, 6], [2, 4, 6, 9], [7]], [[7], [3, 4, 6], [2, 3, 4], [8], [9], [2, 4, 6], [1], [2, 4, 5, 6], [2, 3, 5, 6]], [[3, 4, 8, 9], [3, 4, 8, 9], [3, 4, 8, 9], [6], [2, 3], [1], [5], [7], [2, 8]], [[6], [2], [5], [4], [7], [8], [9], [3], [1]], [[3, 8], [1], [7], [9], [2, 3], [5], [4], [2, 6, 8], [2, 6, 8]], [[1, 2, 3, 5, 8, 9], [3, 8, 9], [2, 3, 8, 9], [1, 2, 5], [6], [7], [2, 3], [2, 5, 8, 9], [4]], [[2, 3, 4, 5, 8, 9], [7], [2, 3, 4, 8, 9], [2, 5], [4, 8], [2, 4], [2, 3, 6], [1], [2, 3, 5, 6, 8, 9]], [[1, 2, 4, 5, 8], [4, 8], [6], [3], [1, 4, 8], [9], [7], [2, 5, 8], [2, 5, 8]]]]
INFO:root:Doing checkSmall1
INFO:root:Getting tiny MUSes, distance 1, for 1 puzlits, 1 repeats
INFO:root:Chunked 1 in [1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
INFO:root:Doing checkSmall2
INFO:root:Getting tiny MUSes, distance 2, for 1 puzlits, 1 repeats
INFO:root:Chunked 1 in [1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
INFO:root:Considering 100 * 1 jobs for minsize=3
INFO:root:Chunked 100 in [9, 9, 9, 9, 8, 8, 8, 8, 8, 8, 8, 8]
INFO:root:Considering 100 * 1 jobs for minsize=4
INFO:root:Chunked 100 in [9, 9, 9, 9, 8, 8, 8, 8, 8, 8, 8, 8]
INFO:root:Considering 100 * 1 jobs for minsize=5
INFO:root:Chunked 100 in [9, 9, 9, 9, 8, 8, 8, 8, 8, 8, 8, 8]
INFO:root:Considering 100 * 1 jobs for minsize=6
INFO:root:Chunked 100 in [9, 9, 9, 9, 8, 8, 8, 8, 8, 8, 8, 8]
INFO:root:Considering 100 * 1 jobs for minsize=7
INFO:root:Chunked 100 in [9, 9, 9, 9, 8, 8, 8, 8, 8, 8, 8, 8]
INFO:root:Considering 100 * 1 jobs for minsize=8
INFO:root:Chunked 100 in [9, 9, 9, 9, 8, 8, 8, 8, 8, 8, 8, 8]
INFO:root:Considering 100 * 1 jobs for minsize=9
INFO:root:Chunked 100 in [9, 9, 9, 9, 8, 8, 8, 8, 8, 8, 8, 8]
INFO:root:XX found first (2, 8) is not 2 10
INFO:root:XX add new best (2, 8) is not 2 10 10
INFO:root:XX add new best (2, 8) is not 2 10 10
INFO:root:XX add new best (2, 8) is not 2 10 10
INFO:root:XX add new best (2, 8) is not 2 10 10
INFO:root:Considering 100 * 1 jobs for minsize=10
INFO:root:Chunked 100 in [9, 9, 9, 9, 8, 8, 8, 8, 8, 8, 8, 8]
INFO:root:XX add new best (2, 8) is not 2 10 10
INFO:root:XX add new best (2, 8) is not 2 10 10
INFO:root:XX add new best (2, 8) is not 2 10 10
INFO:root:XX add new best (2, 8) is not 2 10 10
INFO:root:XX add new best (2, 8) is not 2 10 10
INFO:root:Trace: [(10, [(2, 8) is not 2])]
INFO:root:Trace Quality: [(10, 1)]
INFO:root:Trace Sorted: [(10, 1)]
INFO:root:Finished
INFO:root:Full Trace [(10, [(2, 8) is not 2])]
INFO:root:Trying {'minPrecheckStepsMUS': True}
INFO:root:Starting Step 1
INFO:root:Current state [[[[2, 4, 9], [4, 6, 9], [1], [7], [5], [3], [8], [2, 4, 6, 9], [2, 6, 9]], [[2, 3, 4, 8, 9], [5], [2, 3, 4, 8, 9], [1, 2], [1, 4], [2, 4, 6], [2, 3, 6], [2, 4, 6, 9], [7]], [[7], [3, 4, 6], [2, 3, 4], [8], [9], [2, 4, 6], [1], [2, 4, 5, 6], [2, 3, 5, 6]], [[3, 4, 8, 9], [3, 4, 8, 9], [3, 4, 8, 9], [6], [2, 3], [1], [5], [7], [2, 8]], [[6], [2], [5], [4], [7], [8], [9], [3], [1]], [[3, 8], [1], [7], [9], [2, 3], [5], [4], [2, 6, 8], [2, 6, 8]], [[1, 2, 3, 5, 8, 9], [3, 8, 9], [2, 3, 8, 9], [1, 2, 5], [6], [7], [2, 3], [2, 5, 8, 9], [4]], [[2, 3, 4, 5, 8, 9], [7], [2, 3, 4, 8, 9], [2, 5], [4, 8], [2, 4], [2, 3, 6], [1], [2, 3, 5, 6, 8, 9]], [[1, 2, 4, 5, 8], [4, 8], [6], [3], [1, 4, 8], [9], [7], [2, 5, 8], [2, 5, 8]]]]
INFO:root:Doing checkSmall1
INFO:root:Getting tiny MUSes, distance 1, for 1 puzlits, 1 repeats
INFO:root:Chunked 1 in [1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
INFO:root:Doing checkSmall2
INFO:root:Getting tiny MUSes, distance 2, for 1 puzlits, 1 repeats
INFO:root:Chunked 1 in [1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
INFO:root:Considering 100 * 1 jobs for minsize=3
INFO:root:Chunked 100 in [9, 9, 9, 9, 8, 8, 8, 8, 8, 8, 8, 8]
INFO:root:Considering 100 * 1 jobs for minsize=4
INFO:root:Chunked 100 in [9, 9, 9, 9, 8, 8, 8, 8, 8, 8, 8, 8]
INFO:root:Considering 100 * 1 jobs for minsize=5
INFO:root:Chunked 100 in [9, 9, 9, 9, 8, 8, 8, 8, 8, 8, 8, 8]
INFO:root:Considering 100 * 1 jobs for minsize=6
INFO:root:Chunked 100 in [9, 9, 9, 9, 8, 8, 8, 8, 8, 8, 8, 8]
INFO:root:Considering 100 * 1 jobs for minsize=7
INFO:root:Chunked 100 in [9, 9, 9, 9, 8, 8, 8, 8, 8, 8, 8, 8]
INFO:root:Considering 100 * 1 jobs for minsize=8
INFO:root:Chunked 100 in [9, 9, 9, 9, 8, 8, 8, 8, 8, 8, 8, 8]
INFO:root:Considering 100 * 1 jobs for minsize=9
INFO:root:Chunked 100 in [9, 9, 9, 9, 8, 8, 8, 8, 8, 8, 8, 8]
INFO:root:XX found first (2, 8) is not 2 10
INFO:root:XX add new best (2, 8) is not 2 10 10
INFO:root:XX add new best (2, 8) is not 2 10 10
INFO:root:XX add new best (2, 8) is not 2 10 10
INFO:root:Considering 100 * 1 jobs for minsize=10
INFO:root:Chunked 100 in [9, 9, 9, 9, 8, 8, 8, 8, 8, 8, 8, 8]
INFO:root:XX add new best (2, 8) is not 2 10 10
INFO:root:XX add new best (2, 8) is not 2 10 10
INFO:root:XX add new best (2, 8) is not 2 10 10
INFO:root:XX add new best (2, 8) is not 2 10 10
INFO:root:XX add new best (2, 8) is not 2 10 10
INFO:root:XX add new best (2, 8) is not 2 10 10
INFO:root:Trace: [(10, [(2, 8) is not 2])]
INFO:root:Trace Quality: [(10, 1)]
INFO:root:Trace Sorted: [(10, 1)]
INFO:root:Finished
INFO:root:Full Trace [(10, [(2, 8) is not 2])]
INFO:root:Trying {'gallopingMUSes': True, 'minPrecheckMUS': True}
INFO:root:Starting Step 1
INFO:root:Current state [[[[2, 4, 9], [4, 6, 9], [1], [7], [5], [3], [8], [2, 4, 6, 9], [2, 6, 9]], [[2, 3, 4, 8, 9], [5], [2, 3, 4, 8, 9], [1, 2], [1, 4], [2, 4, 6], [2, 3, 6], [2, 4, 6, 9], [7]], [[7], [3, 4, 6], [2, 3, 4], [8], [9], [2, 4, 6], [1], [2, 4, 5, 6], [2, 3, 5, 6]], [[3, 4, 8, 9], [3, 4, 8, 9], [3, 4, 8, 9], [6], [2, 3], [1], [5], [7], [2, 8]], [[6], [2], [5], [4], [7], [8], [9], [3], [1]], [[3, 8], [1], [7], [9], [2, 3], [5], [4], [2, 6, 8], [2, 6, 8]], [[1, 2, 3, 5, 8, 9], [3, 8, 9], [2, 3, 8, 9], [1, 2, 5], [6], [7], [2, 3], [2, 5, 8, 9], [4]], [[2, 3, 4, 5, 8, 9], [7], [2, 3, 4, 8, 9], [2, 5], [4, 8], [2, 4], [2, 3, 6], [1], [2, 3, 5, 6, 8, 9]], [[1, 2, 4, 5, 8], [4, 8], [6], [3], [1, 4, 8], [9], [7], [2, 5, 8], [2, 5, 8]]]]
INFO:root:Doing checkSmall1
INFO:root:Getting tiny MUSes, distance 1, for 1 puzlits, 1 repeats
INFO:root:Chunked 1 in [1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
INFO:root:Doing checkSmall2
INFO:root:Getting tiny MUSes, distance 2, for 1 puzlits, 1 repeats
INFO:root:Chunked 1 in [1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
INFO:root:Considering 100 * 1 jobs for minsize=3
INFO:root:Chunked 100 in [9, 9, 9, 9, 8, 8, 8, 8, 8, 8, 8, 8]
INFO:root:Considering 100 * 1 jobs for minsize=4
INFO:root:Chunked 100 in [9, 9, 9, 9, 8, 8, 8, 8, 8, 8, 8, 8]
INFO:root:Considering 100 * 1 jobs for minsize=5
INFO:root:Chunked 100 in [9, 9, 9, 9, 8, 8, 8, 8, 8, 8, 8, 8]
INFO:root:Considering 100 * 1 jobs for minsize=6
INFO:root:Chunked 100 in [9, 9, 9, 9, 8, 8, 8, 8, 8, 8, 8, 8]
INFO:root:Considering 100 * 1 jobs for minsize=7
INFO:root:Chunked 100 in [9, 9, 9, 9, 8, 8, 8, 8, 8, 8, 8, 8]
INFO:root:Considering 100 * 1 jobs for minsize=8
INFO:root:Chunked 100 in [9, 9, 9, 9, 8, 8, 8, 8, 8, 8, 8, 8]
INFO:root:Considering 100 * 1 jobs for minsize=9
INFO:root:Chunked 100 in [9, 9, 9, 9, 8, 8, 8, 8, 8, 8, 8, 8]
INFO:root:XX found first (2, 8) is not 2 10
INFO:root:XX add new best (2, 8) is not 2 10 10
INFO:root:XX add new best (2, 8) is not 2 10 10
INFO:root:XX add new best (2, 8) is not 2 10 10
INFO:root:Considering 100 * 1 jobs for minsize=10
INFO:root:Chunked 100 in [9, 9, 9, 9, 8, 8, 8, 8, 8, 8, 8, 8]
INFO:root:XX add new best (2, 8) is not 2 10 10
INFO:root:XX add new best (2, 8) is not 2 10 10
INFO:root:XX add new best (2, 8) is not 2 10 10
INFO:root:XX add new best (2, 8) is not 2 10 10
INFO:root:XX add new best (2, 8) is not 2 10 10
INFO:root:Trace: [(10, [(2, 8) is not 2])]
INFO:root:Trace Quality: [(10, 1)]
INFO:root:Trace Sorted: [(10, 1)]
INFO:root:Finished
INFO:root:Full Trace [(10, [(2, 8) is not 2])]
INFO:root:Trying {}
INFO:root:Starting Step 1
INFO:root:Current state [[[[2, 3, 4, 5, 6, 8], [2, 3, 6, 8], [3, 6, 8], [4, 6, 7, 8, 9], [1, 7, 8], [4, 6, 8, 9], [1, 7, 8], [5, 8], [4, 5, 7, 8]], [[4, 5, 6, 8], [7], [6, 8], [4, 6, 8], [3], [1, 4, 6, 8], [9], [2], [1, 4, 5, 8]], [[4, 8], [1], [9], [4, 7, 8], [2], [5], [6], [3], [4, 7, 8]], [[3, 6, 8, 9], [3, 6, 8], [4], [5, 6, 7, 8], [5, 7, 8], [3, 6, 8], [2], [1], [3, 5, 7, 8, 9]], [[2, 3, 6, 8, 9], [2, 3, 6, 8], [1, 3, 6, 8], [2, 4, 5, 6, 8], [1, 5, 7, 8], [2, 3, 4, 6, 8], [7, 8], [5, 8], [3, 5, 7, 8, 9]], [[1, 2, 3, 8], [5], [7], [2, 8], [9], [1, 2, 3, 8], [4], [6], [3, 8]], [[6, 8], [9], [5], [1], [4], [2, 8], [3], [7], [2, 6]], [[7], [3, 6, 8], [1, 3, 6, 8], [2, 5, 8, 9], [5, 8], [2, 8, 9], [1, 8], [4], [2, 6]], [[1, 8], [4], [2], [3], [6], [7], [5], [9], [1, 8]]]]
INFO:root:Doing checkSmall1
INFO:root:Getting tiny MUSes, distance 1, for 1 puzlits, 1 repeats
INFO:root:Chunked 1 in [1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
INFO:root:Doing checkSmall2
INFO:root:Getting tiny MUSes, distance 2, for 1 puzlits, 1 repeats
INFO:root:Chunked 1 in [1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
INFO:root:Considering 100 * 1 jobs for minsize=3
INFO:root:Chunked 100 in [9, 9, 9, 9, 8, 8, 8, 8, 8, 8, 8, 8]
INFO:root:Considering 100 * 1 jobs for minsize=4
INFO:root:Chunked 100 in [9, 9, 9, 9, 8, 8, 8, 8, 8, 8, 8, 8]
INFO:root:Considering 100 * 1 jobs for minsize=5
INFO:root:Chunked 100 in [9, 9, 9, 9, 8, 8, 8, 8, 8, 8, 8, 8]
INFO:root:Considering 100 * 1 jobs for minsize=6
INFO:root:Chunked 100 in [9, 9, 9, 9, 8, 8, 8, 8, 8, 8, 8, 8]
INFO:root:Considering 100 * 1 jobs for minsize=7
INFO:root:Chunked 100 in [9, 9, 9, 9, 8, 8, 8, 8, 8, 8, 8, 8]
INFO:root:Considering 100 * 1 jobs for minsize=8
INFO:root:Chunked 100 in [9, 9, 9, 9, 8, 8, 8, 8, 8, 8, 8, 8]
INFO:root:Considering 100 * 1 jobs for minsize=9
INFO:root:Chunked 100 in [9, 9, 9, 9, 8, 8, 8, 8, 8, 8, 8, 8]
INFO:root:Considering 100 * 1 jobs for minsize=10
INFO:root:Chunked 100 in [9, 9, 9, 9, 8, 8, 8, 8, 8, 8, 8, 8]
INFO:root:Considering 100 * 1 jobs for minsize=11
INFO:root:Chunked 100 in [9, 9, 9, 9, 8, 8, 8, 8, 8, 8, 8, 8]
INFO:root:Considering 100 * 1 jobs for minsize=12
INFO:root:Chunked 100 in [9, 9, 9, 9, 8, 8, 8, 8, 8, 8, 8, 8]
INFO:root:Considering 100 * 1 jobs for minsize=13
INFO:root:Chunked 100 in [9, 9, 9, 9, 8, 8, 8, 8, 8, 8, 8, 8]
INFO:root:Considering 100 * 1 jobs for minsize=14
INFO:root:Chunked 100 in [9, 9, 9, 9, 8, 8, 8, 8, 8, 8, 8, 8]
INFO:root:Considering 100 * 1 jobs for minsize=15
INFO:root:Chunked 100 in [9, 9, 9, 9, 8, 8, 8, 8, 8, 8, 8, 8]
INFO:root:Considering 100 * 1 jobs for minsize=16
INFO:root:Chunked 100 in [9, 9, 9, 9, 8, 8, 8, 8, 8, 8, 8, 8]
INFO:root:Considering 100 * 1 jobs for minsize=17
INFO:root:Chunked 100 in [9, 9, 9, 9, 8, 8, 8, 8, 8, 8, 8, 8]
INFO:root:Considering 100 * 1 jobs for minsize=18
INFO:root:Chunked 100 in [9, 9, 9, 9, 8, 8, 8, 8, 8, 8, 8, 8]
INFO:root:Considering 100 * 1 jobs for minsize=19
INFO:root:Chunked 100 in [9, 9, 9, 9, 8, 8, 8, 8, 8, 8, 8, 8]
INFO:root:Considering 100 * 1 jobs for minsize=20
INFO:root:Chunked 100 in [9, 9, 9, 9, 8, 8, 8, 8, 8, 8, 8, 8]
INFO:root:Considering 100 * 1 jobs for minsize=21
INFO:root:Chunked 100 in [9, 9, 9, 9, 8, 8, 8, 8, 8, 8, 8, 8]
INFO:root:Considering 100 * 1 jobs for minsize=22
INFO:root:Chunked 100 in [9, 9, 9, 9, 8, 8, 8, 8, 8, 8, 8, 8]
INFO:root:Considering 100 * 1 jobs for minsize=23
INFO:root:Chunked 100 in [9, 9, 9, 9, 8, 8, 8, 8, 8, 8, 8, 8]
INFO:root:Considering 100 * 1 jobs for minsize=24
INFO:root:Chunked 100 in [9, 9, 9, 9, 8, 8, 8, 8, 8, 8, 8, 8]
INFO:root:XX found first (1, 1) is not 8 25
INFO:root:XX add new best (1, 1) is not 8 25 25
INFO:root:XX add new best (1, 1) is not 8 25 25
INFO:root:XX add new best (1, 1) is not 8 25 25
INFO:root:XX add new best (1, 1) is not 8 25 25
INFO:root:XX add new best (1, 1) is not 8 25 25
INFO:root:XX add new best (1, 1) is not 8 25 25
INFO:root:XX add new best (1, 1) is not 8 25 25
INFO:root:XX add new best (1, 1) is not 8 25 25
INFO:root:XX add new best (1, 1) is not 8 25 25
INFO:root:Considering 100 * 1 jobs for minsize=25
INFO:root:Chunked 100 in [9, 9, 9, 9, 8, 8, 8, 8, 8, 8, 8, 8]
INFO:root:XX add new best (1, 1) is not 8 25 25
INFO:root:XX add new best (1, 1) is not 8 25 25
INFO:root:XX add new best (1, 1) is not 8 25 25
INFO:root:XX add new best (1, 1) is not 8 25 25
INFO:root:XX add new best (1, 1) is not 8 25 25
INFO:root:XX add new best (1, 1) is not 8 25 25
INFO:root:XX add new best (1, 1) is not 8 25 25
INFO:root:XX add new best (1, 1) is not 8 25 25
INFO:root:XX add new best (1, 1) is not 8 25 25
INFO:root:XX add new best (1, 1) is not 8 25 25
INFO:root:Trace: [(25, [(1, 1) is not 8])]
INFO:root:Trace Quality: [(25, 1)]
INFO:root:Trace Sorted: [(25, 1)]
INFO:root:Finished
INFO:root:Full Trace [(25, [(1, 1) is not 8])]
INFO:root:Trying {'prechopMUSes': True}
INFO:root:Starting Step 1
INFO:root:Current state [[[[2, 3, 4, 5, 6, 8], [2, 3, 6, 8], [3, 6, 8], [4, 6, 7, 8, 9], [1, 7, 8], [4, 6, 8, 9], [1, 7, 8], [5, 8], [4, 5, 7, 8]], [[4, 5, 6, 8], [7], [6, 8], [4, 6, 8], [3], [1, 4, 6, 8], [9], [2], [1, 4, 5, 8]], [[4, 8], [1], [9], [4, 7, 8], [2], [5], [6], [3], [4, 7, 8]], [[3, 6, 8, 9], [3, 6, 8], [4], [5, 6, 7, 8], [5, 7, 8], [3, 6, 8], [2], [1], [3, 5, 7, 8, 9]], [[2, 3, 6, 8, 9], [2, 3, 6, 8], [1, 3, 6, 8], [2, 4, 5, 6, 8], [1, 5, 7, 8], [2, 3, 4, 6, 8], [7, 8], [5, 8], [3, 5, 7, 8, 9]], [[1, 2, 3, 8], [5], [7], [2, 8], [9], [1, 2, 3, 8], [4], [6], [3, 8]], [[6, 8], [9], [5], [1], [4], [2, 8], [3], [7], [2, 6]], [[7], [3, 6, 8], [1, 3, 6, 8], [2, 5, 8, 9], [5, 8], [2, 8, 9], [1, 8], [4], [2, 6]], [[1, 8], [4], [2], [3], [6], [7], [5], [9], [1, 8]]]]
INFO:root:Doing checkSmall1
INFO:root:Getting tiny MUSes, distance 1, for 1 puzlits, 1 repeats
INFO:root:Chunked 1 in [1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
INFO:root:Doing checkSmall2
INFO:root:Getting tiny MUSes, distance 2, for 1 puzlits, 1 repeats
INFO:root:Chunked 1 in [1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
INFO:root:Considering 100 * 1 jobs for minsize=3
INFO:root:Chunked 100 in [9, 9, 9, 9, 8, 8, 8, 8, 8, 8, 8, 8]
INFO:root:Considering 100 * 1 jobs for minsize=4
INFO:root:Chunked 100 in [9, 9, 9, 9, 8, 8, 8, 8, 8, 8, 8, 8]
INFO:root:Considering 100 * 1 jobs for minsize=5
INFO:root:Chunked 100 in [9, 9, 9, 9, 8, 8, 8, 8, 8, 8, 8, 8]
INFO:root:Considering 100 * 1 jobs for minsize=6
INFO:root:Chunked 100 in [9, 9, 9, 9, 8, 8, 8, 8, 8, 8, 8, 8]
INFO:root:Considering 100 * 1 jobs for minsize=7
INFO:root:Chunked 100 in [9, 9, 9, 9, 8, 8, 8, 8, 8, 8, 8, 8]
INFO:root:XX found first (1, 1) is not 8 8
INFO:root:XX add new best (1, 1) is not 8 8 8
INFO:root:XX add new best (1, 1) is not 8 8 8
INFO:root:XX add new best (1, 1) is not 8 8 8
INFO:root:XX add new best (1, 1) is not 8 8 8
INFO:root:XX add new best (1, 1) is not 8 8 8
INFO:root:XX add new best (1, 1) is not 8 8 8
INFO:root:XX add new best (1, 1) is not 8 8 8
INFO:root:Considering 100 * 1 jobs for minsize=8
INFO:root:Chunked 100 in [9, 9, 9, 9, 8, 8, 8, 8, 8, 8, 8, 8]
INFO:root:XX add new best (1, 1) is not 8 8 8
INFO:root:XX add new best (1, 1) is not 8 8 8
INFO:root:XX add new best (1, 1) is not 8 8 8
INFO:root:XX add new best (1, 1) is not 8 8 8
INFO:root:XX add new best (1, 1) is not 8 8 8
INFO:root:XX add new best (1, 1) is not 8 8 8
INFO:root:XX add new best (1, 1) is not 8 8 8
INFO:root:XX add new best (1, 1) is not 8 8 8
INFO:root:XX add new best (1, 1) is not 8 8 8
INFO:root:XX add new best (1, 1) is not 8 8 8
INFO:root:XX add new best (1, 1) is not 8 8 8
INFO:root:Trace: [(8, [(1, 1) is not 8])]
INFO:root:Trace Quality: [(8, 1)]
INFO:root:Trace Sorted: [(8, 1)]
INFO:root:Finished
INFO:root:Full Trace [(8, [(1, 1) is not 8])]
INFO:root:Trying {'quarterChopMUS': True}
INFO:root:Starting Step 1
INFO:root:Current state [[[[2, 3, 4, 5, 6, 8], [2, 3, 6, 8], [3, 6, 8], [4, 6, 7, 8, 9], [1, 7, 8], [4, 6, 8, 9], [1, 7, 8], [5, 8], [4, 5, 7, 8]], [[4, 5, 6, 8], [7], [6, 8], [4, 6, 8], [3], [1, 4, 6, 8], [9], [2], [1, 4, 5, 8]], [[4, 8], [1], [9], [4, 7, 8], [2], [5], [6], [3], [4, 7, 8]], [[3, 6, 8, 9], [3, 6, 8], [4], [5, 6, 7, 8], [5, 7, 8], [3, 6, 8], [2], [1], [3, 5, 7, 8, 9]], [[2, 3, 6, 8, 9], [2, 3, 6, 8], [1, 3, 6, 8], [2, 4, 5, 6, 8], [1, 5, 7, 8], [2, 3, 4, 6, 8], [7, 8], [5, 8], [3, 5, 7, 8, 9]], [[1, 2, 3, 8], [5], [7], [2, 8], [9], [1, 2, 3, 8], [4], [6], [3, 8]], [[6, 8], [9], [5], [1], [4], [2, 8], [3], [7], [2, 6]], [[7], [3, 6, 8], [1, 3, 6, 8], [2, 5, 8, 9], [5, 8], [2, 8, 9], [1, 8], [4], [2, 6]], [[1, 8], [4], [2], [3], [6], [7], [5], [9], [1, 8]]]]
INFO:root:Doing checkSmall1
INFO:root:Getting tiny MUSes, distance 1, for 1 puzlits, 1 repeats
INFO:root:Chunked 1 in [1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
INFO:root:Doing checkSmall2
INFO:root:Getting tiny MUSes, distance 2, for 1 puzlits, 1 repeats
INFO:root:Chunked 1 in [1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
INFO:root:Considering 100 * 1 jobs for minsize=3
INFO:root:Chunked 100 in [9, 9, 9, 9, 8, 8, 8, 8, 8, 8, 8, 8]
INFO:root:Considering 100 * 1 jobs for minsize=4
INFO:root:Chunked 100 in [9, 9, 9, 9, 8, 8, 8, 8, 8, 8, 8, 8]
INFO:root:Considering 100 * 1 jobs for minsize=5
INFO:root:Chunked 100 in [9, 9, 9, 9, 8, 8, 8, 8, 8, 8, 8, 8]
INFO:root:Considering 100 * 1 jobs for minsize=6
INFO:root:Chunked 100 in [9, 9, 9, 9, 8, 8, 8, 8, 8, 8, 8, 8]
INFO:root:Considering 100 * 1 jobs for minsize=7
INFO:root:Chunked 100 in [9, 9, 9, 9, 8, 8, 8, 8, 8, 8, 8, 8]
INFO:root:XX found first (1, 1) is not 8 8
INFO:root:XX add new best (1, 1) is not 8 8 8
INFO:root:XX add new best (1, 1) is not 8 8 8
INFO:root:XX add new best (1, 1) is not 8 8 8
INFO:root:XX add new best (1, 1) is not 8 8 8
INFO:root:XX add new best (1, 1) is not 8 8 8
INFO:root:XX add new best (1, 1) is not 8 8 8
INFO:root:XX add new best (1, 1) is not 8 8 8
INFO:root:XX add new best (1, 1) is not 8 8 8
INFO:root:Considering 100 * 1 jobs for minsize=8
INFO:root:Chunked 100 in [9, 9, 9, 9, 8, 8, 8, 8, 8, 8, 8, 8]
INFO:root:XX add new best (1, 1) is not 8 8 8
INFO:root:XX add new best (1, 1) is not 8 8 8
INFO:root:XX add new best (1, 1) is not 8 8 8
INFO:root:XX add new best (1, 1) is not 8 8 8
INFO:root:XX add new best (1, 1) is not 8 8 8
INFO:root:XX add new best (1, 1) is not 8 8 8
INFO:root:XX add new best (1, 1) is not 8 8 8
INFO:root:XX add new best (1, 1) is not 8 8 8
INFO:root:XX add new best (1, 1) is not 8 8 8
INFO:root:XX add new best (1, 1) is not 8 8 8
INFO:root:XX add new best (1, 1) is not 8 8 8
INFO:root:XX add new best (1, 1) is not 8 8 8
INFO:root:XX add new best (1, 1) is not 8 8 8
INFO:root:Trace: [(8, [(1, 1) is not 8])]
INFO:root:Trace Quality: [(8, 1)]
INFO:root:Trace Sorted: [(8, 1)]
INFO:root:Finished
INFO:root:Full Trace [(8, [(1, 1) is not 8])]
INFO:root:Trying {'minPrecheckMUS': True}
INFO:root:Starting Step 1
INFO:root:Current state [[[[2, 3, 4, 5, 6, 8], [2, 3, 6, 8], [3, 6, 8], [4, 6, 7, 8, 9], [1, 7, 8], [4, 6, 8, 9], [1, 7, 8], [5, 8], [4, 5, 7, 8]], [[4, 5, 6, 8], [7], [6, 8], [4, 6, 8], [3], [1, 4, 6, 8], [9], [2], [1, 4, 5, 8]], [[4, 8], [1], [9], [4, 7, 8], [2], [5], [6], [3], [4, 7, 8]], [[3, 6, 8, 9], [3, 6, 8], [4], [5, 6, 7, 8], [5, 7, 8], [3, 6, 8], [2], [1], [3, 5, 7, 8, 9]], [[2, 3, 6, 8, 9], [2, 3, 6, 8], [1, 3, 6, 8], [2, 4, 5, 6, 8], [1, 5, 7, 8], [2, 3, 4, 6, 8], [7, 8], [5, 8], [3, 5, 7, 8, 9]], [[1, 2, 3, 8], [5], [7], [2, 8], [9], [1, 2, 3, 8], [4], [6], [3, 8]], [[6, 8], [9], [5], [1], [4], [2, 8], [3], [7], [2, 6]], [[7], [3, 6, 8], [1, 3, 6, 8], [2, 5, 8, 9], [5, 8], [2, 8, 9], [1, 8], [4], [2, 6]], [[1, 8], [4], [2], [3], [6], [7], [5], [9], [1, 8]]]]
INFO:root:Doing checkSmall1
INFO:root:Getting tiny MUSes, distance 1, for 1 puzlits, 1 repeats
INFO:root:Chunked 1 in [1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
INFO:root:Doing checkSmall2
INFO:root:Getting tiny MUSes, distance 2, for 1 puzlits, 1 repeats
INFO:root:Chunked 1 in [1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
INFO:root:Considering 100 * 1 jobs for minsize=3
INFO:root:Chunked 100 in [9, 9, 9, 9, 8, 8, 8, 8, 8, 8, 8, 8]
INFO:root:Considering 100 * 1 jobs for minsize=4
INFO:root:Chunked 100 in [9, 9, 9, 9, 8, 8, 8, 8, 8, 8, 8, 8]
INFO:root:Considering 100 * 1 jobs for minsize=5
INFO:root:Chunked 100 in [9, 9, 9, 9, 8, 8, 8, 8, 8, 8, 8, 8]
INFO:root:Considering 100 * 1 jobs for minsize=6
INFO:root:Chunked 100 in [9, 9, 9, 9, 8, 8, 8, 8, 8, 8, 8, 8]
INFO:root:Considering 100 * 1 jobs for minsize=7
INFO:root:Chunked 100 in [9, 9, 9, 9, 8, 8, 8, 8, 8, 8, 8, 8]
INFO:root:XX found first (1, 1) is not 8 8
INFO:root:XX add new best (1, 1) is not 8 8 8
INFO:root:XX add new best (1, 1) is not 8 8 8
INFO:root:XX add new best (1, 1) is not 8 8 8
INFO:root:XX add new best (1, 1) is not 8 8 8
INFO:root:XX add new best (1, 1) is not 8 8 8
INFO:root:XX add new best (1, 1) is not 8 8 8
INFO:root:Considering 100 * 1 jobs for minsize=8
INFO:root:Chunked 100 in [9, 9, 9, 9, 8, 8, 8, 8, 8, 8, 8, 8]
INFO:root:XX add new best (1, 1) is not 8 8 8
INFO:root:XX add new best (1, 1) is not 8 8 8
INFO:root:XX add new best (1, 1) is not 8 8 8
INFO:root:XX add new best (1, 1) is not 8 8 8
INFO:root:XX add new best (1, 1) is not 8 8 8
INFO:root:XX add new best (1, 1) is not 8 8 8
INFO:root:Trace: [(8, [(1, 1) is not 8])]
INFO:root:Trace Quality: [(8, 1)]
INFO:root:Trace Sorted: [(8, 1)]
INFO:root:Finished
INFO:root:Full Trace [(8, [(1, 1) is not 8])]
INFO:root:Trying {'gallopingMUSes': True}
INFO:root:Starting Step 1
INFO:root:Current state [[[[2, 3, 4, 5, 6, 8], [2, 3, 6, 8], [3, 6, 8], [4, 6, 7, 8, 9], [1, 7, 8], [4, 6, 8, 9], [1, 7, 8], [5, 8], [4, 5, 7, 8]], [[4, 5, 6, 8], [7], [6, 8], [4, 6, 8], [3], [1, 4, 6, 8], [9], [2], [1, 4, 5, 8]], [[4, 8], [1], [9], [4, 7, 8], [2], [5], [6], [3], [4, 7, 8]], [[3, 6, 8, 9], [3, 6, 8], [4], [5, 6, 7, 8], [5, 7, 8], [3, 6, 8], [2], [1], [3, 5, 7, 8, 9]], [[2, 3, 6, 8, 9], [2, 3, 6, 8], [1, 3, 6, 8], [2, 4, 5, 6, 8], [1, 5, 7, 8], [2, 3, 4, 6, 8], [7, 8], [5, 8], [3, 5, 7, 8, 9]], [[1, 2, 3, 8], [5], [7], [2, 8], [9], [1, 2, 3, 8], [4], [6], [3, 8]], [[6, 8], [9], [5], [1], [4], [2, 8], [3], [7], [2, 6]], [[7], [3, 6, 8], [1, 3, 6, 8], [2, 5, 8, 9], [5, 8], [2, 8, 9], [1, 8], [4], [2, 6]], [[1, 8], [4], [2], [3], [6], [7], [5], [9], [1, 8]]]]
INFO:root:Doing checkSmall1
INFO:root:Getting tiny MUSes, distance 1, for 1 puzlits, 1 repeats
INFO:root:Chunked 1 in [1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
INFO:root:Doing checkSmall2
INFO:root:Getting tiny MUSes, distance 2, for 1 puzlits, 1 repeats
INFO:root:Chunked 1 in [1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
INFO:root:Considering 100 * 1 jobs for minsize=3
INFO:root:Chunked 100 in [9, 9, 9, 9, 8, 8, 8, 8, 8, 8, 8, 8]
INFO:root:Considering 100 * 1 jobs for minsize=4
INFO:root:Chunked 100 in [9, 9, 9, 9, 8, 8, 8, 8, 8, 8, 8, 8]
INFO:root:Considering 100 * 1 jobs for minsize=5
INFO:root:Chunked 100 in [9, 9, 9, 9, 8, 8, 8, 8, 8, 8, 8, 8]
INFO:root:Considering 100 * 1 jobs for minsize=6
INFO:root:Chunked 100 in [9, 9, 9, 9, 8, 8, 8, 8, 8, 8, 8, 8]
INFO:root:Considering 100 * 1 jobs for minsize=7
INFO:root:Chunked 100 in [9, 9, 9, 9, 8, 8, 8, 8, 8, 8, 8, 8]
INFO:root:XX found first (1, 1) is not 8 8
INFO:root:XX add new best (1, 1) is not 8 8 8
INFO:root:XX add new best (1, 1) is not 8 8 8
INFO:root:XX add new best (1, 1) is not 8 8 8
INFO:root:XX add new best (1, 1) is not 8 8 8
INFO:root:Considering 100 * 1 jobs for minsize=8
INFO:root:Chunked 100 in [9, 9, 9, 9, 8, 8, 8, 8, 8, 8, 8, 8]
INFO:root:XX add new best (1, 1) is not 8 8 8
INFO:root:XX add new best (1, 1) is not 8 8 8
INFO:root:XX add new best (1, 1) is not 8 8 8
INFO:root:XX add new best (1, 1) is not 8 8 8
INFO:root:Trace: [(8, [(1, 1) is not 8])]
INFO:root:Trace Quality: [(8, 1)]
INFO:root:Trace Sorted: [(8, 1)]
INFO:root:Finished
INFO:root:Full Trace [(8, [(1, 1) is not 8])]
INFO:root:Trying {'minPrecheckStepsMUS': True}
INFO:root:Starting Step 1
INFO:root:Current state [[[[2, 3, 4, 5, 6, 8], [2, 3, 6, 8], [3, 6, 8], [4, 6, 7, 8, 9], [1, 7, 8], [4, 6, 8, 9], [1, 7, 8], [5, 8], [4, 5, 7, 8]], [[4, 5, 6, 8], [7], [6, 8], [4, 6, 8], [3], [1, 4, 6, 8], [9], [2], [1, 4, 5, 8]], [[4, 8], [1], [9], [4, 7, 8], [2], [5], [6], [3], [4, 7, 8]], [[3, 6, 8, 9], [3, 6, 8], [4], [5, 6, 7, 8], [5, 7, 8], [3, 6, 8], [2], [1], [3, 5, 7, 8, 9]], [[2, 3, 6, 8, 9], [2, 3, 6, 8], [1, 3, 6, 8], [2, 4, 5, 6, 8], [1, 5, 7, 8], [2, 3, 4, 6, 8], [7, 8], [5, 8], [3, 5, 7, 8, 9]], [[1, 2, 3, 8], [5], [7], [2, 8], [9], [1, 2, 3, 8], [4], [6], [3, 8]], [[6, 8], [9], [5], [1], [4], [2, 8], [3], [7], [2, 6]], [[7], [3, 6, 8], [1, 3, 6, 8], [2, 5, 8, 9], [5, 8], [2, 8, 9], [1, 8], [4], [2, 6]], [[1, 8], [4], [2], [3], [6], [7], [5], [9], [1, 8]]]]
INFO:root:Doing checkSmall1
INFO:root:Getting tiny MUSes, distance 1, for 1 puzlits, 1 repeats
INFO:root:Chunked 1 in [1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
INFO:root:Doing checkSmall2
INFO:root:Getting tiny MUSes, distance 2, for 1 puzlits, 1 repeats
INFO:root:Chunked 1 in [1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
INFO:root:Considering 100 * 1 jobs for minsize=3
INFO:root:Chunked 100 in [9, 9, 9, 9, 8, 8, 8, 8, 8, 8, 8, 8]
INFO:root:Considering 100 * 1 jobs for minsize=4
INFO:root:Chunked 100 in [9, 9, 9, 9, 8, 8, 8, 8, 8, 8, 8, 8]
INFO:root:Considering 100 * 1 jobs for minsize=5
INFO:root:Chunked 100 in [9, 9, 9, 9, 8, 8, 8, 8, 8, 8, 8, 8]
INFO:root:Considering 100 * 1 jobs for minsize=6
INFO:root:Chunked 100 in [9, 9, 9, 9, 8, 8, 8, 8, 8, 8, 8, 8]
INFO:root:Considering 100 * 1 jobs for minsize=7
INFO:root:Chunked 100 in [9, 9, 9, 9, 8, 8, 8, 8, 8, 8, 8, 8]
INFO:root:XX found first (1, 1) is not 8 8
INFO:root:XX add new best (1, 1) is not 8 8 8
INFO:root:XX add new best (1, 1) is not 8 8 8
INFO:root:XX add new best (1, 1) is not 8 8 8
INFO:root:XX add new best (1, 1) is not 8 8 8
INFO:root:XX add new best (1, 1) is not 8 8 8
INFO:root:XX add new best (1, 1) is not 8 8 8
INFO:root:Considering 100 * 1 jobs for minsize=8
INFO:root:Chunked 100 in [9, 9, 9, 9, 8, 8, 8, 8, 8, 8, 8, 8]
INFO:root:XX add new best (1, 1) is not 8 8 8
INFO:root:XX add new best (1, 1) is not 8 8 8
INFO:root:XX add new best (1, 1) is not 8 8 8
INFO:root:XX add new best (1, 1) is not 8 8 8
INFO:root:XX add new best (1, 1) is not 8 8 8
INFO:root:XX add new best (1, 1) is not 8 8 8
INFO:root:Trace: [(8, [(1, 1) is not 8])]
INFO:root:Trace Quality: [(8, 1)]
INFO:root:Trace Sorted: [(8, 1)]
INFO:root:Finished
INFO:root:Full Trace [(8, [(1, 1) is not 8])]
INFO:root:Trying {'gallopingMUSes': True, 'minPrecheckMUS': True}
INFO:root:Starting Step 1
INFO:root:Current state [[[[2, 3, 4, 5, 6, 8], [2, 3, 6, 8], [3, 6, 8], [4, 6, 7, 8, 9], [1, 7, 8], [4, 6, 8, 9], [1, 7, 8], [5, 8], [4, 5, 7, 8]], [[4, 5, 6, 8], [7], [6, 8], [4, 6, 8], [3], [1, 4, 6, 8], [9], [2], [1, 4, 5, 8]], [[4, 8], [1], [9], [4, 7, 8], [2], [5], [6], [3], [4, 7, 8]], [[3, 6, 8, 9], [3, 6, 8], [4], [5, 6, 7, 8], [5, 7, 8], [3, 6, 8], [2], [1], [3, 5, 7, 8, 9]], [[2, 3, 6, 8, 9], [2, 3, 6, 8], [1, 3, 6, 8], [2, 4, 5, 6, 8], [1, 5, 7, 8], [2, 3, 4, 6, 8], [7, 8], [5, 8], [3, 5, 7, 8, 9]], [[1, 2, 3, 8], [5], [7], [2, 8], [9], [1, 2, 3, 8], [4], [6], [3, 8]], [[6, 8], [9], [5], [1], [4], [2, 8], [3], [7], [2, 6]], [[7], [3, 6, 8], [1, 3, 6, 8], [2, 5, 8, 9], [5, 8], [2, 8, 9], [1, 8], [4], [2, 6]], [[1, 8], [4], [2], [3], [6], [7], [5], [9], [1, 8]]]]
INFO:root:Doing checkSmall1
INFO:root:Getting tiny MUSes, distance 1, for 1 puzlits, 1 repeats
INFO:root:Chunked 1 in [1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
INFO:root:Doing checkSmall2
INFO:root:Getting tiny MUSes, distance 2, for 1 puzlits, 1 repeats
INFO:root:Chunked 1 in [1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
INFO:root:Considering 100 * 1 jobs for minsize=3
INFO:root:Chunked 100 in [9, 9, 9, 9, 8, 8, 8, 8, 8, 8, 8, 8]
INFO:root:Considering 100 * 1 jobs for minsize=4
INFO:root:Chunked 100 in [9, 9, 9, 9, 8, 8, 8, 8, 8, 8, 8, 8]
INFO:root:Considering 100 * 1 jobs for minsize=5
INFO:root:Chunked 100 in [9, 9, 9, 9, 8, 8, 8, 8, 8, 8, 8, 8]
INFO:root:Considering 100 * 1 jobs for minsize=6
INFO:root:Chunked 100 in [9, 9, 9, 9, 8, 8, 8, 8, 8, 8, 8, 8]
INFO:root:Considering 100 * 1 jobs for minsize=7
INFO:root:Chunked 100 in [9, 9, 9, 9, 8, 8, 8, 8, 8, 8, 8, 8]
INFO:root:XX found first (1, 1) is not 8 8
INFO:root:XX add new best (1, 1) is not 8 8 8
INFO:root:XX add new best (1, 1) is not 8 8 8
INFO:root:XX add new best (1, 1) is not 8 8 8
INFO:root:XX add new best (1, 1) is not 8 8 8
INFO:root:XX add new best (1, 1) is not 8 8 8
INFO:root:XX add new best (1, 1) is not 8 8 8
INFO:root:Considering 100 * 1 jobs for minsize=8
INFO:root:Chunked 100 in [9, 9, 9, 9, 8, 8, 8, 8, 8, 8, 8, 8]
INFO:root:XX add new best (1, 1) is not 8 8 8
INFO:root:XX add new best (1, 1) is not 8 8 8
INFO:root:XX add new best (1, 1) is not 8 8 8
INFO:root:XX add new best (1, 1) is not 8 8 8
INFO:root:XX add new best (1, 1) is not 8 8 8
INFO:root:XX add new best (1, 1) is not 8 8 8
INFO:root:Trace: [(8, [(1, 1) is not 8])]
INFO:root:Trace Quality: [(8, 1)]
INFO:root:Trace Sorted: [(8, 1)]
INFO:root:Finished
INFO:root:Full Trace [(8, [(1, 1) is not 8])]
INFO:root:Trying {}
INFO:root:Starting Step 1
INFO:root:Current state [[[[1, 2, 3], [5], [1, 2, 3], [7], [4], [9], [1, 2, 6], [8], [1, 2, 6]], [[1, 2, 4], [8], [9], [5, 6], [2, 5, 6], [3], [4, 7], [2, 5, 7], [1, 2, 4, 5]], [[6], [2, 7], [2, 4, 7], [5, 8], [2, 5, 8], [1], [3], [9], [2, 4, 5]], [[2, 3, 8, 9], [4], [2, 3, 5, 8], [1, 3, 5, 8, 9], [3, 5, 8, 9], [7], [1, 2, 5], [6], [1, 2, 3, 5]], [[1, 2, 3, 7], [2, 3, 7], [1, 2, 3, 5, 6, 7], [4], [3, 5, 6], [2, 6], [8], [2, 5, 7], [9]], [[2, 3, 7, 8, 9], [2, 3, 7, 9], [2, 3, 5, 6, 7, 8], [1, 3, 5, 6, 8, 9], [3, 5, 6, 8, 9], [2, 6, 8], [4, 7], [2, 5, 7], [1, 2, 3, 4, 5]], [[2, 7, 8, 9], [6], [2, 7, 8], [3, 8, 9], [3, 7, 8, 9], [4], [2, 5, 9], [1], [2, 5, 8]], [[5], [3, 9], [3, 8], [2], [1], [6, 8], [6, 9], [4], [7]], [[2, 4, 7, 8, 9], [1], [2, 4, 7, 8], [6, 8, 9], [6, 7, 8, 9], [5], [2, 6, 9], [3], [2, 6, 8]]]]
INFO:root:Doing checkSmall1
INFO:root:Getting tiny MUSes, distance 1, for 1 puzlits, 1 repeats
INFO:root:Chunked 1 in [1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
INFO:root:Doing checkSmall2
INFO:root:Getting tiny MUSes, distance 2, for 1 puzlits, 1 repeats
INFO:root:Chunked 1 in [1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
INFO:root:Considering 100 * 1 jobs for minsize=3
INFO:root:Chunked 100 in [9, 9, 9, 9, 8, 8, 8, 8, 8, 8, 8, 8]
INFO:root:Considering 100 * 1 jobs for minsize=4
INFO:root:Chunked 100 in [9, 9, 9, 9, 8, 8, 8, 8, 8, 8, 8, 8]
INFO:root:Considering 100 * 1 jobs for minsize=5
INFO:root:Chunked 100 in [9, 9, 9, 9, 8, 8, 8, 8, 8, 8, 8, 8]
INFO:root:Considering 100 * 1 jobs for minsize=6
INFO:root:Chunked 100 in [9, 9, 9, 9, 8, 8, 8, 8, 8, 8, 8, 8]
INFO:root:Considering 100 * 1 jobs for minsize=7
INFO:root:Chunked 100 in [9, 9, 9, 9, 8, 8, 8, 8, 8, 8, 8, 8]
INFO:root:Considering 100 * 1 jobs for minsize=8
INFO:root:Chunked 100 in [9, 9, 9, 9, 8, 8, 8, 8, 8, 8, 8, 8]
INFO:root:Considering 100 * 1 jobs for minsize=9
INFO:root:Chunked 100 in [9, 9, 9, 9, 8, 8, 8, 8, 8, 8, 8, 8]
INFO:root:Considering 100 * 1 jobs for minsize=10
INFO:root:Chunked 100 in [9, 9, 9, 9, 8, 8, 8, 8, 8, 8, 8, 8]
INFO:root:Considering 100 * 1 jobs for minsize=11
INFO:root:Chunked 100 in [9, 9, 9, 9, 8, 8, 8, 8, 8, 8, 8, 8]
INFO:root:Considering 100 * 1 jobs for minsize=12
INFO:root:Chunked 100 in [9, 9, 9, 9, 8, 8, 8, 8, 8, 8, 8, 8]
INFO:root:XX found first (2, 1) is not 2 13
INFO:root:XX add new best (2, 1) is not 2 13 13
INFO:root:XX add new best (2, 1) is not 2 13 13
INFO:root:XX add new best (2, 1) is not 2 13 13
INFO:root:XX add new best (2, 1) is not 2 13 13
INFO:root:XX add new best (2, 1) is not 2 13 13
INFO:root:XX add new best (2, 1) is not 2 13 13
INFO:root:XX add new best (2, 1) is not 2 13 13
INFO:root:XX add new best (2, 1) is not 2 13 13
INFO:root:XX add new best (2, 1) is not 2 13 13
INFO:root:XX add new best (2, 1) is not 2 13 13
INFO:root:XX add new best (2, 1) is not 2 13 13
INFO:root:Considering 100 * 1 jobs for minsize=13
INFO:root:Chunked 100 in [9, 9, 9, 9, 8, 8, 8, 8, 8, 8, 8, 8]
INFO:root:XX add new best (2, 1) is not 2 13 13
INFO:root:XX add new best (2, 1) is not 2 13 13
INFO:root:XX add new best (2, 1) is not 2 13 13
INFO:root:XX add new best (2, 1) is not 2 13 13
INFO:root:XX add new best (2, 1) is not 2 13 13
INFO:root:XX add new best (2, 1) is not 2 13 13
INFO:root:XX add new best (2, 1) is not 2 13 13
INFO:root:XX add new best (2, 1) is not 2 13 13
INFO:root:XX add new best (2, 1) is not 2 13 13
INFO:root:XX add new best (2, 1) is not 2 13 13
INFO:root:XX add new best (2, 1) is not 2 13 13
INFO:root:XX add new best (2, 1) is not 2 13 13
INFO:root:XX add new best (2, 1) is not 2 13 13
INFO:root:XX add new best (2, 1) is not 2 13 13
INFO:root:Trace: [(13, [(2, 1) is not 2])]
INFO:root:Trace Quality: [(13, 1)]
INFO:root:Trace Sorted: [(13, 1)]
INFO:root:Finished
INFO:root:Full Trace [(13, [(2, 1) is not 2])]
INFO:root:Trying {'prechopMUSes': True}
INFO:root:Starting Step 1
INFO:root:Current state [[[[1, 2, 3], [5], [1, 2, 3], [7], [4], [9], [1, 2, 6], [8], [1, 2, 6]], [[1, 2, 4], [8], [9], [5, 6], [2, 5, 6], [3], [4, 7], [2, 5, 7], [1, 2, 4, 5]], [[6], [2, 7], [2, 4, 7], [5, 8], [2, 5, 8], [1], [3], [9], [2, 4, 5]], [[2, 3, 8, 9], [4], [2, 3, 5, 8], [1, 3, 5, 8, 9], [3, 5, 8, 9], [7], [1, 2, 5], [6], [1, 2, 3, 5]], [[1, 2, 3, 7], [2, 3, 7], [1, 2, 3, 5, 6, 7], [4], [3, 5, 6], [2, 6], [8], [2, 5, 7], [9]], [[2, 3, 7, 8, 9], [2, 3, 7, 9], [2, 3, 5, 6, 7, 8], [1, 3, 5, 6, 8, 9], [3, 5, 6, 8, 9], [2, 6, 8], [4, 7], [2, 5, 7], [1, 2, 3, 4, 5]], [[2, 7, 8, 9], [6], [2, 7, 8], [3, 8, 9], [3, 7, 8, 9], [4], [2, 5, 9], [1], [2, 5, 8]], [[5], [3, 9], [3, 8], [2], [1], [6, 8], [6, 9], [4], [7]], [[2, 4, 7, 8, 9], [1], [2, 4, 7, 8], [6, 8, 9], [6, 7, 8, 9], [5], [2, 6, 9], [3], [2, 6, 8]]]]
INFO:root:Doing checkSmall1
INFO:root:Getting tiny MUSes, distance 1, for 1 puzlits, 1 repeats
INFO:root:Chunked 1 in [1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
INFO:root:Doing checkSmall2
INFO:root:Getting tiny MUSes, distance 2, for 1 puzlits, 1 repeats
INFO:root:Chunked 1 in [1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
INFO:root:Considering 100 * 1 jobs for minsize=3
INFO:root:Chunked 100 in [9, 9, 9, 9, 8, 8, 8, 8, 8, 8, 8, 8]
INFO:root:Considering 100 * 1 jobs for minsize=4
INFO:root:Chunked 100 in [9, 9, 9, 9, 8, 8, 8, 8, 8, 8, 8, 8]
INFO:root:Considering 100 * 1 jobs for minsize=5
INFO:root:Chunked 100 in [9, 9, 9, 9, 8, 8, 8, 8, 8, 8, 8, 8]
INFO:root:Considering 100 * 1 jobs for minsize=6
INFO:root:Chunked 100 in [9, 9, 9, 9, 8, 8, 8, 8, 8, 8, 8, 8]
INFO:root:Considering 100 * 1 jobs for minsize=7
INFO:root:Chunked 100 in [9, 9, 9, 9, 8, 8, 8, 8, 8, 8, 8, 8]
INFO:root:Considering 100 * 1 jobs for minsize=8
INFO:root:Chunked 100 in [9, 9, 9, 9, 8, 8, 8, 8, 8, 8, 8, 8]
INFO:root:Considering 100 * 1 jobs for minsize=9
INFO:root:Chunked 100 in [9, 9, 9, 9, 8, 8, 8, 8, 8, 8, 8, 8]
INFO:root:Considering 100 * 1 jobs for minsize=10
INFO:root:Chunked 100 in [9, 9, 9, 9, 8, 8, 8, 8, 8, 8, 8, 8]
INFO:root:XX found first (2, 1) is not 2 11
INFO:root:XX add new best (2, 1) is not 2 11 11
INFO:root:XX add new best (2, 1) is not 2 11 11
INFO:root:XX add new best (2, 1) is not 2 11 11
INFO:root:XX add new best (2, 1) is not 2 11 11
INFO:root:XX add new best (2, 1) is not 2 11 11
INFO:root:XX add new best (2, 1) is not 2 11 11
INFO:root:XX add new best (2, 1) is not 2 11 11
INFO:root:XX add new best (2, 1) is not 2 11 11
INFO:root:XX add new best (2, 1) is not 2 11 11
INFO:root:XX add new best (2, 1) is not 2 11 11
INFO:root:Considering 100 * 1 jobs for minsize=11
INFO:root:Chunked 100 in [9, 9, 9, 9, 8, 8, 8, 8, 8, 8, 8, 8]
INFO:root:XX add new best (2, 1) is not 2 11 11
INFO:root:XX add new best (2, 1) is not 2 11 11
INFO:root:XX add new best (2, 1) is not 2 11 11
INFO:root:XX add new best (2, 1) is not 2 11 11
INFO:root:XX add new best (2, 1) is not 2 11 11
INFO:root:XX add new best (2, 1) is not 2 11 11
INFO:root:XX add new best (2, 1) is not 2 11 11
INFO:root:XX add new best (2, 1) is not 2 11 11
INFO:root:Trace: [(11, [(2, 1) is not 2])]
INFO:root:Trace Quality: [(11, 1)]
INFO:root:Trace Sorted: [(11, 1)]
INFO:root:Finished
INFO:root:Full Trace [(11, [(2, 1) is not 2])]
INFO:root:Trying {'quarterChopMUS': True}
INFO:root:Starting Step 1
INFO:root:Current state [[[[1, 2, 3], [5], [1, 2, 3], [7], [4], [9], [1, 2, 6], [8], [1, 2, 6]], [[1, 2, 4], [8], [9], [5, 6], [2, 5, 6], [3], [4, 7], [2, 5, 7], [1, 2, 4, 5]], [[6], [2, 7], [2, 4, 7], [5, 8], [2, 5, 8], [1], [3], [9], [2, 4, 5]], [[2, 3, 8, 9], [4], [2, 3, 5, 8], [1, 3, 5, 8, 9], [3, 5, 8, 9], [7], [1, 2, 5], [6], [1, 2, 3, 5]], [[1, 2, 3, 7], [2, 3, 7], [1, 2, 3, 5, 6, 7], [4], [3, 5, 6], [2, 6], [8], [2, 5, 7], [9]], [[2, 3, 7, 8, 9], [2, 3, 7, 9], [2, 3, 5, 6, 7, 8], [1, 3, 5, 6, 8, 9], [3, 5, 6, 8, 9], [2, 6, 8], [4, 7], [2, 5, 7], [1, 2, 3, 4, 5]], [[2, 7, 8, 9], [6], [2, 7, 8], [3, 8, 9], [3, 7, 8, 9], [4], [2, 5, 9], [1], [2, 5, 8]], [[5], [3, 9], [3, 8], [2], [1], [6, 8], [6, 9], [4], [7]], [[2, 4, 7, 8, 9], [1], [2, 4, 7, 8], [6, 8, 9], [6, 7, 8, 9], [5], [2, 6, 9], [3], [2, 6, 8]]]]
INFO:root:Doing checkSmall1
INFO:root:Getting tiny MUSes, distance 1, for 1 puzlits, 1 repeats
INFO:root:Chunked 1 in [1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
INFO:root:Doing checkSmall2
INFO:root:Getting tiny MUSes, distance 2, for 1 puzlits, 1 repeats
INFO:root:Chunked 1 in [1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
INFO:root:Considering 100 * 1 jobs for minsize=3
INFO:root:Chunked 100 in [9, 9, 9, 9, 8, 8, 8, 8, 8, 8, 8, 8]
INFO:root:Considering 100 * 1 jobs for minsize=4
INFO:root:Chunked 100 in [9, 9, 9, 9, 8, 8, 8, 8, 8, 8, 8, 8]
INFO:root:Considering 100 * 1 jobs for minsize=5
INFO:root:Chunked 100 in [9, 9, 9, 9, 8, 8, 8, 8, 8, 8, 8, 8]
INFO:root:Considering 100 * 1 jobs for minsize=6
INFO:root:Chunked 100 in [9, 9, 9, 9, 8, 8, 8, 8, 8, 8, 8, 8]
INFO:root:Considering 100 * 1 jobs for minsize=7
INFO:root:Chunked 100 in [9, 9, 9, 9, 8, 8, 8, 8, 8, 8, 8, 8]
INFO:root:Considering 100 * 1 jobs for minsize=8
INFO:root:Chunked 100 in [9, 9, 9, 9, 8, 8, 8, 8, 8, 8, 8, 8]
INFO:root:Considering 100 * 1 jobs for minsize=9
INFO:root:Chunked 100 in [9, 9, 9, 9, 8, 8, 8, 8, 8, 8, 8, 8]
INFO:root:Considering 100 * 1 jobs for minsize=10
INFO:root:Chunked 100 in [9, 9, 9, 9, 8, 8, 8, 8, 8, 8, 8, 8]
INFO:root:XX found first (2, 1) is not 2 11
INFO:root:XX add new best (2, 1) is not 2 11 11
INFO:root:XX add new best (2, 1) is not 2 11 11
INFO:root:XX add new best (2, 1) is not 2 11 11
INFO:root:XX add new best (2, 1) is not 2 11 11
INFO:root:XX add new best (2, 1) is not 2 11 11
INFO:root:XX add new best (2, 1) is not 2 11 11
INFO:root:XX add new best (2, 1) is not 2 11 11
INFO:root:XX add new best (2, 1) is not 2 11 11
INFO:root:XX add new best (2, 1) is not 2 11 11
INFO:root:XX add new best (2, 1) is not 2 11 11
INFO:root:XX add new best (2, 1) is not 2 11 11
INFO:root:XX add new best (2, 1) is not 2 11 11
INFO:root:XX add new best (2, 1) is not 2 11 11
INFO:root:XX add new best (2, 1) is not 2 11 11
INFO:root:XX add new best (2, 1) is not 2 11 11
INFO:root:XX add new best (2, 1) is not 2 11 11
INFO:root:XX add new best (2, 1) is not 2 11 11
INFO:root:XX add new best (2, 1) is not 2 11 11
INFO:root:XX add new best (2, 1) is not 2 11 11
INFO:root:XX add new best (2, 1) is not 2 11 11
INFO:root:XX add new best (2, 1) is not 2 11 11
INFO:root:XX add new best (2, 1) is not 2 11 11
INFO:root:Considering 100 * 1 jobs for minsize=11
INFO:root:Chunked 100 in [9, 9, 9, 9, 8, 8, 8, 8, 8, 8, 8, 8]
INFO:root:XX add new best (2, 1) is not 2 11 11
INFO:root:XX add new best (2, 1) is not 2 11 11
INFO:root:XX add new best (2, 1) is not 2 11 11
INFO:root:XX add new best (2, 1) is not 2 11 11
INFO:root:XX add new best (2, 1) is not 2 11 11
INFO:root:XX add new best (2, 1) is not 2 11 11
INFO:root:XX add new best (2, 1) is not 2 11 11
INFO:root:XX add new best (2, 1) is not 2 11 11
INFO:root:XX add new best (2, 1) is not 2 11 11
INFO:root:XX add new best (2, 1) is not 2 11 11
INFO:root:XX add new best (2, 1) is not 2 11 11
INFO:root:XX add new best (2, 1) is not 2 11 11
INFO:root:XX add new best (2, 1) is not 2 11 11
INFO:root:XX add new best (2, 1) is not 2 11 11
INFO:root:XX add new best (2, 1) is not 2 11 11
INFO:root:XX add new best (2, 1) is not 2 11 11
INFO:root:XX add new best (2, 1) is not 2 11 11
INFO:root:Trace: [(11, [(2, 1) is not 2])]
INFO:root:Trace Quality: [(11, 1)]
INFO:root:Trace Sorted: [(11, 1)]
INFO:root:Finished
INFO:root:Full Trace [(11, [(2, 1) is not 2])]
INFO:root:Trying {'minPrecheckMUS': True}
INFO:root:Starting Step 1
INFO:root:Current state [[[[1, 2, 3], [5], [1, 2, 3], [7], [4], [9], [1, 2, 6], [8], [1, 2, 6]], [[1, 2, 4], [8], [9], [5, 6], [2, 5, 6], [3], [4, 7], [2, 5, 7], [1, 2, 4, 5]], [[6], [2, 7], [2, 4, 7], [5, 8], [2, 5, 8], [1], [3], [9], [2, 4, 5]], [[2, 3, 8, 9], [4], [2, 3, 5, 8], [1, 3, 5, 8, 9], [3, 5, 8, 9], [7], [1, 2, 5], [6], [1, 2, 3, 5]], [[1, 2, 3, 7], [2, 3, 7], [1, 2, 3, 5, 6, 7], [4], [3, 5, 6], [2, 6], [8], [2, 5, 7], [9]], [[2, 3, 7, 8, 9], [2, 3, 7, 9], [2, 3, 5, 6, 7, 8], [1, 3, 5, 6, 8, 9], [3, 5, 6, 8, 9], [2, 6, 8], [4, 7], [2, 5, 7], [1, 2, 3, 4, 5]], [[2, 7, 8, 9], [6], [2, 7, 8], [3, 8, 9], [3, 7, 8, 9], [4], [2, 5, 9], [1], [2, 5, 8]], [[5], [3, 9], [3, 8], [2], [1], [6, 8], [6, 9], [4], [7]], [[2, 4, 7, 8, 9], [1], [2, 4, 7, 8], [6, 8, 9], [6, 7, 8, 9], [5], [2, 6, 9], [3], [2, 6, 8]]]]
INFO:root:Doing checkSmall1
INFO:root:Getting tiny MUSes, distance 1, for 1 puzlits, 1 repeats
INFO:root:Chunked 1 in [1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
INFO:root:Doing checkSmall2
INFO:root:Getting tiny MUSes, distance 2, for 1 puzlits, 1 repeats
INFO:root:Chunked 1 in [1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
INFO:root:Considering 100 * 1 jobs for minsize=3
INFO:root:Chunked 100 in [9, 9, 9, 9, 8, 8, 8, 8, 8, 8, 8, 8]
INFO:root:Considering 100 * 1 jobs for minsize=4
INFO:root:Chunked 100 in [9, 9, 9, 9, 8, 8, 8, 8, 8, 8, 8, 8]
INFO:root:Considering 100 * 1 jobs for minsize=5
INFO:root:Chunked 100 in [9, 9, 9, 9, 8, 8, 8, 8, 8, 8, 8, 8]
INFO:root:Considering 100 * 1 jobs for minsize=6
INFO:root:Chunked 100 in [9, 9, 9, 9, 8, 8, 8, 8, 8, 8, 8, 8]
INFO:root:Considering 100 * 1 jobs for minsize=7
INFO:root:Chunked 100 in [9, 9, 9, 9, 8, 8, 8, 8, 8, 8, 8, 8]
INFO:root:Considering 100 * 1 jobs for minsize=8
INFO:root:Chunked 100 in [9, 9, 9, 9, 8, 8, 8, 8, 8, 8, 8, 8]
INFO:root:Considering 100 * 1 jobs for minsize=9
INFO:root:Chunked 100 in [9, 9, 9, 9, 8, 8, 8, 8, 8, 8, 8, 8]
INFO:root:Considering 100 * 1 jobs for minsize=10
INFO:root:Chunked 100 in [9, 9, 9, 9, 8, 8, 8, 8, 8, 8, 8, 8]
INFO:root:XX found first (2, 1) is not 2 11
INFO:root:XX add new best (2, 1) is not 2 11 11
INFO:root:Considering 100 * 1 jobs for minsize=11
INFO:root:Chunked 100 in [9, 9, 9, 9, 8, 8, 8, 8, 8, 8, 8, 8]
INFO:root:XX add new best (2, 1) is not 2 11 11
INFO:root:XX add new best (2, 1) is not 2 11 11
INFO:root:XX add new best (2, 1) is not 2 11 11
INFO:root:XX add new best (2, 1) is not 2 11 11
INFO:root:XX add new best (2, 1) is not 2 11 11
INFO:root:XX add new best (2, 1) is not 2 11 11
INFO:root:Trace: [(11, [(2, 1) is not 2])]
INFO:root:Trace Quality: [(11, 1)]
INFO:root:Trace Sorted: [(11, 1)]
INFO:root:Finished
INFO:root:Full Trace [(11, [(2, 1) is not 2])]
INFO:root:Trying {'gallopingMUSes': True}
INFO:root:Starting Step 1
INFO:root:Current state [[[[1, 2, 3], [5], [1, 2, 3], [7], [4], [9], [1, 2, 6], [8], [1, 2, 6]], [[1, 2, 4], [8], [9], [5, 6], [2, 5, 6], [3], [4, 7], [2, 5, 7], [1, 2, 4, 5]], [[6], [2, 7], [2, 4, 7], [5, 8], [2, 5, 8], [1], [3], [9], [2, 4, 5]], [[2, 3, 8, 9], [4], [2, 3, 5, 8], [1, 3, 5, 8, 9], [3, 5, 8, 9], [7], [1, 2, 5], [6], [1, 2, 3, 5]], [[1, 2, 3, 7], [2, 3, 7], [1, 2, 3, 5, 6, 7], [4], [3, 5, 6], [2, 6], [8], [2, 5, 7], [9]], [[2, 3, 7, 8, 9], [2, 3, 7, 9], [2, 3, 5, 6, 7, 8], [1, 3, 5, 6, 8, 9], [3, 5, 6, 8, 9], [2, 6, 8], [4, 7], [2, 5, 7], [1, 2, 3, 4, 5]], [[2, 7, 8, 9], [6], [2, 7, 8], [3, 8, 9], [3, 7, 8, 9], [4], [2, 5, 9], [1], [2, 5, 8]], [[5], [3, 9], [3, 8], [2], [1], [6, 8], [6, 9], [4], [7]], [[2, 4, 7, 8, 9], [1], [2, 4, 7, 8], [6, 8, 9], [6, 7, 8, 9], [5], [2, 6, 9], [3], [2, 6, 8]]]]
INFO:root:Doing checkSmall1
INFO:root:Getting tiny MUSes, distance 1, for 1 puzlits, 1 repeats
INFO:root:Chunked 1 in [1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
INFO:root:Doing checkSmall2
INFO:root:Getting tiny MUSes, distance 2, for 1 puzlits, 1 repeats
INFO:root:Chunked 1 in [1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
INFO:root:Considering 100 * 1 jobs for minsize=3
INFO:root:Chunked 100 in [9, 9, 9, 9, 8, 8, 8, 8, 8, 8, 8, 8]
INFO:root:Considering 100 * 1 jobs for minsize=4
INFO:root:Chunked 100 in [9, 9, 9, 9, 8, 8, 8, 8, 8, 8, 8, 8]
INFO:root:Considering 100 * 1 jobs for minsize=5
INFO:root:Chunked 100 in [9, 9, 9, 9, 8, 8, 8, 8, 8, 8, 8, 8]
INFO:root:Considering 100 * 1 jobs for minsize=6
INFO:root:Chunked 100 in [9, 9, 9, 9, 8, 8, 8, 8, 8, 8, 8, 8]
INFO:root:Considering 100 * 1 jobs for minsize=7
INFO:root:Chunked 100 in [9, 9, 9, 9, 8, 8, 8, 8, 8, 8, 8, 8]
INFO:root:Considering 100 * 1 jobs for minsize=8
INFO:root:Chunked 100 in [9, 9, 9, 9, 8, 8, 8, 8, 8, 8, 8, 8]
INFO:root:Considering 100 * 1 jobs for minsize=9
INFO:root:Chunked 100 in [9, 9, 9, 9, 8, 8, 8, 8, 8, 8, 8, 8]
INFO:root:Considering 100 * 1 jobs for minsize=10
INFO:root:Chunked 100 in [9, 9, 9, 9, 8, 8, 8, 8, 8, 8, 8, 8]
INFO:root:XX found first (2, 1) is not 2 11
INFO:root:Considering 100 * 1 jobs for minsize=11
INFO:root:Chunked 100 in [9, 9, 9, 9, 8, 8, 8, 8, 8, 8, 8, 8]
INFO:root:XX add new best (2, 1) is not 2 11 11
INFO:root:XX add new best (2, 1) is not 2 11 11
INFO:root:XX add new best (2, 1) is not 2 11 11
INFO:root:XX add new best (2, 1) is not 2 11 11
INFO:root:XX add new best (2, 1) is not 2 11 11
INFO:root:XX add new best (2, 1) is not 2 11 11
INFO:root:XX add new best (2, 1) is not 2 11 11
INFO:root:Trace: [(11, [(2, 1) is not 2])]
INFO:root:Trace Quality: [(11, 1)]
INFO:root:Trace Sorted: [(11, 1)]
INFO:root:Finished
INFO:root:Full Trace [(11, [(2, 1) is not 2])]
INFO:root:Trying {'minPrecheckStepsMUS': True}
INFO:root:Starting Step 1
INFO:root:Current state [[[[1, 2, 3], [5], [1, 2, 3], [7], [4], [9], [1, 2, 6], [8], [1, 2, 6]], [[1, 2, 4], [8], [9], [5, 6], [2, 5, 6], [3], [4, 7], [2, 5, 7], [1, 2, 4, 5]], [[6], [2, 7], [2, 4, 7], [5, 8], [2, 5, 8], [1], [3], [9], [2, 4, 5]], [[2, 3, 8, 9], [4], [2, 3, 5, 8], [1, 3, 5, 8, 9], [3, 5, 8, 9], [7], [1, 2, 5], [6], [1, 2, 3, 5]], [[1, 2, 3, 7], [2, 3, 7], [1, 2, 3, 5, 6, 7], [4], [3, 5, 6], [2, 6], [8], [2, 5, 7], [9]], [[2, 3, 7, 8, 9], [2, 3, 7, 9], [2, 3, 5, 6, 7, 8], [1, 3, 5, 6, 8, 9], [3, 5, 6, 8, 9], [2, 6, 8], [4, 7], [2, 5, 7], [1, 2, 3, 4, 5]], [[2, 7, 8, 9], [6], [2, 7, 8], [3, 8, 9], [3, 7, 8, 9], [4], [2, 5, 9], [1], [2, 5, 8]], [[5], [3, 9], [3, 8], [2], [1], [6, 8], [6, 9], [4], [7]], [[2, 4, 7, 8, 9], [1], [2, 4, 7, 8], [6, 8, 9], [6, 7, 8, 9], [5], [2, 6, 9], [3], [2, 6, 8]]]]
INFO:root:Doing checkSmall1
INFO:root:Getting tiny MUSes, distance 1, for 1 puzlits, 1 repeats
INFO:root:Chunked 1 in [1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
INFO:root:Doing checkSmall2
INFO:root:Getting tiny MUSes, distance 2, for 1 puzlits, 1 repeats
INFO:root:Chunked 1 in [1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
INFO:root:Considering 100 * 1 jobs for minsize=3
INFO:root:Chunked 100 in [9, 9, 9, 9, 8, 8, 8, 8, 8, 8, 8, 8]
INFO:root:Considering 100 * 1 jobs for minsize=4
INFO:root:Chunked 100 in [9, 9, 9, 9, 8, 8, 8, 8, 8, 8, 8, 8]
INFO:root:Considering 100 * 1 jobs for minsize=5
INFO:root:Chunked 100 in [9, 9, 9, 9, 8, 8, 8, 8, 8, 8, 8, 8]
INFO:root:Considering 100 * 1 jobs for minsize=6
INFO:root:Chunked 100 in [9, 9, 9, 9, 8, 8, 8, 8, 8, 8, 8, 8]
INFO:root:Considering 100 * 1 jobs for minsize=7
INFO:root:Chunked 100 in [9, 9, 9, 9, 8, 8, 8, 8, 8, 8, 8, 8]
INFO:root:Considering 100 * 1 jobs for minsize=8
INFO:root:Chunked 100 in [9, 9, 9, 9, 8, 8, 8, 8, 8, 8, 8, 8]
INFO:root:Considering 100 * 1 jobs for minsize=9
INFO:root:Chunked 100 in [9, 9, 9, 9, 8, 8, 8, 8, 8, 8, 8, 8]
INFO:root:Considering 100 * 1 jobs for minsize=10
INFO:root:Chunked 100 in [9, 9, 9, 9, 8, 8, 8, 8, 8, 8, 8, 8]
INFO:root:XX found first (2, 1) is not 2 11
INFO:root:XX add new best (2, 1) is not 2 11 11
INFO:root:Considering 100 * 1 jobs for minsize=11
INFO:root:Chunked 100 in [9, 9, 9, 9, 8, 8, 8, 8, 8, 8, 8, 8]
INFO:root:XX add new best (2, 1) is not 2 11 11
INFO:root:XX add new best (2, 1) is not 2 11 11
INFO:root:XX add new best (2, 1) is not 2 11 11
INFO:root:XX add new best (2, 1) is not 2 11 11
INFO:root:XX add new best (2, 1) is not 2 11 11
INFO:root:XX add new best (2, 1) is not 2 11 11
INFO:root:Trace: [(11, [(2, 1) is not 2])]
INFO:root:Trace Quality: [(11, 1)]
INFO:root:Trace Sorted: [(11, 1)]
INFO:root:Finished
INFO:root:Full Trace [(11, [(2, 1) is not 2])]
INFO:root:Trying {'gallopingMUSes': True, 'minPrecheckMUS': True}
INFO:root:Starting Step 1
INFO:root:Current state [[[[1, 2, 3], [5], [1, 2, 3], [7], [4], [9], [1, 2, 6], [8], [1, 2, 6]], [[1, 2, 4], [8], [9], [5, 6], [2, 5, 6], [3], [4, 7], [2, 5, 7], [1, 2, 4, 5]], [[6], [2, 7], [2, 4, 7], [5, 8], [2, 5, 8], [1], [3], [9], [2, 4, 5]], [[2, 3, 8, 9], [4], [2, 3, 5, 8], [1, 3, 5, 8, 9], [3, 5, 8, 9], [7], [1, 2, 5], [6], [1, 2, 3, 5]], [[1, 2, 3, 7], [2, 3, 7], [1, 2, 3, 5, 6, 7], [4], [3, 5, 6], [2, 6], [8], [2, 5, 7], [9]], [[2, 3, 7, 8, 9], [2, 3, 7, 9], [2, 3, 5, 6, 7, 8], [1, 3, 5, 6, 8, 9], [3, 5, 6, 8, 9], [2, 6, 8], [4, 7], [2, 5, 7], [1, 2, 3, 4, 5]], [[2, 7, 8, 9], [6], [2, 7, 8], [3, 8, 9], [3, 7, 8, 9], [4], [2, 5, 9], [1], [2, 5, 8]], [[5], [3, 9], [3, 8], [2], [1], [6, 8], [6, 9], [4], [7]], [[2, 4, 7, 8, 9], [1], [2, 4, 7, 8], [6, 8, 9], [6, 7, 8, 9], [5], [2, 6, 9], [3], [2, 6, 8]]]]
INFO:root:Doing checkSmall1
INFO:root:Getting tiny MUSes, distance 1, for 1 puzlits, 1 repeats
INFO:root:Chunked 1 in [1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
INFO:root:Doing checkSmall2
INFO:root:Getting tiny MUSes, distance 2, for 1 puzlits, 1 repeats
INFO:root:Chunked 1 in [1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
INFO:root:Considering 100 * 1 jobs for minsize=3
INFO:root:Chunked 100 in [9, 9, 9, 9, 8, 8, 8, 8, 8, 8, 8, 8]
INFO:root:Considering 100 * 1 jobs for minsize=4
INFO:root:Chunked 100 in [9, 9, 9, 9, 8, 8, 8, 8, 8, 8, 8, 8]
INFO:root:Considering 100 * 1 jobs for minsize=5
INFO:root:Chunked 100 in [9, 9, 9, 9, 8, 8, 8, 8, 8, 8, 8, 8]
INFO:root:Considering 100 * 1 jobs for minsize=6
INFO:root:Chunked 100 in [9, 9, 9, 9, 8, 8, 8, 8, 8, 8, 8, 8]
INFO:root:Considering 100 * 1 jobs for minsize=7
INFO:root:Chunked 100 in [9, 9, 9, 9, 8, 8, 8, 8, 8, 8, 8, 8]
INFO:root:Considering 100 * 1 jobs for minsize=8
INFO:root:Chunked 100 in [9, 9, 9, 9, 8, 8, 8, 8, 8, 8, 8, 8]
INFO:root:Considering 100 * 1 jobs for minsize=9
INFO:root:Chunked 100 in [9, 9, 9, 9, 8, 8, 8, 8, 8, 8, 8, 8]
INFO:root:Considering 100 * 1 jobs for minsize=10
INFO:root:Chunked 100 in [9, 9, 9, 9, 8, 8, 8, 8, 8, 8, 8, 8]
INFO:root:XX found first (2, 1) is not 2 11
INFO:root:XX add new best (2, 1) is not 2 11 11
INFO:root:Considering 100 * 1 jobs for minsize=11
INFO:root:Chunked 100 in [9, 9, 9, 9, 8, 8, 8, 8, 8, 8, 8, 8]
INFO:root:XX add new best (2, 1) is not 2 11 11
INFO:root:XX add new best (2, 1) is not 2 11 11
INFO:root:XX add new best (2, 1) is not 2 11 11
INFO:root:XX add new best (2, 1) is not 2 11 11
INFO:root:XX add new best (2, 1) is not 2 11 11
INFO:root:XX add new best (2, 1) is not 2 11 11
INFO:root:Trace: [(11, [(2, 1) is not 2])]
INFO:root:Trace Quality: [(11, 1)]
INFO:root:Trace Sorted: [(11, 1)]
INFO:root:Finished
INFO:root:Full Trace [(11, [(2, 1) is not 2])]
INFO:root:Trying {}
INFO:root:Starting Step 1
INFO:root:Current state [[[[2, 4, 5, 6, 8, 9], [2, 5, 9], [6, 9], [1, 3, 4, 5, 6, 7, 8, 9], [3, 6, 8, 9], [4, 5, 6, 7, 8, 9], [1, 9], [1, 5, 6, 7, 9], [7, 9]], [[4, 5, 6, 9], [1], [7], [4, 5, 6, 9], [2], [4, 5, 6, 9], [8], [5, 6, 9], [3]], [[5, 6, 8, 9], [5, 6, 9], [3], [1, 5, 6, 7, 8, 9], [6, 8, 9], [5, 6, 7, 8, 9], [2], [1, 5, 6, 7, 9], [4]], [[1, 9], [8], [4], [2, 9], [5], [3], [7], [1, 2, 9], [6]], [[1, 3, 5, 6], [5, 6], [1, 6, 9], [2, 4, 6, 7, 8, 9], [6, 8, 9], [2, 4, 6, 7, 8, 9], [1, 3, 4, 9], [1, 2, 3, 4, 8, 9], [8, 9]], [[3, 6, 9], [7], [2], [4, 6, 8, 9], [1], [4, 6, 8, 9], [3, 4, 9], [3, 4, 8, 9], [5]], [[6, 9], [4], [8], [3, 6, 9], [7], [1], [5], [3, 9], [2]], [[2, 7, 9], [3], [5], [2, 8, 9], [4], [2, 8, 9], [6], [7, 8, 9], [1]], [[1, 2, 6, 7, 9], [2, 6, 9], [1, 6, 9], [2, 3, 5, 6, 8, 9], [3, 6, 8, 9], [2, 5, 6, 8, 9], [3, 4, 9], [3, 4, 7, 8, 9], [7, 8, 9]]]]
INFO:root:Doing checkSmall1
INFO:root:Getting tiny MUSes, distance 1, for 1 puzlits, 1 repeats
INFO:root:Chunked 1 in [1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
INFO:root:Doing checkSmall2
INFO:root:Getting tiny MUSes, distance 2, for 1 puzlits, 1 repeats
INFO:root:Chunked 1 in [1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
INFO:root:Considering 100 * 1 jobs for minsize=3
INFO:root:Chunked 100 in [9, 9, 9, 9, 8, 8, 8, 8, 8, 8, 8, 8]
INFO:root:Considering 100 * 1 jobs for minsize=4
INFO:root:Chunked 100 in [9, 9, 9, 9, 8, 8, 8, 8, 8, 8, 8, 8]
INFO:root:Considering 100 * 1 jobs for minsize=5
INFO:root:Chunked 100 in [9, 9, 9, 9, 8, 8, 8, 8, 8, 8, 8, 8]
INFO:root:Considering 100 * 1 jobs for minsize=6
INFO:root:Chunked 100 in [9, 9, 9, 9, 8, 8, 8, 8, 8, 8, 8, 8]
INFO:root:Considering 100 * 1 jobs for minsize=7
INFO:root:Chunked 100 in [9, 9, 9, 9, 8, 8, 8, 8, 8, 8, 8, 8]
INFO:root:Considering 100 * 1 jobs for minsize=8
INFO:root:Chunked 100 in [9, 9, 9, 9, 8, 8, 8, 8, 8, 8, 8, 8]
INFO:root:Considering 100 * 1 jobs for minsize=9
INFO:root:Chunked 100 in [9, 9, 9, 9, 8, 8, 8, 8, 8, 8, 8, 8]
INFO:root:Considering 100 * 1 jobs for minsize=10
INFO:root:Chunked 100 in [9, 9, 9, 9, 8, 8, 8, 8, 8, 8, 8, 8]
INFO:root:Considering 100 * 1 jobs for minsize=11
INFO:root:Chunked 100 in [9, 9, 9, 9, 8, 8, 8, 8, 8, 8, 8, 8]
INFO:root:Considering 100 * 1 jobs for minsize=12
INFO:root:Chunked 100 in [9, 9, 9, 9, 8, 8, 8, 8, 8, 8, 8, 8]
INFO:root:XX found first (1, 1) is not 9 13
INFO:root:XX add new best (1, 1) is not 9 13 13
INFO:root:XX add new best (1, 1) is not 9 13 13
INFO:root:XX add new best (1, 1) is not 9 13 13
INFO:root:XX add new best (1, 1) is not 9 13 13
INFO:root:XX add new best (1, 1) is not 9 13 13
INFO:root:XX add new best (1, 1) is not 9 13 13
INFO:root:XX add new best (1, 1) is not 9 13 13
INFO:root:XX add new best (1, 1) is not 9 13 13
INFO:root:XX add new best (1, 1) is not 9 13 13
INFO:root:XX add new best (1, 1) is not 9 13 13
INFO:root:XX add new best (1, 1) is not 9 13 13
INFO:root:XX add new best (1, 1) is not 9 13 13
INFO:root:XX add new best (1, 1) is not 9 13 13
INFO:root:XX add new best (1, 1) is not 9 13 13
INFO:root:XX add new best (1, 1) is not 9 13 13
INFO:root:XX add new best (1, 1) is not 9 13 13
INFO:root:XX add new best (1, 1) is not 9 13 13
INFO:root:XX add new best (1, 1) is not 9 13 13
INFO:root:XX add new best (1, 1) is not 9 13 13
INFO:root:XX add new best (1, 1) is not 9 13 13
INFO:root:XX add new best (1, 1) is not 9 13 13
INFO:root:XX add new best (1, 1) is not 9 13 13
INFO:root:XX add new best (1, 1) is not 9 13 13
INFO:root:XX add new best (1, 1) is not 9 13 13
INFO:root:Considering 100 * 1 jobs for minsize=13
INFO:root:Chunked 100 in [9, 9, 9, 9, 8, 8, 8, 8, 8, 8, 8, 8]
INFO:root:XX add new best (1, 1) is not 9 13 13
INFO:root:XX add new best (1, 1) is not 9 13 13
INFO:root:XX add new best (1, 1) is not 9 13 13
INFO:root:XX add new best (1, 1) is not 9 13 13
INFO:root:XX add new best (1, 1) is not 9 13 13
INFO:root:XX add new best (1, 1) is not 9 13 13
INFO:root:XX add new best (1, 1) is not 9 13 13
INFO:root:XX add new best (1, 1) is not 9 13 13
INFO:root:XX add new best (1, 1) is not 9 13 13
INFO:root:XX add new best (1, 1) is not 9 13 13
INFO:root:XX add new best (1, 1) is not 9 13 13
INFO:root:XX add new best (1, 1) is not 9 13 13
INFO:root:XX add new best (1, 1) is not 9 13 13
INFO:root:XX add new best (1, 1) is not 9 13 13
INFO:root:XX add new best (1, 1) is not 9 13 13
INFO:root:XX add new best (1, 1) is not 9 13 13
INFO:root:XX add new best (1, 1) is not 9 13 13
INFO:root:XX add new best (1, 1) is not 9 13 13
INFO:root:XX add new best (1, 1) is not 9 13 13
INFO:root:XX add new best (1, 1) is not 9 13 13
INFO:root:XX add new best (1, 1) is not 9 13 13
INFO:root:XX add new best (1, 1) is not 9 13 13
INFO:root:XX add new best (1, 1) is not 9 13 13
INFO:root:XX add new best (1, 1) is not 9 13 13
INFO:root:XX add new best (1, 1) is not 9 13 13
INFO:root:Trace: [(13, [(1, 1) is not 9])]
INFO:root:Trace Quality: [(13, 1)]
INFO:root:Trace Sorted: [(13, 1)]
INFO:root:Finished
INFO:root:Full Trace [(13, [(1, 1) is not 9])]
INFO:root:Trying {'prechopMUSes': True}
INFO:root:Starting Step 1
INFO:root:Current state [[[[2, 4, 5, 6, 8, 9], [2, 5, 9], [6, 9], [1, 3, 4, 5, 6, 7, 8, 9], [3, 6, 8, 9], [4, 5, 6, 7, 8, 9], [1, 9], [1, 5, 6, 7, 9], [7, 9]], [[4, 5, 6, 9], [1], [7], [4, 5, 6, 9], [2], [4, 5, 6, 9], [8], [5, 6, 9], [3]], [[5, 6, 8, 9], [5, 6, 9], [3], [1, 5, 6, 7, 8, 9], [6, 8, 9], [5, 6, 7, 8, 9], [2], [1, 5, 6, 7, 9], [4]], [[1, 9], [8], [4], [2, 9], [5], [3], [7], [1, 2, 9], [6]], [[1, 3, 5, 6], [5, 6], [1, 6, 9], [2, 4, 6, 7, 8, 9], [6, 8, 9], [2, 4, 6, 7, 8, 9], [1, 3, 4, 9], [1, 2, 3, 4, 8, 9], [8, 9]], [[3, 6, 9], [7], [2], [4, 6, 8, 9], [1], [4, 6, 8, 9], [3, 4, 9], [3, 4, 8, 9], [5]], [[6, 9], [4], [8], [3, 6, 9], [7], [1], [5], [3, 9], [2]], [[2, 7, 9], [3], [5], [2, 8, 9], [4], [2, 8, 9], [6], [7, 8, 9], [1]], [[1, 2, 6, 7, 9], [2, 6, 9], [1, 6, 9], [2, 3, 5, 6, 8, 9], [3, 6, 8, 9], [2, 5, 6, 8, 9], [3, 4, 9], [3, 4, 7, 8, 9], [7, 8, 9]]]]
INFO:root:Doing checkSmall1
INFO:root:Getting tiny MUSes, distance 1, for 1 puzlits, 1 repeats
INFO:root:Chunked 1 in [1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
INFO:root:Doing checkSmall2
INFO:root:Getting tiny MUSes, distance 2, for 1 puzlits, 1 repeats
INFO:root:Chunked 1 in [1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
INFO:root:Considering 100 * 1 jobs for minsize=3
INFO:root:Chunked 100 in [9, 9, 9, 9, 8, 8, 8, 8, 8, 8, 8, 8]
INFO:root:Considering 100 * 1 jobs for minsize=4
INFO:root:Chunked 100 in [9, 9, 9, 9, 8, 8, 8, 8, 8, 8, 8, 8]
INFO:root:Considering 100 * 1 jobs for minsize=5
INFO:root:Chunked 100 in [9, 9, 9, 9, 8, 8, 8, 8, 8, 8, 8, 8]
INFO:root:Considering 100 * 1 jobs for minsize=6
INFO:root:Chunked 100 in [9, 9, 9, 9, 8, 8, 8, 8, 8, 8, 8, 8]
INFO:root:Considering 100 * 1 jobs for minsize=7
INFO:root:Chunked 100 in [9, 9, 9, 9, 8, 8, 8, 8, 8, 8, 8, 8]
INFO:root:Considering 100 * 1 jobs for minsize=8
INFO:root:Chunked 100 in [9, 9, 9, 9, 8, 8, 8, 8, 8, 8, 8, 8]
INFO:root:Considering 100 * 1 jobs for minsize=9
INFO:root:Chunked 100 in [9, 9, 9, 9, 8, 8, 8, 8, 8, 8, 8, 8]
INFO:root:XX found first (1, 1) is not 9 10
INFO:root:XX add new best (1, 1) is not 9 10 10
INFO:root:XX add new best (1, 1) is not 9 10 10
INFO:root:Considering 100 * 1 jobs for minsize=10
INFO:root:Chunked 100 in [9, 9, 9, 9, 8, 8, 8, 8, 8, 8, 8, 8]
INFO:root:XX add new best (1, 1) is not 9 10 10
INFO:root:XX add new best (1, 1) is not 9 10 10
INFO:root:Trace: [(10, [(1, 1) is not 9])]
INFO:root:Trace Quality: [(10, 1)]
INFO:root:Trace Sorted: [(10, 1)]
INFO:root:Finished
INFO:root:Full Trace [(10, [(1, 1) is not 9])]
INFO:root:Trying {'quarterChopMUS': True}
INFO:root:Starting Step 1
INFO:root:Current state [[[[2, 4, 5, 6, 8, 9], [2, 5, 9], [6, 9], [1, 3, 4, 5, 6, 7, 8, 9], [3, 6, 8, 9], [4, 5, 6, 7, 8, 9], [1, 9], [1, 5, 6, 7, 9], [7, 9]], [[4, 5, 6, 9], [1], [7], [4, 5, 6, 9], [2], [4, 5, 6, 9], [8], [5, 6, 9], [3]], [[5, 6, 8, 9], [5, 6, 9], [3], [1, 5, 6, 7, 8, 9], [6, 8, 9], [5, 6, 7, 8, 9], [2], [1, 5, 6, 7, 9], [4]], [[1, 9], [8], [4], [2, 9], [5], [3], [7], [1, 2, 9], [6]], [[1, 3, 5, 6], [5, 6], [1, 6, 9], [2, 4, 6, 7, 8, 9], [6, 8, 9], [2, 4, 6, 7, 8, 9], [1, 3, 4, 9], [1, 2, 3, 4, 8, 9], [8, 9]], [[3, 6, 9], [7], [2], [4, 6, 8, 9], [1], [4, 6, 8, 9], [3, 4, 9], [3, 4, 8, 9], [5]], [[6, 9], [4], [8], [3, 6, 9], [7], [1], [5], [3, 9], [2]], [[2, 7, 9], [3], [5], [2, 8, 9], [4], [2, 8, 9], [6], [7, 8, 9], [1]], [[1, 2, 6, 7, 9], [2, 6, 9], [1, 6, 9], [2, 3, 5, 6, 8, 9], [3, 6, 8, 9], [2, 5, 6, 8, 9], [3, 4, 9], [3, 4, 7, 8, 9], [7, 8, 9]]]]
INFO:root:Doing checkSmall1
INFO:root:Getting tiny MUSes, distance 1, for 1 puzlits, 1 repeats
INFO:root:Chunked 1 in [1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
INFO:root:Doing checkSmall2
INFO:root:Getting tiny MUSes, distance 2, for 1 puzlits, 1 repeats
INFO:root:Chunked 1 in [1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
INFO:root:Considering 100 * 1 jobs for minsize=3
INFO:root:Chunked 100 in [9, 9, 9, 9, 8, 8, 8, 8, 8, 8, 8, 8]
INFO:root:Considering 100 * 1 jobs for minsize=4
INFO:root:Chunked 100 in [9, 9, 9, 9, 8, 8, 8, 8, 8, 8, 8, 8]
INFO:root:Considering 100 * 1 jobs for minsize=5
INFO:root:Chunked 100 in [9, 9, 9, 9, 8, 8, 8, 8, 8, 8, 8, 8]
INFO:root:Considering 100 * 1 jobs for minsize=6
INFO:root:Chunked 100 in [9, 9, 9, 9, 8, 8, 8, 8, 8, 8, 8, 8]
INFO:root:Considering 100 * 1 jobs for minsize=7
INFO:root:Chunked 100 in [9, 9, 9, 9, 8, 8, 8, 8, 8, 8, 8, 8]
INFO:root:Considering 100 * 1 jobs for minsize=8
INFO:root:Chunked 100 in [9, 9, 9, 9, 8, 8, 8, 8, 8, 8, 8, 8]
INFO:root:Considering 100 * 1 jobs for minsize=9
INFO:root:Chunked 100 in [9, 9, 9, 9, 8, 8, 8, 8, 8, 8, 8, 8]
INFO:root:XX found first (1, 1) is not 9 10
INFO:root:XX add new best (1, 1) is not 9 10 10
INFO:root:XX add new best (1, 1) is not 9 10 10
INFO:root:Considering 100 * 1 jobs for minsize=10
INFO:root:Chunked 100 in [9, 9, 9, 9, 8, 8, 8, 8, 8, 8, 8, 8]
INFO:root:XX add new best (1, 1) is not 9 10 10
INFO:root:XX add new best (1, 1) is not 9 10 10
INFO:root:XX add new best (1, 1) is not 9 10 10
INFO:root:Trace: [(10, [(1, 1) is not 9])]
INFO:root:Trace Quality: [(10, 1)]
INFO:root:Trace Sorted: [(10, 1)]
INFO:root:Finished
INFO:root:Full Trace [(10, [(1, 1) is not 9])]
INFO:root:Trying {'minPrecheckMUS': True}
INFO:root:Starting Step 1
INFO:root:Current state [[[[2, 4, 5, 6, 8, 9], [2, 5, 9], [6, 9], [1, 3, 4, 5, 6, 7, 8, 9], [3, 6, 8, 9], [4, 5, 6, 7, 8, 9], [1, 9], [1, 5, 6, 7, 9], [7, 9]], [[4, 5, 6, 9], [1], [7], [4, 5, 6, 9], [2], [4, 5, 6, 9], [8], [5, 6, 9], [3]], [[5, 6, 8, 9], [5, 6, 9], [3], [1, 5, 6, 7, 8, 9], [6, 8, 9], [5, 6, 7, 8, 9], [2], [1, 5, 6, 7, 9], [4]], [[1, 9], [8], [4], [2, 9], [5], [3], [7], [1, 2, 9], [6]], [[1, 3, 5, 6], [5, 6], [1, 6, 9], [2, 4, 6, 7, 8, 9], [6, 8, 9], [2, 4, 6, 7, 8, 9], [1, 3, 4, 9], [1, 2, 3, 4, 8, 9], [8, 9]], [[3, 6, 9], [7], [2], [4, 6, 8, 9], [1], [4, 6, 8, 9], [3, 4, 9], [3, 4, 8, 9], [5]], [[6, 9], [4], [8], [3, 6, 9], [7], [1], [5], [3, 9], [2]], [[2, 7, 9], [3], [5], [2, 8, 9], [4], [2, 8, 9], [6], [7, 8, 9], [1]], [[1, 2, 6, 7, 9], [2, 6, 9], [1, 6, 9], [2, 3, 5, 6, 8, 9], [3, 6, 8, 9], [2, 5, 6, 8, 9], [3, 4, 9], [3, 4, 7, 8, 9], [7, 8, 9]]]]
INFO:root:Doing checkSmall1
INFO:root:Getting tiny MUSes, distance 1, for 1 puzlits, 1 repeats
INFO:root:Chunked 1 in [1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
INFO:root:Doing checkSmall2
INFO:root:Getting tiny MUSes, distance 2, for 1 puzlits, 1 repeats
INFO:root:Chunked 1 in [1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
INFO:root:Considering 100 * 1 jobs for minsize=3
INFO:root:Chunked 100 in [9, 9, 9, 9, 8, 8, 8, 8, 8, 8, 8, 8]
INFO:root:Considering 100 * 1 jobs for minsize=4
INFO:root:Chunked 100 in [9, 9, 9, 9, 8, 8, 8, 8, 8, 8, 8, 8]
INFO:root:Considering 100 * 1 jobs for minsize=5
INFO:root:Chunked 100 in [9, 9, 9, 9, 8, 8, 8, 8, 8, 8, 8, 8]
INFO:root:Considering 100 * 1 jobs for minsize=6
INFO:root:Chunked 100 in [9, 9, 9, 9, 8, 8, 8, 8, 8, 8, 8, 8]
INFO:root:Considering 100 * 1 jobs for minsize=7
INFO:root:Chunked 100 in [9, 9, 9, 9, 8, 8, 8, 8, 8, 8, 8, 8]
INFO:root:Considering 100 * 1 jobs for minsize=8
INFO:root:Chunked 100 in [9, 9, 9, 9, 8, 8, 8, 8, 8, 8, 8, 8]
INFO:root:Considering 100 * 1 jobs for minsize=9
INFO:root:Chunked 100 in [9, 9, 9, 9, 8, 8, 8, 8, 8, 8, 8, 8]
INFO:root:XX found first (1, 1) is not 9 10
INFO:root:Considering 100 * 1 jobs for minsize=10
INFO:root:Chunked 100 in [9, 9, 9, 9, 8, 8, 8, 8, 8, 8, 8, 8]
INFO:root:XX add new best (1, 1) is not 9 10 10
INFO:root:XX add new best (1, 1) is not 9 10 10
INFO:root:XX add new best (1, 1) is not 9 10 10
INFO:root:Trace: [(10, [(1, 1) is not 9])]
INFO:root:Trace Quality: [(10, 1)]
INFO:root:Trace Sorted: [(10, 1)]
INFO:root:Finished
INFO:root:Full Trace [(10, [(1, 1) is not 9])]
INFO:root:Trying {'gallopingMUSes': True}
INFO:root:Starting Step 1
INFO:root:Current state [[[[2, 4, 5, 6, 8, 9], [2, 5, 9], [6, 9], [1, 3, 4, 5, 6, 7, 8, 9], [3, 6, 8, 9], [4, 5, 6, 7, 8, 9], [1, 9], [1, 5, 6, 7, 9], [7, 9]], [[4, 5, 6, 9], [1], [7], [4, 5, 6, 9], [2], [4, 5, 6, 9], [8], [5, 6, 9], [3]], [[5, 6, 8, 9], [5, 6, 9], [3], [1, 5, 6, 7, 8, 9], [6, 8, 9], [5, 6, 7, 8, 9], [2], [1, 5, 6, 7, 9], [4]], [[1, 9], [8], [4], [2, 9], [5], [3], [7], [1, 2, 9], [6]], [[1, 3, 5, 6], [5, 6], [1, 6, 9], [2, 4, 6, 7, 8, 9], [6, 8, 9], [2, 4, 6, 7, 8, 9], [1, 3, 4, 9], [1, 2, 3, 4, 8, 9], [8, 9]], [[3, 6, 9], [7], [2], [4, 6, 8, 9], [1], [4, 6, 8, 9], [3, 4, 9], [3, 4, 8, 9], [5]], [[6, 9], [4], [8], [3, 6, 9], [7], [1], [5], [3, 9], [2]], [[2, 7, 9], [3], [5], [2, 8, 9], [4], [2, 8, 9], [6], [7, 8, 9], [1]], [[1, 2, 6, 7, 9], [2, 6, 9], [1, 6, 9], [2, 3, 5, 6, 8, 9], [3, 6, 8, 9], [2, 5, 6, 8, 9], [3, 4, 9], [3, 4, 7, 8, 9], [7, 8, 9]]]]
INFO:root:Doing checkSmall1
INFO:root:Getting tiny MUSes, distance 1, for 1 puzlits, 1 repeats
INFO:root:Chunked 1 in [1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
INFO:root:Doing checkSmall2
INFO:root:Getting tiny MUSes, distance 2, for 1 puzlits, 1 repeats
INFO:root:Chunked 1 in [1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
INFO:root:Considering 100 * 1 jobs for minsize=3
INFO:root:Chunked 100 in [9, 9, 9, 9, 8, 8, 8, 8, 8, 8, 8, 8]
INFO:root:Considering 100 * 1 jobs for minsize=4
INFO:root:Chunked 100 in [9, 9, 9, 9, 8, 8, 8, 8, 8, 8, 8, 8]
INFO:root:Considering 100 * 1 jobs for minsize=5
INFO:root:Chunked 100 in [9, 9, 9, 9, 8, 8, 8, 8, 8, 8, 8, 8]
INFO:root:Considering 100 * 1 jobs for minsize=6
INFO:root:Chunked 100 in [9, 9, 9, 9, 8, 8, 8, 8, 8, 8, 8, 8]
INFO:root:Considering 100 * 1 jobs for minsize=7
INFO:root:Chunked 100 in [9, 9, 9, 9, 8, 8, 8, 8, 8, 8, 8, 8]
INFO:root:Considering 100 * 1 jobs for minsize=8
INFO:root:Chunked 100 in [9, 9, 9, 9, 8, 8, 8, 8, 8, 8, 8, 8]
INFO:root:Considering 100 * 1 jobs for minsize=9
INFO:root:Chunked 100 in [9, 9, 9, 9, 8, 8, 8, 8, 8, 8, 8, 8]
INFO:root:XX found first (1, 1) is not 9 10
INFO:root:Considering 100 * 1 jobs for minsize=10
INFO:root:Chunked 100 in [9, 9, 9, 9, 8, 8, 8, 8, 8, 8, 8, 8]
INFO:root:XX add new best (1, 1) is not 9 10 10
INFO:root:XX add new best (1, 1) is not 9 10 10
INFO:root:Trace: [(10, [(1, 1) is not 9])]
INFO:root:Trace Quality: [(10, 1)]
INFO:root:Trace Sorted: [(10, 1)]
INFO:root:Finished
INFO:root:Full Trace [(10, [(1, 1) is not 9])]
INFO:root:Trying {'minPrecheckStepsMUS': True}
INFO:root:Starting Step 1
INFO:root:Current state [[[[2, 4, 5, 6, 8, 9], [2, 5, 9], [6, 9], [1, 3, 4, 5, 6, 7, 8, 9], [3, 6, 8, 9], [4, 5, 6, 7, 8, 9], [1, 9], [1, 5, 6, 7, 9], [7, 9]], [[4, 5, 6, 9], [1], [7], [4, 5, 6, 9], [2], [4, 5, 6, 9], [8], [5, 6, 9], [3]], [[5, 6, 8, 9], [5, 6, 9], [3], [1, 5, 6, 7, 8, 9], [6, 8, 9], [5, 6, 7, 8, 9], [2], [1, 5, 6, 7, 9], [4]], [[1, 9], [8], [4], [2, 9], [5], [3], [7], [1, 2, 9], [6]], [[1, 3, 5, 6], [5, 6], [1, 6, 9], [2, 4, 6, 7, 8, 9], [6, 8, 9], [2, 4, 6, 7, 8, 9], [1, 3, 4, 9], [1, 2, 3, 4, 8, 9], [8, 9]], [[3, 6, 9], [7], [2], [4, 6, 8, 9], [1], [4, 6, 8, 9], [3, 4, 9], [3, 4, 8, 9], [5]], [[6, 9], [4], [8], [3, 6, 9], [7], [1], [5], [3, 9], [2]], [[2, 7, 9], [3], [5], [2, 8, 9], [4], [2, 8, 9], [6], [7, 8, 9], [1]], [[1, 2, 6, 7, 9], [2, 6, 9], [1, 6, 9], [2, 3, 5, 6, 8, 9], [3, 6, 8, 9], [2, 5, 6, 8, 9], [3, 4, 9], [3, 4, 7, 8, 9], [7, 8, 9]]]]
INFO:root:Doing checkSmall1
INFO:root:Getting tiny MUSes, distance 1, for 1 puzlits, 1 repeats
INFO:root:Chunked 1 in [1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
INFO:root:Doing checkSmall2
INFO:root:Getting tiny MUSes, distance 2, for 1 puzlits, 1 repeats
INFO:root:Chunked 1 in [1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
INFO:root:Considering 100 * 1 jobs for minsize=3
INFO:root:Chunked 100 in [9, 9, 9, 9, 8, 8, 8, 8, 8, 8, 8, 8]
INFO:root:Considering 100 * 1 jobs for minsize=4
INFO:root:Chunked 100 in [9, 9, 9, 9, 8, 8, 8, 8, 8, 8, 8, 8]
INFO:root:Considering 100 * 1 jobs for minsize=5
INFO:root:Chunked 100 in [9, 9, 9, 9, 8, 8, 8, 8, 8, 8, 8, 8]
INFO:root:Considering 100 * 1 jobs for minsize=6
INFO:root:Chunked 100 in [9, 9, 9, 9, 8, 8, 8, 8, 8, 8, 8, 8]
INFO:root:Considering 100 * 1 jobs for minsize=7
INFO:root:Chunked 100 in [9, 9, 9, 9, 8, 8, 8, 8, 8, 8, 8, 8]
INFO:root:Considering 100 * 1 jobs for minsize=8
INFO:root:Chunked 100 in [9, 9, 9, 9, 8, 8, 8, 8, 8, 8, 8, 8]
INFO:root:Considering 100 * 1 jobs for minsize=9
INFO:root:Chunked 100 in [9, 9, 9, 9, 8, 8, 8, 8, 8, 8, 8, 8]
INFO:root:XX found first (1, 1) is not 9 10
INFO:root:Considering 100 * 1 jobs for minsize=10
INFO:root:Chunked 100 in [9, 9, 9, 9, 8, 8, 8, 8, 8, 8, 8, 8]
INFO:root:XX add new best (1, 1) is not 9 10 10
INFO:root:XX add new best (1, 1) is not 9 10 10
INFO:root:XX add new best (1, 1) is not 9 10 10
INFO:root:Trace: [(10, [(1, 1) is not 9])]
INFO:root:Trace Quality: [(10, 1)]
INFO:root:Trace Sorted: [(10, 1)]
INFO:root:Finished
INFO:root:Full Trace [(10, [(1, 1) is not 9])]
INFO:root:Trying {'gallopingMUSes': True, 'minPrecheckMUS': True}
INFO:root:Starting Step 1
INFO:root:Current state [[[[2, 4, 5, 6, 8, 9], [2, 5, 9], [6, 9], [1, 3, 4, 5, 6, 7, 8, 9], [3, 6, 8, 9], [4, 5, 6, 7, 8, 9], [1, 9], [1, 5, 6, 7, 9], [7, 9]], [[4, 5, 6, 9], [1], [7], [4, 5, 6, 9], [2], [4, 5, 6, 9], [8], [5, 6, 9], [3]], [[5, 6, 8, 9], [5, 6, 9], [3], [1, 5, 6, 7, 8, 9], [6, 8, 9], [5, 6, 7, 8, 9], [2], [1, 5, 6, 7, 9], [4]], [[1, 9], [8], [4], [2, 9], [5], [3], [7], [1, 2, 9], [6]], [[1, 3, 5, 6], [5, 6], [1, 6, 9], [2, 4, 6, 7, 8, 9], [6, 8, 9], [2, 4, 6, 7, 8, 9], [1, 3, 4, 9], [1, 2, 3, 4, 8, 9], [8, 9]], [[3, 6, 9], [7], [2], [4, 6, 8, 9], [1], [4, 6, 8, 9], [3, 4, 9], [3, 4, 8, 9], [5]], [[6, 9], [4], [8], [3, 6, 9], [7], [1], [5], [3, 9], [2]], [[2, 7, 9], [3], [5], [2, 8, 9], [4], [2, 8, 9], [6], [7, 8, 9], [1]], [[1, 2, 6, 7, 9], [2, 6, 9], [1, 6, 9], [2, 3, 5, 6, 8, 9], [3, 6, 8, 9], [2, 5, 6, 8, 9], [3, 4, 9], [3, 4, 7, 8, 9], [7, 8, 9]]]]
INFO:root:Doing checkSmall1
INFO:root:Getting tiny MUSes, distance 1, for 1 puzlits, 1 repeats
INFO:root:Chunked 1 in [1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
INFO:root:Doing checkSmall2
INFO:root:Getting tiny MUSes, distance 2, for 1 puzlits, 1 repeats
INFO:root:Chunked 1 in [1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
INFO:root:Considering 100 * 1 jobs for minsize=3
INFO:root:Chunked 100 in [9, 9, 9, 9, 8, 8, 8, 8, 8, 8, 8, 8]
INFO:root:Considering 100 * 1 jobs for minsize=4
INFO:root:Chunked 100 in [9, 9, 9, 9, 8, 8, 8, 8, 8, 8, 8, 8]
INFO:root:Considering 100 * 1 jobs for minsize=5
INFO:root:Chunked 100 in [9, 9, 9, 9, 8, 8, 8, 8, 8, 8, 8, 8]
INFO:root:Considering 100 * 1 jobs for minsize=6
INFO:root:Chunked 100 in [9, 9, 9, 9, 8, 8, 8, 8, 8, 8, 8, 8]
INFO:root:Considering 100 * 1 jobs for minsize=7
INFO:root:Chunked 100 in [9, 9, 9, 9, 8, 8, 8, 8, 8, 8, 8, 8]
INFO:root:Considering 100 * 1 jobs for minsize=8
INFO:root:Chunked 100 in [9, 9, 9, 9, 8, 8, 8, 8, 8, 8, 8, 8]
INFO:root:Considering 100 * 1 jobs for minsize=9
INFO:root:Chunked 100 in [9, 9, 9, 9, 8, 8, 8, 8, 8, 8, 8, 8]
INFO:root:XX found first (1, 1) is not 9 10
INFO:root:Considering 100 * 1 jobs for minsize=10
INFO:root:Chunked 100 in [9, 9, 9, 9, 8, 8, 8, 8, 8, 8, 8, 8]
INFO:root:XX add new best (1, 1) is not 9 10 10
INFO:root:XX add new best (1, 1) is not 9 10 10
INFO:root:XX add new best (1, 1) is not 9 10 10
INFO:root:Trace: [(10, [(1, 1) is not 9])]
INFO:root:Trace Quality: [(10, 1)]
INFO:root:Trace Sorted: [(10, 1)]
INFO:root:Finished
INFO:root:Full Trace [(10, [(1, 1) is not 9])]
INFO:root:Trying {}
INFO:root:Starting Step 1
INFO:root:Current state [[[[1], [4, 7, 8], [3, 4, 5, 7, 8], [3, 5, 6, 7], [3, 6, 8, 9], [5, 6, 7, 8], [3, 4, 8, 9], [3, 6, 9], [2]], [[2, 3, 8], [9], [3, 7, 8], [4], [1, 2, 3, 6, 8], [1, 2, 6, 7, 8], [1, 3, 8], [5], [3, 6, 8]], [[2, 3, 4, 5, 8], [2, 4, 8], [6], [1, 2, 3, 5], [1, 2, 3, 8, 9], [1, 2, 5, 8], [7], [1, 3, 9], [3, 4, 8, 9]], [[2, 4, 6, 8], [5], [1, 4, 7, 8], [9], [1, 2, 4, 6], [3], [1, 2, 8], [1, 2, 6, 7], [6, 7, 8]], [[2, 3, 4, 6, 8, 9], [1, 2, 4, 6, 8], [1, 3, 4, 8, 9], [1, 2, 6], [7], [1, 2, 4, 6], [1, 2, 3, 5, 8, 9], [1, 2, 3, 6, 9], [3, 5, 6, 8, 9]], [[2, 3, 6, 9], [1, 2, 6, 7], [1, 3, 7, 9], [8], [5], [1, 2, 6], [1, 2, 3, 9], [4], [3, 6, 7, 9]], [[7], [1, 4, 8], [1, 4, 5, 8, 9], [1, 2, 3, 5], [1, 2, 3, 4, 8], [1, 2, 4, 5, 8], [6], [2, 3, 9], [3, 4, 5, 9]], [[4, 5, 6], [3], [1, 4, 5], [1, 2, 5, 6, 7], [1, 2, 4, 6], [9], [2, 4, 5], [8], [4, 5, 7]], [[4, 5, 6, 8, 9], [4, 6, 8], [2], [3, 5, 6, 7], [3, 4, 6, 8], [4, 5, 6, 7, 8], [3, 4, 5, 9], [3, 7, 9], [1]]]]
INFO:root:Doing checkSmall1
INFO:root:Getting tiny MUSes, distance 1, for 1 puzlits, 1 repeats
INFO:root:Chunked 1 in [1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
INFO:root:Doing checkSmall2
INFO:root:Getting tiny MUSes, distance 2, for 1 puzlits, 1 repeats
INFO:root:Chunked 1 in [1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
INFO:root:Considering 100 * 1 jobs for minsize=3
INFO:root:Chunked 100 in [9, 9, 9, 9, 8, 8, 8, 8, 8, 8, 8, 8]
INFO:root:Considering 100 * 1 jobs for minsize=4
INFO:root:Chunked 100 in [9, 9, 9, 9, 8, 8, 8, 8, 8, 8, 8, 8]
INFO:root:Considering 100 * 1 jobs for minsize=5
INFO:root:Chunked 100 in [9, 9, 9, 9, 8, 8, 8, 8, 8, 8, 8, 8]
INFO:root:Considering 100 * 1 jobs for minsize=6
INFO:root:Chunked 100 in [9, 9, 9, 9, 8, 8, 8, 8, 8, 8, 8, 8]
INFO:root:Considering 100 * 1 jobs for minsize=7
INFO:root:Chunked 100 in [9, 9, 9, 9, 8, 8, 8, 8, 8, 8, 8, 8]
INFO:root:Considering 100 * 1 jobs for minsize=8
INFO:root:Chunked 100 in [9, 9, 9, 9, 8, 8, 8, 8, 8, 8, 8, 8]
INFO:root:Considering 100 * 1 jobs for minsize=9
INFO:root:Chunked 100 in [9, 9, 9, 9, 8, 8, 8, 8, 8, 8, 8, 8]
INFO:root:Considering 100 * 1 jobs for minsize=10
INFO:root:Chunked 100 in [9, 9, 9, 9, 8, 8, 8, 8, 8, 8, 8, 8]
INFO:root:Considering 100 * 1 jobs for minsize=11
INFO:root:Chunked 100 in [9, 9, 9, 9, 8, 8, 8, 8, 8, 8, 8, 8]
INFO:root:Considering 100 * 1 jobs for minsize=12
INFO:root:Chunked 100 in [9, 9, 9, 9, 8, 8, 8, 8, 8, 8, 8, 8]
INFO:root:Considering 100 * 1 jobs for minsize=13
INFO:root:Chunked 100 in [9, 9, 9, 9, 8, 8, 8, 8, 8, 8, 8, 8]
INFO:root:Considering 100 * 1 jobs for minsize=14
INFO:root:Chunked 100 in [9, 9, 9, 9, 8, 8, 8, 8, 8, 8, 8, 8]
INFO:root:Considering 100 * 1 jobs for minsize=15
INFO:root:Chunked 100 in [9, 9, 9, 9, 8, 8, 8, 8, 8, 8, 8, 8]
INFO:root:Considering 100 * 1 jobs for minsize=16
INFO:root:Chunked 100 in [9, 9, 9, 9, 8, 8, 8, 8, 8, 8, 8, 8]
INFO:root:Considering 100 * 1 jobs for minsize=17
INFO:root:Chunked 100 in [9, 9, 9, 9, 8, 8, 8, 8, 8, 8, 8, 8]
INFO:root:Considering 100 * 1 jobs for minsize=18
INFO:root:Chunked 100 in [9, 9, 9, 9, 8, 8, 8, 8, 8, 8, 8, 8]
INFO:root:Considering 100 * 1 jobs for minsize=19
INFO:root:Chunked 100 in [9, 9, 9, 9, 8, 8, 8, 8, 8, 8, 8, 8]
INFO:root:Considering 100 * 1 jobs for minsize=20
INFO:root:Chunked 100 in [9, 9, 9, 9, 8, 8, 8, 8, 8, 8, 8, 8]
INFO:root:Considering 100 * 1 jobs for minsize=21
INFO:root:Chunked 100 in [9, 9, 9, 9, 8, 8, 8, 8, 8, 8, 8, 8]
INFO:root:Considering 100 * 1 jobs for minsize=22
INFO:root:Chunked 100 in [9, 9, 9, 9, 8, 8, 8, 8, 8, 8, 8, 8]
INFO:root:Considering 100 * 1 jobs for minsize=23
INFO:root:Chunked 100 in [9, 9, 9, 9, 8, 8, 8, 8, 8, 8, 8, 8]
INFO:root:Considering 100 * 1 jobs for minsize=24
INFO:root:Chunked 100 in [9, 9, 9, 9, 8, 8, 8, 8, 8, 8, 8, 8]
INFO:root:Considering 100 * 1 jobs for minsize=25
INFO:root:Chunked 100 in [9, 9, 9, 9, 8, 8, 8, 8, 8, 8, 8, 8]
INFO:root:Considering 100 * 1 jobs for minsize=26
INFO:root:Chunked 100 in [9, 9, 9, 9, 8, 8, 8, 8, 8, 8, 8, 8]
INFO:root:Considering 100 * 1 jobs for minsize=27
INFO:root:Chunked 100 in [9, 9, 9, 9, 8, 8, 8, 8, 8, 8, 8, 8]
INFO:root:Considering 100 * 1 jobs for minsize=28
INFO:root:Chunked 100 in [9, 9, 9, 9, 8, 8, 8, 8, 8, 8, 8, 8]
INFO:root:Considering 100 * 1 jobs for minsize=29
INFO:root:Chunked 100 in [9, 9, 9, 9, 8, 8, 8, 8, 8, 8, 8, 8]
INFO:root:Considering 100 * 1 jobs for minsize=30
INFO:root:Chunked 100 in [9, 9, 9, 9, 8, 8, 8, 8, 8, 8, 8, 8]
INFO:root:Considering 100 * 1 jobs for minsize=31
INFO:root:Chunked 100 in [9, 9, 9, 9, 8, 8, 8, 8, 8, 8, 8, 8]
INFO:root:Considering 100 * 1 jobs for minsize=32
INFO:root:Chunked 100 in [9, 9, 9, 9, 8, 8, 8, 8, 8, 8, 8, 8]
INFO:root:Considering 100 * 1 jobs for minsize=33
INFO:root:Chunked 100 in [9, 9, 9, 9, 8, 8, 8, 8, 8, 8, 8, 8]
INFO:root:Considering 100 * 1 jobs for minsize=34
INFO:root:Chunked 100 in [9, 9, 9, 9, 8, 8, 8, 8, 8, 8, 8, 8]
INFO:root:Considering 100 * 1 jobs for minsize=35
INFO:root:Chunked 100 in [9, 9, 9, 9, 8, 8, 8, 8, 8, 8, 8, 8]
INFO:root:Considering 100 * 1 jobs for minsize=36
INFO:root:Chunked 100 in [9, 9, 9, 9, 8, 8, 8, 8, 8, 8, 8, 8]
INFO:root:Considering 100 * 1 jobs for minsize=37
INFO:root:Chunked 100 in [9, 9, 9, 9, 8, 8, 8, 8, 8, 8, 8, 8]
INFO:root:Considering 100 * 1 jobs for minsize=38
INFO:root:Chunked 100 in [9, 9, 9, 9, 8, 8, 8, 8, 8, 8, 8, 8]
INFO:root:Considering 100 * 1 jobs for minsize=39
INFO:root:Chunked 100 in [9, 9, 9, 9, 8, 8, 8, 8, 8, 8, 8, 8]
INFO:root:Considering 100 * 1 jobs for minsize=40
INFO:root:Chunked 100 in [9, 9, 9, 9, 8, 8, 8, 8, 8, 8, 8, 8]
INFO:root:Considering 100 * 1 jobs for minsize=41
INFO:root:Chunked 100 in [9, 9, 9, 9, 8, 8, 8, 8, 8, 8, 8, 8]
INFO:root:Considering 100 * 1 jobs for minsize=42
INFO:root:Chunked 100 in [9, 9, 9, 9, 8, 8, 8, 8, 8, 8, 8, 8]
INFO:root:Considering 100 * 1 jobs for minsize=43
INFO:root:Chunked 100 in [9, 9, 9, 9, 8, 8, 8, 8, 8, 8, 8, 8]
INFO:root:Considering 100 * 1 jobs for minsize=44
INFO:root:Chunked 100 in [9, 9, 9, 9, 8, 8, 8, 8, 8, 8, 8, 8]
INFO:root:Considering 100 * 1 jobs for minsize=45
INFO:root:Chunked 100 in [9, 9, 9, 9, 8, 8, 8, 8, 8, 8, 8, 8]
INFO:root:Considering 100 * 1 jobs for minsize=46
INFO:root:Chunked 100 in [9, 9, 9, 9, 8, 8, 8, 8, 8, 8, 8, 8]
INFO:root:Considering 100 * 1 jobs for minsize=47
INFO:root:Chunked 100 in [9, 9, 9, 9, 8, 8, 8, 8, 8, 8, 8, 8]
INFO:root:Considering 100 * 1 jobs for minsize=48
INFO:root:Chunked 100 in [9, 9, 9, 9, 8, 8, 8, 8, 8, 8, 8, 8]
INFO:root:Considering 100 * 1 jobs for minsize=49
INFO:root:Chunked 100 in [9, 9, 9, 9, 8, 8, 8, 8, 8, 8, 8, 8]
INFO:root:Considering 100 * 1 jobs for minsize=50
INFO:root:Chunked 100 in [9, 9, 9, 9, 8, 8, 8, 8, 8, 8, 8, 8]
INFO:root:Considering 100 * 1 jobs for minsize=51
INFO:root:Chunked 100 in [9, 9, 9, 9, 8, 8, 8, 8, 8, 8, 8, 8]
INFO:root:Considering 100 * 1 jobs for minsize=52
INFO:root:Chunked 100 in [9, 9, 9, 9, 8, 8, 8, 8, 8, 8, 8, 8]
INFO:root:Considering 100 * 1 jobs for minsize=53
INFO:root:Chunked 100 in [9, 9, 9, 9, 8, 8, 8, 8, 8, 8, 8, 8]
INFO:root:Considering 100 * 1 jobs for minsize=54
INFO:root:Chunked 100 in [9, 9, 9, 9, 8, 8, 8, 8, 8, 8, 8, 8]
INFO:root:Considering 100 * 1 jobs for minsize=55
INFO:root:Chunked 100 in [9, 9, 9, 9, 8, 8, 8, 8, 8, 8, 8, 8]
INFO:root:Considering 100 * 1 jobs for minsize=56
INFO:root:Chunked 100 in [9, 9, 9, 9, 8, 8, 8, 8, 8, 8, 8, 8]
INFO:root:Considering 100 * 1 jobs for minsize=57
INFO:root:Chunked 100 in [9, 9, 9, 9, 8, 8, 8, 8, 8, 8, 8, 8]
INFO:root:Considering 100 * 1 jobs for minsize=58
INFO:root:Chunked 100 in [9, 9, 9, 9, 8, 8, 8, 8, 8, 8, 8, 8]
INFO:root:Considering 100 * 1 jobs for minsize=59
INFO:root:Chunked 100 in [9, 9, 9, 9, 8, 8, 8, 8, 8, 8, 8, 8]
INFO:root:Considering 100 * 1 jobs for minsize=60
INFO:root:Chunked 100 in [9, 9, 9, 9, 8, 8, 8, 8, 8, 8, 8, 8]
INFO:root:Considering 100 * 1 jobs for minsize=61
INFO:root:Chunked 100 in [9, 9, 9, 9, 8, 8, 8, 8, 8, 8, 8, 8]
INFO:root:Considering 100 * 1 jobs for minsize=62
INFO:root:Chunked 100 in [9, 9, 9, 9, 8, 8, 8, 8, 8, 8, 8, 8]
INFO:root:Considering 100 * 1 jobs for minsize=63
INFO:root:Chunked 100 in [9, 9, 9, 9, 8, 8, 8, 8, 8, 8, 8, 8]
INFO:root:Considering 100 * 1 jobs for minsize=64
INFO:root:Chunked 100 in [9, 9, 9, 9, 8, 8, 8, 8, 8, 8, 8, 8]
INFO:root:Considering 100 * 1 jobs for minsize=65
INFO:root:Chunked 100 in [9, 9, 9, 9, 8, 8, 8, 8, 8, 8, 8, 8]
INFO:root:Considering 100 * 1 jobs for minsize=66
INFO:root:Chunked 100 in [9, 9, 9, 9, 8, 8, 8, 8, 8, 8, 8, 8]
INFO:root:XX found first (1, 3) is not 7 67
INFO:root:XX add new best (1, 3) is not 7 67 67
INFO:root:Considering 100 * 1 jobs for minsize=67
INFO:root:Chunked 100 in [9, 9, 9, 9, 8, 8, 8, 8, 8, 8, 8, 8]
INFO:root:Trace: [(67, [(1, 3) is not 7])]
INFO:root:Trace Quality: [(67, 1)]
INFO:root:Trace Sorted: [(67, 1)]
INFO:root:Finished
INFO:root:Full Trace [(67, [(1, 3) is not 7])]
INFO:root:Trying {'prechopMUSes': True}
INFO:root:Starting Step 1
INFO:root:Current state [[[[1], [4, 7, 8], [3, 4, 5, 7, 8], [3, 5, 6, 7], [3, 6, 8, 9], [5, 6, 7, 8], [3, 4, 8, 9], [3, 6, 9], [2]], [[2, 3, 8], [9], [3, 7, 8], [4], [1, 2, 3, 6, 8], [1, 2, 6, 7, 8], [1, 3, 8], [5], [3, 6, 8]], [[2, 3, 4, 5, 8], [2, 4, 8], [6], [1, 2, 3, 5], [1, 2, 3, 8, 9], [1, 2, 5, 8], [7], [1, 3, 9], [3, 4, 8, 9]], [[2, 4, 6, 8], [5], [1, 4, 7, 8], [9], [1, 2, 4, 6], [3], [1, 2, 8], [1, 2, 6, 7], [6, 7, 8]], [[2, 3, 4, 6, 8, 9], [1, 2, 4, 6, 8], [1, 3, 4, 8, 9], [1, 2, 6], [7], [1, 2, 4, 6], [1, 2, 3, 5, 8, 9], [1, 2, 3, 6, 9], [3, 5, 6, 8, 9]], [[2, 3, 6, 9], [1, 2, 6, 7], [1, 3, 7, 9], [8], [5], [1, 2, 6], [1, 2, 3, 9], [4], [3, 6, 7, 9]], [[7], [1, 4, 8], [1, 4, 5, 8, 9], [1, 2, 3, 5], [1, 2, 3, 4, 8], [1, 2, 4, 5, 8], [6], [2, 3, 9], [3, 4, 5, 9]], [[4, 5, 6], [3], [1, 4, 5], [1, 2, 5, 6, 7], [1, 2, 4, 6], [9], [2, 4, 5], [8], [4, 5, 7]], [[4, 5, 6, 8, 9], [4, 6, 8], [2], [3, 5, 6, 7], [3, 4, 6, 8], [4, 5, 6, 7, 8], [3, 4, 5, 9], [3, 7, 9], [1]]]]
INFO:root:Doing checkSmall1
INFO:root:Getting tiny MUSes, distance 1, for 1 puzlits, 1 repeats
INFO:root:Chunked 1 in [1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
INFO:root:Doing checkSmall2
INFO:root:Getting tiny MUSes, distance 2, for 1 puzlits, 1 repeats
INFO:root:Chunked 1 in [1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
INFO:root:Considering 100 * 1 jobs for minsize=3
INFO:root:Chunked 100 in [9, 9, 9, 9, 8, 8, 8, 8, 8, 8, 8, 8]
INFO:root:Considering 100 * 1 jobs for minsize=4
INFO:root:Chunked 100 in [9, 9, 9, 9, 8, 8, 8, 8, 8, 8, 8, 8]
INFO:root:Considering 100 * 1 jobs for minsize=5
INFO:root:Chunked 100 in [9, 9, 9, 9, 8, 8, 8, 8, 8, 8, 8, 8]
INFO:root:Considering 100 * 1 jobs for minsize=6
INFO:root:Chunked 100 in [9, 9, 9, 9, 8, 8, 8, 8, 8, 8, 8, 8]
INFO:root:Considering 100 * 1 jobs for minsize=7
INFO:root:Chunked 100 in [9, 9, 9, 9, 8, 8, 8, 8, 8, 8, 8, 8]
INFO:root:Considering 100 * 1 jobs for minsize=8
INFO:root:Chunked 100 in [9, 9, 9, 9, 8, 8, 8, 8, 8, 8, 8, 8]
INFO:root:Considering 100 * 1 jobs for minsize=9
INFO:root:Chunked 100 in [9, 9, 9, 9, 8, 8, 8, 8, 8, 8, 8, 8]
INFO:root:Considering 100 * 1 jobs for minsize=10
INFO:root:Chunked 100 in [9, 9, 9, 9, 8, 8, 8, 8, 8, 8, 8, 8]
INFO:root:Considering 100 * 1 jobs for minsize=11
INFO:root:Chunked 100 in [9, 9, 9, 9, 8, 8, 8, 8, 8, 8, 8, 8]
INFO:root:Considering 100 * 1 jobs for minsize=12
INFO:root:Chunked 100 in [9, 9, 9, 9, 8, 8, 8, 8, 8, 8, 8, 8]
INFO:root:Considering 100 * 1 jobs for minsize=13
INFO:root:Chunked 100 in [9, 9, 9, 9, 8, 8, 8, 8, 8, 8, 8, 8]
INFO:root:Considering 100 * 1 jobs for minsize=14
INFO:root:Chunked 100 in [9, 9, 9, 9, 8, 8, 8, 8, 8, 8, 8, 8]
INFO:root:Considering 100 * 1 jobs for minsize=15
INFO:root:Chunked 100 in [9, 9, 9, 9, 8, 8, 8, 8, 8, 8, 8, 8]
INFO:root:Considering 100 * 1 jobs for minsize=16
INFO:root:Chunked 100 in [9, 9, 9, 9, 8, 8, 8, 8, 8, 8, 8, 8]
INFO:root:Considering 100 * 1 jobs for minsize=17
INFO:root:Chunked 100 in [9, 9, 9, 9, 8, 8, 8, 8, 8, 8, 8, 8]
INFO:root:Considering 100 * 1 jobs for minsize=18
INFO:root:Chunked 100 in [9, 9, 9, 9, 8, 8, 8, 8, 8, 8, 8, 8]
INFO:root:Considering 100 * 1 jobs for minsize=19
INFO:root:Chunked 100 in [9, 9, 9, 9, 8, 8, 8, 8, 8, 8, 8, 8]
INFO:root:Considering 100 * 1 jobs for minsize=20
INFO:root:Chunked 100 in [9, 9, 9, 9, 8, 8, 8, 8, 8, 8, 8, 8]
INFO:root:Considering 100 * 1 jobs for minsize=21
INFO:root:Chunked 100 in [9, 9, 9, 9, 8, 8, 8, 8, 8, 8, 8, 8]
INFO:root:Considering 100 * 1 jobs for minsize=22
INFO:root:Chunked 100 in [9, 9, 9, 9, 8, 8, 8, 8, 8, 8, 8, 8]
INFO:root:Considering 100 * 1 jobs for minsize=23
INFO:root:Chunked 100 in [9, 9, 9, 9, 8, 8, 8, 8, 8, 8, 8, 8]
INFO:root:Considering 100 * 1 jobs for minsize=24
INFO:root:Chunked 100 in [9, 9, 9, 9, 8, 8, 8, 8, 8, 8, 8, 8]
INFO:root:Considering 100 * 1 jobs for minsize=25
INFO:root:Chunked 100 in [9, 9, 9, 9, 8, 8, 8, 8, 8, 8, 8, 8]
INFO:root:Considering 100 * 1 jobs for minsize=26
INFO:root:Chunked 100 in [9, 9, 9, 9, 8, 8, 8, 8, 8, 8, 8, 8]
INFO:root:Considering 100 * 1 jobs for minsize=27
INFO:root:Chunked 100 in [9, 9, 9, 9, 8, 8, 8, 8, 8, 8, 8, 8]
INFO:root:Considering 100 * 1 jobs for minsize=28
INFO:root:Chunked 100 in [9, 9, 9, 9, 8, 8, 8, 8, 8, 8, 8, 8]
INFO:root:Considering 100 * 1 jobs for minsize=29
INFO:root:Chunked 100 in [9, 9, 9, 9, 8, 8, 8, 8, 8, 8, 8, 8]
INFO:root:Considering 100 * 1 jobs for minsize=30
INFO:root:Chunked 100 in [9, 9, 9, 9, 8, 8, 8, 8, 8, 8, 8, 8]
INFO:root:Considering 100 * 1 jobs for minsize=31
INFO:root:Chunked 100 in [9, 9, 9, 9, 8, 8, 8, 8, 8, 8, 8, 8]
INFO:root:Considering 100 * 1 jobs for minsize=32
INFO:root:Chunked 100 in [9, 9, 9, 9, 8, 8, 8, 8, 8, 8, 8, 8]
INFO:root:Considering 100 * 1 jobs for minsize=33
INFO:root:Chunked 100 in [9, 9, 9, 9, 8, 8, 8, 8, 8, 8, 8, 8]
INFO:root:Considering 100 * 1 jobs for minsize=34
INFO:root:Chunked 100 in [9, 9, 9, 9, 8, 8, 8, 8, 8, 8, 8, 8]
INFO:root:Considering 100 * 1 jobs for minsize=35
INFO:root:Chunked 100 in [9, 9, 9, 9, 8, 8, 8, 8, 8, 8, 8, 8]
INFO:root:Considering 100 * 1 jobs for minsize=36
INFO:root:Chunked 100 in [9, 9, 9, 9, 8, 8, 8, 8, 8, 8, 8, 8]
INFO:root:Considering 100 * 1 jobs for minsize=37
INFO:root:Chunked 100 in [9, 9, 9, 9, 8, 8, 8, 8, 8, 8, 8, 8]
INFO:root:Considering 100 * 1 jobs for minsize=38
INFO:root:Chunked 100 in [9, 9, 9, 9, 8, 8, 8, 8, 8, 8, 8, 8]
INFO:root:Considering 100 * 1 jobs for minsize=39
INFO:root:Chunked 100 in [9, 9, 9, 9, 8, 8, 8, 8, 8, 8, 8, 8]
INFO:root:Considering 100 * 1 jobs for minsize=40
INFO:root:Chunked 100 in [9, 9, 9, 9, 8, 8, 8, 8, 8, 8, 8, 8]
INFO:root:Considering 100 * 1 jobs for minsize=41
INFO:root:Chunked 100 in [9, 9, 9, 9, 8, 8, 8, 8, 8, 8, 8, 8]
INFO:root:Considering 100 * 1 jobs for minsize=42
INFO:root:Chunked 100 in [9, 9, 9, 9, 8, 8, 8, 8, 8, 8, 8, 8]
INFO:root:Considering 100 * 1 jobs for minsize=43
INFO:root:Chunked 100 in [9, 9, 9, 9, 8, 8, 8, 8, 8, 8, 8, 8]
INFO:root:Considering 100 * 1 jobs for minsize=44
INFO:root:Chunked 100 in [9, 9, 9, 9, 8, 8, 8, 8, 8, 8, 8, 8]
INFO:root:Considering 100 * 1 jobs for minsize=45
INFO:root:Chunked 100 in [9, 9, 9, 9, 8, 8, 8, 8, 8, 8, 8, 8]
INFO:root:Considering 100 * 1 jobs for minsize=46
INFO:root:Chunked 100 in [9, 9, 9, 9, 8, 8, 8, 8, 8, 8, 8, 8]
INFO:root:Considering 100 * 1 jobs for minsize=47
INFO:root:Chunked 100 in [9, 9, 9, 9, 8, 8, 8, 8, 8, 8, 8, 8]
INFO:root:Considering 100 * 1 jobs for minsize=48
INFO:root:Chunked 100 in [9, 9, 9, 9, 8, 8, 8, 8, 8, 8, 8, 8]
INFO:root:Considering 100 * 1 jobs for minsize=49
INFO:root:Chunked 100 in [9, 9, 9, 9, 8, 8, 8, 8, 8, 8, 8, 8]
INFO:root:Considering 100 * 1 jobs for minsize=50
INFO:root:Chunked 100 in [9, 9, 9, 9, 8, 8, 8, 8, 8, 8, 8, 8]
INFO:root:Considering 100 * 1 jobs for minsize=51
INFO:root:Chunked 100 in [9, 9, 9, 9, 8, 8, 8, 8, 8, 8, 8, 8]
INFO:root:Considering 100 * 1 jobs for minsize=52
INFO:root:Chunked 100 in [9, 9, 9, 9, 8, 8, 8, 8, 8, 8, 8, 8]
INFO:root:Considering 100 * 1 jobs for minsize=53
INFO:root:Chunked 100 in [9, 9, 9, 9, 8, 8, 8, 8, 8, 8, 8, 8]
INFO:root:Considering 100 * 1 jobs for minsize=54
INFO:root:Chunked 100 in [9, 9, 9, 9, 8, 8, 8, 8, 8, 8, 8, 8]
INFO:root:Considering 100 * 1 jobs for minsize=55
INFO:root:Chunked 100 in [9, 9, 9, 9, 8, 8, 8, 8, 8, 8, 8, 8]
INFO:root:Considering 100 * 1 jobs for minsize=56
INFO:root:Chunked 100 in [9, 9, 9, 9, 8, 8, 8, 8, 8, 8, 8, 8]
INFO:root:Considering 100 * 1 jobs for minsize=57
INFO:root:Chunked 100 in [9, 9, 9, 9, 8, 8, 8, 8, 8, 8, 8, 8]
INFO:root:Considering 100 * 1 jobs for minsize=58
INFO:root:Chunked 100 in [9, 9, 9, 9, 8, 8, 8, 8, 8, 8, 8, 8]
INFO:root:Considering 100 * 1 jobs for minsize=59
INFO:root:Chunked 100 in [9, 9, 9, 9, 8, 8, 8, 8, 8, 8, 8, 8]
INFO:root:Considering 100 * 1 jobs for minsize=60
INFO:root:Chunked 100 in [9, 9, 9, 9, 8, 8, 8, 8, 8, 8, 8, 8]
INFO:root:Considering 100 * 1 jobs for minsize=61
INFO:root:Chunked 100 in [9, 9, 9, 9, 8, 8, 8, 8, 8, 8, 8, 8]
INFO:root:Considering 100 * 1 jobs for minsize=62
INFO:root:Chunked 100 in [9, 9, 9, 9, 8, 8, 8, 8, 8, 8, 8, 8]
INFO:root:Considering 100 * 1 jobs for minsize=63
INFO:root:Chunked 100 in [9, 9, 9, 9, 8, 8, 8, 8, 8, 8, 8, 8]
INFO:root:Considering 100 * 1 jobs for minsize=64
INFO:root:Chunked 100 in [9, 9, 9, 9, 8, 8, 8, 8, 8, 8, 8, 8]
INFO:root:Considering 100 * 1 jobs for minsize=65
INFO:root:Chunked 100 in [9, 9, 9, 9, 8, 8, 8, 8, 8, 8, 8, 8]
INFO:root:Considering 100 * 1 jobs for minsize=66
INFO:root:Chunked 100 in [9, 9, 9, 9, 8, 8, 8, 8, 8, 8, 8, 8]
INFO:root:Considering 100 * 1 jobs for minsize=67
INFO:root:Chunked 100 in [9, 9, 9, 9, 8, 8, 8, 8, 8, 8, 8, 8]
INFO:root:Considering 100 * 1 jobs for minsize=68
INFO:root:Chunked 100 in [9, 9, 9, 9, 8, 8, 8, 8, 8, 8, 8, 8]
INFO:root:Considering 100 * 1 jobs for minsize=69
INFO:root:Chunked 100 in [9, 9, 9, 9, 8, 8, 8, 8, 8, 8, 8, 8]
INFO:root:XX found first (1, 3) is not 7 64
INFO:root:Trace: [(64, [(1, 3) is not 7])]
INFO:root:Trace Quality: [(64, 1)]
INFO:root:Trace Sorted: [(64, 1)]
INFO:root:Finished
INFO:root:Full Trace [(64, [(1, 3) is not 7])]
INFO:root:Trying {'quarterChopMUS': True}
INFO:root:Starting Step 1
INFO:root:Current state [[[[1], [4, 7, 8], [3, 4, 5, 7, 8], [3, 5, 6, 7], [3, 6, 8, 9], [5, 6, 7, 8], [3, 4, 8, 9], [3, 6, 9], [2]], [[2, 3, 8], [9], [3, 7, 8], [4], [1, 2, 3, 6, 8], [1, 2, 6, 7, 8], [1, 3, 8], [5], [3, 6, 8]], [[2, 3, 4, 5, 8], [2, 4, 8], [6], [1, 2, 3, 5], [1, 2, 3, 8, 9], [1, 2, 5, 8], [7], [1, 3, 9], [3, 4, 8, 9]], [[2, 4, 6, 8], [5], [1, 4, 7, 8], [9], [1, 2, 4, 6], [3], [1, 2, 8], [1, 2, 6, 7], [6, 7, 8]], [[2, 3, 4, 6, 8, 9], [1, 2, 4, 6, 8], [1, 3, 4, 8, 9], [1, 2, 6], [7], [1, 2, 4, 6], [1, 2, 3, 5, 8, 9], [1, 2, 3, 6, 9], [3, 5, 6, 8, 9]], [[2, 3, 6, 9], [1, 2, 6, 7], [1, 3, 7, 9], [8], [5], [1, 2, 6], [1, 2, 3, 9], [4], [3, 6, 7, 9]], [[7], [1, 4, 8], [1, 4, 5, 8, 9], [1, 2, 3, 5], [1, 2, 3, 4, 8], [1, 2, 4, 5, 8], [6], [2, 3, 9], [3, 4, 5, 9]], [[4, 5, 6], [3], [1, 4, 5], [1, 2, 5, 6, 7], [1, 2, 4, 6], [9], [2, 4, 5], [8], [4, 5, 7]], [[4, 5, 6, 8, 9], [4, 6, 8], [2], [3, 5, 6, 7], [3, 4, 6, 8], [4, 5, 6, 7, 8], [3, 4, 5, 9], [3, 7, 9], [1]]]]
INFO:root:Doing checkSmall1
INFO:root:Getting tiny MUSes, distance 1, for 1 puzlits, 1 repeats
INFO:root:Chunked 1 in [1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
INFO:root:Doing checkSmall2
INFO:root:Getting tiny MUSes, distance 2, for 1 puzlits, 1 repeats
INFO:root:Chunked 1 in [1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
INFO:root:Considering 100 * 1 jobs for minsize=3
INFO:root:Chunked 100 in [9, 9, 9, 9, 8, 8, 8, 8, 8, 8, 8, 8]
INFO:root:Considering 100 * 1 jobs for minsize=4
INFO:root:Chunked 100 in [9, 9, 9, 9, 8, 8, 8, 8, 8, 8, 8, 8]
INFO:root:Considering 100 * 1 jobs for minsize=5
INFO:root:Chunked 100 in [9, 9, 9, 9, 8, 8, 8, 8, 8, 8, 8, 8]
INFO:root:Considering 100 * 1 jobs for minsize=6
INFO:root:Chunked 100 in [9, 9, 9, 9, 8, 8, 8, 8, 8, 8, 8, 8]
INFO:root:Considering 100 * 1 jobs for minsize=7
INFO:root:Chunked 100 in [9, 9, 9, 9, 8, 8, 8, 8, 8, 8, 8, 8]
INFO:root:Considering 100 * 1 jobs for minsize=8
INFO:root:Chunked 100 in [9, 9, 9, 9, 8, 8, 8, 8, 8, 8, 8, 8]
INFO:root:Considering 100 * 1 jobs for minsize=9
INFO:root:Chunked 100 in [9, 9, 9, 9, 8, 8, 8, 8, 8, 8, 8, 8]
INFO:root:Considering 100 * 1 jobs for minsize=10
INFO:root:Chunked 100 in [9, 9, 9, 9, 8, 8, 8, 8, 8, 8, 8, 8]
INFO:root:Considering 100 * 1 jobs for minsize=11
INFO:root:Chunked 100 in [9, 9, 9, 9, 8, 8, 8, 8, 8, 8, 8, 8]
INFO:root:Considering 100 * 1 jobs for minsize=12
INFO:root:Chunked 100 in [9, 9, 9, 9, 8, 8, 8, 8, 8, 8, 8, 8]
INFO:root:Considering 100 * 1 jobs for minsize=13
INFO:root:Chunked 100 in [9, 9, 9, 9, 8, 8, 8, 8, 8, 8, 8, 8]
INFO:root:Considering 100 * 1 jobs for minsize=14
INFO:root:Chunked 100 in [9, 9, 9, 9, 8, 8, 8, 8, 8, 8, 8, 8]
INFO:root:Considering 100 * 1 jobs for minsize=15
INFO:root:Chunked 100 in [9, 9, 9, 9, 8, 8, 8, 8, 8, 8, 8, 8]
INFO:root:Considering 100 * 1 jobs for minsize=16
INFO:root:Chunked 100 in [9, 9, 9, 9, 8, 8, 8, 8, 8, 8, 8, 8]
INFO:root:Considering 100 * 1 jobs for minsize=17
INFO:root:Chunked 100 in [9, 9, 9, 9, 8, 8, 8, 8, 8, 8, 8, 8]
INFO:root:Considering 100 * 1 jobs for minsize=18
INFO:root:Chunked 100 in [9, 9, 9, 9, 8, 8, 8, 8, 8, 8, 8, 8]
INFO:root:Considering 100 * 1 jobs for minsize=19
INFO:root:Chunked 100 in [9, 9, 9, 9, 8, 8, 8, 8, 8, 8, 8, 8]
INFO:root:Considering 100 * 1 jobs for minsize=20
INFO:root:Chunked 100 in [9, 9, 9, 9, 8, 8, 8, 8, 8, 8, 8, 8]
INFO:root:Considering 100 * 1 jobs for minsize=21
INFO:root:Chunked 100 in [9, 9, 9, 9, 8, 8, 8, 8, 8, 8, 8, 8]
INFO:root:Considering 100 * 1 jobs for minsize=22
INFO:root:Chunked 100 in [9, 9, 9, 9, 8, 8, 8, 8, 8, 8, 8, 8]
INFO:root:Considering 100 * 1 jobs for minsize=23
INFO:root:Chunked 100 in [9, 9, 9, 9, 8, 8, 8, 8, 8, 8, 8, 8]
INFO:root:Considering 100 * 1 jobs for minsize=24
INFO:root:Chunked 100 in [9, 9, 9, 9, 8, 8, 8, 8, 8, 8, 8, 8]
INFO:root:Considering 100 * 1 jobs for minsize=25
INFO:root:Chunked 100 in [9, 9, 9, 9, 8, 8, 8, 8, 8, 8, 8, 8]
INFO:root:Considering 100 * 1 jobs for minsize=26
INFO:root:Chunked 100 in [9, 9, 9, 9, 8, 8, 8, 8, 8, 8, 8, 8]
INFO:root:Considering 100 * 1 jobs for minsize=27
INFO:root:Chunked 100 in [9, 9, 9, 9, 8, 8, 8, 8, 8, 8, 8, 8]
INFO:root:Considering 100 * 1 jobs for minsize=28
INFO:root:Chunked 100 in [9, 9, 9, 9, 8, 8, 8, 8, 8, 8, 8, 8]
INFO:root:Considering 100 * 1 jobs for minsize=29
INFO:root:Chunked 100 in [9, 9, 9, 9, 8, 8, 8, 8, 8, 8, 8, 8]
INFO:root:Considering 100 * 1 jobs for minsize=30
INFO:root:Chunked 100 in [9, 9, 9, 9, 8, 8, 8, 8, 8, 8, 8, 8]
INFO:root:Considering 100 * 1 jobs for minsize=31
INFO:root:Chunked 100 in [9, 9, 9, 9, 8, 8, 8, 8, 8, 8, 8, 8]
INFO:root:Considering 100 * 1 jobs for minsize=32
INFO:root:Chunked 100 in [9, 9, 9, 9, 8, 8, 8, 8, 8, 8, 8, 8]
INFO:root:Considering 100 * 1 jobs for minsize=33
INFO:root:Chunked 100 in [9, 9, 9, 9, 8, 8, 8, 8, 8, 8, 8, 8]
INFO:root:Considering 100 * 1 jobs for minsize=34
INFO:root:Chunked 100 in [9, 9, 9, 9, 8, 8, 8, 8, 8, 8, 8, 8]
INFO:root:Considering 100 * 1 jobs for minsize=35
INFO:root:Chunked 100 in [9, 9, 9, 9, 8, 8, 8, 8, 8, 8, 8, 8]
INFO:root:Considering 100 * 1 jobs for minsize=36
INFO:root:Chunked 100 in [9, 9, 9, 9, 8, 8, 8, 8, 8, 8, 8, 8]
INFO:root:Considering 100 * 1 jobs for minsize=37
INFO:root:Chunked 100 in [9, 9, 9, 9, 8, 8, 8, 8, 8, 8, 8, 8]
INFO:root:Considering 100 * 1 jobs for minsize=38
INFO:root:Chunked 100 in [9, 9, 9, 9, 8, 8, 8, 8, 8, 8, 8, 8]
INFO:root:Considering 100 * 1 jobs for minsize=39
INFO:root:Chunked 100 in [9, 9, 9, 9, 8, 8, 8, 8, 8, 8, 8, 8]
INFO:root:Considering 100 * 1 jobs for minsize=40
INFO:root:Chunked 100 in [9, 9, 9, 9, 8, 8, 8, 8, 8, 8, 8, 8]
INFO:root:Considering 100 * 1 jobs for minsize=41
INFO:root:Chunked 100 in [9, 9, 9, 9, 8, 8, 8, 8, 8, 8, 8, 8]
INFO:root:Considering 100 * 1 jobs for minsize=42
INFO:root:Chunked 100 in [9, 9, 9, 9, 8, 8, 8, 8, 8, 8, 8, 8]
INFO:root:Considering 100 * 1 jobs for minsize=43
INFO:root:Chunked 100 in [9, 9, 9, 9, 8, 8, 8, 8, 8, 8, 8, 8]
INFO:root:Considering 100 * 1 jobs for minsize=44
INFO:root:Chunked 100 in [9, 9, 9, 9, 8, 8, 8, 8, 8, 8, 8, 8]
INFO:root:Considering 100 * 1 jobs for minsize=45
INFO:root:Chunked 100 in [9, 9, 9, 9, 8, 8, 8, 8, 8, 8, 8, 8]
INFO:root:Considering 100 * 1 jobs for minsize=46
INFO:root:Chunked 100 in [9, 9, 9, 9, 8, 8, 8, 8, 8, 8, 8, 8]
INFO:root:Considering 100 * 1 jobs for minsize=47
INFO:root:Chunked 100 in [9, 9, 9, 9, 8, 8, 8, 8, 8, 8, 8, 8]
INFO:root:Considering 100 * 1 jobs for minsize=48
INFO:root:Chunked 100 in [9, 9, 9, 9, 8, 8, 8, 8, 8, 8, 8, 8]
INFO:root:Considering 100 * 1 jobs for minsize=49
INFO:root:Chunked 100 in [9, 9, 9, 9, 8, 8, 8, 8, 8, 8, 8, 8]
INFO:root:Considering 100 * 1 jobs for minsize=50
INFO:root:Chunked 100 in [9, 9, 9, 9, 8, 8, 8, 8, 8, 8, 8, 8]
INFO:root:Considering 100 * 1 jobs for minsize=51
INFO:root:Chunked 100 in [9, 9, 9, 9, 8, 8, 8, 8, 8, 8, 8, 8]
INFO:root:Considering 100 * 1 jobs for minsize=52
INFO:root:Chunked 100 in [9, 9, 9, 9, 8, 8, 8, 8, 8, 8, 8, 8]
INFO:root:Considering 100 * 1 jobs for minsize=53
INFO:root:Chunked 100 in [9, 9, 9, 9, 8, 8, 8, 8, 8, 8, 8, 8]
INFO:root:Considering 100 * 1 jobs for minsize=54
INFO:root:Chunked 100 in [9, 9, 9, 9, 8, 8, 8, 8, 8, 8, 8, 8]
INFO:root:Considering 100 * 1 jobs for minsize=55
INFO:root:Chunked 100 in [9, 9, 9, 9, 8, 8, 8, 8, 8, 8, 8, 8]
INFO:root:Considering 100 * 1 jobs for minsize=56
INFO:root:Chunked 100 in [9, 9, 9, 9, 8, 8, 8, 8, 8, 8, 8, 8]
INFO:root:Considering 100 * 1 jobs for minsize=57
INFO:root:Chunked 100 in [9, 9, 9, 9, 8, 8, 8, 8, 8, 8, 8, 8]
INFO:root:Considering 100 * 1 jobs for minsize=58
INFO:root:Chunked 100 in [9, 9, 9, 9, 8, 8, 8, 8, 8, 8, 8, 8]
INFO:root:Considering 100 * 1 jobs for minsize=59
INFO:root:Chunked 100 in [9, 9, 9, 9, 8, 8, 8, 8, 8, 8, 8, 8]
INFO:root:Considering 100 * 1 jobs for minsize=60
INFO:root:Chunked 100 in [9, 9, 9, 9, 8, 8, 8, 8, 8, 8, 8, 8]
INFO:root:Considering 100 * 1 jobs for minsize=61
INFO:root:Chunked 100 in [9, 9, 9, 9, 8, 8, 8, 8, 8, 8, 8, 8]
INFO:root:Considering 100 * 1 jobs for minsize=62
INFO:root:Chunked 100 in [9, 9, 9, 9, 8, 8, 8, 8, 8, 8, 8, 8]
INFO:root:Considering 100 * 1 jobs for minsize=63
INFO:root:Chunked 100 in [9, 9, 9, 9, 8, 8, 8, 8, 8, 8, 8, 8]
INFO:root:XX found first (1, 3) is not 7 63
INFO:root:Trace: [(63, [(1, 3) is not 7])]
INFO:root:Trace Quality: [(63, 1)]
INFO:root:Trace Sorted: [(63, 1)]
INFO:root:Finished
INFO:root:Full Trace [(63, [(1, 3) is not 7])]
INFO:root:Trying {'minPrecheckMUS': True}
INFO:root:Starting Step 1
INFO:root:Current state [[[[1], [4, 7, 8], [3, 4, 5, 7, 8], [3, 5, 6, 7], [3, 6, 8, 9], [5, 6, 7, 8], [3, 4, 8, 9], [3, 6, 9], [2]], [[2, 3, 8], [9], [3, 7, 8], [4], [1, 2, 3, 6, 8], [1, 2, 6, 7, 8], [1, 3, 8], [5], [3, 6, 8]], [[2, 3, 4, 5, 8], [2, 4, 8], [6], [1, 2, 3, 5], [1, 2, 3, 8, 9], [1, 2, 5, 8], [7], [1, 3, 9], [3, 4, 8, 9]], [[2, 4, 6, 8], [5], [1, 4, 7, 8], [9], [1, 2, 4, 6], [3], [1, 2, 8], [1, 2, 6, 7], [6, 7, 8]], [[2, 3, 4, 6, 8, 9], [1, 2, 4, 6, 8], [1, 3, 4, 8, 9], [1, 2, 6], [7], [1, 2, 4, 6], [1, 2, 3, 5, 8, 9], [1, 2, 3, 6, 9], [3, 5, 6, 8, 9]], [[2, 3, 6, 9], [1, 2, 6, 7], [1, 3, 7, 9], [8], [5], [1, 2, 6], [1, 2, 3, 9], [4], [3, 6, 7, 9]], [[7], [1, 4, 8], [1, 4, 5, 8, 9], [1, 2, 3, 5], [1, 2, 3, 4, 8], [1, 2, 4, 5, 8], [6], [2, 3, 9], [3, 4, 5, 9]], [[4, 5, 6], [3], [1, 4, 5], [1, 2, 5, 6, 7], [1, 2, 4, 6], [9], [2, 4, 5], [8], [4, 5, 7]], [[4, 5, 6, 8, 9], [4, 6, 8], [2], [3, 5, 6, 7], [3, 4, 6, 8], [4, 5, 6, 7, 8], [3, 4, 5, 9], [3, 7, 9], [1]]]]
INFO:root:Doing checkSmall1
INFO:root:Getting tiny MUSes, distance 1, for 1 puzlits, 1 repeats
INFO:root:Chunked 1 in [1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
INFO:root:Doing checkSmall2
INFO:root:Getting tiny MUSes, distance 2, for 1 puzlits, 1 repeats
INFO:root:Chunked 1 in [1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
INFO:root:Considering 100 * 1 jobs for minsize=3
INFO:root:Chunked 100 in [9, 9, 9, 9, 8, 8, 8, 8, 8, 8, 8, 8]
INFO:root:Considering 100 * 1 jobs for minsize=4
INFO:root:Chunked 100 in [9, 9, 9, 9, 8, 8, 8, 8, 8, 8, 8, 8]
INFO:root:Considering 100 * 1 jobs for minsize=5
INFO:root:Chunked 100 in [9, 9, 9, 9, 8, 8, 8, 8, 8, 8, 8, 8]
INFO:root:Considering 100 * 1 jobs for minsize=6
INFO:root:Chunked 100 in [9, 9, 9, 9, 8, 8, 8, 8, 8, 8, 8, 8]
INFO:root:Considering 100 * 1 jobs for minsize=7
INFO:root:Chunked 100 in [9, 9, 9, 9, 8, 8, 8, 8, 8, 8, 8, 8]
INFO:root:Considering 100 * 1 jobs for minsize=8
INFO:root:Chunked 100 in [9, 9, 9, 9, 8, 8, 8, 8, 8, 8, 8, 8]
INFO:root:Considering 100 * 1 jobs for minsize=9
INFO:root:Chunked 100 in [9, 9, 9, 9, 8, 8, 8, 8, 8, 8, 8, 8]
INFO:root:Considering 100 * 1 jobs for minsize=10
INFO:root:Chunked 100 in [9, 9, 9, 9, 8, 8, 8, 8, 8, 8, 8, 8]
INFO:root:Considering 100 * 1 jobs for minsize=11
INFO:root:Chunked 100 in [9, 9, 9, 9, 8, 8, 8, 8, 8, 8, 8, 8]
INFO:root:Considering 100 * 1 jobs for minsize=12
INFO:root:Chunked 100 in [9, 9, 9, 9, 8, 8, 8, 8, 8, 8, 8, 8]
INFO:root:Considering 100 * 1 jobs for minsize=13
INFO:root:Chunked 100 in [9, 9, 9, 9, 8, 8, 8, 8, 8, 8, 8, 8]
INFO:root:Considering 100 * 1 jobs for minsize=14
INFO:root:Chunked 100 in [9, 9, 9, 9, 8, 8, 8, 8, 8, 8, 8, 8]
INFO:root:Considering 100 * 1 jobs for minsize=15
INFO:root:Chunked 100 in [9, 9, 9, 9, 8, 8, 8, 8, 8, 8, 8, 8]
INFO:root:Considering 100 * 1 jobs for minsize=16
INFO:root:Chunked 100 in [9, 9, 9, 9, 8, 8, 8, 8, 8, 8, 8, 8]
INFO:root:Considering 100 * 1 jobs for minsize=17
INFO:root:Chunked 100 in [9, 9, 9, 9, 8, 8, 8, 8, 8, 8, 8, 8]
INFO:root:Considering 100 * 1 jobs for minsize=18
INFO:root:Chunked 100 in [9, 9, 9, 9, 8, 8, 8, 8, 8, 8, 8, 8]
INFO:root:Considering 100 * 1 jobs for minsize=19
INFO:root:Chunked 100 in [9, 9, 9, 9, 8, 8, 8, 8, 8, 8, 8, 8]
INFO:root:Considering 100 * 1 jobs for minsize=20
INFO:root:Chunked 100 in [9, 9, 9, 9, 8, 8, 8, 8, 8, 8, 8, 8]
INFO:root:Considering 100 * 1 jobs for minsize=21
INFO:root:Chunked 100 in [9, 9, 9, 9, 8, 8, 8, 8, 8, 8, 8, 8]
INFO:root:Considering 100 * 1 jobs for minsize=22
INFO:root:Chunked 100 in [9, 9, 9, 9, 8, 8, 8, 8, 8, 8, 8, 8]
INFO:root:Considering 100 * 1 jobs for minsize=23
INFO:root:Chunked 100 in [9, 9, 9, 9, 8, 8, 8, 8, 8, 8, 8, 8]
INFO:root:Considering 100 * 1 jobs for minsize=24
INFO:root:Chunked 100 in [9, 9, 9, 9, 8, 8, 8, 8, 8, 8, 8, 8]
INFO:root:Considering 100 * 1 jobs for minsize=25
INFO:root:Chunked 100 in [9, 9, 9, 9, 8, 8, 8, 8, 8, 8, 8, 8]
INFO:root:Considering 100 * 1 jobs for minsize=26
INFO:root:Chunked 100 in [9, 9, 9, 9, 8, 8, 8, 8, 8, 8, 8, 8]
INFO:root:Considering 100 * 1 jobs for minsize=27
INFO:root:Chunked 100 in [9, 9, 9, 9, 8, 8, 8, 8, 8, 8, 8, 8]
INFO:root:Considering 100 * 1 jobs for minsize=28
INFO:root:Chunked 100 in [9, 9, 9, 9, 8, 8, 8, 8, 8, 8, 8, 8]
INFO:root:Considering 100 * 1 jobs for minsize=29
INFO:root:Chunked 100 in [9, 9, 9, 9, 8, 8, 8, 8, 8, 8, 8, 8]
INFO:root:Considering 100 * 1 jobs for minsize=30
INFO:root:Chunked 100 in [9, 9, 9, 9, 8, 8, 8, 8, 8, 8, 8, 8]
INFO:root:Considering 100 * 1 jobs for minsize=31
INFO:root:Chunked 100 in [9, 9, 9, 9, 8, 8, 8, 8, 8, 8, 8, 8]
INFO:root:Considering 100 * 1 jobs for minsize=32
INFO:root:Chunked 100 in [9, 9, 9, 9, 8, 8, 8, 8, 8, 8, 8, 8]
INFO:root:Considering 100 * 1 jobs for minsize=33
INFO:root:Chunked 100 in [9, 9, 9, 9, 8, 8, 8, 8, 8, 8, 8, 8]
INFO:root:Considering 100 * 1 jobs for minsize=34
INFO:root:Chunked 100 in [9, 9, 9, 9, 8, 8, 8, 8, 8, 8, 8, 8]
INFO:root:Considering 100 * 1 jobs for minsize=35
INFO:root:Chunked 100 in [9, 9, 9, 9, 8, 8, 8, 8, 8, 8, 8, 8]
INFO:root:Considering 100 * 1 jobs for minsize=36
INFO:root:Chunked 100 in [9, 9, 9, 9, 8, 8, 8, 8, 8, 8, 8, 8]
INFO:root:Considering 100 * 1 jobs for minsize=37
INFO:root:Chunked 100 in [9, 9, 9, 9, 8, 8, 8, 8, 8, 8, 8, 8]
INFO:root:Considering 100 * 1 jobs for minsize=38
INFO:root:Chunked 100 in [9, 9, 9, 9, 8, 8, 8, 8, 8, 8, 8, 8]
INFO:root:Considering 100 * 1 jobs for minsize=39
INFO:root:Chunked 100 in [9, 9, 9, 9, 8, 8, 8, 8, 8, 8, 8, 8]
INFO:root:Considering 100 * 1 jobs for minsize=40
INFO:root:Chunked 100 in [9, 9, 9, 9, 8, 8, 8, 8, 8, 8, 8, 8]
INFO:root:Considering 100 * 1 jobs for minsize=41
INFO:root:Chunked 100 in [9, 9, 9, 9, 8, 8, 8, 8, 8, 8, 8, 8]
INFO:root:Considering 100 * 1 jobs for minsize=42
INFO:root:Chunked 100 in [9, 9, 9, 9, 8, 8, 8, 8, 8, 8, 8, 8]
INFO:root:Considering 100 * 1 jobs for minsize=43
INFO:root:Chunked 100 in [9, 9, 9, 9, 8, 8, 8, 8, 8, 8, 8, 8]
INFO:root:Considering 100 * 1 jobs for minsize=44
INFO:root:Chunked 100 in [9, 9, 9, 9, 8, 8, 8, 8, 8, 8, 8, 8]
INFO:root:Considering 100 * 1 jobs for minsize=45
INFO:root:Chunked 100 in [9, 9, 9, 9, 8, 8, 8, 8, 8, 8, 8, 8]
INFO:root:Considering 100 * 1 jobs for minsize=46
INFO:root:Chunked 100 in [9, 9, 9, 9, 8, 8, 8, 8, 8, 8, 8, 8]
INFO:root:Considering 100 * 1 jobs for minsize=47
INFO:root:Chunked 100 in [9, 9, 9, 9, 8, 8, 8, 8, 8, 8, 8, 8]
INFO:root:Considering 100 * 1 jobs for minsize=48
INFO:root:Chunked 100 in [9, 9, 9, 9, 8, 8, 8, 8, 8, 8, 8, 8]
INFO:root:Considering 100 * 1 jobs for minsize=49
INFO:root:Chunked 100 in [9, 9, 9, 9, 8, 8, 8, 8, 8, 8, 8, 8]
INFO:root:Considering 100 * 1 jobs for minsize=50
INFO:root:Chunked 100 in [9, 9, 9, 9, 8, 8, 8, 8, 8, 8, 8, 8]
INFO:root:Considering 100 * 1 jobs for minsize=51
INFO:root:Chunked 100 in [9, 9, 9, 9, 8, 8, 8, 8, 8, 8, 8, 8]
INFO:root:Considering 100 * 1 jobs for minsize=52
INFO:root:Chunked 100 in [9, 9, 9, 9, 8, 8, 8, 8, 8, 8, 8, 8]
INFO:root:Considering 100 * 1 jobs for minsize=53
INFO:root:Chunked 100 in [9, 9, 9, 9, 8, 8, 8, 8, 8, 8, 8, 8]
INFO:root:Considering 100 * 1 jobs for minsize=54
INFO:root:Chunked 100 in [9, 9, 9, 9, 8, 8, 8, 8, 8, 8, 8, 8]
INFO:root:Considering 100 * 1 jobs for minsize=55
INFO:root:Chunked 100 in [9, 9, 9, 9, 8, 8, 8, 8, 8, 8, 8, 8]
INFO:root:Considering 100 * 1 jobs for minsize=56
INFO:root:Chunked 100 in [9, 9, 9, 9, 8, 8, 8, 8, 8, 8, 8, 8]
INFO:root:Considering 100 * 1 jobs for minsize=57
INFO:root:Chunked 100 in [9, 9, 9, 9, 8, 8, 8, 8, 8, 8, 8, 8]
INFO:root:Long time solveLimited: 7741 5.648265600204468
INFO:root:Considering 100 * 1 jobs for minsize=58
INFO:root:Chunked 100 in [9, 9, 9, 9, 8, 8, 8, 8, 8, 8, 8, 8]
INFO:root:Long time solveLimited: 7772 5.277369737625122
INFO:root:Long time solveLimited: 6882 5.748735666275024
INFO:root:Considering 100 * 1 jobs for minsize=59
INFO:root:Chunked 100 in [9, 9, 9, 9, 8, 8, 8, 8, 8, 8, 8, 8]
INFO:root:Considering 100 * 1 jobs for minsize=60
INFO:root:Chunked 100 in [9, 9, 9, 9, 8, 8, 8, 8, 8, 8, 8, 8]
INFO:root:Considering 100 * 1 jobs for minsize=61
INFO:root:Chunked 100 in [9, 9, 9, 9, 8, 8, 8, 8, 8, 8, 8, 8]
INFO:root:Considering 100 * 1 jobs for minsize=62
INFO:root:Chunked 100 in [9, 9, 9, 9, 8, 8, 8, 8, 8, 8, 8, 8]
INFO:root:Considering 100 * 1 jobs for minsize=63
INFO:root:Chunked 100 in [9, 9, 9, 9, 8, 8, 8, 8, 8, 8, 8, 8]
INFO:root:Long time solveLimited: 6759 5.214620113372803
INFO:root:Long time solveLimited: 7743 5.159619331359863
INFO:root:Long time solveLimited: 7497 5.201119899749756
INFO:root:Considering 100 * 1 jobs for minsize=64
INFO:root:Chunked 100 in [9, 9, 9, 9, 8, 8, 8, 8, 8, 8, 8, 8]
INFO:root:Long time solveLimited: 7858 5.4351582527160645
INFO:root:Considering 100 * 1 jobs for minsize=65
INFO:root:Chunked 100 in [9, 9, 9, 9, 8, 8, 8, 8, 8, 8, 8, 8]
INFO:root:Long time solveLimited: 8635 5.808521509170532
INFO:root:Considering 100 * 1 jobs for minsize=66
INFO:root:Chunked 100 in [9, 9, 9, 9, 8, 8, 8, 8, 8, 8, 8, 8]
INFO:root:Long time solveLimited: 8581 5.268074035644531
INFO:root:Long time solveLimited: 7645 5.451759576797485
INFO:root:Long time solveLimited: 9907 6.835704803466797
INFO:root:Long time solveLimited: 7177 5.264556884765625
INFO:root:Considering 100 * 1 jobs for minsize=67
INFO:root:Chunked 100 in [9, 9, 9, 9, 8, 8, 8, 8, 8, 8, 8, 8]
INFO:root:Long time solveLimited: 8760 5.588819265365601
INFO:root:Long time solveLimited: 7682 5.254931926727295
INFO:root:Long time solveLimited: 7913 5.2963385581970215
INFO:root:Considering 100 * 1 jobs for minsize=68
INFO:root:Chunked 100 in [9, 9, 9, 9, 8, 8, 8, 8, 8, 8, 8, 8]
INFO:root:Long time solveLimited: 7947 5.985965967178345
INFO:root:Considering 100 * 1 jobs for minsize=69
INFO:root:Chunked 100 in [9, 9, 9, 9, 8, 8, 8, 8, 8, 8, 8, 8]
INFO:root:Long time solveLimited: 7231 5.092655420303345
INFO:root:Considering 100 * 1 jobs for minsize=70
INFO:root:Chunked 100 in [9, 9, 9, 9, 8, 8, 8, 8, 8, 8, 8, 8]
INFO:root:Considering 100 * 1 jobs for minsize=71
INFO:root:Chunked 100 in [9, 9, 9, 9, 8, 8, 8, 8, 8, 8, 8, 8]
INFO:root:Long time solveLimited: 7246 7.539217472076416
INFO:root:Long time solveLimited: 7976 6.778980016708374
INFO:root:Long time solveLimited: 8268 5.876070022583008
INFO:root:Considering 100 * 1 jobs for minsize=72
INFO:root:Chunked 100 in [9, 9, 9, 9, 8, 8, 8, 8, 8, 8, 8, 8]
INFO:root:Long time solveLimited: 7435 6.543393611907959
INFO:root:Long time solveLimited: 7579 7.953691720962524
INFO:root:Considering 100 * 1 jobs for minsize=73
INFO:root:Chunked 100 in [9, 9, 9, 9, 8, 8, 8, 8, 8, 8, 8, 8]
INFO:root:Long time solveLimited: 7833 6.628113746643066
INFO:root:Long time solveLimited: 8046 5.931646823883057
INFO:root:Long time solveLimited: 7478 5.463162422180176
INFO:root:Considering 100 * 1 jobs for minsize=74
INFO:root:Chunked 100 in [9, 9, 9, 9, 8, 8, 8, 8, 8, 8, 8, 8]
INFO:root:Long time solveLimited: 6611 5.071120738983154
INFO:root:Considering 100 * 1 jobs for minsize=75
INFO:root:Chunked 100 in [9, 9, 9, 9, 8, 8, 8, 8, 8, 8, 8, 8]
INFO:root:Long time solveLimited: 7564 5.771032810211182
INFO:root:Long time solveLimited: 7219 6.676067113876343
INFO:root:Long time solveLimited: 7495 5.156136751174927
INFO:root:XX found first (1, 3) is not 7 70
INFO:root:Trace: [(70, [(1, 3) is not 7])]
INFO:root:Trace Quality: [(70, 1)]
INFO:root:Trace Sorted: [(70, 1)]
INFO:root:Finished
INFO:root:Full Trace [(70, [(1, 3) is not 7])]
INFO:root:Trying {'gallopingMUSes': True}
INFO:root:Starting Step 1
INFO:root:Current state [[[[1], [4, 7, 8], [3, 4, 5, 7, 8], [3, 5, 6, 7], [3, 6, 8, 9], [5, 6, 7, 8], [3, 4, 8, 9], [3, 6, 9], [2]], [[2, 3, 8], [9], [3, 7, 8], [4], [1, 2, 3, 6, 8], [1, 2, 6, 7, 8], [1, 3, 8], [5], [3, 6, 8]], [[2, 3, 4, 5, 8], [2, 4, 8], [6], [1, 2, 3, 5], [1, 2, 3, 8, 9], [1, 2, 5, 8], [7], [1, 3, 9], [3, 4, 8, 9]], [[2, 4, 6, 8], [5], [1, 4, 7, 8], [9], [1, 2, 4, 6], [3], [1, 2, 8], [1, 2, 6, 7], [6, 7, 8]], [[2, 3, 4, 6, 8, 9], [1, 2, 4, 6, 8], [1, 3, 4, 8, 9], [1, 2, 6], [7], [1, 2, 4, 6], [1, 2, 3, 5, 8, 9], [1, 2, 3, 6, 9], [3, 5, 6, 8, 9]], [[2, 3, 6, 9], [1, 2, 6, 7], [1, 3, 7, 9], [8], [5], [1, 2, 6], [1, 2, 3, 9], [4], [3, 6, 7, 9]], [[7], [1, 4, 8], [1, 4, 5, 8, 9], [1, 2, 3, 5], [1, 2, 3, 4, 8], [1, 2, 4, 5, 8], [6], [2, 3, 9], [3, 4, 5, 9]], [[4, 5, 6], [3], [1, 4, 5], [1, 2, 5, 6, 7], [1, 2, 4, 6], [9], [2, 4, 5], [8], [4, 5, 7]], [[4, 5, 6, 8, 9], [4, 6, 8], [2], [3, 5, 6, 7], [3, 4, 6, 8], [4, 5, 6, 7, 8], [3, 4, 5, 9], [3, 7, 9], [1]]]]
INFO:root:Doing checkSmall1
INFO:root:Getting tiny MUSes, distance 1, for 1 puzlits, 1 repeats
INFO:root:Chunked 1 in [1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
INFO:root:Doing checkSmall2
INFO:root:Getting tiny MUSes, distance 2, for 1 puzlits, 1 repeats
INFO:root:Chunked 1 in [1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
INFO:root:Considering 100 * 1 jobs for minsize=3
INFO:root:Chunked 100 in [9, 9, 9, 9, 8, 8, 8, 8, 8, 8, 8, 8]
INFO:root:Considering 100 * 1 jobs for minsize=4
INFO:root:Chunked 100 in [9, 9, 9, 9, 8, 8, 8, 8, 8, 8, 8, 8]
INFO:root:Considering 100 * 1 jobs for minsize=5
INFO:root:Chunked 100 in [9, 9, 9, 9, 8, 8, 8, 8, 8, 8, 8, 8]
INFO:root:Considering 100 * 1 jobs for minsize=6
INFO:root:Chunked 100 in [9, 9, 9, 9, 8, 8, 8, 8, 8, 8, 8, 8]
INFO:root:Considering 100 * 1 jobs for minsize=7
INFO:root:Chunked 100 in [9, 9, 9, 9, 8, 8, 8, 8, 8, 8, 8, 8]
INFO:root:Considering 100 * 1 jobs for minsize=8
INFO:root:Chunked 100 in [9, 9, 9, 9, 8, 8, 8, 8, 8, 8, 8, 8]
INFO:root:Considering 100 * 1 jobs for minsize=9
INFO:root:Chunked 100 in [9, 9, 9, 9, 8, 8, 8, 8, 8, 8, 8, 8]
INFO:root:Considering 100 * 1 jobs for minsize=10
INFO:root:Chunked 100 in [9, 9, 9, 9, 8, 8, 8, 8, 8, 8, 8, 8]
INFO:root:Considering 100 * 1 jobs for minsize=11
INFO:root:Chunked 100 in [9, 9, 9, 9, 8, 8, 8, 8, 8, 8, 8, 8]
INFO:root:Considering 100 * 1 jobs for minsize=12
INFO:root:Chunked 100 in [9, 9, 9, 9, 8, 8, 8, 8, 8, 8, 8, 8]
INFO:root:Considering 100 * 1 jobs for minsize=13
INFO:root:Chunked 100 in [9, 9, 9, 9, 8, 8, 8, 8, 8, 8, 8, 8]
INFO:root:Considering 100 * 1 jobs for minsize=14
INFO:root:Chunked 100 in [9, 9, 9, 9, 8, 8, 8, 8, 8, 8, 8, 8]
INFO:root:Considering 100 * 1 jobs for minsize=15
INFO:root:Chunked 100 in [9, 9, 9, 9, 8, 8, 8, 8, 8, 8, 8, 8]
INFO:root:Considering 100 * 1 jobs for minsize=16
INFO:root:Chunked 100 in [9, 9, 9, 9, 8, 8, 8, 8, 8, 8, 8, 8]
INFO:root:Considering 100 * 1 jobs for minsize=17
INFO:root:Chunked 100 in [9, 9, 9, 9, 8, 8, 8, 8, 8, 8, 8, 8]
INFO:root:Considering 100 * 1 jobs for minsize=18
INFO:root:Chunked 100 in [9, 9, 9, 9, 8, 8, 8, 8, 8, 8, 8, 8]
INFO:root:Considering 100 * 1 jobs for minsize=19
INFO:root:Chunked 100 in [9, 9, 9, 9, 8, 8, 8, 8, 8, 8, 8, 8]
INFO:root:Considering 100 * 1 jobs for minsize=20
INFO:root:Chunked 100 in [9, 9, 9, 9, 8, 8, 8, 8, 8, 8, 8, 8]
INFO:root:Considering 100 * 1 jobs for minsize=21
INFO:root:Chunked 100 in [9, 9, 9, 9, 8, 8, 8, 8, 8, 8, 8, 8]
INFO:root:Considering 100 * 1 jobs for minsize=22
INFO:root:Chunked 100 in [9, 9, 9, 9, 8, 8, 8, 8, 8, 8, 8, 8]
INFO:root:Considering 100 * 1 jobs for minsize=23
INFO:root:Chunked 100 in [9, 9, 9, 9, 8, 8, 8, 8, 8, 8, 8, 8]
INFO:root:Considering 100 * 1 jobs for minsize=24
INFO:root:Chunked 100 in [9, 9, 9, 9, 8, 8, 8, 8, 8, 8, 8, 8]
INFO:root:Considering 100 * 1 jobs for minsize=25
INFO:root:Chunked 100 in [9, 9, 9, 9, 8, 8, 8, 8, 8, 8, 8, 8]
INFO:root:Considering 100 * 1 jobs for minsize=26
INFO:root:Chunked 100 in [9, 9, 9, 9, 8, 8, 8, 8, 8, 8, 8, 8]
INFO:root:Considering 100 * 1 jobs for minsize=27
INFO:root:Chunked 100 in [9, 9, 9, 9, 8, 8, 8, 8, 8, 8, 8, 8]
INFO:root:Considering 100 * 1 jobs for minsize=28
INFO:root:Chunked 100 in [9, 9, 9, 9, 8, 8, 8, 8, 8, 8, 8, 8]
INFO:root:Considering 100 * 1 jobs for minsize=29
INFO:root:Chunked 100 in [9, 9, 9, 9, 8, 8, 8, 8, 8, 8, 8, 8]
INFO:root:Considering 100 * 1 jobs for minsize=30
INFO:root:Chunked 100 in [9, 9, 9, 9, 8, 8, 8, 8, 8, 8, 8, 8]
INFO:root:Long time solve: 7457 5.119972229003906
INFO:root:Considering 100 * 1 jobs for minsize=31
INFO:root:Chunked 100 in [9, 9, 9, 9, 8, 8, 8, 8, 8, 8, 8, 8]
INFO:root:Long time solve: 6818 5.002948999404907
INFO:root:Considering 100 * 1 jobs for minsize=32
INFO:root:Chunked 100 in [9, 9, 9, 9, 8, 8, 8, 8, 8, 8, 8, 8]
INFO:root:Considering 100 * 1 jobs for minsize=33
INFO:root:Chunked 100 in [9, 9, 9, 9, 8, 8, 8, 8, 8, 8, 8, 8]
INFO:root:Long time solve: 7226 5.710547685623169
INFO:root:Considering 100 * 1 jobs for minsize=34
INFO:root:Chunked 100 in [9, 9, 9, 9, 8, 8, 8, 8, 8, 8, 8, 8]
INFO:root:Long time solve: 7822 5.597592830657959
INFO:root:Long time solve: 7635 5.94974946975708
INFO:root:Long time solve: 8452 5.72023606300354
INFO:root:Long time solve: 7530 7.0511474609375
INFO:root:Considering 100 * 1 jobs for minsize=35
INFO:root:Chunked 100 in [9, 9, 9, 9, 8, 8, 8, 8, 8, 8, 8, 8]
INFO:root:Long time solve: 7330 7.063928842544556
INFO:root:Considering 100 * 1 jobs for minsize=36
INFO:root:Chunked 100 in [9, 9, 9, 9, 8, 8, 8, 8, 8, 8, 8, 8]
INFO:root:Long time solve: 7821 7.238344669342041
INFO:root:Considering 100 * 1 jobs for minsize=37
INFO:root:Chunked 100 in [9, 9, 9, 9, 8, 8, 8, 8, 8, 8, 8, 8]
INFO:root:Long time solve: 7874 5.994747877120972
INFO:root:Long time solve: 7148 7.406246900558472
INFO:root:Long time solve: 7472 6.928377389907837
INFO:root:Considering 100 * 1 jobs for minsize=38
INFO:root:Chunked 100 in [9, 9, 9, 9, 8, 8, 8, 8, 8, 8, 8, 8]
INFO:root:Long time solve: 7552 5.780071258544922
INFO:root:Long time solve: 8084 5.664646863937378
INFO:root:Long time solve: 7793 5.920347213745117
INFO:root:Long time solve: 7188 8.328350067138672
INFO:root:Long time solve: 7042 5.9569079875946045
INFO:root:Long time solve: 7369 5.290408372879028
INFO:root:Considering 100 * 1 jobs for minsize=39
INFO:root:Chunked 100 in [9, 9, 9, 9, 8, 8, 8, 8, 8, 8, 8, 8]
INFO:root:Long time solve: 8292 7.108449459075928
INFO:root:Long time solve: 7632 5.324499607086182
INFO:root:Considering 100 * 1 jobs for minsize=40
INFO:root:Chunked 100 in [9, 9, 9, 9, 8, 8, 8, 8, 8, 8, 8, 8]
INFO:root:Long time solve: 7798 6.72536563873291
INFO:root:Long time solve: 7347 5.289933919906616
INFO:root:Considering 100 * 1 jobs for minsize=41
INFO:root:Chunked 100 in [9, 9, 9, 9, 8, 8, 8, 8, 8, 8, 8, 8]
INFO:root:Long time solve: 7811 6.500042200088501
INFO:root:Long time solve: 6650 5.163426637649536
INFO:root:Considering 100 * 1 jobs for minsize=42
INFO:root:Chunked 100 in [9, 9, 9, 9, 8, 8, 8, 8, 8, 8, 8, 8]
INFO:root:Long time solve: 7243 6.207414865493774
INFO:root:Long time solve: 8079 7.749022722244263
INFO:root:Long time solve: 7414 5.9385716915130615
INFO:root:Long time solve: 6809 5.640330076217651
INFO:root:Considering 100 * 1 jobs for minsize=43
INFO:root:Chunked 100 in [9, 9, 9, 9, 8, 8, 8, 8, 8, 8, 8, 8]
INFO:root:Long time solve: 8484 5.02978777885437
INFO:root:Long time solve: 7408 8.066293001174927
INFO:root:Long time solve: 7362 8.212088584899902
INFO:root:Considering 100 * 1 jobs for minsize=44
INFO:root:Chunked 100 in [9, 9, 9, 9, 8, 8, 8, 8, 8, 8, 8, 8]
INFO:root:Long time solve: 6955 9.769554615020752
INFO:root:Long time solve: 7224 8.480562686920166
INFO:root:Long time solve: 8433 9.103562593460083
INFO:root:Considering 100 * 1 jobs for minsize=45
INFO:root:Chunked 100 in [9, 9, 9, 9, 8, 8, 8, 8, 8, 8, 8, 8]
INFO:root:Long time solve: 7691 9.265696048736572
INFO:root:Long time solve: 7991 10.350139617919922
INFO:root:Long time solve: 7662 8.824049949645996
INFO:root:Long time solve: 7506 7.905750513076782
INFO:root:Long time solve: 6437 6.300745725631714
INFO:root:Long time solve: 8054 5.754684925079346
INFO:root:Considering 100 * 1 jobs for minsize=46
INFO:root:Chunked 100 in [9, 9, 9, 9, 8, 8, 8, 8, 8, 8, 8, 8]
INFO:root:Long time solve: 8484 10.790278911590576
INFO:root:Long time solve: 7016 10.565699577331543
INFO:root:Considering 100 * 1 jobs for minsize=47
INFO:root:Chunked 100 in [9, 9, 9, 9, 8, 8, 8, 8, 8, 8, 8, 8]
INFO:root:Long time solve: 7806 5.254434823989868
INFO:root:Considering 100 * 1 jobs for minsize=48
INFO:root:Chunked 100 in [9, 9, 9, 9, 8, 8, 8, 8, 8, 8, 8, 8]
INFO:root:Long time solve: 6950 6.041202545166016
INFO:root:Long time solve: 6982 8.714096784591675
INFO:root:Long time solve: 6698 5.592979431152344
INFO:root:Considering 100 * 1 jobs for minsize=49
INFO:root:Chunked 100 in [9, 9, 9, 9, 8, 8, 8, 8, 8, 8, 8, 8]
INFO:root:Long time solve: 7512 12.71369981765747
INFO:root:Long time solve: 7210 8.997065782546997
INFO:root:Long time solve: 8013 7.66331672668457
INFO:root:Considering 100 * 1 jobs for minsize=50
INFO:root:Chunked 100 in [9, 9, 9, 9, 8, 8, 8, 8, 8, 8, 8, 8]
INFO:root:Long time solve: 7877 7.257197380065918
INFO:root:Long time solve: 7333 8.598414421081543
INFO:root:Long time solve: 7295 9.06956434249878
INFO:root:Long time solve: 6172 10.084877014160156
INFO:root:Long time solve: 7219 8.732269048690796
INFO:root:Long time solve: 8185 6.950509786605835
INFO:root:Considering 100 * 1 jobs for minsize=51
INFO:root:Chunked 100 in [9, 9, 9, 9, 8, 8, 8, 8, 8, 8, 8, 8]
INFO:root:Long time solve: 7923 7.172967433929443
INFO:root:Long time solve: 8311 8.187218189239502
INFO:root:Long time solve: 7013 6.4168877601623535
INFO:root:Long time solve: 7014 7.085804224014282
INFO:root:Considering 100 * 1 jobs for minsize=52
INFO:root:Chunked 100 in [9, 9, 9, 9, 8, 8, 8, 8, 8, 8, 8, 8]
INFO:root:Long time solve: 7442 7.649051189422607
INFO:root:Long time solve: 7793 8.76703953742981
INFO:root:Long time solve: 8075 7.002492666244507
INFO:root:Long time solve: 8304 11.908987760543823
INFO:root:Long time solve: 8356 7.461751937866211
INFO:root:Long time solve: 6461 9.180574655532837
INFO:root:Considering 100 * 1 jobs for minsize=53
INFO:root:Chunked 100 in [9, 9, 9, 9, 8, 8, 8, 8, 8, 8, 8, 8]
INFO:root:Long time solve: 6502 6.088666915893555
INFO:root:Long time solve: 6984 5.156923532485962
INFO:root:Considering 100 * 1 jobs for minsize=54
INFO:root:Chunked 100 in [9, 9, 9, 9, 8, 8, 8, 8, 8, 8, 8, 8]
INFO:root:Long time solve: 6982 11.070132970809937
INFO:root:Long time solve: 7744 13.580800533294678
INFO:root:Long time solve: 7796 11.055108547210693
INFO:root:Long time solve: 8302 11.611910104751587
INFO:root:Long time solve: 8039 10.136430978775024
INFO:root:Long time solve: 8996 5.867186546325684
INFO:root:Considering 100 * 1 jobs for minsize=55
INFO:root:Chunked 100 in [9, 9, 9, 9, 8, 8, 8, 8, 8, 8, 8, 8]
INFO:root:Long time solve: 8736 11.729642868041992
INFO:root:Long time solve: 7955 11.773686408996582
INFO:root:Long time solve: 6820 6.34843111038208
INFO:root:Considering 100 * 1 jobs for minsize=56
INFO:root:Chunked 100 in [9, 9, 9, 9, 8, 8, 8, 8, 8, 8, 8, 8]
INFO:root:Long time solve: 7009 11.076804161071777
INFO:root:Long time solve: 10276 15.736968278884888
INFO:root:Long time solve: 7009 8.317213773727417
INFO:root:Long time solve: 6736 9.87727952003479
INFO:root:Long time solve: 7663 6.653679132461548
INFO:root:Long time solve: 7555 8.6546471118927
INFO:root:Long time solve: 7614 6.6721532344818115
INFO:root:Considering 100 * 1 jobs for minsize=57
INFO:root:Chunked 100 in [9, 9, 9, 9, 8, 8, 8, 8, 8, 8, 8, 8]
INFO:root:Long time solve: 7169 13.998403072357178
INFO:root:Long time solve: 7831 6.066967487335205
INFO:root:Long time solve: 7501 5.651515007019043
INFO:root:Considering 100 * 1 jobs for minsize=58
INFO:root:Chunked 100 in [9, 9, 9, 9, 8, 8, 8, 8, 8, 8, 8, 8]
INFO:root:Long time solve: 7725 8.547167778015137
INFO:root:Long time solve: 9508 11.008382081985474
INFO:root:Considering 100 * 1 jobs for minsize=59
INFO:root:Chunked 100 in [9, 9, 9, 9, 8, 8, 8, 8, 8, 8, 8, 8]
INFO:root:Long time solve: 7470 5.2092814445495605
INFO:root:Long time solve: 8321 7.812226295471191
INFO:root:Long time solve: 7070 5.011245012283325
INFO:root:Long time solve: 7096 5.662349224090576
INFO:root:Long time solve: 6736 8.360421419143677
INFO:root:Long time solve: 6742 5.370206356048584
INFO:root:Long time solve: 7131 6.386983871459961
INFO:root:Long time solve: 8556 5.997649431228638
INFO:root:Considering 100 * 1 jobs for minsize=60
INFO:root:Chunked 100 in [9, 9, 9, 9, 8, 8, 8, 8, 8, 8, 8, 8]
INFO:root:Long time solve: 7505 5.47320556640625
INFO:root:Long time solve: 7486 5.546673536300659
INFO:root:Long time solve: 6623 5.868537425994873
INFO:root:Long time solve: 7793 13.129310846328735
INFO:root:Considering 100 * 1 jobs for minsize=61
INFO:root:Chunked 100 in [9, 9, 9, 9, 8, 8, 8, 8, 8, 8, 8, 8]
INFO:root:Long time solve: 6997 13.52471137046814
INFO:root:Long time solve: 7383 16.15729832649231
INFO:root:Long time solve: 7475 17.193602085113525
INFO:root:Long time solve: 7389 11.169513463973999
INFO:root:Long time solve: 7246 9.867887020111084
INFO:root:Long time solve: 6670 9.791343688964844
INFO:root:Considering 100 * 1 jobs for minsize=62
INFO:root:Chunked 100 in [9, 9, 9, 9, 8, 8, 8, 8, 8, 8, 8, 8]
INFO:root:Long time solve: 6246 11.002796649932861
INFO:root:Long time solve: 7044 19.32568120956421
INFO:root:Considering 100 * 1 jobs for minsize=63
INFO:root:Chunked 100 in [9, 9, 9, 9, 8, 8, 8, 8, 8, 8, 8, 8]
INFO:root:Long time solve: 8037 12.838231086730957
INFO:root:Long time solve: 8150 13.056947469711304
INFO:root:Long time solve: 6672 8.91621208190918
INFO:root:Long time solve: 6564 8.510242700576782
INFO:root:Long time solve: 7972 15.578473567962646
INFO:root:Long time solve: 7671 14.61958360671997
INFO:root:Long time solve: 8288 10.21156930923462
INFO:root:Long time solve: 7658 6.501771688461304
INFO:root:Considering 100 * 1 jobs for minsize=64
INFO:root:Chunked 100 in [9, 9, 9, 9, 8, 8, 8, 8, 8, 8, 8, 8]
INFO:root:Long time solve: 7531 7.996516942977905
INFO:root:Long time solve: 6660 9.596915483474731
INFO:root:Long time solve: 7882 12.88556170463562
INFO:root:Long time solve: 6248 9.897843360900879
INFO:root:Considering 100 * 1 jobs for minsize=65
INFO:root:Chunked 100 in [9, 9, 9, 9, 8, 8, 8, 8, 8, 8, 8, 8]
INFO:root:Long time solve: 7115 9.511073112487793
INFO:root:Long time solve: 6616 8.8078453540802
INFO:root:Long time solve: 7619 17.929457664489746
INFO:root:Considering 100 * 1 jobs for minsize=66
INFO:root:Chunked 100 in [9, 9, 9, 9, 8, 8, 8, 8, 8, 8, 8, 8]
INFO:root:Long time solve: 7731 14.953594446182251
INFO:root:Long time solve: 7244 13.97764277458191
INFO:root:Long time solve: 6225 16.384081840515137
INFO:root:Long time solve: 7029 16.214035511016846
INFO:root:Long time solve: 7295 15.743404865264893
INFO:root:Long time solve: 7963 12.897065162658691
INFO:root:Long time solve: 7854 11.801819801330566
INFO:root:Considering 100 * 1 jobs for minsize=67
INFO:root:Chunked 100 in [9, 9, 9, 9, 8, 8, 8, 8, 8, 8, 8, 8]
INFO:root:Long time solve: 6983 18.303401470184326
INFO:root:Long time solve: 6969 13.318285703659058
INFO:root:Long time solve: 8996 14.866283416748047
INFO:root:Considering 100 * 1 jobs for minsize=68
INFO:root:Chunked 100 in [9, 9, 9, 9, 8, 8, 8, 8, 8, 8, 8, 8]
INFO:root:Long time solve: 7154 13.722670793533325
INFO:root:Long time solve: 7601 19.81515145301819
INFO:root:Long time solve: 7448 12.706631660461426
INFO:root:Long time solve: 6873 9.631026268005371
INFO:root:Long time solve: 7972 11.88660717010498
INFO:root:Considering 100 * 1 jobs for minsize=69
INFO:root:Chunked 100 in [9, 9, 9, 9, 8, 8, 8, 8, 8, 8, 8, 8]
INFO:root:Long time solve: 6121 10.846296787261963
INFO:root:Long time solve: 6979 11.977383136749268
INFO:root:Long time solve: 6659 11.985982418060303
INFO:root:Long time solve: 8484 16.9685537815094
INFO:root:Long time solve: 7415 11.318037509918213
INFO:root:Long time solve: 7096 11.814393997192383
INFO:root:Long time solve: 6034 9.268411636352539
INFO:root:Long time solve: 7334 10.925273180007935
INFO:root:Considering 100 * 1 jobs for minsize=70
INFO:root:Chunked 100 in [9, 9, 9, 9, 8, 8, 8, 8, 8, 8, 8, 8]
INFO:root:Long time solve: 6721 10.900677919387817
INFO:root:Long time solve: 6974 8.973858118057251
INFO:root:Considering 100 * 1 jobs for minsize=71
INFO:root:Chunked 100 in [9, 9, 9, 9, 8, 8, 8, 8, 8, 8, 8, 8]
INFO:root:Long time solve: 8042 10.618595123291016
INFO:root:Long time solve: 6914 11.414040565490723
INFO:root:Long time solve: 6765 22.852646589279175
INFO:root:Long time solve: 8031 17.308719873428345
INFO:root:Considering 100 * 1 jobs for minsize=72
INFO:root:Chunked 100 in [9, 9, 9, 9, 8, 8, 8, 8, 8, 8, 8, 8]
INFO:root:Long time solve: 7757 23.136497497558594
INFO:root:Long time solve: 6723 20.191234588623047
INFO:root:Long time solve: 7633 17.89443850517273
INFO:root:Long time solve: 6313 22.640624523162842
INFO:root:Long time solve: 7727 17.82466435432434
INFO:root:Long time solve: 7171 20.925461292266846
INFO:root:Long time solve: 7333 16.58411169052124
INFO:root:Considering 100 * 1 jobs for minsize=73
INFO:root:Chunked 100 in [9, 9, 9, 9, 8, 8, 8, 8, 8, 8, 8, 8]
INFO:root:Long time solve: 7024 17.456053018569946
INFO:root:Long time solve: 6769 13.487534761428833
INFO:root:Long time solve: 8228 16.972690105438232
INFO:root:Long time solve: 8484 13.08930516242981
INFO:root:Considering 100 * 1 jobs for minsize=74
INFO:root:Chunked 100 in [9, 9, 9, 9, 8, 8, 8, 8, 8, 8, 8, 8]
INFO:root:Long time solve: 6301 16.5679349899292
INFO:root:Long time solve: 7588 17.688486576080322
INFO:root:Long time solve: 7400 20.83206009864807
INFO:root:Long time solve: 6912 15.042149782180786
INFO:root:Long time solve: 7335 8.471934080123901
INFO:root:Considering 100 * 1 jobs for minsize=75
INFO:root:Chunked 100 in [9, 9, 9, 9, 8, 8, 8, 8, 8, 8, 8, 8]
INFO:root:Long time solve: 6017 12.68387484550476
INFO:root:Long time solve: 6188 13.376643419265747
INFO:root:Long time solve: 7430 16.164363622665405
INFO:root:Long time solve: 7276 20.94615125656128
INFO:root:Long time solve: 7633 5.141951560974121
INFO:root:Long time solve: 7006 8.535974740982056
INFO:root:Considering 100 * 1 jobs for minsize=76
INFO:root:Chunked 100 in [9, 9, 9, 9, 8, 8, 8, 8, 8, 8, 8, 8]
INFO:root:Long time solve: 6698 8.375545978546143
INFO:root:Considering 100 * 1 jobs for minsize=77
INFO:root:Chunked 100 in [9, 9, 9, 9, 8, 8, 8, 8, 8, 8, 8, 8]
INFO:root:Long time solve: 7509 10.592180252075195
INFO:root:Long time solve: 5899 11.395925283432007
INFO:root:Long time solve: 6185 10.803693532943726
INFO:root:Long time solve: 6485 10.39688491821289
INFO:root:Long time solve: 7182 11.580470561981201
INFO:root:Long time solve: 8740 14.338539838790894
INFO:root:Long time solve: 6398 20.96906304359436
INFO:root:Long time solve: 6731 12.853628158569336
INFO:root:Considering 100 * 1 jobs for minsize=78
INFO:root:Chunked 100 in [9, 9, 9, 9, 8, 8, 8, 8, 8, 8, 8, 8]
INFO:root:Long time solve: 7842 9.631314992904663
INFO:root:Long time solve: 7496 20.283339023590088
INFO:root:Long time solve: 7344 15.792470693588257
INFO:root:Considering 100 * 1 jobs for minsize=79
INFO:root:Chunked 100 in [9, 9, 9, 9, 8, 8, 8, 8, 8, 8, 8, 8]
INFO:root:Long time solve: 7578 17.349595069885254
INFO:root:Long time solve: 8082 15.045760154724121
INFO:root:Long time solve: 7701 21.434061288833618
INFO:root:Long time solve: 7012 15.674911499023438
INFO:root:Long time solve: 6416 14.634536981582642
INFO:root:Long time solve: 6962 15.229153394699097
INFO:root:Considering 100 * 1 jobs for minsize=80
INFO:root:Chunked 100 in [9, 9, 9, 9, 8, 8, 8, 8, 8, 8, 8, 8]
INFO:root:Long time solve: 7943 20.132851123809814
INFO:root:Long time solve: 8386 18.620256900787354
INFO:root:Long time solve: 6347 20.662676095962524
INFO:root:Long time solve: 8276 21.669124364852905
INFO:root:Long time solve: 8174 7.953533172607422
INFO:root:Considering 100 * 1 jobs for minsize=81
INFO:root:Chunked 100 in [9, 9, 9, 9, 8, 8, 8, 8, 8, 8, 8, 8]
INFO:root:Long time solve: 7299 21.211430072784424
INFO:root:Long time solve: 6355 20.72456455230713
INFO:root:Long time solve: 8357 9.503050327301025
INFO:root:Long time solve: 6272 9.74557900428772
INFO:root:Long time solve: 7164 5.628965854644775
INFO:root:Considering 100 * 1 jobs for minsize=82
INFO:root:Chunked 100 in [9, 9, 9, 9, 8, 8, 8, 8, 8, 8, 8, 8]
INFO:root:Long time solve: 7777 14.841537714004517
INFO:root:Long time solve: 6026 12.923941373825073
INFO:root:Considering 100 * 1 jobs for minsize=83
INFO:root:Chunked 100 in [9, 9, 9, 9, 8, 8, 8, 8, 8, 8, 8, 8]
INFO:root:Long time solve: 6323 9.920499324798584
INFO:root:Long time solve: 7098 11.989247560501099
INFO:root:Long time solve: 6584 15.01528787612915
INFO:root:Long time solve: 8484 18.390366315841675
INFO:root:Long time solve: 7158 25.030303239822388
INFO:root:Long time solve: 6416 11.271122217178345
INFO:root:Long time solve: 6841 8.490076780319214
INFO:root:Considering 100 * 1 jobs for minsize=84
INFO:root:Chunked 100 in [9, 9, 9, 9, 8, 8, 8, 8, 8, 8, 8, 8]
INFO:root:Long time solve: 7588 30.178723096847534
INFO:root:Long time solve: 8006 23.552419662475586
INFO:root:Long time solve: 6119 14.59895396232605
INFO:root:Long time solve: 8309 17.8645977973938
INFO:root:Considering 100 * 1 jobs for minsize=85
INFO:root:Chunked 100 in [9, 9, 9, 9, 8, 8, 8, 8, 8, 8, 8, 8]
INFO:root:Long time solve: 7995 26.166436910629272
INFO:root:Long time solve: 7437 22.029232263565063
INFO:root:Long time solve: 6454 23.41612195968628
INFO:root:Long time solve: 8284 28.295151710510254
INFO:root:Long time solve: 8484 33.623326539993286
INFO:root:Long time solve: 5540 17.05466365814209
INFO:root:Considering 100 * 1 jobs for minsize=86
INFO:root:Chunked 100 in [9, 9, 9, 9, 8, 8, 8, 8, 8, 8, 8, 8]
INFO:root:Long time solve: 7783 28.694006204605103
INFO:root:Long time solve: 7812 28.3062686920166
INFO:root:Long time solve: 7725 11.314724922180176
INFO:root:Considering 100 * 1 jobs for minsize=87
INFO:root:Chunked 100 in [9, 9, 9, 9, 8, 8, 8, 8, 8, 8, 8, 8]
INFO:root:Long time solve: 7571 18.80957555770874
INFO:root:Long time solve: 8228 27.302584648132324
INFO:root:Long time solve: 6320 18.213674306869507
INFO:root:Long time solve: 6444 17.837588787078857
INFO:root:Long time solve: 5711 14.572043418884277
INFO:root:Considering 100 * 1 jobs for minsize=88
INFO:root:Chunked 100 in [9, 9, 9, 9, 8, 8, 8, 8, 8, 8, 8, 8]
INFO:root:Long time solve: 6877 16.791210889816284
INFO:root:Long time solve: 6117 16.628423929214478
INFO:root:Long time solve: 6582 10.780433893203735
INFO:root:Long time solve: 7900 12.342433214187622
INFO:root:Long time solve: 6401 7.714093923568726
INFO:root:Considering 100 * 1 jobs for minsize=89
INFO:root:Chunked 100 in [9, 9, 9, 9, 8, 8, 8, 8, 8, 8, 8, 8]
INFO:root:Long time solve: 7699 17.19362998008728
INFO:root:Long time solve: 6312 8.524215459823608
INFO:root:Long time solve: 7013 10.397454738616943
INFO:root:Long time solve: 6666 26.361216068267822
INFO:root:Considering 100 * 1 jobs for minsize=90
INFO:root:Chunked 100 in [9, 9, 9, 9, 8, 8, 8, 8, 8, 8, 8, 8]
INFO:root:Long time solve: 7448 11.676193714141846
INFO:root:Long time solve: 6433 10.774259090423584
INFO:root:Long time solve: 5955 9.83153223991394
INFO:root:Long time solve: 7993 18.312598705291748
INFO:root:Long time solve: 6027 14.264720678329468
INFO:root:Considering 100 * 1 jobs for minsize=91
INFO:root:Chunked 100 in [9, 9, 9, 9, 8, 8, 8, 8, 8, 8, 8, 8]
INFO:root:Long time solve: 4868 12.3775634765625
INFO:root:Long time solve: 6121 11.74071717262268
INFO:root:Long time solve: 7262 23.333675384521484
INFO:root:Long time solve: 6251 16.77785348892212
INFO:root:Considering 100 * 1 jobs for minsize=92
INFO:root:Chunked 100 in [9, 9, 9, 9, 8, 8, 8, 8, 8, 8, 8, 8]
INFO:root:Long time solve: 6433 23.00005030632019
INFO:root:Long time solve: 6952 24.86651587486267
INFO:root:Long time solve: 7508 25.408371686935425
INFO:root:Long time solve: 6161 21.987780332565308
INFO:root:Long time solve: 7104 11.89488935470581
INFO:root:Considering 100 * 1 jobs for minsize=93
INFO:root:Chunked 100 in [9, 9, 9, 9, 8, 8, 8, 8, 8, 8, 8, 8]
INFO:root:Long time solve: 7451 23.191574811935425
INFO:root:Long time solve: 5659 20.441082000732422
INFO:root:Long time solve: 7661 20.280980587005615
INFO:root:Long time solve: 6128 14.664494276046753
INFO:root:XX found first (1, 3) is not 7 72
INFO:root:Trace: [(72, [(1, 3) is not 7])]
INFO:root:Trace Quality: [(72, 1)]
INFO:root:Trace Sorted: [(72, 1)]
INFO:root:Finished
INFO:root:Full Trace [(72, [(1, 3) is not 7])]
INFO:root:Trying {'minPrecheckStepsMUS': True}
INFO:root:Starting Step 1
INFO:root:Current state [[[[1], [4, 7, 8], [3, 4, 5, 7, 8], [3, 5, 6, 7], [3, 6, 8, 9], [5, 6, 7, 8], [3, 4, 8, 9], [3, 6, 9], [2]], [[2, 3, 8], [9], [3, 7, 8], [4], [1, 2, 3, 6, 8], [1, 2, 6, 7, 8], [1, 3, 8], [5], [3, 6, 8]], [[2, 3, 4, 5, 8], [2, 4, 8], [6], [1, 2, 3, 5], [1, 2, 3, 8, 9], [1, 2, 5, 8], [7], [1, 3, 9], [3, 4, 8, 9]], [[2, 4, 6, 8], [5], [1, 4, 7, 8], [9], [1, 2, 4, 6], [3], [1, 2, 8], [1, 2, 6, 7], [6, 7, 8]], [[2, 3, 4, 6, 8, 9], [1, 2, 4, 6, 8], [1, 3, 4, 8, 9], [1, 2, 6], [7], [1, 2, 4, 6], [1, 2, 3, 5, 8, 9], [1, 2, 3, 6, 9], [3, 5, 6, 8, 9]], [[2, 3, 6, 9], [1, 2, 6, 7], [1, 3, 7, 9], [8], [5], [1, 2, 6], [1, 2, 3, 9], [4], [3, 6, 7, 9]], [[7], [1, 4, 8], [1, 4, 5, 8, 9], [1, 2, 3, 5], [1, 2, 3, 4, 8], [1, 2, 4, 5, 8], [6], [2, 3, 9], [3, 4, 5, 9]], [[4, 5, 6], [3], [1, 4, 5], [1, 2, 5, 6, 7], [1, 2, 4, 6], [9], [2, 4, 5], [8], [4, 5, 7]], [[4, 5, 6, 8, 9], [4, 6, 8], [2], [3, 5, 6, 7], [3, 4, 6, 8], [4, 5, 6, 7, 8], [3, 4, 5, 9], [3, 7, 9], [1]]]]
INFO:root:Doing checkSmall1
INFO:root:Getting tiny MUSes, distance 1, for 1 puzlits, 1 repeats
INFO:root:Chunked 1 in [1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
INFO:root:Doing checkSmall2
INFO:root:Getting tiny MUSes, distance 2, for 1 puzlits, 1 repeats
INFO:root:Chunked 1 in [1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
INFO:root:Considering 100 * 1 jobs for minsize=3
INFO:root:Chunked 100 in [9, 9, 9, 9, 8, 8, 8, 8, 8, 8, 8, 8]
INFO:root:Considering 100 * 1 jobs for minsize=4
INFO:root:Chunked 100 in [9, 9, 9, 9, 8, 8, 8, 8, 8, 8, 8, 8]
INFO:root:Considering 100 * 1 jobs for minsize=5
INFO:root:Chunked 100 in [9, 9, 9, 9, 8, 8, 8, 8, 8, 8, 8, 8]
INFO:root:Considering 100 * 1 jobs for minsize=6
INFO:root:Chunked 100 in [9, 9, 9, 9, 8, 8, 8, 8, 8, 8, 8, 8]
INFO:root:Considering 100 * 1 jobs for minsize=7
INFO:root:Chunked 100 in [9, 9, 9, 9, 8, 8, 8, 8, 8, 8, 8, 8]
INFO:root:Considering 100 * 1 jobs for minsize=8
INFO:root:Chunked 100 in [9, 9, 9, 9, 8, 8, 8, 8, 8, 8, 8, 8]
INFO:root:Considering 100 * 1 jobs for minsize=9
INFO:root:Chunked 100 in [9, 9, 9, 9, 8, 8, 8, 8, 8, 8, 8, 8]
INFO:root:Considering 100 * 1 jobs for minsize=10
INFO:root:Chunked 100 in [9, 9, 9, 9, 8, 8, 8, 8, 8, 8, 8, 8]
INFO:root:Considering 100 * 1 jobs for minsize=11
INFO:root:Chunked 100 in [9, 9, 9, 9, 8, 8, 8, 8, 8, 8, 8, 8]
INFO:root:Considering 100 * 1 jobs for minsize=12
INFO:root:Chunked 100 in [9, 9, 9, 9, 8, 8, 8, 8, 8, 8, 8, 8]
INFO:root:Considering 100 * 1 jobs for minsize=13
INFO:root:Chunked 100 in [9, 9, 9, 9, 8, 8, 8, 8, 8, 8, 8, 8]
INFO:root:Considering 100 * 1 jobs for minsize=14
INFO:root:Chunked 100 in [9, 9, 9, 9, 8, 8, 8, 8, 8, 8, 8, 8]
INFO:root:Considering 100 * 1 jobs for minsize=15
INFO:root:Chunked 100 in [9, 9, 9, 9, 8, 8, 8, 8, 8, 8, 8, 8]
INFO:root:Considering 100 * 1 jobs for minsize=16
INFO:root:Chunked 100 in [9, 9, 9, 9, 8, 8, 8, 8, 8, 8, 8, 8]
INFO:root:Considering 100 * 1 jobs for minsize=17
INFO:root:Chunked 100 in [9, 9, 9, 9, 8, 8, 8, 8, 8, 8, 8, 8]
INFO:root:Considering 100 * 1 jobs for minsize=18
INFO:root:Chunked 100 in [9, 9, 9, 9, 8, 8, 8, 8, 8, 8, 8, 8]
INFO:root:Considering 100 * 1 jobs for minsize=19
INFO:root:Chunked 100 in [9, 9, 9, 9, 8, 8, 8, 8, 8, 8, 8, 8]
INFO:root:Considering 100 * 1 jobs for minsize=20
INFO:root:Chunked 100 in [9, 9, 9, 9, 8, 8, 8, 8, 8, 8, 8, 8]
INFO:root:Considering 100 * 1 jobs for minsize=21
INFO:root:Chunked 100 in [9, 9, 9, 9, 8, 8, 8, 8, 8, 8, 8, 8]
INFO:root:Considering 100 * 1 jobs for minsize=22
INFO:root:Chunked 100 in [9, 9, 9, 9, 8, 8, 8, 8, 8, 8, 8, 8]
INFO:root:Considering 100 * 1 jobs for minsize=23
INFO:root:Chunked 100 in [9, 9, 9, 9, 8, 8, 8, 8, 8, 8, 8, 8]
INFO:root:Considering 100 * 1 jobs for minsize=24
INFO:root:Chunked 100 in [9, 9, 9, 9, 8, 8, 8, 8, 8, 8, 8, 8]
INFO:root:Considering 100 * 1 jobs for minsize=25
INFO:root:Chunked 100 in [9, 9, 9, 9, 8, 8, 8, 8, 8, 8, 8, 8]
INFO:root:Considering 100 * 1 jobs for minsize=26
INFO:root:Chunked 100 in [9, 9, 9, 9, 8, 8, 8, 8, 8, 8, 8, 8]
INFO:root:Considering 100 * 1 jobs for minsize=27
INFO:root:Chunked 100 in [9, 9, 9, 9, 8, 8, 8, 8, 8, 8, 8, 8]
INFO:root:Considering 100 * 1 jobs for minsize=28
INFO:root:Chunked 100 in [9, 9, 9, 9, 8, 8, 8, 8, 8, 8, 8, 8]
INFO:root:Considering 100 * 1 jobs for minsize=29
INFO:root:Chunked 100 in [9, 9, 9, 9, 8, 8, 8, 8, 8, 8, 8, 8]
INFO:root:Considering 100 * 1 jobs for minsize=30
INFO:root:Chunked 100 in [9, 9, 9, 9, 8, 8, 8, 8, 8, 8, 8, 8]
INFO:root:Considering 100 * 1 jobs for minsize=31
INFO:root:Chunked 100 in [9, 9, 9, 9, 8, 8, 8, 8, 8, 8, 8, 8]
INFO:root:Considering 100 * 1 jobs for minsize=32
INFO:root:Chunked 100 in [9, 9, 9, 9, 8, 8, 8, 8, 8, 8, 8, 8]
INFO:root:Considering 100 * 1 jobs for minsize=33
INFO:root:Chunked 100 in [9, 9, 9, 9, 8, 8, 8, 8, 8, 8, 8, 8]
INFO:root:Considering 100 * 1 jobs for minsize=34
INFO:root:Chunked 100 in [9, 9, 9, 9, 8, 8, 8, 8, 8, 8, 8, 8]
INFO:root:Considering 100 * 1 jobs for minsize=35
INFO:root:Chunked 100 in [9, 9, 9, 9, 8, 8, 8, 8, 8, 8, 8, 8]
INFO:root:Considering 100 * 1 jobs for minsize=36
INFO:root:Chunked 100 in [9, 9, 9, 9, 8, 8, 8, 8, 8, 8, 8, 8]
INFO:root:Considering 100 * 1 jobs for minsize=37
INFO:root:Chunked 100 in [9, 9, 9, 9, 8, 8, 8, 8, 8, 8, 8, 8]
INFO:root:Considering 100 * 1 jobs for minsize=38
INFO:root:Chunked 100 in [9, 9, 9, 9, 8, 8, 8, 8, 8, 8, 8, 8]
INFO:root:Considering 100 * 1 jobs for minsize=39
INFO:root:Chunked 100 in [9, 9, 9, 9, 8, 8, 8, 8, 8, 8, 8, 8]
INFO:root:Considering 100 * 1 jobs for minsize=40
INFO:root:Chunked 100 in [9, 9, 9, 9, 8, 8, 8, 8, 8, 8, 8, 8]
INFO:root:Considering 100 * 1 jobs for minsize=41
INFO:root:Chunked 100 in [9, 9, 9, 9, 8, 8, 8, 8, 8, 8, 8, 8]
INFO:root:Considering 100 * 1 jobs for minsize=42
INFO:root:Chunked 100 in [9, 9, 9, 9, 8, 8, 8, 8, 8, 8, 8, 8]
INFO:root:Considering 100 * 1 jobs for minsize=43
INFO:root:Chunked 100 in [9, 9, 9, 9, 8, 8, 8, 8, 8, 8, 8, 8]
INFO:root:Considering 100 * 1 jobs for minsize=44
INFO:root:Chunked 100 in [9, 9, 9, 9, 8, 8, 8, 8, 8, 8, 8, 8]
INFO:root:Considering 100 * 1 jobs for minsize=45
INFO:root:Chunked 100 in [9, 9, 9, 9, 8, 8, 8, 8, 8, 8, 8, 8]
INFO:root:Considering 100 * 1 jobs for minsize=46
INFO:root:Chunked 100 in [9, 9, 9, 9, 8, 8, 8, 8, 8, 8, 8, 8]
INFO:root:Considering 100 * 1 jobs for minsize=47
INFO:root:Chunked 100 in [9, 9, 9, 9, 8, 8, 8, 8, 8, 8, 8, 8]
INFO:root:Considering 100 * 1 jobs for minsize=48
INFO:root:Chunked 100 in [9, 9, 9, 9, 8, 8, 8, 8, 8, 8, 8, 8]
INFO:root:Considering 100 * 1 jobs for minsize=49
INFO:root:Chunked 100 in [9, 9, 9, 9, 8, 8, 8, 8, 8, 8, 8, 8]
INFO:root:Considering 100 * 1 jobs for minsize=50
INFO:root:Chunked 100 in [9, 9, 9, 9, 8, 8, 8, 8, 8, 8, 8, 8]
INFO:root:Considering 100 * 1 jobs for minsize=51
INFO:root:Chunked 100 in [9, 9, 9, 9, 8, 8, 8, 8, 8, 8, 8, 8]
INFO:root:Considering 100 * 1 jobs for minsize=52
INFO:root:Chunked 100 in [9, 9, 9, 9, 8, 8, 8, 8, 8, 8, 8, 8]
INFO:root:Considering 100 * 1 jobs for minsize=53
INFO:root:Chunked 100 in [9, 9, 9, 9, 8, 8, 8, 8, 8, 8, 8, 8]
INFO:root:Considering 100 * 1 jobs for minsize=54
INFO:root:Chunked 100 in [9, 9, 9, 9, 8, 8, 8, 8, 8, 8, 8, 8]
INFO:root:Considering 100 * 1 jobs for minsize=55
INFO:root:Chunked 100 in [9, 9, 9, 9, 8, 8, 8, 8, 8, 8, 8, 8]
INFO:root:Long time solveLimited: 10343 5.071619033813477
INFO:root:Considering 100 * 1 jobs for minsize=56
INFO:root:Chunked 100 in [9, 9, 9, 9, 8, 8, 8, 8, 8, 8, 8, 8]
INFO:root:Considering 100 * 1 jobs for minsize=57
INFO:root:Chunked 100 in [9, 9, 9, 9, 8, 8, 8, 8, 8, 8, 8, 8]
INFO:root:Considering 100 * 1 jobs for minsize=58
INFO:root:Chunked 100 in [9, 9, 9, 9, 8, 8, 8, 8, 8, 8, 8, 8]
INFO:root:Considering 100 * 1 jobs for minsize=59
INFO:root:Chunked 100 in [9, 9, 9, 9, 8, 8, 8, 8, 8, 8, 8, 8]
INFO:root:Considering 100 * 1 jobs for minsize=60
INFO:root:Chunked 100 in [9, 9, 9, 9, 8, 8, 8, 8, 8, 8, 8, 8]
INFO:root:Considering 100 * 1 jobs for minsize=61
INFO:root:Chunked 100 in [9, 9, 9, 9, 8, 8, 8, 8, 8, 8, 8, 8]
INFO:root:Long time solveLimited: 9103 6.458889722824097
INFO:root:Considering 100 * 1 jobs for minsize=62
INFO:root:Chunked 100 in [9, 9, 9, 9, 8, 8, 8, 8, 8, 8, 8, 8]
INFO:root:Considering 100 * 1 jobs for minsize=63
INFO:root:Chunked 100 in [9, 9, 9, 9, 8, 8, 8, 8, 8, 8, 8, 8]
INFO:root:Long time solveLimited: 8563 6.1522746086120605
INFO:root:Long time solveLimited: 6923 6.01338529586792
INFO:root:Long time solveLimited: 7825 6.24321985244751
INFO:root:Considering 100 * 1 jobs for minsize=64
INFO:root:Chunked 100 in [9, 9, 9, 9, 8, 8, 8, 8, 8, 8, 8, 8]
INFO:root:Considering 100 * 1 jobs for minsize=65
INFO:root:Chunked 100 in [9, 9, 9, 9, 8, 8, 8, 8, 8, 8, 8, 8]
INFO:root:Long time solveLimited: 8398 5.034912109375
INFO:root:Long time solveLimited: 7134 5.0574235916137695
INFO:root:Long time solveLimited: 7845 5.486517429351807
INFO:root:Considering 100 * 1 jobs for minsize=66
INFO:root:Chunked 100 in [9, 9, 9, 9, 8, 8, 8, 8, 8, 8, 8, 8]
INFO:root:Long time solveLimited: 7957 5.006798267364502
INFO:root:Long time solveLimited: 7723 5.130746603012085
INFO:root:Considering 100 * 1 jobs for minsize=67
INFO:root:Chunked 100 in [9, 9, 9, 9, 8, 8, 8, 8, 8, 8, 8, 8]
INFO:root:Long time solveLimited: 7836 6.706753253936768
INFO:root:Considering 100 * 1 jobs for minsize=68
INFO:root:Chunked 100 in [9, 9, 9, 9, 8, 8, 8, 8, 8, 8, 8, 8]
INFO:root:Considering 100 * 1 jobs for minsize=69
INFO:root:Chunked 100 in [9, 9, 9, 9, 8, 8, 8, 8, 8, 8, 8, 8]
INFO:root:Long time solveLimited: 7006 6.431225299835205
INFO:root:Long time solveLimited: 7981 5.284756422042847
INFO:root:Considering 100 * 1 jobs for minsize=70
INFO:root:Chunked 100 in [9, 9, 9, 9, 8, 8, 8, 8, 8, 8, 8, 8]
INFO:root:Long time solveLimited: 7941 6.295053720474243
INFO:root:Long time solveLimited: 9125 5.689249038696289
INFO:root:Considering 100 * 1 jobs for minsize=71
INFO:root:Chunked 100 in [9, 9, 9, 9, 8, 8, 8, 8, 8, 8, 8, 8]
INFO:root:Long time solveLimited: 7465 6.343969821929932
INFO:root:Considering 100 * 1 jobs for minsize=72
INFO:root:Chunked 100 in [9, 9, 9, 9, 8, 8, 8, 8, 8, 8, 8, 8]
INFO:root:Long time solveLimited: 7291 6.176185369491577
INFO:root:Long time solveLimited: 7291 6.146494150161743
INFO:root:Long time solveLimited: 8443 8.13615369796753
INFO:root:Long time solveLimited: 8443 6.494533061981201
INFO:root:Long time solveLimited: 7507 6.734717607498169
INFO:root:Long time solveLimited: 6715 7.011834144592285
INFO:root:Long time solveLimited: 8371 6.101531267166138
INFO:root:Considering 100 * 1 jobs for minsize=73
INFO:root:Chunked 100 in [9, 9, 9, 9, 8, 8, 8, 8, 8, 8, 8, 8]
INFO:root:Long time solveLimited: 7478 7.07615852355957
INFO:root:Long time solveLimited: 7975 6.2839391231536865
INFO:root:Considering 100 * 1 jobs for minsize=74
INFO:root:Chunked 100 in [9, 9, 9, 9, 8, 8, 8, 8, 8, 8, 8, 8]
INFO:root:Considering 100 * 1 jobs for minsize=75
INFO:root:Chunked 100 in [9, 9, 9, 9, 8, 8, 8, 8, 8, 8, 8, 8]
INFO:root:Long time solveLimited: 7633 7.214141845703125
INFO:root:Long time solveLimited: 10048 5.945372819900513
INFO:root:Long time solveLimited: 8047 7.559360504150391
INFO:root:Long time solveLimited: 9151 5.819176197052002
INFO:root:XX found first (1, 3) is not 7 70
INFO:root:Trace: [(70, [(1, 3) is not 7])]
INFO:root:Trace Quality: [(70, 1)]
INFO:root:Trace Sorted: [(70, 1)]
INFO:root:Finished
INFO:root:Full Trace [(70, [(1, 3) is not 7])]
INFO:root:Trying {'gallopingMUSes': True, 'minPrecheckMUS': True}
INFO:root:Starting Step 1
INFO:root:Current state [[[[1], [4, 7, 8], [3, 4, 5, 7, 8], [3, 5, 6, 7], [3, 6, 8, 9], [5, 6, 7, 8], [3, 4, 8, 9], [3, 6, 9], [2]], [[2, 3, 8], [9], [3, 7, 8], [4], [1, 2, 3, 6, 8], [1, 2, 6, 7, 8], [1, 3, 8], [5], [3, 6, 8]], [[2, 3, 4, 5, 8], [2, 4, 8], [6], [1, 2, 3, 5], [1, 2, 3, 8, 9], [1, 2, 5, 8], [7], [1, 3, 9], [3, 4, 8, 9]], [[2, 4, 6, 8], [5], [1, 4, 7, 8], [9], [1, 2, 4, 6], [3], [1, 2, 8], [1, 2, 6, 7], [6, 7, 8]], [[2, 3, 4, 6, 8, 9], [1, 2, 4, 6, 8], [1, 3, 4, 8, 9], [1, 2, 6], [7], [1, 2, 4, 6], [1, 2, 3, 5, 8, 9], [1, 2, 3, 6, 9], [3, 5, 6, 8, 9]], [[2, 3, 6, 9], [1, 2, 6, 7], [1, 3, 7, 9], [8], [5], [1, 2, 6], [1, 2, 3, 9], [4], [3, 6, 7, 9]], [[7], [1, 4, 8], [1, 4, 5, 8, 9], [1, 2, 3, 5], [1, 2, 3, 4, 8], [1, 2, 4, 5, 8], [6], [2, 3, 9], [3, 4, 5, 9]], [[4, 5, 6], [3], [1, 4, 5], [1, 2, 5, 6, 7], [1, 2, 4, 6], [9], [2, 4, 5], [8], [4, 5, 7]], [[4, 5, 6, 8, 9], [4, 6, 8], [2], [3, 5, 6, 7], [3, 4, 6, 8], [4, 5, 6, 7, 8], [3, 4, 5, 9], [3, 7, 9], [1]]]]
INFO:root:Doing checkSmall1
INFO:root:Getting tiny MUSes, distance 1, for 1 puzlits, 1 repeats
INFO:root:Chunked 1 in [1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
INFO:root:Doing checkSmall2
INFO:root:Getting tiny MUSes, distance 2, for 1 puzlits, 1 repeats
INFO:root:Chunked 1 in [1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
INFO:root:Considering 100 * 1 jobs for minsize=3
INFO:root:Chunked 100 in [9, 9, 9, 9, 8, 8, 8, 8, 8, 8, 8, 8]
INFO:root:Considering 100 * 1 jobs for minsize=4
INFO:root:Chunked 100 in [9, 9, 9, 9, 8, 8, 8, 8, 8, 8, 8, 8]
INFO:root:Considering 100 * 1 jobs for minsize=5
INFO:root:Chunked 100 in [9, 9, 9, 9, 8, 8, 8, 8, 8, 8, 8, 8]
INFO:root:Considering 100 * 1 jobs for minsize=6
INFO:root:Chunked 100 in [9, 9, 9, 9, 8, 8, 8, 8, 8, 8, 8, 8]
INFO:root:Considering 100 * 1 jobs for minsize=7
INFO:root:Chunked 100 in [9, 9, 9, 9, 8, 8, 8, 8, 8, 8, 8, 8]
INFO:root:Considering 100 * 1 jobs for minsize=8
INFO:root:Chunked 100 in [9, 9, 9, 9, 8, 8, 8, 8, 8, 8, 8, 8]
INFO:root:Considering 100 * 1 jobs for minsize=9
INFO:root:Chunked 100 in [9, 9, 9, 9, 8, 8, 8, 8, 8, 8, 8, 8]
INFO:root:Considering 100 * 1 jobs for minsize=10
INFO:root:Chunked 100 in [9, 9, 9, 9, 8, 8, 8, 8, 8, 8, 8, 8]
INFO:root:Considering 100 * 1 jobs for minsize=11
INFO:root:Chunked 100 in [9, 9, 9, 9, 8, 8, 8, 8, 8, 8, 8, 8]
INFO:root:Considering 100 * 1 jobs for minsize=12
INFO:root:Chunked 100 in [9, 9, 9, 9, 8, 8, 8, 8, 8, 8, 8, 8]
INFO:root:Considering 100 * 1 jobs for minsize=13
INFO:root:Chunked 100 in [9, 9, 9, 9, 8, 8, 8, 8, 8, 8, 8, 8]
INFO:root:Considering 100 * 1 jobs for minsize=14
INFO:root:Chunked 100 in [9, 9, 9, 9, 8, 8, 8, 8, 8, 8, 8, 8]
INFO:root:Considering 100 * 1 jobs for minsize=15
INFO:root:Chunked 100 in [9, 9, 9, 9, 8, 8, 8, 8, 8, 8, 8, 8]
INFO:root:Considering 100 * 1 jobs for minsize=16
INFO:root:Chunked 100 in [9, 9, 9, 9, 8, 8, 8, 8, 8, 8, 8, 8]
INFO:root:Considering 100 * 1 jobs for minsize=17
INFO:root:Chunked 100 in [9, 9, 9, 9, 8, 8, 8, 8, 8, 8, 8, 8]
INFO:root:Considering 100 * 1 jobs for minsize=18
INFO:root:Chunked 100 in [9, 9, 9, 9, 8, 8, 8, 8, 8, 8, 8, 8]
INFO:root:Considering 100 * 1 jobs for minsize=19
INFO:root:Chunked 100 in [9, 9, 9, 9, 8, 8, 8, 8, 8, 8, 8, 8]
INFO:root:Considering 100 * 1 jobs for minsize=20
INFO:root:Chunked 100 in [9, 9, 9, 9, 8, 8, 8, 8, 8, 8, 8, 8]
INFO:root:Considering 100 * 1 jobs for minsize=21
INFO:root:Chunked 100 in [9, 9, 9, 9, 8, 8, 8, 8, 8, 8, 8, 8]
INFO:root:Considering 100 * 1 jobs for minsize=22
INFO:root:Chunked 100 in [9, 9, 9, 9, 8, 8, 8, 8, 8, 8, 8, 8]
INFO:root:Considering 100 * 1 jobs for minsize=23
INFO:root:Chunked 100 in [9, 9, 9, 9, 8, 8, 8, 8, 8, 8, 8, 8]
INFO:root:Considering 100 * 1 jobs for minsize=24
INFO:root:Chunked 100 in [9, 9, 9, 9, 8, 8, 8, 8, 8, 8, 8, 8]
INFO:root:Considering 100 * 1 jobs for minsize=25
INFO:root:Chunked 100 in [9, 9, 9, 9, 8, 8, 8, 8, 8, 8, 8, 8]
INFO:root:Considering 100 * 1 jobs for minsize=26
INFO:root:Chunked 100 in [9, 9, 9, 9, 8, 8, 8, 8, 8, 8, 8, 8]
INFO:root:Considering 100 * 1 jobs for minsize=27
INFO:root:Chunked 100 in [9, 9, 9, 9, 8, 8, 8, 8, 8, 8, 8, 8]
INFO:root:Considering 100 * 1 jobs for minsize=28
INFO:root:Chunked 100 in [9, 9, 9, 9, 8, 8, 8, 8, 8, 8, 8, 8]
INFO:root:Considering 100 * 1 jobs for minsize=29
INFO:root:Chunked 100 in [9, 9, 9, 9, 8, 8, 8, 8, 8, 8, 8, 8]
INFO:root:Considering 100 * 1 jobs for minsize=30
INFO:root:Chunked 100 in [9, 9, 9, 9, 8, 8, 8, 8, 8, 8, 8, 8]
INFO:root:Considering 100 * 1 jobs for minsize=31
INFO:root:Chunked 100 in [9, 9, 9, 9, 8, 8, 8, 8, 8, 8, 8, 8]
INFO:root:Considering 100 * 1 jobs for minsize=32
INFO:root:Chunked 100 in [9, 9, 9, 9, 8, 8, 8, 8, 8, 8, 8, 8]
INFO:root:Considering 100 * 1 jobs for minsize=33
INFO:root:Chunked 100 in [9, 9, 9, 9, 8, 8, 8, 8, 8, 8, 8, 8]
INFO:root:Considering 100 * 1 jobs for minsize=34
INFO:root:Chunked 100 in [9, 9, 9, 9, 8, 8, 8, 8, 8, 8, 8, 8]
INFO:root:Considering 100 * 1 jobs for minsize=35
INFO:root:Chunked 100 in [9, 9, 9, 9, 8, 8, 8, 8, 8, 8, 8, 8]
INFO:root:Considering 100 * 1 jobs for minsize=36
INFO:root:Chunked 100 in [9, 9, 9, 9, 8, 8, 8, 8, 8, 8, 8, 8]
INFO:root:Considering 100 * 1 jobs for minsize=37
INFO:root:Chunked 100 in [9, 9, 9, 9, 8, 8, 8, 8, 8, 8, 8, 8]
INFO:root:Considering 100 * 1 jobs for minsize=38
INFO:root:Chunked 100 in [9, 9, 9, 9, 8, 8, 8, 8, 8, 8, 8, 8]
INFO:root:Considering 100 * 1 jobs for minsize=39
INFO:root:Chunked 100 in [9, 9, 9, 9, 8, 8, 8, 8, 8, 8, 8, 8]
INFO:root:Considering 100 * 1 jobs for minsize=40
INFO:root:Chunked 100 in [9, 9, 9, 9, 8, 8, 8, 8, 8, 8, 8, 8]
INFO:root:Considering 100 * 1 jobs for minsize=41
INFO:root:Chunked 100 in [9, 9, 9, 9, 8, 8, 8, 8, 8, 8, 8, 8]
INFO:root:Considering 100 * 1 jobs for minsize=42
INFO:root:Chunked 100 in [9, 9, 9, 9, 8, 8, 8, 8, 8, 8, 8, 8]
INFO:root:Considering 100 * 1 jobs for minsize=43
INFO:root:Chunked 100 in [9, 9, 9, 9, 8, 8, 8, 8, 8, 8, 8, 8]
INFO:root:Considering 100 * 1 jobs for minsize=44
INFO:root:Chunked 100 in [9, 9, 9, 9, 8, 8, 8, 8, 8, 8, 8, 8]
INFO:root:Considering 100 * 1 jobs for minsize=45
INFO:root:Chunked 100 in [9, 9, 9, 9, 8, 8, 8, 8, 8, 8, 8, 8]
INFO:root:Considering 100 * 1 jobs for minsize=46
INFO:root:Chunked 100 in [9, 9, 9, 9, 8, 8, 8, 8, 8, 8, 8, 8]
INFO:root:Considering 100 * 1 jobs for minsize=47
INFO:root:Chunked 100 in [9, 9, 9, 9, 8, 8, 8, 8, 8, 8, 8, 8]
INFO:root:Considering 100 * 1 jobs for minsize=48
INFO:root:Chunked 100 in [9, 9, 9, 9, 8, 8, 8, 8, 8, 8, 8, 8]
INFO:root:Considering 100 * 1 jobs for minsize=49
INFO:root:Chunked 100 in [9, 9, 9, 9, 8, 8, 8, 8, 8, 8, 8, 8]
INFO:root:Considering 100 * 1 jobs for minsize=50
INFO:root:Chunked 100 in [9, 9, 9, 9, 8, 8, 8, 8, 8, 8, 8, 8]
INFO:root:Considering 100 * 1 jobs for minsize=51
INFO:root:Chunked 100 in [9, 9, 9, 9, 8, 8, 8, 8, 8, 8, 8, 8]
INFO:root:Considering 100 * 1 jobs for minsize=52
INFO:root:Chunked 100 in [9, 9, 9, 9, 8, 8, 8, 8, 8, 8, 8, 8]
INFO:root:Considering 100 * 1 jobs for minsize=53
INFO:root:Chunked 100 in [9, 9, 9, 9, 8, 8, 8, 8, 8, 8, 8, 8]
INFO:root:Considering 100 * 1 jobs for minsize=54
INFO:root:Chunked 100 in [9, 9, 9, 9, 8, 8, 8, 8, 8, 8, 8, 8]
INFO:root:Long time solveLimited: 9106 5.5010597705841064
INFO:root:Considering 100 * 1 jobs for minsize=55
INFO:root:Chunked 100 in [9, 9, 9, 9, 8, 8, 8, 8, 8, 8, 8, 8]
INFO:root:Considering 100 * 1 jobs for minsize=56
INFO:root:Chunked 100 in [9, 9, 9, 9, 8, 8, 8, 8, 8, 8, 8, 8]
INFO:root:Considering 100 * 1 jobs for minsize=57
INFO:root:Chunked 100 in [9, 9, 9, 9, 8, 8, 8, 8, 8, 8, 8, 8]
INFO:root:Considering 100 * 1 jobs for minsize=58
INFO:root:Chunked 100 in [9, 9, 9, 9, 8, 8, 8, 8, 8, 8, 8, 8]
INFO:root:Considering 100 * 1 jobs for minsize=59
INFO:root:Chunked 100 in [9, 9, 9, 9, 8, 8, 8, 8, 8, 8, 8, 8]
INFO:root:Considering 100 * 1 jobs for minsize=60
INFO:root:Chunked 100 in [9, 9, 9, 9, 8, 8, 8, 8, 8, 8, 8, 8]
INFO:root:Long time solveLimited: 7521 5.048017978668213
INFO:root:Considering 100 * 1 jobs for minsize=61
INFO:root:Chunked 100 in [9, 9, 9, 9, 8, 8, 8, 8, 8, 8, 8, 8]
INFO:root:Considering 100 * 1 jobs for minsize=62
INFO:root:Chunked 100 in [9, 9, 9, 9, 8, 8, 8, 8, 8, 8, 8, 8]
INFO:root:Considering 100 * 1 jobs for minsize=63
INFO:root:Chunked 100 in [9, 9, 9, 9, 8, 8, 8, 8, 8, 8, 8, 8]
INFO:root:Long time solveLimited: 7579 5.273962497711182
INFO:root:Long time solveLimited: 7251 5.47636604309082
INFO:root:Long time solveLimited: 7169 5.8280863761901855
INFO:root:Long time solveLimited: 7907 6.6059582233428955
INFO:root:Long time solveLimited: 7907 5.514894247055054
INFO:root:Considering 100 * 1 jobs for minsize=64
INFO:root:Chunked 100 in [9, 9, 9, 9, 8, 8, 8, 8, 8, 8, 8, 8]
INFO:root:Considering 100 * 1 jobs for minsize=65
INFO:root:Chunked 100 in [9, 9, 9, 9, 8, 8, 8, 8, 8, 8, 8, 8]
INFO:root:Long time solveLimited: 8082 5.2822160720825195
INFO:root:Considering 100 * 1 jobs for minsize=66
INFO:root:Chunked 100 in [9, 9, 9, 9, 8, 8, 8, 8, 8, 8, 8, 8]
INFO:root:Long time solveLimited: 9361 6.710063695907593
INFO:root:Long time solveLimited: 8347 5.360655784606934
INFO:root:Considering 100 * 1 jobs for minsize=67
INFO:root:Chunked 100 in [9, 9, 9, 9, 8, 8, 8, 8, 8, 8, 8, 8]
INFO:root:Long time solveLimited: 8067 5.740171670913696
INFO:root:Long time solveLimited: 9222 7.4118194580078125
INFO:root:Long time solveLimited: 7451 5.425640344619751
INFO:root:Considering 100 * 1 jobs for minsize=68
INFO:root:Chunked 100 in [9, 9, 9, 9, 8, 8, 8, 8, 8, 8, 8, 8]
INFO:root:Long time solveLimited: 7415 6.085965394973755
INFO:root:Considering 100 * 1 jobs for minsize=69
INFO:root:Chunked 100 in [9, 9, 9, 9, 8, 8, 8, 8, 8, 8, 8, 8]
INFO:root:Long time solveLimited: 8281 6.539708137512207
INFO:root:Considering 100 * 1 jobs for minsize=70
INFO:root:Chunked 100 in [9, 9, 9, 9, 8, 8, 8, 8, 8, 8, 8, 8]
INFO:root:Considering 100 * 1 jobs for minsize=71
INFO:root:Chunked 100 in [9, 9, 9, 9, 8, 8, 8, 8, 8, 8, 8, 8]
INFO:root:Long time solveLimited: 7392 5.865280628204346
INFO:root:Long time solveLimited: 7465 5.463764429092407
INFO:root:Considering 100 * 1 jobs for minsize=72
INFO:root:Chunked 100 in [9, 9, 9, 9, 8, 8, 8, 8, 8, 8, 8, 8]
INFO:root:Long time solveLimited: 6787 6.7141454219818115
INFO:root:Long time solveLimited: 7435 6.347376108169556
INFO:root:Long time solveLimited: 8155 7.617483854293823
INFO:root:Considering 100 * 1 jobs for minsize=73
INFO:root:Chunked 100 in [9, 9, 9, 9, 8, 8, 8, 8, 8, 8, 8, 8]
INFO:root:Long time solveLimited: 8614 7.130909442901611
INFO:root:Long time solveLimited: 7904 7.714158773422241
INFO:root:Long time solveLimited: 7265 6.493301153182983
INFO:root:Long time solveLimited: 7833 7.187714338302612
INFO:root:Long time solveLimited: 7478 6.745919942855835
INFO:root:Considering 100 * 1 jobs for minsize=74
INFO:root:Chunked 100 in [9, 9, 9, 9, 8, 8, 8, 8, 8, 8, 8, 8]
INFO:root:Long time solveLimited: 7521 5.9262354373931885
INFO:root:Considering 100 * 1 jobs for minsize=75
INFO:root:Chunked 100 in [9, 9, 9, 9, 8, 8, 8, 8, 8, 8, 8, 8]
INFO:root:Long time solveLimited: 8461 5.86197304725647
INFO:root:Long time solveLimited: 7357 6.6069207191467285
INFO:root:XX found first (1, 3) is not 7 70
INFO:root:Trace: [(70, [(1, 3) is not 7])]
INFO:root:Trace Quality: [(70, 1)]
INFO:root:Trace Sorted: [(70, 1)]
INFO:root:Finished
INFO:root:Full Trace [(70, [(1, 3) is not 7])]
INFO:root:Trying {}
INFO:root:Starting Step 1
INFO:root:Current state [[[[1], [7, 8, 9], [5, 8, 9], [4, 6, 7, 8, 9], [2], [4, 5, 7, 8, 9], [4, 8, 9], [4, 6, 8], [3]], [[3, 7, 9], [4], [2, 3, 8, 9], [1, 7, 8, 9], [1, 6, 7, 8], [1, 3, 7, 8, 9], [1, 2, 8, 9], [5], [2, 6, 9]], [[3, 5, 9], [2, 3, 8, 9], [6], [1, 4, 8, 9], [1, 4, 5, 8], [1, 3, 4, 8, 9], [7], [1, 2, 4, 8], [2, 4, 9]], [[3, 4, 7, 9], [1, 2, 3, 7, 9], [1, 2, 3, 4, 9], [5], [1, 4, 7, 8], [6], [2, 3, 4, 8, 9], [2, 3, 4, 7, 8], [2, 4, 7, 9]], [[8], [2, 3, 6, 7], [2, 3, 4, 5], [2, 4, 7], [9], [2, 4, 7], [2, 3, 4, 5], [2, 3, 4, 6, 7], [1]], [[5, 6], [1, 2, 7, 9], [1, 2, 4, 9], [3], [1, 4, 7, 8], [1, 2, 4, 7, 8], [2, 4, 8, 9], [2, 4, 7, 8], [5, 6]], [[3, 4, 9], [1, 3, 8, 9], [7], [1, 2, 4, 8, 9], [1, 4, 5, 8], [1, 2, 4, 8, 9], [6], [1, 2, 3, 4], [2, 4, 5]], [[3, 4, 6], [5], [1, 3, 4, 8], [1, 2, 4, 7, 8], [1, 4, 6, 7, 8], [1, 2, 4, 7, 8], [1, 2, 3, 4], [9], [2, 4, 7]], [[2], [1, 6, 9], [1, 4, 9], [1, 4, 6, 7, 9], [3], [1, 4, 5, 7, 9], [1, 4, 5], [1, 4, 7], [8]]]]
INFO:root:Doing checkSmall1
INFO:root:Getting tiny MUSes, distance 1, for 1 puzlits, 1 repeats
INFO:root:Chunked 1 in [1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
INFO:root:Doing checkSmall2
INFO:root:Getting tiny MUSes, distance 2, for 1 puzlits, 1 repeats
INFO:root:Chunked 1 in [1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
INFO:root:Considering 100 * 1 jobs for minsize=3
INFO:root:Chunked 100 in [9, 9, 9, 9, 8, 8, 8, 8, 8, 8, 8, 8]
INFO:root:Considering 100 * 1 jobs for minsize=4
INFO:root:Chunked 100 in [9, 9, 9, 9, 8, 8, 8, 8, 8, 8, 8, 8]
INFO:root:Considering 100 * 1 jobs for minsize=5
INFO:root:Chunked 100 in [9, 9, 9, 9, 8, 8, 8, 8, 8, 8, 8, 8]
INFO:root:Considering 100 * 1 jobs for minsize=6
INFO:root:Chunked 100 in [9, 9, 9, 9, 8, 8, 8, 8, 8, 8, 8, 8]
INFO:root:Considering 100 * 1 jobs for minsize=7
INFO:root:Chunked 100 in [9, 9, 9, 9, 8, 8, 8, 8, 8, 8, 8, 8]
INFO:root:Considering 100 * 1 jobs for minsize=8
INFO:root:Chunked 100 in [9, 9, 9, 9, 8, 8, 8, 8, 8, 8, 8, 8]
INFO:root:Considering 100 * 1 jobs for minsize=9
INFO:root:Chunked 100 in [9, 9, 9, 9, 8, 8, 8, 8, 8, 8, 8, 8]
INFO:root:Considering 100 * 1 jobs for minsize=10
INFO:root:Chunked 100 in [9, 9, 9, 9, 8, 8, 8, 8, 8, 8, 8, 8]
INFO:root:Considering 100 * 1 jobs for minsize=11
INFO:root:Chunked 100 in [9, 9, 9, 9, 8, 8, 8, 8, 8, 8, 8, 8]
INFO:root:Considering 100 * 1 jobs for minsize=12
INFO:root:Chunked 100 in [9, 9, 9, 9, 8, 8, 8, 8, 8, 8, 8, 8]
INFO:root:Considering 100 * 1 jobs for minsize=13
INFO:root:Chunked 100 in [9, 9, 9, 9, 8, 8, 8, 8, 8, 8, 8, 8]
INFO:root:Considering 100 * 1 jobs for minsize=14
INFO:root:Chunked 100 in [9, 9, 9, 9, 8, 8, 8, 8, 8, 8, 8, 8]
INFO:root:Considering 100 * 1 jobs for minsize=15
INFO:root:Chunked 100 in [9, 9, 9, 9, 8, 8, 8, 8, 8, 8, 8, 8]
INFO:root:Considering 100 * 1 jobs for minsize=16
INFO:root:Chunked 100 in [9, 9, 9, 9, 8, 8, 8, 8, 8, 8, 8, 8]
INFO:root:Considering 100 * 1 jobs for minsize=17
INFO:root:Chunked 100 in [9, 9, 9, 9, 8, 8, 8, 8, 8, 8, 8, 8]
INFO:root:Considering 100 * 1 jobs for minsize=18
INFO:root:Chunked 100 in [9, 9, 9, 9, 8, 8, 8, 8, 8, 8, 8, 8]
INFO:root:Considering 100 * 1 jobs for minsize=19
INFO:root:Chunked 100 in [9, 9, 9, 9, 8, 8, 8, 8, 8, 8, 8, 8]
INFO:root:Considering 100 * 1 jobs for minsize=20
INFO:root:Chunked 100 in [9, 9, 9, 9, 8, 8, 8, 8, 8, 8, 8, 8]
INFO:root:Considering 100 * 1 jobs for minsize=21
INFO:root:Chunked 100 in [9, 9, 9, 9, 8, 8, 8, 8, 8, 8, 8, 8]
INFO:root:Considering 100 * 1 jobs for minsize=22
INFO:root:Chunked 100 in [9, 9, 9, 9, 8, 8, 8, 8, 8, 8, 8, 8]
INFO:root:Considering 100 * 1 jobs for minsize=23
INFO:root:Chunked 100 in [9, 9, 9, 9, 8, 8, 8, 8, 8, 8, 8, 8]
INFO:root:Considering 100 * 1 jobs for minsize=24
INFO:root:Chunked 100 in [9, 9, 9, 9, 8, 8, 8, 8, 8, 8, 8, 8]
INFO:root:Considering 100 * 1 jobs for minsize=25
INFO:root:Chunked 100 in [9, 9, 9, 9, 8, 8, 8, 8, 8, 8, 8, 8]
INFO:root:Considering 100 * 1 jobs for minsize=26
INFO:root:Chunked 100 in [9, 9, 9, 9, 8, 8, 8, 8, 8, 8, 8, 8]
INFO:root:Considering 100 * 1 jobs for minsize=27
INFO:root:Chunked 100 in [9, 9, 9, 9, 8, 8, 8, 8, 8, 8, 8, 8]
INFO:root:Considering 100 * 1 jobs for minsize=28
INFO:root:Chunked 100 in [9, 9, 9, 9, 8, 8, 8, 8, 8, 8, 8, 8]
INFO:root:XX found first (1, 4) is not 8 29
INFO:root:XX add new best (1, 4) is not 8 29 29
INFO:root:XX add new best (1, 4) is not 8 29 29
INFO:root:XX add new best (1, 4) is not 8 29 29
INFO:root:XX add new best (1, 4) is not 8 29 29
INFO:root:XX add new best (1, 4) is not 8 29 29
INFO:root:XX add new best (1, 4) is not 8 29 29
INFO:root:XX add new best (1, 4) is not 8 29 29
INFO:root:Considering 100 * 1 jobs for minsize=29
INFO:root:Chunked 100 in [9, 9, 9, 9, 8, 8, 8, 8, 8, 8, 8, 8]
INFO:root:XX add new best (1, 4) is not 8 29 29
INFO:root:XX add new best (1, 4) is not 8 29 29
INFO:root:XX add new best (1, 4) is not 8 29 29
INFO:root:XX add new best (1, 4) is not 8 29 29
INFO:root:XX add new best (1, 4) is not 8 29 29
INFO:root:XX add new best (1, 4) is not 8 29 29
INFO:root:Trace: [(29, [(1, 4) is not 8])]
INFO:root:Trace Quality: [(29, 1)]
INFO:root:Trace Sorted: [(29, 1)]
INFO:root:Finished
INFO:root:Full Trace [(29, [(1, 4) is not 8])]
INFO:root:Trying {'prechopMUSes': True}
INFO:root:Starting Step 1
INFO:root:Current state [[[[1], [7, 8, 9], [5, 8, 9], [4, 6, 7, 8, 9], [2], [4, 5, 7, 8, 9], [4, 8, 9], [4, 6, 8], [3]], [[3, 7, 9], [4], [2, 3, 8, 9], [1, 7, 8, 9], [1, 6, 7, 8], [1, 3, 7, 8, 9], [1, 2, 8, 9], [5], [2, 6, 9]], [[3, 5, 9], [2, 3, 8, 9], [6], [1, 4, 8, 9], [1, 4, 5, 8], [1, 3, 4, 8, 9], [7], [1, 2, 4, 8], [2, 4, 9]], [[3, 4, 7, 9], [1, 2, 3, 7, 9], [1, 2, 3, 4, 9], [5], [1, 4, 7, 8], [6], [2, 3, 4, 8, 9], [2, 3, 4, 7, 8], [2, 4, 7, 9]], [[8], [2, 3, 6, 7], [2, 3, 4, 5], [2, 4, 7], [9], [2, 4, 7], [2, 3, 4, 5], [2, 3, 4, 6, 7], [1]], [[5, 6], [1, 2, 7, 9], [1, 2, 4, 9], [3], [1, 4, 7, 8], [1, 2, 4, 7, 8], [2, 4, 8, 9], [2, 4, 7, 8], [5, 6]], [[3, 4, 9], [1, 3, 8, 9], [7], [1, 2, 4, 8, 9], [1, 4, 5, 8], [1, 2, 4, 8, 9], [6], [1, 2, 3, 4], [2, 4, 5]], [[3, 4, 6], [5], [1, 3, 4, 8], [1, 2, 4, 7, 8], [1, 4, 6, 7, 8], [1, 2, 4, 7, 8], [1, 2, 3, 4], [9], [2, 4, 7]], [[2], [1, 6, 9], [1, 4, 9], [1, 4, 6, 7, 9], [3], [1, 4, 5, 7, 9], [1, 4, 5], [1, 4, 7], [8]]]]
INFO:root:Doing checkSmall1
INFO:root:Getting tiny MUSes, distance 1, for 1 puzlits, 1 repeats
INFO:root:Chunked 1 in [1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
INFO:root:Doing checkSmall2
INFO:root:Getting tiny MUSes, distance 2, for 1 puzlits, 1 repeats
INFO:root:Chunked 1 in [1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
INFO:root:Considering 100 * 1 jobs for minsize=3
INFO:root:Chunked 100 in [9, 9, 9, 9, 8, 8, 8, 8, 8, 8, 8, 8]
INFO:root:Considering 100 * 1 jobs for minsize=4
INFO:root:Chunked 100 in [9, 9, 9, 9, 8, 8, 8, 8, 8, 8, 8, 8]
INFO:root:Considering 100 * 1 jobs for minsize=5
INFO:root:Chunked 100 in [9, 9, 9, 9, 8, 8, 8, 8, 8, 8, 8, 8]
INFO:root:Considering 100 * 1 jobs for minsize=6
INFO:root:Chunked 100 in [9, 9, 9, 9, 8, 8, 8, 8, 8, 8, 8, 8]
INFO:root:Considering 100 * 1 jobs for minsize=7
INFO:root:Chunked 100 in [9, 9, 9, 9, 8, 8, 8, 8, 8, 8, 8, 8]
INFO:root:Considering 100 * 1 jobs for minsize=8
INFO:root:Chunked 100 in [9, 9, 9, 9, 8, 8, 8, 8, 8, 8, 8, 8]
INFO:root:Considering 100 * 1 jobs for minsize=9
INFO:root:Chunked 100 in [9, 9, 9, 9, 8, 8, 8, 8, 8, 8, 8, 8]
INFO:root:Considering 100 * 1 jobs for minsize=10
INFO:root:Chunked 100 in [9, 9, 9, 9, 8, 8, 8, 8, 8, 8, 8, 8]
INFO:root:Considering 100 * 1 jobs for minsize=11
INFO:root:Chunked 100 in [9, 9, 9, 9, 8, 8, 8, 8, 8, 8, 8, 8]
INFO:root:Considering 100 * 1 jobs for minsize=12
INFO:root:Chunked 100 in [9, 9, 9, 9, 8, 8, 8, 8, 8, 8, 8, 8]
INFO:root:Considering 100 * 1 jobs for minsize=13
INFO:root:Chunked 100 in [9, 9, 9, 9, 8, 8, 8, 8, 8, 8, 8, 8]
INFO:root:Considering 100 * 1 jobs for minsize=14
INFO:root:Chunked 100 in [9, 9, 9, 9, 8, 8, 8, 8, 8, 8, 8, 8]
INFO:root:Considering 100 * 1 jobs for minsize=15
INFO:root:Chunked 100 in [9, 9, 9, 9, 8, 8, 8, 8, 8, 8, 8, 8]
INFO:root:Considering 100 * 1 jobs for minsize=16
INFO:root:Chunked 100 in [9, 9, 9, 9, 8, 8, 8, 8, 8, 8, 8, 8]
INFO:root:Considering 100 * 1 jobs for minsize=17
INFO:root:Chunked 100 in [9, 9, 9, 9, 8, 8, 8, 8, 8, 8, 8, 8]
INFO:root:Considering 100 * 1 jobs for minsize=18
INFO:root:Chunked 100 in [9, 9, 9, 9, 8, 8, 8, 8, 8, 8, 8, 8]
INFO:root:Considering 100 * 1 jobs for minsize=19
INFO:root:Chunked 100 in [9, 9, 9, 9, 8, 8, 8, 8, 8, 8, 8, 8]
INFO:root:Considering 100 * 1 jobs for minsize=20
INFO:root:Chunked 100 in [9, 9, 9, 9, 8, 8, 8, 8, 8, 8, 8, 8]
INFO:root:Considering 100 * 1 jobs for minsize=21
INFO:root:Chunked 100 in [9, 9, 9, 9, 8, 8, 8, 8, 8, 8, 8, 8]
INFO:root:Considering 100 * 1 jobs for minsize=22
INFO:root:Chunked 100 in [9, 9, 9, 9, 8, 8, 8, 8, 8, 8, 8, 8]
INFO:root:Considering 100 * 1 jobs for minsize=23
INFO:root:Chunked 100 in [9, 9, 9, 9, 8, 8, 8, 8, 8, 8, 8, 8]
INFO:root:Considering 100 * 1 jobs for minsize=24
INFO:root:Chunked 100 in [9, 9, 9, 9, 8, 8, 8, 8, 8, 8, 8, 8]
INFO:root:Considering 100 * 1 jobs for minsize=25
INFO:root:Chunked 100 in [9, 9, 9, 9, 8, 8, 8, 8, 8, 8, 8, 8]
INFO:root:Considering 100 * 1 jobs for minsize=26
INFO:root:Chunked 100 in [9, 9, 9, 9, 8, 8, 8, 8, 8, 8, 8, 8]
INFO:root:Considering 100 * 1 jobs for minsize=27
INFO:root:Chunked 100 in [9, 9, 9, 9, 8, 8, 8, 8, 8, 8, 8, 8]
INFO:root:Considering 100 * 1 jobs for minsize=28
INFO:root:Chunked 100 in [9, 9, 9, 9, 8, 8, 8, 8, 8, 8, 8, 8]
INFO:root:Considering 100 * 1 jobs for minsize=29
INFO:root:Chunked 100 in [9, 9, 9, 9, 8, 8, 8, 8, 8, 8, 8, 8]
INFO:root:Considering 100 * 1 jobs for minsize=30
INFO:root:Chunked 100 in [9, 9, 9, 9, 8, 8, 8, 8, 8, 8, 8, 8]
INFO:root:Considering 100 * 1 jobs for minsize=31
INFO:root:Chunked 100 in [9, 9, 9, 9, 8, 8, 8, 8, 8, 8, 8, 8]
INFO:root:Considering 100 * 1 jobs for minsize=32
INFO:root:Chunked 100 in [9, 9, 9, 9, 8, 8, 8, 8, 8, 8, 8, 8]
INFO:root:Considering 100 * 1 jobs for minsize=33
INFO:root:Chunked 100 in [9, 9, 9, 9, 8, 8, 8, 8, 8, 8, 8, 8]
INFO:root:XX found first (1, 4) is not 8 33
INFO:root:XX add new best (1, 4) is not 8 33 33
INFO:root:Trace: [(33, [(1, 4) is not 8])]
INFO:root:Trace Quality: [(33, 1)]
INFO:root:Trace Sorted: [(33, 1)]
INFO:root:Finished
INFO:root:Full Trace [(33, [(1, 4) is not 8])]
INFO:root:Trying {'quarterChopMUS': True}
INFO:root:Starting Step 1
INFO:root:Current state [[[[1], [7, 8, 9], [5, 8, 9], [4, 6, 7, 8, 9], [2], [4, 5, 7, 8, 9], [4, 8, 9], [4, 6, 8], [3]], [[3, 7, 9], [4], [2, 3, 8, 9], [1, 7, 8, 9], [1, 6, 7, 8], [1, 3, 7, 8, 9], [1, 2, 8, 9], [5], [2, 6, 9]], [[3, 5, 9], [2, 3, 8, 9], [6], [1, 4, 8, 9], [1, 4, 5, 8], [1, 3, 4, 8, 9], [7], [1, 2, 4, 8], [2, 4, 9]], [[3, 4, 7, 9], [1, 2, 3, 7, 9], [1, 2, 3, 4, 9], [5], [1, 4, 7, 8], [6], [2, 3, 4, 8, 9], [2, 3, 4, 7, 8], [2, 4, 7, 9]], [[8], [2, 3, 6, 7], [2, 3, 4, 5], [2, 4, 7], [9], [2, 4, 7], [2, 3, 4, 5], [2, 3, 4, 6, 7], [1]], [[5, 6], [1, 2, 7, 9], [1, 2, 4, 9], [3], [1, 4, 7, 8], [1, 2, 4, 7, 8], [2, 4, 8, 9], [2, 4, 7, 8], [5, 6]], [[3, 4, 9], [1, 3, 8, 9], [7], [1, 2, 4, 8, 9], [1, 4, 5, 8], [1, 2, 4, 8, 9], [6], [1, 2, 3, 4], [2, 4, 5]], [[3, 4, 6], [5], [1, 3, 4, 8], [1, 2, 4, 7, 8], [1, 4, 6, 7, 8], [1, 2, 4, 7, 8], [1, 2, 3, 4], [9], [2, 4, 7]], [[2], [1, 6, 9], [1, 4, 9], [1, 4, 6, 7, 9], [3], [1, 4, 5, 7, 9], [1, 4, 5], [1, 4, 7], [8]]]]
INFO:root:Doing checkSmall1
INFO:root:Getting tiny MUSes, distance 1, for 1 puzlits, 1 repeats
INFO:root:Chunked 1 in [1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
INFO:root:Doing checkSmall2
INFO:root:Getting tiny MUSes, distance 2, for 1 puzlits, 1 repeats
INFO:root:Chunked 1 in [1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
INFO:root:Considering 100 * 1 jobs for minsize=3
INFO:root:Chunked 100 in [9, 9, 9, 9, 8, 8, 8, 8, 8, 8, 8, 8]
INFO:root:Considering 100 * 1 jobs for minsize=4
INFO:root:Chunked 100 in [9, 9, 9, 9, 8, 8, 8, 8, 8, 8, 8, 8]
INFO:root:Considering 100 * 1 jobs for minsize=5
INFO:root:Chunked 100 in [9, 9, 9, 9, 8, 8, 8, 8, 8, 8, 8, 8]
INFO:root:Considering 100 * 1 jobs for minsize=6
INFO:root:Chunked 100 in [9, 9, 9, 9, 8, 8, 8, 8, 8, 8, 8, 8]
INFO:root:Considering 100 * 1 jobs for minsize=7
INFO:root:Chunked 100 in [9, 9, 9, 9, 8, 8, 8, 8, 8, 8, 8, 8]
INFO:root:Considering 100 * 1 jobs for minsize=8
INFO:root:Chunked 100 in [9, 9, 9, 9, 8, 8, 8, 8, 8, 8, 8, 8]
INFO:root:Considering 100 * 1 jobs for minsize=9
INFO:root:Chunked 100 in [9, 9, 9, 9, 8, 8, 8, 8, 8, 8, 8, 8]
INFO:root:Considering 100 * 1 jobs for minsize=10
INFO:root:Chunked 100 in [9, 9, 9, 9, 8, 8, 8, 8, 8, 8, 8, 8]
INFO:root:Considering 100 * 1 jobs for minsize=11
INFO:root:Chunked 100 in [9, 9, 9, 9, 8, 8, 8, 8, 8, 8, 8, 8]
INFO:root:Considering 100 * 1 jobs for minsize=12
INFO:root:Chunked 100 in [9, 9, 9, 9, 8, 8, 8, 8, 8, 8, 8, 8]
INFO:root:Considering 100 * 1 jobs for minsize=13
INFO:root:Chunked 100 in [9, 9, 9, 9, 8, 8, 8, 8, 8, 8, 8, 8]
INFO:root:Considering 100 * 1 jobs for minsize=14
INFO:root:Chunked 100 in [9, 9, 9, 9, 8, 8, 8, 8, 8, 8, 8, 8]
INFO:root:Considering 100 * 1 jobs for minsize=15
INFO:root:Chunked 100 in [9, 9, 9, 9, 8, 8, 8, 8, 8, 8, 8, 8]
INFO:root:Considering 100 * 1 jobs for minsize=16
INFO:root:Chunked 100 in [9, 9, 9, 9, 8, 8, 8, 8, 8, 8, 8, 8]
INFO:root:Considering 100 * 1 jobs for minsize=17
INFO:root:Chunked 100 in [9, 9, 9, 9, 8, 8, 8, 8, 8, 8, 8, 8]
INFO:root:Considering 100 * 1 jobs for minsize=18
INFO:root:Chunked 100 in [9, 9, 9, 9, 8, 8, 8, 8, 8, 8, 8, 8]
INFO:root:Considering 100 * 1 jobs for minsize=19
INFO:root:Chunked 100 in [9, 9, 9, 9, 8, 8, 8, 8, 8, 8, 8, 8]
INFO:root:Considering 100 * 1 jobs for minsize=20
INFO:root:Chunked 100 in [9, 9, 9, 9, 8, 8, 8, 8, 8, 8, 8, 8]
INFO:root:Considering 100 * 1 jobs for minsize=21
INFO:root:Chunked 100 in [9, 9, 9, 9, 8, 8, 8, 8, 8, 8, 8, 8]
INFO:root:Considering 100 * 1 jobs for minsize=22
INFO:root:Chunked 100 in [9, 9, 9, 9, 8, 8, 8, 8, 8, 8, 8, 8]
INFO:root:Considering 100 * 1 jobs for minsize=23
INFO:root:Chunked 100 in [9, 9, 9, 9, 8, 8, 8, 8, 8, 8, 8, 8]
INFO:root:Considering 100 * 1 jobs for minsize=24
INFO:root:Chunked 100 in [9, 9, 9, 9, 8, 8, 8, 8, 8, 8, 8, 8]
INFO:root:Considering 100 * 1 jobs for minsize=25
INFO:root:Chunked 100 in [9, 9, 9, 9, 8, 8, 8, 8, 8, 8, 8, 8]
INFO:root:Considering 100 * 1 jobs for minsize=26
INFO:root:Chunked 100 in [9, 9, 9, 9, 8, 8, 8, 8, 8, 8, 8, 8]
INFO:root:Considering 100 * 1 jobs for minsize=27
INFO:root:Chunked 100 in [9, 9, 9, 9, 8, 8, 8, 8, 8, 8, 8, 8]
INFO:root:Considering 100 * 1 jobs for minsize=28
INFO:root:Chunked 100 in [9, 9, 9, 9, 8, 8, 8, 8, 8, 8, 8, 8]
INFO:root:Considering 100 * 1 jobs for minsize=29
INFO:root:Chunked 100 in [9, 9, 9, 9, 8, 8, 8, 8, 8, 8, 8, 8]
INFO:root:Considering 100 * 1 jobs for minsize=30
INFO:root:Chunked 100 in [9, 9, 9, 9, 8, 8, 8, 8, 8, 8, 8, 8]
INFO:root:Considering 100 * 1 jobs for minsize=31
INFO:root:Chunked 100 in [9, 9, 9, 9, 8, 8, 8, 8, 8, 8, 8, 8]
INFO:root:Considering 100 * 1 jobs for minsize=32
INFO:root:Chunked 100 in [9, 9, 9, 9, 8, 8, 8, 8, 8, 8, 8, 8]
INFO:root:XX found first (1, 4) is not 8 32
INFO:root:Trace: [(32, [(1, 4) is not 8])]
INFO:root:Trace Quality: [(32, 1)]
INFO:root:Trace Sorted: [(32, 1)]
INFO:root:Finished
INFO:root:Full Trace [(32, [(1, 4) is not 8])]
INFO:root:Trying {'minPrecheckMUS': True}
INFO:root:Starting Step 1
INFO:root:Current state [[[[1], [7, 8, 9], [5, 8, 9], [4, 6, 7, 8, 9], [2], [4, 5, 7, 8, 9], [4, 8, 9], [4, 6, 8], [3]], [[3, 7, 9], [4], [2, 3, 8, 9], [1, 7, 8, 9], [1, 6, 7, 8], [1, 3, 7, 8, 9], [1, 2, 8, 9], [5], [2, 6, 9]], [[3, 5, 9], [2, 3, 8, 9], [6], [1, 4, 8, 9], [1, 4, 5, 8], [1, 3, 4, 8, 9], [7], [1, 2, 4, 8], [2, 4, 9]], [[3, 4, 7, 9], [1, 2, 3, 7, 9], [1, 2, 3, 4, 9], [5], [1, 4, 7, 8], [6], [2, 3, 4, 8, 9], [2, 3, 4, 7, 8], [2, 4, 7, 9]], [[8], [2, 3, 6, 7], [2, 3, 4, 5], [2, 4, 7], [9], [2, 4, 7], [2, 3, 4, 5], [2, 3, 4, 6, 7], [1]], [[5, 6], [1, 2, 7, 9], [1, 2, 4, 9], [3], [1, 4, 7, 8], [1, 2, 4, 7, 8], [2, 4, 8, 9], [2, 4, 7, 8], [5, 6]], [[3, 4, 9], [1, 3, 8, 9], [7], [1, 2, 4, 8, 9], [1, 4, 5, 8], [1, 2, 4, 8, 9], [6], [1, 2, 3, 4], [2, 4, 5]], [[3, 4, 6], [5], [1, 3, 4, 8], [1, 2, 4, 7, 8], [1, 4, 6, 7, 8], [1, 2, 4, 7, 8], [1, 2, 3, 4], [9], [2, 4, 7]], [[2], [1, 6, 9], [1, 4, 9], [1, 4, 6, 7, 9], [3], [1, 4, 5, 7, 9], [1, 4, 5], [1, 4, 7], [8]]]]
INFO:root:Doing checkSmall1
INFO:root:Getting tiny MUSes, distance 1, for 1 puzlits, 1 repeats
INFO:root:Chunked 1 in [1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
INFO:root:Doing checkSmall2
INFO:root:Getting tiny MUSes, distance 2, for 1 puzlits, 1 repeats
INFO:root:Chunked 1 in [1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
INFO:root:Considering 100 * 1 jobs for minsize=3
INFO:root:Chunked 100 in [9, 9, 9, 9, 8, 8, 8, 8, 8, 8, 8, 8]
INFO:root:Considering 100 * 1 jobs for minsize=4
INFO:root:Chunked 100 in [9, 9, 9, 9, 8, 8, 8, 8, 8, 8, 8, 8]
INFO:root:Considering 100 * 1 jobs for minsize=5
INFO:root:Chunked 100 in [9, 9, 9, 9, 8, 8, 8, 8, 8, 8, 8, 8]
INFO:root:Considering 100 * 1 jobs for minsize=6
INFO:root:Chunked 100 in [9, 9, 9, 9, 8, 8, 8, 8, 8, 8, 8, 8]
INFO:root:Considering 100 * 1 jobs for minsize=7
INFO:root:Chunked 100 in [9, 9, 9, 9, 8, 8, 8, 8, 8, 8, 8, 8]
INFO:root:Considering 100 * 1 jobs for minsize=8
INFO:root:Chunked 100 in [9, 9, 9, 9, 8, 8, 8, 8, 8, 8, 8, 8]
INFO:root:Considering 100 * 1 jobs for minsize=9
INFO:root:Chunked 100 in [9, 9, 9, 9, 8, 8, 8, 8, 8, 8, 8, 8]
INFO:root:Considering 100 * 1 jobs for minsize=10
INFO:root:Chunked 100 in [9, 9, 9, 9, 8, 8, 8, 8, 8, 8, 8, 8]
INFO:root:Considering 100 * 1 jobs for minsize=11
INFO:root:Chunked 100 in [9, 9, 9, 9, 8, 8, 8, 8, 8, 8, 8, 8]
INFO:root:Considering 100 * 1 jobs for minsize=12
INFO:root:Chunked 100 in [9, 9, 9, 9, 8, 8, 8, 8, 8, 8, 8, 8]
INFO:root:Considering 100 * 1 jobs for minsize=13
INFO:root:Chunked 100 in [9, 9, 9, 9, 8, 8, 8, 8, 8, 8, 8, 8]
INFO:root:Considering 100 * 1 jobs for minsize=14
INFO:root:Chunked 100 in [9, 9, 9, 9, 8, 8, 8, 8, 8, 8, 8, 8]
INFO:root:Considering 100 * 1 jobs for minsize=15
INFO:root:Chunked 100 in [9, 9, 9, 9, 8, 8, 8, 8, 8, 8, 8, 8]
INFO:root:Considering 100 * 1 jobs for minsize=16
INFO:root:Chunked 100 in [9, 9, 9, 9, 8, 8, 8, 8, 8, 8, 8, 8]
INFO:root:Considering 100 * 1 jobs for minsize=17
INFO:root:Chunked 100 in [9, 9, 9, 9, 8, 8, 8, 8, 8, 8, 8, 8]
INFO:root:Considering 100 * 1 jobs for minsize=18
INFO:root:Chunked 100 in [9, 9, 9, 9, 8, 8, 8, 8, 8, 8, 8, 8]
INFO:root:Considering 100 * 1 jobs for minsize=19
INFO:root:Chunked 100 in [9, 9, 9, 9, 8, 8, 8, 8, 8, 8, 8, 8]
INFO:root:Considering 100 * 1 jobs for minsize=20
INFO:root:Chunked 100 in [9, 9, 9, 9, 8, 8, 8, 8, 8, 8, 8, 8]
INFO:root:Considering 100 * 1 jobs for minsize=21
INFO:root:Chunked 100 in [9, 9, 9, 9, 8, 8, 8, 8, 8, 8, 8, 8]
INFO:root:Considering 100 * 1 jobs for minsize=22
INFO:root:Chunked 100 in [9, 9, 9, 9, 8, 8, 8, 8, 8, 8, 8, 8]
INFO:root:Considering 100 * 1 jobs for minsize=23
INFO:root:Chunked 100 in [9, 9, 9, 9, 8, 8, 8, 8, 8, 8, 8, 8]
INFO:root:Considering 100 * 1 jobs for minsize=24
INFO:root:Chunked 100 in [9, 9, 9, 9, 8, 8, 8, 8, 8, 8, 8, 8]
INFO:root:Considering 100 * 1 jobs for minsize=25
INFO:root:Chunked 100 in [9, 9, 9, 9, 8, 8, 8, 8, 8, 8, 8, 8]
INFO:root:Considering 100 * 1 jobs for minsize=26
INFO:root:Chunked 100 in [9, 9, 9, 9, 8, 8, 8, 8, 8, 8, 8, 8]
INFO:root:Considering 100 * 1 jobs for minsize=27
INFO:root:Chunked 100 in [9, 9, 9, 9, 8, 8, 8, 8, 8, 8, 8, 8]
INFO:root:Considering 100 * 1 jobs for minsize=28
INFO:root:Chunked 100 in [9, 9, 9, 9, 8, 8, 8, 8, 8, 8, 8, 8]
INFO:root:Considering 100 * 1 jobs for minsize=29
INFO:root:Chunked 100 in [9, 9, 9, 9, 8, 8, 8, 8, 8, 8, 8, 8]
INFO:root:Considering 100 * 1 jobs for minsize=30
INFO:root:Chunked 100 in [9, 9, 9, 9, 8, 8, 8, 8, 8, 8, 8, 8]
INFO:root:Considering 100 * 1 jobs for minsize=31
INFO:root:Chunked 100 in [9, 9, 9, 9, 8, 8, 8, 8, 8, 8, 8, 8]
INFO:root:Considering 100 * 1 jobs for minsize=32
INFO:root:Chunked 100 in [9, 9, 9, 9, 8, 8, 8, 8, 8, 8, 8, 8]
INFO:root:XX found first (1, 4) is not 8 31
INFO:root:XX add new best (1, 4) is not 8 31 31
INFO:root:Trace: [(31, [(1, 4) is not 8])]
INFO:root:Trace Quality: [(31, 1)]
INFO:root:Trace Sorted: [(31, 1)]
INFO:root:Finished
INFO:root:Full Trace [(31, [(1, 4) is not 8])]
INFO:root:Trying {'gallopingMUSes': True}
INFO:root:Starting Step 1
INFO:root:Current state [[[[1], [7, 8, 9], [5, 8, 9], [4, 6, 7, 8, 9], [2], [4, 5, 7, 8, 9], [4, 8, 9], [4, 6, 8], [3]], [[3, 7, 9], [4], [2, 3, 8, 9], [1, 7, 8, 9], [1, 6, 7, 8], [1, 3, 7, 8, 9], [1, 2, 8, 9], [5], [2, 6, 9]], [[3, 5, 9], [2, 3, 8, 9], [6], [1, 4, 8, 9], [1, 4, 5, 8], [1, 3, 4, 8, 9], [7], [1, 2, 4, 8], [2, 4, 9]], [[3, 4, 7, 9], [1, 2, 3, 7, 9], [1, 2, 3, 4, 9], [5], [1, 4, 7, 8], [6], [2, 3, 4, 8, 9], [2, 3, 4, 7, 8], [2, 4, 7, 9]], [[8], [2, 3, 6, 7], [2, 3, 4, 5], [2, 4, 7], [9], [2, 4, 7], [2, 3, 4, 5], [2, 3, 4, 6, 7], [1]], [[5, 6], [1, 2, 7, 9], [1, 2, 4, 9], [3], [1, 4, 7, 8], [1, 2, 4, 7, 8], [2, 4, 8, 9], [2, 4, 7, 8], [5, 6]], [[3, 4, 9], [1, 3, 8, 9], [7], [1, 2, 4, 8, 9], [1, 4, 5, 8], [1, 2, 4, 8, 9], [6], [1, 2, 3, 4], [2, 4, 5]], [[3, 4, 6], [5], [1, 3, 4, 8], [1, 2, 4, 7, 8], [1, 4, 6, 7, 8], [1, 2, 4, 7, 8], [1, 2, 3, 4], [9], [2, 4, 7]], [[2], [1, 6, 9], [1, 4, 9], [1, 4, 6, 7, 9], [3], [1, 4, 5, 7, 9], [1, 4, 5], [1, 4, 7], [8]]]]
INFO:root:Doing checkSmall1
INFO:root:Getting tiny MUSes, distance 1, for 1 puzlits, 1 repeats
INFO:root:Chunked 1 in [1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
INFO:root:Doing checkSmall2
INFO:root:Getting tiny MUSes, distance 2, for 1 puzlits, 1 repeats
INFO:root:Chunked 1 in [1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
INFO:root:Considering 100 * 1 jobs for minsize=3
INFO:root:Chunked 100 in [9, 9, 9, 9, 8, 8, 8, 8, 8, 8, 8, 8]
INFO:root:Considering 100 * 1 jobs for minsize=4
INFO:root:Chunked 100 in [9, 9, 9, 9, 8, 8, 8, 8, 8, 8, 8, 8]
INFO:root:Considering 100 * 1 jobs for minsize=5
INFO:root:Chunked 100 in [9, 9, 9, 9, 8, 8, 8, 8, 8, 8, 8, 8]
INFO:root:Considering 100 * 1 jobs for minsize=6
INFO:root:Chunked 100 in [9, 9, 9, 9, 8, 8, 8, 8, 8, 8, 8, 8]
INFO:root:Considering 100 * 1 jobs for minsize=7
INFO:root:Chunked 100 in [9, 9, 9, 9, 8, 8, 8, 8, 8, 8, 8, 8]
INFO:root:Considering 100 * 1 jobs for minsize=8
INFO:root:Chunked 100 in [9, 9, 9, 9, 8, 8, 8, 8, 8, 8, 8, 8]
INFO:root:Considering 100 * 1 jobs for minsize=9
INFO:root:Chunked 100 in [9, 9, 9, 9, 8, 8, 8, 8, 8, 8, 8, 8]
INFO:root:Considering 100 * 1 jobs for minsize=10
INFO:root:Chunked 100 in [9, 9, 9, 9, 8, 8, 8, 8, 8, 8, 8, 8]
INFO:root:Considering 100 * 1 jobs for minsize=11
INFO:root:Chunked 100 in [9, 9, 9, 9, 8, 8, 8, 8, 8, 8, 8, 8]
INFO:root:Considering 100 * 1 jobs for minsize=12
INFO:root:Chunked 100 in [9, 9, 9, 9, 8, 8, 8, 8, 8, 8, 8, 8]
INFO:root:Considering 100 * 1 jobs for minsize=13
INFO:root:Chunked 100 in [9, 9, 9, 9, 8, 8, 8, 8, 8, 8, 8, 8]
INFO:root:Considering 100 * 1 jobs for minsize=14
INFO:root:Chunked 100 in [9, 9, 9, 9, 8, 8, 8, 8, 8, 8, 8, 8]
INFO:root:Considering 100 * 1 jobs for minsize=15
INFO:root:Chunked 100 in [9, 9, 9, 9, 8, 8, 8, 8, 8, 8, 8, 8]
INFO:root:Considering 100 * 1 jobs for minsize=16
INFO:root:Chunked 100 in [9, 9, 9, 9, 8, 8, 8, 8, 8, 8, 8, 8]
INFO:root:Considering 100 * 1 jobs for minsize=17
INFO:root:Chunked 100 in [9, 9, 9, 9, 8, 8, 8, 8, 8, 8, 8, 8]
INFO:root:Considering 100 * 1 jobs for minsize=18
INFO:root:Chunked 100 in [9, 9, 9, 9, 8, 8, 8, 8, 8, 8, 8, 8]
INFO:root:Considering 100 * 1 jobs for minsize=19
INFO:root:Chunked 100 in [9, 9, 9, 9, 8, 8, 8, 8, 8, 8, 8, 8]
INFO:root:Considering 100 * 1 jobs for minsize=20
INFO:root:Chunked 100 in [9, 9, 9, 9, 8, 8, 8, 8, 8, 8, 8, 8]
INFO:root:Considering 100 * 1 jobs for minsize=21
INFO:root:Chunked 100 in [9, 9, 9, 9, 8, 8, 8, 8, 8, 8, 8, 8]
INFO:root:Considering 100 * 1 jobs for minsize=22
INFO:root:Chunked 100 in [9, 9, 9, 9, 8, 8, 8, 8, 8, 8, 8, 8]
INFO:root:Considering 100 * 1 jobs for minsize=23
INFO:root:Chunked 100 in [9, 9, 9, 9, 8, 8, 8, 8, 8, 8, 8, 8]
INFO:root:Considering 100 * 1 jobs for minsize=24
INFO:root:Chunked 100 in [9, 9, 9, 9, 8, 8, 8, 8, 8, 8, 8, 8]
INFO:root:Considering 100 * 1 jobs for minsize=25
INFO:root:Chunked 100 in [9, 9, 9, 9, 8, 8, 8, 8, 8, 8, 8, 8]
INFO:root:Considering 100 * 1 jobs for minsize=26
INFO:root:Chunked 100 in [9, 9, 9, 9, 8, 8, 8, 8, 8, 8, 8, 8]
INFO:root:Considering 100 * 1 jobs for minsize=27
INFO:root:Chunked 100 in [9, 9, 9, 9, 8, 8, 8, 8, 8, 8, 8, 8]
INFO:root:Considering 100 * 1 jobs for minsize=28
INFO:root:Chunked 100 in [9, 9, 9, 9, 8, 8, 8, 8, 8, 8, 8, 8]
INFO:root:Considering 100 * 1 jobs for minsize=29
INFO:root:Chunked 100 in [9, 9, 9, 9, 8, 8, 8, 8, 8, 8, 8, 8]
INFO:root:Considering 100 * 1 jobs for minsize=30
INFO:root:Chunked 100 in [9, 9, 9, 9, 8, 8, 8, 8, 8, 8, 8, 8]
INFO:root:Considering 100 * 1 jobs for minsize=31
INFO:root:Chunked 100 in [9, 9, 9, 9, 8, 8, 8, 8, 8, 8, 8, 8]
INFO:root:XX found first (1, 4) is not 8 31
INFO:root:Trace: [(31, [(1, 4) is not 8])]
INFO:root:Trace Quality: [(31, 1)]
INFO:root:Trace Sorted: [(31, 1)]
INFO:root:Finished
INFO:root:Full Trace [(31, [(1, 4) is not 8])]
INFO:root:Trying {'minPrecheckStepsMUS': True}
INFO:root:Starting Step 1
INFO:root:Current state [[[[1], [7, 8, 9], [5, 8, 9], [4, 6, 7, 8, 9], [2], [4, 5, 7, 8, 9], [4, 8, 9], [4, 6, 8], [3]], [[3, 7, 9], [4], [2, 3, 8, 9], [1, 7, 8, 9], [1, 6, 7, 8], [1, 3, 7, 8, 9], [1, 2, 8, 9], [5], [2, 6, 9]], [[3, 5, 9], [2, 3, 8, 9], [6], [1, 4, 8, 9], [1, 4, 5, 8], [1, 3, 4, 8, 9], [7], [1, 2, 4, 8], [2, 4, 9]], [[3, 4, 7, 9], [1, 2, 3, 7, 9], [1, 2, 3, 4, 9], [5], [1, 4, 7, 8], [6], [2, 3, 4, 8, 9], [2, 3, 4, 7, 8], [2, 4, 7, 9]], [[8], [2, 3, 6, 7], [2, 3, 4, 5], [2, 4, 7], [9], [2, 4, 7], [2, 3, 4, 5], [2, 3, 4, 6, 7], [1]], [[5, 6], [1, 2, 7, 9], [1, 2, 4, 9], [3], [1, 4, 7, 8], [1, 2, 4, 7, 8], [2, 4, 8, 9], [2, 4, 7, 8], [5, 6]], [[3, 4, 9], [1, 3, 8, 9], [7], [1, 2, 4, 8, 9], [1, 4, 5, 8], [1, 2, 4, 8, 9], [6], [1, 2, 3, 4], [2, 4, 5]], [[3, 4, 6], [5], [1, 3, 4, 8], [1, 2, 4, 7, 8], [1, 4, 6, 7, 8], [1, 2, 4, 7, 8], [1, 2, 3, 4], [9], [2, 4, 7]], [[2], [1, 6, 9], [1, 4, 9], [1, 4, 6, 7, 9], [3], [1, 4, 5, 7, 9], [1, 4, 5], [1, 4, 7], [8]]]]
INFO:root:Doing checkSmall1
INFO:root:Getting tiny MUSes, distance 1, for 1 puzlits, 1 repeats
INFO:root:Chunked 1 in [1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
INFO:root:Doing checkSmall2
INFO:root:Getting tiny MUSes, distance 2, for 1 puzlits, 1 repeats
INFO:root:Chunked 1 in [1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
INFO:root:Considering 100 * 1 jobs for minsize=3
INFO:root:Chunked 100 in [9, 9, 9, 9, 8, 8, 8, 8, 8, 8, 8, 8]
INFO:root:Considering 100 * 1 jobs for minsize=4
INFO:root:Chunked 100 in [9, 9, 9, 9, 8, 8, 8, 8, 8, 8, 8, 8]
INFO:root:Considering 100 * 1 jobs for minsize=5
INFO:root:Chunked 100 in [9, 9, 9, 9, 8, 8, 8, 8, 8, 8, 8, 8]
INFO:root:Considering 100 * 1 jobs for minsize=6
INFO:root:Chunked 100 in [9, 9, 9, 9, 8, 8, 8, 8, 8, 8, 8, 8]
INFO:root:Considering 100 * 1 jobs for minsize=7
INFO:root:Chunked 100 in [9, 9, 9, 9, 8, 8, 8, 8, 8, 8, 8, 8]
INFO:root:Considering 100 * 1 jobs for minsize=8
INFO:root:Chunked 100 in [9, 9, 9, 9, 8, 8, 8, 8, 8, 8, 8, 8]
INFO:root:Considering 100 * 1 jobs for minsize=9
INFO:root:Chunked 100 in [9, 9, 9, 9, 8, 8, 8, 8, 8, 8, 8, 8]
INFO:root:Considering 100 * 1 jobs for minsize=10
INFO:root:Chunked 100 in [9, 9, 9, 9, 8, 8, 8, 8, 8, 8, 8, 8]
INFO:root:Considering 100 * 1 jobs for minsize=11
INFO:root:Chunked 100 in [9, 9, 9, 9, 8, 8, 8, 8, 8, 8, 8, 8]
INFO:root:Considering 100 * 1 jobs for minsize=12
INFO:root:Chunked 100 in [9, 9, 9, 9, 8, 8, 8, 8, 8, 8, 8, 8]
INFO:root:Considering 100 * 1 jobs for minsize=13
INFO:root:Chunked 100 in [9, 9, 9, 9, 8, 8, 8, 8, 8, 8, 8, 8]
INFO:root:Considering 100 * 1 jobs for minsize=14
INFO:root:Chunked 100 in [9, 9, 9, 9, 8, 8, 8, 8, 8, 8, 8, 8]
INFO:root:Considering 100 * 1 jobs for minsize=15
INFO:root:Chunked 100 in [9, 9, 9, 9, 8, 8, 8, 8, 8, 8, 8, 8]
INFO:root:Considering 100 * 1 jobs for minsize=16
INFO:root:Chunked 100 in [9, 9, 9, 9, 8, 8, 8, 8, 8, 8, 8, 8]
INFO:root:Considering 100 * 1 jobs for minsize=17
INFO:root:Chunked 100 in [9, 9, 9, 9, 8, 8, 8, 8, 8, 8, 8, 8]
INFO:root:Considering 100 * 1 jobs for minsize=18
INFO:root:Chunked 100 in [9, 9, 9, 9, 8, 8, 8, 8, 8, 8, 8, 8]
INFO:root:Considering 100 * 1 jobs for minsize=19
INFO:root:Chunked 100 in [9, 9, 9, 9, 8, 8, 8, 8, 8, 8, 8, 8]
INFO:root:Considering 100 * 1 jobs for minsize=20
INFO:root:Chunked 100 in [9, 9, 9, 9, 8, 8, 8, 8, 8, 8, 8, 8]
INFO:root:Considering 100 * 1 jobs for minsize=21
INFO:root:Chunked 100 in [9, 9, 9, 9, 8, 8, 8, 8, 8, 8, 8, 8]
INFO:root:Considering 100 * 1 jobs for minsize=22
INFO:root:Chunked 100 in [9, 9, 9, 9, 8, 8, 8, 8, 8, 8, 8, 8]
INFO:root:Considering 100 * 1 jobs for minsize=23
INFO:root:Chunked 100 in [9, 9, 9, 9, 8, 8, 8, 8, 8, 8, 8, 8]
INFO:root:Considering 100 * 1 jobs for minsize=24
INFO:root:Chunked 100 in [9, 9, 9, 9, 8, 8, 8, 8, 8, 8, 8, 8]
INFO:root:Considering 100 * 1 jobs for minsize=25
INFO:root:Chunked 100 in [9, 9, 9, 9, 8, 8, 8, 8, 8, 8, 8, 8]
INFO:root:Considering 100 * 1 jobs for minsize=26
INFO:root:Chunked 100 in [9, 9, 9, 9, 8, 8, 8, 8, 8, 8, 8, 8]
INFO:root:Considering 100 * 1 jobs for minsize=27
INFO:root:Chunked 100 in [9, 9, 9, 9, 8, 8, 8, 8, 8, 8, 8, 8]
INFO:root:Considering 100 * 1 jobs for minsize=28
INFO:root:Chunked 100 in [9, 9, 9, 9, 8, 8, 8, 8, 8, 8, 8, 8]
INFO:root:Considering 100 * 1 jobs for minsize=29
INFO:root:Chunked 100 in [9, 9, 9, 9, 8, 8, 8, 8, 8, 8, 8, 8]
INFO:root:Considering 100 * 1 jobs for minsize=30
INFO:root:Chunked 100 in [9, 9, 9, 9, 8, 8, 8, 8, 8, 8, 8, 8]
INFO:root:Considering 100 * 1 jobs for minsize=31
INFO:root:Chunked 100 in [9, 9, 9, 9, 8, 8, 8, 8, 8, 8, 8, 8]
INFO:root:Considering 100 * 1 jobs for minsize=32
INFO:root:Chunked 100 in [9, 9, 9, 9, 8, 8, 8, 8, 8, 8, 8, 8]
INFO:root:XX found first (1, 4) is not 8 31
INFO:root:Trace: [(31, [(1, 4) is not 8])]
INFO:root:Trace Quality: [(31, 1)]
INFO:root:Trace Sorted: [(31, 1)]
INFO:root:Finished
INFO:root:Full Trace [(31, [(1, 4) is not 8])]
INFO:root:Trying {'gallopingMUSes': True, 'minPrecheckMUS': True}
INFO:root:Starting Step 1
INFO:root:Current state [[[[1], [7, 8, 9], [5, 8, 9], [4, 6, 7, 8, 9], [2], [4, 5, 7, 8, 9], [4, 8, 9], [4, 6, 8], [3]], [[3, 7, 9], [4], [2, 3, 8, 9], [1, 7, 8, 9], [1, 6, 7, 8], [1, 3, 7, 8, 9], [1, 2, 8, 9], [5], [2, 6, 9]], [[3, 5, 9], [2, 3, 8, 9], [6], [1, 4, 8, 9], [1, 4, 5, 8], [1, 3, 4, 8, 9], [7], [1, 2, 4, 8], [2, 4, 9]], [[3, 4, 7, 9], [1, 2, 3, 7, 9], [1, 2, 3, 4, 9], [5], [1, 4, 7, 8], [6], [2, 3, 4, 8, 9], [2, 3, 4, 7, 8], [2, 4, 7, 9]], [[8], [2, 3, 6, 7], [2, 3, 4, 5], [2, 4, 7], [9], [2, 4, 7], [2, 3, 4, 5], [2, 3, 4, 6, 7], [1]], [[5, 6], [1, 2, 7, 9], [1, 2, 4, 9], [3], [1, 4, 7, 8], [1, 2, 4, 7, 8], [2, 4, 8, 9], [2, 4, 7, 8], [5, 6]], [[3, 4, 9], [1, 3, 8, 9], [7], [1, 2, 4, 8, 9], [1, 4, 5, 8], [1, 2, 4, 8, 9], [6], [1, 2, 3, 4], [2, 4, 5]], [[3, 4, 6], [5], [1, 3, 4, 8], [1, 2, 4, 7, 8], [1, 4, 6, 7, 8], [1, 2, 4, 7, 8], [1, 2, 3, 4], [9], [2, 4, 7]], [[2], [1, 6, 9], [1, 4, 9], [1, 4, 6, 7, 9], [3], [1, 4, 5, 7, 9], [1, 4, 5], [1, 4, 7], [8]]]]
INFO:root:Doing checkSmall1
INFO:root:Getting tiny MUSes, distance 1, for 1 puzlits, 1 repeats
INFO:root:Chunked 1 in [1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
INFO:root:Doing checkSmall2
INFO:root:Getting tiny MUSes, distance 2, for 1 puzlits, 1 repeats
INFO:root:Chunked 1 in [1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
INFO:root:Considering 100 * 1 jobs for minsize=3
INFO:root:Chunked 100 in [9, 9, 9, 9, 8, 8, 8, 8, 8, 8, 8, 8]
INFO:root:Considering 100 * 1 jobs for minsize=4
INFO:root:Chunked 100 in [9, 9, 9, 9, 8, 8, 8, 8, 8, 8, 8, 8]
INFO:root:Considering 100 * 1 jobs for minsize=5
INFO:root:Chunked 100 in [9, 9, 9, 9, 8, 8, 8, 8, 8, 8, 8, 8]
INFO:root:Considering 100 * 1 jobs for minsize=6
INFO:root:Chunked 100 in [9, 9, 9, 9, 8, 8, 8, 8, 8, 8, 8, 8]
INFO:root:Considering 100 * 1 jobs for minsize=7
INFO:root:Chunked 100 in [9, 9, 9, 9, 8, 8, 8, 8, 8, 8, 8, 8]
INFO:root:Considering 100 * 1 jobs for minsize=8
INFO:root:Chunked 100 in [9, 9, 9, 9, 8, 8, 8, 8, 8, 8, 8, 8]
INFO:root:Considering 100 * 1 jobs for minsize=9
INFO:root:Chunked 100 in [9, 9, 9, 9, 8, 8, 8, 8, 8, 8, 8, 8]
INFO:root:Considering 100 * 1 jobs for minsize=10
INFO:root:Chunked 100 in [9, 9, 9, 9, 8, 8, 8, 8, 8, 8, 8, 8]
INFO:root:Considering 100 * 1 jobs for minsize=11
INFO:root:Chunked 100 in [9, 9, 9, 9, 8, 8, 8, 8, 8, 8, 8, 8]
INFO:root:Considering 100 * 1 jobs for minsize=12
INFO:root:Chunked 100 in [9, 9, 9, 9, 8, 8, 8, 8, 8, 8, 8, 8]
INFO:root:Considering 100 * 1 jobs for minsize=13
INFO:root:Chunked 100 in [9, 9, 9, 9, 8, 8, 8, 8, 8, 8, 8, 8]
INFO:root:Considering 100 * 1 jobs for minsize=14
INFO:root:Chunked 100 in [9, 9, 9, 9, 8, 8, 8, 8, 8, 8, 8, 8]
INFO:root:Considering 100 * 1 jobs for minsize=15
INFO:root:Chunked 100 in [9, 9, 9, 9, 8, 8, 8, 8, 8, 8, 8, 8]
INFO:root:Considering 100 * 1 jobs for minsize=16
INFO:root:Chunked 100 in [9, 9, 9, 9, 8, 8, 8, 8, 8, 8, 8, 8]
INFO:root:Considering 100 * 1 jobs for minsize=17
INFO:root:Chunked 100 in [9, 9, 9, 9, 8, 8, 8, 8, 8, 8, 8, 8]
INFO:root:Considering 100 * 1 jobs for minsize=18
INFO:root:Chunked 100 in [9, 9, 9, 9, 8, 8, 8, 8, 8, 8, 8, 8]
INFO:root:Considering 100 * 1 jobs for minsize=19
INFO:root:Chunked 100 in [9, 9, 9, 9, 8, 8, 8, 8, 8, 8, 8, 8]
INFO:root:Considering 100 * 1 jobs for minsize=20
INFO:root:Chunked 100 in [9, 9, 9, 9, 8, 8, 8, 8, 8, 8, 8, 8]
INFO:root:Considering 100 * 1 jobs for minsize=21
INFO:root:Chunked 100 in [9, 9, 9, 9, 8, 8, 8, 8, 8, 8, 8, 8]
INFO:root:Considering 100 * 1 jobs for minsize=22
INFO:root:Chunked 100 in [9, 9, 9, 9, 8, 8, 8, 8, 8, 8, 8, 8]
INFO:root:Considering 100 * 1 jobs for minsize=23
INFO:root:Chunked 100 in [9, 9, 9, 9, 8, 8, 8, 8, 8, 8, 8, 8]
INFO:root:Considering 100 * 1 jobs for minsize=24
INFO:root:Chunked 100 in [9, 9, 9, 9, 8, 8, 8, 8, 8, 8, 8, 8]
INFO:root:Considering 100 * 1 jobs for minsize=25
INFO:root:Chunked 100 in [9, 9, 9, 9, 8, 8, 8, 8, 8, 8, 8, 8]
INFO:root:Considering 100 * 1 jobs for minsize=26
INFO:root:Chunked 100 in [9, 9, 9, 9, 8, 8, 8, 8, 8, 8, 8, 8]
INFO:root:Considering 100 * 1 jobs for minsize=27
INFO:root:Chunked 100 in [9, 9, 9, 9, 8, 8, 8, 8, 8, 8, 8, 8]
INFO:root:Considering 100 * 1 jobs for minsize=28
INFO:root:Chunked 100 in [9, 9, 9, 9, 8, 8, 8, 8, 8, 8, 8, 8]
INFO:root:Considering 100 * 1 jobs for minsize=29
INFO:root:Chunked 100 in [9, 9, 9, 9, 8, 8, 8, 8, 8, 8, 8, 8]
INFO:root:Considering 100 * 1 jobs for minsize=30
INFO:root:Chunked 100 in [9, 9, 9, 9, 8, 8, 8, 8, 8, 8, 8, 8]
INFO:root:Considering 100 * 1 jobs for minsize=31
INFO:root:Chunked 100 in [9, 9, 9, 9, 8, 8, 8, 8, 8, 8, 8, 8]
INFO:root:Considering 100 * 1 jobs for minsize=32
INFO:root:Chunked 100 in [9, 9, 9, 9, 8, 8, 8, 8, 8, 8, 8, 8]
INFO:root:XX found first (1, 4) is not 8 31
INFO:root:XX add new best (1, 4) is not 8 31 31
INFO:root:Trace: [(31, [(1, 4) is not 8])]
INFO:root:Trace Quality: [(31, 1)]
INFO:root:Trace Sorted: [(31, 1)]
INFO:root:Finished
INFO:root:Full Trace [(31, [(1, 4) is not 8])]
INFO:root:Trying {}
INFO:root:Starting Step 1
INFO:root:Current state [[[[2], [3, 5, 6], [5, 6, 9], [1, 3, 6, 8, 9], [7], [3, 6, 9], [5, 6, 8], [1, 6, 8], [4]], [[3, 6, 9], [8], [4, 6, 9], [5], [1, 3, 4, 9], [3, 4, 6, 9], [2], [7], [1, 6, 9]], [[7], [4, 5, 6], [1], [4, 6, 8, 9], [2], [4, 6, 9], [3], [6, 8], [5, 6, 8, 9]], [[3, 5, 6, 8], [1, 2, 3, 4, 5, 6], [2, 4, 5, 6, 8], [7], [1, 3, 4, 5], [2, 3, 4, 5], [4, 5, 6, 8], [9], [1, 3, 5, 6, 8]], [[3, 5, 8, 9], [1, 2, 3, 4, 5], [2, 4, 5, 8, 9], [1, 2, 3, 4, 9], [6], [2, 3, 4, 5, 9], [7], [1, 2, 3, 4, 8], [1, 3, 5, 8]], [[3, 5, 6, 9], [7], [2, 4, 5, 6, 9], [1, 2, 3, 4, 9], [1, 3, 4, 5, 9], [8], [4, 5, 6], [1, 2, 3, 4, 6], [1, 3, 5, 6]], [[5, 6, 8], [2, 5, 6], [3], [2, 4, 6, 9], [4, 5, 8, 9], [2, 4, 5, 6, 9], [1], [4, 6, 8], [7]], [[1], [9], [2, 6, 8], [2, 3, 4, 6], [3, 4, 8], [7], [4, 6, 8], [5], [3, 6, 8]], [[4], [5, 6], [7], [3, 6], [3, 5, 8], [1], [9], [3, 6, 8], [2]]]]
INFO:root:Doing checkSmall1
INFO:root:Getting tiny MUSes, distance 1, for 1 puzlits, 1 repeats
INFO:root:Chunked 1 in [1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
INFO:root:Doing checkSmall2
INFO:root:Getting tiny MUSes, distance 2, for 1 puzlits, 1 repeats
INFO:root:Chunked 1 in [1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
INFO:root:Considering 100 * 1 jobs for minsize=3
INFO:root:Chunked 100 in [9, 9, 9, 9, 8, 8, 8, 8, 8, 8, 8, 8]
INFO:root:Considering 100 * 1 jobs for minsize=4
INFO:root:Chunked 100 in [9, 9, 9, 9, 8, 8, 8, 8, 8, 8, 8, 8]
INFO:root:Considering 100 * 1 jobs for minsize=5
INFO:root:Chunked 100 in [9, 9, 9, 9, 8, 8, 8, 8, 8, 8, 8, 8]
INFO:root:Considering 100 * 1 jobs for minsize=6
INFO:root:Chunked 100 in [9, 9, 9, 9, 8, 8, 8, 8, 8, 8, 8, 8]
INFO:root:Considering 100 * 1 jobs for minsize=7
INFO:root:Chunked 100 in [9, 9, 9, 9, 8, 8, 8, 8, 8, 8, 8, 8]
INFO:root:Considering 100 * 1 jobs for minsize=8
INFO:root:Chunked 100 in [9, 9, 9, 9, 8, 8, 8, 8, 8, 8, 8, 8]
INFO:root:Considering 100 * 1 jobs for minsize=9
INFO:root:Chunked 100 in [9, 9, 9, 9, 8, 8, 8, 8, 8, 8, 8, 8]
INFO:root:Considering 100 * 1 jobs for minsize=10
INFO:root:Chunked 100 in [9, 9, 9, 9, 8, 8, 8, 8, 8, 8, 8, 8]
INFO:root:Considering 100 * 1 jobs for minsize=11
INFO:root:Chunked 100 in [9, 9, 9, 9, 8, 8, 8, 8, 8, 8, 8, 8]
INFO:root:Considering 100 * 1 jobs for minsize=12
INFO:root:Chunked 100 in [9, 9, 9, 9, 8, 8, 8, 8, 8, 8, 8, 8]
INFO:root:Considering 100 * 1 jobs for minsize=13
INFO:root:Chunked 100 in [9, 9, 9, 9, 8, 8, 8, 8, 8, 8, 8, 8]
INFO:root:Considering 100 * 1 jobs for minsize=14
INFO:root:Chunked 100 in [9, 9, 9, 9, 8, 8, 8, 8, 8, 8, 8, 8]
INFO:root:Considering 100 * 1 jobs for minsize=15
INFO:root:Chunked 100 in [9, 9, 9, 9, 8, 8, 8, 8, 8, 8, 8, 8]
INFO:root:Considering 100 * 1 jobs for minsize=16
INFO:root:Chunked 100 in [9, 9, 9, 9, 8, 8, 8, 8, 8, 8, 8, 8]
INFO:root:Considering 100 * 1 jobs for minsize=17
INFO:root:Chunked 100 in [9, 9, 9, 9, 8, 8, 8, 8, 8, 8, 8, 8]
INFO:root:Considering 100 * 1 jobs for minsize=18
INFO:root:Chunked 100 in [9, 9, 9, 9, 8, 8, 8, 8, 8, 8, 8, 8]
INFO:root:XX found first (2, 5) is not 9 19
INFO:root:XX add new best (2, 5) is not 9 19 19
INFO:root:XX add new best (2, 5) is not 9 19 19
INFO:root:XX add new best (2, 5) is not 9 19 19
INFO:root:XX add new best (2, 5) is not 9 19 19
INFO:root:XX add new best (2, 5) is not 9 19 19
INFO:root:XX add new best (2, 5) is not 9 19 19
INFO:root:XX add new best (2, 5) is not 9 19 19
INFO:root:XX add new best (2, 5) is not 9 19 19
INFO:root:XX add new best (2, 5) is not 9 19 19
INFO:root:XX add new best (2, 5) is not 9 19 19
INFO:root:XX add new best (2, 5) is not 9 19 19
INFO:root:XX add new best (2, 5) is not 9 19 19
INFO:root:XX add new best (2, 5) is not 9 19 19
INFO:root:XX add new best (2, 5) is not 9 19 19
INFO:root:XX add new best (2, 5) is not 9 19 19
INFO:root:XX add new best (2, 5) is not 9 19 19
INFO:root:XX add new best (2, 5) is not 9 19 19
INFO:root:XX add new best (2, 5) is not 9 19 19
INFO:root:XX add new best (2, 5) is not 9 19 19
INFO:root:XX add new best (2, 5) is not 9 19 19
INFO:root:XX add new best (2, 5) is not 9 19 19
INFO:root:XX add new best (2, 5) is not 9 19 19
INFO:root:XX add new best (2, 5) is not 9 19 19
INFO:root:XX add new best (2, 5) is not 9 19 19
INFO:root:XX add new best (2, 5) is not 9 19 19
INFO:root:XX add new best (2, 5) is not 9 19 19
INFO:root:XX add new best (2, 5) is not 9 19 19
INFO:root:XX add new best (2, 5) is not 9 19 19
INFO:root:XX add new best (2, 5) is not 9 19 19
INFO:root:XX add new best (2, 5) is not 9 19 19
INFO:root:XX add new best (2, 5) is not 9 19 19
INFO:root:XX add new best (2, 5) is not 9 19 19
INFO:root:XX add new best (2, 5) is not 9 19 19
INFO:root:XX add new best (2, 5) is not 9 19 19
INFO:root:XX add new best (2, 5) is not 9 19 19
INFO:root:XX add new best (2, 5) is not 9 19 19
INFO:root:XX add new best (2, 5) is not 9 19 19
INFO:root:XX add new best (2, 5) is not 9 19 19
INFO:root:XX add new best (2, 5) is not 9 19 19
INFO:root:XX add new best (2, 5) is not 9 19 19
INFO:root:XX add new best (2, 5) is not 9 19 19
INFO:root:XX add new best (2, 5) is not 9 19 19
INFO:root:XX add new best (2, 5) is not 9 19 19
INFO:root:XX add new best (2, 5) is not 9 19 19
INFO:root:XX add new best (2, 5) is not 9 19 19
INFO:root:XX add new best (2, 5) is not 9 19 19
INFO:root:XX add new best (2, 5) is not 9 19 19
INFO:root:XX add new best (2, 5) is not 9 19 19
INFO:root:XX add new best (2, 5) is not 9 19 19
INFO:root:XX add new best (2, 5) is not 9 19 19
INFO:root:XX add new best (2, 5) is not 9 19 19
INFO:root:XX add new best (2, 5) is not 9 19 19
INFO:root:XX add new best (2, 5) is not 9 19 19
INFO:root:XX add new best (2, 5) is not 9 19 19
INFO:root:XX add new best (2, 5) is not 9 19 19
INFO:root:XX add new best (2, 5) is not 9 19 19
INFO:root:XX add new best (2, 5) is not 9 19 19
INFO:root:XX add new best (2, 5) is not 9 19 19
INFO:root:XX add new best (2, 5) is not 9 19 19
INFO:root:XX add new best (2, 5) is not 9 19 19
INFO:root:XX add new best (2, 5) is not 9 19 19
INFO:root:XX add new best (2, 5) is not 9 19 19
INFO:root:XX add new best (2, 5) is not 9 19 19
INFO:root:XX add new best (2, 5) is not 9 19 19
INFO:root:XX add new best (2, 5) is not 9 19 19
INFO:root:XX add new best (2, 5) is not 9 19 19
INFO:root:XX add new best (2, 5) is not 9 19 19
INFO:root:XX add new best (2, 5) is not 9 19 19
INFO:root:XX add new best (2, 5) is not 9 19 19
INFO:root:XX add new best (2, 5) is not 9 19 19
INFO:root:XX add new best (2, 5) is not 9 19 19
INFO:root:XX add new best (2, 5) is not 9 19 19
INFO:root:XX add new best (2, 5) is not 9 19 19
INFO:root:XX add new best (2, 5) is not 9 19 19
INFO:root:XX add new best (2, 5) is not 9 19 19
INFO:root:XX add new best (2, 5) is not 9 19 19
INFO:root:XX add new best (2, 5) is not 9 19 19
INFO:root:XX add new best (2, 5) is not 9 19 19
INFO:root:XX add new best (2, 5) is not 9 19 19
INFO:root:XX add new best (2, 5) is not 9 19 19
INFO:root:XX add new best (2, 5) is not 9 19 19
INFO:root:XX add new best (2, 5) is not 9 19 19
INFO:root:XX add new best (2, 5) is not 9 19 19
INFO:root:XX add new best (2, 5) is not 9 19 19
INFO:root:XX add new best (2, 5) is not 9 19 19
INFO:root:XX add new best (2, 5) is not 9 19 19
INFO:root:XX add new best (2, 5) is not 9 19 19
INFO:root:XX add new best (2, 5) is not 9 19 19
INFO:root:XX add new best (2, 5) is not 9 19 19
INFO:root:XX add new best (2, 5) is not 9 19 19
INFO:root:Considering 100 * 1 jobs for minsize=19
INFO:root:Chunked 100 in [9, 9, 9, 9, 8, 8, 8, 8, 8, 8, 8, 8]
INFO:root:XX add new best (2, 5) is not 9 19 19
INFO:root:XX add new best (2, 5) is not 9 19 19
INFO:root:XX add new best (2, 5) is not 9 19 19
INFO:root:XX add new best (2, 5) is not 9 19 19
INFO:root:XX add new best (2, 5) is not 9 19 19
INFO:root:XX add new best (2, 5) is not 9 19 19
INFO:root:XX add new best (2, 5) is not 9 19 19
INFO:root:XX add new best (2, 5) is not 9 19 19
INFO:root:XX add new best (2, 5) is not 9 19 19
INFO:root:XX add new best (2, 5) is not 9 19 19
INFO:root:XX add new best (2, 5) is not 9 19 19
INFO:root:XX add new best (2, 5) is not 9 19 19
INFO:root:XX add new best (2, 5) is not 9 19 19
INFO:root:XX add new best (2, 5) is not 9 19 19
INFO:root:XX add new best (2, 5) is not 9 19 19
INFO:root:XX add new best (2, 5) is not 9 19 19
INFO:root:XX add new best (2, 5) is not 9 19 19
INFO:root:XX add new best (2, 5) is not 9 19 19
INFO:root:XX add new best (2, 5) is not 9 19 19
INFO:root:XX add new best (2, 5) is not 9 19 19
INFO:root:XX add new best (2, 5) is not 9 19 19
INFO:root:XX add new best (2, 5) is not 9 19 19
INFO:root:XX add new best (2, 5) is not 9 19 19
INFO:root:XX add new best (2, 5) is not 9 19 19
INFO:root:XX add new best (2, 5) is not 9 19 19
INFO:root:XX add new best (2, 5) is not 9 19 19
INFO:root:XX add new best (2, 5) is not 9 19 19
INFO:root:XX add new best (2, 5) is not 9 19 19
INFO:root:XX add new best (2, 5) is not 9 19 19
INFO:root:XX add new best (2, 5) is not 9 19 19
INFO:root:XX add new best (2, 5) is not 9 19 19
INFO:root:XX add new best (2, 5) is not 9 19 19
INFO:root:XX add new best (2, 5) is not 9 19 19
INFO:root:XX add new best (2, 5) is not 9 19 19
INFO:root:XX add new best (2, 5) is not 9 19 19
INFO:root:XX add new best (2, 5) is not 9 19 19
INFO:root:XX add new best (2, 5) is not 9 19 19
INFO:root:XX add new best (2, 5) is not 9 19 19
INFO:root:XX add new best (2, 5) is not 9 19 19
INFO:root:XX add new best (2, 5) is not 9 19 19
INFO:root:XX add new best (2, 5) is not 9 19 19
INFO:root:XX add new best (2, 5) is not 9 19 19
INFO:root:XX add new best (2, 5) is not 9 19 19
INFO:root:XX add new best (2, 5) is not 9 19 19
INFO:root:XX add new best (2, 5) is not 9 19 19
INFO:root:XX add new best (2, 5) is not 9 19 19
INFO:root:XX add new best (2, 5) is not 9 19 19
INFO:root:XX add new best (2, 5) is not 9 19 19
INFO:root:XX add new best (2, 5) is not 9 19 19
INFO:root:XX add new best (2, 5) is not 9 19 19
INFO:root:XX add new best (2, 5) is not 9 19 19
INFO:root:XX add new best (2, 5) is not 9 19 19
INFO:root:XX add new best (2, 5) is not 9 19 19
INFO:root:XX add new best (2, 5) is not 9 19 19
INFO:root:XX add new best (2, 5) is not 9 19 19
INFO:root:XX add new best (2, 5) is not 9 19 19
INFO:root:XX add new best (2, 5) is not 9 19 19
INFO:root:XX add new best (2, 5) is not 9 19 19
INFO:root:XX add new best (2, 5) is not 9 19 19
INFO:root:XX add new best (2, 5) is not 9 19 19
INFO:root:XX add new best (2, 5) is not 9 19 19
INFO:root:XX add new best (2, 5) is not 9 19 19
INFO:root:XX add new best (2, 5) is not 9 19 19
INFO:root:XX add new best (2, 5) is not 9 19 19
INFO:root:XX add new best (2, 5) is not 9 19 19
INFO:root:XX add new best (2, 5) is not 9 19 19
INFO:root:XX add new best (2, 5) is not 9 19 19
INFO:root:XX add new best (2, 5) is not 9 19 19
INFO:root:XX add new best (2, 5) is not 9 19 19
INFO:root:XX add new best (2, 5) is not 9 19 19
INFO:root:XX add new best (2, 5) is not 9 19 19
INFO:root:XX add new best (2, 5) is not 9 19 19
INFO:root:XX add new best (2, 5) is not 9 19 19
INFO:root:XX add new best (2, 5) is not 9 19 19
INFO:root:XX add new best (2, 5) is not 9 19 19
INFO:root:XX add new best (2, 5) is not 9 19 19
INFO:root:XX add new best (2, 5) is not 9 19 19
INFO:root:XX add new best (2, 5) is not 9 19 19
INFO:root:XX add new best (2, 5) is not 9 19 19
INFO:root:XX add new best (2, 5) is not 9 19 19
INFO:root:XX add new best (2, 5) is not 9 19 19
INFO:root:XX add new best (2, 5) is not 9 19 19
INFO:root:XX add new best (2, 5) is not 9 19 19
INFO:root:XX add new best (2, 5) is not 9 19 19
INFO:root:XX add new best (2, 5) is not 9 19 19
INFO:root:XX add new best (2, 5) is not 9 19 19
INFO:root:XX add new best (2, 5) is not 9 19 19
INFO:root:XX add new best (2, 5) is not 9 19 19
INFO:root:XX add new best (2, 5) is not 9 19 19
INFO:root:XX add new best (2, 5) is not 9 19 19
INFO:root:XX add new best (2, 5) is not 9 19 19
INFO:root:XX add new best (2, 5) is not 9 19 19
INFO:root:Trace: [(19, [(2, 5) is not 9])]
INFO:root:Trace Quality: [(19, 1)]
INFO:root:Trace Sorted: [(19, 1)]
INFO:root:Finished
INFO:root:Full Trace [(19, [(2, 5) is not 9])]
INFO:root:Trying {'prechopMUSes': True}
INFO:root:Starting Step 1
INFO:root:Current state [[[[2], [3, 5, 6], [5, 6, 9], [1, 3, 6, 8, 9], [7], [3, 6, 9], [5, 6, 8], [1, 6, 8], [4]], [[3, 6, 9], [8], [4, 6, 9], [5], [1, 3, 4, 9], [3, 4, 6, 9], [2], [7], [1, 6, 9]], [[7], [4, 5, 6], [1], [4, 6, 8, 9], [2], [4, 6, 9], [3], [6, 8], [5, 6, 8, 9]], [[3, 5, 6, 8], [1, 2, 3, 4, 5, 6], [2, 4, 5, 6, 8], [7], [1, 3, 4, 5], [2, 3, 4, 5], [4, 5, 6, 8], [9], [1, 3, 5, 6, 8]], [[3, 5, 8, 9], [1, 2, 3, 4, 5], [2, 4, 5, 8, 9], [1, 2, 3, 4, 9], [6], [2, 3, 4, 5, 9], [7], [1, 2, 3, 4, 8], [1, 3, 5, 8]], [[3, 5, 6, 9], [7], [2, 4, 5, 6, 9], [1, 2, 3, 4, 9], [1, 3, 4, 5, 9], [8], [4, 5, 6], [1, 2, 3, 4, 6], [1, 3, 5, 6]], [[5, 6, 8], [2, 5, 6], [3], [2, 4, 6, 9], [4, 5, 8, 9], [2, 4, 5, 6, 9], [1], [4, 6, 8], [7]], [[1], [9], [2, 6, 8], [2, 3, 4, 6], [3, 4, 8], [7], [4, 6, 8], [5], [3, 6, 8]], [[4], [5, 6], [7], [3, 6], [3, 5, 8], [1], [9], [3, 6, 8], [2]]]]
INFO:root:Doing checkSmall1
INFO:root:Getting tiny MUSes, distance 1, for 1 puzlits, 1 repeats
INFO:root:Chunked 1 in [1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
INFO:root:Doing checkSmall2
INFO:root:Getting tiny MUSes, distance 2, for 1 puzlits, 1 repeats
INFO:root:Chunked 1 in [1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
INFO:root:Considering 100 * 1 jobs for minsize=3
INFO:root:Chunked 100 in [9, 9, 9, 9, 8, 8, 8, 8, 8, 8, 8, 8]
INFO:root:Considering 100 * 1 jobs for minsize=4
INFO:root:Chunked 100 in [9, 9, 9, 9, 8, 8, 8, 8, 8, 8, 8, 8]
INFO:root:Considering 100 * 1 jobs for minsize=5
INFO:root:Chunked 100 in [9, 9, 9, 9, 8, 8, 8, 8, 8, 8, 8, 8]
INFO:root:Considering 100 * 1 jobs for minsize=6
INFO:root:Chunked 100 in [9, 9, 9, 9, 8, 8, 8, 8, 8, 8, 8, 8]
INFO:root:Considering 100 * 1 jobs for minsize=7
INFO:root:Chunked 100 in [9, 9, 9, 9, 8, 8, 8, 8, 8, 8, 8, 8]
INFO:root:Considering 100 * 1 jobs for minsize=8
INFO:root:Chunked 100 in [9, 9, 9, 9, 8, 8, 8, 8, 8, 8, 8, 8]
INFO:root:Considering 100 * 1 jobs for minsize=9
INFO:root:Chunked 100 in [9, 9, 9, 9, 8, 8, 8, 8, 8, 8, 8, 8]
INFO:root:Considering 100 * 1 jobs for minsize=10
INFO:root:Chunked 100 in [9, 9, 9, 9, 8, 8, 8, 8, 8, 8, 8, 8]
INFO:root:Considering 100 * 1 jobs for minsize=11
INFO:root:Chunked 100 in [9, 9, 9, 9, 8, 8, 8, 8, 8, 8, 8, 8]
INFO:root:Considering 100 * 1 jobs for minsize=12
INFO:root:Chunked 100 in [9, 9, 9, 9, 8, 8, 8, 8, 8, 8, 8, 8]
INFO:root:Considering 100 * 1 jobs for minsize=13
INFO:root:Chunked 100 in [9, 9, 9, 9, 8, 8, 8, 8, 8, 8, 8, 8]
INFO:root:XX found first (2, 5) is not 9 14
INFO:root:Considering 100 * 1 jobs for minsize=14
INFO:root:Chunked 100 in [9, 9, 9, 9, 8, 8, 8, 8, 8, 8, 8, 8]
INFO:root:Trace: [(14, [(2, 5) is not 9])]
INFO:root:Trace Quality: [(14, 1)]
INFO:root:Trace Sorted: [(14, 1)]
INFO:root:Finished
INFO:root:Full Trace [(14, [(2, 5) is not 9])]
INFO:root:Trying {'quarterChopMUS': True}
INFO:root:Starting Step 1
INFO:root:Current state [[[[2], [3, 5, 6], [5, 6, 9], [1, 3, 6, 8, 9], [7], [3, 6, 9], [5, 6, 8], [1, 6, 8], [4]], [[3, 6, 9], [8], [4, 6, 9], [5], [1, 3, 4, 9], [3, 4, 6, 9], [2], [7], [1, 6, 9]], [[7], [4, 5, 6], [1], [4, 6, 8, 9], [2], [4, 6, 9], [3], [6, 8], [5, 6, 8, 9]], [[3, 5, 6, 8], [1, 2, 3, 4, 5, 6], [2, 4, 5, 6, 8], [7], [1, 3, 4, 5], [2, 3, 4, 5], [4, 5, 6, 8], [9], [1, 3, 5, 6, 8]], [[3, 5, 8, 9], [1, 2, 3, 4, 5], [2, 4, 5, 8, 9], [1, 2, 3, 4, 9], [6], [2, 3, 4, 5, 9], [7], [1, 2, 3, 4, 8], [1, 3, 5, 8]], [[3, 5, 6, 9], [7], [2, 4, 5, 6, 9], [1, 2, 3, 4, 9], [1, 3, 4, 5, 9], [8], [4, 5, 6], [1, 2, 3, 4, 6], [1, 3, 5, 6]], [[5, 6, 8], [2, 5, 6], [3], [2, 4, 6, 9], [4, 5, 8, 9], [2, 4, 5, 6, 9], [1], [4, 6, 8], [7]], [[1], [9], [2, 6, 8], [2, 3, 4, 6], [3, 4, 8], [7], [4, 6, 8], [5], [3, 6, 8]], [[4], [5, 6], [7], [3, 6], [3, 5, 8], [1], [9], [3, 6, 8], [2]]]]
INFO:root:Doing checkSmall1
INFO:root:Getting tiny MUSes, distance 1, for 1 puzlits, 1 repeats
INFO:root:Chunked 1 in [1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
INFO:root:Doing checkSmall2
INFO:root:Getting tiny MUSes, distance 2, for 1 puzlits, 1 repeats
INFO:root:Chunked 1 in [1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
INFO:root:Considering 100 * 1 jobs for minsize=3
INFO:root:Chunked 100 in [9, 9, 9, 9, 8, 8, 8, 8, 8, 8, 8, 8]
INFO:root:Considering 100 * 1 jobs for minsize=4
INFO:root:Chunked 100 in [9, 9, 9, 9, 8, 8, 8, 8, 8, 8, 8, 8]
INFO:root:Considering 100 * 1 jobs for minsize=5
INFO:root:Chunked 100 in [9, 9, 9, 9, 8, 8, 8, 8, 8, 8, 8, 8]
INFO:root:Considering 100 * 1 jobs for minsize=6
INFO:root:Chunked 100 in [9, 9, 9, 9, 8, 8, 8, 8, 8, 8, 8, 8]
INFO:root:Considering 100 * 1 jobs for minsize=7
INFO:root:Chunked 100 in [9, 9, 9, 9, 8, 8, 8, 8, 8, 8, 8, 8]
INFO:root:Considering 100 * 1 jobs for minsize=8
INFO:root:Chunked 100 in [9, 9, 9, 9, 8, 8, 8, 8, 8, 8, 8, 8]
INFO:root:Considering 100 * 1 jobs for minsize=9
INFO:root:Chunked 100 in [9, 9, 9, 9, 8, 8, 8, 8, 8, 8, 8, 8]
INFO:root:Considering 100 * 1 jobs for minsize=10
INFO:root:Chunked 100 in [9, 9, 9, 9, 8, 8, 8, 8, 8, 8, 8, 8]
INFO:root:Considering 100 * 1 jobs for minsize=11
INFO:root:Chunked 100 in [9, 9, 9, 9, 8, 8, 8, 8, 8, 8, 8, 8]
INFO:root:Considering 100 * 1 jobs for minsize=12
INFO:root:Chunked 100 in [9, 9, 9, 9, 8, 8, 8, 8, 8, 8, 8, 8]
INFO:root:Considering 100 * 1 jobs for minsize=13
INFO:root:Chunked 100 in [9, 9, 9, 9, 8, 8, 8, 8, 8, 8, 8, 8]
INFO:root:Considering 100 * 1 jobs for minsize=14
INFO:root:Chunked 100 in [9, 9, 9, 9, 8, 8, 8, 8, 8, 8, 8, 8]
INFO:root:Considering 100 * 1 jobs for minsize=15
INFO:root:Chunked 100 in [9, 9, 9, 9, 8, 8, 8, 8, 8, 8, 8, 8]
INFO:root:Considering 100 * 1 jobs for minsize=16
INFO:root:Chunked 100 in [9, 9, 9, 9, 8, 8, 8, 8, 8, 8, 8, 8]
INFO:root:Considering 100 * 1 jobs for minsize=17
INFO:root:Chunked 100 in [9, 9, 9, 9, 8, 8, 8, 8, 8, 8, 8, 8]
INFO:root:Considering 100 * 1 jobs for minsize=18
INFO:root:Chunked 100 in [9, 9, 9, 9, 8, 8, 8, 8, 8, 8, 8, 8]
INFO:root:XX found first (2, 5) is not 9 19
INFO:root:XX add new best (2, 5) is not 9 19 19
INFO:root:XX add new best (2, 5) is not 9 19 19
INFO:root:XX add new best (2, 5) is not 9 19 19
INFO:root:XX add new best (2, 5) is not 9 19 19
INFO:root:XX add new best (2, 5) is not 9 19 19
INFO:root:XX add new best (2, 5) is not 9 19 19
INFO:root:XX add new best (2, 5) is not 9 19 19
INFO:root:XX add new best (2, 5) is not 9 19 19
INFO:root:XX add new best (2, 5) is not 9 19 19
INFO:root:XX add new best (2, 5) is not 9 19 19
INFO:root:XX add new best (2, 5) is not 9 19 19
INFO:root:XX add new best (2, 5) is not 9 19 19
INFO:root:XX add new best (2, 5) is not 9 19 19
INFO:root:XX add new best (2, 5) is not 9 19 19
INFO:root:XX add new best (2, 5) is not 9 19 19
INFO:root:XX add new best (2, 5) is not 9 19 19
INFO:root:XX add new best (2, 5) is not 9 19 19
INFO:root:XX add new best (2, 5) is not 9 19 19
INFO:root:XX add new best (2, 5) is not 9 19 19
INFO:root:XX add new best (2, 5) is not 9 19 19
INFO:root:XX add new best (2, 5) is not 9 19 19
INFO:root:XX add new best (2, 5) is not 9 19 19
INFO:root:XX add new best (2, 5) is not 9 19 19
INFO:root:XX add new best (2, 5) is not 9 19 19
INFO:root:XX add new best (2, 5) is not 9 19 19
INFO:root:XX add new best (2, 5) is not 9 19 19
INFO:root:XX add new best (2, 5) is not 9 19 19
INFO:root:XX add new best (2, 5) is not 9 19 19
INFO:root:XX add new best (2, 5) is not 9 19 19
INFO:root:XX add new best (2, 5) is not 9 19 19
INFO:root:XX add new best (2, 5) is not 9 19 19
INFO:root:XX add new best (2, 5) is not 9 19 19
INFO:root:XX add new best (2, 5) is not 9 19 19
INFO:root:XX add new best (2, 5) is not 9 19 19
INFO:root:XX add new best (2, 5) is not 9 19 19
INFO:root:XX add new best (2, 5) is not 9 19 19
INFO:root:XX add new best (2, 5) is not 9 19 19
INFO:root:XX add new best (2, 5) is not 9 19 19
INFO:root:XX add new best (2, 5) is not 9 19 19
INFO:root:XX add new best (2, 5) is not 9 19 19
INFO:root:XX add new best (2, 5) is not 9 19 19
INFO:root:XX add new best (2, 5) is not 9 19 19
INFO:root:Considering 100 * 1 jobs for minsize=19
INFO:root:Chunked 100 in [9, 9, 9, 9, 8, 8, 8, 8, 8, 8, 8, 8]
INFO:root:XX add new best (2, 5) is not 9 19 19
INFO:root:XX add new best (2, 5) is not 9 19 19
INFO:root:XX add new best (2, 5) is not 9 19 19
INFO:root:XX add new best (2, 5) is not 9 19 19
INFO:root:XX add new best (2, 5) is not 9 19 19
INFO:root:XX add new best (2, 5) is not 9 19 19
INFO:root:XX add new best (2, 5) is not 9 19 19
INFO:root:XX add new best (2, 5) is not 9 19 19
INFO:root:XX add new best (2, 5) is not 9 19 19
INFO:root:XX add new best (2, 5) is not 9 19 19
INFO:root:XX add new best (2, 5) is not 9 19 19
INFO:root:XX add new best (2, 5) is not 9 19 19
INFO:root:XX add new best (2, 5) is not 9 19 19
INFO:root:XX add new best (2, 5) is not 9 19 19
INFO:root:XX add new best (2, 5) is not 9 19 19
INFO:root:XX add new best (2, 5) is not 9 19 19
INFO:root:XX add new best (2, 5) is not 9 19 19
INFO:root:XX add new best (2, 5) is not 9 19 19
INFO:root:XX add new best (2, 5) is not 9 19 19
INFO:root:XX add new best (2, 5) is not 9 19 19
INFO:root:XX add new best (2, 5) is not 9 19 19
INFO:root:XX add new best (2, 5) is not 9 19 19
INFO:root:XX add new best (2, 5) is not 9 19 19
INFO:root:XX add new best (2, 5) is not 9 19 19
INFO:root:XX add new best (2, 5) is not 9 19 19
INFO:root:XX add new best (2, 5) is not 9 19 19
INFO:root:XX add new best (2, 5) is not 9 19 19
INFO:root:XX add new best (2, 5) is not 9 19 19
INFO:root:XX add new best (2, 5) is not 9 19 19
INFO:root:XX add new best (2, 5) is not 9 19 19
INFO:root:XX add new best (2, 5) is not 9 19 19
INFO:root:XX add new best (2, 5) is not 9 19 19
INFO:root:XX add new best (2, 5) is not 9 19 19
INFO:root:XX add new best (2, 5) is not 9 19 19
INFO:root:XX add new best (2, 5) is not 9 19 19
INFO:root:XX add new best (2, 5) is not 9 19 19
INFO:root:XX add new best (2, 5) is not 9 19 19
INFO:root:XX add new best (2, 5) is not 9 19 19
INFO:root:XX add new best (2, 5) is not 9 19 19
INFO:root:XX add new best (2, 5) is not 9 19 19
INFO:root:XX add new best (2, 5) is not 9 19 19
INFO:root:XX add new best (2, 5) is not 9 19 19
INFO:root:XX add new best (2, 5) is not 9 19 19
INFO:root:XX add new best (2, 5) is not 9 19 19
INFO:root:XX add new best (2, 5) is not 9 19 19
INFO:root:XX add new best (2, 5) is not 9 19 19
INFO:root:XX add new best (2, 5) is not 9 19 19
INFO:root:XX add new best (2, 5) is not 9 19 19
INFO:root:XX add new best (2, 5) is not 9 19 19
INFO:root:XX add new best (2, 5) is not 9 19 19
INFO:root:Trace: [(19, [(2, 5) is not 9])]
INFO:root:Trace Quality: [(19, 1)]
INFO:root:Trace Sorted: [(19, 1)]
INFO:root:Finished
INFO:root:Full Trace [(19, [(2, 5) is not 9])]
INFO:root:Trying {'minPrecheckMUS': True}
INFO:root:Starting Step 1
INFO:root:Current state [[[[2], [3, 5, 6], [5, 6, 9], [1, 3, 6, 8, 9], [7], [3, 6, 9], [5, 6, 8], [1, 6, 8], [4]], [[3, 6, 9], [8], [4, 6, 9], [5], [1, 3, 4, 9], [3, 4, 6, 9], [2], [7], [1, 6, 9]], [[7], [4, 5, 6], [1], [4, 6, 8, 9], [2], [4, 6, 9], [3], [6, 8], [5, 6, 8, 9]], [[3, 5, 6, 8], [1, 2, 3, 4, 5, 6], [2, 4, 5, 6, 8], [7], [1, 3, 4, 5], [2, 3, 4, 5], [4, 5, 6, 8], [9], [1, 3, 5, 6, 8]], [[3, 5, 8, 9], [1, 2, 3, 4, 5], [2, 4, 5, 8, 9], [1, 2, 3, 4, 9], [6], [2, 3, 4, 5, 9], [7], [1, 2, 3, 4, 8], [1, 3, 5, 8]], [[3, 5, 6, 9], [7], [2, 4, 5, 6, 9], [1, 2, 3, 4, 9], [1, 3, 4, 5, 9], [8], [4, 5, 6], [1, 2, 3, 4, 6], [1, 3, 5, 6]], [[5, 6, 8], [2, 5, 6], [3], [2, 4, 6, 9], [4, 5, 8, 9], [2, 4, 5, 6, 9], [1], [4, 6, 8], [7]], [[1], [9], [2, 6, 8], [2, 3, 4, 6], [3, 4, 8], [7], [4, 6, 8], [5], [3, 6, 8]], [[4], [5, 6], [7], [3, 6], [3, 5, 8], [1], [9], [3, 6, 8], [2]]]]
INFO:root:Doing checkSmall1
INFO:root:Getting tiny MUSes, distance 1, for 1 puzlits, 1 repeats
INFO:root:Chunked 1 in [1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
INFO:root:Doing checkSmall2
INFO:root:Getting tiny MUSes, distance 2, for 1 puzlits, 1 repeats
INFO:root:Chunked 1 in [1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
INFO:root:Considering 100 * 1 jobs for minsize=3
INFO:root:Chunked 100 in [9, 9, 9, 9, 8, 8, 8, 8, 8, 8, 8, 8]
INFO:root:Considering 100 * 1 jobs for minsize=4
INFO:root:Chunked 100 in [9, 9, 9, 9, 8, 8, 8, 8, 8, 8, 8, 8]
INFO:root:Considering 100 * 1 jobs for minsize=5
INFO:root:Chunked 100 in [9, 9, 9, 9, 8, 8, 8, 8, 8, 8, 8, 8]
INFO:root:Considering 100 * 1 jobs for minsize=6
INFO:root:Chunked 100 in [9, 9, 9, 9, 8, 8, 8, 8, 8, 8, 8, 8]
INFO:root:Considering 100 * 1 jobs for minsize=7
INFO:root:Chunked 100 in [9, 9, 9, 9, 8, 8, 8, 8, 8, 8, 8, 8]
INFO:root:Considering 100 * 1 jobs for minsize=8
INFO:root:Chunked 100 in [9, 9, 9, 9, 8, 8, 8, 8, 8, 8, 8, 8]
INFO:root:Considering 100 * 1 jobs for minsize=9
INFO:root:Chunked 100 in [9, 9, 9, 9, 8, 8, 8, 8, 8, 8, 8, 8]
INFO:root:Considering 100 * 1 jobs for minsize=10
INFO:root:Chunked 100 in [9, 9, 9, 9, 8, 8, 8, 8, 8, 8, 8, 8]
INFO:root:Considering 100 * 1 jobs for minsize=11
INFO:root:Chunked 100 in [9, 9, 9, 9, 8, 8, 8, 8, 8, 8, 8, 8]
INFO:root:Considering 100 * 1 jobs for minsize=12
INFO:root:Chunked 100 in [9, 9, 9, 9, 8, 8, 8, 8, 8, 8, 8, 8]
INFO:root:Considering 100 * 1 jobs for minsize=13
INFO:root:Chunked 100 in [9, 9, 9, 9, 8, 8, 8, 8, 8, 8, 8, 8]
INFO:root:XX found first (2, 5) is not 9 14
INFO:root:Considering 100 * 1 jobs for minsize=14
INFO:root:Chunked 100 in [9, 9, 9, 9, 8, 8, 8, 8, 8, 8, 8, 8]
INFO:root:XX add new best (2, 5) is not 9 14 14
INFO:root:XX add new best (2, 5) is not 9 14 14
INFO:root:Trace: [(14, [(2, 5) is not 9])]
INFO:root:Trace Quality: [(14, 1)]
INFO:root:Trace Sorted: [(14, 1)]
INFO:root:Finished
INFO:root:Full Trace [(14, [(2, 5) is not 9])]
INFO:root:Trying {'gallopingMUSes': True}
INFO:root:Starting Step 1
INFO:root:Current state [[[[2], [3, 5, 6], [5, 6, 9], [1, 3, 6, 8, 9], [7], [3, 6, 9], [5, 6, 8], [1, 6, 8], [4]], [[3, 6, 9], [8], [4, 6, 9], [5], [1, 3, 4, 9], [3, 4, 6, 9], [2], [7], [1, 6, 9]], [[7], [4, 5, 6], [1], [4, 6, 8, 9], [2], [4, 6, 9], [3], [6, 8], [5, 6, 8, 9]], [[3, 5, 6, 8], [1, 2, 3, 4, 5, 6], [2, 4, 5, 6, 8], [7], [1, 3, 4, 5], [2, 3, 4, 5], [4, 5, 6, 8], [9], [1, 3, 5, 6, 8]], [[3, 5, 8, 9], [1, 2, 3, 4, 5], [2, 4, 5, 8, 9], [1, 2, 3, 4, 9], [6], [2, 3, 4, 5, 9], [7], [1, 2, 3, 4, 8], [1, 3, 5, 8]], [[3, 5, 6, 9], [7], [2, 4, 5, 6, 9], [1, 2, 3, 4, 9], [1, 3, 4, 5, 9], [8], [4, 5, 6], [1, 2, 3, 4, 6], [1, 3, 5, 6]], [[5, 6, 8], [2, 5, 6], [3], [2, 4, 6, 9], [4, 5, 8, 9], [2, 4, 5, 6, 9], [1], [4, 6, 8], [7]], [[1], [9], [2, 6, 8], [2, 3, 4, 6], [3, 4, 8], [7], [4, 6, 8], [5], [3, 6, 8]], [[4], [5, 6], [7], [3, 6], [3, 5, 8], [1], [9], [3, 6, 8], [2]]]]
INFO:root:Doing checkSmall1
INFO:root:Getting tiny MUSes, distance 1, for 1 puzlits, 1 repeats
INFO:root:Chunked 1 in [1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
INFO:root:Doing checkSmall2
INFO:root:Getting tiny MUSes, distance 2, for 1 puzlits, 1 repeats
INFO:root:Chunked 1 in [1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
INFO:root:Considering 100 * 1 jobs for minsize=3
INFO:root:Chunked 100 in [9, 9, 9, 9, 8, 8, 8, 8, 8, 8, 8, 8]
INFO:root:Considering 100 * 1 jobs for minsize=4
INFO:root:Chunked 100 in [9, 9, 9, 9, 8, 8, 8, 8, 8, 8, 8, 8]
INFO:root:Considering 100 * 1 jobs for minsize=5
INFO:root:Chunked 100 in [9, 9, 9, 9, 8, 8, 8, 8, 8, 8, 8, 8]
INFO:root:Considering 100 * 1 jobs for minsize=6
INFO:root:Chunked 100 in [9, 9, 9, 9, 8, 8, 8, 8, 8, 8, 8, 8]
INFO:root:Considering 100 * 1 jobs for minsize=7
INFO:root:Chunked 100 in [9, 9, 9, 9, 8, 8, 8, 8, 8, 8, 8, 8]
INFO:root:Considering 100 * 1 jobs for minsize=8
INFO:root:Chunked 100 in [9, 9, 9, 9, 8, 8, 8, 8, 8, 8, 8, 8]
INFO:root:Considering 100 * 1 jobs for minsize=9
INFO:root:Chunked 100 in [9, 9, 9, 9, 8, 8, 8, 8, 8, 8, 8, 8]
INFO:root:Considering 100 * 1 jobs for minsize=10
INFO:root:Chunked 100 in [9, 9, 9, 9, 8, 8, 8, 8, 8, 8, 8, 8]
INFO:root:Considering 100 * 1 jobs for minsize=11
INFO:root:Chunked 100 in [9, 9, 9, 9, 8, 8, 8, 8, 8, 8, 8, 8]
INFO:root:Considering 100 * 1 jobs for minsize=12
INFO:root:Chunked 100 in [9, 9, 9, 9, 8, 8, 8, 8, 8, 8, 8, 8]
INFO:root:Considering 100 * 1 jobs for minsize=13
INFO:root:Chunked 100 in [9, 9, 9, 9, 8, 8, 8, 8, 8, 8, 8, 8]
INFO:root:XX found first (2, 5) is not 9 14
INFO:root:Considering 100 * 1 jobs for minsize=14
INFO:root:Chunked 100 in [9, 9, 9, 9, 8, 8, 8, 8, 8, 8, 8, 8]
INFO:root:XX add new best (2, 5) is not 9 14 14
INFO:root:Trace: [(14, [(2, 5) is not 9])]
INFO:root:Trace Quality: [(14, 1)]
INFO:root:Trace Sorted: [(14, 1)]
INFO:root:Finished
INFO:root:Full Trace [(14, [(2, 5) is not 9])]
INFO:root:Trying {'minPrecheckStepsMUS': True}
INFO:root:Starting Step 1
INFO:root:Current state [[[[2], [3, 5, 6], [5, 6, 9], [1, 3, 6, 8, 9], [7], [3, 6, 9], [5, 6, 8], [1, 6, 8], [4]], [[3, 6, 9], [8], [4, 6, 9], [5], [1, 3, 4, 9], [3, 4, 6, 9], [2], [7], [1, 6, 9]], [[7], [4, 5, 6], [1], [4, 6, 8, 9], [2], [4, 6, 9], [3], [6, 8], [5, 6, 8, 9]], [[3, 5, 6, 8], [1, 2, 3, 4, 5, 6], [2, 4, 5, 6, 8], [7], [1, 3, 4, 5], [2, 3, 4, 5], [4, 5, 6, 8], [9], [1, 3, 5, 6, 8]], [[3, 5, 8, 9], [1, 2, 3, 4, 5], [2, 4, 5, 8, 9], [1, 2, 3, 4, 9], [6], [2, 3, 4, 5, 9], [7], [1, 2, 3, 4, 8], [1, 3, 5, 8]], [[3, 5, 6, 9], [7], [2, 4, 5, 6, 9], [1, 2, 3, 4, 9], [1, 3, 4, 5, 9], [8], [4, 5, 6], [1, 2, 3, 4, 6], [1, 3, 5, 6]], [[5, 6, 8], [2, 5, 6], [3], [2, 4, 6, 9], [4, 5, 8, 9], [2, 4, 5, 6, 9], [1], [4, 6, 8], [7]], [[1], [9], [2, 6, 8], [2, 3, 4, 6], [3, 4, 8], [7], [4, 6, 8], [5], [3, 6, 8]], [[4], [5, 6], [7], [3, 6], [3, 5, 8], [1], [9], [3, 6, 8], [2]]]]
INFO:root:Doing checkSmall1
INFO:root:Getting tiny MUSes, distance 1, for 1 puzlits, 1 repeats
INFO:root:Chunked 1 in [1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
INFO:root:Doing checkSmall2
INFO:root:Getting tiny MUSes, distance 2, for 1 puzlits, 1 repeats
INFO:root:Chunked 1 in [1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
INFO:root:Considering 100 * 1 jobs for minsize=3
INFO:root:Chunked 100 in [9, 9, 9, 9, 8, 8, 8, 8, 8, 8, 8, 8]
INFO:root:Considering 100 * 1 jobs for minsize=4
INFO:root:Chunked 100 in [9, 9, 9, 9, 8, 8, 8, 8, 8, 8, 8, 8]
INFO:root:Considering 100 * 1 jobs for minsize=5
INFO:root:Chunked 100 in [9, 9, 9, 9, 8, 8, 8, 8, 8, 8, 8, 8]
INFO:root:Considering 100 * 1 jobs for minsize=6
INFO:root:Chunked 100 in [9, 9, 9, 9, 8, 8, 8, 8, 8, 8, 8, 8]
INFO:root:Considering 100 * 1 jobs for minsize=7
INFO:root:Chunked 100 in [9, 9, 9, 9, 8, 8, 8, 8, 8, 8, 8, 8]
INFO:root:Considering 100 * 1 jobs for minsize=8
INFO:root:Chunked 100 in [9, 9, 9, 9, 8, 8, 8, 8, 8, 8, 8, 8]
INFO:root:Considering 100 * 1 jobs for minsize=9
INFO:root:Chunked 100 in [9, 9, 9, 9, 8, 8, 8, 8, 8, 8, 8, 8]
INFO:root:Considering 100 * 1 jobs for minsize=10
INFO:root:Chunked 100 in [9, 9, 9, 9, 8, 8, 8, 8, 8, 8, 8, 8]
INFO:root:Considering 100 * 1 jobs for minsize=11
INFO:root:Chunked 100 in [9, 9, 9, 9, 8, 8, 8, 8, 8, 8, 8, 8]
INFO:root:Considering 100 * 1 jobs for minsize=12
INFO:root:Chunked 100 in [9, 9, 9, 9, 8, 8, 8, 8, 8, 8, 8, 8]
INFO:root:Considering 100 * 1 jobs for minsize=13
INFO:root:Chunked 100 in [9, 9, 9, 9, 8, 8, 8, 8, 8, 8, 8, 8]
INFO:root:XX found first (2, 5) is not 9 14
INFO:root:Considering 100 * 1 jobs for minsize=14
INFO:root:Chunked 100 in [9, 9, 9, 9, 8, 8, 8, 8, 8, 8, 8, 8]
INFO:root:XX add new best (2, 5) is not 9 14 14
INFO:root:XX add new best (2, 5) is not 9 14 14
INFO:root:Trace: [(14, [(2, 5) is not 9])]
INFO:root:Trace Quality: [(14, 1)]
INFO:root:Trace Sorted: [(14, 1)]
INFO:root:Finished
INFO:root:Full Trace [(14, [(2, 5) is not 9])]
INFO:root:Trying {'gallopingMUSes': True, 'minPrecheckMUS': True}
INFO:root:Starting Step 1
INFO:root:Current state [[[[2], [3, 5, 6], [5, 6, 9], [1, 3, 6, 8, 9], [7], [3, 6, 9], [5, 6, 8], [1, 6, 8], [4]], [[3, 6, 9], [8], [4, 6, 9], [5], [1, 3, 4, 9], [3, 4, 6, 9], [2], [7], [1, 6, 9]], [[7], [4, 5, 6], [1], [4, 6, 8, 9], [2], [4, 6, 9], [3], [6, 8], [5, 6, 8, 9]], [[3, 5, 6, 8], [1, 2, 3, 4, 5, 6], [2, 4, 5, 6, 8], [7], [1, 3, 4, 5], [2, 3, 4, 5], [4, 5, 6, 8], [9], [1, 3, 5, 6, 8]], [[3, 5, 8, 9], [1, 2, 3, 4, 5], [2, 4, 5, 8, 9], [1, 2, 3, 4, 9], [6], [2, 3, 4, 5, 9], [7], [1, 2, 3, 4, 8], [1, 3, 5, 8]], [[3, 5, 6, 9], [7], [2, 4, 5, 6, 9], [1, 2, 3, 4, 9], [1, 3, 4, 5, 9], [8], [4, 5, 6], [1, 2, 3, 4, 6], [1, 3, 5, 6]], [[5, 6, 8], [2, 5, 6], [3], [2, 4, 6, 9], [4, 5, 8, 9], [2, 4, 5, 6, 9], [1], [4, 6, 8], [7]], [[1], [9], [2, 6, 8], [2, 3, 4, 6], [3, 4, 8], [7], [4, 6, 8], [5], [3, 6, 8]], [[4], [5, 6], [7], [3, 6], [3, 5, 8], [1], [9], [3, 6, 8], [2]]]]
INFO:root:Doing checkSmall1
INFO:root:Getting tiny MUSes, distance 1, for 1 puzlits, 1 repeats
INFO:root:Chunked 1 in [1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
INFO:root:Doing checkSmall2
INFO:root:Getting tiny MUSes, distance 2, for 1 puzlits, 1 repeats
INFO:root:Chunked 1 in [1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
INFO:root:Considering 100 * 1 jobs for minsize=3
INFO:root:Chunked 100 in [9, 9, 9, 9, 8, 8, 8, 8, 8, 8, 8, 8]
INFO:root:Considering 100 * 1 jobs for minsize=4
INFO:root:Chunked 100 in [9, 9, 9, 9, 8, 8, 8, 8, 8, 8, 8, 8]
INFO:root:Considering 100 * 1 jobs for minsize=5
INFO:root:Chunked 100 in [9, 9, 9, 9, 8, 8, 8, 8, 8, 8, 8, 8]
INFO:root:Considering 100 * 1 jobs for minsize=6
INFO:root:Chunked 100 in [9, 9, 9, 9, 8, 8, 8, 8, 8, 8, 8, 8]
INFO:root:Considering 100 * 1 jobs for minsize=7
INFO:root:Chunked 100 in [9, 9, 9, 9, 8, 8, 8, 8, 8, 8, 8, 8]
INFO:root:Considering 100 * 1 jobs for minsize=8
INFO:root:Chunked 100 in [9, 9, 9, 9, 8, 8, 8, 8, 8, 8, 8, 8]
INFO:root:Considering 100 * 1 jobs for minsize=9
INFO:root:Chunked 100 in [9, 9, 9, 9, 8, 8, 8, 8, 8, 8, 8, 8]
INFO:root:Considering 100 * 1 jobs for minsize=10
INFO:root:Chunked 100 in [9, 9, 9, 9, 8, 8, 8, 8, 8, 8, 8, 8]
INFO:root:Considering 100 * 1 jobs for minsize=11
INFO:root:Chunked 100 in [9, 9, 9, 9, 8, 8, 8, 8, 8, 8, 8, 8]
INFO:root:Considering 100 * 1 jobs for minsize=12
INFO:root:Chunked 100 in [9, 9, 9, 9, 8, 8, 8, 8, 8, 8, 8, 8]
INFO:root:Considering 100 * 1 jobs for minsize=13
INFO:root:Chunked 100 in [9, 9, 9, 9, 8, 8, 8, 8, 8, 8, 8, 8]
INFO:root:XX found first (2, 5) is not 9 14
INFO:root:Considering 100 * 1 jobs for minsize=14
INFO:root:Chunked 100 in [9, 9, 9, 9, 8, 8, 8, 8, 8, 8, 8, 8]
INFO:root:XX add new best (2, 5) is not 9 14 14
INFO:root:XX add new best (2, 5) is not 9 14 14
INFO:root:Trace: [(14, [(2, 5) is not 9])]
INFO:root:Trace Quality: [(14, 1)]
INFO:root:Trace Sorted: [(14, 1)]
INFO:root:Finished
INFO:root:Full Trace [(14, [(2, 5) is not 9])]
INFO:root:Trying {}
INFO:root:Starting Step 1
INFO:root:Current state [[[[1, 6, 8, 9], [1, 6, 9], [1, 8, 9], [1, 5, 8, 9], [2], [4], [7], [3], [1, 5, 8]], [[5], [4], [1, 8, 9], [3], [7], [8, 9], [2], [6], [1, 8]], [[2], [3], [7], [1, 5, 6, 8], [1, 5], [5, 6, 8], [1, 5, 9], [1, 8, 9], [4]], [[7], [1, 2, 5, 6, 9], [1, 2, 5, 9], [5, 9], [3], [2, 5, 9], [8], [4], [1, 5, 6]], [[6, 9], [2, 5, 6, 9], [3], [4], [8], [1], [5, 9], [2, 7, 9], [5, 6, 7]], [[1, 9], [8], [4], [5, 7, 9], [6], [2, 5, 7, 9], [1, 5, 9], [1, 2], [3]], [[3], [1, 2], [1, 2, 8], [1, 6, 7, 8], [1, 4], [6, 7, 8], [4, 6], [5], [9]], [[1, 4, 8], [7], [1, 5, 8], [1, 5, 6, 8], [9], [3], [4, 6], [1, 8], [2]], [[1, 4, 8, 9], [1, 5, 9], [6], [2], [1, 4, 5], [5, 8], [3], [1, 7, 8], [1, 7, 8]]]]
INFO:root:Doing checkSmall1
INFO:root:Getting tiny MUSes, distance 1, for 1 puzlits, 1 repeats
INFO:root:Chunked 1 in [1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
INFO:root:Doing checkSmall2
INFO:root:Getting tiny MUSes, distance 2, for 1 puzlits, 1 repeats
INFO:root:Chunked 1 in [1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
INFO:root:Considering 100 * 1 jobs for minsize=3
INFO:root:Chunked 100 in [9, 9, 9, 9, 8, 8, 8, 8, 8, 8, 8, 8]
INFO:root:Considering 100 * 1 jobs for minsize=4
INFO:root:Chunked 100 in [9, 9, 9, 9, 8, 8, 8, 8, 8, 8, 8, 8]
INFO:root:Considering 100 * 1 jobs for minsize=5
INFO:root:Chunked 100 in [9, 9, 9, 9, 8, 8, 8, 8, 8, 8, 8, 8]
INFO:root:Considering 100 * 1 jobs for minsize=6
INFO:root:Chunked 100 in [9, 9, 9, 9, 8, 8, 8, 8, 8, 8, 8, 8]
INFO:root:Considering 100 * 1 jobs for minsize=7
INFO:root:Chunked 100 in [9, 9, 9, 9, 8, 8, 8, 8, 8, 8, 8, 8]
INFO:root:XX found first (4, 2) is not 9 8
INFO:root:XX add new best (4, 2) is not 9 8 8
INFO:root:XX add new best (4, 2) is not 9 8 8
INFO:root:XX add new best (4, 2) is not 9 8 8
INFO:root:XX add new best (4, 2) is not 9 8 8
INFO:root:XX add new best (4, 2) is not 9 8 8
INFO:root:XX add new best (4, 2) is not 9 8 8
INFO:root:XX add new best (4, 2) is not 9 8 8
INFO:root:XX add new best (4, 2) is not 9 8 8
INFO:root:XX add new best (4, 2) is not 9 8 8
INFO:root:XX add new best (4, 2) is not 9 8 8
INFO:root:XX add new best (4, 2) is not 9 8 8
INFO:root:XX add new best (4, 2) is not 9 8 8
INFO:root:XX add new best (4, 2) is not 9 8 8
INFO:root:XX add new best (4, 2) is not 9 8 8
INFO:root:XX add new best (4, 2) is not 9 8 8
INFO:root:XX add new best (4, 2) is not 9 8 8
INFO:root:XX add new best (4, 2) is not 9 8 8
INFO:root:XX add new best (4, 2) is not 9 8 8
INFO:root:XX add new best (4, 2) is not 9 8 8
INFO:root:XX add new best (4, 2) is not 9 8 8
INFO:root:XX add new best (4, 2) is not 9 8 8
INFO:root:XX add new best (4, 2) is not 9 8 8
INFO:root:XX add new best (4, 2) is not 9 8 8
INFO:root:XX add new best (4, 2) is not 9 8 8
INFO:root:XX add new best (4, 2) is not 9 8 8
INFO:root:XX add new best (4, 2) is not 9 8 8
INFO:root:XX add new best (4, 2) is not 9 8 8
INFO:root:XX add new best (4, 2) is not 9 8 8
INFO:root:XX add new best (4, 2) is not 9 8 8
INFO:root:XX add new best (4, 2) is not 9 8 8
INFO:root:XX add new best (4, 2) is not 9 8 8
INFO:root:XX add new best (4, 2) is not 9 8 8
INFO:root:XX add new best (4, 2) is not 9 8 8
INFO:root:XX add new best (4, 2) is not 9 8 8
INFO:root:XX add new best (4, 2) is not 9 8 8
INFO:root:XX add new best (4, 2) is not 9 8 8
INFO:root:XX add new best (4, 2) is not 9 8 8
INFO:root:XX add new best (4, 2) is not 9 8 8
INFO:root:XX add new best (4, 2) is not 9 8 8
INFO:root:XX add new best (4, 2) is not 9 8 8
INFO:root:XX add new best (4, 2) is not 9 8 8
INFO:root:Considering 100 * 1 jobs for minsize=8
INFO:root:Chunked 100 in [9, 9, 9, 9, 8, 8, 8, 8, 8, 8, 8, 8]
INFO:root:XX add new best (4, 2) is not 9 8 8
INFO:root:XX add new best (4, 2) is not 9 8 8
INFO:root:XX add new best (4, 2) is not 9 8 8
INFO:root:XX add new best (4, 2) is not 9 8 8
INFO:root:XX add new best (4, 2) is not 9 8 8
INFO:root:XX add new best (4, 2) is not 9 8 8
INFO:root:XX add new best (4, 2) is not 9 8 8
INFO:root:XX add new best (4, 2) is not 9 8 8
INFO:root:XX add new best (4, 2) is not 9 8 8
INFO:root:XX add new best (4, 2) is not 9 8 8
INFO:root:XX add new best (4, 2) is not 9 8 8
INFO:root:XX add new best (4, 2) is not 9 8 8
INFO:root:XX add new best (4, 2) is not 9 8 8
INFO:root:XX add new best (4, 2) is not 9 8 8
INFO:root:XX add new best (4, 2) is not 9 8 8
INFO:root:XX add new best (4, 2) is not 9 8 8
INFO:root:XX add new best (4, 2) is not 9 8 8
INFO:root:XX add new best (4, 2) is not 9 8 8
INFO:root:XX add new best (4, 2) is not 9 8 8
INFO:root:XX add new best (4, 2) is not 9 8 8
INFO:root:XX add new best (4, 2) is not 9 8 8
INFO:root:XX add new best (4, 2) is not 9 8 8
INFO:root:XX add new best (4, 2) is not 9 8 8
INFO:root:XX add new best (4, 2) is not 9 8 8
INFO:root:XX add new best (4, 2) is not 9 8 8
INFO:root:XX add new best (4, 2) is not 9 8 8
INFO:root:XX add new best (4, 2) is not 9 8 8
INFO:root:XX add new best (4, 2) is not 9 8 8
INFO:root:XX add new best (4, 2) is not 9 8 8
INFO:root:XX add new best (4, 2) is not 9 8 8
INFO:root:XX add new best (4, 2) is not 9 8 8
INFO:root:XX add new best (4, 2) is not 9 8 8
INFO:root:XX add new best (4, 2) is not 9 8 8
INFO:root:XX add new best (4, 2) is not 9 8 8
INFO:root:XX add new best (4, 2) is not 9 8 8
INFO:root:XX add new best (4, 2) is not 9 8 8
INFO:root:XX add new best (4, 2) is not 9 8 8
INFO:root:XX add new best (4, 2) is not 9 8 8
INFO:root:XX add new best (4, 2) is not 9 8 8
INFO:root:XX add new best (4, 2) is not 9 8 8
INFO:root:XX add new best (4, 2) is not 9 8 8
INFO:root:XX add new best (4, 2) is not 9 8 8
INFO:root:Trace: [(8, [(4, 2) is not 9])]
INFO:root:Trace Quality: [(8, 1)]
INFO:root:Trace Sorted: [(8, 1)]
INFO:root:Finished
INFO:root:Full Trace [(8, [(4, 2) is not 9])]
INFO:root:Trying {'prechopMUSes': True}
INFO:root:Starting Step 1
INFO:root:Current state [[[[1, 6, 8, 9], [1, 6, 9], [1, 8, 9], [1, 5, 8, 9], [2], [4], [7], [3], [1, 5, 8]], [[5], [4], [1, 8, 9], [3], [7], [8, 9], [2], [6], [1, 8]], [[2], [3], [7], [1, 5, 6, 8], [1, 5], [5, 6, 8], [1, 5, 9], [1, 8, 9], [4]], [[7], [1, 2, 5, 6, 9], [1, 2, 5, 9], [5, 9], [3], [2, 5, 9], [8], [4], [1, 5, 6]], [[6, 9], [2, 5, 6, 9], [3], [4], [8], [1], [5, 9], [2, 7, 9], [5, 6, 7]], [[1, 9], [8], [4], [5, 7, 9], [6], [2, 5, 7, 9], [1, 5, 9], [1, 2], [3]], [[3], [1, 2], [1, 2, 8], [1, 6, 7, 8], [1, 4], [6, 7, 8], [4, 6], [5], [9]], [[1, 4, 8], [7], [1, 5, 8], [1, 5, 6, 8], [9], [3], [4, 6], [1, 8], [2]], [[1, 4, 8, 9], [1, 5, 9], [6], [2], [1, 4, 5], [5, 8], [3], [1, 7, 8], [1, 7, 8]]]]
INFO:root:Doing checkSmall1
INFO:root:Getting tiny MUSes, distance 1, for 1 puzlits, 1 repeats
INFO:root:Chunked 1 in [1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
INFO:root:Doing checkSmall2
INFO:root:Getting tiny MUSes, distance 2, for 1 puzlits, 1 repeats
INFO:root:Chunked 1 in [1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
INFO:root:Considering 100 * 1 jobs for minsize=3
INFO:root:Chunked 100 in [9, 9, 9, 9, 8, 8, 8, 8, 8, 8, 8, 8]
INFO:root:Considering 100 * 1 jobs for minsize=4
INFO:root:Chunked 100 in [9, 9, 9, 9, 8, 8, 8, 8, 8, 8, 8, 8]
INFO:root:Considering 100 * 1 jobs for minsize=5
INFO:root:Chunked 100 in [9, 9, 9, 9, 8, 8, 8, 8, 8, 8, 8, 8]
INFO:root:Considering 100 * 1 jobs for minsize=6
INFO:root:Chunked 100 in [9, 9, 9, 9, 8, 8, 8, 8, 8, 8, 8, 8]
INFO:root:Considering 100 * 1 jobs for minsize=7
INFO:root:Chunked 100 in [9, 9, 9, 9, 8, 8, 8, 8, 8, 8, 8, 8]
INFO:root:XX found first (4, 2) is not 9 8
INFO:root:XX add new best (4, 2) is not 9 8 8
INFO:root:XX add new best (4, 2) is not 9 8 8
INFO:root:XX add new best (4, 2) is not 9 8 8
INFO:root:XX add new best (4, 2) is not 9 8 8
INFO:root:XX add new best (4, 2) is not 9 8 8
INFO:root:XX add new best (4, 2) is not 9 8 8
INFO:root:Considering 100 * 1 jobs for minsize=8
INFO:root:Chunked 100 in [9, 9, 9, 9, 8, 8, 8, 8, 8, 8, 8, 8]
INFO:root:XX add new best (4, 2) is not 9 8 8
INFO:root:XX add new best (4, 2) is not 9 8 8
INFO:root:XX add new best (4, 2) is not 9 8 8
INFO:root:XX add new best (4, 2) is not 9 8 8
INFO:root:XX add new best (4, 2) is not 9 8 8
INFO:root:Trace: [(8, [(4, 2) is not 9])]
INFO:root:Trace Quality: [(8, 1)]
INFO:root:Trace Sorted: [(8, 1)]
INFO:root:Finished
INFO:root:Full Trace [(8, [(4, 2) is not 9])]
INFO:root:Trying {'quarterChopMUS': True}
INFO:root:Starting Step 1
INFO:root:Current state [[[[1, 6, 8, 9], [1, 6, 9], [1, 8, 9], [1, 5, 8, 9], [2], [4], [7], [3], [1, 5, 8]], [[5], [4], [1, 8, 9], [3], [7], [8, 9], [2], [6], [1, 8]], [[2], [3], [7], [1, 5, 6, 8], [1, 5], [5, 6, 8], [1, 5, 9], [1, 8, 9], [4]], [[7], [1, 2, 5, 6, 9], [1, 2, 5, 9], [5, 9], [3], [2, 5, 9], [8], [4], [1, 5, 6]], [[6, 9], [2, 5, 6, 9], [3], [4], [8], [1], [5, 9], [2, 7, 9], [5, 6, 7]], [[1, 9], [8], [4], [5, 7, 9], [6], [2, 5, 7, 9], [1, 5, 9], [1, 2], [3]], [[3], [1, 2], [1, 2, 8], [1, 6, 7, 8], [1, 4], [6, 7, 8], [4, 6], [5], [9]], [[1, 4, 8], [7], [1, 5, 8], [1, 5, 6, 8], [9], [3], [4, 6], [1, 8], [2]], [[1, 4, 8, 9], [1, 5, 9], [6], [2], [1, 4, 5], [5, 8], [3], [1, 7, 8], [1, 7, 8]]]]
INFO:root:Doing checkSmall1
INFO:root:Getting tiny MUSes, distance 1, for 1 puzlits, 1 repeats
INFO:root:Chunked 1 in [1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
INFO:root:Doing checkSmall2
INFO:root:Getting tiny MUSes, distance 2, for 1 puzlits, 1 repeats
INFO:root:Chunked 1 in [1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
INFO:root:Considering 100 * 1 jobs for minsize=3
INFO:root:Chunked 100 in [9, 9, 9, 9, 8, 8, 8, 8, 8, 8, 8, 8]
INFO:root:Considering 100 * 1 jobs for minsize=4
INFO:root:Chunked 100 in [9, 9, 9, 9, 8, 8, 8, 8, 8, 8, 8, 8]
INFO:root:Considering 100 * 1 jobs for minsize=5
INFO:root:Chunked 100 in [9, 9, 9, 9, 8, 8, 8, 8, 8, 8, 8, 8]
INFO:root:Considering 100 * 1 jobs for minsize=6
INFO:root:Chunked 100 in [9, 9, 9, 9, 8, 8, 8, 8, 8, 8, 8, 8]
INFO:root:Considering 100 * 1 jobs for minsize=7
INFO:root:Chunked 100 in [9, 9, 9, 9, 8, 8, 8, 8, 8, 8, 8, 8]
INFO:root:XX found first (4, 2) is not 9 8
INFO:root:XX add new best (4, 2) is not 9 8 8
INFO:root:XX add new best (4, 2) is not 9 8 8
INFO:root:XX add new best (4, 2) is not 9 8 8
INFO:root:XX add new best (4, 2) is not 9 8 8
INFO:root:XX add new best (4, 2) is not 9 8 8
INFO:root:XX add new best (4, 2) is not 9 8 8
INFO:root:XX add new best (4, 2) is not 9 8 8
INFO:root:XX add new best (4, 2) is not 9 8 8
INFO:root:Considering 100 * 1 jobs for minsize=8
INFO:root:Chunked 100 in [9, 9, 9, 9, 8, 8, 8, 8, 8, 8, 8, 8]
INFO:root:XX add new best (4, 2) is not 9 8 8
INFO:root:XX add new best (4, 2) is not 9 8 8
INFO:root:XX add new best (4, 2) is not 9 8 8
INFO:root:XX add new best (4, 2) is not 9 8 8
INFO:root:XX add new best (4, 2) is not 9 8 8
INFO:root:XX add new best (4, 2) is not 9 8 8
INFO:root:XX add new best (4, 2) is not 9 8 8
INFO:root:XX add new best (4, 2) is not 9 8 8
INFO:root:XX add new best (4, 2) is not 9 8 8
INFO:root:XX add new best (4, 2) is not 9 8 8
INFO:root:XX add new best (4, 2) is not 9 8 8
INFO:root:Trace: [(8, [(4, 2) is not 9])]
INFO:root:Trace Quality: [(8, 1)]
INFO:root:Trace Sorted: [(8, 1)]
INFO:root:Finished
INFO:root:Full Trace [(8, [(4, 2) is not 9])]
INFO:root:Trying {'minPrecheckMUS': True}
INFO:root:Starting Step 1
INFO:root:Current state [[[[1, 6, 8, 9], [1, 6, 9], [1, 8, 9], [1, 5, 8, 9], [2], [4], [7], [3], [1, 5, 8]], [[5], [4], [1, 8, 9], [3], [7], [8, 9], [2], [6], [1, 8]], [[2], [3], [7], [1, 5, 6, 8], [1, 5], [5, 6, 8], [1, 5, 9], [1, 8, 9], [4]], [[7], [1, 2, 5, 6, 9], [1, 2, 5, 9], [5, 9], [3], [2, 5, 9], [8], [4], [1, 5, 6]], [[6, 9], [2, 5, 6, 9], [3], [4], [8], [1], [5, 9], [2, 7, 9], [5, 6, 7]], [[1, 9], [8], [4], [5, 7, 9], [6], [2, 5, 7, 9], [1, 5, 9], [1, 2], [3]], [[3], [1, 2], [1, 2, 8], [1, 6, 7, 8], [1, 4], [6, 7, 8], [4, 6], [5], [9]], [[1, 4, 8], [7], [1, 5, 8], [1, 5, 6, 8], [9], [3], [4, 6], [1, 8], [2]], [[1, 4, 8, 9], [1, 5, 9], [6], [2], [1, 4, 5], [5, 8], [3], [1, 7, 8], [1, 7, 8]]]]
INFO:root:Doing checkSmall1
INFO:root:Getting tiny MUSes, distance 1, for 1 puzlits, 1 repeats
INFO:root:Chunked 1 in [1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
INFO:root:Doing checkSmall2
INFO:root:Getting tiny MUSes, distance 2, for 1 puzlits, 1 repeats
INFO:root:Chunked 1 in [1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
INFO:root:Considering 100 * 1 jobs for minsize=3
INFO:root:Chunked 100 in [9, 9, 9, 9, 8, 8, 8, 8, 8, 8, 8, 8]
INFO:root:Considering 100 * 1 jobs for minsize=4
INFO:root:Chunked 100 in [9, 9, 9, 9, 8, 8, 8, 8, 8, 8, 8, 8]
INFO:root:Considering 100 * 1 jobs for minsize=5
INFO:root:Chunked 100 in [9, 9, 9, 9, 8, 8, 8, 8, 8, 8, 8, 8]
INFO:root:Considering 100 * 1 jobs for minsize=6
INFO:root:Chunked 100 in [9, 9, 9, 9, 8, 8, 8, 8, 8, 8, 8, 8]
INFO:root:Considering 100 * 1 jobs for minsize=7
INFO:root:Chunked 100 in [9, 9, 9, 9, 8, 8, 8, 8, 8, 8, 8, 8]
INFO:root:XX found first (4, 2) is not 9 8
INFO:root:XX add new best (4, 2) is not 9 8 8
INFO:root:XX add new best (4, 2) is not 9 8 8
INFO:root:XX add new best (4, 2) is not 9 8 8
INFO:root:XX add new best (4, 2) is not 9 8 8
INFO:root:Considering 100 * 1 jobs for minsize=8
INFO:root:Chunked 100 in [9, 9, 9, 9, 8, 8, 8, 8, 8, 8, 8, 8]
INFO:root:XX add new best (4, 2) is not 9 8 8
INFO:root:XX add new best (4, 2) is not 9 8 8
INFO:root:XX add new best (4, 2) is not 9 8 8
INFO:root:XX add new best (4, 2) is not 9 8 8
INFO:root:XX add new best (4, 2) is not 9 8 8
INFO:root:Trace: [(8, [(4, 2) is not 9])]
INFO:root:Trace Quality: [(8, 1)]
INFO:root:Trace Sorted: [(8, 1)]
INFO:root:Finished
INFO:root:Full Trace [(8, [(4, 2) is not 9])]
INFO:root:Trying {'gallopingMUSes': True}
INFO:root:Starting Step 1
INFO:root:Current state [[[[1, 6, 8, 9], [1, 6, 9], [1, 8, 9], [1, 5, 8, 9], [2], [4], [7], [3], [1, 5, 8]], [[5], [4], [1, 8, 9], [3], [7], [8, 9], [2], [6], [1, 8]], [[2], [3], [7], [1, 5, 6, 8], [1, 5], [5, 6, 8], [1, 5, 9], [1, 8, 9], [4]], [[7], [1, 2, 5, 6, 9], [1, 2, 5, 9], [5, 9], [3], [2, 5, 9], [8], [4], [1, 5, 6]], [[6, 9], [2, 5, 6, 9], [3], [4], [8], [1], [5, 9], [2, 7, 9], [5, 6, 7]], [[1, 9], [8], [4], [5, 7, 9], [6], [2, 5, 7, 9], [1, 5, 9], [1, 2], [3]], [[3], [1, 2], [1, 2, 8], [1, 6, 7, 8], [1, 4], [6, 7, 8], [4, 6], [5], [9]], [[1, 4, 8], [7], [1, 5, 8], [1, 5, 6, 8], [9], [3], [4, 6], [1, 8], [2]], [[1, 4, 8, 9], [1, 5, 9], [6], [2], [1, 4, 5], [5, 8], [3], [1, 7, 8], [1, 7, 8]]]]
INFO:root:Doing checkSmall1
INFO:root:Getting tiny MUSes, distance 1, for 1 puzlits, 1 repeats
INFO:root:Chunked 1 in [1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
INFO:root:Doing checkSmall2
INFO:root:Getting tiny MUSes, distance 2, for 1 puzlits, 1 repeats
INFO:root:Chunked 1 in [1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
INFO:root:Considering 100 * 1 jobs for minsize=3
INFO:root:Chunked 100 in [9, 9, 9, 9, 8, 8, 8, 8, 8, 8, 8, 8]
INFO:root:Considering 100 * 1 jobs for minsize=4
INFO:root:Chunked 100 in [9, 9, 9, 9, 8, 8, 8, 8, 8, 8, 8, 8]
INFO:root:Considering 100 * 1 jobs for minsize=5
INFO:root:Chunked 100 in [9, 9, 9, 9, 8, 8, 8, 8, 8, 8, 8, 8]
INFO:root:Considering 100 * 1 jobs for minsize=6
INFO:root:Chunked 100 in [9, 9, 9, 9, 8, 8, 8, 8, 8, 8, 8, 8]
INFO:root:Considering 100 * 1 jobs for minsize=7
INFO:root:Chunked 100 in [9, 9, 9, 9, 8, 8, 8, 8, 8, 8, 8, 8]
INFO:root:XX found first (4, 2) is not 9 8
INFO:root:XX add new best (4, 2) is not 9 8 8
INFO:root:XX add new best (4, 2) is not 9 8 8
INFO:root:Considering 100 * 1 jobs for minsize=8
INFO:root:Chunked 100 in [9, 9, 9, 9, 8, 8, 8, 8, 8, 8, 8, 8]
INFO:root:XX add new best (4, 2) is not 9 8 8
INFO:root:XX add new best (4, 2) is not 9 8 8
INFO:root:XX add new best (4, 2) is not 9 8 8
INFO:root:XX add new best (4, 2) is not 9 8 8
INFO:root:XX add new best (4, 2) is not 9 8 8
INFO:root:Trace: [(8, [(4, 2) is not 9])]
INFO:root:Trace Quality: [(8, 1)]
INFO:root:Trace Sorted: [(8, 1)]
INFO:root:Finished
INFO:root:Full Trace [(8, [(4, 2) is not 9])]
INFO:root:Trying {'minPrecheckStepsMUS': True}
INFO:root:Starting Step 1
INFO:root:Current state [[[[1, 6, 8, 9], [1, 6, 9], [1, 8, 9], [1, 5, 8, 9], [2], [4], [7], [3], [1, 5, 8]], [[5], [4], [1, 8, 9], [3], [7], [8, 9], [2], [6], [1, 8]], [[2], [3], [7], [1, 5, 6, 8], [1, 5], [5, 6, 8], [1, 5, 9], [1, 8, 9], [4]], [[7], [1, 2, 5, 6, 9], [1, 2, 5, 9], [5, 9], [3], [2, 5, 9], [8], [4], [1, 5, 6]], [[6, 9], [2, 5, 6, 9], [3], [4], [8], [1], [5, 9], [2, 7, 9], [5, 6, 7]], [[1, 9], [8], [4], [5, 7, 9], [6], [2, 5, 7, 9], [1, 5, 9], [1, 2], [3]], [[3], [1, 2], [1, 2, 8], [1, 6, 7, 8], [1, 4], [6, 7, 8], [4, 6], [5], [9]], [[1, 4, 8], [7], [1, 5, 8], [1, 5, 6, 8], [9], [3], [4, 6], [1, 8], [2]], [[1, 4, 8, 9], [1, 5, 9], [6], [2], [1, 4, 5], [5, 8], [3], [1, 7, 8], [1, 7, 8]]]]
INFO:root:Doing checkSmall1
INFO:root:Getting tiny MUSes, distance 1, for 1 puzlits, 1 repeats
INFO:root:Chunked 1 in [1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
INFO:root:Doing checkSmall2
INFO:root:Getting tiny MUSes, distance 2, for 1 puzlits, 1 repeats
INFO:root:Chunked 1 in [1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
INFO:root:Considering 100 * 1 jobs for minsize=3
INFO:root:Chunked 100 in [9, 9, 9, 9, 8, 8, 8, 8, 8, 8, 8, 8]
INFO:root:Considering 100 * 1 jobs for minsize=4
INFO:root:Chunked 100 in [9, 9, 9, 9, 8, 8, 8, 8, 8, 8, 8, 8]
INFO:root:Considering 100 * 1 jobs for minsize=5
INFO:root:Chunked 100 in [9, 9, 9, 9, 8, 8, 8, 8, 8, 8, 8, 8]
INFO:root:Considering 100 * 1 jobs for minsize=6
INFO:root:Chunked 100 in [9, 9, 9, 9, 8, 8, 8, 8, 8, 8, 8, 8]
INFO:root:Considering 100 * 1 jobs for minsize=7
INFO:root:Chunked 100 in [9, 9, 9, 9, 8, 8, 8, 8, 8, 8, 8, 8]
INFO:root:XX found first (4, 2) is not 9 8
INFO:root:XX add new best (4, 2) is not 9 8 8
INFO:root:XX add new best (4, 2) is not 9 8 8
INFO:root:XX add new best (4, 2) is not 9 8 8
INFO:root:XX add new best (4, 2) is not 9 8 8
INFO:root:Considering 100 * 1 jobs for minsize=8
INFO:root:Chunked 100 in [9, 9, 9, 9, 8, 8, 8, 8, 8, 8, 8, 8]
INFO:root:XX add new best (4, 2) is not 9 8 8
INFO:root:XX add new best (4, 2) is not 9 8 8
INFO:root:XX add new best (4, 2) is not 9 8 8
INFO:root:XX add new best (4, 2) is not 9 8 8
INFO:root:XX add new best (4, 2) is not 9 8 8
INFO:root:Trace: [(8, [(4, 2) is not 9])]
INFO:root:Trace Quality: [(8, 1)]
INFO:root:Trace Sorted: [(8, 1)]
INFO:root:Finished
INFO:root:Full Trace [(8, [(4, 2) is not 9])]
INFO:root:Trying {'gallopingMUSes': True, 'minPrecheckMUS': True}
INFO:root:Starting Step 1
INFO:root:Current state [[[[1, 6, 8, 9], [1, 6, 9], [1, 8, 9], [1, 5, 8, 9], [2], [4], [7], [3], [1, 5, 8]], [[5], [4], [1, 8, 9], [3], [7], [8, 9], [2], [6], [1, 8]], [[2], [3], [7], [1, 5, 6, 8], [1, 5], [5, 6, 8], [1, 5, 9], [1, 8, 9], [4]], [[7], [1, 2, 5, 6, 9], [1, 2, 5, 9], [5, 9], [3], [2, 5, 9], [8], [4], [1, 5, 6]], [[6, 9], [2, 5, 6, 9], [3], [4], [8], [1], [5, 9], [2, 7, 9], [5, 6, 7]], [[1, 9], [8], [4], [5, 7, 9], [6], [2, 5, 7, 9], [1, 5, 9], [1, 2], [3]], [[3], [1, 2], [1, 2, 8], [1, 6, 7, 8], [1, 4], [6, 7, 8], [4, 6], [5], [9]], [[1, 4, 8], [7], [1, 5, 8], [1, 5, 6, 8], [9], [3], [4, 6], [1, 8], [2]], [[1, 4, 8, 9], [1, 5, 9], [6], [2], [1, 4, 5], [5, 8], [3], [1, 7, 8], [1, 7, 8]]]]
INFO:root:Doing checkSmall1
INFO:root:Getting tiny MUSes, distance 1, for 1 puzlits, 1 repeats
INFO:root:Chunked 1 in [1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
INFO:root:Doing checkSmall2
INFO:root:Getting tiny MUSes, distance 2, for 1 puzlits, 1 repeats
INFO:root:Chunked 1 in [1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
INFO:root:Considering 100 * 1 jobs for minsize=3
INFO:root:Chunked 100 in [9, 9, 9, 9, 8, 8, 8, 8, 8, 8, 8, 8]
INFO:root:Considering 100 * 1 jobs for minsize=4
INFO:root:Chunked 100 in [9, 9, 9, 9, 8, 8, 8, 8, 8, 8, 8, 8]
INFO:root:Considering 100 * 1 jobs for minsize=5
INFO:root:Chunked 100 in [9, 9, 9, 9, 8, 8, 8, 8, 8, 8, 8, 8]
INFO:root:Considering 100 * 1 jobs for minsize=6
INFO:root:Chunked 100 in [9, 9, 9, 9, 8, 8, 8, 8, 8, 8, 8, 8]
INFO:root:Considering 100 * 1 jobs for minsize=7
INFO:root:Chunked 100 in [9, 9, 9, 9, 8, 8, 8, 8, 8, 8, 8, 8]
INFO:root:XX found first (4, 2) is not 9 8
INFO:root:XX add new best (4, 2) is not 9 8 8
INFO:root:XX add new best (4, 2) is not 9 8 8
INFO:root:XX add new best (4, 2) is not 9 8 8
INFO:root:XX add new best (4, 2) is not 9 8 8
INFO:root:Considering 100 * 1 jobs for minsize=8
INFO:root:Chunked 100 in [9, 9, 9, 9, 8, 8, 8, 8, 8, 8, 8, 8]
INFO:root:XX add new best (4, 2) is not 9 8 8
INFO:root:XX add new best (4, 2) is not 9 8 8
INFO:root:XX add new best (4, 2) is not 9 8 8
INFO:root:XX add new best (4, 2) is not 9 8 8
INFO:root:XX add new best (4, 2) is not 9 8 8
INFO:root:Trace: [(8, [(4, 2) is not 9])]
INFO:root:Trace Quality: [(8, 1)]
INFO:root:Trace Sorted: [(8, 1)]
INFO:root:Finished
INFO:root:Full Trace [(8, [(4, 2) is not 9])]
INFO:root:Trying {}
INFO:root:Starting Step 1
INFO:root:Current state [[[[8], [4], [2], [5, 6], [5, 6], [3], [7], [1], [9]], [[6, 7], [6, 7, 9], [3], [1], [7, 8, 9], [4], [5, 6, 8], [2, 5, 8], [2, 6]], [[5], [6, 7, 9], [1], [2, 7], [2, 7, 8, 9], [2, 8, 9], [6, 8], [3], [4]], [[6, 9], [3], [8], [2, 6], [1], [2, 6, 9], [4], [7], [5]], [[4, 9], [2], [4, 5], [3], [5, 9], [7], [1], [6], [8]], [[1], [5, 6], [7], [4, 5, 6], [4, 5, 6, 8], [5, 6, 8], [2], [9], [3]], [[3], [5, 8], [6], [2, 4, 5, 7], [2, 4, 5, 7], [2, 5], [9], [4, 5, 8], [1]], [[4, 7], [5, 7, 8], [4, 5], [9], [3], [1], [5, 6, 8], [2, 5, 8], [2, 6]], [[2], [1], [9], [8], [4, 5, 6], [5, 6], [3], [4, 5], [7]]]]
INFO:root:Doing checkSmall1
INFO:root:Getting tiny MUSes, distance 1, for 1 puzlits, 1 repeats
INFO:root:Chunked 1 in [1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
INFO:root:Doing checkSmall2
INFO:root:Getting tiny MUSes, distance 2, for 1 puzlits, 1 repeats
INFO:root:Chunked 1 in [1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
INFO:root:Considering 100 * 1 jobs for minsize=3
INFO:root:Chunked 100 in [9, 9, 9, 9, 8, 8, 8, 8, 8, 8, 8, 8]
INFO:root:Considering 100 * 1 jobs for minsize=4
INFO:root:Chunked 100 in [9, 9, 9, 9, 8, 8, 8, 8, 8, 8, 8, 8]
INFO:root:Considering 100 * 1 jobs for minsize=5
INFO:root:Chunked 100 in [9, 9, 9, 9, 8, 8, 8, 8, 8, 8, 8, 8]
INFO:root:Considering 100 * 1 jobs for minsize=6
INFO:root:Chunked 100 in [9, 9, 9, 9, 8, 8, 8, 8, 8, 8, 8, 8]
INFO:root:XX found first (6, 6) is not 5 7
INFO:root:XX add new best (6, 6) is not 5 7 7
INFO:root:XX add new best (6, 6) is not 5 7 7
INFO:root:XX add new best (6, 6) is not 5 7 7
INFO:root:XX add new best (6, 6) is not 5 7 7
INFO:root:XX add new best (6, 6) is not 5 7 7
INFO:root:XX add new best (6, 6) is not 5 7 7
INFO:root:Considering 100 * 1 jobs for minsize=7
INFO:root:Chunked 100 in [9, 9, 9, 9, 8, 8, 8, 8, 8, 8, 8, 8]
INFO:root:XX add new best (6, 6) is not 5 7 7
INFO:root:XX add new best (6, 6) is not 5 7 7
INFO:root:XX add new best (6, 6) is not 5 7 7
INFO:root:XX add new best (6, 6) is not 5 7 7
INFO:root:XX add new best (6, 6) is not 5 7 7
INFO:root:XX add new best (6, 6) is not 5 7 7
INFO:root:XX add new best (6, 6) is not 5 7 7
INFO:root:XX add new best (6, 6) is not 5 7 7
INFO:root:Trace: [(7, [(6, 6) is not 5])]
INFO:root:Trace Quality: [(7, 1)]
INFO:root:Trace Sorted: [(7, 1)]
INFO:root:Finished
INFO:root:Full Trace [(7, [(6, 6) is not 5])]
INFO:root:Trying {'prechopMUSes': True}
INFO:root:Starting Step 1
INFO:root:Current state [[[[8], [4], [2], [5, 6], [5, 6], [3], [7], [1], [9]], [[6, 7], [6, 7, 9], [3], [1], [7, 8, 9], [4], [5, 6, 8], [2, 5, 8], [2, 6]], [[5], [6, 7, 9], [1], [2, 7], [2, 7, 8, 9], [2, 8, 9], [6, 8], [3], [4]], [[6, 9], [3], [8], [2, 6], [1], [2, 6, 9], [4], [7], [5]], [[4, 9], [2], [4, 5], [3], [5, 9], [7], [1], [6], [8]], [[1], [5, 6], [7], [4, 5, 6], [4, 5, 6, 8], [5, 6, 8], [2], [9], [3]], [[3], [5, 8], [6], [2, 4, 5, 7], [2, 4, 5, 7], [2, 5], [9], [4, 5, 8], [1]], [[4, 7], [5, 7, 8], [4, 5], [9], [3], [1], [5, 6, 8], [2, 5, 8], [2, 6]], [[2], [1], [9], [8], [4, 5, 6], [5, 6], [3], [4, 5], [7]]]]
INFO:root:Doing checkSmall1
INFO:root:Getting tiny MUSes, distance 1, for 1 puzlits, 1 repeats
INFO:root:Chunked 1 in [1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
INFO:root:Doing checkSmall2
INFO:root:Getting tiny MUSes, distance 2, for 1 puzlits, 1 repeats
INFO:root:Chunked 1 in [1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
INFO:root:Considering 100 * 1 jobs for minsize=3
INFO:root:Chunked 100 in [9, 9, 9, 9, 8, 8, 8, 8, 8, 8, 8, 8]
INFO:root:Considering 100 * 1 jobs for minsize=4
INFO:root:Chunked 100 in [9, 9, 9, 9, 8, 8, 8, 8, 8, 8, 8, 8]
INFO:root:Considering 100 * 1 jobs for minsize=5
INFO:root:Chunked 100 in [9, 9, 9, 9, 8, 8, 8, 8, 8, 8, 8, 8]
INFO:root:Considering 100 * 1 jobs for minsize=6
INFO:root:Chunked 100 in [9, 9, 9, 9, 8, 8, 8, 8, 8, 8, 8, 8]
INFO:root:XX found first (6, 6) is not 5 7
INFO:root:XX add new best (6, 6) is not 5 7 7
INFO:root:XX add new best (6, 6) is not 5 7 7
INFO:root:XX add new best (6, 6) is not 5 7 7
INFO:root:XX add new best (6, 6) is not 5 7 7
INFO:root:XX add new best (6, 6) is not 5 7 7
INFO:root:XX add new best (6, 6) is not 5 7 7
INFO:root:XX add new best (6, 6) is not 5 7 7
INFO:root:XX add new best (6, 6) is not 5 7 7
INFO:root:XX add new best (6, 6) is not 5 7 7
INFO:root:Considering 100 * 1 jobs for minsize=7
INFO:root:Chunked 100 in [9, 9, 9, 9, 8, 8, 8, 8, 8, 8, 8, 8]
INFO:root:XX add new best (6, 6) is not 5 7 7
INFO:root:XX add new best (6, 6) is not 5 7 7
INFO:root:XX add new best (6, 6) is not 5 7 7
INFO:root:XX add new best (6, 6) is not 5 7 7
INFO:root:XX add new best (6, 6) is not 5 7 7
INFO:root:XX add new best (6, 6) is not 5 7 7
INFO:root:XX add new best (6, 6) is not 5 7 7
INFO:root:Trace: [(7, [(6, 6) is not 5])]
INFO:root:Trace Quality: [(7, 1)]
INFO:root:Trace Sorted: [(7, 1)]
INFO:root:Finished
INFO:root:Full Trace [(7, [(6, 6) is not 5])]
INFO:root:Trying {'quarterChopMUS': True}
INFO:root:Starting Step 1
INFO:root:Current state [[[[8], [4], [2], [5, 6], [5, 6], [3], [7], [1], [9]], [[6, 7], [6, 7, 9], [3], [1], [7, 8, 9], [4], [5, 6, 8], [2, 5, 8], [2, 6]], [[5], [6, 7, 9], [1], [2, 7], [2, 7, 8, 9], [2, 8, 9], [6, 8], [3], [4]], [[6, 9], [3], [8], [2, 6], [1], [2, 6, 9], [4], [7], [5]], [[4, 9], [2], [4, 5], [3], [5, 9], [7], [1], [6], [8]], [[1], [5, 6], [7], [4, 5, 6], [4, 5, 6, 8], [5, 6, 8], [2], [9], [3]], [[3], [5, 8], [6], [2, 4, 5, 7], [2, 4, 5, 7], [2, 5], [9], [4, 5, 8], [1]], [[4, 7], [5, 7, 8], [4, 5], [9], [3], [1], [5, 6, 8], [2, 5, 8], [2, 6]], [[2], [1], [9], [8], [4, 5, 6], [5, 6], [3], [4, 5], [7]]]]
INFO:root:Doing checkSmall1
INFO:root:Getting tiny MUSes, distance 1, for 1 puzlits, 1 repeats
INFO:root:Chunked 1 in [1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
INFO:root:Doing checkSmall2
INFO:root:Getting tiny MUSes, distance 2, for 1 puzlits, 1 repeats
INFO:root:Chunked 1 in [1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
INFO:root:Considering 100 * 1 jobs for minsize=3
INFO:root:Chunked 100 in [9, 9, 9, 9, 8, 8, 8, 8, 8, 8, 8, 8]
INFO:root:Considering 100 * 1 jobs for minsize=4
INFO:root:Chunked 100 in [9, 9, 9, 9, 8, 8, 8, 8, 8, 8, 8, 8]
INFO:root:Considering 100 * 1 jobs for minsize=5
INFO:root:Chunked 100 in [9, 9, 9, 9, 8, 8, 8, 8, 8, 8, 8, 8]
INFO:root:Considering 100 * 1 jobs for minsize=6
INFO:root:Chunked 100 in [9, 9, 9, 9, 8, 8, 8, 8, 8, 8, 8, 8]
INFO:root:XX found first (6, 6) is not 5 7
INFO:root:XX add new best (6, 6) is not 5 7 7
INFO:root:XX add new best (6, 6) is not 5 7 7
INFO:root:XX add new best (6, 6) is not 5 7 7
INFO:root:XX add new best (6, 6) is not 5 7 7
INFO:root:XX add new best (6, 6) is not 5 7 7
INFO:root:XX add new best (6, 6) is not 5 7 7
INFO:root:XX add new best (6, 6) is not 5 7 7
INFO:root:XX add new best (6, 6) is not 5 7 7
INFO:root:XX add new best (6, 6) is not 5 7 7
INFO:root:Considering 100 * 1 jobs for minsize=7
INFO:root:Chunked 100 in [9, 9, 9, 9, 8, 8, 8, 8, 8, 8, 8, 8]
INFO:root:XX add new best (6, 6) is not 5 7 7
INFO:root:XX add new best (6, 6) is not 5 7 7
INFO:root:XX add new best (6, 6) is not 5 7 7
INFO:root:XX add new best (6, 6) is not 5 7 7
INFO:root:XX add new best (6, 6) is not 5 7 7
INFO:root:XX add new best (6, 6) is not 5 7 7
INFO:root:XX add new best (6, 6) is not 5 7 7
INFO:root:XX add new best (6, 6) is not 5 7 7
INFO:root:XX add new best (6, 6) is not 5 7 7
INFO:root:XX add new best (6, 6) is not 5 7 7
INFO:root:XX add new best (6, 6) is not 5 7 7
INFO:root:XX add new best (6, 6) is not 5 7 7
INFO:root:XX add new best (6, 6) is not 5 7 7
INFO:root:Trace: [(7, [(6, 6) is not 5])]
INFO:root:Trace Quality: [(7, 1)]
INFO:root:Trace Sorted: [(7, 1)]
INFO:root:Finished
INFO:root:Full Trace [(7, [(6, 6) is not 5])]
INFO:root:Trying {'minPrecheckMUS': True}
INFO:root:Starting Step 1
INFO:root:Current state [[[[8], [4], [2], [5, 6], [5, 6], [3], [7], [1], [9]], [[6, 7], [6, 7, 9], [3], [1], [7, 8, 9], [4], [5, 6, 8], [2, 5, 8], [2, 6]], [[5], [6, 7, 9], [1], [2, 7], [2, 7, 8, 9], [2, 8, 9], [6, 8], [3], [4]], [[6, 9], [3], [8], [2, 6], [1], [2, 6, 9], [4], [7], [5]], [[4, 9], [2], [4, 5], [3], [5, 9], [7], [1], [6], [8]], [[1], [5, 6], [7], [4, 5, 6], [4, 5, 6, 8], [5, 6, 8], [2], [9], [3]], [[3], [5, 8], [6], [2, 4, 5, 7], [2, 4, 5, 7], [2, 5], [9], [4, 5, 8], [1]], [[4, 7], [5, 7, 8], [4, 5], [9], [3], [1], [5, 6, 8], [2, 5, 8], [2, 6]], [[2], [1], [9], [8], [4, 5, 6], [5, 6], [3], [4, 5], [7]]]]
INFO:root:Doing checkSmall1
INFO:root:Getting tiny MUSes, distance 1, for 1 puzlits, 1 repeats
INFO:root:Chunked 1 in [1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
INFO:root:Doing checkSmall2
INFO:root:Getting tiny MUSes, distance 2, for 1 puzlits, 1 repeats
INFO:root:Chunked 1 in [1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
INFO:root:Considering 100 * 1 jobs for minsize=3
INFO:root:Chunked 100 in [9, 9, 9, 9, 8, 8, 8, 8, 8, 8, 8, 8]
INFO:root:Considering 100 * 1 jobs for minsize=4
INFO:root:Chunked 100 in [9, 9, 9, 9, 8, 8, 8, 8, 8, 8, 8, 8]
INFO:root:Considering 100 * 1 jobs for minsize=5
INFO:root:Chunked 100 in [9, 9, 9, 9, 8, 8, 8, 8, 8, 8, 8, 8]
INFO:root:Considering 100 * 1 jobs for minsize=6
INFO:root:Chunked 100 in [9, 9, 9, 9, 8, 8, 8, 8, 8, 8, 8, 8]
INFO:root:XX found first (6, 6) is not 5 7
INFO:root:XX add new best (6, 6) is not 5 7 7
INFO:root:XX add new best (6, 6) is not 5 7 7
INFO:root:XX add new best (6, 6) is not 5 7 7
INFO:root:XX add new best (6, 6) is not 5 7 7
INFO:root:Considering 100 * 1 jobs for minsize=7
INFO:root:Chunked 100 in [9, 9, 9, 9, 8, 8, 8, 8, 8, 8, 8, 8]
INFO:root:XX add new best (6, 6) is not 5 7 7
INFO:root:XX add new best (6, 6) is not 5 7 7
INFO:root:XX add new best (6, 6) is not 5 7 7
INFO:root:XX add new best (6, 6) is not 5 7 7
INFO:root:XX add new best (6, 6) is not 5 7 7
INFO:root:XX add new best (6, 6) is not 5 7 7
INFO:root:XX add new best (6, 6) is not 5 7 7
INFO:root:Trace: [(7, [(6, 6) is not 5])]
INFO:root:Trace Quality: [(7, 1)]
INFO:root:Trace Sorted: [(7, 1)]
INFO:root:Finished
INFO:root:Full Trace [(7, [(6, 6) is not 5])]
INFO:root:Trying {'gallopingMUSes': True}
INFO:root:Starting Step 1
INFO:root:Current state [[[[8], [4], [2], [5, 6], [5, 6], [3], [7], [1], [9]], [[6, 7], [6, 7, 9], [3], [1], [7, 8, 9], [4], [5, 6, 8], [2, 5, 8], [2, 6]], [[5], [6, 7, 9], [1], [2, 7], [2, 7, 8, 9], [2, 8, 9], [6, 8], [3], [4]], [[6, 9], [3], [8], [2, 6], [1], [2, 6, 9], [4], [7], [5]], [[4, 9], [2], [4, 5], [3], [5, 9], [7], [1], [6], [8]], [[1], [5, 6], [7], [4, 5, 6], [4, 5, 6, 8], [5, 6, 8], [2], [9], [3]], [[3], [5, 8], [6], [2, 4, 5, 7], [2, 4, 5, 7], [2, 5], [9], [4, 5, 8], [1]], [[4, 7], [5, 7, 8], [4, 5], [9], [3], [1], [5, 6, 8], [2, 5, 8], [2, 6]], [[2], [1], [9], [8], [4, 5, 6], [5, 6], [3], [4, 5], [7]]]]
INFO:root:Doing checkSmall1
INFO:root:Getting tiny MUSes, distance 1, for 1 puzlits, 1 repeats
INFO:root:Chunked 1 in [1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
INFO:root:Doing checkSmall2
INFO:root:Getting tiny MUSes, distance 2, for 1 puzlits, 1 repeats
INFO:root:Chunked 1 in [1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
INFO:root:Considering 100 * 1 jobs for minsize=3
INFO:root:Chunked 100 in [9, 9, 9, 9, 8, 8, 8, 8, 8, 8, 8, 8]
INFO:root:Considering 100 * 1 jobs for minsize=4
INFO:root:Chunked 100 in [9, 9, 9, 9, 8, 8, 8, 8, 8, 8, 8, 8]
INFO:root:Considering 100 * 1 jobs for minsize=5
INFO:root:Chunked 100 in [9, 9, 9, 9, 8, 8, 8, 8, 8, 8, 8, 8]
INFO:root:Considering 100 * 1 jobs for minsize=6
INFO:root:Chunked 100 in [9, 9, 9, 9, 8, 8, 8, 8, 8, 8, 8, 8]
INFO:root:XX found first (6, 6) is not 5 7
INFO:root:XX add new best (6, 6) is not 5 7 7
INFO:root:XX add new best (6, 6) is not 5 7 7
INFO:root:Considering 100 * 1 jobs for minsize=7
INFO:root:Chunked 100 in [9, 9, 9, 9, 8, 8, 8, 8, 8, 8, 8, 8]
INFO:root:XX add new best (6, 6) is not 5 7 7
INFO:root:XX add new best (6, 6) is not 5 7 7
INFO:root:XX add new best (6, 6) is not 5 7 7
INFO:root:XX add new best (6, 6) is not 5 7 7
INFO:root:Trace: [(7, [(6, 6) is not 5])]
INFO:root:Trace Quality: [(7, 1)]
INFO:root:Trace Sorted: [(7, 1)]
INFO:root:Finished
INFO:root:Full Trace [(7, [(6, 6) is not 5])]
INFO:root:Trying {'minPrecheckStepsMUS': True}
INFO:root:Starting Step 1
INFO:root:Current state [[[[8], [4], [2], [5, 6], [5, 6], [3], [7], [1], [9]], [[6, 7], [6, 7, 9], [3], [1], [7, 8, 9], [4], [5, 6, 8], [2, 5, 8], [2, 6]], [[5], [6, 7, 9], [1], [2, 7], [2, 7, 8, 9], [2, 8, 9], [6, 8], [3], [4]], [[6, 9], [3], [8], [2, 6], [1], [2, 6, 9], [4], [7], [5]], [[4, 9], [2], [4, 5], [3], [5, 9], [7], [1], [6], [8]], [[1], [5, 6], [7], [4, 5, 6], [4, 5, 6, 8], [5, 6, 8], [2], [9], [3]], [[3], [5, 8], [6], [2, 4, 5, 7], [2, 4, 5, 7], [2, 5], [9], [4, 5, 8], [1]], [[4, 7], [5, 7, 8], [4, 5], [9], [3], [1], [5, 6, 8], [2, 5, 8], [2, 6]], [[2], [1], [9], [8], [4, 5, 6], [5, 6], [3], [4, 5], [7]]]]
INFO:root:Doing checkSmall1
INFO:root:Getting tiny MUSes, distance 1, for 1 puzlits, 1 repeats
INFO:root:Chunked 1 in [1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
INFO:root:Doing checkSmall2
INFO:root:Getting tiny MUSes, distance 2, for 1 puzlits, 1 repeats
INFO:root:Chunked 1 in [1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
INFO:root:Considering 100 * 1 jobs for minsize=3
INFO:root:Chunked 100 in [9, 9, 9, 9, 8, 8, 8, 8, 8, 8, 8, 8]
INFO:root:Considering 100 * 1 jobs for minsize=4
INFO:root:Chunked 100 in [9, 9, 9, 9, 8, 8, 8, 8, 8, 8, 8, 8]
INFO:root:Considering 100 * 1 jobs for minsize=5
INFO:root:Chunked 100 in [9, 9, 9, 9, 8, 8, 8, 8, 8, 8, 8, 8]
INFO:root:Considering 100 * 1 jobs for minsize=6
INFO:root:Chunked 100 in [9, 9, 9, 9, 8, 8, 8, 8, 8, 8, 8, 8]
INFO:root:XX found first (6, 6) is not 5 7
INFO:root:XX add new best (6, 6) is not 5 7 7
INFO:root:XX add new best (6, 6) is not 5 7 7
INFO:root:XX add new best (6, 6) is not 5 7 7
INFO:root:XX add new best (6, 6) is not 5 7 7
INFO:root:Considering 100 * 1 jobs for minsize=7
INFO:root:Chunked 100 in [9, 9, 9, 9, 8, 8, 8, 8, 8, 8, 8, 8]
INFO:root:XX add new best (6, 6) is not 5 7 7
INFO:root:XX add new best (6, 6) is not 5 7 7
INFO:root:XX add new best (6, 6) is not 5 7 7
INFO:root:XX add new best (6, 6) is not 5 7 7
INFO:root:XX add new best (6, 6) is not 5 7 7
INFO:root:XX add new best (6, 6) is not 5 7 7
INFO:root:XX add new best (6, 6) is not 5 7 7
INFO:root:Trace: [(7, [(6, 6) is not 5])]
INFO:root:Trace Quality: [(7, 1)]
INFO:root:Trace Sorted: [(7, 1)]
INFO:root:Finished
INFO:root:Full Trace [(7, [(6, 6) is not 5])]
INFO:root:Trying {'gallopingMUSes': True, 'minPrecheckMUS': True}
INFO:root:Starting Step 1
INFO:root:Current state [[[[8], [4], [2], [5, 6], [5, 6], [3], [7], [1], [9]], [[6, 7], [6, 7, 9], [3], [1], [7, 8, 9], [4], [5, 6, 8], [2, 5, 8], [2, 6]], [[5], [6, 7, 9], [1], [2, 7], [2, 7, 8, 9], [2, 8, 9], [6, 8], [3], [4]], [[6, 9], [3], [8], [2, 6], [1], [2, 6, 9], [4], [7], [5]], [[4, 9], [2], [4, 5], [3], [5, 9], [7], [1], [6], [8]], [[1], [5, 6], [7], [4, 5, 6], [4, 5, 6, 8], [5, 6, 8], [2], [9], [3]], [[3], [5, 8], [6], [2, 4, 5, 7], [2, 4, 5, 7], [2, 5], [9], [4, 5, 8], [1]], [[4, 7], [5, 7, 8], [4, 5], [9], [3], [1], [5, 6, 8], [2, 5, 8], [2, 6]], [[2], [1], [9], [8], [4, 5, 6], [5, 6], [3], [4, 5], [7]]]]
INFO:root:Doing checkSmall1
INFO:root:Getting tiny MUSes, distance 1, for 1 puzlits, 1 repeats
INFO:root:Chunked 1 in [1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
INFO:root:Doing checkSmall2
INFO:root:Getting tiny MUSes, distance 2, for 1 puzlits, 1 repeats
INFO:root:Chunked 1 in [1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
INFO:root:Considering 100 * 1 jobs for minsize=3
INFO:root:Chunked 100 in [9, 9, 9, 9, 8, 8, 8, 8, 8, 8, 8, 8]
INFO:root:Considering 100 * 1 jobs for minsize=4
INFO:root:Chunked 100 in [9, 9, 9, 9, 8, 8, 8, 8, 8, 8, 8, 8]
INFO:root:Considering 100 * 1 jobs for minsize=5
INFO:root:Chunked 100 in [9, 9, 9, 9, 8, 8, 8, 8, 8, 8, 8, 8]
INFO:root:Considering 100 * 1 jobs for minsize=6
INFO:root:Chunked 100 in [9, 9, 9, 9, 8, 8, 8, 8, 8, 8, 8, 8]
INFO:root:XX found first (6, 6) is not 5 7
INFO:root:XX add new best (6, 6) is not 5 7 7
INFO:root:XX add new best (6, 6) is not 5 7 7
INFO:root:XX add new best (6, 6) is not 5 7 7
INFO:root:XX add new best (6, 6) is not 5 7 7
INFO:root:Considering 100 * 1 jobs for minsize=7
INFO:root:Chunked 100 in [9, 9, 9, 9, 8, 8, 8, 8, 8, 8, 8, 8]
INFO:root:XX add new best (6, 6) is not 5 7 7
INFO:root:XX add new best (6, 6) is not 5 7 7
INFO:root:XX add new best (6, 6) is not 5 7 7
INFO:root:XX add new best (6, 6) is not 5 7 7
INFO:root:XX add new best (6, 6) is not 5 7 7
INFO:root:XX add new best (6, 6) is not 5 7 7
INFO:root:XX add new best (6, 6) is not 5 7 7
INFO:root:Trace: [(7, [(6, 6) is not 5])]
INFO:root:Trace Quality: [(7, 1)]
INFO:root:Trace Sorted: [(7, 1)]
INFO:root:Finished
INFO:root:Full Trace [(7, [(6, 6) is not 5])]
INFO:root:Trying {}
INFO:root:Starting Step 1
INFO:root:Current state [[[[2, 4, 5, 7], [1, 3, 5], [1, 2, 5, 7], [3, 4, 6, 7], [2, 3, 6, 7], [2, 4, 7], [8], [3, 4, 5, 6], [9]], [[2, 7, 9], [3, 9], [8], [3, 4, 6, 7, 9], [2, 3, 6, 7, 9], [5], [1, 3], [3, 4, 6], [1, 3, 6]], [[4, 5, 9], [6], [5, 9], [1], [3, 8, 9], [4, 8, 9], [7], [3, 5], [2]], [[5, 8, 9], [5, 8, 9], [2, 5, 6, 9], [6, 7, 9], [1, 5, 6, 7, 9], [3], [1, 2, 5, 9], [2, 7, 9], [4]], [[2, 5, 9], [7], [2, 3, 5, 6, 9], [6, 9], [4], [1, 9], [1, 2, 3, 5, 9], [8], [1, 3, 5]], [[1], [4], [3, 5, 9], [2], [5, 7, 8, 9], [7, 8, 9], [6], [3, 7, 9], [3, 5, 7]], [[3], [5, 8, 9], [4], [7, 8, 9], [2, 7, 9], [6], [2, 5, 9], [1], [5, 7, 8]], [[7, 8, 9], [2], [1, 7, 9], [5], [1, 3, 7, 9], [1, 7, 9], [4], [3, 6, 7, 9], [3, 6, 7, 8]], [[6], [1, 5, 8, 9], [1, 5, 7, 9], [3, 4, 7, 8, 9], [1, 2, 3, 7, 9], [1, 2, 4, 7, 9], [2, 3, 5, 9], [2, 3, 7, 9], [3, 5, 7, 8]]]]
INFO:root:Doing checkSmall1
INFO:root:Getting tiny MUSes, distance 1, for 1 puzlits, 1 repeats
INFO:root:Chunked 1 in [1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
INFO:root:Doing checkSmall2
INFO:root:Getting tiny MUSes, distance 2, for 1 puzlits, 1 repeats
INFO:root:Chunked 1 in [1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
INFO:root:Considering 100 * 1 jobs for minsize=3
INFO:root:Chunked 100 in [9, 9, 9, 9, 8, 8, 8, 8, 8, 8, 8, 8]
INFO:root:Considering 100 * 1 jobs for minsize=4
INFO:root:Chunked 100 in [9, 9, 9, 9, 8, 8, 8, 8, 8, 8, 8, 8]
INFO:root:Considering 100 * 1 jobs for minsize=5
INFO:root:Chunked 100 in [9, 9, 9, 9, 8, 8, 8, 8, 8, 8, 8, 8]
INFO:root:Considering 100 * 1 jobs for minsize=6
INFO:root:Chunked 100 in [9, 9, 9, 9, 8, 8, 8, 8, 8, 8, 8, 8]
INFO:root:Considering 100 * 1 jobs for minsize=7
INFO:root:Chunked 100 in [9, 9, 9, 9, 8, 8, 8, 8, 8, 8, 8, 8]
INFO:root:Considering 100 * 1 jobs for minsize=8
INFO:root:Chunked 100 in [9, 9, 9, 9, 8, 8, 8, 8, 8, 8, 8, 8]
INFO:root:Considering 100 * 1 jobs for minsize=9
INFO:root:Chunked 100 in [9, 9, 9, 9, 8, 8, 8, 8, 8, 8, 8, 8]
INFO:root:Considering 100 * 1 jobs for minsize=10
INFO:root:Chunked 100 in [9, 9, 9, 9, 8, 8, 8, 8, 8, 8, 8, 8]
INFO:root:XX found first (2, 7) is not 3 11
INFO:root:XX add new best (2, 7) is not 3 11 11
INFO:root:XX add new best (2, 7) is not 3 11 11
INFO:root:XX add new best (2, 7) is not 3 11 11
INFO:root:XX add new best (2, 7) is not 3 11 11
INFO:root:XX add new best (2, 7) is not 3 11 11
INFO:root:XX add new best (2, 7) is not 3 11 11
INFO:root:XX add new best (2, 7) is not 3 11 11
INFO:root:XX add new best (2, 7) is not 3 11 11
INFO:root:XX add new best (2, 7) is not 3 11 11
INFO:root:XX add new best (2, 7) is not 3 11 11
INFO:root:XX add new best (2, 7) is not 3 11 11
INFO:root:XX add new best (2, 7) is not 3 11 11
INFO:root:XX add new best (2, 7) is not 3 11 11
INFO:root:XX add new best (2, 7) is not 3 11 11
INFO:root:XX add new best (2, 7) is not 3 11 11
INFO:root:XX add new best (2, 7) is not 3 11 11
INFO:root:XX add new best (2, 7) is not 3 11 11
INFO:root:XX add new best (2, 7) is not 3 11 11
INFO:root:XX add new best (2, 7) is not 3 11 11
INFO:root:XX add new best (2, 7) is not 3 11 11
INFO:root:XX add new best (2, 7) is not 3 11 11
INFO:root:XX add new best (2, 7) is not 3 11 11
INFO:root:XX add new best (2, 7) is not 3 11 11
INFO:root:XX add new best (2, 7) is not 3 11 11
INFO:root:XX add new best (2, 7) is not 3 11 11
INFO:root:XX add new best (2, 7) is not 3 11 11
INFO:root:XX add new best (2, 7) is not 3 11 11
INFO:root:XX add new best (2, 7) is not 3 11 11
INFO:root:XX add new best (2, 7) is not 3 11 11
INFO:root:XX add new best (2, 7) is not 3 11 11
INFO:root:XX add new best (2, 7) is not 3 11 11
INFO:root:XX add new best (2, 7) is not 3 11 11
INFO:root:XX add new best (2, 7) is not 3 11 11
INFO:root:Considering 100 * 1 jobs for minsize=11
INFO:root:Chunked 100 in [9, 9, 9, 9, 8, 8, 8, 8, 8, 8, 8, 8]
INFO:root:XX add new best (2, 7) is not 3 11 11
INFO:root:XX add new best (2, 7) is not 3 11 11
INFO:root:XX add new best (2, 7) is not 3 11 11
INFO:root:XX add new best (2, 7) is not 3 11 11
INFO:root:XX add new best (2, 7) is not 3 11 11
INFO:root:XX add new best (2, 7) is not 3 11 11
INFO:root:XX add new best (2, 7) is not 3 11 11
INFO:root:XX add new best (2, 7) is not 3 11 11
INFO:root:XX add new best (2, 7) is not 3 11 11
INFO:root:XX add new best (2, 7) is not 3 11 11
INFO:root:XX add new best (2, 7) is not 3 11 11
INFO:root:XX add new best (2, 7) is not 3 11 11
INFO:root:XX add new best (2, 7) is not 3 11 11
INFO:root:XX add new best (2, 7) is not 3 11 11
INFO:root:XX add new best (2, 7) is not 3 11 11
INFO:root:XX add new best (2, 7) is not 3 11 11
INFO:root:XX add new best (2, 7) is not 3 11 11
INFO:root:XX add new best (2, 7) is not 3 11 11
INFO:root:XX add new best (2, 7) is not 3 11 11
INFO:root:XX add new best (2, 7) is not 3 11 11
INFO:root:XX add new best (2, 7) is not 3 11 11
INFO:root:XX add new best (2, 7) is not 3 11 11
INFO:root:XX add new best (2, 7) is not 3 11 11
INFO:root:XX add new best (2, 7) is not 3 11 11
INFO:root:XX add new best (2, 7) is not 3 11 11
INFO:root:XX add new best (2, 7) is not 3 11 11
INFO:root:XX add new best (2, 7) is not 3 11 11
INFO:root:XX add new best (2, 7) is not 3 11 11
INFO:root:XX add new best (2, 7) is not 3 11 11
INFO:root:XX add new best (2, 7) is not 3 11 11
INFO:root:XX add new best (2, 7) is not 3 11 11
INFO:root:XX add new best (2, 7) is not 3 11 11
INFO:root:XX add new best (2, 7) is not 3 11 11
INFO:root:XX add new best (2, 7) is not 3 11 11
INFO:root:Trace: [(11, [(2, 7) is not 3])]
INFO:root:Trace Quality: [(11, 1)]
INFO:root:Trace Sorted: [(11, 1)]
INFO:root:Finished
INFO:root:Full Trace [(11, [(2, 7) is not 3])]
INFO:root:Trying {'prechopMUSes': True}
INFO:root:Starting Step 1
INFO:root:Current state [[[[2, 4, 5, 7], [1, 3, 5], [1, 2, 5, 7], [3, 4, 6, 7], [2, 3, 6, 7], [2, 4, 7], [8], [3, 4, 5, 6], [9]], [[2, 7, 9], [3, 9], [8], [3, 4, 6, 7, 9], [2, 3, 6, 7, 9], [5], [1, 3], [3, 4, 6], [1, 3, 6]], [[4, 5, 9], [6], [5, 9], [1], [3, 8, 9], [4, 8, 9], [7], [3, 5], [2]], [[5, 8, 9], [5, 8, 9], [2, 5, 6, 9], [6, 7, 9], [1, 5, 6, 7, 9], [3], [1, 2, 5, 9], [2, 7, 9], [4]], [[2, 5, 9], [7], [2, 3, 5, 6, 9], [6, 9], [4], [1, 9], [1, 2, 3, 5, 9], [8], [1, 3, 5]], [[1], [4], [3, 5, 9], [2], [5, 7, 8, 9], [7, 8, 9], [6], [3, 7, 9], [3, 5, 7]], [[3], [5, 8, 9], [4], [7, 8, 9], [2, 7, 9], [6], [2, 5, 9], [1], [5, 7, 8]], [[7, 8, 9], [2], [1, 7, 9], [5], [1, 3, 7, 9], [1, 7, 9], [4], [3, 6, 7, 9], [3, 6, 7, 8]], [[6], [1, 5, 8, 9], [1, 5, 7, 9], [3, 4, 7, 8, 9], [1, 2, 3, 7, 9], [1, 2, 4, 7, 9], [2, 3, 5, 9], [2, 3, 7, 9], [3, 5, 7, 8]]]]
INFO:root:Doing checkSmall1
INFO:root:Getting tiny MUSes, distance 1, for 1 puzlits, 1 repeats
INFO:root:Chunked 1 in [1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
INFO:root:Doing checkSmall2
INFO:root:Getting tiny MUSes, distance 2, for 1 puzlits, 1 repeats
INFO:root:Chunked 1 in [1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
INFO:root:Considering 100 * 1 jobs for minsize=3
INFO:root:Chunked 100 in [9, 9, 9, 9, 8, 8, 8, 8, 8, 8, 8, 8]
INFO:root:Considering 100 * 1 jobs for minsize=4
INFO:root:Chunked 100 in [9, 9, 9, 9, 8, 8, 8, 8, 8, 8, 8, 8]
INFO:root:Considering 100 * 1 jobs for minsize=5
INFO:root:Chunked 100 in [9, 9, 9, 9, 8, 8, 8, 8, 8, 8, 8, 8]
INFO:root:Considering 100 * 1 jobs for minsize=6
INFO:root:Chunked 100 in [9, 9, 9, 9, 8, 8, 8, 8, 8, 8, 8, 8]
INFO:root:XX found first (2, 7) is not 3 7
INFO:root:XX add new best (2, 7) is not 3 7 7
INFO:root:XX add new best (2, 7) is not 3 7 7
INFO:root:XX add new best (2, 7) is not 3 7 7
INFO:root:XX add new best (2, 7) is not 3 7 7
INFO:root:XX add new best (2, 7) is not 3 7 7
INFO:root:XX add new best (2, 7) is not 3 7 7
INFO:root:XX add new best (2, 7) is not 3 7 7
INFO:root:XX add new best (2, 7) is not 3 7 7
INFO:root:XX add new best (2, 7) is not 3 7 7
INFO:root:XX add new best (2, 7) is not 3 7 7
INFO:root:XX add new best (2, 7) is not 3 7 7
INFO:root:Considering 100 * 1 jobs for minsize=7
INFO:root:Chunked 100 in [9, 9, 9, 9, 8, 8, 8, 8, 8, 8, 8, 8]
INFO:root:XX add new best (2, 7) is not 3 7 7
INFO:root:XX add new best (2, 7) is not 3 7 7
INFO:root:XX add new best (2, 7) is not 3 7 7
INFO:root:XX add new best (2, 7) is not 3 7 7
INFO:root:XX add new best (2, 7) is not 3 7 7
INFO:root:XX add new best (2, 7) is not 3 7 7
INFO:root:XX add new best (2, 7) is not 3 7 7
INFO:root:XX add new best (2, 7) is not 3 7 7
INFO:root:XX add new best (2, 7) is not 3 7 7
INFO:root:XX add new best (2, 7) is not 3 7 7
INFO:root:XX add new best (2, 7) is not 3 7 7
INFO:root:XX add new best (2, 7) is not 3 7 7
INFO:root:XX add new best (2, 7) is not 3 7 7
INFO:root:XX add new best (2, 7) is not 3 7 7
INFO:root:Trace: [(7, [(2, 7) is not 3])]
INFO:root:Trace Quality: [(7, 1)]
INFO:root:Trace Sorted: [(7, 1)]
INFO:root:Finished
INFO:root:Full Trace [(7, [(2, 7) is not 3])]
INFO:root:Trying {'quarterChopMUS': True}
INFO:root:Starting Step 1
INFO:root:Current state [[[[2, 4, 5, 7], [1, 3, 5], [1, 2, 5, 7], [3, 4, 6, 7], [2, 3, 6, 7], [2, 4, 7], [8], [3, 4, 5, 6], [9]], [[2, 7, 9], [3, 9], [8], [3, 4, 6, 7, 9], [2, 3, 6, 7, 9], [5], [1, 3], [3, 4, 6], [1, 3, 6]], [[4, 5, 9], [6], [5, 9], [1], [3, 8, 9], [4, 8, 9], [7], [3, 5], [2]], [[5, 8, 9], [5, 8, 9], [2, 5, 6, 9], [6, 7, 9], [1, 5, 6, 7, 9], [3], [1, 2, 5, 9], [2, 7, 9], [4]], [[2, 5, 9], [7], [2, 3, 5, 6, 9], [6, 9], [4], [1, 9], [1, 2, 3, 5, 9], [8], [1, 3, 5]], [[1], [4], [3, 5, 9], [2], [5, 7, 8, 9], [7, 8, 9], [6], [3, 7, 9], [3, 5, 7]], [[3], [5, 8, 9], [4], [7, 8, 9], [2, 7, 9], [6], [2, 5, 9], [1], [5, 7, 8]], [[7, 8, 9], [2], [1, 7, 9], [5], [1, 3, 7, 9], [1, 7, 9], [4], [3, 6, 7, 9], [3, 6, 7, 8]], [[6], [1, 5, 8, 9], [1, 5, 7, 9], [3, 4, 7, 8, 9], [1, 2, 3, 7, 9], [1, 2, 4, 7, 9], [2, 3, 5, 9], [2, 3, 7, 9], [3, 5, 7, 8]]]]
INFO:root:Doing checkSmall1
INFO:root:Getting tiny MUSes, distance 1, for 1 puzlits, 1 repeats
INFO:root:Chunked 1 in [1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
INFO:root:Doing checkSmall2
INFO:root:Getting tiny MUSes, distance 2, for 1 puzlits, 1 repeats
INFO:root:Chunked 1 in [1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
INFO:root:Considering 100 * 1 jobs for minsize=3
INFO:root:Chunked 100 in [9, 9, 9, 9, 8, 8, 8, 8, 8, 8, 8, 8]
INFO:root:Considering 100 * 1 jobs for minsize=4
INFO:root:Chunked 100 in [9, 9, 9, 9, 8, 8, 8, 8, 8, 8, 8, 8]
INFO:root:Considering 100 * 1 jobs for minsize=5
INFO:root:Chunked 100 in [9, 9, 9, 9, 8, 8, 8, 8, 8, 8, 8, 8]
INFO:root:Considering 100 * 1 jobs for minsize=6
INFO:root:Chunked 100 in [9, 9, 9, 9, 8, 8, 8, 8, 8, 8, 8, 8]
INFO:root:XX found first (2, 7) is not 3 7
INFO:root:XX add new best (2, 7) is not 3 7 7
INFO:root:XX add new best (2, 7) is not 3 7 7
INFO:root:XX add new best (2, 7) is not 3 7 7
INFO:root:XX add new best (2, 7) is not 3 7 7
INFO:root:XX add new best (2, 7) is not 3 7 7
INFO:root:XX add new best (2, 7) is not 3 7 7
INFO:root:Considering 100 * 1 jobs for minsize=7
INFO:root:Chunked 100 in [9, 9, 9, 9, 8, 8, 8, 8, 8, 8, 8, 8]
INFO:root:XX add new best (2, 7) is not 3 7 7
INFO:root:XX add new best (2, 7) is not 3 7 7
INFO:root:XX add new best (2, 7) is not 3 7 7
INFO:root:XX add new best (2, 7) is not 3 7 7
INFO:root:XX add new best (2, 7) is not 3 7 7
INFO:root:XX add new best (2, 7) is not 3 7 7
INFO:root:XX add new best (2, 7) is not 3 7 7
INFO:root:XX add new best (2, 7) is not 3 7 7
INFO:root:Trace: [(7, [(2, 7) is not 3])]
INFO:root:Trace Quality: [(7, 1)]
INFO:root:Trace Sorted: [(7, 1)]
INFO:root:Finished
INFO:root:Full Trace [(7, [(2, 7) is not 3])]
INFO:root:Trying {'minPrecheckMUS': True}
INFO:root:Starting Step 1
INFO:root:Current state [[[[2, 4, 5, 7], [1, 3, 5], [1, 2, 5, 7], [3, 4, 6, 7], [2, 3, 6, 7], [2, 4, 7], [8], [3, 4, 5, 6], [9]], [[2, 7, 9], [3, 9], [8], [3, 4, 6, 7, 9], [2, 3, 6, 7, 9], [5], [1, 3], [3, 4, 6], [1, 3, 6]], [[4, 5, 9], [6], [5, 9], [1], [3, 8, 9], [4, 8, 9], [7], [3, 5], [2]], [[5, 8, 9], [5, 8, 9], [2, 5, 6, 9], [6, 7, 9], [1, 5, 6, 7, 9], [3], [1, 2, 5, 9], [2, 7, 9], [4]], [[2, 5, 9], [7], [2, 3, 5, 6, 9], [6, 9], [4], [1, 9], [1, 2, 3, 5, 9], [8], [1, 3, 5]], [[1], [4], [3, 5, 9], [2], [5, 7, 8, 9], [7, 8, 9], [6], [3, 7, 9], [3, 5, 7]], [[3], [5, 8, 9], [4], [7, 8, 9], [2, 7, 9], [6], [2, 5, 9], [1], [5, 7, 8]], [[7, 8, 9], [2], [1, 7, 9], [5], [1, 3, 7, 9], [1, 7, 9], [4], [3, 6, 7, 9], [3, 6, 7, 8]], [[6], [1, 5, 8, 9], [1, 5, 7, 9], [3, 4, 7, 8, 9], [1, 2, 3, 7, 9], [1, 2, 4, 7, 9], [2, 3, 5, 9], [2, 3, 7, 9], [3, 5, 7, 8]]]]
INFO:root:Doing checkSmall1
INFO:root:Getting tiny MUSes, distance 1, for 1 puzlits, 1 repeats
INFO:root:Chunked 1 in [1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
INFO:root:Doing checkSmall2
INFO:root:Getting tiny MUSes, distance 2, for 1 puzlits, 1 repeats
INFO:root:Chunked 1 in [1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
INFO:root:Considering 100 * 1 jobs for minsize=3
INFO:root:Chunked 100 in [9, 9, 9, 9, 8, 8, 8, 8, 8, 8, 8, 8]
INFO:root:Considering 100 * 1 jobs for minsize=4
INFO:root:Chunked 100 in [9, 9, 9, 9, 8, 8, 8, 8, 8, 8, 8, 8]
INFO:root:Considering 100 * 1 jobs for minsize=5
INFO:root:Chunked 100 in [9, 9, 9, 9, 8, 8, 8, 8, 8, 8, 8, 8]
INFO:root:Considering 100 * 1 jobs for minsize=6
INFO:root:Chunked 100 in [9, 9, 9, 9, 8, 8, 8, 8, 8, 8, 8, 8]
INFO:root:XX found first (2, 7) is not 3 7
INFO:root:XX add new best (2, 7) is not 3 7 7
INFO:root:XX add new best (2, 7) is not 3 7 7
INFO:root:XX add new best (2, 7) is not 3 7 7
INFO:root:XX add new best (2, 7) is not 3 7 7
INFO:root:XX add new best (2, 7) is not 3 7 7
INFO:root:XX add new best (2, 7) is not 3 7 7
INFO:root:XX add new best (2, 7) is not 3 7 7
INFO:root:XX add new best (2, 7) is not 3 7 7
INFO:root:XX add new best (2, 7) is not 3 7 7
INFO:root:XX add new best (2, 7) is not 3 7 7
INFO:root:XX add new best (2, 7) is not 3 7 7
INFO:root:XX add new best (2, 7) is not 3 7 7
INFO:root:XX add new best (2, 7) is not 3 7 7
INFO:root:XX add new best (2, 7) is not 3 7 7
INFO:root:Considering 100 * 1 jobs for minsize=7
INFO:root:Chunked 100 in [9, 9, 9, 9, 8, 8, 8, 8, 8, 8, 8, 8]
INFO:root:XX add new best (2, 7) is not 3 7 7
INFO:root:XX add new best (2, 7) is not 3 7 7
INFO:root:XX add new best (2, 7) is not 3 7 7
INFO:root:XX add new best (2, 7) is not 3 7 7
INFO:root:XX add new best (2, 7) is not 3 7 7
INFO:root:XX add new best (2, 7) is not 3 7 7
INFO:root:XX add new best (2, 7) is not 3 7 7
INFO:root:XX add new best (2, 7) is not 3 7 7
INFO:root:XX add new best (2, 7) is not 3 7 7
INFO:root:XX add new best (2, 7) is not 3 7 7
INFO:root:XX add new best (2, 7) is not 3 7 7
INFO:root:XX add new best (2, 7) is not 3 7 7
INFO:root:XX add new best (2, 7) is not 3 7 7
INFO:root:Trace: [(7, [(2, 7) is not 3])]
INFO:root:Trace Quality: [(7, 1)]
INFO:root:Trace Sorted: [(7, 1)]
INFO:root:Finished
INFO:root:Full Trace [(7, [(2, 7) is not 3])]
INFO:root:Trying {'gallopingMUSes': True}
INFO:root:Starting Step 1
INFO:root:Current state [[[[2, 4, 5, 7], [1, 3, 5], [1, 2, 5, 7], [3, 4, 6, 7], [2, 3, 6, 7], [2, 4, 7], [8], [3, 4, 5, 6], [9]], [[2, 7, 9], [3, 9], [8], [3, 4, 6, 7, 9], [2, 3, 6, 7, 9], [5], [1, 3], [3, 4, 6], [1, 3, 6]], [[4, 5, 9], [6], [5, 9], [1], [3, 8, 9], [4, 8, 9], [7], [3, 5], [2]], [[5, 8, 9], [5, 8, 9], [2, 5, 6, 9], [6, 7, 9], [1, 5, 6, 7, 9], [3], [1, 2, 5, 9], [2, 7, 9], [4]], [[2, 5, 9], [7], [2, 3, 5, 6, 9], [6, 9], [4], [1, 9], [1, 2, 3, 5, 9], [8], [1, 3, 5]], [[1], [4], [3, 5, 9], [2], [5, 7, 8, 9], [7, 8, 9], [6], [3, 7, 9], [3, 5, 7]], [[3], [5, 8, 9], [4], [7, 8, 9], [2, 7, 9], [6], [2, 5, 9], [1], [5, 7, 8]], [[7, 8, 9], [2], [1, 7, 9], [5], [1, 3, 7, 9], [1, 7, 9], [4], [3, 6, 7, 9], [3, 6, 7, 8]], [[6], [1, 5, 8, 9], [1, 5, 7, 9], [3, 4, 7, 8, 9], [1, 2, 3, 7, 9], [1, 2, 4, 7, 9], [2, 3, 5, 9], [2, 3, 7, 9], [3, 5, 7, 8]]]]
INFO:root:Doing checkSmall1
INFO:root:Getting tiny MUSes, distance 1, for 1 puzlits, 1 repeats
INFO:root:Chunked 1 in [1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
INFO:root:Doing checkSmall2
INFO:root:Getting tiny MUSes, distance 2, for 1 puzlits, 1 repeats
INFO:root:Chunked 1 in [1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
INFO:root:Considering 100 * 1 jobs for minsize=3
INFO:root:Chunked 100 in [9, 9, 9, 9, 8, 8, 8, 8, 8, 8, 8, 8]
INFO:root:Considering 100 * 1 jobs for minsize=4
INFO:root:Chunked 100 in [9, 9, 9, 9, 8, 8, 8, 8, 8, 8, 8, 8]
INFO:root:Considering 100 * 1 jobs for minsize=5
INFO:root:Chunked 100 in [9, 9, 9, 9, 8, 8, 8, 8, 8, 8, 8, 8]
INFO:root:Considering 100 * 1 jobs for minsize=6
INFO:root:Chunked 100 in [9, 9, 9, 9, 8, 8, 8, 8, 8, 8, 8, 8]
INFO:root:XX found first (2, 7) is not 3 7
INFO:root:XX add new best (2, 7) is not 3 7 7
INFO:root:XX add new best (2, 7) is not 3 7 7
INFO:root:XX add new best (2, 7) is not 3 7 7
INFO:root:XX add new best (2, 7) is not 3 7 7
INFO:root:XX add new best (2, 7) is not 3 7 7
INFO:root:XX add new best (2, 7) is not 3 7 7
INFO:root:XX add new best (2, 7) is not 3 7 7
INFO:root:XX add new best (2, 7) is not 3 7 7
INFO:root:XX add new best (2, 7) is not 3 7 7
INFO:root:XX add new best (2, 7) is not 3 7 7
INFO:root:Considering 100 * 1 jobs for minsize=7
INFO:root:Chunked 100 in [9, 9, 9, 9, 8, 8, 8, 8, 8, 8, 8, 8]
INFO:root:XX add new best (2, 7) is not 3 7 7
INFO:root:XX add new best (2, 7) is not 3 7 7
INFO:root:XX add new best (2, 7) is not 3 7 7
INFO:root:XX add new best (2, 7) is not 3 7 7
INFO:root:XX add new best (2, 7) is not 3 7 7
INFO:root:XX add new best (2, 7) is not 3 7 7
INFO:root:XX add new best (2, 7) is not 3 7 7
INFO:root:XX add new best (2, 7) is not 3 7 7
INFO:root:XX add new best (2, 7) is not 3 7 7
INFO:root:Trace: [(7, [(2, 7) is not 3])]
INFO:root:Trace Quality: [(7, 1)]
INFO:root:Trace Sorted: [(7, 1)]
INFO:root:Finished
INFO:root:Full Trace [(7, [(2, 7) is not 3])]
INFO:root:Trying {'minPrecheckStepsMUS': True}
INFO:root:Starting Step 1
INFO:root:Current state [[[[2, 4, 5, 7], [1, 3, 5], [1, 2, 5, 7], [3, 4, 6, 7], [2, 3, 6, 7], [2, 4, 7], [8], [3, 4, 5, 6], [9]], [[2, 7, 9], [3, 9], [8], [3, 4, 6, 7, 9], [2, 3, 6, 7, 9], [5], [1, 3], [3, 4, 6], [1, 3, 6]], [[4, 5, 9], [6], [5, 9], [1], [3, 8, 9], [4, 8, 9], [7], [3, 5], [2]], [[5, 8, 9], [5, 8, 9], [2, 5, 6, 9], [6, 7, 9], [1, 5, 6, 7, 9], [3], [1, 2, 5, 9], [2, 7, 9], [4]], [[2, 5, 9], [7], [2, 3, 5, 6, 9], [6, 9], [4], [1, 9], [1, 2, 3, 5, 9], [8], [1, 3, 5]], [[1], [4], [3, 5, 9], [2], [5, 7, 8, 9], [7, 8, 9], [6], [3, 7, 9], [3, 5, 7]], [[3], [5, 8, 9], [4], [7, 8, 9], [2, 7, 9], [6], [2, 5, 9], [1], [5, 7, 8]], [[7, 8, 9], [2], [1, 7, 9], [5], [1, 3, 7, 9], [1, 7, 9], [4], [3, 6, 7, 9], [3, 6, 7, 8]], [[6], [1, 5, 8, 9], [1, 5, 7, 9], [3, 4, 7, 8, 9], [1, 2, 3, 7, 9], [1, 2, 4, 7, 9], [2, 3, 5, 9], [2, 3, 7, 9], [3, 5, 7, 8]]]]
INFO:root:Doing checkSmall1
INFO:root:Getting tiny MUSes, distance 1, for 1 puzlits, 1 repeats
INFO:root:Chunked 1 in [1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
INFO:root:Doing checkSmall2
INFO:root:Getting tiny MUSes, distance 2, for 1 puzlits, 1 repeats
INFO:root:Chunked 1 in [1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
INFO:root:Considering 100 * 1 jobs for minsize=3
INFO:root:Chunked 100 in [9, 9, 9, 9, 8, 8, 8, 8, 8, 8, 8, 8]
INFO:root:Considering 100 * 1 jobs for minsize=4
INFO:root:Chunked 100 in [9, 9, 9, 9, 8, 8, 8, 8, 8, 8, 8, 8]
INFO:root:Considering 100 * 1 jobs for minsize=5
INFO:root:Chunked 100 in [9, 9, 9, 9, 8, 8, 8, 8, 8, 8, 8, 8]
INFO:root:Considering 100 * 1 jobs for minsize=6
INFO:root:Chunked 100 in [9, 9, 9, 9, 8, 8, 8, 8, 8, 8, 8, 8]
INFO:root:XX found first (2, 7) is not 3 7
INFO:root:XX add new best (2, 7) is not 3 7 7
INFO:root:XX add new best (2, 7) is not 3 7 7
INFO:root:XX add new best (2, 7) is not 3 7 7
INFO:root:XX add new best (2, 7) is not 3 7 7
INFO:root:XX add new best (2, 7) is not 3 7 7
INFO:root:XX add new best (2, 7) is not 3 7 7
INFO:root:XX add new best (2, 7) is not 3 7 7
INFO:root:XX add new best (2, 7) is not 3 7 7
INFO:root:XX add new best (2, 7) is not 3 7 7
INFO:root:XX add new best (2, 7) is not 3 7 7
INFO:root:XX add new best (2, 7) is not 3 7 7
INFO:root:XX add new best (2, 7) is not 3 7 7
INFO:root:XX add new best (2, 7) is not 3 7 7
INFO:root:XX add new best (2, 7) is not 3 7 7
INFO:root:Considering 100 * 1 jobs for minsize=7
INFO:root:Chunked 100 in [9, 9, 9, 9, 8, 8, 8, 8, 8, 8, 8, 8]
INFO:root:XX add new best (2, 7) is not 3 7 7
INFO:root:XX add new best (2, 7) is not 3 7 7
INFO:root:XX add new best (2, 7) is not 3 7 7
INFO:root:XX add new best (2, 7) is not 3 7 7
INFO:root:XX add new best (2, 7) is not 3 7 7
INFO:root:XX add new best (2, 7) is not 3 7 7
INFO:root:XX add new best (2, 7) is not 3 7 7
INFO:root:XX add new best (2, 7) is not 3 7 7
INFO:root:XX add new best (2, 7) is not 3 7 7
INFO:root:XX add new best (2, 7) is not 3 7 7
INFO:root:XX add new best (2, 7) is not 3 7 7
INFO:root:XX add new best (2, 7) is not 3 7 7
INFO:root:XX add new best (2, 7) is not 3 7 7
INFO:root:Trace: [(7, [(2, 7) is not 3])]
INFO:root:Trace Quality: [(7, 1)]
INFO:root:Trace Sorted: [(7, 1)]
INFO:root:Finished
INFO:root:Full Trace [(7, [(2, 7) is not 3])]
INFO:root:Trying {'gallopingMUSes': True, 'minPrecheckMUS': True}
INFO:root:Starting Step 1
INFO:root:Current state [[[[2, 4, 5, 7], [1, 3, 5], [1, 2, 5, 7], [3, 4, 6, 7], [2, 3, 6, 7], [2, 4, 7], [8], [3, 4, 5, 6], [9]], [[2, 7, 9], [3, 9], [8], [3, 4, 6, 7, 9], [2, 3, 6, 7, 9], [5], [1, 3], [3, 4, 6], [1, 3, 6]], [[4, 5, 9], [6], [5, 9], [1], [3, 8, 9], [4, 8, 9], [7], [3, 5], [2]], [[5, 8, 9], [5, 8, 9], [2, 5, 6, 9], [6, 7, 9], [1, 5, 6, 7, 9], [3], [1, 2, 5, 9], [2, 7, 9], [4]], [[2, 5, 9], [7], [2, 3, 5, 6, 9], [6, 9], [4], [1, 9], [1, 2, 3, 5, 9], [8], [1, 3, 5]], [[1], [4], [3, 5, 9], [2], [5, 7, 8, 9], [7, 8, 9], [6], [3, 7, 9], [3, 5, 7]], [[3], [5, 8, 9], [4], [7, 8, 9], [2, 7, 9], [6], [2, 5, 9], [1], [5, 7, 8]], [[7, 8, 9], [2], [1, 7, 9], [5], [1, 3, 7, 9], [1, 7, 9], [4], [3, 6, 7, 9], [3, 6, 7, 8]], [[6], [1, 5, 8, 9], [1, 5, 7, 9], [3, 4, 7, 8, 9], [1, 2, 3, 7, 9], [1, 2, 4, 7, 9], [2, 3, 5, 9], [2, 3, 7, 9], [3, 5, 7, 8]]]]
INFO:root:Doing checkSmall1
INFO:root:Getting tiny MUSes, distance 1, for 1 puzlits, 1 repeats
INFO:root:Chunked 1 in [1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
INFO:root:Doing checkSmall2
INFO:root:Getting tiny MUSes, distance 2, for 1 puzlits, 1 repeats
INFO:root:Chunked 1 in [1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
INFO:root:Considering 100 * 1 jobs for minsize=3
INFO:root:Chunked 100 in [9, 9, 9, 9, 8, 8, 8, 8, 8, 8, 8, 8]
INFO:root:Considering 100 * 1 jobs for minsize=4
INFO:root:Chunked 100 in [9, 9, 9, 9, 8, 8, 8, 8, 8, 8, 8, 8]
INFO:root:Considering 100 * 1 jobs for minsize=5
INFO:root:Chunked 100 in [9, 9, 9, 9, 8, 8, 8, 8, 8, 8, 8, 8]
INFO:root:Considering 100 * 1 jobs for minsize=6
INFO:root:Chunked 100 in [9, 9, 9, 9, 8, 8, 8, 8, 8, 8, 8, 8]
INFO:root:XX found first (2, 7) is not 3 7
INFO:root:XX add new best (2, 7) is not 3 7 7
INFO:root:XX add new best (2, 7) is not 3 7 7
INFO:root:XX add new best (2, 7) is not 3 7 7
INFO:root:XX add new best (2, 7) is not 3 7 7
INFO:root:XX add new best (2, 7) is not 3 7 7
INFO:root:XX add new best (2, 7) is not 3 7 7
INFO:root:XX add new best (2, 7) is not 3 7 7
INFO:root:XX add new best (2, 7) is not 3 7 7
INFO:root:XX add new best (2, 7) is not 3 7 7
INFO:root:XX add new best (2, 7) is not 3 7 7
INFO:root:XX add new best (2, 7) is not 3 7 7
INFO:root:XX add new best (2, 7) is not 3 7 7
INFO:root:XX add new best (2, 7) is not 3 7 7
INFO:root:XX add new best (2, 7) is not 3 7 7
INFO:root:Considering 100 * 1 jobs for minsize=7
INFO:root:Chunked 100 in [9, 9, 9, 9, 8, 8, 8, 8, 8, 8, 8, 8]
INFO:root:XX add new best (2, 7) is not 3 7 7
INFO:root:XX add new best (2, 7) is not 3 7 7
INFO:root:XX add new best (2, 7) is not 3 7 7
INFO:root:XX add new best (2, 7) is not 3 7 7
INFO:root:XX add new best (2, 7) is not 3 7 7
INFO:root:XX add new best (2, 7) is not 3 7 7
INFO:root:XX add new best (2, 7) is not 3 7 7
INFO:root:XX add new best (2, 7) is not 3 7 7
INFO:root:XX add new best (2, 7) is not 3 7 7
INFO:root:XX add new best (2, 7) is not 3 7 7
INFO:root:XX add new best (2, 7) is not 3 7 7
INFO:root:XX add new best (2, 7) is not 3 7 7
INFO:root:XX add new best (2, 7) is not 3 7 7
INFO:root:Trace: [(7, [(2, 7) is not 3])]
INFO:root:Trace Quality: [(7, 1)]
INFO:root:Trace Sorted: [(7, 1)]
INFO:root:Finished
INFO:root:Full Trace [(7, [(2, 7) is not 3])]
INFO:root:Trying {}
INFO:root:Starting Step 1
INFO:root:Current state [[[[9], [6], [4, 8], [2, 5, 8], [2, 8], [1], [3], [7], [4, 5]], [[1, 3, 4], [1, 4], [2], [3, 5], [9], [7], [8], [6], [4, 5]], [[3, 8], [5], [7], [6], [4], [3, 8], [1, 2], [1, 2, 9], [1, 9]], [[1, 8], [2], [1, 3, 6, 8], [3, 4, 8, 9], [5], [3, 4, 8, 9], [7], [1, 8, 9], [1, 6, 9]], [[7], [4, 8, 9], [3, 4, 8], [1], [3, 8], [6], [5], [8, 9], [2]], [[5], [1, 9], [1, 6, 8], [2, 8, 9], [7], [2, 8, 9], [4], [3], [1, 6, 8, 9]], [[1, 2, 4, 8], [7], [1, 4], [2, 3, 4, 8], [6], [2, 3, 4, 8], [9], [5], [1, 3, 8]], [[2, 4], [3], [5], [2, 4, 8, 9], [1], [2, 4, 8, 9], [6], [2, 8], [7]], [[6], [1, 8], [9], [7], [2, 3, 8], [5], [1, 2], [4], [1, 3]]]]
INFO:root:Doing checkSmall1
INFO:root:Getting tiny MUSes, distance 1, for 1 puzlits, 1 repeats
INFO:root:Chunked 1 in [1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
INFO:root:Doing checkSmall2
INFO:root:Getting tiny MUSes, distance 2, for 1 puzlits, 1 repeats
INFO:root:Chunked 1 in [1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
INFO:root:Considering 100 * 1 jobs for minsize=3
INFO:root:Chunked 100 in [9, 9, 9, 9, 8, 8, 8, 8, 8, 8, 8, 8]
INFO:root:Considering 100 * 1 jobs for minsize=4
INFO:root:Chunked 100 in [9, 9, 9, 9, 8, 8, 8, 8, 8, 8, 8, 8]
INFO:root:Considering 100 * 1 jobs for minsize=5
INFO:root:Chunked 100 in [9, 9, 9, 9, 8, 8, 8, 8, 8, 8, 8, 8]
INFO:root:Considering 100 * 1 jobs for minsize=6
INFO:root:Chunked 100 in [9, 9, 9, 9, 8, 8, 8, 8, 8, 8, 8, 8]
INFO:root:Considering 100 * 1 jobs for minsize=7
INFO:root:Chunked 100 in [9, 9, 9, 9, 8, 8, 8, 8, 8, 8, 8, 8]
INFO:root:Considering 100 * 1 jobs for minsize=8
INFO:root:Chunked 100 in [9, 9, 9, 9, 8, 8, 8, 8, 8, 8, 8, 8]
INFO:root:Considering 100 * 1 jobs for minsize=9
INFO:root:Chunked 100 in [9, 9, 9, 9, 8, 8, 8, 8, 8, 8, 8, 8]
INFO:root:Considering 100 * 1 jobs for minsize=10
INFO:root:Chunked 100 in [9, 9, 9, 9, 8, 8, 8, 8, 8, 8, 8, 8]
INFO:root:Considering 100 * 1 jobs for minsize=11
INFO:root:Chunked 100 in [9, 9, 9, 9, 8, 8, 8, 8, 8, 8, 8, 8]
INFO:root:Considering 100 * 1 jobs for minsize=12
INFO:root:Chunked 100 in [9, 9, 9, 9, 8, 8, 8, 8, 8, 8, 8, 8]
INFO:root:Considering 100 * 1 jobs for minsize=13
INFO:root:Chunked 100 in [9, 9, 9, 9, 8, 8, 8, 8, 8, 8, 8, 8]
INFO:root:Considering 100 * 1 jobs for minsize=14
INFO:root:Chunked 100 in [9, 9, 9, 9, 8, 8, 8, 8, 8, 8, 8, 8]
INFO:root:Considering 100 * 1 jobs for minsize=15
INFO:root:Chunked 100 in [9, 9, 9, 9, 8, 8, 8, 8, 8, 8, 8, 8]
INFO:root:XX found first (4, 4) is not 8 16
INFO:root:XX add new best (4, 4) is not 8 16 16
INFO:root:XX add new best (4, 4) is not 8 16 16
INFO:root:XX add new best (4, 4) is not 8 16 16
INFO:root:XX add new best (4, 4) is not 8 16 16
INFO:root:XX add new best (4, 4) is not 8 16 16
INFO:root:XX add new best (4, 4) is not 8 16 16
INFO:root:XX add new best (4, 4) is not 8 16 16
INFO:root:XX add new best (4, 4) is not 8 16 16
INFO:root:XX add new best (4, 4) is not 8 16 16
INFO:root:XX add new best (4, 4) is not 8 16 16
INFO:root:XX add new best (4, 4) is not 8 16 16
INFO:root:XX add new best (4, 4) is not 8 16 16
INFO:root:XX add new best (4, 4) is not 8 16 16
INFO:root:XX add new best (4, 4) is not 8 16 16
INFO:root:XX add new best (4, 4) is not 8 16 16
INFO:root:XX add new best (4, 4) is not 8 16 16
INFO:root:XX add new best (4, 4) is not 8 16 16
INFO:root:XX add new best (4, 4) is not 8 16 16
INFO:root:XX add new best (4, 4) is not 8 16 16
INFO:root:XX add new best (4, 4) is not 8 16 16
INFO:root:XX add new best (4, 4) is not 8 16 16
INFO:root:XX add new best (4, 4) is not 8 16 16
INFO:root:XX add new best (4, 4) is not 8 16 16
INFO:root:XX add new best (4, 4) is not 8 16 16
INFO:root:XX add new best (4, 4) is not 8 16 16
INFO:root:XX add new best (4, 4) is not 8 16 16
INFO:root:XX add new best (4, 4) is not 8 16 16
INFO:root:XX add new best (4, 4) is not 8 16 16
INFO:root:XX add new best (4, 4) is not 8 16 16
INFO:root:XX add new best (4, 4) is not 8 16 16
INFO:root:XX add new best (4, 4) is not 8 16 16
INFO:root:XX add new best (4, 4) is not 8 16 16
INFO:root:XX add new best (4, 4) is not 8 16 16
INFO:root:XX add new best (4, 4) is not 8 16 16
INFO:root:XX add new best (4, 4) is not 8 16 16
INFO:root:XX add new best (4, 4) is not 8 16 16
INFO:root:XX add new best (4, 4) is not 8 16 16
INFO:root:XX add new best (4, 4) is not 8 16 16
INFO:root:XX add new best (4, 4) is not 8 16 16
INFO:root:XX add new best (4, 4) is not 8 16 16
INFO:root:XX add new best (4, 4) is not 8 16 16
INFO:root:Considering 100 * 1 jobs for minsize=16
INFO:root:Chunked 100 in [9, 9, 9, 9, 8, 8, 8, 8, 8, 8, 8, 8]
INFO:root:XX add new best (4, 4) is not 8 16 16
INFO:root:XX add new best (4, 4) is not 8 16 16
INFO:root:XX add new best (4, 4) is not 8 16 16
INFO:root:XX add new best (4, 4) is not 8 16 16
INFO:root:XX add new best (4, 4) is not 8 16 16
INFO:root:XX add new best (4, 4) is not 8 16 16
INFO:root:XX add new best (4, 4) is not 8 16 16
INFO:root:XX add new best (4, 4) is not 8 16 16
INFO:root:XX add new best (4, 4) is not 8 16 16
INFO:root:XX add new best (4, 4) is not 8 16 16
INFO:root:XX add new best (4, 4) is not 8 16 16
INFO:root:XX add new best (4, 4) is not 8 16 16
INFO:root:XX add new best (4, 4) is not 8 16 16
INFO:root:XX add new best (4, 4) is not 8 16 16
INFO:root:XX add new best (4, 4) is not 8 16 16
INFO:root:XX add new best (4, 4) is not 8 16 16
INFO:root:XX add new best (4, 4) is not 8 16 16
INFO:root:XX add new best (4, 4) is not 8 16 16
INFO:root:XX add new best (4, 4) is not 8 16 16
INFO:root:XX add new best (4, 4) is not 8 16 16
INFO:root:XX add new best (4, 4) is not 8 16 16
INFO:root:XX add new best (4, 4) is not 8 16 16
INFO:root:XX add new best (4, 4) is not 8 16 16
INFO:root:XX add new best (4, 4) is not 8 16 16
INFO:root:XX add new best (4, 4) is not 8 16 16
INFO:root:XX add new best (4, 4) is not 8 16 16
INFO:root:XX add new best (4, 4) is not 8 16 16
INFO:root:XX add new best (4, 4) is not 8 16 16
INFO:root:XX add new best (4, 4) is not 8 16 16
INFO:root:XX add new best (4, 4) is not 8 16 16
INFO:root:XX add new best (4, 4) is not 8 16 16
INFO:root:XX add new best (4, 4) is not 8 16 16
INFO:root:XX add new best (4, 4) is not 8 16 16
INFO:root:XX add new best (4, 4) is not 8 16 16
INFO:root:XX add new best (4, 4) is not 8 16 16
INFO:root:XX add new best (4, 4) is not 8 16 16
INFO:root:XX add new best (4, 4) is not 8 16 16
INFO:root:XX add new best (4, 4) is not 8 16 16
INFO:root:XX add new best (4, 4) is not 8 16 16
INFO:root:XX add new best (4, 4) is not 8 16 16
INFO:root:XX add new best (4, 4) is not 8 16 16
INFO:root:XX add new best (4, 4) is not 8 16 16
INFO:root:Trace: [(16, [(4, 4) is not 8])]
INFO:root:Trace Quality: [(16, 1)]
INFO:root:Trace Sorted: [(16, 1)]
INFO:root:Finished
INFO:root:Full Trace [(16, [(4, 4) is not 8])]
INFO:root:Trying {'prechopMUSes': True}
INFO:root:Starting Step 1
INFO:root:Current state [[[[9], [6], [4, 8], [2, 5, 8], [2, 8], [1], [3], [7], [4, 5]], [[1, 3, 4], [1, 4], [2], [3, 5], [9], [7], [8], [6], [4, 5]], [[3, 8], [5], [7], [6], [4], [3, 8], [1, 2], [1, 2, 9], [1, 9]], [[1, 8], [2], [1, 3, 6, 8], [3, 4, 8, 9], [5], [3, 4, 8, 9], [7], [1, 8, 9], [1, 6, 9]], [[7], [4, 8, 9], [3, 4, 8], [1], [3, 8], [6], [5], [8, 9], [2]], [[5], [1, 9], [1, 6, 8], [2, 8, 9], [7], [2, 8, 9], [4], [3], [1, 6, 8, 9]], [[1, 2, 4, 8], [7], [1, 4], [2, 3, 4, 8], [6], [2, 3, 4, 8], [9], [5], [1, 3, 8]], [[2, 4], [3], [5], [2, 4, 8, 9], [1], [2, 4, 8, 9], [6], [2, 8], [7]], [[6], [1, 8], [9], [7], [2, 3, 8], [5], [1, 2], [4], [1, 3]]]]
INFO:root:Doing checkSmall1
INFO:root:Getting tiny MUSes, distance 1, for 1 puzlits, 1 repeats
INFO:root:Chunked 1 in [1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
INFO:root:Doing checkSmall2
INFO:root:Getting tiny MUSes, distance 2, for 1 puzlits, 1 repeats
INFO:root:Chunked 1 in [1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
INFO:root:Considering 100 * 1 jobs for minsize=3
INFO:root:Chunked 100 in [9, 9, 9, 9, 8, 8, 8, 8, 8, 8, 8, 8]
INFO:root:Considering 100 * 1 jobs for minsize=4
INFO:root:Chunked 100 in [9, 9, 9, 9, 8, 8, 8, 8, 8, 8, 8, 8]
INFO:root:Considering 100 * 1 jobs for minsize=5
INFO:root:Chunked 100 in [9, 9, 9, 9, 8, 8, 8, 8, 8, 8, 8, 8]
INFO:root:Considering 100 * 1 jobs for minsize=6
INFO:root:Chunked 100 in [9, 9, 9, 9, 8, 8, 8, 8, 8, 8, 8, 8]
INFO:root:Considering 100 * 1 jobs for minsize=7
INFO:root:Chunked 100 in [9, 9, 9, 9, 8, 8, 8, 8, 8, 8, 8, 8]
INFO:root:Considering 100 * 1 jobs for minsize=8
INFO:root:Chunked 100 in [9, 9, 9, 9, 8, 8, 8, 8, 8, 8, 8, 8]
INFO:root:Considering 100 * 1 jobs for minsize=9
INFO:root:Chunked 100 in [9, 9, 9, 9, 8, 8, 8, 8, 8, 8, 8, 8]
INFO:root:Considering 100 * 1 jobs for minsize=10
INFO:root:Chunked 100 in [9, 9, 9, 9, 8, 8, 8, 8, 8, 8, 8, 8]
INFO:root:XX found first (4, 4) is not 8 10
INFO:root:Trace: [(10, [(4, 4) is not 8])]
INFO:root:Trace Quality: [(10, 1)]
INFO:root:Trace Sorted: [(10, 1)]
INFO:root:Finished
INFO:root:Full Trace [(10, [(4, 4) is not 8])]
INFO:root:Trying {'quarterChopMUS': True}
INFO:root:Starting Step 1
INFO:root:Current state [[[[9], [6], [4, 8], [2, 5, 8], [2, 8], [1], [3], [7], [4, 5]], [[1, 3, 4], [1, 4], [2], [3, 5], [9], [7], [8], [6], [4, 5]], [[3, 8], [5], [7], [6], [4], [3, 8], [1, 2], [1, 2, 9], [1, 9]], [[1, 8], [2], [1, 3, 6, 8], [3, 4, 8, 9], [5], [3, 4, 8, 9], [7], [1, 8, 9], [1, 6, 9]], [[7], [4, 8, 9], [3, 4, 8], [1], [3, 8], [6], [5], [8, 9], [2]], [[5], [1, 9], [1, 6, 8], [2, 8, 9], [7], [2, 8, 9], [4], [3], [1, 6, 8, 9]], [[1, 2, 4, 8], [7], [1, 4], [2, 3, 4, 8], [6], [2, 3, 4, 8], [9], [5], [1, 3, 8]], [[2, 4], [3], [5], [2, 4, 8, 9], [1], [2, 4, 8, 9], [6], [2, 8], [7]], [[6], [1, 8], [9], [7], [2, 3, 8], [5], [1, 2], [4], [1, 3]]]]
INFO:root:Doing checkSmall1
INFO:root:Getting tiny MUSes, distance 1, for 1 puzlits, 1 repeats
INFO:root:Chunked 1 in [1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
INFO:root:Doing checkSmall2
INFO:root:Getting tiny MUSes, distance 2, for 1 puzlits, 1 repeats
INFO:root:Chunked 1 in [1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
INFO:root:Considering 100 * 1 jobs for minsize=3
INFO:root:Chunked 100 in [9, 9, 9, 9, 8, 8, 8, 8, 8, 8, 8, 8]
INFO:root:Considering 100 * 1 jobs for minsize=4
INFO:root:Chunked 100 in [9, 9, 9, 9, 8, 8, 8, 8, 8, 8, 8, 8]
INFO:root:Considering 100 * 1 jobs for minsize=5
INFO:root:Chunked 100 in [9, 9, 9, 9, 8, 8, 8, 8, 8, 8, 8, 8]
INFO:root:Considering 100 * 1 jobs for minsize=6
INFO:root:Chunked 100 in [9, 9, 9, 9, 8, 8, 8, 8, 8, 8, 8, 8]
INFO:root:Considering 100 * 1 jobs for minsize=7
INFO:root:Chunked 100 in [9, 9, 9, 9, 8, 8, 8, 8, 8, 8, 8, 8]
INFO:root:Considering 100 * 1 jobs for minsize=8
INFO:root:Chunked 100 in [9, 9, 9, 9, 8, 8, 8, 8, 8, 8, 8, 8]
INFO:root:Considering 100 * 1 jobs for minsize=9
INFO:root:Chunked 100 in [9, 9, 9, 9, 8, 8, 8, 8, 8, 8, 8, 8]
INFO:root:XX found first (4, 4) is not 8 10
INFO:root:XX add new best (4, 4) is not 8 10 10
INFO:root:XX add new best (4, 4) is not 8 10 10
INFO:root:Considering 100 * 1 jobs for minsize=10
INFO:root:Chunked 100 in [9, 9, 9, 9, 8, 8, 8, 8, 8, 8, 8, 8]
INFO:root:XX add new best (4, 4) is not 8 10 10
INFO:root:XX add new best (4, 4) is not 8 10 10
INFO:root:Trace: [(10, [(4, 4) is not 8])]
INFO:root:Trace Quality: [(10, 1)]
INFO:root:Trace Sorted: [(10, 1)]
INFO:root:Finished
INFO:root:Full Trace [(10, [(4, 4) is not 8])]
INFO:root:Trying {'minPrecheckMUS': True}
INFO:root:Starting Step 1
INFO:root:Current state [[[[9], [6], [4, 8], [2, 5, 8], [2, 8], [1], [3], [7], [4, 5]], [[1, 3, 4], [1, 4], [2], [3, 5], [9], [7], [8], [6], [4, 5]], [[3, 8], [5], [7], [6], [4], [3, 8], [1, 2], [1, 2, 9], [1, 9]], [[1, 8], [2], [1, 3, 6, 8], [3, 4, 8, 9], [5], [3, 4, 8, 9], [7], [1, 8, 9], [1, 6, 9]], [[7], [4, 8, 9], [3, 4, 8], [1], [3, 8], [6], [5], [8, 9], [2]], [[5], [1, 9], [1, 6, 8], [2, 8, 9], [7], [2, 8, 9], [4], [3], [1, 6, 8, 9]], [[1, 2, 4, 8], [7], [1, 4], [2, 3, 4, 8], [6], [2, 3, 4, 8], [9], [5], [1, 3, 8]], [[2, 4], [3], [5], [2, 4, 8, 9], [1], [2, 4, 8, 9], [6], [2, 8], [7]], [[6], [1, 8], [9], [7], [2, 3, 8], [5], [1, 2], [4], [1, 3]]]]
INFO:root:Doing checkSmall1
INFO:root:Getting tiny MUSes, distance 1, for 1 puzlits, 1 repeats
INFO:root:Chunked 1 in [1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
INFO:root:Doing checkSmall2
INFO:root:Getting tiny MUSes, distance 2, for 1 puzlits, 1 repeats
INFO:root:Chunked 1 in [1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
INFO:root:Considering 100 * 1 jobs for minsize=3
INFO:root:Chunked 100 in [9, 9, 9, 9, 8, 8, 8, 8, 8, 8, 8, 8]
INFO:root:Considering 100 * 1 jobs for minsize=4
INFO:root:Chunked 100 in [9, 9, 9, 9, 8, 8, 8, 8, 8, 8, 8, 8]
INFO:root:Considering 100 * 1 jobs for minsize=5
INFO:root:Chunked 100 in [9, 9, 9, 9, 8, 8, 8, 8, 8, 8, 8, 8]
INFO:root:Considering 100 * 1 jobs for minsize=6
INFO:root:Chunked 100 in [9, 9, 9, 9, 8, 8, 8, 8, 8, 8, 8, 8]
INFO:root:Considering 100 * 1 jobs for minsize=7
INFO:root:Chunked 100 in [9, 9, 9, 9, 8, 8, 8, 8, 8, 8, 8, 8]
INFO:root:Considering 100 * 1 jobs for minsize=8
INFO:root:Chunked 100 in [9, 9, 9, 9, 8, 8, 8, 8, 8, 8, 8, 8]
INFO:root:Considering 100 * 1 jobs for minsize=9
INFO:root:Chunked 100 in [9, 9, 9, 9, 8, 8, 8, 8, 8, 8, 8, 8]
INFO:root:Considering 100 * 1 jobs for minsize=10
INFO:root:Chunked 100 in [9, 9, 9, 9, 8, 8, 8, 8, 8, 8, 8, 8]
INFO:root:XX found first (4, 4) is not 8 11
INFO:root:XX found new best (4, 4) is not 8 11 10
INFO:root:Trace: [(10, [(4, 4) is not 8])]
INFO:root:Trace Quality: [(10, 1)]
INFO:root:Trace Sorted: [(10, 1)]
INFO:root:Finished
INFO:root:Full Trace [(10, [(4, 4) is not 8])]
INFO:root:Trying {'gallopingMUSes': True}
INFO:root:Starting Step 1
INFO:root:Current state [[[[9], [6], [4, 8], [2, 5, 8], [2, 8], [1], [3], [7], [4, 5]], [[1, 3, 4], [1, 4], [2], [3, 5], [9], [7], [8], [6], [4, 5]], [[3, 8], [5], [7], [6], [4], [3, 8], [1, 2], [1, 2, 9], [1, 9]], [[1, 8], [2], [1, 3, 6, 8], [3, 4, 8, 9], [5], [3, 4, 8, 9], [7], [1, 8, 9], [1, 6, 9]], [[7], [4, 8, 9], [3, 4, 8], [1], [3, 8], [6], [5], [8, 9], [2]], [[5], [1, 9], [1, 6, 8], [2, 8, 9], [7], [2, 8, 9], [4], [3], [1, 6, 8, 9]], [[1, 2, 4, 8], [7], [1, 4], [2, 3, 4, 8], [6], [2, 3, 4, 8], [9], [5], [1, 3, 8]], [[2, 4], [3], [5], [2, 4, 8, 9], [1], [2, 4, 8, 9], [6], [2, 8], [7]], [[6], [1, 8], [9], [7], [2, 3, 8], [5], [1, 2], [4], [1, 3]]]]
INFO:root:Doing checkSmall1
INFO:root:Getting tiny MUSes, distance 1, for 1 puzlits, 1 repeats
INFO:root:Chunked 1 in [1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
INFO:root:Doing checkSmall2
INFO:root:Getting tiny MUSes, distance 2, for 1 puzlits, 1 repeats
INFO:root:Chunked 1 in [1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
INFO:root:Considering 100 * 1 jobs for minsize=3
INFO:root:Chunked 100 in [9, 9, 9, 9, 8, 8, 8, 8, 8, 8, 8, 8]
INFO:root:Considering 100 * 1 jobs for minsize=4
INFO:root:Chunked 100 in [9, 9, 9, 9, 8, 8, 8, 8, 8, 8, 8, 8]
INFO:root:Considering 100 * 1 jobs for minsize=5
INFO:root:Chunked 100 in [9, 9, 9, 9, 8, 8, 8, 8, 8, 8, 8, 8]
INFO:root:Considering 100 * 1 jobs for minsize=6
INFO:root:Chunked 100 in [9, 9, 9, 9, 8, 8, 8, 8, 8, 8, 8, 8]
INFO:root:Considering 100 * 1 jobs for minsize=7
INFO:root:Chunked 100 in [9, 9, 9, 9, 8, 8, 8, 8, 8, 8, 8, 8]
INFO:root:Considering 100 * 1 jobs for minsize=8
INFO:root:Chunked 100 in [9, 9, 9, 9, 8, 8, 8, 8, 8, 8, 8, 8]
INFO:root:Considering 100 * 1 jobs for minsize=9
INFO:root:Chunked 100 in [9, 9, 9, 9, 8, 8, 8, 8, 8, 8, 8, 8]
INFO:root:Considering 100 * 1 jobs for minsize=10
INFO:root:Chunked 100 in [9, 9, 9, 9, 8, 8, 8, 8, 8, 8, 8, 8]
INFO:root:XX found first (4, 4) is not 8 11
INFO:root:XX add new best (4, 4) is not 8 11 11
INFO:root:XX found new best (4, 4) is not 8 11 10
INFO:root:Trace: [(10, [(4, 4) is not 8])]
INFO:root:Trace Quality: [(10, 1)]
INFO:root:Trace Sorted: [(10, 1)]
INFO:root:Finished
INFO:root:Full Trace [(10, [(4, 4) is not 8])]
INFO:root:Trying {'minPrecheckStepsMUS': True}
INFO:root:Starting Step 1
INFO:root:Current state [[[[9], [6], [4, 8], [2, 5, 8], [2, 8], [1], [3], [7], [4, 5]], [[1, 3, 4], [1, 4], [2], [3, 5], [9], [7], [8], [6], [4, 5]], [[3, 8], [5], [7], [6], [4], [3, 8], [1, 2], [1, 2, 9], [1, 9]], [[1, 8], [2], [1, 3, 6, 8], [3, 4, 8, 9], [5], [3, 4, 8, 9], [7], [1, 8, 9], [1, 6, 9]], [[7], [4, 8, 9], [3, 4, 8], [1], [3, 8], [6], [5], [8, 9], [2]], [[5], [1, 9], [1, 6, 8], [2, 8, 9], [7], [2, 8, 9], [4], [3], [1, 6, 8, 9]], [[1, 2, 4, 8], [7], [1, 4], [2, 3, 4, 8], [6], [2, 3, 4, 8], [9], [5], [1, 3, 8]], [[2, 4], [3], [5], [2, 4, 8, 9], [1], [2, 4, 8, 9], [6], [2, 8], [7]], [[6], [1, 8], [9], [7], [2, 3, 8], [5], [1, 2], [4], [1, 3]]]]
INFO:root:Doing checkSmall1
INFO:root:Getting tiny MUSes, distance 1, for 1 puzlits, 1 repeats
INFO:root:Chunked 1 in [1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
INFO:root:Doing checkSmall2
INFO:root:Getting tiny MUSes, distance 2, for 1 puzlits, 1 repeats
INFO:root:Chunked 1 in [1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
INFO:root:Considering 100 * 1 jobs for minsize=3
INFO:root:Chunked 100 in [9, 9, 9, 9, 8, 8, 8, 8, 8, 8, 8, 8]
INFO:root:Considering 100 * 1 jobs for minsize=4
INFO:root:Chunked 100 in [9, 9, 9, 9, 8, 8, 8, 8, 8, 8, 8, 8]
INFO:root:Considering 100 * 1 jobs for minsize=5
INFO:root:Chunked 100 in [9, 9, 9, 9, 8, 8, 8, 8, 8, 8, 8, 8]
INFO:root:Considering 100 * 1 jobs for minsize=6
INFO:root:Chunked 100 in [9, 9, 9, 9, 8, 8, 8, 8, 8, 8, 8, 8]
INFO:root:Considering 100 * 1 jobs for minsize=7
INFO:root:Chunked 100 in [9, 9, 9, 9, 8, 8, 8, 8, 8, 8, 8, 8]
INFO:root:Considering 100 * 1 jobs for minsize=8
INFO:root:Chunked 100 in [9, 9, 9, 9, 8, 8, 8, 8, 8, 8, 8, 8]
INFO:root:Considering 100 * 1 jobs for minsize=9
INFO:root:Chunked 100 in [9, 9, 9, 9, 8, 8, 8, 8, 8, 8, 8, 8]
INFO:root:Considering 100 * 1 jobs for minsize=10
INFO:root:Chunked 100 in [9, 9, 9, 9, 8, 8, 8, 8, 8, 8, 8, 8]
INFO:root:XX found first (4, 4) is not 8 10
INFO:root:Trace: [(10, [(4, 4) is not 8])]
INFO:root:Trace Quality: [(10, 1)]
INFO:root:Trace Sorted: [(10, 1)]
INFO:root:Finished
INFO:root:Full Trace [(10, [(4, 4) is not 8])]
INFO:root:Trying {'gallopingMUSes': True, 'minPrecheckMUS': True}
INFO:root:Starting Step 1
INFO:root:Current state [[[[9], [6], [4, 8], [2, 5, 8], [2, 8], [1], [3], [7], [4, 5]], [[1, 3, 4], [1, 4], [2], [3, 5], [9], [7], [8], [6], [4, 5]], [[3, 8], [5], [7], [6], [4], [3, 8], [1, 2], [1, 2, 9], [1, 9]], [[1, 8], [2], [1, 3, 6, 8], [3, 4, 8, 9], [5], [3, 4, 8, 9], [7], [1, 8, 9], [1, 6, 9]], [[7], [4, 8, 9], [3, 4, 8], [1], [3, 8], [6], [5], [8, 9], [2]], [[5], [1, 9], [1, 6, 8], [2, 8, 9], [7], [2, 8, 9], [4], [3], [1, 6, 8, 9]], [[1, 2, 4, 8], [7], [1, 4], [2, 3, 4, 8], [6], [2, 3, 4, 8], [9], [5], [1, 3, 8]], [[2, 4], [3], [5], [2, 4, 8, 9], [1], [2, 4, 8, 9], [6], [2, 8], [7]], [[6], [1, 8], [9], [7], [2, 3, 8], [5], [1, 2], [4], [1, 3]]]]
INFO:root:Doing checkSmall1
INFO:root:Getting tiny MUSes, distance 1, for 1 puzlits, 1 repeats
INFO:root:Chunked 1 in [1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
INFO:root:Doing checkSmall2
INFO:root:Getting tiny MUSes, distance 2, for 1 puzlits, 1 repeats
INFO:root:Chunked 1 in [1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
INFO:root:Considering 100 * 1 jobs for minsize=3
INFO:root:Chunked 100 in [9, 9, 9, 9, 8, 8, 8, 8, 8, 8, 8, 8]
INFO:root:Considering 100 * 1 jobs for minsize=4
INFO:root:Chunked 100 in [9, 9, 9, 9, 8, 8, 8, 8, 8, 8, 8, 8]
INFO:root:Considering 100 * 1 jobs for minsize=5
INFO:root:Chunked 100 in [9, 9, 9, 9, 8, 8, 8, 8, 8, 8, 8, 8]
INFO:root:Considering 100 * 1 jobs for minsize=6
INFO:root:Chunked 100 in [9, 9, 9, 9, 8, 8, 8, 8, 8, 8, 8, 8]
INFO:root:Considering 100 * 1 jobs for minsize=7
INFO:root:Chunked 100 in [9, 9, 9, 9, 8, 8, 8, 8, 8, 8, 8, 8]
INFO:root:Considering 100 * 1 jobs for minsize=8
INFO:root:Chunked 100 in [9, 9, 9, 9, 8, 8, 8, 8, 8, 8, 8, 8]
INFO:root:Considering 100 * 1 jobs for minsize=9
INFO:root:Chunked 100 in [9, 9, 9, 9, 8, 8, 8, 8, 8, 8, 8, 8]
INFO:root:Considering 100 * 1 jobs for minsize=10
INFO:root:Chunked 100 in [9, 9, 9, 9, 8, 8, 8, 8, 8, 8, 8, 8]
INFO:root:XX found first (4, 4) is not 8 11
INFO:root:XX add new best (4, 4) is not 8 11 11
INFO:root:XX found new best (4, 4) is not 8 11 10
INFO:root:Trace: [(10, [(4, 4) is not 8])]
INFO:root:Trace Quality: [(10, 1)]
INFO:root:Trace Sorted: [(10, 1)]
INFO:root:Finished
INFO:root:Full Trace [(10, [(4, 4) is not 8])]
INFO:root:Trying {}
INFO:root:Starting Step 1
INFO:root:Current state [[[[5, 6, 8], [9], [7], [1], [2, 5, 8], [3], [2, 6, 8], [4], [2, 5, 8]], [[5, 6, 8], [3], [1, 2, 8], [2, 5, 8], [4], [2, 5, 9], [7], [1, 2, 6, 9], [2, 5, 8, 9]], [[4, 5, 8], [1, 2, 4], [1, 2, 8], [6], [7], [2, 5, 9], [2, 8, 9], [1, 2, 9], [3]], [[2], [7], [3], [9], [1], [4], [5], [8], [6]], [[9], [8], [6], [2, 3, 5], [2, 5], [7], [1], [2, 3], [4]], [[1], [5], [4], [2, 3], [6], [8], [2, 3, 9], [2, 3, 9], [7]], [[7], [2, 4], [2, 5, 8], [2, 4, 5, 8], [9], [1], [3, 6], [3, 6], [2, 8]], [[4, 8], [1, 2, 4], [9], [7], [3], [6], [2, 4, 8], [5], [1, 2]], [[3], [6], [1, 2, 5, 8], [2, 4, 5, 8], [2, 5, 8], [2, 5], [2, 4, 8, 9], [7], [1, 2, 8, 9]]]]
INFO:root:Doing checkSmall1
INFO:root:Getting tiny MUSes, distance 1, for 1 puzlits, 1 repeats
INFO:root:Chunked 1 in [1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
INFO:root:Doing checkSmall2
INFO:root:Getting tiny MUSes, distance 2, for 1 puzlits, 1 repeats
INFO:root:Chunked 1 in [1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
INFO:root:Considering 100 * 1 jobs for minsize=3
INFO:root:Chunked 100 in [9, 9, 9, 9, 8, 8, 8, 8, 8, 8, 8, 8]
INFO:root:Considering 100 * 1 jobs for minsize=4
INFO:root:Chunked 100 in [9, 9, 9, 9, 8, 8, 8, 8, 8, 8, 8, 8]
INFO:root:Considering 100 * 1 jobs for minsize=5
INFO:root:Chunked 100 in [9, 9, 9, 9, 8, 8, 8, 8, 8, 8, 8, 8]
INFO:root:Considering 100 * 1 jobs for minsize=6
INFO:root:Chunked 100 in [9, 9, 9, 9, 8, 8, 8, 8, 8, 8, 8, 8]
INFO:root:XX found first (7, 3) is not 8 7
INFO:root:XX add new best (7, 3) is not 8 7 7
INFO:root:XX add new best (7, 3) is not 8 7 7
INFO:root:XX add new best (7, 3) is not 8 7 7
INFO:root:XX add new best (7, 3) is not 8 7 7
INFO:root:XX add new best (7, 3) is not 8 7 7
INFO:root:XX add new best (7, 3) is not 8 7 7
INFO:root:XX add new best (7, 3) is not 8 7 7
INFO:root:XX add new best (7, 3) is not 8 7 7
INFO:root:XX add new best (7, 3) is not 8 7 7
INFO:root:XX add new best (7, 3) is not 8 7 7
INFO:root:XX add new best (7, 3) is not 8 7 7
INFO:root:XX add new best (7, 3) is not 8 7 7
INFO:root:XX add new best (7, 3) is not 8 7 7
INFO:root:XX add new best (7, 3) is not 8 7 7
INFO:root:XX add new best (7, 3) is not 8 7 7
INFO:root:XX add new best (7, 3) is not 8 7 7
INFO:root:XX add new best (7, 3) is not 8 7 7
INFO:root:XX add new best (7, 3) is not 8 7 7
INFO:root:XX add new best (7, 3) is not 8 7 7
INFO:root:XX add new best (7, 3) is not 8 7 7
INFO:root:XX add new best (7, 3) is not 8 7 7
INFO:root:XX add new best (7, 3) is not 8 7 7
INFO:root:XX add new best (7, 3) is not 8 7 7
INFO:root:XX add new best (7, 3) is not 8 7 7
INFO:root:XX add new best (7, 3) is not 8 7 7
INFO:root:XX add new best (7, 3) is not 8 7 7
INFO:root:XX add new best (7, 3) is not 8 7 7
INFO:root:XX add new best (7, 3) is not 8 7 7
INFO:root:XX add new best (7, 3) is not 8 7 7
INFO:root:XX add new best (7, 3) is not 8 7 7
INFO:root:XX add new best (7, 3) is not 8 7 7
INFO:root:XX add new best (7, 3) is not 8 7 7
INFO:root:XX add new best (7, 3) is not 8 7 7
INFO:root:XX add new best (7, 3) is not 8 7 7
INFO:root:XX add new best (7, 3) is not 8 7 7
INFO:root:XX add new best (7, 3) is not 8 7 7
INFO:root:XX add new best (7, 3) is not 8 7 7
INFO:root:XX add new best (7, 3) is not 8 7 7
INFO:root:XX add new best (7, 3) is not 8 7 7
INFO:root:XX add new best (7, 3) is not 8 7 7
INFO:root:XX add new best (7, 3) is not 8 7 7
INFO:root:XX add new best (7, 3) is not 8 7 7
INFO:root:XX add new best (7, 3) is not 8 7 7
INFO:root:XX add new best (7, 3) is not 8 7 7
INFO:root:XX add new best (7, 3) is not 8 7 7
INFO:root:XX add new best (7, 3) is not 8 7 7
INFO:root:XX add new best (7, 3) is not 8 7 7
INFO:root:XX add new best (7, 3) is not 8 7 7
INFO:root:XX add new best (7, 3) is not 8 7 7
INFO:root:XX add new best (7, 3) is not 8 7 7
INFO:root:XX add new best (7, 3) is not 8 7 7
INFO:root:XX add new best (7, 3) is not 8 7 7
INFO:root:XX add new best (7, 3) is not 8 7 7
INFO:root:XX add new best (7, 3) is not 8 7 7
INFO:root:XX add new best (7, 3) is not 8 7 7
INFO:root:XX add new best (7, 3) is not 8 7 7
INFO:root:XX add new best (7, 3) is not 8 7 7
INFO:root:XX add new best (7, 3) is not 8 7 7
INFO:root:XX add new best (7, 3) is not 8 7 7
INFO:root:XX add new best (7, 3) is not 8 7 7
INFO:root:XX add new best (7, 3) is not 8 7 7
INFO:root:XX add new best (7, 3) is not 8 7 7
INFO:root:XX add new best (7, 3) is not 8 7 7
INFO:root:XX add new best (7, 3) is not 8 7 7
INFO:root:XX add new best (7, 3) is not 8 7 7
INFO:root:XX add new best (7, 3) is not 8 7 7
INFO:root:XX add new best (7, 3) is not 8 7 7
INFO:root:XX add new best (7, 3) is not 8 7 7
INFO:root:XX add new best (7, 3) is not 8 7 7
INFO:root:XX add new best (7, 3) is not 8 7 7
INFO:root:XX add new best (7, 3) is not 8 7 7
INFO:root:XX add new best (7, 3) is not 8 7 7
INFO:root:XX add new best (7, 3) is not 8 7 7
INFO:root:XX add new best (7, 3) is not 8 7 7
INFO:root:XX add new best (7, 3) is not 8 7 7
INFO:root:XX add new best (7, 3) is not 8 7 7
INFO:root:XX add new best (7, 3) is not 8 7 7
INFO:root:XX add new best (7, 3) is not 8 7 7
INFO:root:XX add new best (7, 3) is not 8 7 7
INFO:root:XX add new best (7, 3) is not 8 7 7
INFO:root:XX add new best (7, 3) is not 8 7 7
INFO:root:XX add new best (7, 3) is not 8 7 7
INFO:root:XX add new best (7, 3) is not 8 7 7
INFO:root:XX add new best (7, 3) is not 8 7 7
INFO:root:XX add new best (7, 3) is not 8 7 7
INFO:root:XX add new best (7, 3) is not 8 7 7
INFO:root:XX add new best (7, 3) is not 8 7 7
INFO:root:XX add new best (7, 3) is not 8 7 7
INFO:root:XX add new best (7, 3) is not 8 7 7
INFO:root:XX add new best (7, 3) is not 8 7 7
INFO:root:XX add new best (7, 3) is not 8 7 7
INFO:root:XX add new best (7, 3) is not 8 7 7
INFO:root:XX add new best (7, 3) is not 8 7 7
INFO:root:XX add new best (7, 3) is not 8 7 7
INFO:root:XX add new best (7, 3) is not 8 7 7
INFO:root:XX add new best (7, 3) is not 8 7 7
INFO:root:XX add new best (7, 3) is not 8 7 7
INFO:root:XX add new best (7, 3) is not 8 7 7
INFO:root:XX add new best (7, 3) is not 8 7 7
INFO:root:Considering 100 * 1 jobs for minsize=7
INFO:root:Chunked 100 in [9, 9, 9, 9, 8, 8, 8, 8, 8, 8, 8, 8]
INFO:root:XX add new best (7, 3) is not 8 7 7
INFO:root:XX add new best (7, 3) is not 8 7 7
INFO:root:XX add new best (7, 3) is not 8 7 7
INFO:root:XX add new best (7, 3) is not 8 7 7
INFO:root:XX add new best (7, 3) is not 8 7 7
INFO:root:XX add new best (7, 3) is not 8 7 7
INFO:root:XX add new best (7, 3) is not 8 7 7
INFO:root:XX add new best (7, 3) is not 8 7 7
INFO:root:XX add new best (7, 3) is not 8 7 7
INFO:root:XX add new best (7, 3) is not 8 7 7
INFO:root:XX add new best (7, 3) is not 8 7 7
INFO:root:XX add new best (7, 3) is not 8 7 7
INFO:root:XX add new best (7, 3) is not 8 7 7
INFO:root:XX add new best (7, 3) is not 8 7 7
INFO:root:XX add new best (7, 3) is not 8 7 7
INFO:root:XX add new best (7, 3) is not 8 7 7
INFO:root:XX add new best (7, 3) is not 8 7 7
INFO:root:XX add new best (7, 3) is not 8 7 7
INFO:root:XX add new best (7, 3) is not 8 7 7
INFO:root:XX add new best (7, 3) is not 8 7 7
INFO:root:XX add new best (7, 3) is not 8 7 7
INFO:root:XX add new best (7, 3) is not 8 7 7
INFO:root:XX add new best (7, 3) is not 8 7 7
INFO:root:XX add new best (7, 3) is not 8 7 7
INFO:root:XX add new best (7, 3) is not 8 7 7
INFO:root:XX add new best (7, 3) is not 8 7 7
INFO:root:XX add new best (7, 3) is not 8 7 7
INFO:root:XX add new best (7, 3) is not 8 7 7
INFO:root:XX add new best (7, 3) is not 8 7 7
INFO:root:XX add new best (7, 3) is not 8 7 7
INFO:root:XX add new best (7, 3) is not 8 7 7
INFO:root:XX add new best (7, 3) is not 8 7 7
INFO:root:XX add new best (7, 3) is not 8 7 7
INFO:root:XX add new best (7, 3) is not 8 7 7
INFO:root:XX add new best (7, 3) is not 8 7 7
INFO:root:XX add new best (7, 3) is not 8 7 7
INFO:root:XX add new best (7, 3) is not 8 7 7
INFO:root:XX add new best (7, 3) is not 8 7 7
INFO:root:XX add new best (7, 3) is not 8 7 7
INFO:root:XX add new best (7, 3) is not 8 7 7
INFO:root:XX add new best (7, 3) is not 8 7 7
INFO:root:XX add new best (7, 3) is not 8 7 7
INFO:root:XX add new best (7, 3) is not 8 7 7
INFO:root:XX add new best (7, 3) is not 8 7 7
INFO:root:XX add new best (7, 3) is not 8 7 7
INFO:root:XX add new best (7, 3) is not 8 7 7
INFO:root:XX add new best (7, 3) is not 8 7 7
INFO:root:XX add new best (7, 3) is not 8 7 7
INFO:root:XX add new best (7, 3) is not 8 7 7
INFO:root:XX add new best (7, 3) is not 8 7 7
INFO:root:XX add new best (7, 3) is not 8 7 7
INFO:root:XX add new best (7, 3) is not 8 7 7
INFO:root:XX add new best (7, 3) is not 8 7 7
INFO:root:XX add new best (7, 3) is not 8 7 7
INFO:root:XX add new best (7, 3) is not 8 7 7
INFO:root:XX add new best (7, 3) is not 8 7 7
INFO:root:XX add new best (7, 3) is not 8 7 7
INFO:root:XX add new best (7, 3) is not 8 7 7
INFO:root:XX add new best (7, 3) is not 8 7 7
INFO:root:XX add new best (7, 3) is not 8 7 7
INFO:root:XX add new best (7, 3) is not 8 7 7
INFO:root:XX add new best (7, 3) is not 8 7 7
INFO:root:XX add new best (7, 3) is not 8 7 7
INFO:root:XX add new best (7, 3) is not 8 7 7
INFO:root:XX add new best (7, 3) is not 8 7 7
INFO:root:XX add new best (7, 3) is not 8 7 7
INFO:root:XX add new best (7, 3) is not 8 7 7
INFO:root:XX add new best (7, 3) is not 8 7 7
INFO:root:XX add new best (7, 3) is not 8 7 7
INFO:root:XX add new best (7, 3) is not 8 7 7
INFO:root:XX add new best (7, 3) is not 8 7 7
INFO:root:XX add new best (7, 3) is not 8 7 7
INFO:root:XX add new best (7, 3) is not 8 7 7
INFO:root:XX add new best (7, 3) is not 8 7 7
INFO:root:XX add new best (7, 3) is not 8 7 7
INFO:root:XX add new best (7, 3) is not 8 7 7
INFO:root:XX add new best (7, 3) is not 8 7 7
INFO:root:XX add new best (7, 3) is not 8 7 7
INFO:root:XX add new best (7, 3) is not 8 7 7
INFO:root:XX add new best (7, 3) is not 8 7 7
INFO:root:XX add new best (7, 3) is not 8 7 7
INFO:root:XX add new best (7, 3) is not 8 7 7
INFO:root:XX add new best (7, 3) is not 8 7 7
INFO:root:XX add new best (7, 3) is not 8 7 7
INFO:root:XX add new best (7, 3) is not 8 7 7
INFO:root:XX add new best (7, 3) is not 8 7 7
INFO:root:XX add new best (7, 3) is not 8 7 7
INFO:root:XX add new best (7, 3) is not 8 7 7
INFO:root:XX add new best (7, 3) is not 8 7 7
INFO:root:XX add new best (7, 3) is not 8 7 7
INFO:root:XX add new best (7, 3) is not 8 7 7
INFO:root:XX add new best (7, 3) is not 8 7 7
INFO:root:XX add new best (7, 3) is not 8 7 7
INFO:root:XX add new best (7, 3) is not 8 7 7
INFO:root:XX add new best (7, 3) is not 8 7 7
INFO:root:XX add new best (7, 3) is not 8 7 7
INFO:root:XX add new best (7, 3) is not 8 7 7
INFO:root:XX add new best (7, 3) is not 8 7 7
INFO:root:XX add new best (7, 3) is not 8 7 7
INFO:root:XX add new best (7, 3) is not 8 7 7
INFO:root:Trace: [(7, [(7, 3) is not 8])]
INFO:root:Trace Quality: [(7, 1)]
INFO:root:Trace Sorted: [(7, 1)]
INFO:root:Finished
INFO:root:Full Trace [(7, [(7, 3) is not 8])]
INFO:root:Trying {'prechopMUSes': True}
INFO:root:Starting Step 1
INFO:root:Current state [[[[5, 6, 8], [9], [7], [1], [2, 5, 8], [3], [2, 6, 8], [4], [2, 5, 8]], [[5, 6, 8], [3], [1, 2, 8], [2, 5, 8], [4], [2, 5, 9], [7], [1, 2, 6, 9], [2, 5, 8, 9]], [[4, 5, 8], [1, 2, 4], [1, 2, 8], [6], [7], [2, 5, 9], [2, 8, 9], [1, 2, 9], [3]], [[2], [7], [3], [9], [1], [4], [5], [8], [6]], [[9], [8], [6], [2, 3, 5], [2, 5], [7], [1], [2, 3], [4]], [[1], [5], [4], [2, 3], [6], [8], [2, 3, 9], [2, 3, 9], [7]], [[7], [2, 4], [2, 5, 8], [2, 4, 5, 8], [9], [1], [3, 6], [3, 6], [2, 8]], [[4, 8], [1, 2, 4], [9], [7], [3], [6], [2, 4, 8], [5], [1, 2]], [[3], [6], [1, 2, 5, 8], [2, 4, 5, 8], [2, 5, 8], [2, 5], [2, 4, 8, 9], [7], [1, 2, 8, 9]]]]
INFO:root:Doing checkSmall1
INFO:root:Getting tiny MUSes, distance 1, for 1 puzlits, 1 repeats
INFO:root:Chunked 1 in [1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
INFO:root:Doing checkSmall2
INFO:root:Getting tiny MUSes, distance 2, for 1 puzlits, 1 repeats
INFO:root:Chunked 1 in [1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
INFO:root:Considering 100 * 1 jobs for minsize=3
INFO:root:Chunked 100 in [9, 9, 9, 9, 8, 8, 8, 8, 8, 8, 8, 8]
INFO:root:Considering 100 * 1 jobs for minsize=4
INFO:root:Chunked 100 in [9, 9, 9, 9, 8, 8, 8, 8, 8, 8, 8, 8]
INFO:root:Considering 100 * 1 jobs for minsize=5
INFO:root:Chunked 100 in [9, 9, 9, 9, 8, 8, 8, 8, 8, 8, 8, 8]
INFO:root:Considering 100 * 1 jobs for minsize=6
INFO:root:Chunked 100 in [9, 9, 9, 9, 8, 8, 8, 8, 8, 8, 8, 8]
INFO:root:XX found first (7, 3) is not 8 7
INFO:root:XX add new best (7, 3) is not 8 7 7
INFO:root:XX add new best (7, 3) is not 8 7 7
INFO:root:XX add new best (7, 3) is not 8 7 7
INFO:root:XX add new best (7, 3) is not 8 7 7
INFO:root:XX add new best (7, 3) is not 8 7 7
INFO:root:XX add new best (7, 3) is not 8 7 7
INFO:root:XX add new best (7, 3) is not 8 7 7
INFO:root:XX add new best (7, 3) is not 8 7 7
INFO:root:XX add new best (7, 3) is not 8 7 7
INFO:root:XX add new best (7, 3) is not 8 7 7
INFO:root:XX add new best (7, 3) is not 8 7 7
INFO:root:XX add new best (7, 3) is not 8 7 7
INFO:root:XX add new best (7, 3) is not 8 7 7
INFO:root:XX add new best (7, 3) is not 8 7 7
INFO:root:Considering 100 * 1 jobs for minsize=7
INFO:root:Chunked 100 in [9, 9, 9, 9, 8, 8, 8, 8, 8, 8, 8, 8]
INFO:root:XX add new best (7, 3) is not 8 7 7
INFO:root:XX add new best (7, 3) is not 8 7 7
INFO:root:XX add new best (7, 3) is not 8 7 7
INFO:root:XX add new best (7, 3) is not 8 7 7
INFO:root:XX add new best (7, 3) is not 8 7 7
INFO:root:XX add new best (7, 3) is not 8 7 7
INFO:root:XX add new best (7, 3) is not 8 7 7
INFO:root:XX add new best (7, 3) is not 8 7 7
INFO:root:XX add new best (7, 3) is not 8 7 7
INFO:root:XX add new best (7, 3) is not 8 7 7
INFO:root:XX add new best (7, 3) is not 8 7 7
INFO:root:XX add new best (7, 3) is not 8 7 7
INFO:root:XX add new best (7, 3) is not 8 7 7
INFO:root:XX add new best (7, 3) is not 8 7 7
INFO:root:XX add new best (7, 3) is not 8 7 7
INFO:root:XX add new best (7, 3) is not 8 7 7
INFO:root:XX add new best (7, 3) is not 8 7 7
INFO:root:Trace: [(7, [(7, 3) is not 8])]
INFO:root:Trace Quality: [(7, 1)]
INFO:root:Trace Sorted: [(7, 1)]
INFO:root:Finished
INFO:root:Full Trace [(7, [(7, 3) is not 8])]
INFO:root:Trying {'quarterChopMUS': True}
INFO:root:Starting Step 1
INFO:root:Current state [[[[5, 6, 8], [9], [7], [1], [2, 5, 8], [3], [2, 6, 8], [4], [2, 5, 8]], [[5, 6, 8], [3], [1, 2, 8], [2, 5, 8], [4], [2, 5, 9], [7], [1, 2, 6, 9], [2, 5, 8, 9]], [[4, 5, 8], [1, 2, 4], [1, 2, 8], [6], [7], [2, 5, 9], [2, 8, 9], [1, 2, 9], [3]], [[2], [7], [3], [9], [1], [4], [5], [8], [6]], [[9], [8], [6], [2, 3, 5], [2, 5], [7], [1], [2, 3], [4]], [[1], [5], [4], [2, 3], [6], [8], [2, 3, 9], [2, 3, 9], [7]], [[7], [2, 4], [2, 5, 8], [2, 4, 5, 8], [9], [1], [3, 6], [3, 6], [2, 8]], [[4, 8], [1, 2, 4], [9], [7], [3], [6], [2, 4, 8], [5], [1, 2]], [[3], [6], [1, 2, 5, 8], [2, 4, 5, 8], [2, 5, 8], [2, 5], [2, 4, 8, 9], [7], [1, 2, 8, 9]]]]
INFO:root:Doing checkSmall1
INFO:root:Getting tiny MUSes, distance 1, for 1 puzlits, 1 repeats
INFO:root:Chunked 1 in [1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
INFO:root:Doing checkSmall2
INFO:root:Getting tiny MUSes, distance 2, for 1 puzlits, 1 repeats
INFO:root:Chunked 1 in [1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
INFO:root:Considering 100 * 1 jobs for minsize=3
INFO:root:Chunked 100 in [9, 9, 9, 9, 8, 8, 8, 8, 8, 8, 8, 8]
INFO:root:Considering 100 * 1 jobs for minsize=4
INFO:root:Chunked 100 in [9, 9, 9, 9, 8, 8, 8, 8, 8, 8, 8, 8]
INFO:root:Considering 100 * 1 jobs for minsize=5
INFO:root:Chunked 100 in [9, 9, 9, 9, 8, 8, 8, 8, 8, 8, 8, 8]
INFO:root:Considering 100 * 1 jobs for minsize=6
INFO:root:Chunked 100 in [9, 9, 9, 9, 8, 8, 8, 8, 8, 8, 8, 8]
INFO:root:XX found first (7, 3) is not 8 7
INFO:root:XX add new best (7, 3) is not 8 7 7
INFO:root:XX add new best (7, 3) is not 8 7 7
INFO:root:XX add new best (7, 3) is not 8 7 7
INFO:root:XX add new best (7, 3) is not 8 7 7
INFO:root:XX add new best (7, 3) is not 8 7 7
INFO:root:XX add new best (7, 3) is not 8 7 7
INFO:root:XX add new best (7, 3) is not 8 7 7
INFO:root:XX add new best (7, 3) is not 8 7 7
INFO:root:XX add new best (7, 3) is not 8 7 7
INFO:root:XX add new best (7, 3) is not 8 7 7
INFO:root:XX add new best (7, 3) is not 8 7 7
INFO:root:XX add new best (7, 3) is not 8 7 7
INFO:root:XX add new best (7, 3) is not 8 7 7
INFO:root:XX add new best (7, 3) is not 8 7 7
INFO:root:XX add new best (7, 3) is not 8 7 7
INFO:root:XX add new best (7, 3) is not 8 7 7
INFO:root:XX add new best (7, 3) is not 8 7 7
INFO:root:XX add new best (7, 3) is not 8 7 7
INFO:root:XX add new best (7, 3) is not 8 7 7
INFO:root:XX add new best (7, 3) is not 8 7 7
INFO:root:XX add new best (7, 3) is not 8 7 7
INFO:root:XX add new best (7, 3) is not 8 7 7
INFO:root:XX add new best (7, 3) is not 8 7 7
INFO:root:XX add new best (7, 3) is not 8 7 7
INFO:root:XX add new best (7, 3) is not 8 7 7
INFO:root:Considering 100 * 1 jobs for minsize=7
INFO:root:Chunked 100 in [9, 9, 9, 9, 8, 8, 8, 8, 8, 8, 8, 8]
INFO:root:XX add new best (7, 3) is not 8 7 7
INFO:root:XX add new best (7, 3) is not 8 7 7
INFO:root:XX add new best (7, 3) is not 8 7 7
INFO:root:XX add new best (7, 3) is not 8 7 7
INFO:root:XX add new best (7, 3) is not 8 7 7
INFO:root:XX add new best (7, 3) is not 8 7 7
INFO:root:XX add new best (7, 3) is not 8 7 7
INFO:root:XX add new best (7, 3) is not 8 7 7
INFO:root:XX add new best (7, 3) is not 8 7 7
INFO:root:XX add new best (7, 3) is not 8 7 7
INFO:root:XX add new best (7, 3) is not 8 7 7
INFO:root:XX add new best (7, 3) is not 8 7 7
INFO:root:XX add new best (7, 3) is not 8 7 7
INFO:root:XX add new best (7, 3) is not 8 7 7
INFO:root:XX add new best (7, 3) is not 8 7 7
INFO:root:XX add new best (7, 3) is not 8 7 7
INFO:root:XX add new best (7, 3) is not 8 7 7
INFO:root:XX add new best (7, 3) is not 8 7 7
INFO:root:XX add new best (7, 3) is not 8 7 7
INFO:root:XX add new best (7, 3) is not 8 7 7
INFO:root:XX add new best (7, 3) is not 8 7 7
INFO:root:XX add new best (7, 3) is not 8 7 7
INFO:root:XX add new best (7, 3) is not 8 7 7
INFO:root:XX add new best (7, 3) is not 8 7 7
INFO:root:XX add new best (7, 3) is not 8 7 7
INFO:root:XX add new best (7, 3) is not 8 7 7
INFO:root:XX add new best (7, 3) is not 8 7 7
INFO:root:XX add new best (7, 3) is not 8 7 7
INFO:root:XX add new best (7, 3) is not 8 7 7
INFO:root:XX add new best (7, 3) is not 8 7 7
INFO:root:XX add new best (7, 3) is not 8 7 7
INFO:root:XX add new best (7, 3) is not 8 7 7
INFO:root:Trace: [(7, [(7, 3) is not 8])]
INFO:root:Trace Quality: [(7, 1)]
INFO:root:Trace Sorted: [(7, 1)]
INFO:root:Finished
INFO:root:Full Trace [(7, [(7, 3) is not 8])]
INFO:root:Trying {'minPrecheckMUS': True}
INFO:root:Starting Step 1
INFO:root:Current state [[[[5, 6, 8], [9], [7], [1], [2, 5, 8], [3], [2, 6, 8], [4], [2, 5, 8]], [[5, 6, 8], [3], [1, 2, 8], [2, 5, 8], [4], [2, 5, 9], [7], [1, 2, 6, 9], [2, 5, 8, 9]], [[4, 5, 8], [1, 2, 4], [1, 2, 8], [6], [7], [2, 5, 9], [2, 8, 9], [1, 2, 9], [3]], [[2], [7], [3], [9], [1], [4], [5], [8], [6]], [[9], [8], [6], [2, 3, 5], [2, 5], [7], [1], [2, 3], [4]], [[1], [5], [4], [2, 3], [6], [8], [2, 3, 9], [2, 3, 9], [7]], [[7], [2, 4], [2, 5, 8], [2, 4, 5, 8], [9], [1], [3, 6], [3, 6], [2, 8]], [[4, 8], [1, 2, 4], [9], [7], [3], [6], [2, 4, 8], [5], [1, 2]], [[3], [6], [1, 2, 5, 8], [2, 4, 5, 8], [2, 5, 8], [2, 5], [2, 4, 8, 9], [7], [1, 2, 8, 9]]]]
INFO:root:Doing checkSmall1
INFO:root:Getting tiny MUSes, distance 1, for 1 puzlits, 1 repeats
INFO:root:Chunked 1 in [1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
INFO:root:Doing checkSmall2
INFO:root:Getting tiny MUSes, distance 2, for 1 puzlits, 1 repeats
INFO:root:Chunked 1 in [1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
INFO:root:Considering 100 * 1 jobs for minsize=3
INFO:root:Chunked 100 in [9, 9, 9, 9, 8, 8, 8, 8, 8, 8, 8, 8]
INFO:root:Considering 100 * 1 jobs for minsize=4
INFO:root:Chunked 100 in [9, 9, 9, 9, 8, 8, 8, 8, 8, 8, 8, 8]
INFO:root:Considering 100 * 1 jobs for minsize=5
INFO:root:Chunked 100 in [9, 9, 9, 9, 8, 8, 8, 8, 8, 8, 8, 8]
INFO:root:Considering 100 * 1 jobs for minsize=6
INFO:root:Chunked 100 in [9, 9, 9, 9, 8, 8, 8, 8, 8, 8, 8, 8]
INFO:root:XX found first (7, 3) is not 8 7
INFO:root:XX add new best (7, 3) is not 8 7 7
INFO:root:XX add new best (7, 3) is not 8 7 7
INFO:root:XX add new best (7, 3) is not 8 7 7
INFO:root:XX add new best (7, 3) is not 8 7 7
INFO:root:XX add new best (7, 3) is not 8 7 7
INFO:root:XX add new best (7, 3) is not 8 7 7
INFO:root:XX add new best (7, 3) is not 8 7 7
INFO:root:XX add new best (7, 3) is not 8 7 7
INFO:root:Considering 100 * 1 jobs for minsize=7
INFO:root:Chunked 100 in [9, 9, 9, 9, 8, 8, 8, 8, 8, 8, 8, 8]
INFO:root:XX add new best (7, 3) is not 8 7 7
INFO:root:XX add new best (7, 3) is not 8 7 7
INFO:root:XX add new best (7, 3) is not 8 7 7
INFO:root:XX add new best (7, 3) is not 8 7 7
INFO:root:XX add new best (7, 3) is not 8 7 7
INFO:root:XX add new best (7, 3) is not 8 7 7
INFO:root:XX add new best (7, 3) is not 8 7 7
INFO:root:Trace: [(7, [(7, 3) is not 8])]
INFO:root:Trace Quality: [(7, 1)]
INFO:root:Trace Sorted: [(7, 1)]
INFO:root:Finished
INFO:root:Full Trace [(7, [(7, 3) is not 8])]
INFO:root:Trying {'gallopingMUSes': True}
INFO:root:Starting Step 1
INFO:root:Current state [[[[5, 6, 8], [9], [7], [1], [2, 5, 8], [3], [2, 6, 8], [4], [2, 5, 8]], [[5, 6, 8], [3], [1, 2, 8], [2, 5, 8], [4], [2, 5, 9], [7], [1, 2, 6, 9], [2, 5, 8, 9]], [[4, 5, 8], [1, 2, 4], [1, 2, 8], [6], [7], [2, 5, 9], [2, 8, 9], [1, 2, 9], [3]], [[2], [7], [3], [9], [1], [4], [5], [8], [6]], [[9], [8], [6], [2, 3, 5], [2, 5], [7], [1], [2, 3], [4]], [[1], [5], [4], [2, 3], [6], [8], [2, 3, 9], [2, 3, 9], [7]], [[7], [2, 4], [2, 5, 8], [2, 4, 5, 8], [9], [1], [3, 6], [3, 6], [2, 8]], [[4, 8], [1, 2, 4], [9], [7], [3], [6], [2, 4, 8], [5], [1, 2]], [[3], [6], [1, 2, 5, 8], [2, 4, 5, 8], [2, 5, 8], [2, 5], [2, 4, 8, 9], [7], [1, 2, 8, 9]]]]
INFO:root:Doing checkSmall1
INFO:root:Getting tiny MUSes, distance 1, for 1 puzlits, 1 repeats
INFO:root:Chunked 1 in [1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
INFO:root:Doing checkSmall2
INFO:root:Getting tiny MUSes, distance 2, for 1 puzlits, 1 repeats
INFO:root:Chunked 1 in [1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
INFO:root:Considering 100 * 1 jobs for minsize=3
INFO:root:Chunked 100 in [9, 9, 9, 9, 8, 8, 8, 8, 8, 8, 8, 8]
INFO:root:Considering 100 * 1 jobs for minsize=4
INFO:root:Chunked 100 in [9, 9, 9, 9, 8, 8, 8, 8, 8, 8, 8, 8]
INFO:root:Considering 100 * 1 jobs for minsize=5
INFO:root:Chunked 100 in [9, 9, 9, 9, 8, 8, 8, 8, 8, 8, 8, 8]
INFO:root:Considering 100 * 1 jobs for minsize=6
INFO:root:Chunked 100 in [9, 9, 9, 9, 8, 8, 8, 8, 8, 8, 8, 8]
INFO:root:XX found first (7, 3) is not 8 7
INFO:root:XX add new best (7, 3) is not 8 7 7
INFO:root:XX add new best (7, 3) is not 8 7 7
INFO:root:XX add new best (7, 3) is not 8 7 7
INFO:root:XX add new best (7, 3) is not 8 7 7
INFO:root:XX add new best (7, 3) is not 8 7 7
INFO:root:XX add new best (7, 3) is not 8 7 7
INFO:root:XX add new best (7, 3) is not 8 7 7
INFO:root:Considering 100 * 1 jobs for minsize=7
INFO:root:Chunked 100 in [9, 9, 9, 9, 8, 8, 8, 8, 8, 8, 8, 8]
INFO:root:XX add new best (7, 3) is not 8 7 7
INFO:root:XX add new best (7, 3) is not 8 7 7
INFO:root:XX add new best (7, 3) is not 8 7 7
INFO:root:XX add new best (7, 3) is not 8 7 7
INFO:root:XX add new best (7, 3) is not 8 7 7
INFO:root:XX add new best (7, 3) is not 8 7 7
INFO:root:XX add new best (7, 3) is not 8 7 7
INFO:root:Trace: [(7, [(7, 3) is not 8])]
INFO:root:Trace Quality: [(7, 1)]
INFO:root:Trace Sorted: [(7, 1)]
INFO:root:Finished
INFO:root:Full Trace [(7, [(7, 3) is not 8])]
INFO:root:Trying {'minPrecheckStepsMUS': True}
INFO:root:Starting Step 1
INFO:root:Current state [[[[5, 6, 8], [9], [7], [1], [2, 5, 8], [3], [2, 6, 8], [4], [2, 5, 8]], [[5, 6, 8], [3], [1, 2, 8], [2, 5, 8], [4], [2, 5, 9], [7], [1, 2, 6, 9], [2, 5, 8, 9]], [[4, 5, 8], [1, 2, 4], [1, 2, 8], [6], [7], [2, 5, 9], [2, 8, 9], [1, 2, 9], [3]], [[2], [7], [3], [9], [1], [4], [5], [8], [6]], [[9], [8], [6], [2, 3, 5], [2, 5], [7], [1], [2, 3], [4]], [[1], [5], [4], [2, 3], [6], [8], [2, 3, 9], [2, 3, 9], [7]], [[7], [2, 4], [2, 5, 8], [2, 4, 5, 8], [9], [1], [3, 6], [3, 6], [2, 8]], [[4, 8], [1, 2, 4], [9], [7], [3], [6], [2, 4, 8], [5], [1, 2]], [[3], [6], [1, 2, 5, 8], [2, 4, 5, 8], [2, 5, 8], [2, 5], [2, 4, 8, 9], [7], [1, 2, 8, 9]]]]
INFO:root:Doing checkSmall1
INFO:root:Getting tiny MUSes, distance 1, for 1 puzlits, 1 repeats
INFO:root:Chunked 1 in [1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
INFO:root:Doing checkSmall2
INFO:root:Getting tiny MUSes, distance 2, for 1 puzlits, 1 repeats
INFO:root:Chunked 1 in [1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
INFO:root:Considering 100 * 1 jobs for minsize=3
INFO:root:Chunked 100 in [9, 9, 9, 9, 8, 8, 8, 8, 8, 8, 8, 8]
INFO:root:Considering 100 * 1 jobs for minsize=4
INFO:root:Chunked 100 in [9, 9, 9, 9, 8, 8, 8, 8, 8, 8, 8, 8]
INFO:root:Considering 100 * 1 jobs for minsize=5
INFO:root:Chunked 100 in [9, 9, 9, 9, 8, 8, 8, 8, 8, 8, 8, 8]
INFO:root:Considering 100 * 1 jobs for minsize=6
INFO:root:Chunked 100 in [9, 9, 9, 9, 8, 8, 8, 8, 8, 8, 8, 8]
INFO:root:XX found first (7, 3) is not 8 7
INFO:root:XX add new best (7, 3) is not 8 7 7
INFO:root:XX add new best (7, 3) is not 8 7 7
INFO:root:XX add new best (7, 3) is not 8 7 7
INFO:root:XX add new best (7, 3) is not 8 7 7
INFO:root:XX add new best (7, 3) is not 8 7 7
INFO:root:XX add new best (7, 3) is not 8 7 7
INFO:root:XX add new best (7, 3) is not 8 7 7
INFO:root:XX add new best (7, 3) is not 8 7 7
INFO:root:Considering 100 * 1 jobs for minsize=7
INFO:root:Chunked 100 in [9, 9, 9, 9, 8, 8, 8, 8, 8, 8, 8, 8]
INFO:root:XX add new best (7, 3) is not 8 7 7
INFO:root:XX add new best (7, 3) is not 8 7 7
INFO:root:XX add new best (7, 3) is not 8 7 7
INFO:root:XX add new best (7, 3) is not 8 7 7
INFO:root:XX add new best (7, 3) is not 8 7 7
INFO:root:XX add new best (7, 3) is not 8 7 7
INFO:root:XX add new best (7, 3) is not 8 7 7
INFO:root:Trace: [(7, [(7, 3) is not 8])]
INFO:root:Trace Quality: [(7, 1)]
INFO:root:Trace Sorted: [(7, 1)]
INFO:root:Finished
INFO:root:Full Trace [(7, [(7, 3) is not 8])]
INFO:root:Trying {'gallopingMUSes': True, 'minPrecheckMUS': True}
INFO:root:Starting Step 1
INFO:root:Current state [[[[5, 6, 8], [9], [7], [1], [2, 5, 8], [3], [2, 6, 8], [4], [2, 5, 8]], [[5, 6, 8], [3], [1, 2, 8], [2, 5, 8], [4], [2, 5, 9], [7], [1, 2, 6, 9], [2, 5, 8, 9]], [[4, 5, 8], [1, 2, 4], [1, 2, 8], [6], [7], [2, 5, 9], [2, 8, 9], [1, 2, 9], [3]], [[2], [7], [3], [9], [1], [4], [5], [8], [6]], [[9], [8], [6], [2, 3, 5], [2, 5], [7], [1], [2, 3], [4]], [[1], [5], [4], [2, 3], [6], [8], [2, 3, 9], [2, 3, 9], [7]], [[7], [2, 4], [2, 5, 8], [2, 4, 5, 8], [9], [1], [3, 6], [3, 6], [2, 8]], [[4, 8], [1, 2, 4], [9], [7], [3], [6], [2, 4, 8], [5], [1, 2]], [[3], [6], [1, 2, 5, 8], [2, 4, 5, 8], [2, 5, 8], [2, 5], [2, 4, 8, 9], [7], [1, 2, 8, 9]]]]
INFO:root:Doing checkSmall1
INFO:root:Getting tiny MUSes, distance 1, for 1 puzlits, 1 repeats
INFO:root:Chunked 1 in [1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
INFO:root:Doing checkSmall2
INFO:root:Getting tiny MUSes, distance 2, for 1 puzlits, 1 repeats
INFO:root:Chunked 1 in [1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
INFO:root:Considering 100 * 1 jobs for minsize=3
INFO:root:Chunked 100 in [9, 9, 9, 9, 8, 8, 8, 8, 8, 8, 8, 8]
INFO:root:Considering 100 * 1 jobs for minsize=4
INFO:root:Chunked 100 in [9, 9, 9, 9, 8, 8, 8, 8, 8, 8, 8, 8]
INFO:root:Considering 100 * 1 jobs for minsize=5
INFO:root:Chunked 100 in [9, 9, 9, 9, 8, 8, 8, 8, 8, 8, 8, 8]
INFO:root:Considering 100 * 1 jobs for minsize=6
INFO:root:Chunked 100 in [9, 9, 9, 9, 8, 8, 8, 8, 8, 8, 8, 8]
INFO:root:XX found first (7, 3) is not 8 7
INFO:root:XX add new best (7, 3) is not 8 7 7
INFO:root:XX add new best (7, 3) is not 8 7 7
INFO:root:XX add new best (7, 3) is not 8 7 7
INFO:root:XX add new best (7, 3) is not 8 7 7
INFO:root:XX add new best (7, 3) is not 8 7 7
INFO:root:XX add new best (7, 3) is not 8 7 7
INFO:root:XX add new best (7, 3) is not 8 7 7
INFO:root:XX add new best (7, 3) is not 8 7 7
INFO:root:Considering 100 * 1 jobs for minsize=7
INFO:root:Chunked 100 in [9, 9, 9, 9, 8, 8, 8, 8, 8, 8, 8, 8]
INFO:root:XX add new best (7, 3) is not 8 7 7
INFO:root:XX add new best (7, 3) is not 8 7 7
INFO:root:XX add new best (7, 3) is not 8 7 7
INFO:root:XX add new best (7, 3) is not 8 7 7
INFO:root:XX add new best (7, 3) is not 8 7 7
INFO:root:XX add new best (7, 3) is not 8 7 7
INFO:root:XX add new best (7, 3) is not 8 7 7
INFO:root:Trace: [(7, [(7, 3) is not 8])]
INFO:root:Trace Quality: [(7, 1)]
INFO:root:Trace Sorted: [(7, 1)]
INFO:root:Finished
INFO:root:Full Trace [(7, [(7, 3) is not 8])]
INFO:root:Trying {}
INFO:root:Starting Step 1
INFO:root:Current state [[[[1, 7], [1, 4, 5, 8], [4, 5, 7], [1, 4], [2], [3], [6, 9], [6, 9], [7, 8]], [[6], [2], [3, 7], [5], [9], [8], [1, 3, 7], [1, 3, 7], [4]], [[1, 3, 4, 9], [1, 3, 8], [3, 4, 9], [7], [1, 4], [6], [5], [2], [3, 8]], [[5], [9], [8], [1, 3], [6], [2], [1, 3, 7], [4], [1, 3, 7]], [[2], [3, 4], [1], [3, 4, 9], [7], [5], [8], [3, 9], [6]], [[3, 4], [7], [6], [8], [1, 4], [1, 9], [1, 3, 9], [5], [2]], [[1, 3, 4, 9], [6], [2], [1, 9], [5, 8], [7], [1, 3, 4], [1, 3, 8], [1, 3, 5]], [[8], [1, 5], [5, 7], [6], [3], [4], [2], [1, 7], [9]], [[1, 3, 4, 7, 9], [1, 3, 4], [3, 4, 7, 9], [2], [5, 8], [1, 9], [1, 3, 4, 6, 7], [1, 3, 6, 7, 8], [1, 3, 5, 7]]]]
INFO:root:Doing checkSmall1
INFO:root:Getting tiny MUSes, distance 1, for 1 puzlits, 1 repeats
INFO:root:Chunked 1 in [1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
INFO:root:Doing checkSmall2
INFO:root:Getting tiny MUSes, distance 2, for 1 puzlits, 1 repeats
INFO:root:Chunked 1 in [1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
INFO:root:Considering 100 * 1 jobs for minsize=3
INFO:root:Chunked 100 in [9, 9, 9, 9, 8, 8, 8, 8, 8, 8, 8, 8]
INFO:root:Considering 100 * 1 jobs for minsize=4
INFO:root:Chunked 100 in [9, 9, 9, 9, 8, 8, 8, 8, 8, 8, 8, 8]
INFO:root:Considering 100 * 1 jobs for minsize=5
INFO:root:Chunked 100 in [9, 9, 9, 9, 8, 8, 8, 8, 8, 8, 8, 8]
INFO:root:Considering 100 * 1 jobs for minsize=6
INFO:root:Chunked 100 in [9, 9, 9, 9, 8, 8, 8, 8, 8, 8, 8, 8]
INFO:root:Considering 100 * 1 jobs for minsize=7
INFO:root:Chunked 100 in [9, 9, 9, 9, 8, 8, 8, 8, 8, 8, 8, 8]
INFO:root:Considering 100 * 1 jobs for minsize=8
INFO:root:Chunked 100 in [9, 9, 9, 9, 8, 8, 8, 8, 8, 8, 8, 8]
INFO:root:Considering 100 * 1 jobs for minsize=9
INFO:root:Chunked 100 in [9, 9, 9, 9, 8, 8, 8, 8, 8, 8, 8, 8]
INFO:root:Considering 100 * 1 jobs for minsize=10
INFO:root:Chunked 100 in [9, 9, 9, 9, 8, 8, 8, 8, 8, 8, 8, 8]
INFO:root:Considering 100 * 1 jobs for minsize=11
INFO:root:Chunked 100 in [9, 9, 9, 9, 8, 8, 8, 8, 8, 8, 8, 8]
INFO:root:Considering 100 * 1 jobs for minsize=12
INFO:root:Chunked 100 in [9, 9, 9, 9, 8, 8, 8, 8, 8, 8, 8, 8]
INFO:root:Considering 100 * 1 jobs for minsize=13
INFO:root:Chunked 100 in [9, 9, 9, 9, 8, 8, 8, 8, 8, 8, 8, 8]
INFO:root:Considering 100 * 1 jobs for minsize=14
INFO:root:Chunked 100 in [9, 9, 9, 9, 8, 8, 8, 8, 8, 8, 8, 8]
INFO:root:Considering 100 * 1 jobs for minsize=15
INFO:root:Chunked 100 in [9, 9, 9, 9, 8, 8, 8, 8, 8, 8, 8, 8]
INFO:root:Considering 100 * 1 jobs for minsize=16
INFO:root:Chunked 100 in [9, 9, 9, 9, 8, 8, 8, 8, 8, 8, 8, 8]
INFO:root:Considering 100 * 1 jobs for minsize=17
INFO:root:Chunked 100 in [9, 9, 9, 9, 8, 8, 8, 8, 8, 8, 8, 8]
INFO:root:XX found first (3, 3) is not 3 18
INFO:root:XX add new best (3, 3) is not 3 18 18
INFO:root:XX add new best (3, 3) is not 3 18 18
INFO:root:Considering 100 * 1 jobs for minsize=18
INFO:root:Chunked 100 in [9, 9, 9, 9, 8, 8, 8, 8, 8, 8, 8, 8]
INFO:root:XX add new best (3, 3) is not 3 18 18
INFO:root:Trace: [(18, [(3, 3) is not 3])]
INFO:root:Trace Quality: [(18, 1)]
INFO:root:Trace Sorted: [(18, 1)]
INFO:root:Finished
INFO:root:Full Trace [(18, [(3, 3) is not 3])]
INFO:root:Trying {'prechopMUSes': True}
INFO:root:Starting Step 1
INFO:root:Current state [[[[1, 7], [1, 4, 5, 8], [4, 5, 7], [1, 4], [2], [3], [6, 9], [6, 9], [7, 8]], [[6], [2], [3, 7], [5], [9], [8], [1, 3, 7], [1, 3, 7], [4]], [[1, 3, 4, 9], [1, 3, 8], [3, 4, 9], [7], [1, 4], [6], [5], [2], [3, 8]], [[5], [9], [8], [1, 3], [6], [2], [1, 3, 7], [4], [1, 3, 7]], [[2], [3, 4], [1], [3, 4, 9], [7], [5], [8], [3, 9], [6]], [[3, 4], [7], [6], [8], [1, 4], [1, 9], [1, 3, 9], [5], [2]], [[1, 3, 4, 9], [6], [2], [1, 9], [5, 8], [7], [1, 3, 4], [1, 3, 8], [1, 3, 5]], [[8], [1, 5], [5, 7], [6], [3], [4], [2], [1, 7], [9]], [[1, 3, 4, 7, 9], [1, 3, 4], [3, 4, 7, 9], [2], [5, 8], [1, 9], [1, 3, 4, 6, 7], [1, 3, 6, 7, 8], [1, 3, 5, 7]]]]
INFO:root:Doing checkSmall1
INFO:root:Getting tiny MUSes, distance 1, for 1 puzlits, 1 repeats
INFO:root:Chunked 1 in [1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
INFO:root:Doing checkSmall2
INFO:root:Getting tiny MUSes, distance 2, for 1 puzlits, 1 repeats
INFO:root:Chunked 1 in [1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
INFO:root:Considering 100 * 1 jobs for minsize=3
INFO:root:Chunked 100 in [9, 9, 9, 9, 8, 8, 8, 8, 8, 8, 8, 8]
INFO:root:Considering 100 * 1 jobs for minsize=4
INFO:root:Chunked 100 in [9, 9, 9, 9, 8, 8, 8, 8, 8, 8, 8, 8]
INFO:root:Considering 100 * 1 jobs for minsize=5
INFO:root:Chunked 100 in [9, 9, 9, 9, 8, 8, 8, 8, 8, 8, 8, 8]
INFO:root:Considering 100 * 1 jobs for minsize=6
INFO:root:Chunked 100 in [9, 9, 9, 9, 8, 8, 8, 8, 8, 8, 8, 8]
INFO:root:Considering 100 * 1 jobs for minsize=7
INFO:root:Chunked 100 in [9, 9, 9, 9, 8, 8, 8, 8, 8, 8, 8, 8]
INFO:root:Considering 100 * 1 jobs for minsize=8
INFO:root:Chunked 100 in [9, 9, 9, 9, 8, 8, 8, 8, 8, 8, 8, 8]
INFO:root:Considering 100 * 1 jobs for minsize=9
INFO:root:Chunked 100 in [9, 9, 9, 9, 8, 8, 8, 8, 8, 8, 8, 8]
INFO:root:Considering 100 * 1 jobs for minsize=10
INFO:root:Chunked 100 in [9, 9, 9, 9, 8, 8, 8, 8, 8, 8, 8, 8]
INFO:root:XX found first (3, 3) is not 3 11
INFO:root:XX add new best (3, 3) is not 3 11 11
INFO:root:XX add new best (3, 3) is not 3 11 11
INFO:root:XX found new best (3, 3) is not 3 11 10
INFO:root:Trace: [(10, [(3, 3) is not 3])]
INFO:root:Trace Quality: [(10, 1)]
INFO:root:Trace Sorted: [(10, 1)]
INFO:root:Finished
INFO:root:Full Trace [(10, [(3, 3) is not 3])]
INFO:root:Trying {'quarterChopMUS': True}
INFO:root:Starting Step 1
INFO:root:Current state [[[[1, 7], [1, 4, 5, 8], [4, 5, 7], [1, 4], [2], [3], [6, 9], [6, 9], [7, 8]], [[6], [2], [3, 7], [5], [9], [8], [1, 3, 7], [1, 3, 7], [4]], [[1, 3, 4, 9], [1, 3, 8], [3, 4, 9], [7], [1, 4], [6], [5], [2], [3, 8]], [[5], [9], [8], [1, 3], [6], [2], [1, 3, 7], [4], [1, 3, 7]], [[2], [3, 4], [1], [3, 4, 9], [7], [5], [8], [3, 9], [6]], [[3, 4], [7], [6], [8], [1, 4], [1, 9], [1, 3, 9], [5], [2]], [[1, 3, 4, 9], [6], [2], [1, 9], [5, 8], [7], [1, 3, 4], [1, 3, 8], [1, 3, 5]], [[8], [1, 5], [5, 7], [6], [3], [4], [2], [1, 7], [9]], [[1, 3, 4, 7, 9], [1, 3, 4], [3, 4, 7, 9], [2], [5, 8], [1, 9], [1, 3, 4, 6, 7], [1, 3, 6, 7, 8], [1, 3, 5, 7]]]]
INFO:root:Doing checkSmall1
INFO:root:Getting tiny MUSes, distance 1, for 1 puzlits, 1 repeats
INFO:root:Chunked 1 in [1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
INFO:root:Doing checkSmall2
INFO:root:Getting tiny MUSes, distance 2, for 1 puzlits, 1 repeats
INFO:root:Chunked 1 in [1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
INFO:root:Considering 100 * 1 jobs for minsize=3
INFO:root:Chunked 100 in [9, 9, 9, 9, 8, 8, 8, 8, 8, 8, 8, 8]
INFO:root:Considering 100 * 1 jobs for minsize=4
INFO:root:Chunked 100 in [9, 9, 9, 9, 8, 8, 8, 8, 8, 8, 8, 8]
INFO:root:Considering 100 * 1 jobs for minsize=5
INFO:root:Chunked 100 in [9, 9, 9, 9, 8, 8, 8, 8, 8, 8, 8, 8]
INFO:root:Considering 100 * 1 jobs for minsize=6
INFO:root:Chunked 100 in [9, 9, 9, 9, 8, 8, 8, 8, 8, 8, 8, 8]
INFO:root:Considering 100 * 1 jobs for minsize=7
INFO:root:Chunked 100 in [9, 9, 9, 9, 8, 8, 8, 8, 8, 8, 8, 8]
INFO:root:Considering 100 * 1 jobs for minsize=8
INFO:root:Chunked 100 in [9, 9, 9, 9, 8, 8, 8, 8, 8, 8, 8, 8]
INFO:root:Considering 100 * 1 jobs for minsize=9
INFO:root:Chunked 100 in [9, 9, 9, 9, 8, 8, 8, 8, 8, 8, 8, 8]
INFO:root:XX found first (3, 3) is not 3 10
INFO:root:Considering 100 * 1 jobs for minsize=10
INFO:root:Chunked 100 in [9, 9, 9, 9, 8, 8, 8, 8, 8, 8, 8, 8]
INFO:root:Trace: [(10, [(3, 3) is not 3])]
INFO:root:Trace Quality: [(10, 1)]
INFO:root:Trace Sorted: [(10, 1)]
INFO:root:Finished
INFO:root:Full Trace [(10, [(3, 3) is not 3])]
INFO:root:Trying {'minPrecheckMUS': True}
INFO:root:Starting Step 1
INFO:root:Current state [[[[1, 7], [1, 4, 5, 8], [4, 5, 7], [1, 4], [2], [3], [6, 9], [6, 9], [7, 8]], [[6], [2], [3, 7], [5], [9], [8], [1, 3, 7], [1, 3, 7], [4]], [[1, 3, 4, 9], [1, 3, 8], [3, 4, 9], [7], [1, 4], [6], [5], [2], [3, 8]], [[5], [9], [8], [1, 3], [6], [2], [1, 3, 7], [4], [1, 3, 7]], [[2], [3, 4], [1], [3, 4, 9], [7], [5], [8], [3, 9], [6]], [[3, 4], [7], [6], [8], [1, 4], [1, 9], [1, 3, 9], [5], [2]], [[1, 3, 4, 9], [6], [2], [1, 9], [5, 8], [7], [1, 3, 4], [1, 3, 8], [1, 3, 5]], [[8], [1, 5], [5, 7], [6], [3], [4], [2], [1, 7], [9]], [[1, 3, 4, 7, 9], [1, 3, 4], [3, 4, 7, 9], [2], [5, 8], [1, 9], [1, 3, 4, 6, 7], [1, 3, 6, 7, 8], [1, 3, 5, 7]]]]
INFO:root:Doing checkSmall1
INFO:root:Getting tiny MUSes, distance 1, for 1 puzlits, 1 repeats
INFO:root:Chunked 1 in [1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
INFO:root:Doing checkSmall2
INFO:root:Getting tiny MUSes, distance 2, for 1 puzlits, 1 repeats
INFO:root:Chunked 1 in [1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
INFO:root:Considering 100 * 1 jobs for minsize=3
INFO:root:Chunked 100 in [9, 9, 9, 9, 8, 8, 8, 8, 8, 8, 8, 8]
INFO:root:Considering 100 * 1 jobs for minsize=4
INFO:root:Chunked 100 in [9, 9, 9, 9, 8, 8, 8, 8, 8, 8, 8, 8]
INFO:root:Considering 100 * 1 jobs for minsize=5
INFO:root:Chunked 100 in [9, 9, 9, 9, 8, 8, 8, 8, 8, 8, 8, 8]
INFO:root:Considering 100 * 1 jobs for minsize=6
INFO:root:Chunked 100 in [9, 9, 9, 9, 8, 8, 8, 8, 8, 8, 8, 8]
INFO:root:Considering 100 * 1 jobs for minsize=7
INFO:root:Chunked 100 in [9, 9, 9, 9, 8, 8, 8, 8, 8, 8, 8, 8]
INFO:root:Considering 100 * 1 jobs for minsize=8
INFO:root:Chunked 100 in [9, 9, 9, 9, 8, 8, 8, 8, 8, 8, 8, 8]
INFO:root:Considering 100 * 1 jobs for minsize=9
INFO:root:Chunked 100 in [9, 9, 9, 9, 8, 8, 8, 8, 8, 8, 8, 8]
INFO:root:XX found first (3, 3) is not 3 10
INFO:root:XX add new best (3, 3) is not 3 10 10
INFO:root:XX add new best (3, 3) is not 3 10 10
INFO:root:Considering 100 * 1 jobs for minsize=10
INFO:root:Chunked 100 in [9, 9, 9, 9, 8, 8, 8, 8, 8, 8, 8, 8]
INFO:root:XX add new best (3, 3) is not 3 10 10
INFO:root:Trace: [(10, [(3, 3) is not 3])]
INFO:root:Trace Quality: [(10, 1)]
INFO:root:Trace Sorted: [(10, 1)]
INFO:root:Finished
INFO:root:Full Trace [(10, [(3, 3) is not 3])]
INFO:root:Trying {'gallopingMUSes': True}
INFO:root:Starting Step 1
INFO:root:Current state [[[[1, 7], [1, 4, 5, 8], [4, 5, 7], [1, 4], [2], [3], [6, 9], [6, 9], [7, 8]], [[6], [2], [3, 7], [5], [9], [8], [1, 3, 7], [1, 3, 7], [4]], [[1, 3, 4, 9], [1, 3, 8], [3, 4, 9], [7], [1, 4], [6], [5], [2], [3, 8]], [[5], [9], [8], [1, 3], [6], [2], [1, 3, 7], [4], [1, 3, 7]], [[2], [3, 4], [1], [3, 4, 9], [7], [5], [8], [3, 9], [6]], [[3, 4], [7], [6], [8], [1, 4], [1, 9], [1, 3, 9], [5], [2]], [[1, 3, 4, 9], [6], [2], [1, 9], [5, 8], [7], [1, 3, 4], [1, 3, 8], [1, 3, 5]], [[8], [1, 5], [5, 7], [6], [3], [4], [2], [1, 7], [9]], [[1, 3, 4, 7, 9], [1, 3, 4], [3, 4, 7, 9], [2], [5, 8], [1, 9], [1, 3, 4, 6, 7], [1, 3, 6, 7, 8], [1, 3, 5, 7]]]]
INFO:root:Doing checkSmall1
INFO:root:Getting tiny MUSes, distance 1, for 1 puzlits, 1 repeats
INFO:root:Chunked 1 in [1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
INFO:root:Doing checkSmall2
INFO:root:Getting tiny MUSes, distance 2, for 1 puzlits, 1 repeats
INFO:root:Chunked 1 in [1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
INFO:root:Considering 100 * 1 jobs for minsize=3
INFO:root:Chunked 100 in [9, 9, 9, 9, 8, 8, 8, 8, 8, 8, 8, 8]
INFO:root:Considering 100 * 1 jobs for minsize=4
INFO:root:Chunked 100 in [9, 9, 9, 9, 8, 8, 8, 8, 8, 8, 8, 8]
INFO:root:Considering 100 * 1 jobs for minsize=5
INFO:root:Chunked 100 in [9, 9, 9, 9, 8, 8, 8, 8, 8, 8, 8, 8]
INFO:root:Considering 100 * 1 jobs for minsize=6
INFO:root:Chunked 100 in [9, 9, 9, 9, 8, 8, 8, 8, 8, 8, 8, 8]
INFO:root:Considering 100 * 1 jobs for minsize=7
INFO:root:Chunked 100 in [9, 9, 9, 9, 8, 8, 8, 8, 8, 8, 8, 8]
INFO:root:Considering 100 * 1 jobs for minsize=8
INFO:root:Chunked 100 in [9, 9, 9, 9, 8, 8, 8, 8, 8, 8, 8, 8]
INFO:root:Considering 100 * 1 jobs for minsize=9
INFO:root:Chunked 100 in [9, 9, 9, 9, 8, 8, 8, 8, 8, 8, 8, 8]
INFO:root:XX found first (3, 3) is not 3 10
INFO:root:XX add new best (3, 3) is not 3 10 10
INFO:root:Considering 100 * 1 jobs for minsize=10
INFO:root:Chunked 100 in [9, 9, 9, 9, 8, 8, 8, 8, 8, 8, 8, 8]
INFO:root:XX add new best (3, 3) is not 3 10 10
INFO:root:XX add new best (3, 3) is not 3 10 10
INFO:root:Trace: [(10, [(3, 3) is not 3])]
INFO:root:Trace Quality: [(10, 1)]
INFO:root:Trace Sorted: [(10, 1)]
INFO:root:Finished
INFO:root:Full Trace [(10, [(3, 3) is not 3])]
INFO:root:Trying {'minPrecheckStepsMUS': True}
INFO:root:Starting Step 1
INFO:root:Current state [[[[1, 7], [1, 4, 5, 8], [4, 5, 7], [1, 4], [2], [3], [6, 9], [6, 9], [7, 8]], [[6], [2], [3, 7], [5], [9], [8], [1, 3, 7], [1, 3, 7], [4]], [[1, 3, 4, 9], [1, 3, 8], [3, 4, 9], [7], [1, 4], [6], [5], [2], [3, 8]], [[5], [9], [8], [1, 3], [6], [2], [1, 3, 7], [4], [1, 3, 7]], [[2], [3, 4], [1], [3, 4, 9], [7], [5], [8], [3, 9], [6]], [[3, 4], [7], [6], [8], [1, 4], [1, 9], [1, 3, 9], [5], [2]], [[1, 3, 4, 9], [6], [2], [1, 9], [5, 8], [7], [1, 3, 4], [1, 3, 8], [1, 3, 5]], [[8], [1, 5], [5, 7], [6], [3], [4], [2], [1, 7], [9]], [[1, 3, 4, 7, 9], [1, 3, 4], [3, 4, 7, 9], [2], [5, 8], [1, 9], [1, 3, 4, 6, 7], [1, 3, 6, 7, 8], [1, 3, 5, 7]]]]
INFO:root:Doing checkSmall1
INFO:root:Getting tiny MUSes, distance 1, for 1 puzlits, 1 repeats
INFO:root:Chunked 1 in [1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
INFO:root:Doing checkSmall2
INFO:root:Getting tiny MUSes, distance 2, for 1 puzlits, 1 repeats
INFO:root:Chunked 1 in [1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
INFO:root:Considering 100 * 1 jobs for minsize=3
INFO:root:Chunked 100 in [9, 9, 9, 9, 8, 8, 8, 8, 8, 8, 8, 8]
INFO:root:Considering 100 * 1 jobs for minsize=4
INFO:root:Chunked 100 in [9, 9, 9, 9, 8, 8, 8, 8, 8, 8, 8, 8]
INFO:root:Considering 100 * 1 jobs for minsize=5
INFO:root:Chunked 100 in [9, 9, 9, 9, 8, 8, 8, 8, 8, 8, 8, 8]
INFO:root:Considering 100 * 1 jobs for minsize=6
INFO:root:Chunked 100 in [9, 9, 9, 9, 8, 8, 8, 8, 8, 8, 8, 8]
INFO:root:Considering 100 * 1 jobs for minsize=7
INFO:root:Chunked 100 in [9, 9, 9, 9, 8, 8, 8, 8, 8, 8, 8, 8]
INFO:root:Considering 100 * 1 jobs for minsize=8
INFO:root:Chunked 100 in [9, 9, 9, 9, 8, 8, 8, 8, 8, 8, 8, 8]
INFO:root:Considering 100 * 1 jobs for minsize=9
INFO:root:Chunked 100 in [9, 9, 9, 9, 8, 8, 8, 8, 8, 8, 8, 8]
INFO:root:XX found first (3, 3) is not 3 10
INFO:root:XX add new best (3, 3) is not 3 10 10
INFO:root:XX add new best (3, 3) is not 3 10 10
INFO:root:Considering 100 * 1 jobs for minsize=10
INFO:root:Chunked 100 in [9, 9, 9, 9, 8, 8, 8, 8, 8, 8, 8, 8]
INFO:root:XX add new best (3, 3) is not 3 10 10
INFO:root:Trace: [(10, [(3, 3) is not 3])]
INFO:root:Trace Quality: [(10, 1)]
INFO:root:Trace Sorted: [(10, 1)]
INFO:root:Finished
INFO:root:Full Trace [(10, [(3, 3) is not 3])]
INFO:root:Trying {'gallopingMUSes': True, 'minPrecheckMUS': True}
INFO:root:Starting Step 1
INFO:root:Current state [[[[1, 7], [1, 4, 5, 8], [4, 5, 7], [1, 4], [2], [3], [6, 9], [6, 9], [7, 8]], [[6], [2], [3, 7], [5], [9], [8], [1, 3, 7], [1, 3, 7], [4]], [[1, 3, 4, 9], [1, 3, 8], [3, 4, 9], [7], [1, 4], [6], [5], [2], [3, 8]], [[5], [9], [8], [1, 3], [6], [2], [1, 3, 7], [4], [1, 3, 7]], [[2], [3, 4], [1], [3, 4, 9], [7], [5], [8], [3, 9], [6]], [[3, 4], [7], [6], [8], [1, 4], [1, 9], [1, 3, 9], [5], [2]], [[1, 3, 4, 9], [6], [2], [1, 9], [5, 8], [7], [1, 3, 4], [1, 3, 8], [1, 3, 5]], [[8], [1, 5], [5, 7], [6], [3], [4], [2], [1, 7], [9]], [[1, 3, 4, 7, 9], [1, 3, 4], [3, 4, 7, 9], [2], [5, 8], [1, 9], [1, 3, 4, 6, 7], [1, 3, 6, 7, 8], [1, 3, 5, 7]]]]
INFO:root:Doing checkSmall1
INFO:root:Getting tiny MUSes, distance 1, for 1 puzlits, 1 repeats
INFO:root:Chunked 1 in [1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
INFO:root:Doing checkSmall2
INFO:root:Getting tiny MUSes, distance 2, for 1 puzlits, 1 repeats
INFO:root:Chunked 1 in [1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
INFO:root:Considering 100 * 1 jobs for minsize=3
INFO:root:Chunked 100 in [9, 9, 9, 9, 8, 8, 8, 8, 8, 8, 8, 8]
INFO:root:Considering 100 * 1 jobs for minsize=4
INFO:root:Chunked 100 in [9, 9, 9, 9, 8, 8, 8, 8, 8, 8, 8, 8]
INFO:root:Considering 100 * 1 jobs for minsize=5
INFO:root:Chunked 100 in [9, 9, 9, 9, 8, 8, 8, 8, 8, 8, 8, 8]
INFO:root:Considering 100 * 1 jobs for minsize=6
INFO:root:Chunked 100 in [9, 9, 9, 9, 8, 8, 8, 8, 8, 8, 8, 8]
INFO:root:Considering 100 * 1 jobs for minsize=7
INFO:root:Chunked 100 in [9, 9, 9, 9, 8, 8, 8, 8, 8, 8, 8, 8]
INFO:root:Considering 100 * 1 jobs for minsize=8
INFO:root:Chunked 100 in [9, 9, 9, 9, 8, 8, 8, 8, 8, 8, 8, 8]
INFO:root:Considering 100 * 1 jobs for minsize=9
INFO:root:Chunked 100 in [9, 9, 9, 9, 8, 8, 8, 8, 8, 8, 8, 8]
INFO:root:XX found first (3, 3) is not 3 10
INFO:root:XX add new best (3, 3) is not 3 10 10
INFO:root:XX add new best (3, 3) is not 3 10 10
INFO:root:Considering 100 * 1 jobs for minsize=10
INFO:root:Chunked 100 in [9, 9, 9, 9, 8, 8, 8, 8, 8, 8, 8, 8]
INFO:root:XX add new best (3, 3) is not 3 10 10
INFO:root:Trace: [(10, [(3, 3) is not 3])]
INFO:root:Trace Quality: [(10, 1)]
INFO:root:Trace Sorted: [(10, 1)]
INFO:root:Finished
INFO:root:Full Trace [(10, [(3, 3) is not 3])]
INFO:root:Trying {}
INFO:root:Starting Step 1
INFO:root:Current state [[[[4], [5], [3, 7], [9], [1, 3, 6], [3, 6, 7], [2, 7, 8], [1, 6, 8], [1, 2, 6, 8]], [[1, 2, 7], [1, 2, 3], [6], [8], [1, 3, 4], [3, 4, 5, 7], [9], [1, 5], [1, 4]], [[1, 7, 9], [8], [7, 9], [1, 4, 6], [2], [4, 5, 6, 7], [4, 5, 7], [3], [1, 4, 6]], [[2, 7, 9], [2, 3, 9], [3, 7, 8, 9], [5], [3, 4, 6, 9], [2, 3, 4, 6, 9], [2, 3, 4, 8], [1, 6, 8, 9], [1, 2, 4, 6, 8]], [[6], [4], [3, 8, 9], [1, 2, 3], [1, 3, 9], [2, 3, 9], [2, 3, 8], [7], [5]], [[5], [2, 3, 9], [1], [2, 3, 4, 6], [7], [8], [2, 3, 4], [6, 9], [2, 4, 6]], [[3], [7], [5], [2, 6], [8], [2, 6], [1], [4], [9]], [[1, 8, 9], [1, 9], [2], [3, 4], [3, 4, 5, 9], [3, 4, 9], [6], [5, 8], [7]], [[8, 9], [6], [4], [7], [5, 9], [1], [5, 8], [2], [3]]]]
INFO:root:Doing checkSmall1
INFO:root:Getting tiny MUSes, distance 1, for 1 puzlits, 1 repeats
INFO:root:Chunked 1 in [1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
INFO:root:Doing checkSmall2
INFO:root:Getting tiny MUSes, distance 2, for 1 puzlits, 1 repeats
INFO:root:Chunked 1 in [1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
INFO:root:Considering 100 * 1 jobs for minsize=3
INFO:root:Chunked 100 in [9, 9, 9, 9, 8, 8, 8, 8, 8, 8, 8, 8]
INFO:root:Considering 100 * 1 jobs for minsize=4
INFO:root:Chunked 100 in [9, 9, 9, 9, 8, 8, 8, 8, 8, 8, 8, 8]
INFO:root:Considering 100 * 1 jobs for minsize=5
INFO:root:Chunked 100 in [9, 9, 9, 9, 8, 8, 8, 8, 8, 8, 8, 8]
INFO:root:Considering 100 * 1 jobs for minsize=6
INFO:root:Chunked 100 in [9, 9, 9, 9, 8, 8, 8, 8, 8, 8, 8, 8]
INFO:root:Considering 100 * 1 jobs for minsize=7
INFO:root:Chunked 100 in [9, 9, 9, 9, 8, 8, 8, 8, 8, 8, 8, 8]
INFO:root:Considering 100 * 1 jobs for minsize=8
INFO:root:Chunked 100 in [9, 9, 9, 9, 8, 8, 8, 8, 8, 8, 8, 8]
INFO:root:Considering 100 * 1 jobs for minsize=9
INFO:root:Chunked 100 in [9, 9, 9, 9, 8, 8, 8, 8, 8, 8, 8, 8]
INFO:root:Considering 100 * 1 jobs for minsize=10
INFO:root:Chunked 100 in [9, 9, 9, 9, 8, 8, 8, 8, 8, 8, 8, 8]
INFO:root:Considering 100 * 1 jobs for minsize=11
INFO:root:Chunked 100 in [9, 9, 9, 9, 8, 8, 8, 8, 8, 8, 8, 8]
INFO:root:Considering 100 * 1 jobs for minsize=12
INFO:root:Chunked 100 in [9, 9, 9, 9, 8, 8, 8, 8, 8, 8, 8, 8]
INFO:root:XX found first (2, 1) is not 1 13
INFO:root:XX add new best (2, 1) is not 1 13 13
INFO:root:XX add new best (2, 1) is not 1 13 13
INFO:root:XX add new best (2, 1) is not 1 13 13
INFO:root:XX add new best (2, 1) is not 1 13 13
INFO:root:XX add new best (2, 1) is not 1 13 13
INFO:root:XX add new best (2, 1) is not 1 13 13
INFO:root:XX add new best (2, 1) is not 1 13 13
INFO:root:XX add new best (2, 1) is not 1 13 13
INFO:root:XX add new best (2, 1) is not 1 13 13
INFO:root:XX add new best (2, 1) is not 1 13 13
INFO:root:XX add new best (2, 1) is not 1 13 13
INFO:root:XX add new best (2, 1) is not 1 13 13
INFO:root:XX add new best (2, 1) is not 1 13 13
INFO:root:XX add new best (2, 1) is not 1 13 13
INFO:root:XX add new best (2, 1) is not 1 13 13
INFO:root:XX add new best (2, 1) is not 1 13 13
INFO:root:XX add new best (2, 1) is not 1 13 13
INFO:root:XX add new best (2, 1) is not 1 13 13
INFO:root:XX add new best (2, 1) is not 1 13 13
INFO:root:XX add new best (2, 1) is not 1 13 13
INFO:root:XX add new best (2, 1) is not 1 13 13
INFO:root:XX add new best (2, 1) is not 1 13 13
INFO:root:XX add new best (2, 1) is not 1 13 13
INFO:root:XX add new best (2, 1) is not 1 13 13
INFO:root:XX add new best (2, 1) is not 1 13 13
INFO:root:XX add new best (2, 1) is not 1 13 13
INFO:root:XX add new best (2, 1) is not 1 13 13
INFO:root:XX add new best (2, 1) is not 1 13 13
INFO:root:XX add new best (2, 1) is not 1 13 13
INFO:root:XX add new best (2, 1) is not 1 13 13
INFO:root:XX add new best (2, 1) is not 1 13 13
INFO:root:XX add new best (2, 1) is not 1 13 13
INFO:root:XX add new best (2, 1) is not 1 13 13
INFO:root:XX add new best (2, 1) is not 1 13 13
INFO:root:XX add new best (2, 1) is not 1 13 13
INFO:root:XX add new best (2, 1) is not 1 13 13
INFO:root:XX add new best (2, 1) is not 1 13 13
INFO:root:XX add new best (2, 1) is not 1 13 13
INFO:root:XX add new best (2, 1) is not 1 13 13
INFO:root:XX add new best (2, 1) is not 1 13 13
INFO:root:XX add new best (2, 1) is not 1 13 13
INFO:root:XX add new best (2, 1) is not 1 13 13
INFO:root:XX add new best (2, 1) is not 1 13 13
INFO:root:XX add new best (2, 1) is not 1 13 13
INFO:root:XX add new best (2, 1) is not 1 13 13
INFO:root:XX add new best (2, 1) is not 1 13 13
INFO:root:XX add new best (2, 1) is not 1 13 13
INFO:root:XX add new best (2, 1) is not 1 13 13
INFO:root:XX add new best (2, 1) is not 1 13 13
INFO:root:XX add new best (2, 1) is not 1 13 13
INFO:root:XX add new best (2, 1) is not 1 13 13
INFO:root:XX add new best (2, 1) is not 1 13 13
INFO:root:XX add new best (2, 1) is not 1 13 13
INFO:root:XX add new best (2, 1) is not 1 13 13
INFO:root:XX add new best (2, 1) is not 1 13 13
INFO:root:XX add new best (2, 1) is not 1 13 13
INFO:root:XX add new best (2, 1) is not 1 13 13
INFO:root:XX add new best (2, 1) is not 1 13 13
INFO:root:XX add new best (2, 1) is not 1 13 13
INFO:root:XX add new best (2, 1) is not 1 13 13
INFO:root:XX add new best (2, 1) is not 1 13 13
INFO:root:XX add new best (2, 1) is not 1 13 13
INFO:root:XX add new best (2, 1) is not 1 13 13
INFO:root:XX add new best (2, 1) is not 1 13 13
INFO:root:XX add new best (2, 1) is not 1 13 13
INFO:root:XX add new best (2, 1) is not 1 13 13
INFO:root:XX add new best (2, 1) is not 1 13 13
INFO:root:XX add new best (2, 1) is not 1 13 13
INFO:root:XX add new best (2, 1) is not 1 13 13
INFO:root:XX add new best (2, 1) is not 1 13 13
INFO:root:XX add new best (2, 1) is not 1 13 13
INFO:root:XX add new best (2, 1) is not 1 13 13
INFO:root:XX add new best (2, 1) is not 1 13 13
INFO:root:XX add new best (2, 1) is not 1 13 13
INFO:root:XX add new best (2, 1) is not 1 13 13
INFO:root:XX add new best (2, 1) is not 1 13 13
INFO:root:XX add new best (2, 1) is not 1 13 13
INFO:root:XX add new best (2, 1) is not 1 13 13
INFO:root:XX add new best (2, 1) is not 1 13 13
INFO:root:XX add new best (2, 1) is not 1 13 13
INFO:root:XX add new best (2, 1) is not 1 13 13
INFO:root:XX add new best (2, 1) is not 1 13 13
INFO:root:XX add new best (2, 1) is not 1 13 13
INFO:root:XX add new best (2, 1) is not 1 13 13
INFO:root:XX add new best (2, 1) is not 1 13 13
INFO:root:XX add new best (2, 1) is not 1 13 13
INFO:root:XX add new best (2, 1) is not 1 13 13
INFO:root:XX add new best (2, 1) is not 1 13 13
INFO:root:XX add new best (2, 1) is not 1 13 13
INFO:root:XX add new best (2, 1) is not 1 13 13
INFO:root:XX add new best (2, 1) is not 1 13 13
INFO:root:XX add new best (2, 1) is not 1 13 13
INFO:root:XX add new best (2, 1) is not 1 13 13
INFO:root:XX add new best (2, 1) is not 1 13 13
INFO:root:XX add new best (2, 1) is not 1 13 13
INFO:root:XX add new best (2, 1) is not 1 13 13
INFO:root:XX add new best (2, 1) is not 1 13 13
INFO:root:XX add new best (2, 1) is not 1 13 13
INFO:root:XX add new best (2, 1) is not 1 13 13
INFO:root:Considering 100 * 1 jobs for minsize=13
INFO:root:Chunked 100 in [9, 9, 9, 9, 8, 8, 8, 8, 8, 8, 8, 8]
INFO:root:XX add new best (2, 1) is not 1 13 13
INFO:root:XX add new best (2, 1) is not 1 13 13
INFO:root:XX add new best (2, 1) is not 1 13 13
INFO:root:XX add new best (2, 1) is not 1 13 13
INFO:root:XX add new best (2, 1) is not 1 13 13
INFO:root:XX add new best (2, 1) is not 1 13 13
INFO:root:XX add new best (2, 1) is not 1 13 13
INFO:root:XX add new best (2, 1) is not 1 13 13
INFO:root:XX add new best (2, 1) is not 1 13 13
INFO:root:XX add new best (2, 1) is not 1 13 13
INFO:root:XX add new best (2, 1) is not 1 13 13
INFO:root:XX add new best (2, 1) is not 1 13 13
INFO:root:XX add new best (2, 1) is not 1 13 13
INFO:root:XX add new best (2, 1) is not 1 13 13
INFO:root:XX add new best (2, 1) is not 1 13 13
INFO:root:XX add new best (2, 1) is not 1 13 13
INFO:root:XX add new best (2, 1) is not 1 13 13
INFO:root:XX add new best (2, 1) is not 1 13 13
INFO:root:XX add new best (2, 1) is not 1 13 13
INFO:root:XX add new best (2, 1) is not 1 13 13
INFO:root:XX add new best (2, 1) is not 1 13 13
INFO:root:XX add new best (2, 1) is not 1 13 13
INFO:root:XX add new best (2, 1) is not 1 13 13
INFO:root:XX add new best (2, 1) is not 1 13 13
INFO:root:XX add new best (2, 1) is not 1 13 13
INFO:root:XX add new best (2, 1) is not 1 13 13
INFO:root:XX add new best (2, 1) is not 1 13 13
INFO:root:XX add new best (2, 1) is not 1 13 13
INFO:root:XX add new best (2, 1) is not 1 13 13
INFO:root:XX add new best (2, 1) is not 1 13 13
INFO:root:XX add new best (2, 1) is not 1 13 13
INFO:root:XX add new best (2, 1) is not 1 13 13
INFO:root:XX add new best (2, 1) is not 1 13 13
INFO:root:XX add new best (2, 1) is not 1 13 13
INFO:root:XX add new best (2, 1) is not 1 13 13
INFO:root:XX add new best (2, 1) is not 1 13 13
INFO:root:XX add new best (2, 1) is not 1 13 13
INFO:root:XX add new best (2, 1) is not 1 13 13
INFO:root:XX add new best (2, 1) is not 1 13 13
INFO:root:XX add new best (2, 1) is not 1 13 13
INFO:root:XX add new best (2, 1) is not 1 13 13
INFO:root:XX add new best (2, 1) is not 1 13 13
INFO:root:XX add new best (2, 1) is not 1 13 13
INFO:root:XX add new best (2, 1) is not 1 13 13
INFO:root:XX add new best (2, 1) is not 1 13 13
INFO:root:XX add new best (2, 1) is not 1 13 13
INFO:root:XX add new best (2, 1) is not 1 13 13
INFO:root:XX add new best (2, 1) is not 1 13 13
INFO:root:XX add new best (2, 1) is not 1 13 13
INFO:root:XX add new best (2, 1) is not 1 13 13
INFO:root:XX add new best (2, 1) is not 1 13 13
INFO:root:XX add new best (2, 1) is not 1 13 13
INFO:root:XX add new best (2, 1) is not 1 13 13
INFO:root:XX add new best (2, 1) is not 1 13 13
INFO:root:XX add new best (2, 1) is not 1 13 13
INFO:root:XX add new best (2, 1) is not 1 13 13
INFO:root:XX add new best (2, 1) is not 1 13 13
INFO:root:XX add new best (2, 1) is not 1 13 13
INFO:root:XX add new best (2, 1) is not 1 13 13
INFO:root:XX add new best (2, 1) is not 1 13 13
INFO:root:XX add new best (2, 1) is not 1 13 13
INFO:root:XX add new best (2, 1) is not 1 13 13
INFO:root:XX add new best (2, 1) is not 1 13 13
INFO:root:XX add new best (2, 1) is not 1 13 13
INFO:root:XX add new best (2, 1) is not 1 13 13
INFO:root:XX add new best (2, 1) is not 1 13 13
INFO:root:XX add new best (2, 1) is not 1 13 13
INFO:root:XX add new best (2, 1) is not 1 13 13
INFO:root:XX add new best (2, 1) is not 1 13 13
INFO:root:XX add new best (2, 1) is not 1 13 13
INFO:root:XX add new best (2, 1) is not 1 13 13
INFO:root:XX add new best (2, 1) is not 1 13 13
INFO:root:XX add new best (2, 1) is not 1 13 13
INFO:root:XX add new best (2, 1) is not 1 13 13
INFO:root:XX add new best (2, 1) is not 1 13 13
INFO:root:XX add new best (2, 1) is not 1 13 13
INFO:root:XX add new best (2, 1) is not 1 13 13
INFO:root:XX add new best (2, 1) is not 1 13 13
INFO:root:XX add new best (2, 1) is not 1 13 13
INFO:root:XX add new best (2, 1) is not 1 13 13
INFO:root:XX add new best (2, 1) is not 1 13 13
INFO:root:XX add new best (2, 1) is not 1 13 13
INFO:root:XX add new best (2, 1) is not 1 13 13
INFO:root:XX add new best (2, 1) is not 1 13 13
INFO:root:XX add new best (2, 1) is not 1 13 13
INFO:root:XX add new best (2, 1) is not 1 13 13
INFO:root:XX add new best (2, 1) is not 1 13 13
INFO:root:XX add new best (2, 1) is not 1 13 13
INFO:root:XX add new best (2, 1) is not 1 13 13
INFO:root:XX add new best (2, 1) is not 1 13 13
INFO:root:XX add new best (2, 1) is not 1 13 13
INFO:root:XX add new best (2, 1) is not 1 13 13
INFO:root:XX add new best (2, 1) is not 1 13 13
INFO:root:XX add new best (2, 1) is not 1 13 13
INFO:root:XX add new best (2, 1) is not 1 13 13
INFO:root:XX add new best (2, 1) is not 1 13 13
INFO:root:XX add new best (2, 1) is not 1 13 13
INFO:root:XX add new best (2, 1) is not 1 13 13
INFO:root:XX add new best (2, 1) is not 1 13 13
INFO:root:XX add new best (2, 1) is not 1 13 13
INFO:root:Trace: [(13, [(2, 1) is not 1])]
INFO:root:Trace Quality: [(13, 1)]
INFO:root:Trace Sorted: [(13, 1)]
INFO:root:Finished
INFO:root:Full Trace [(13, [(2, 1) is not 1])]
INFO:root:Trying {'prechopMUSes': True}
INFO:root:Starting Step 1
INFO:root:Current state [[[[4], [5], [3, 7], [9], [1, 3, 6], [3, 6, 7], [2, 7, 8], [1, 6, 8], [1, 2, 6, 8]], [[1, 2, 7], [1, 2, 3], [6], [8], [1, 3, 4], [3, 4, 5, 7], [9], [1, 5], [1, 4]], [[1, 7, 9], [8], [7, 9], [1, 4, 6], [2], [4, 5, 6, 7], [4, 5, 7], [3], [1, 4, 6]], [[2, 7, 9], [2, 3, 9], [3, 7, 8, 9], [5], [3, 4, 6, 9], [2, 3, 4, 6, 9], [2, 3, 4, 8], [1, 6, 8, 9], [1, 2, 4, 6, 8]], [[6], [4], [3, 8, 9], [1, 2, 3], [1, 3, 9], [2, 3, 9], [2, 3, 8], [7], [5]], [[5], [2, 3, 9], [1], [2, 3, 4, 6], [7], [8], [2, 3, 4], [6, 9], [2, 4, 6]], [[3], [7], [5], [2, 6], [8], [2, 6], [1], [4], [9]], [[1, 8, 9], [1, 9], [2], [3, 4], [3, 4, 5, 9], [3, 4, 9], [6], [5, 8], [7]], [[8, 9], [6], [4], [7], [5, 9], [1], [5, 8], [2], [3]]]]
INFO:root:Doing checkSmall1
INFO:root:Getting tiny MUSes, distance 1, for 1 puzlits, 1 repeats
INFO:root:Chunked 1 in [1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
INFO:root:Doing checkSmall2
INFO:root:Getting tiny MUSes, distance 2, for 1 puzlits, 1 repeats
INFO:root:Chunked 1 in [1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
INFO:root:Considering 100 * 1 jobs for minsize=3
INFO:root:Chunked 100 in [9, 9, 9, 9, 8, 8, 8, 8, 8, 8, 8, 8]
INFO:root:Considering 100 * 1 jobs for minsize=4
INFO:root:Chunked 100 in [9, 9, 9, 9, 8, 8, 8, 8, 8, 8, 8, 8]
INFO:root:Considering 100 * 1 jobs for minsize=5
INFO:root:Chunked 100 in [9, 9, 9, 9, 8, 8, 8, 8, 8, 8, 8, 8]
INFO:root:Considering 100 * 1 jobs for minsize=6
INFO:root:Chunked 100 in [9, 9, 9, 9, 8, 8, 8, 8, 8, 8, 8, 8]
INFO:root:Considering 100 * 1 jobs for minsize=7
INFO:root:Chunked 100 in [9, 9, 9, 9, 8, 8, 8, 8, 8, 8, 8, 8]
INFO:root:Considering 100 * 1 jobs for minsize=8
INFO:root:Chunked 100 in [9, 9, 9, 9, 8, 8, 8, 8, 8, 8, 8, 8]
INFO:root:Considering 100 * 1 jobs for minsize=9
INFO:root:Chunked 100 in [9, 9, 9, 9, 8, 8, 8, 8, 8, 8, 8, 8]
INFO:root:Considering 100 * 1 jobs for minsize=10
INFO:root:Chunked 100 in [9, 9, 9, 9, 8, 8, 8, 8, 8, 8, 8, 8]
INFO:root:Considering 100 * 1 jobs for minsize=11
INFO:root:Chunked 100 in [9, 9, 9, 9, 8, 8, 8, 8, 8, 8, 8, 8]
INFO:root:Considering 100 * 1 jobs for minsize=12
INFO:root:Chunked 100 in [9, 9, 9, 9, 8, 8, 8, 8, 8, 8, 8, 8]
INFO:root:Considering 100 * 1 jobs for minsize=13
INFO:root:Chunked 100 in [9, 9, 9, 9, 8, 8, 8, 8, 8, 8, 8, 8]
INFO:root:XX found first (2, 1) is not 1 14
INFO:root:Considering 100 * 1 jobs for minsize=14
INFO:root:Chunked 100 in [9, 9, 9, 9, 8, 8, 8, 8, 8, 8, 8, 8]
INFO:root:XX found new best (2, 1) is not 1 14 13
INFO:root:XX add new best (2, 1) is not 1 13 13
INFO:root:XX add new best (2, 1) is not 1 13 13
INFO:root:Trace: [(13, [(2, 1) is not 1])]
INFO:root:Trace Quality: [(13, 1)]
INFO:root:Trace Sorted: [(13, 1)]
INFO:root:Finished
INFO:root:Full Trace [(13, [(2, 1) is not 1])]
INFO:root:Trying {'quarterChopMUS': True}
INFO:root:Starting Step 1
INFO:root:Current state [[[[4], [5], [3, 7], [9], [1, 3, 6], [3, 6, 7], [2, 7, 8], [1, 6, 8], [1, 2, 6, 8]], [[1, 2, 7], [1, 2, 3], [6], [8], [1, 3, 4], [3, 4, 5, 7], [9], [1, 5], [1, 4]], [[1, 7, 9], [8], [7, 9], [1, 4, 6], [2], [4, 5, 6, 7], [4, 5, 7], [3], [1, 4, 6]], [[2, 7, 9], [2, 3, 9], [3, 7, 8, 9], [5], [3, 4, 6, 9], [2, 3, 4, 6, 9], [2, 3, 4, 8], [1, 6, 8, 9], [1, 2, 4, 6, 8]], [[6], [4], [3, 8, 9], [1, 2, 3], [1, 3, 9], [2, 3, 9], [2, 3, 8], [7], [5]], [[5], [2, 3, 9], [1], [2, 3, 4, 6], [7], [8], [2, 3, 4], [6, 9], [2, 4, 6]], [[3], [7], [5], [2, 6], [8], [2, 6], [1], [4], [9]], [[1, 8, 9], [1, 9], [2], [3, 4], [3, 4, 5, 9], [3, 4, 9], [6], [5, 8], [7]], [[8, 9], [6], [4], [7], [5, 9], [1], [5, 8], [2], [3]]]]
INFO:root:Doing checkSmall1
INFO:root:Getting tiny MUSes, distance 1, for 1 puzlits, 1 repeats
INFO:root:Chunked 1 in [1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
INFO:root:Doing checkSmall2
INFO:root:Getting tiny MUSes, distance 2, for 1 puzlits, 1 repeats
INFO:root:Chunked 1 in [1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
INFO:root:Considering 100 * 1 jobs for minsize=3
INFO:root:Chunked 100 in [9, 9, 9, 9, 8, 8, 8, 8, 8, 8, 8, 8]
INFO:root:Considering 100 * 1 jobs for minsize=4
INFO:root:Chunked 100 in [9, 9, 9, 9, 8, 8, 8, 8, 8, 8, 8, 8]
INFO:root:Considering 100 * 1 jobs for minsize=5
INFO:root:Chunked 100 in [9, 9, 9, 9, 8, 8, 8, 8, 8, 8, 8, 8]
INFO:root:Considering 100 * 1 jobs for minsize=6
INFO:root:Chunked 100 in [9, 9, 9, 9, 8, 8, 8, 8, 8, 8, 8, 8]
INFO:root:Considering 100 * 1 jobs for minsize=7
INFO:root:Chunked 100 in [9, 9, 9, 9, 8, 8, 8, 8, 8, 8, 8, 8]
INFO:root:Considering 100 * 1 jobs for minsize=8
INFO:root:Chunked 100 in [9, 9, 9, 9, 8, 8, 8, 8, 8, 8, 8, 8]
INFO:root:Considering 100 * 1 jobs for minsize=9
INFO:root:Chunked 100 in [9, 9, 9, 9, 8, 8, 8, 8, 8, 8, 8, 8]
INFO:root:Considering 100 * 1 jobs for minsize=10
INFO:root:Chunked 100 in [9, 9, 9, 9, 8, 8, 8, 8, 8, 8, 8, 8]
INFO:root:Considering 100 * 1 jobs for minsize=11
INFO:root:Chunked 100 in [9, 9, 9, 9, 8, 8, 8, 8, 8, 8, 8, 8]
INFO:root:Considering 100 * 1 jobs for minsize=12
INFO:root:Chunked 100 in [9, 9, 9, 9, 8, 8, 8, 8, 8, 8, 8, 8]
INFO:root:XX found first (2, 1) is not 1 13
INFO:root:XX add new best (2, 1) is not 1 13 13
INFO:root:XX add new best (2, 1) is not 1 13 13
INFO:root:XX add new best (2, 1) is not 1 13 13
INFO:root:XX add new best (2, 1) is not 1 13 13
INFO:root:XX add new best (2, 1) is not 1 13 13
INFO:root:XX add new best (2, 1) is not 1 13 13
INFO:root:XX add new best (2, 1) is not 1 13 13
INFO:root:XX add new best (2, 1) is not 1 13 13
INFO:root:XX add new best (2, 1) is not 1 13 13
INFO:root:XX add new best (2, 1) is not 1 13 13
INFO:root:XX add new best (2, 1) is not 1 13 13
INFO:root:XX add new best (2, 1) is not 1 13 13
INFO:root:XX add new best (2, 1) is not 1 13 13
INFO:root:XX add new best (2, 1) is not 1 13 13
INFO:root:XX add new best (2, 1) is not 1 13 13
INFO:root:XX add new best (2, 1) is not 1 13 13
INFO:root:XX add new best (2, 1) is not 1 13 13
INFO:root:XX add new best (2, 1) is not 1 13 13
INFO:root:XX add new best (2, 1) is not 1 13 13
INFO:root:XX add new best (2, 1) is not 1 13 13
INFO:root:XX add new best (2, 1) is not 1 13 13
INFO:root:XX add new best (2, 1) is not 1 13 13
INFO:root:XX add new best (2, 1) is not 1 13 13
INFO:root:XX add new best (2, 1) is not 1 13 13
INFO:root:XX add new best (2, 1) is not 1 13 13
INFO:root:XX add new best (2, 1) is not 1 13 13
INFO:root:XX add new best (2, 1) is not 1 13 13
INFO:root:XX add new best (2, 1) is not 1 13 13
INFO:root:XX add new best (2, 1) is not 1 13 13
INFO:root:XX add new best (2, 1) is not 1 13 13
INFO:root:XX add new best (2, 1) is not 1 13 13
INFO:root:XX add new best (2, 1) is not 1 13 13
INFO:root:XX add new best (2, 1) is not 1 13 13
INFO:root:XX add new best (2, 1) is not 1 13 13
INFO:root:XX add new best (2, 1) is not 1 13 13
INFO:root:XX add new best (2, 1) is not 1 13 13
INFO:root:XX add new best (2, 1) is not 1 13 13
INFO:root:XX add new best (2, 1) is not 1 13 13
INFO:root:XX add new best (2, 1) is not 1 13 13
INFO:root:XX add new best (2, 1) is not 1 13 13
INFO:root:XX add new best (2, 1) is not 1 13 13
INFO:root:XX add new best (2, 1) is not 1 13 13
INFO:root:XX add new best (2, 1) is not 1 13 13
INFO:root:XX add new best (2, 1) is not 1 13 13
INFO:root:XX add new best (2, 1) is not 1 13 13
INFO:root:XX add new best (2, 1) is not 1 13 13
INFO:root:XX add new best (2, 1) is not 1 13 13
INFO:root:XX add new best (2, 1) is not 1 13 13
INFO:root:XX add new best (2, 1) is not 1 13 13
INFO:root:XX add new best (2, 1) is not 1 13 13
INFO:root:XX add new best (2, 1) is not 1 13 13
INFO:root:XX add new best (2, 1) is not 1 13 13
INFO:root:XX add new best (2, 1) is not 1 13 13
INFO:root:XX add new best (2, 1) is not 1 13 13
INFO:root:XX add new best (2, 1) is not 1 13 13
INFO:root:XX add new best (2, 1) is not 1 13 13
INFO:root:XX add new best (2, 1) is not 1 13 13
INFO:root:XX add new best (2, 1) is not 1 13 13
INFO:root:XX add new best (2, 1) is not 1 13 13
INFO:root:XX add new best (2, 1) is not 1 13 13
INFO:root:XX add new best (2, 1) is not 1 13 13
INFO:root:XX add new best (2, 1) is not 1 13 13
INFO:root:XX add new best (2, 1) is not 1 13 13
INFO:root:XX add new best (2, 1) is not 1 13 13
INFO:root:XX add new best (2, 1) is not 1 13 13
INFO:root:XX add new best (2, 1) is not 1 13 13
INFO:root:XX add new best (2, 1) is not 1 13 13
INFO:root:XX add new best (2, 1) is not 1 13 13
INFO:root:XX add new best (2, 1) is not 1 13 13
INFO:root:XX add new best (2, 1) is not 1 13 13
INFO:root:XX add new best (2, 1) is not 1 13 13
INFO:root:XX add new best (2, 1) is not 1 13 13
INFO:root:XX add new best (2, 1) is not 1 13 13
INFO:root:XX add new best (2, 1) is not 1 13 13
INFO:root:XX add new best (2, 1) is not 1 13 13
INFO:root:XX add new best (2, 1) is not 1 13 13
INFO:root:XX add new best (2, 1) is not 1 13 13
INFO:root:XX add new best (2, 1) is not 1 13 13
INFO:root:XX add new best (2, 1) is not 1 13 13
INFO:root:XX add new best (2, 1) is not 1 13 13
INFO:root:XX add new best (2, 1) is not 1 13 13
INFO:root:XX add new best (2, 1) is not 1 13 13
INFO:root:XX add new best (2, 1) is not 1 13 13
INFO:root:Considering 100 * 1 jobs for minsize=13
INFO:root:Chunked 100 in [9, 9, 9, 9, 8, 8, 8, 8, 8, 8, 8, 8]
INFO:root:XX add new best (2, 1) is not 1 13 13
INFO:root:XX add new best (2, 1) is not 1 13 13
INFO:root:XX add new best (2, 1) is not 1 13 13
INFO:root:XX add new best (2, 1) is not 1 13 13
INFO:root:XX add new best (2, 1) is not 1 13 13
INFO:root:XX add new best (2, 1) is not 1 13 13
INFO:root:XX add new best (2, 1) is not 1 13 13
INFO:root:XX add new best (2, 1) is not 1 13 13
INFO:root:XX add new best (2, 1) is not 1 13 13
INFO:root:XX add new best (2, 1) is not 1 13 13
INFO:root:XX add new best (2, 1) is not 1 13 13
INFO:root:XX add new best (2, 1) is not 1 13 13
INFO:root:XX add new best (2, 1) is not 1 13 13
INFO:root:XX add new best (2, 1) is not 1 13 13
INFO:root:XX add new best (2, 1) is not 1 13 13
INFO:root:XX add new best (2, 1) is not 1 13 13
INFO:root:XX add new best (2, 1) is not 1 13 13
INFO:root:XX add new best (2, 1) is not 1 13 13
INFO:root:XX add new best (2, 1) is not 1 13 13
INFO:root:XX add new best (2, 1) is not 1 13 13
INFO:root:XX add new best (2, 1) is not 1 13 13
INFO:root:XX add new best (2, 1) is not 1 13 13
INFO:root:XX add new best (2, 1) is not 1 13 13
INFO:root:XX add new best (2, 1) is not 1 13 13
INFO:root:XX add new best (2, 1) is not 1 13 13
INFO:root:XX add new best (2, 1) is not 1 13 13
INFO:root:XX add new best (2, 1) is not 1 13 13
INFO:root:XX add new best (2, 1) is not 1 13 13
INFO:root:XX add new best (2, 1) is not 1 13 13
INFO:root:XX add new best (2, 1) is not 1 13 13
INFO:root:XX add new best (2, 1) is not 1 13 13
INFO:root:XX add new best (2, 1) is not 1 13 13
INFO:root:XX add new best (2, 1) is not 1 13 13
INFO:root:XX add new best (2, 1) is not 1 13 13
INFO:root:XX add new best (2, 1) is not 1 13 13
INFO:root:XX add new best (2, 1) is not 1 13 13
INFO:root:XX add new best (2, 1) is not 1 13 13
INFO:root:XX add new best (2, 1) is not 1 13 13
INFO:root:XX add new best (2, 1) is not 1 13 13
INFO:root:XX add new best (2, 1) is not 1 13 13
INFO:root:XX add new best (2, 1) is not 1 13 13
INFO:root:XX add new best (2, 1) is not 1 13 13
INFO:root:XX add new best (2, 1) is not 1 13 13
INFO:root:XX add new best (2, 1) is not 1 13 13
INFO:root:XX add new best (2, 1) is not 1 13 13
INFO:root:XX add new best (2, 1) is not 1 13 13
INFO:root:XX add new best (2, 1) is not 1 13 13
INFO:root:XX add new best (2, 1) is not 1 13 13
INFO:root:XX add new best (2, 1) is not 1 13 13
INFO:root:XX add new best (2, 1) is not 1 13 13
INFO:root:XX add new best (2, 1) is not 1 13 13
INFO:root:XX add new best (2, 1) is not 1 13 13
INFO:root:XX add new best (2, 1) is not 1 13 13
INFO:root:XX add new best (2, 1) is not 1 13 13
INFO:root:XX add new best (2, 1) is not 1 13 13
INFO:root:XX add new best (2, 1) is not 1 13 13
INFO:root:XX add new best (2, 1) is not 1 13 13
INFO:root:XX add new best (2, 1) is not 1 13 13
INFO:root:XX add new best (2, 1) is not 1 13 13
INFO:root:XX add new best (2, 1) is not 1 13 13
INFO:root:XX add new best (2, 1) is not 1 13 13
INFO:root:XX add new best (2, 1) is not 1 13 13
INFO:root:XX add new best (2, 1) is not 1 13 13
INFO:root:XX add new best (2, 1) is not 1 13 13
INFO:root:XX add new best (2, 1) is not 1 13 13
INFO:root:XX add new best (2, 1) is not 1 13 13
INFO:root:XX add new best (2, 1) is not 1 13 13
INFO:root:XX add new best (2, 1) is not 1 13 13
INFO:root:XX add new best (2, 1) is not 1 13 13
INFO:root:XX add new best (2, 1) is not 1 13 13
INFO:root:XX add new best (2, 1) is not 1 13 13
INFO:root:XX add new best (2, 1) is not 1 13 13
INFO:root:XX add new best (2, 1) is not 1 13 13
INFO:root:XX add new best (2, 1) is not 1 13 13
INFO:root:XX add new best (2, 1) is not 1 13 13
INFO:root:XX add new best (2, 1) is not 1 13 13
INFO:root:XX add new best (2, 1) is not 1 13 13
INFO:root:XX add new best (2, 1) is not 1 13 13
INFO:root:XX add new best (2, 1) is not 1 13 13
INFO:root:XX add new best (2, 1) is not 1 13 13
INFO:root:XX add new best (2, 1) is not 1 13 13
INFO:root:XX add new best (2, 1) is not 1 13 13
INFO:root:XX add new best (2, 1) is not 1 13 13
INFO:root:XX add new best (2, 1) is not 1 13 13
INFO:root:Trace: [(13, [(2, 1) is not 1])]
INFO:root:Trace Quality: [(13, 1)]
INFO:root:Trace Sorted: [(13, 1)]
INFO:root:Finished
INFO:root:Full Trace [(13, [(2, 1) is not 1])]
INFO:root:Trying {'minPrecheckMUS': True}
INFO:root:Starting Step 1
INFO:root:Current state [[[[4], [5], [3, 7], [9], [1, 3, 6], [3, 6, 7], [2, 7, 8], [1, 6, 8], [1, 2, 6, 8]], [[1, 2, 7], [1, 2, 3], [6], [8], [1, 3, 4], [3, 4, 5, 7], [9], [1, 5], [1, 4]], [[1, 7, 9], [8], [7, 9], [1, 4, 6], [2], [4, 5, 6, 7], [4, 5, 7], [3], [1, 4, 6]], [[2, 7, 9], [2, 3, 9], [3, 7, 8, 9], [5], [3, 4, 6, 9], [2, 3, 4, 6, 9], [2, 3, 4, 8], [1, 6, 8, 9], [1, 2, 4, 6, 8]], [[6], [4], [3, 8, 9], [1, 2, 3], [1, 3, 9], [2, 3, 9], [2, 3, 8], [7], [5]], [[5], [2, 3, 9], [1], [2, 3, 4, 6], [7], [8], [2, 3, 4], [6, 9], [2, 4, 6]], [[3], [7], [5], [2, 6], [8], [2, 6], [1], [4], [9]], [[1, 8, 9], [1, 9], [2], [3, 4], [3, 4, 5, 9], [3, 4, 9], [6], [5, 8], [7]], [[8, 9], [6], [4], [7], [5, 9], [1], [5, 8], [2], [3]]]]
INFO:root:Doing checkSmall1
INFO:root:Getting tiny MUSes, distance 1, for 1 puzlits, 1 repeats
INFO:root:Chunked 1 in [1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
INFO:root:Doing checkSmall2
INFO:root:Getting tiny MUSes, distance 2, for 1 puzlits, 1 repeats
INFO:root:Chunked 1 in [1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
INFO:root:Considering 100 * 1 jobs for minsize=3
INFO:root:Chunked 100 in [9, 9, 9, 9, 8, 8, 8, 8, 8, 8, 8, 8]
INFO:root:Considering 100 * 1 jobs for minsize=4
INFO:root:Chunked 100 in [9, 9, 9, 9, 8, 8, 8, 8, 8, 8, 8, 8]
INFO:root:Considering 100 * 1 jobs for minsize=5
INFO:root:Chunked 100 in [9, 9, 9, 9, 8, 8, 8, 8, 8, 8, 8, 8]
INFO:root:Considering 100 * 1 jobs for minsize=6
INFO:root:Chunked 100 in [9, 9, 9, 9, 8, 8, 8, 8, 8, 8, 8, 8]
INFO:root:Considering 100 * 1 jobs for minsize=7
INFO:root:Chunked 100 in [9, 9, 9, 9, 8, 8, 8, 8, 8, 8, 8, 8]
INFO:root:Considering 100 * 1 jobs for minsize=8
INFO:root:Chunked 100 in [9, 9, 9, 9, 8, 8, 8, 8, 8, 8, 8, 8]
INFO:root:Considering 100 * 1 jobs for minsize=9
INFO:root:Chunked 100 in [9, 9, 9, 9, 8, 8, 8, 8, 8, 8, 8, 8]
INFO:root:Considering 100 * 1 jobs for minsize=10
INFO:root:Chunked 100 in [9, 9, 9, 9, 8, 8, 8, 8, 8, 8, 8, 8]
INFO:root:Considering 100 * 1 jobs for minsize=11
INFO:root:Chunked 100 in [9, 9, 9, 9, 8, 8, 8, 8, 8, 8, 8, 8]
INFO:root:Considering 100 * 1 jobs for minsize=12
INFO:root:Chunked 100 in [9, 9, 9, 9, 8, 8, 8, 8, 8, 8, 8, 8]
INFO:root:Considering 100 * 1 jobs for minsize=13
INFO:root:Chunked 100 in [9, 9, 9, 9, 8, 8, 8, 8, 8, 8, 8, 8]
INFO:root:Considering 100 * 1 jobs for minsize=14
INFO:root:Chunked 100 in [9, 9, 9, 9, 8, 8, 8, 8, 8, 8, 8, 8]
INFO:root:XX found first (2, 1) is not 1 15
INFO:root:XX found new best (2, 1) is not 1 15 14
INFO:root:XX add new best (2, 1) is not 1 14 14
INFO:root:Trace: [(14, [(2, 1) is not 1])]
INFO:root:Trace Quality: [(14, 1)]
INFO:root:Trace Sorted: [(14, 1)]
INFO:root:Finished
INFO:root:Full Trace [(14, [(2, 1) is not 1])]
INFO:root:Trying {'gallopingMUSes': True}
INFO:root:Starting Step 1
INFO:root:Current state [[[[4], [5], [3, 7], [9], [1, 3, 6], [3, 6, 7], [2, 7, 8], [1, 6, 8], [1, 2, 6, 8]], [[1, 2, 7], [1, 2, 3], [6], [8], [1, 3, 4], [3, 4, 5, 7], [9], [1, 5], [1, 4]], [[1, 7, 9], [8], [7, 9], [1, 4, 6], [2], [4, 5, 6, 7], [4, 5, 7], [3], [1, 4, 6]], [[2, 7, 9], [2, 3, 9], [3, 7, 8, 9], [5], [3, 4, 6, 9], [2, 3, 4, 6, 9], [2, 3, 4, 8], [1, 6, 8, 9], [1, 2, 4, 6, 8]], [[6], [4], [3, 8, 9], [1, 2, 3], [1, 3, 9], [2, 3, 9], [2, 3, 8], [7], [5]], [[5], [2, 3, 9], [1], [2, 3, 4, 6], [7], [8], [2, 3, 4], [6, 9], [2, 4, 6]], [[3], [7], [5], [2, 6], [8], [2, 6], [1], [4], [9]], [[1, 8, 9], [1, 9], [2], [3, 4], [3, 4, 5, 9], [3, 4, 9], [6], [5, 8], [7]], [[8, 9], [6], [4], [7], [5, 9], [1], [5, 8], [2], [3]]]]
INFO:root:Doing checkSmall1
INFO:root:Getting tiny MUSes, distance 1, for 1 puzlits, 1 repeats
INFO:root:Chunked 1 in [1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
INFO:root:Doing checkSmall2
INFO:root:Getting tiny MUSes, distance 2, for 1 puzlits, 1 repeats
INFO:root:Chunked 1 in [1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
INFO:root:Considering 100 * 1 jobs for minsize=3
INFO:root:Chunked 100 in [9, 9, 9, 9, 8, 8, 8, 8, 8, 8, 8, 8]
INFO:root:Considering 100 * 1 jobs for minsize=4
INFO:root:Chunked 100 in [9, 9, 9, 9, 8, 8, 8, 8, 8, 8, 8, 8]
INFO:root:Considering 100 * 1 jobs for minsize=5
INFO:root:Chunked 100 in [9, 9, 9, 9, 8, 8, 8, 8, 8, 8, 8, 8]
INFO:root:Considering 100 * 1 jobs for minsize=6
INFO:root:Chunked 100 in [9, 9, 9, 9, 8, 8, 8, 8, 8, 8, 8, 8]
INFO:root:Considering 100 * 1 jobs for minsize=7
INFO:root:Chunked 100 in [9, 9, 9, 9, 8, 8, 8, 8, 8, 8, 8, 8]
INFO:root:Considering 100 * 1 jobs for minsize=8
INFO:root:Chunked 100 in [9, 9, 9, 9, 8, 8, 8, 8, 8, 8, 8, 8]
INFO:root:Considering 100 * 1 jobs for minsize=9
INFO:root:Chunked 100 in [9, 9, 9, 9, 8, 8, 8, 8, 8, 8, 8, 8]
INFO:root:Considering 100 * 1 jobs for minsize=10
INFO:root:Chunked 100 in [9, 9, 9, 9, 8, 8, 8, 8, 8, 8, 8, 8]
INFO:root:Considering 100 * 1 jobs for minsize=11
INFO:root:Chunked 100 in [9, 9, 9, 9, 8, 8, 8, 8, 8, 8, 8, 8]
INFO:root:Considering 100 * 1 jobs for minsize=12
INFO:root:Chunked 100 in [9, 9, 9, 9, 8, 8, 8, 8, 8, 8, 8, 8]
INFO:root:Considering 100 * 1 jobs for minsize=13
INFO:root:Chunked 100 in [9, 9, 9, 9, 8, 8, 8, 8, 8, 8, 8, 8]
INFO:root:XX found first (2, 1) is not 1 13
INFO:root:Trace: [(13, [(2, 1) is not 1])]
INFO:root:Trace Quality: [(13, 1)]
INFO:root:Trace Sorted: [(13, 1)]
INFO:root:Finished
INFO:root:Full Trace [(13, [(2, 1) is not 1])]
INFO:root:Trying {'minPrecheckStepsMUS': True}
INFO:root:Starting Step 1
INFO:root:Current state [[[[4], [5], [3, 7], [9], [1, 3, 6], [3, 6, 7], [2, 7, 8], [1, 6, 8], [1, 2, 6, 8]], [[1, 2, 7], [1, 2, 3], [6], [8], [1, 3, 4], [3, 4, 5, 7], [9], [1, 5], [1, 4]], [[1, 7, 9], [8], [7, 9], [1, 4, 6], [2], [4, 5, 6, 7], [4, 5, 7], [3], [1, 4, 6]], [[2, 7, 9], [2, 3, 9], [3, 7, 8, 9], [5], [3, 4, 6, 9], [2, 3, 4, 6, 9], [2, 3, 4, 8], [1, 6, 8, 9], [1, 2, 4, 6, 8]], [[6], [4], [3, 8, 9], [1, 2, 3], [1, 3, 9], [2, 3, 9], [2, 3, 8], [7], [5]], [[5], [2, 3, 9], [1], [2, 3, 4, 6], [7], [8], [2, 3, 4], [6, 9], [2, 4, 6]], [[3], [7], [5], [2, 6], [8], [2, 6], [1], [4], [9]], [[1, 8, 9], [1, 9], [2], [3, 4], [3, 4, 5, 9], [3, 4, 9], [6], [5, 8], [7]], [[8, 9], [6], [4], [7], [5, 9], [1], [5, 8], [2], [3]]]]
INFO:root:Doing checkSmall1
INFO:root:Getting tiny MUSes, distance 1, for 1 puzlits, 1 repeats
INFO:root:Chunked 1 in [1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
INFO:root:Doing checkSmall2
INFO:root:Getting tiny MUSes, distance 2, for 1 puzlits, 1 repeats
INFO:root:Chunked 1 in [1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
INFO:root:Considering 100 * 1 jobs for minsize=3
INFO:root:Chunked 100 in [9, 9, 9, 9, 8, 8, 8, 8, 8, 8, 8, 8]
INFO:root:Considering 100 * 1 jobs for minsize=4
INFO:root:Chunked 100 in [9, 9, 9, 9, 8, 8, 8, 8, 8, 8, 8, 8]
INFO:root:Considering 100 * 1 jobs for minsize=5
INFO:root:Chunked 100 in [9, 9, 9, 9, 8, 8, 8, 8, 8, 8, 8, 8]
INFO:root:Considering 100 * 1 jobs for minsize=6
INFO:root:Chunked 100 in [9, 9, 9, 9, 8, 8, 8, 8, 8, 8, 8, 8]
INFO:root:Considering 100 * 1 jobs for minsize=7
INFO:root:Chunked 100 in [9, 9, 9, 9, 8, 8, 8, 8, 8, 8, 8, 8]
INFO:root:Considering 100 * 1 jobs for minsize=8
INFO:root:Chunked 100 in [9, 9, 9, 9, 8, 8, 8, 8, 8, 8, 8, 8]
INFO:root:Considering 100 * 1 jobs for minsize=9
INFO:root:Chunked 100 in [9, 9, 9, 9, 8, 8, 8, 8, 8, 8, 8, 8]
INFO:root:Considering 100 * 1 jobs for minsize=10
INFO:root:Chunked 100 in [9, 9, 9, 9, 8, 8, 8, 8, 8, 8, 8, 8]
INFO:root:Considering 100 * 1 jobs for minsize=11
INFO:root:Chunked 100 in [9, 9, 9, 9, 8, 8, 8, 8, 8, 8, 8, 8]
INFO:root:Considering 100 * 1 jobs for minsize=12
INFO:root:Chunked 100 in [9, 9, 9, 9, 8, 8, 8, 8, 8, 8, 8, 8]
INFO:root:Considering 100 * 1 jobs for minsize=13
INFO:root:Chunked 100 in [9, 9, 9, 9, 8, 8, 8, 8, 8, 8, 8, 8]
INFO:root:Considering 100 * 1 jobs for minsize=14
INFO:root:Chunked 100 in [9, 9, 9, 9, 8, 8, 8, 8, 8, 8, 8, 8]
INFO:root:XX found first (2, 1) is not 1 14
INFO:root:XX add new best (2, 1) is not 1 14 14
INFO:root:Trace: [(14, [(2, 1) is not 1])]
INFO:root:Trace Quality: [(14, 1)]
INFO:root:Trace Sorted: [(14, 1)]
INFO:root:Finished
INFO:root:Full Trace [(14, [(2, 1) is not 1])]
INFO:root:Trying {'gallopingMUSes': True, 'minPrecheckMUS': True}
INFO:root:Starting Step 1
INFO:root:Current state [[[[4], [5], [3, 7], [9], [1, 3, 6], [3, 6, 7], [2, 7, 8], [1, 6, 8], [1, 2, 6, 8]], [[1, 2, 7], [1, 2, 3], [6], [8], [1, 3, 4], [3, 4, 5, 7], [9], [1, 5], [1, 4]], [[1, 7, 9], [8], [7, 9], [1, 4, 6], [2], [4, 5, 6, 7], [4, 5, 7], [3], [1, 4, 6]], [[2, 7, 9], [2, 3, 9], [3, 7, 8, 9], [5], [3, 4, 6, 9], [2, 3, 4, 6, 9], [2, 3, 4, 8], [1, 6, 8, 9], [1, 2, 4, 6, 8]], [[6], [4], [3, 8, 9], [1, 2, 3], [1, 3, 9], [2, 3, 9], [2, 3, 8], [7], [5]], [[5], [2, 3, 9], [1], [2, 3, 4, 6], [7], [8], [2, 3, 4], [6, 9], [2, 4, 6]], [[3], [7], [5], [2, 6], [8], [2, 6], [1], [4], [9]], [[1, 8, 9], [1, 9], [2], [3, 4], [3, 4, 5, 9], [3, 4, 9], [6], [5, 8], [7]], [[8, 9], [6], [4], [7], [5, 9], [1], [5, 8], [2], [3]]]]
INFO:root:Doing checkSmall1
INFO:root:Getting tiny MUSes, distance 1, for 1 puzlits, 1 repeats
INFO:root:Chunked 1 in [1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
INFO:root:Doing checkSmall2
INFO:root:Getting tiny MUSes, distance 2, for 1 puzlits, 1 repeats
INFO:root:Chunked 1 in [1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
INFO:root:Considering 100 * 1 jobs for minsize=3
INFO:root:Chunked 100 in [9, 9, 9, 9, 8, 8, 8, 8, 8, 8, 8, 8]
INFO:root:Considering 100 * 1 jobs for minsize=4
INFO:root:Chunked 100 in [9, 9, 9, 9, 8, 8, 8, 8, 8, 8, 8, 8]
INFO:root:Considering 100 * 1 jobs for minsize=5
INFO:root:Chunked 100 in [9, 9, 9, 9, 8, 8, 8, 8, 8, 8, 8, 8]
INFO:root:Considering 100 * 1 jobs for minsize=6
INFO:root:Chunked 100 in [9, 9, 9, 9, 8, 8, 8, 8, 8, 8, 8, 8]
INFO:root:Considering 100 * 1 jobs for minsize=7
INFO:root:Chunked 100 in [9, 9, 9, 9, 8, 8, 8, 8, 8, 8, 8, 8]
INFO:root:Considering 100 * 1 jobs for minsize=8
INFO:root:Chunked 100 in [9, 9, 9, 9, 8, 8, 8, 8, 8, 8, 8, 8]
INFO:root:Considering 100 * 1 jobs for minsize=9
INFO:root:Chunked 100 in [9, 9, 9, 9, 8, 8, 8, 8, 8, 8, 8, 8]
INFO:root:Considering 100 * 1 jobs for minsize=10
INFO:root:Chunked 100 in [9, 9, 9, 9, 8, 8, 8, 8, 8, 8, 8, 8]
INFO:root:Considering 100 * 1 jobs for minsize=11
INFO:root:Chunked 100 in [9, 9, 9, 9, 8, 8, 8, 8, 8, 8, 8, 8]
INFO:root:Considering 100 * 1 jobs for minsize=12
INFO:root:Chunked 100 in [9, 9, 9, 9, 8, 8, 8, 8, 8, 8, 8, 8]
INFO:root:Considering 100 * 1 jobs for minsize=13
INFO:root:Chunked 100 in [9, 9, 9, 9, 8, 8, 8, 8, 8, 8, 8, 8]
INFO:root:Considering 100 * 1 jobs for minsize=14
INFO:root:Chunked 100 in [9, 9, 9, 9, 8, 8, 8, 8, 8, 8, 8, 8]
INFO:root:XX found first (2, 1) is not 1 15
INFO:root:XX found new best (2, 1) is not 1 15 14
INFO:root:XX add new best (2, 1) is not 1 14 14
INFO:root:Trace: [(14, [(2, 1) is not 1])]
INFO:root:Trace Quality: [(14, 1)]
INFO:root:Trace Sorted: [(14, 1)]
INFO:root:Finished
INFO:root:Full Trace [(14, [(2, 1) is not 1])]
INFO:root:Trying {}
INFO:root:Starting Step 1
INFO:root:Current state [[[[1, 3, 5], [7], [2], [1, 5, 9], [8], [3, 5], [6], [4], [5, 9]], [[1, 3, 4, 5], [9], [6], [7], [1, 2], [2, 3, 4, 5], [8], [2, 3, 5], [2, 5]], [[3, 4, 5], [3, 5], [8], [6], [2, 9], [2, 3, 4, 5], [2, 3, 5, 7, 9], [2, 3, 5, 7, 9], [1]], [[5, 7, 9], [2, 5], [5, 7, 9], [3], [1, 2, 6, 7, 9], [2, 6], [1, 2, 9], [8], [4]], [[6], [8], [1], [4, 9], [2, 4, 7, 9], [2, 7], [2, 3, 5, 9], [2, 3, 5, 9], [2, 5, 7, 9]], [[3, 7, 9], [2, 3], [4], [1, 9], [5], [8], [1, 2, 9], [6], [2, 7, 9]], [[2], [1], [5, 7], [8], [3], [9], [4], [5, 7], [6]], [[8], [4], [5, 7, 9], [2], [6, 7], [5, 6, 7], [5, 7, 9], [1], [3]], [[5, 7, 9], [6], [3], [4, 5], [4, 7], [1], [2, 5, 7, 9], [2, 5, 7, 9], [8]]]]
INFO:root:Doing checkSmall1
INFO:root:Getting tiny MUSes, distance 1, for 1 puzlits, 1 repeats
INFO:root:Chunked 1 in [1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
INFO:root:Doing checkSmall2
INFO:root:Getting tiny MUSes, distance 2, for 1 puzlits, 1 repeats
INFO:root:Chunked 1 in [1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
INFO:root:Considering 100 * 1 jobs for minsize=3
INFO:root:Chunked 100 in [9, 9, 9, 9, 8, 8, 8, 8, 8, 8, 8, 8]
INFO:root:Considering 100 * 1 jobs for minsize=4
INFO:root:Chunked 100 in [9, 9, 9, 9, 8, 8, 8, 8, 8, 8, 8, 8]
INFO:root:Considering 100 * 1 jobs for minsize=5
INFO:root:Chunked 100 in [9, 9, 9, 9, 8, 8, 8, 8, 8, 8, 8, 8]
INFO:root:Considering 100 * 1 jobs for minsize=6
INFO:root:Chunked 100 in [9, 9, 9, 9, 8, 8, 8, 8, 8, 8, 8, 8]
INFO:root:Considering 100 * 1 jobs for minsize=7
INFO:root:Chunked 100 in [9, 9, 9, 9, 8, 8, 8, 8, 8, 8, 8, 8]
INFO:root:Considering 100 * 1 jobs for minsize=8
INFO:root:Chunked 100 in [9, 9, 9, 9, 8, 8, 8, 8, 8, 8, 8, 8]
INFO:root:Considering 100 * 1 jobs for minsize=9
INFO:root:Chunked 100 in [9, 9, 9, 9, 8, 8, 8, 8, 8, 8, 8, 8]
INFO:root:Considering 100 * 1 jobs for minsize=10
INFO:root:Chunked 100 in [9, 9, 9, 9, 8, 8, 8, 8, 8, 8, 8, 8]
INFO:root:Considering 100 * 1 jobs for minsize=11
INFO:root:Chunked 100 in [9, 9, 9, 9, 8, 8, 8, 8, 8, 8, 8, 8]
INFO:root:XX found first (5, 5) is not 2 12
INFO:root:XX add new best (5, 5) is not 2 12 12
INFO:root:XX add new best (5, 5) is not 2 12 12
INFO:root:XX add new best (5, 5) is not 2 12 12
INFO:root:XX add new best (5, 5) is not 2 12 12
INFO:root:XX add new best (5, 5) is not 2 12 12
INFO:root:XX add new best (5, 5) is not 2 12 12
INFO:root:XX add new best (5, 5) is not 2 12 12
INFO:root:XX add new best (5, 5) is not 2 12 12
INFO:root:XX add new best (5, 5) is not 2 12 12
INFO:root:XX add new best (5, 5) is not 2 12 12
INFO:root:XX add new best (5, 5) is not 2 12 12
INFO:root:XX add new best (5, 5) is not 2 12 12
INFO:root:XX add new best (5, 5) is not 2 12 12
INFO:root:XX add new best (5, 5) is not 2 12 12
INFO:root:XX add new best (5, 5) is not 2 12 12
INFO:root:XX add new best (5, 5) is not 2 12 12
INFO:root:XX add new best (5, 5) is not 2 12 12
INFO:root:XX add new best (5, 5) is not 2 12 12
INFO:root:XX add new best (5, 5) is not 2 12 12
INFO:root:XX add new best (5, 5) is not 2 12 12
INFO:root:XX add new best (5, 5) is not 2 12 12
INFO:root:XX add new best (5, 5) is not 2 12 12
INFO:root:XX add new best (5, 5) is not 2 12 12
INFO:root:XX add new best (5, 5) is not 2 12 12
INFO:root:XX add new best (5, 5) is not 2 12 12
INFO:root:XX add new best (5, 5) is not 2 12 12
INFO:root:XX add new best (5, 5) is not 2 12 12
INFO:root:XX add new best (5, 5) is not 2 12 12
INFO:root:XX add new best (5, 5) is not 2 12 12
INFO:root:XX add new best (5, 5) is not 2 12 12
INFO:root:XX add new best (5, 5) is not 2 12 12
INFO:root:XX add new best (5, 5) is not 2 12 12
INFO:root:XX add new best (5, 5) is not 2 12 12
INFO:root:XX add new best (5, 5) is not 2 12 12
INFO:root:XX add new best (5, 5) is not 2 12 12
INFO:root:XX add new best (5, 5) is not 2 12 12
INFO:root:XX add new best (5, 5) is not 2 12 12
INFO:root:XX add new best (5, 5) is not 2 12 12
INFO:root:XX add new best (5, 5) is not 2 12 12
INFO:root:XX add new best (5, 5) is not 2 12 12
INFO:root:XX add new best (5, 5) is not 2 12 12
INFO:root:XX add new best (5, 5) is not 2 12 12
INFO:root:XX add new best (5, 5) is not 2 12 12
INFO:root:XX add new best (5, 5) is not 2 12 12
INFO:root:XX add new best (5, 5) is not 2 12 12
INFO:root:XX add new best (5, 5) is not 2 12 12
INFO:root:XX add new best (5, 5) is not 2 12 12
INFO:root:XX add new best (5, 5) is not 2 12 12
INFO:root:XX add new best (5, 5) is not 2 12 12
INFO:root:XX add new best (5, 5) is not 2 12 12
INFO:root:XX add new best (5, 5) is not 2 12 12
INFO:root:XX add new best (5, 5) is not 2 12 12
INFO:root:XX add new best (5, 5) is not 2 12 12
INFO:root:XX add new best (5, 5) is not 2 12 12
INFO:root:XX add new best (5, 5) is not 2 12 12
INFO:root:XX add new best (5, 5) is not 2 12 12
INFO:root:XX add new best (5, 5) is not 2 12 12
INFO:root:XX add new best (5, 5) is not 2 12 12
INFO:root:XX add new best (5, 5) is not 2 12 12
INFO:root:XX add new best (5, 5) is not 2 12 12
INFO:root:XX add new best (5, 5) is not 2 12 12
INFO:root:XX add new best (5, 5) is not 2 12 12
INFO:root:XX add new best (5, 5) is not 2 12 12
INFO:root:XX add new best (5, 5) is not 2 12 12
INFO:root:XX add new best (5, 5) is not 2 12 12
INFO:root:XX add new best (5, 5) is not 2 12 12
INFO:root:XX add new best (5, 5) is not 2 12 12
INFO:root:XX add new best (5, 5) is not 2 12 12
INFO:root:XX add new best (5, 5) is not 2 12 12
INFO:root:XX add new best (5, 5) is not 2 12 12
INFO:root:XX add new best (5, 5) is not 2 12 12
INFO:root:XX add new best (5, 5) is not 2 12 12
INFO:root:XX add new best (5, 5) is not 2 12 12
INFO:root:XX add new best (5, 5) is not 2 12 12
INFO:root:Considering 100 * 1 jobs for minsize=12
INFO:root:Chunked 100 in [9, 9, 9, 9, 8, 8, 8, 8, 8, 8, 8, 8]
INFO:root:XX add new best (5, 5) is not 2 12 12
INFO:root:XX add new best (5, 5) is not 2 12 12
INFO:root:XX add new best (5, 5) is not 2 12 12
INFO:root:XX add new best (5, 5) is not 2 12 12
INFO:root:XX add new best (5, 5) is not 2 12 12
INFO:root:XX add new best (5, 5) is not 2 12 12
INFO:root:XX add new best (5, 5) is not 2 12 12
INFO:root:XX add new best (5, 5) is not 2 12 12
INFO:root:XX add new best (5, 5) is not 2 12 12
INFO:root:XX add new best (5, 5) is not 2 12 12
INFO:root:XX add new best (5, 5) is not 2 12 12
INFO:root:XX add new best (5, 5) is not 2 12 12
INFO:root:XX add new best (5, 5) is not 2 12 12
INFO:root:XX add new best (5, 5) is not 2 12 12
INFO:root:XX add new best (5, 5) is not 2 12 12
INFO:root:XX add new best (5, 5) is not 2 12 12
INFO:root:XX add new best (5, 5) is not 2 12 12
INFO:root:XX add new best (5, 5) is not 2 12 12
INFO:root:XX add new best (5, 5) is not 2 12 12
INFO:root:XX add new best (5, 5) is not 2 12 12
INFO:root:XX add new best (5, 5) is not 2 12 12
INFO:root:XX add new best (5, 5) is not 2 12 12
INFO:root:XX add new best (5, 5) is not 2 12 12
INFO:root:XX add new best (5, 5) is not 2 12 12
INFO:root:XX add new best (5, 5) is not 2 12 12
INFO:root:XX add new best (5, 5) is not 2 12 12
INFO:root:XX add new best (5, 5) is not 2 12 12
INFO:root:XX add new best (5, 5) is not 2 12 12
INFO:root:XX add new best (5, 5) is not 2 12 12
INFO:root:XX add new best (5, 5) is not 2 12 12
INFO:root:XX add new best (5, 5) is not 2 12 12
INFO:root:XX add new best (5, 5) is not 2 12 12
INFO:root:XX add new best (5, 5) is not 2 12 12
INFO:root:XX add new best (5, 5) is not 2 12 12
INFO:root:XX add new best (5, 5) is not 2 12 12
INFO:root:XX add new best (5, 5) is not 2 12 12
INFO:root:XX add new best (5, 5) is not 2 12 12
INFO:root:XX add new best (5, 5) is not 2 12 12
INFO:root:XX add new best (5, 5) is not 2 12 12
INFO:root:XX add new best (5, 5) is not 2 12 12
INFO:root:XX add new best (5, 5) is not 2 12 12
INFO:root:XX add new best (5, 5) is not 2 12 12
INFO:root:XX add new best (5, 5) is not 2 12 12
INFO:root:XX add new best (5, 5) is not 2 12 12
INFO:root:XX add new best (5, 5) is not 2 12 12
INFO:root:XX add new best (5, 5) is not 2 12 12
INFO:root:XX add new best (5, 5) is not 2 12 12
INFO:root:XX add new best (5, 5) is not 2 12 12
INFO:root:XX add new best (5, 5) is not 2 12 12
INFO:root:XX add new best (5, 5) is not 2 12 12
INFO:root:XX add new best (5, 5) is not 2 12 12
INFO:root:XX add new best (5, 5) is not 2 12 12
INFO:root:XX add new best (5, 5) is not 2 12 12
INFO:root:XX add new best (5, 5) is not 2 12 12
INFO:root:XX add new best (5, 5) is not 2 12 12
INFO:root:XX add new best (5, 5) is not 2 12 12
INFO:root:XX add new best (5, 5) is not 2 12 12
INFO:root:XX add new best (5, 5) is not 2 12 12
INFO:root:XX add new best (5, 5) is not 2 12 12
INFO:root:XX add new best (5, 5) is not 2 12 12
INFO:root:XX add new best (5, 5) is not 2 12 12
INFO:root:XX add new best (5, 5) is not 2 12 12
INFO:root:XX add new best (5, 5) is not 2 12 12
INFO:root:XX add new best (5, 5) is not 2 12 12
INFO:root:XX add new best (5, 5) is not 2 12 12
INFO:root:XX add new best (5, 5) is not 2 12 12
INFO:root:XX add new best (5, 5) is not 2 12 12
INFO:root:XX add new best (5, 5) is not 2 12 12
INFO:root:XX add new best (5, 5) is not 2 12 12
INFO:root:XX add new best (5, 5) is not 2 12 12
INFO:root:XX add new best (5, 5) is not 2 12 12
INFO:root:XX add new best (5, 5) is not 2 12 12
INFO:root:XX add new best (5, 5) is not 2 12 12
INFO:root:XX add new best (5, 5) is not 2 12 12
INFO:root:XX add new best (5, 5) is not 2 12 12
INFO:root:Trace: [(12, [(5, 5) is not 2])]
INFO:root:Trace Quality: [(12, 1)]
INFO:root:Trace Sorted: [(12, 1)]
INFO:root:Finished
INFO:root:Full Trace [(12, [(5, 5) is not 2])]
INFO:root:Trying {'prechopMUSes': True}
INFO:root:Starting Step 1
INFO:root:Current state [[[[1, 3, 5], [7], [2], [1, 5, 9], [8], [3, 5], [6], [4], [5, 9]], [[1, 3, 4, 5], [9], [6], [7], [1, 2], [2, 3, 4, 5], [8], [2, 3, 5], [2, 5]], [[3, 4, 5], [3, 5], [8], [6], [2, 9], [2, 3, 4, 5], [2, 3, 5, 7, 9], [2, 3, 5, 7, 9], [1]], [[5, 7, 9], [2, 5], [5, 7, 9], [3], [1, 2, 6, 7, 9], [2, 6], [1, 2, 9], [8], [4]], [[6], [8], [1], [4, 9], [2, 4, 7, 9], [2, 7], [2, 3, 5, 9], [2, 3, 5, 9], [2, 5, 7, 9]], [[3, 7, 9], [2, 3], [4], [1, 9], [5], [8], [1, 2, 9], [6], [2, 7, 9]], [[2], [1], [5, 7], [8], [3], [9], [4], [5, 7], [6]], [[8], [4], [5, 7, 9], [2], [6, 7], [5, 6, 7], [5, 7, 9], [1], [3]], [[5, 7, 9], [6], [3], [4, 5], [4, 7], [1], [2, 5, 7, 9], [2, 5, 7, 9], [8]]]]
INFO:root:Doing checkSmall1
INFO:root:Getting tiny MUSes, distance 1, for 1 puzlits, 1 repeats
INFO:root:Chunked 1 in [1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
INFO:root:Doing checkSmall2
INFO:root:Getting tiny MUSes, distance 2, for 1 puzlits, 1 repeats
INFO:root:Chunked 1 in [1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
INFO:root:Considering 100 * 1 jobs for minsize=3
INFO:root:Chunked 100 in [9, 9, 9, 9, 8, 8, 8, 8, 8, 8, 8, 8]
INFO:root:Considering 100 * 1 jobs for minsize=4
INFO:root:Chunked 100 in [9, 9, 9, 9, 8, 8, 8, 8, 8, 8, 8, 8]
INFO:root:Considering 100 * 1 jobs for minsize=5
INFO:root:Chunked 100 in [9, 9, 9, 9, 8, 8, 8, 8, 8, 8, 8, 8]
INFO:root:Considering 100 * 1 jobs for minsize=6
INFO:root:Chunked 100 in [9, 9, 9, 9, 8, 8, 8, 8, 8, 8, 8, 8]
INFO:root:Considering 100 * 1 jobs for minsize=7
INFO:root:Chunked 100 in [9, 9, 9, 9, 8, 8, 8, 8, 8, 8, 8, 8]
INFO:root:Considering 100 * 1 jobs for minsize=8
INFO:root:Chunked 100 in [9, 9, 9, 9, 8, 8, 8, 8, 8, 8, 8, 8]
INFO:root:Considering 100 * 1 jobs for minsize=9
INFO:root:Chunked 100 in [9, 9, 9, 9, 8, 8, 8, 8, 8, 8, 8, 8]
INFO:root:Considering 100 * 1 jobs for minsize=10
INFO:root:Chunked 100 in [9, 9, 9, 9, 8, 8, 8, 8, 8, 8, 8, 8]
INFO:root:Considering 100 * 1 jobs for minsize=11
INFO:root:Chunked 100 in [9, 9, 9, 9, 8, 8, 8, 8, 8, 8, 8, 8]
INFO:root:XX found first (5, 5) is not 2 12
INFO:root:XX add new best (5, 5) is not 2 12 12
INFO:root:XX add new best (5, 5) is not 2 12 12
INFO:root:XX add new best (5, 5) is not 2 12 12
INFO:root:XX add new best (5, 5) is not 2 12 12
INFO:root:XX add new best (5, 5) is not 2 12 12
INFO:root:Considering 100 * 1 jobs for minsize=12
INFO:root:Chunked 100 in [9, 9, 9, 9, 8, 8, 8, 8, 8, 8, 8, 8]
INFO:root:XX add new best (5, 5) is not 2 12 12
INFO:root:XX add new best (5, 5) is not 2 12 12
INFO:root:XX add new best (5, 5) is not 2 12 12
INFO:root:XX add new best (5, 5) is not 2 12 12
INFO:root:XX add new best (5, 5) is not 2 12 12
INFO:root:XX add new best (5, 5) is not 2 12 12
INFO:root:XX add new best (5, 5) is not 2 12 12
INFO:root:XX add new best (5, 5) is not 2 12 12
INFO:root:XX add new best (5, 5) is not 2 12 12
INFO:root:XX add new best (5, 5) is not 2 12 12
INFO:root:XX add new best (5, 5) is not 2 12 12
INFO:root:Trace: [(12, [(5, 5) is not 2])]
INFO:root:Trace Quality: [(12, 1)]
INFO:root:Trace Sorted: [(12, 1)]
INFO:root:Finished
INFO:root:Full Trace [(12, [(5, 5) is not 2])]
INFO:root:Trying {'quarterChopMUS': True}
INFO:root:Starting Step 1
INFO:root:Current state [[[[1, 3, 5], [7], [2], [1, 5, 9], [8], [3, 5], [6], [4], [5, 9]], [[1, 3, 4, 5], [9], [6], [7], [1, 2], [2, 3, 4, 5], [8], [2, 3, 5], [2, 5]], [[3, 4, 5], [3, 5], [8], [6], [2, 9], [2, 3, 4, 5], [2, 3, 5, 7, 9], [2, 3, 5, 7, 9], [1]], [[5, 7, 9], [2, 5], [5, 7, 9], [3], [1, 2, 6, 7, 9], [2, 6], [1, 2, 9], [8], [4]], [[6], [8], [1], [4, 9], [2, 4, 7, 9], [2, 7], [2, 3, 5, 9], [2, 3, 5, 9], [2, 5, 7, 9]], [[3, 7, 9], [2, 3], [4], [1, 9], [5], [8], [1, 2, 9], [6], [2, 7, 9]], [[2], [1], [5, 7], [8], [3], [9], [4], [5, 7], [6]], [[8], [4], [5, 7, 9], [2], [6, 7], [5, 6, 7], [5, 7, 9], [1], [3]], [[5, 7, 9], [6], [3], [4, 5], [4, 7], [1], [2, 5, 7, 9], [2, 5, 7, 9], [8]]]]
INFO:root:Doing checkSmall1
INFO:root:Getting tiny MUSes, distance 1, for 1 puzlits, 1 repeats
INFO:root:Chunked 1 in [1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
INFO:root:Doing checkSmall2
INFO:root:Getting tiny MUSes, distance 2, for 1 puzlits, 1 repeats
INFO:root:Chunked 1 in [1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
INFO:root:Considering 100 * 1 jobs for minsize=3
INFO:root:Chunked 100 in [9, 9, 9, 9, 8, 8, 8, 8, 8, 8, 8, 8]
INFO:root:Considering 100 * 1 jobs for minsize=4
INFO:root:Chunked 100 in [9, 9, 9, 9, 8, 8, 8, 8, 8, 8, 8, 8]
INFO:root:Considering 100 * 1 jobs for minsize=5
INFO:root:Chunked 100 in [9, 9, 9, 9, 8, 8, 8, 8, 8, 8, 8, 8]
INFO:root:Considering 100 * 1 jobs for minsize=6
INFO:root:Chunked 100 in [9, 9, 9, 9, 8, 8, 8, 8, 8, 8, 8, 8]
INFO:root:Considering 100 * 1 jobs for minsize=7
INFO:root:Chunked 100 in [9, 9, 9, 9, 8, 8, 8, 8, 8, 8, 8, 8]
INFO:root:Considering 100 * 1 jobs for minsize=8
INFO:root:Chunked 100 in [9, 9, 9, 9, 8, 8, 8, 8, 8, 8, 8, 8]
INFO:root:Considering 100 * 1 jobs for minsize=9
INFO:root:Chunked 100 in [9, 9, 9, 9, 8, 8, 8, 8, 8, 8, 8, 8]
INFO:root:Considering 100 * 1 jobs for minsize=10
INFO:root:Chunked 100 in [9, 9, 9, 9, 8, 8, 8, 8, 8, 8, 8, 8]
INFO:root:Considering 100 * 1 jobs for minsize=11
INFO:root:Chunked 100 in [9, 9, 9, 9, 8, 8, 8, 8, 8, 8, 8, 8]
INFO:root:XX found first (5, 5) is not 2 12
INFO:root:XX add new best (5, 5) is not 2 12 12
INFO:root:XX add new best (5, 5) is not 2 12 12
INFO:root:XX add new best (5, 5) is not 2 12 12
INFO:root:XX add new best (5, 5) is not 2 12 12
INFO:root:XX add new best (5, 5) is not 2 12 12
INFO:root:XX add new best (5, 5) is not 2 12 12
INFO:root:XX add new best (5, 5) is not 2 12 12
INFO:root:XX add new best (5, 5) is not 2 12 12
INFO:root:XX add new best (5, 5) is not 2 12 12
INFO:root:XX add new best (5, 5) is not 2 12 12
INFO:root:XX add new best (5, 5) is not 2 12 12
INFO:root:XX add new best (5, 5) is not 2 12 12
INFO:root:XX add new best (5, 5) is not 2 12 12
INFO:root:XX add new best (5, 5) is not 2 12 12
INFO:root:XX add new best (5, 5) is not 2 12 12
INFO:root:XX add new best (5, 5) is not 2 12 12
INFO:root:Considering 100 * 1 jobs for minsize=12
INFO:root:Chunked 100 in [9, 9, 9, 9, 8, 8, 8, 8, 8, 8, 8, 8]
INFO:root:XX add new best (5, 5) is not 2 12 12
INFO:root:XX add new best (5, 5) is not 2 12 12
INFO:root:XX add new best (5, 5) is not 2 12 12
INFO:root:XX add new best (5, 5) is not 2 12 12
INFO:root:XX add new best (5, 5) is not 2 12 12
INFO:root:XX add new best (5, 5) is not 2 12 12
INFO:root:XX add new best (5, 5) is not 2 12 12
INFO:root:XX add new best (5, 5) is not 2 12 12
INFO:root:XX add new best (5, 5) is not 2 12 12
INFO:root:XX add new best (5, 5) is not 2 12 12
INFO:root:XX add new best (5, 5) is not 2 12 12
INFO:root:XX add new best (5, 5) is not 2 12 12
INFO:root:XX add new best (5, 5) is not 2 12 12
INFO:root:XX add new best (5, 5) is not 2 12 12
INFO:root:XX add new best (5, 5) is not 2 12 12
INFO:root:XX add new best (5, 5) is not 2 12 12
INFO:root:XX add new best (5, 5) is not 2 12 12
INFO:root:XX add new best (5, 5) is not 2 12 12
INFO:root:XX add new best (5, 5) is not 2 12 12
INFO:root:XX add new best (5, 5) is not 2 12 12
INFO:root:XX add new best (5, 5) is not 2 12 12
INFO:root:XX add new best (5, 5) is not 2 12 12
INFO:root:XX add new best (5, 5) is not 2 12 12
INFO:root:XX add new best (5, 5) is not 2 12 12
INFO:root:XX add new best (5, 5) is not 2 12 12
INFO:root:XX add new best (5, 5) is not 2 12 12
INFO:root:XX add new best (5, 5) is not 2 12 12
INFO:root:XX add new best (5, 5) is not 2 12 12
INFO:root:XX add new best (5, 5) is not 2 12 12
INFO:root:XX add new best (5, 5) is not 2 12 12
INFO:root:XX add new best (5, 5) is not 2 12 12
INFO:root:XX add new best (5, 5) is not 2 12 12
INFO:root:XX add new best (5, 5) is not 2 12 12
INFO:root:XX add new best (5, 5) is not 2 12 12
INFO:root:XX add new best (5, 5) is not 2 12 12
INFO:root:XX add new best (5, 5) is not 2 12 12
INFO:root:XX add new best (5, 5) is not 2 12 12
INFO:root:XX add new best (5, 5) is not 2 12 12
INFO:root:XX add new best (5, 5) is not 2 12 12
INFO:root:XX add new best (5, 5) is not 2 12 12
INFO:root:XX add new best (5, 5) is not 2 12 12
INFO:root:XX add new best (5, 5) is not 2 12 12
INFO:root:XX add new best (5, 5) is not 2 12 12
INFO:root:Trace: [(12, [(5, 5) is not 2])]
INFO:root:Trace Quality: [(12, 1)]
INFO:root:Trace Sorted: [(12, 1)]
INFO:root:Finished
INFO:root:Full Trace [(12, [(5, 5) is not 2])]
INFO:root:Trying {'minPrecheckMUS': True}
INFO:root:Starting Step 1
INFO:root:Current state [[[[1, 3, 5], [7], [2], [1, 5, 9], [8], [3, 5], [6], [4], [5, 9]], [[1, 3, 4, 5], [9], [6], [7], [1, 2], [2, 3, 4, 5], [8], [2, 3, 5], [2, 5]], [[3, 4, 5], [3, 5], [8], [6], [2, 9], [2, 3, 4, 5], [2, 3, 5, 7, 9], [2, 3, 5, 7, 9], [1]], [[5, 7, 9], [2, 5], [5, 7, 9], [3], [1, 2, 6, 7, 9], [2, 6], [1, 2, 9], [8], [4]], [[6], [8], [1], [4, 9], [2, 4, 7, 9], [2, 7], [2, 3, 5, 9], [2, 3, 5, 9], [2, 5, 7, 9]], [[3, 7, 9], [2, 3], [4], [1, 9], [5], [8], [1, 2, 9], [6], [2, 7, 9]], [[2], [1], [5, 7], [8], [3], [9], [4], [5, 7], [6]], [[8], [4], [5, 7, 9], [2], [6, 7], [5, 6, 7], [5, 7, 9], [1], [3]], [[5, 7, 9], [6], [3], [4, 5], [4, 7], [1], [2, 5, 7, 9], [2, 5, 7, 9], [8]]]]
INFO:root:Doing checkSmall1
INFO:root:Getting tiny MUSes, distance 1, for 1 puzlits, 1 repeats
INFO:root:Chunked 1 in [1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
INFO:root:Doing checkSmall2
INFO:root:Getting tiny MUSes, distance 2, for 1 puzlits, 1 repeats
INFO:root:Chunked 1 in [1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
INFO:root:Considering 100 * 1 jobs for minsize=3
INFO:root:Chunked 100 in [9, 9, 9, 9, 8, 8, 8, 8, 8, 8, 8, 8]
INFO:root:Considering 100 * 1 jobs for minsize=4
INFO:root:Chunked 100 in [9, 9, 9, 9, 8, 8, 8, 8, 8, 8, 8, 8]
INFO:root:Considering 100 * 1 jobs for minsize=5
INFO:root:Chunked 100 in [9, 9, 9, 9, 8, 8, 8, 8, 8, 8, 8, 8]
INFO:root:Considering 100 * 1 jobs for minsize=6
INFO:root:Chunked 100 in [9, 9, 9, 9, 8, 8, 8, 8, 8, 8, 8, 8]
INFO:root:Considering 100 * 1 jobs for minsize=7
INFO:root:Chunked 100 in [9, 9, 9, 9, 8, 8, 8, 8, 8, 8, 8, 8]
INFO:root:Considering 100 * 1 jobs for minsize=8
INFO:root:Chunked 100 in [9, 9, 9, 9, 8, 8, 8, 8, 8, 8, 8, 8]
INFO:root:Considering 100 * 1 jobs for minsize=9
INFO:root:Chunked 100 in [9, 9, 9, 9, 8, 8, 8, 8, 8, 8, 8, 8]
INFO:root:Considering 100 * 1 jobs for minsize=10
INFO:root:Chunked 100 in [9, 9, 9, 9, 8, 8, 8, 8, 8, 8, 8, 8]
INFO:root:Considering 100 * 1 jobs for minsize=11
INFO:root:Chunked 100 in [9, 9, 9, 9, 8, 8, 8, 8, 8, 8, 8, 8]
INFO:root:XX found first (5, 5) is not 2 12
INFO:root:XX add new best (5, 5) is not 2 12 12
INFO:root:XX add new best (5, 5) is not 2 12 12
INFO:root:XX add new best (5, 5) is not 2 12 12
INFO:root:XX add new best (5, 5) is not 2 12 12
INFO:root:XX add new best (5, 5) is not 2 12 12
INFO:root:XX add new best (5, 5) is not 2 12 12
INFO:root:Considering 100 * 1 jobs for minsize=12
INFO:root:Chunked 100 in [9, 9, 9, 9, 8, 8, 8, 8, 8, 8, 8, 8]
INFO:root:XX add new best (5, 5) is not 2 12 12
INFO:root:XX add new best (5, 5) is not 2 12 12
INFO:root:XX add new best (5, 5) is not 2 12 12
INFO:root:XX add new best (5, 5) is not 2 12 12
INFO:root:XX add new best (5, 5) is not 2 12 12
INFO:root:XX add new best (5, 5) is not 2 12 12
INFO:root:XX add new best (5, 5) is not 2 12 12
INFO:root:Trace: [(12, [(5, 5) is not 2])]
INFO:root:Trace Quality: [(12, 1)]
INFO:root:Trace Sorted: [(12, 1)]
INFO:root:Finished
INFO:root:Full Trace [(12, [(5, 5) is not 2])]
INFO:root:Trying {'gallopingMUSes': True}
INFO:root:Starting Step 1
INFO:root:Current state [[[[1, 3, 5], [7], [2], [1, 5, 9], [8], [3, 5], [6], [4], [5, 9]], [[1, 3, 4, 5], [9], [6], [7], [1, 2], [2, 3, 4, 5], [8], [2, 3, 5], [2, 5]], [[3, 4, 5], [3, 5], [8], [6], [2, 9], [2, 3, 4, 5], [2, 3, 5, 7, 9], [2, 3, 5, 7, 9], [1]], [[5, 7, 9], [2, 5], [5, 7, 9], [3], [1, 2, 6, 7, 9], [2, 6], [1, 2, 9], [8], [4]], [[6], [8], [1], [4, 9], [2, 4, 7, 9], [2, 7], [2, 3, 5, 9], [2, 3, 5, 9], [2, 5, 7, 9]], [[3, 7, 9], [2, 3], [4], [1, 9], [5], [8], [1, 2, 9], [6], [2, 7, 9]], [[2], [1], [5, 7], [8], [3], [9], [4], [5, 7], [6]], [[8], [4], [5, 7, 9], [2], [6, 7], [5, 6, 7], [5, 7, 9], [1], [3]], [[5, 7, 9], [6], [3], [4, 5], [4, 7], [1], [2, 5, 7, 9], [2, 5, 7, 9], [8]]]]
INFO:root:Doing checkSmall1
INFO:root:Getting tiny MUSes, distance 1, for 1 puzlits, 1 repeats
INFO:root:Chunked 1 in [1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
INFO:root:Doing checkSmall2
INFO:root:Getting tiny MUSes, distance 2, for 1 puzlits, 1 repeats
INFO:root:Chunked 1 in [1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
INFO:root:Considering 100 * 1 jobs for minsize=3
INFO:root:Chunked 100 in [9, 9, 9, 9, 8, 8, 8, 8, 8, 8, 8, 8]
INFO:root:Considering 100 * 1 jobs for minsize=4
INFO:root:Chunked 100 in [9, 9, 9, 9, 8, 8, 8, 8, 8, 8, 8, 8]
INFO:root:Considering 100 * 1 jobs for minsize=5
INFO:root:Chunked 100 in [9, 9, 9, 9, 8, 8, 8, 8, 8, 8, 8, 8]
INFO:root:Considering 100 * 1 jobs for minsize=6
INFO:root:Chunked 100 in [9, 9, 9, 9, 8, 8, 8, 8, 8, 8, 8, 8]
INFO:root:Considering 100 * 1 jobs for minsize=7
INFO:root:Chunked 100 in [9, 9, 9, 9, 8, 8, 8, 8, 8, 8, 8, 8]
INFO:root:Considering 100 * 1 jobs for minsize=8
INFO:root:Chunked 100 in [9, 9, 9, 9, 8, 8, 8, 8, 8, 8, 8, 8]
INFO:root:Considering 100 * 1 jobs for minsize=9
INFO:root:Chunked 100 in [9, 9, 9, 9, 8, 8, 8, 8, 8, 8, 8, 8]
INFO:root:Considering 100 * 1 jobs for minsize=10
INFO:root:Chunked 100 in [9, 9, 9, 9, 8, 8, 8, 8, 8, 8, 8, 8]
INFO:root:Considering 100 * 1 jobs for minsize=11
INFO:root:Chunked 100 in [9, 9, 9, 9, 8, 8, 8, 8, 8, 8, 8, 8]
INFO:root:XX found first (5, 5) is not 2 12
INFO:root:XX add new best (5, 5) is not 2 12 12
INFO:root:XX add new best (5, 5) is not 2 12 12
INFO:root:Considering 100 * 1 jobs for minsize=12
INFO:root:Chunked 100 in [9, 9, 9, 9, 8, 8, 8, 8, 8, 8, 8, 8]
INFO:root:XX add new best (5, 5) is not 2 12 12
INFO:root:XX add new best (5, 5) is not 2 12 12
INFO:root:XX add new best (5, 5) is not 2 12 12
INFO:root:XX add new best (5, 5) is not 2 12 12
INFO:root:XX add new best (5, 5) is not 2 12 12
INFO:root:Trace: [(12, [(5, 5) is not 2])]
INFO:root:Trace Quality: [(12, 1)]
INFO:root:Trace Sorted: [(12, 1)]
INFO:root:Finished
INFO:root:Full Trace [(12, [(5, 5) is not 2])]
INFO:root:Trying {'minPrecheckStepsMUS': True}
INFO:root:Starting Step 1
INFO:root:Current state [[[[1, 3, 5], [7], [2], [1, 5, 9], [8], [3, 5], [6], [4], [5, 9]], [[1, 3, 4, 5], [9], [6], [7], [1, 2], [2, 3, 4, 5], [8], [2, 3, 5], [2, 5]], [[3, 4, 5], [3, 5], [8], [6], [2, 9], [2, 3, 4, 5], [2, 3, 5, 7, 9], [2, 3, 5, 7, 9], [1]], [[5, 7, 9], [2, 5], [5, 7, 9], [3], [1, 2, 6, 7, 9], [2, 6], [1, 2, 9], [8], [4]], [[6], [8], [1], [4, 9], [2, 4, 7, 9], [2, 7], [2, 3, 5, 9], [2, 3, 5, 9], [2, 5, 7, 9]], [[3, 7, 9], [2, 3], [4], [1, 9], [5], [8], [1, 2, 9], [6], [2, 7, 9]], [[2], [1], [5, 7], [8], [3], [9], [4], [5, 7], [6]], [[8], [4], [5, 7, 9], [2], [6, 7], [5, 6, 7], [5, 7, 9], [1], [3]], [[5, 7, 9], [6], [3], [4, 5], [4, 7], [1], [2, 5, 7, 9], [2, 5, 7, 9], [8]]]]
INFO:root:Doing checkSmall1
INFO:root:Getting tiny MUSes, distance 1, for 1 puzlits, 1 repeats
INFO:root:Chunked 1 in [1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
INFO:root:Doing checkSmall2
INFO:root:Getting tiny MUSes, distance 2, for 1 puzlits, 1 repeats
INFO:root:Chunked 1 in [1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
INFO:root:Considering 100 * 1 jobs for minsize=3
INFO:root:Chunked 100 in [9, 9, 9, 9, 8, 8, 8, 8, 8, 8, 8, 8]
INFO:root:Considering 100 * 1 jobs for minsize=4
INFO:root:Chunked 100 in [9, 9, 9, 9, 8, 8, 8, 8, 8, 8, 8, 8]
INFO:root:Considering 100 * 1 jobs for minsize=5
INFO:root:Chunked 100 in [9, 9, 9, 9, 8, 8, 8, 8, 8, 8, 8, 8]
INFO:root:Considering 100 * 1 jobs for minsize=6
INFO:root:Chunked 100 in [9, 9, 9, 9, 8, 8, 8, 8, 8, 8, 8, 8]
INFO:root:Considering 100 * 1 jobs for minsize=7
INFO:root:Chunked 100 in [9, 9, 9, 9, 8, 8, 8, 8, 8, 8, 8, 8]
INFO:root:Considering 100 * 1 jobs for minsize=8
INFO:root:Chunked 100 in [9, 9, 9, 9, 8, 8, 8, 8, 8, 8, 8, 8]
INFO:root:Considering 100 * 1 jobs for minsize=9
INFO:root:Chunked 100 in [9, 9, 9, 9, 8, 8, 8, 8, 8, 8, 8, 8]
INFO:root:Considering 100 * 1 jobs for minsize=10
INFO:root:Chunked 100 in [9, 9, 9, 9, 8, 8, 8, 8, 8, 8, 8, 8]
INFO:root:Considering 100 * 1 jobs for minsize=11
INFO:root:Chunked 100 in [9, 9, 9, 9, 8, 8, 8, 8, 8, 8, 8, 8]
INFO:root:XX found first (5, 5) is not 2 12
INFO:root:XX add new best (5, 5) is not 2 12 12
INFO:root:XX add new best (5, 5) is not 2 12 12
INFO:root:XX add new best (5, 5) is not 2 12 12
INFO:root:XX add new best (5, 5) is not 2 12 12
INFO:root:XX add new best (5, 5) is not 2 12 12
INFO:root:XX add new best (5, 5) is not 2 12 12
INFO:root:Considering 100 * 1 jobs for minsize=12
INFO:root:Chunked 100 in [9, 9, 9, 9, 8, 8, 8, 8, 8, 8, 8, 8]
INFO:root:XX add new best (5, 5) is not 2 12 12
INFO:root:XX add new best (5, 5) is not 2 12 12
INFO:root:XX add new best (5, 5) is not 2 12 12
INFO:root:XX add new best (5, 5) is not 2 12 12
INFO:root:XX add new best (5, 5) is not 2 12 12
INFO:root:XX add new best (5, 5) is not 2 12 12
INFO:root:XX add new best (5, 5) is not 2 12 12
INFO:root:Trace: [(12, [(5, 5) is not 2])]
INFO:root:Trace Quality: [(12, 1)]
INFO:root:Trace Sorted: [(12, 1)]
INFO:root:Finished
INFO:root:Full Trace [(12, [(5, 5) is not 2])]
INFO:root:Trying {'gallopingMUSes': True, 'minPrecheckMUS': True}
INFO:root:Starting Step 1
INFO:root:Current state [[[[1, 3, 5], [7], [2], [1, 5, 9], [8], [3, 5], [6], [4], [5, 9]], [[1, 3, 4, 5], [9], [6], [7], [1, 2], [2, 3, 4, 5], [8], [2, 3, 5], [2, 5]], [[3, 4, 5], [3, 5], [8], [6], [2, 9], [2, 3, 4, 5], [2, 3, 5, 7, 9], [2, 3, 5, 7, 9], [1]], [[5, 7, 9], [2, 5], [5, 7, 9], [3], [1, 2, 6, 7, 9], [2, 6], [1, 2, 9], [8], [4]], [[6], [8], [1], [4, 9], [2, 4, 7, 9], [2, 7], [2, 3, 5, 9], [2, 3, 5, 9], [2, 5, 7, 9]], [[3, 7, 9], [2, 3], [4], [1, 9], [5], [8], [1, 2, 9], [6], [2, 7, 9]], [[2], [1], [5, 7], [8], [3], [9], [4], [5, 7], [6]], [[8], [4], [5, 7, 9], [2], [6, 7], [5, 6, 7], [5, 7, 9], [1], [3]], [[5, 7, 9], [6], [3], [4, 5], [4, 7], [1], [2, 5, 7, 9], [2, 5, 7, 9], [8]]]]
INFO:root:Doing checkSmall1
INFO:root:Getting tiny MUSes, distance 1, for 1 puzlits, 1 repeats
INFO:root:Chunked 1 in [1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
INFO:root:Doing checkSmall2
INFO:root:Getting tiny MUSes, distance 2, for 1 puzlits, 1 repeats
INFO:root:Chunked 1 in [1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
INFO:root:Considering 100 * 1 jobs for minsize=3
INFO:root:Chunked 100 in [9, 9, 9, 9, 8, 8, 8, 8, 8, 8, 8, 8]
INFO:root:Considering 100 * 1 jobs for minsize=4
INFO:root:Chunked 100 in [9, 9, 9, 9, 8, 8, 8, 8, 8, 8, 8, 8]
INFO:root:Considering 100 * 1 jobs for minsize=5
INFO:root:Chunked 100 in [9, 9, 9, 9, 8, 8, 8, 8, 8, 8, 8, 8]
INFO:root:Considering 100 * 1 jobs for minsize=6
INFO:root:Chunked 100 in [9, 9, 9, 9, 8, 8, 8, 8, 8, 8, 8, 8]
INFO:root:Considering 100 * 1 jobs for minsize=7
INFO:root:Chunked 100 in [9, 9, 9, 9, 8, 8, 8, 8, 8, 8, 8, 8]
INFO:root:Considering 100 * 1 jobs for minsize=8
INFO:root:Chunked 100 in [9, 9, 9, 9, 8, 8, 8, 8, 8, 8, 8, 8]
INFO:root:Considering 100 * 1 jobs for minsize=9
INFO:root:Chunked 100 in [9, 9, 9, 9, 8, 8, 8, 8, 8, 8, 8, 8]
INFO:root:Considering 100 * 1 jobs for minsize=10
INFO:root:Chunked 100 in [9, 9, 9, 9, 8, 8, 8, 8, 8, 8, 8, 8]
INFO:root:Considering 100 * 1 jobs for minsize=11
INFO:root:Chunked 100 in [9, 9, 9, 9, 8, 8, 8, 8, 8, 8, 8, 8]
INFO:root:XX found first (5, 5) is not 2 12
INFO:root:XX add new best (5, 5) is not 2 12 12
INFO:root:XX add new best (5, 5) is not 2 12 12
INFO:root:XX add new best (5, 5) is not 2 12 12
INFO:root:XX add new best (5, 5) is not 2 12 12
INFO:root:XX add new best (5, 5) is not 2 12 12
INFO:root:XX add new best (5, 5) is not 2 12 12
INFO:root:Considering 100 * 1 jobs for minsize=12
INFO:root:Chunked 100 in [9, 9, 9, 9, 8, 8, 8, 8, 8, 8, 8, 8]
INFO:root:XX add new best (5, 5) is not 2 12 12
INFO:root:XX add new best (5, 5) is not 2 12 12
INFO:root:XX add new best (5, 5) is not 2 12 12
INFO:root:XX add new best (5, 5) is not 2 12 12
INFO:root:XX add new best (5, 5) is not 2 12 12
INFO:root:XX add new best (5, 5) is not 2 12 12
INFO:root:Trace: [(12, [(5, 5) is not 2])]
INFO:root:Trace Quality: [(12, 1)]
INFO:root:Trace Sorted: [(12, 1)]
INFO:root:Finished
INFO:root:Full Trace [(12, [(5, 5) is not 2])]
INFO:root:Trying {}
INFO:root:Starting Step 1
INFO:root:Current state [[[[1, 5, 8], [1, 5, 8], [7], [1, 5, 6, 8], [2], [1, 5, 6, 9], [1, 3, 5, 8], [1, 3, 8, 9], [4]], [[9], [3], [1, 2, 4, 5, 8], [1, 4, 5, 8], [4, 7, 8], [1, 4, 5, 7], [6], [1, 2, 7, 8], [2, 5, 7]], [[6], [1, 4, 5, 8], [1, 2, 4, 5, 8], [3], [4, 7, 8, 9], [1, 4, 5, 7, 9], [1, 2, 5, 7, 8], [1, 2, 7, 8, 9], [2, 5, 7, 9]], [[1, 3, 4, 7, 8], [1, 4, 7, 8, 9], [1, 4, 8], [2, 4, 8], [3, 4, 6, 7, 8], [2, 4, 7], [1, 2, 7], [5], [6, 9]], [[2], [4, 5, 7, 9], [4, 5, 9], [4, 5, 6], [1], [3, 4, 5, 6, 7], [3, 7], [6, 9], [8]], [[1, 3, 5, 7, 8], [1, 5, 7, 8], [6], [9], [3, 7, 8], [2, 5, 7], [4], [1, 2, 7], [2, 3, 7]], [[1, 4, 5, 8], [1, 4, 5, 6, 8], [3], [7], [4, 6], [1, 2], [9], [2, 4, 8], [2, 5, 6]], [[4, 7, 8], [2], [4, 8, 9], [4, 6], [5], [3, 9], [3, 7, 8], [3, 4, 6, 7, 8], [1]], [[1, 4, 5, 7], [1, 4, 5, 6, 7, 9], [1, 4, 5, 9], [1, 2], [3, 9], [8], [2, 5, 7], [2, 4, 7], [2, 3, 5, 6, 7]]]]
INFO:root:Doing checkSmall1
INFO:root:Getting tiny MUSes, distance 1, for 1 puzlits, 1 repeats
INFO:root:Chunked 1 in [1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
INFO:root:Doing checkSmall2
INFO:root:Getting tiny MUSes, distance 2, for 1 puzlits, 1 repeats
INFO:root:Chunked 1 in [1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
INFO:root:Considering 100 * 1 jobs for minsize=3
INFO:root:Chunked 100 in [9, 9, 9, 9, 8, 8, 8, 8, 8, 8, 8, 8]
INFO:root:Considering 100 * 1 jobs for minsize=4
INFO:root:Chunked 100 in [9, 9, 9, 9, 8, 8, 8, 8, 8, 8, 8, 8]
INFO:root:Considering 100 * 1 jobs for minsize=5
INFO:root:Chunked 100 in [9, 9, 9, 9, 8, 8, 8, 8, 8, 8, 8, 8]
INFO:root:Considering 100 * 1 jobs for minsize=6
INFO:root:Chunked 100 in [9, 9, 9, 9, 8, 8, 8, 8, 8, 8, 8, 8]
INFO:root:Considering 100 * 1 jobs for minsize=7
INFO:root:Chunked 100 in [9, 9, 9, 9, 8, 8, 8, 8, 8, 8, 8, 8]
INFO:root:Considering 100 * 1 jobs for minsize=8
INFO:root:Chunked 100 in [9, 9, 9, 9, 8, 8, 8, 8, 8, 8, 8, 8]
INFO:root:Considering 100 * 1 jobs for minsize=9
INFO:root:Chunked 100 in [9, 9, 9, 9, 8, 8, 8, 8, 8, 8, 8, 8]
INFO:root:Considering 100 * 1 jobs for minsize=10
INFO:root:Chunked 100 in [9, 9, 9, 9, 8, 8, 8, 8, 8, 8, 8, 8]
INFO:root:Considering 100 * 1 jobs for minsize=11
INFO:root:Chunked 100 in [9, 9, 9, 9, 8, 8, 8, 8, 8, 8, 8, 8]
INFO:root:Considering 100 * 1 jobs for minsize=12
INFO:root:Chunked 100 in [9, 9, 9, 9, 8, 8, 8, 8, 8, 8, 8, 8]
INFO:root:Considering 100 * 1 jobs for minsize=13
INFO:root:Chunked 100 in [9, 9, 9, 9, 8, 8, 8, 8, 8, 8, 8, 8]
INFO:root:Considering 100 * 1 jobs for minsize=14
INFO:root:Chunked 100 in [9, 9, 9, 9, 8, 8, 8, 8, 8, 8, 8, 8]
INFO:root:Considering 100 * 1 jobs for minsize=15
INFO:root:Chunked 100 in [9, 9, 9, 9, 8, 8, 8, 8, 8, 8, 8, 8]
INFO:root:Considering 100 * 1 jobs for minsize=16
INFO:root:Chunked 100 in [9, 9, 9, 9, 8, 8, 8, 8, 8, 8, 8, 8]
INFO:root:Considering 100 * 1 jobs for minsize=17
INFO:root:Chunked 100 in [9, 9, 9, 9, 8, 8, 8, 8, 8, 8, 8, 8]
INFO:root:Considering 100 * 1 jobs for minsize=18
INFO:root:Chunked 100 in [9, 9, 9, 9, 8, 8, 8, 8, 8, 8, 8, 8]
INFO:root:Considering 100 * 1 jobs for minsize=19
INFO:root:Chunked 100 in [9, 9, 9, 9, 8, 8, 8, 8, 8, 8, 8, 8]
INFO:root:Considering 100 * 1 jobs for minsize=20
INFO:root:Chunked 100 in [9, 9, 9, 9, 8, 8, 8, 8, 8, 8, 8, 8]
INFO:root:Considering 100 * 1 jobs for minsize=21
INFO:root:Chunked 100 in [9, 9, 9, 9, 8, 8, 8, 8, 8, 8, 8, 8]
INFO:root:Considering 100 * 1 jobs for minsize=22
INFO:root:Chunked 100 in [9, 9, 9, 9, 8, 8, 8, 8, 8, 8, 8, 8]
INFO:root:Considering 100 * 1 jobs for minsize=23
INFO:root:Chunked 100 in [9, 9, 9, 9, 8, 8, 8, 8, 8, 8, 8, 8]
INFO:root:Considering 100 * 1 jobs for minsize=24
INFO:root:Chunked 100 in [9, 9, 9, 9, 8, 8, 8, 8, 8, 8, 8, 8]
INFO:root:Considering 100 * 1 jobs for minsize=25
INFO:root:Chunked 100 in [9, 9, 9, 9, 8, 8, 8, 8, 8, 8, 8, 8]
INFO:root:Considering 100 * 1 jobs for minsize=26
INFO:root:Chunked 100 in [9, 9, 9, 9, 8, 8, 8, 8, 8, 8, 8, 8]
INFO:root:Considering 100 * 1 jobs for minsize=27
INFO:root:Chunked 100 in [9, 9, 9, 9, 8, 8, 8, 8, 8, 8, 8, 8]
INFO:root:XX found first (2, 4) is not 4 28
INFO:root:XX add new best (2, 4) is not 4 28 28
INFO:root:XX add new best (2, 4) is not 4 28 28
INFO:root:XX add new best (2, 4) is not 4 28 28
INFO:root:XX add new best (2, 4) is not 4 28 28
INFO:root:XX add new best (2, 4) is not 4 28 28
INFO:root:Considering 100 * 1 jobs for minsize=28
INFO:root:Chunked 100 in [9, 9, 9, 9, 8, 8, 8, 8, 8, 8, 8, 8]
INFO:root:XX add new best (2, 4) is not 4 28 28
INFO:root:XX add new best (2, 4) is not 4 28 28
INFO:root:XX add new best (2, 4) is not 4 28 28
INFO:root:XX add new best (2, 4) is not 4 28 28
INFO:root:Trace: [(28, [(2, 4) is not 4])]
INFO:root:Trace Quality: [(28, 1)]
INFO:root:Trace Sorted: [(28, 1)]
INFO:root:Finished
INFO:root:Full Trace [(28, [(2, 4) is not 4])]
INFO:root:Trying {'prechopMUSes': True}
INFO:root:Starting Step 1
INFO:root:Current state [[[[1, 5, 8], [1, 5, 8], [7], [1, 5, 6, 8], [2], [1, 5, 6, 9], [1, 3, 5, 8], [1, 3, 8, 9], [4]], [[9], [3], [1, 2, 4, 5, 8], [1, 4, 5, 8], [4, 7, 8], [1, 4, 5, 7], [6], [1, 2, 7, 8], [2, 5, 7]], [[6], [1, 4, 5, 8], [1, 2, 4, 5, 8], [3], [4, 7, 8, 9], [1, 4, 5, 7, 9], [1, 2, 5, 7, 8], [1, 2, 7, 8, 9], [2, 5, 7, 9]], [[1, 3, 4, 7, 8], [1, 4, 7, 8, 9], [1, 4, 8], [2, 4, 8], [3, 4, 6, 7, 8], [2, 4, 7], [1, 2, 7], [5], [6, 9]], [[2], [4, 5, 7, 9], [4, 5, 9], [4, 5, 6], [1], [3, 4, 5, 6, 7], [3, 7], [6, 9], [8]], [[1, 3, 5, 7, 8], [1, 5, 7, 8], [6], [9], [3, 7, 8], [2, 5, 7], [4], [1, 2, 7], [2, 3, 7]], [[1, 4, 5, 8], [1, 4, 5, 6, 8], [3], [7], [4, 6], [1, 2], [9], [2, 4, 8], [2, 5, 6]], [[4, 7, 8], [2], [4, 8, 9], [4, 6], [5], [3, 9], [3, 7, 8], [3, 4, 6, 7, 8], [1]], [[1, 4, 5, 7], [1, 4, 5, 6, 7, 9], [1, 4, 5, 9], [1, 2], [3, 9], [8], [2, 5, 7], [2, 4, 7], [2, 3, 5, 6, 7]]]]
INFO:root:Doing checkSmall1
INFO:root:Getting tiny MUSes, distance 1, for 1 puzlits, 1 repeats
INFO:root:Chunked 1 in [1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
INFO:root:Doing checkSmall2
INFO:root:Getting tiny MUSes, distance 2, for 1 puzlits, 1 repeats
INFO:root:Chunked 1 in [1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
INFO:root:Considering 100 * 1 jobs for minsize=3
INFO:root:Chunked 100 in [9, 9, 9, 9, 8, 8, 8, 8, 8, 8, 8, 8]
INFO:root:Considering 100 * 1 jobs for minsize=4
INFO:root:Chunked 100 in [9, 9, 9, 9, 8, 8, 8, 8, 8, 8, 8, 8]
INFO:root:Considering 100 * 1 jobs for minsize=5
INFO:root:Chunked 100 in [9, 9, 9, 9, 8, 8, 8, 8, 8, 8, 8, 8]
INFO:root:Considering 100 * 1 jobs for minsize=6
INFO:root:Chunked 100 in [9, 9, 9, 9, 8, 8, 8, 8, 8, 8, 8, 8]
INFO:root:Considering 100 * 1 jobs for minsize=7
INFO:root:Chunked 100 in [9, 9, 9, 9, 8, 8, 8, 8, 8, 8, 8, 8]
INFO:root:Considering 100 * 1 jobs for minsize=8
INFO:root:Chunked 100 in [9, 9, 9, 9, 8, 8, 8, 8, 8, 8, 8, 8]
INFO:root:Considering 100 * 1 jobs for minsize=9
INFO:root:Chunked 100 in [9, 9, 9, 9, 8, 8, 8, 8, 8, 8, 8, 8]
INFO:root:Considering 100 * 1 jobs for minsize=10
INFO:root:Chunked 100 in [9, 9, 9, 9, 8, 8, 8, 8, 8, 8, 8, 8]
INFO:root:Considering 100 * 1 jobs for minsize=11
INFO:root:Chunked 100 in [9, 9, 9, 9, 8, 8, 8, 8, 8, 8, 8, 8]
INFO:root:Considering 100 * 1 jobs for minsize=12
INFO:root:Chunked 100 in [9, 9, 9, 9, 8, 8, 8, 8, 8, 8, 8, 8]
INFO:root:Considering 100 * 1 jobs for minsize=13
INFO:root:Chunked 100 in [9, 9, 9, 9, 8, 8, 8, 8, 8, 8, 8, 8]
INFO:root:Considering 100 * 1 jobs for minsize=14
INFO:root:Chunked 100 in [9, 9, 9, 9, 8, 8, 8, 8, 8, 8, 8, 8]
INFO:root:Considering 100 * 1 jobs for minsize=15
INFO:root:Chunked 100 in [9, 9, 9, 9, 8, 8, 8, 8, 8, 8, 8, 8]
INFO:root:Considering 100 * 1 jobs for minsize=16
INFO:root:Chunked 100 in [9, 9, 9, 9, 8, 8, 8, 8, 8, 8, 8, 8]
INFO:root:Considering 100 * 1 jobs for minsize=17
INFO:root:Chunked 100 in [9, 9, 9, 9, 8, 8, 8, 8, 8, 8, 8, 8]
INFO:root:Considering 100 * 1 jobs for minsize=18
INFO:root:Chunked 100 in [9, 9, 9, 9, 8, 8, 8, 8, 8, 8, 8, 8]
INFO:root:Considering 100 * 1 jobs for minsize=19
INFO:root:Chunked 100 in [9, 9, 9, 9, 8, 8, 8, 8, 8, 8, 8, 8]
INFO:root:Considering 100 * 1 jobs for minsize=20
INFO:root:Chunked 100 in [9, 9, 9, 9, 8, 8, 8, 8, 8, 8, 8, 8]
INFO:root:Considering 100 * 1 jobs for minsize=21
INFO:root:Chunked 100 in [9, 9, 9, 9, 8, 8, 8, 8, 8, 8, 8, 8]
INFO:root:Considering 100 * 1 jobs for minsize=22
INFO:root:Chunked 100 in [9, 9, 9, 9, 8, 8, 8, 8, 8, 8, 8, 8]
INFO:root:Considering 100 * 1 jobs for minsize=23
INFO:root:Chunked 100 in [9, 9, 9, 9, 8, 8, 8, 8, 8, 8, 8, 8]
INFO:root:Considering 100 * 1 jobs for minsize=24
INFO:root:Chunked 100 in [9, 9, 9, 9, 8, 8, 8, 8, 8, 8, 8, 8]
INFO:root:Considering 100 * 1 jobs for minsize=25
INFO:root:Chunked 100 in [9, 9, 9, 9, 8, 8, 8, 8, 8, 8, 8, 8]
INFO:root:Considering 100 * 1 jobs for minsize=26
INFO:root:Chunked 100 in [9, 9, 9, 9, 8, 8, 8, 8, 8, 8, 8, 8]
INFO:root:Considering 100 * 1 jobs for minsize=27
INFO:root:Chunked 100 in [9, 9, 9, 9, 8, 8, 8, 8, 8, 8, 8, 8]
INFO:root:XX found first (2, 4) is not 4 27
INFO:root:Trace: [(27, [(2, 4) is not 4])]
INFO:root:Trace Quality: [(27, 1)]
INFO:root:Trace Sorted: [(27, 1)]
INFO:root:Finished
INFO:root:Full Trace [(27, [(2, 4) is not 4])]
INFO:root:Trying {'quarterChopMUS': True}
INFO:root:Starting Step 1
INFO:root:Current state [[[[1, 5, 8], [1, 5, 8], [7], [1, 5, 6, 8], [2], [1, 5, 6, 9], [1, 3, 5, 8], [1, 3, 8, 9], [4]], [[9], [3], [1, 2, 4, 5, 8], [1, 4, 5, 8], [4, 7, 8], [1, 4, 5, 7], [6], [1, 2, 7, 8], [2, 5, 7]], [[6], [1, 4, 5, 8], [1, 2, 4, 5, 8], [3], [4, 7, 8, 9], [1, 4, 5, 7, 9], [1, 2, 5, 7, 8], [1, 2, 7, 8, 9], [2, 5, 7, 9]], [[1, 3, 4, 7, 8], [1, 4, 7, 8, 9], [1, 4, 8], [2, 4, 8], [3, 4, 6, 7, 8], [2, 4, 7], [1, 2, 7], [5], [6, 9]], [[2], [4, 5, 7, 9], [4, 5, 9], [4, 5, 6], [1], [3, 4, 5, 6, 7], [3, 7], [6, 9], [8]], [[1, 3, 5, 7, 8], [1, 5, 7, 8], [6], [9], [3, 7, 8], [2, 5, 7], [4], [1, 2, 7], [2, 3, 7]], [[1, 4, 5, 8], [1, 4, 5, 6, 8], [3], [7], [4, 6], [1, 2], [9], [2, 4, 8], [2, 5, 6]], [[4, 7, 8], [2], [4, 8, 9], [4, 6], [5], [3, 9], [3, 7, 8], [3, 4, 6, 7, 8], [1]], [[1, 4, 5, 7], [1, 4, 5, 6, 7, 9], [1, 4, 5, 9], [1, 2], [3, 9], [8], [2, 5, 7], [2, 4, 7], [2, 3, 5, 6, 7]]]]
INFO:root:Doing checkSmall1
INFO:root:Getting tiny MUSes, distance 1, for 1 puzlits, 1 repeats
INFO:root:Chunked 1 in [1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
INFO:root:Doing checkSmall2
INFO:root:Getting tiny MUSes, distance 2, for 1 puzlits, 1 repeats
INFO:root:Chunked 1 in [1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
INFO:root:Considering 100 * 1 jobs for minsize=3
INFO:root:Chunked 100 in [9, 9, 9, 9, 8, 8, 8, 8, 8, 8, 8, 8]
INFO:root:Considering 100 * 1 jobs for minsize=4
INFO:root:Chunked 100 in [9, 9, 9, 9, 8, 8, 8, 8, 8, 8, 8, 8]
INFO:root:Considering 100 * 1 jobs for minsize=5
INFO:root:Chunked 100 in [9, 9, 9, 9, 8, 8, 8, 8, 8, 8, 8, 8]
INFO:root:Considering 100 * 1 jobs for minsize=6
INFO:root:Chunked 100 in [9, 9, 9, 9, 8, 8, 8, 8, 8, 8, 8, 8]
INFO:root:Considering 100 * 1 jobs for minsize=7
INFO:root:Chunked 100 in [9, 9, 9, 9, 8, 8, 8, 8, 8, 8, 8, 8]
INFO:root:Considering 100 * 1 jobs for minsize=8
INFO:root:Chunked 100 in [9, 9, 9, 9, 8, 8, 8, 8, 8, 8, 8, 8]
INFO:root:Considering 100 * 1 jobs for minsize=9
INFO:root:Chunked 100 in [9, 9, 9, 9, 8, 8, 8, 8, 8, 8, 8, 8]
INFO:root:Considering 100 * 1 jobs for minsize=10
INFO:root:Chunked 100 in [9, 9, 9, 9, 8, 8, 8, 8, 8, 8, 8, 8]
INFO:root:Considering 100 * 1 jobs for minsize=11
INFO:root:Chunked 100 in [9, 9, 9, 9, 8, 8, 8, 8, 8, 8, 8, 8]
INFO:root:Considering 100 * 1 jobs for minsize=12
INFO:root:Chunked 100 in [9, 9, 9, 9, 8, 8, 8, 8, 8, 8, 8, 8]
INFO:root:Considering 100 * 1 jobs for minsize=13
INFO:root:Chunked 100 in [9, 9, 9, 9, 8, 8, 8, 8, 8, 8, 8, 8]
INFO:root:Considering 100 * 1 jobs for minsize=14
INFO:root:Chunked 100 in [9, 9, 9, 9, 8, 8, 8, 8, 8, 8, 8, 8]
INFO:root:Considering 100 * 1 jobs for minsize=15
INFO:root:Chunked 100 in [9, 9, 9, 9, 8, 8, 8, 8, 8, 8, 8, 8]
INFO:root:Considering 100 * 1 jobs for minsize=16
INFO:root:Chunked 100 in [9, 9, 9, 9, 8, 8, 8, 8, 8, 8, 8, 8]
INFO:root:Considering 100 * 1 jobs for minsize=17
INFO:root:Chunked 100 in [9, 9, 9, 9, 8, 8, 8, 8, 8, 8, 8, 8]
INFO:root:Considering 100 * 1 jobs for minsize=18
INFO:root:Chunked 100 in [9, 9, 9, 9, 8, 8, 8, 8, 8, 8, 8, 8]
INFO:root:Considering 100 * 1 jobs for minsize=19
INFO:root:Chunked 100 in [9, 9, 9, 9, 8, 8, 8, 8, 8, 8, 8, 8]
INFO:root:Considering 100 * 1 jobs for minsize=20
INFO:root:Chunked 100 in [9, 9, 9, 9, 8, 8, 8, 8, 8, 8, 8, 8]
INFO:root:Considering 100 * 1 jobs for minsize=21
INFO:root:Chunked 100 in [9, 9, 9, 9, 8, 8, 8, 8, 8, 8, 8, 8]
INFO:root:Considering 100 * 1 jobs for minsize=22
INFO:root:Chunked 100 in [9, 9, 9, 9, 8, 8, 8, 8, 8, 8, 8, 8]
INFO:root:Considering 100 * 1 jobs for minsize=23
INFO:root:Chunked 100 in [9, 9, 9, 9, 8, 8, 8, 8, 8, 8, 8, 8]
INFO:root:Considering 100 * 1 jobs for minsize=24
INFO:root:Chunked 100 in [9, 9, 9, 9, 8, 8, 8, 8, 8, 8, 8, 8]
INFO:root:Considering 100 * 1 jobs for minsize=25
INFO:root:Chunked 100 in [9, 9, 9, 9, 8, 8, 8, 8, 8, 8, 8, 8]
INFO:root:Considering 100 * 1 jobs for minsize=26
INFO:root:Chunked 100 in [9, 9, 9, 9, 8, 8, 8, 8, 8, 8, 8, 8]
INFO:root:XX found first (2, 4) is not 4 27
INFO:root:XX add new best (2, 4) is not 4 27 27
INFO:root:XX add new best (2, 4) is not 4 27 27
INFO:root:XX add new best (2, 4) is not 4 27 27
INFO:root:XX add new best (2, 4) is not 4 27 27
INFO:root:XX add new best (2, 4) is not 4 27 27
INFO:root:XX add new best (2, 4) is not 4 27 27
INFO:root:XX add new best (2, 4) is not 4 27 27
INFO:root:Considering 100 * 1 jobs for minsize=27
INFO:root:Chunked 100 in [9, 9, 9, 9, 8, 8, 8, 8, 8, 8, 8, 8]
INFO:root:XX add new best (2, 4) is not 4 27 27
INFO:root:XX add new best (2, 4) is not 4 27 27
INFO:root:XX add new best (2, 4) is not 4 27 27
INFO:root:XX add new best (2, 4) is not 4 27 27
INFO:root:XX add new best (2, 4) is not 4 27 27
INFO:root:XX add new best (2, 4) is not 4 27 27
INFO:root:XX add new best (2, 4) is not 4 27 27
INFO:root:XX add new best (2, 4) is not 4 27 27
INFO:root:Trace: [(27, [(2, 4) is not 4])]
INFO:root:Trace Quality: [(27, 1)]
INFO:root:Trace Sorted: [(27, 1)]
INFO:root:Finished
INFO:root:Full Trace [(27, [(2, 4) is not 4])]
INFO:root:Trying {'minPrecheckMUS': True}
INFO:root:Starting Step 1
INFO:root:Current state [[[[1, 5, 8], [1, 5, 8], [7], [1, 5, 6, 8], [2], [1, 5, 6, 9], [1, 3, 5, 8], [1, 3, 8, 9], [4]], [[9], [3], [1, 2, 4, 5, 8], [1, 4, 5, 8], [4, 7, 8], [1, 4, 5, 7], [6], [1, 2, 7, 8], [2, 5, 7]], [[6], [1, 4, 5, 8], [1, 2, 4, 5, 8], [3], [4, 7, 8, 9], [1, 4, 5, 7, 9], [1, 2, 5, 7, 8], [1, 2, 7, 8, 9], [2, 5, 7, 9]], [[1, 3, 4, 7, 8], [1, 4, 7, 8, 9], [1, 4, 8], [2, 4, 8], [3, 4, 6, 7, 8], [2, 4, 7], [1, 2, 7], [5], [6, 9]], [[2], [4, 5, 7, 9], [4, 5, 9], [4, 5, 6], [1], [3, 4, 5, 6, 7], [3, 7], [6, 9], [8]], [[1, 3, 5, 7, 8], [1, 5, 7, 8], [6], [9], [3, 7, 8], [2, 5, 7], [4], [1, 2, 7], [2, 3, 7]], [[1, 4, 5, 8], [1, 4, 5, 6, 8], [3], [7], [4, 6], [1, 2], [9], [2, 4, 8], [2, 5, 6]], [[4, 7, 8], [2], [4, 8, 9], [4, 6], [5], [3, 9], [3, 7, 8], [3, 4, 6, 7, 8], [1]], [[1, 4, 5, 7], [1, 4, 5, 6, 7, 9], [1, 4, 5, 9], [1, 2], [3, 9], [8], [2, 5, 7], [2, 4, 7], [2, 3, 5, 6, 7]]]]
INFO:root:Doing checkSmall1
INFO:root:Getting tiny MUSes, distance 1, for 1 puzlits, 1 repeats
INFO:root:Chunked 1 in [1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
INFO:root:Doing checkSmall2
INFO:root:Getting tiny MUSes, distance 2, for 1 puzlits, 1 repeats
INFO:root:Chunked 1 in [1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
INFO:root:Considering 100 * 1 jobs for minsize=3
INFO:root:Chunked 100 in [9, 9, 9, 9, 8, 8, 8, 8, 8, 8, 8, 8]
INFO:root:Considering 100 * 1 jobs for minsize=4
INFO:root:Chunked 100 in [9, 9, 9, 9, 8, 8, 8, 8, 8, 8, 8, 8]
INFO:root:Considering 100 * 1 jobs for minsize=5
INFO:root:Chunked 100 in [9, 9, 9, 9, 8, 8, 8, 8, 8, 8, 8, 8]
INFO:root:Considering 100 * 1 jobs for minsize=6
INFO:root:Chunked 100 in [9, 9, 9, 9, 8, 8, 8, 8, 8, 8, 8, 8]
INFO:root:Considering 100 * 1 jobs for minsize=7
INFO:root:Chunked 100 in [9, 9, 9, 9, 8, 8, 8, 8, 8, 8, 8, 8]
INFO:root:Considering 100 * 1 jobs for minsize=8
INFO:root:Chunked 100 in [9, 9, 9, 9, 8, 8, 8, 8, 8, 8, 8, 8]
INFO:root:Considering 100 * 1 jobs for minsize=9
INFO:root:Chunked 100 in [9, 9, 9, 9, 8, 8, 8, 8, 8, 8, 8, 8]
INFO:root:Considering 100 * 1 jobs for minsize=10
INFO:root:Chunked 100 in [9, 9, 9, 9, 8, 8, 8, 8, 8, 8, 8, 8]
INFO:root:Considering 100 * 1 jobs for minsize=11
INFO:root:Chunked 100 in [9, 9, 9, 9, 8, 8, 8, 8, 8, 8, 8, 8]
INFO:root:Considering 100 * 1 jobs for minsize=12
INFO:root:Chunked 100 in [9, 9, 9, 9, 8, 8, 8, 8, 8, 8, 8, 8]
INFO:root:Considering 100 * 1 jobs for minsize=13
INFO:root:Chunked 100 in [9, 9, 9, 9, 8, 8, 8, 8, 8, 8, 8, 8]
INFO:root:Considering 100 * 1 jobs for minsize=14
INFO:root:Chunked 100 in [9, 9, 9, 9, 8, 8, 8, 8, 8, 8, 8, 8]
INFO:root:Considering 100 * 1 jobs for minsize=15
INFO:root:Chunked 100 in [9, 9, 9, 9, 8, 8, 8, 8, 8, 8, 8, 8]
INFO:root:Considering 100 * 1 jobs for minsize=16
INFO:root:Chunked 100 in [9, 9, 9, 9, 8, 8, 8, 8, 8, 8, 8, 8]
INFO:root:Considering 100 * 1 jobs for minsize=17
INFO:root:Chunked 100 in [9, 9, 9, 9, 8, 8, 8, 8, 8, 8, 8, 8]
INFO:root:Considering 100 * 1 jobs for minsize=18
INFO:root:Chunked 100 in [9, 9, 9, 9, 8, 8, 8, 8, 8, 8, 8, 8]
INFO:root:Considering 100 * 1 jobs for minsize=19
INFO:root:Chunked 100 in [9, 9, 9, 9, 8, 8, 8, 8, 8, 8, 8, 8]
INFO:root:Considering 100 * 1 jobs for minsize=20
INFO:root:Chunked 100 in [9, 9, 9, 9, 8, 8, 8, 8, 8, 8, 8, 8]
INFO:root:Considering 100 * 1 jobs for minsize=21
INFO:root:Chunked 100 in [9, 9, 9, 9, 8, 8, 8, 8, 8, 8, 8, 8]
INFO:root:Considering 100 * 1 jobs for minsize=22
INFO:root:Chunked 100 in [9, 9, 9, 9, 8, 8, 8, 8, 8, 8, 8, 8]
INFO:root:Considering 100 * 1 jobs for minsize=23
INFO:root:Chunked 100 in [9, 9, 9, 9, 8, 8, 8, 8, 8, 8, 8, 8]
INFO:root:Considering 100 * 1 jobs for minsize=24
INFO:root:Chunked 100 in [9, 9, 9, 9, 8, 8, 8, 8, 8, 8, 8, 8]
INFO:root:Considering 100 * 1 jobs for minsize=25
INFO:root:Chunked 100 in [9, 9, 9, 9, 8, 8, 8, 8, 8, 8, 8, 8]
INFO:root:Considering 100 * 1 jobs for minsize=26
INFO:root:Chunked 100 in [9, 9, 9, 9, 8, 8, 8, 8, 8, 8, 8, 8]
INFO:root:Considering 100 * 1 jobs for minsize=27
INFO:root:Chunked 100 in [9, 9, 9, 9, 8, 8, 8, 8, 8, 8, 8, 8]
INFO:root:Considering 100 * 1 jobs for minsize=28
INFO:root:Chunked 100 in [9, 9, 9, 9, 8, 8, 8, 8, 8, 8, 8, 8]
INFO:root:XX found first (2, 4) is not 4 28
INFO:root:Trace: [(28, [(2, 4) is not 4])]
INFO:root:Trace Quality: [(28, 1)]
INFO:root:Trace Sorted: [(28, 1)]
INFO:root:Finished
INFO:root:Full Trace [(28, [(2, 4) is not 4])]
INFO:root:Trying {'gallopingMUSes': True}
INFO:root:Starting Step 1
INFO:root:Current state [[[[1, 5, 8], [1, 5, 8], [7], [1, 5, 6, 8], [2], [1, 5, 6, 9], [1, 3, 5, 8], [1, 3, 8, 9], [4]], [[9], [3], [1, 2, 4, 5, 8], [1, 4, 5, 8], [4, 7, 8], [1, 4, 5, 7], [6], [1, 2, 7, 8], [2, 5, 7]], [[6], [1, 4, 5, 8], [1, 2, 4, 5, 8], [3], [4, 7, 8, 9], [1, 4, 5, 7, 9], [1, 2, 5, 7, 8], [1, 2, 7, 8, 9], [2, 5, 7, 9]], [[1, 3, 4, 7, 8], [1, 4, 7, 8, 9], [1, 4, 8], [2, 4, 8], [3, 4, 6, 7, 8], [2, 4, 7], [1, 2, 7], [5], [6, 9]], [[2], [4, 5, 7, 9], [4, 5, 9], [4, 5, 6], [1], [3, 4, 5, 6, 7], [3, 7], [6, 9], [8]], [[1, 3, 5, 7, 8], [1, 5, 7, 8], [6], [9], [3, 7, 8], [2, 5, 7], [4], [1, 2, 7], [2, 3, 7]], [[1, 4, 5, 8], [1, 4, 5, 6, 8], [3], [7], [4, 6], [1, 2], [9], [2, 4, 8], [2, 5, 6]], [[4, 7, 8], [2], [4, 8, 9], [4, 6], [5], [3, 9], [3, 7, 8], [3, 4, 6, 7, 8], [1]], [[1, 4, 5, 7], [1, 4, 5, 6, 7, 9], [1, 4, 5, 9], [1, 2], [3, 9], [8], [2, 5, 7], [2, 4, 7], [2, 3, 5, 6, 7]]]]
INFO:root:Doing checkSmall1
INFO:root:Getting tiny MUSes, distance 1, for 1 puzlits, 1 repeats
INFO:root:Chunked 1 in [1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
INFO:root:Doing checkSmall2
INFO:root:Getting tiny MUSes, distance 2, for 1 puzlits, 1 repeats
INFO:root:Chunked 1 in [1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
INFO:root:Considering 100 * 1 jobs for minsize=3
INFO:root:Chunked 100 in [9, 9, 9, 9, 8, 8, 8, 8, 8, 8, 8, 8]
INFO:root:Considering 100 * 1 jobs for minsize=4
INFO:root:Chunked 100 in [9, 9, 9, 9, 8, 8, 8, 8, 8, 8, 8, 8]
INFO:root:Considering 100 * 1 jobs for minsize=5
INFO:root:Chunked 100 in [9, 9, 9, 9, 8, 8, 8, 8, 8, 8, 8, 8]
INFO:root:Considering 100 * 1 jobs for minsize=6
INFO:root:Chunked 100 in [9, 9, 9, 9, 8, 8, 8, 8, 8, 8, 8, 8]
INFO:root:Considering 100 * 1 jobs for minsize=7
INFO:root:Chunked 100 in [9, 9, 9, 9, 8, 8, 8, 8, 8, 8, 8, 8]
INFO:root:Considering 100 * 1 jobs for minsize=8
INFO:root:Chunked 100 in [9, 9, 9, 9, 8, 8, 8, 8, 8, 8, 8, 8]
INFO:root:Considering 100 * 1 jobs for minsize=9
INFO:root:Chunked 100 in [9, 9, 9, 9, 8, 8, 8, 8, 8, 8, 8, 8]
INFO:root:Considering 100 * 1 jobs for minsize=10
INFO:root:Chunked 100 in [9, 9, 9, 9, 8, 8, 8, 8, 8, 8, 8, 8]
INFO:root:Considering 100 * 1 jobs for minsize=11
INFO:root:Chunked 100 in [9, 9, 9, 9, 8, 8, 8, 8, 8, 8, 8, 8]
INFO:root:Considering 100 * 1 jobs for minsize=12
INFO:root:Chunked 100 in [9, 9, 9, 9, 8, 8, 8, 8, 8, 8, 8, 8]
INFO:root:Considering 100 * 1 jobs for minsize=13
INFO:root:Chunked 100 in [9, 9, 9, 9, 8, 8, 8, 8, 8, 8, 8, 8]
INFO:root:Considering 100 * 1 jobs for minsize=14
INFO:root:Chunked 100 in [9, 9, 9, 9, 8, 8, 8, 8, 8, 8, 8, 8]
INFO:root:Considering 100 * 1 jobs for minsize=15
INFO:root:Chunked 100 in [9, 9, 9, 9, 8, 8, 8, 8, 8, 8, 8, 8]
INFO:root:Considering 100 * 1 jobs for minsize=16
INFO:root:Chunked 100 in [9, 9, 9, 9, 8, 8, 8, 8, 8, 8, 8, 8]
INFO:root:Considering 100 * 1 jobs for minsize=17
INFO:root:Chunked 100 in [9, 9, 9, 9, 8, 8, 8, 8, 8, 8, 8, 8]
INFO:root:Considering 100 * 1 jobs for minsize=18
INFO:root:Chunked 100 in [9, 9, 9, 9, 8, 8, 8, 8, 8, 8, 8, 8]
INFO:root:Considering 100 * 1 jobs for minsize=19
INFO:root:Chunked 100 in [9, 9, 9, 9, 8, 8, 8, 8, 8, 8, 8, 8]
INFO:root:Considering 100 * 1 jobs for minsize=20
INFO:root:Chunked 100 in [9, 9, 9, 9, 8, 8, 8, 8, 8, 8, 8, 8]
INFO:root:Considering 100 * 1 jobs for minsize=21
INFO:root:Chunked 100 in [9, 9, 9, 9, 8, 8, 8, 8, 8, 8, 8, 8]
INFO:root:Considering 100 * 1 jobs for minsize=22
INFO:root:Chunked 100 in [9, 9, 9, 9, 8, 8, 8, 8, 8, 8, 8, 8]
INFO:root:Considering 100 * 1 jobs for minsize=23
INFO:root:Chunked 100 in [9, 9, 9, 9, 8, 8, 8, 8, 8, 8, 8, 8]
INFO:root:Considering 100 * 1 jobs for minsize=24
INFO:root:Chunked 100 in [9, 9, 9, 9, 8, 8, 8, 8, 8, 8, 8, 8]
INFO:root:Considering 100 * 1 jobs for minsize=25
INFO:root:Chunked 100 in [9, 9, 9, 9, 8, 8, 8, 8, 8, 8, 8, 8]
INFO:root:Considering 100 * 1 jobs for minsize=26
INFO:root:Chunked 100 in [9, 9, 9, 9, 8, 8, 8, 8, 8, 8, 8, 8]
INFO:root:Considering 100 * 1 jobs for minsize=27
INFO:root:Chunked 100 in [9, 9, 9, 9, 8, 8, 8, 8, 8, 8, 8, 8]
INFO:root:XX found first (2, 4) is not 4 27
INFO:root:Trace: [(27, [(2, 4) is not 4])]
INFO:root:Trace Quality: [(27, 1)]
INFO:root:Trace Sorted: [(27, 1)]
INFO:root:Finished
INFO:root:Full Trace [(27, [(2, 4) is not 4])]
INFO:root:Trying {'minPrecheckStepsMUS': True}
INFO:root:Starting Step 1
INFO:root:Current state [[[[1, 5, 8], [1, 5, 8], [7], [1, 5, 6, 8], [2], [1, 5, 6, 9], [1, 3, 5, 8], [1, 3, 8, 9], [4]], [[9], [3], [1, 2, 4, 5, 8], [1, 4, 5, 8], [4, 7, 8], [1, 4, 5, 7], [6], [1, 2, 7, 8], [2, 5, 7]], [[6], [1, 4, 5, 8], [1, 2, 4, 5, 8], [3], [4, 7, 8, 9], [1, 4, 5, 7, 9], [1, 2, 5, 7, 8], [1, 2, 7, 8, 9], [2, 5, 7, 9]], [[1, 3, 4, 7, 8], [1, 4, 7, 8, 9], [1, 4, 8], [2, 4, 8], [3, 4, 6, 7, 8], [2, 4, 7], [1, 2, 7], [5], [6, 9]], [[2], [4, 5, 7, 9], [4, 5, 9], [4, 5, 6], [1], [3, 4, 5, 6, 7], [3, 7], [6, 9], [8]], [[1, 3, 5, 7, 8], [1, 5, 7, 8], [6], [9], [3, 7, 8], [2, 5, 7], [4], [1, 2, 7], [2, 3, 7]], [[1, 4, 5, 8], [1, 4, 5, 6, 8], [3], [7], [4, 6], [1, 2], [9], [2, 4, 8], [2, 5, 6]], [[4, 7, 8], [2], [4, 8, 9], [4, 6], [5], [3, 9], [3, 7, 8], [3, 4, 6, 7, 8], [1]], [[1, 4, 5, 7], [1, 4, 5, 6, 7, 9], [1, 4, 5, 9], [1, 2], [3, 9], [8], [2, 5, 7], [2, 4, 7], [2, 3, 5, 6, 7]]]]
INFO:root:Doing checkSmall1
INFO:root:Getting tiny MUSes, distance 1, for 1 puzlits, 1 repeats
INFO:root:Chunked 1 in [1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
INFO:root:Doing checkSmall2
INFO:root:Getting tiny MUSes, distance 2, for 1 puzlits, 1 repeats
INFO:root:Chunked 1 in [1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
INFO:root:Considering 100 * 1 jobs for minsize=3
INFO:root:Chunked 100 in [9, 9, 9, 9, 8, 8, 8, 8, 8, 8, 8, 8]
INFO:root:Considering 100 * 1 jobs for minsize=4
INFO:root:Chunked 100 in [9, 9, 9, 9, 8, 8, 8, 8, 8, 8, 8, 8]
INFO:root:Considering 100 * 1 jobs for minsize=5
INFO:root:Chunked 100 in [9, 9, 9, 9, 8, 8, 8, 8, 8, 8, 8, 8]
INFO:root:Considering 100 * 1 jobs for minsize=6
INFO:root:Chunked 100 in [9, 9, 9, 9, 8, 8, 8, 8, 8, 8, 8, 8]
INFO:root:Considering 100 * 1 jobs for minsize=7
INFO:root:Chunked 100 in [9, 9, 9, 9, 8, 8, 8, 8, 8, 8, 8, 8]
INFO:root:Considering 100 * 1 jobs for minsize=8
INFO:root:Chunked 100 in [9, 9, 9, 9, 8, 8, 8, 8, 8, 8, 8, 8]
INFO:root:Considering 100 * 1 jobs for minsize=9
INFO:root:Chunked 100 in [9, 9, 9, 9, 8, 8, 8, 8, 8, 8, 8, 8]
INFO:root:Considering 100 * 1 jobs for minsize=10
INFO:root:Chunked 100 in [9, 9, 9, 9, 8, 8, 8, 8, 8, 8, 8, 8]
INFO:root:Considering 100 * 1 jobs for minsize=11
INFO:root:Chunked 100 in [9, 9, 9, 9, 8, 8, 8, 8, 8, 8, 8, 8]
INFO:root:Considering 100 * 1 jobs for minsize=12
INFO:root:Chunked 100 in [9, 9, 9, 9, 8, 8, 8, 8, 8, 8, 8, 8]
INFO:root:Considering 100 * 1 jobs for minsize=13
INFO:root:Chunked 100 in [9, 9, 9, 9, 8, 8, 8, 8, 8, 8, 8, 8]
INFO:root:Considering 100 * 1 jobs for minsize=14
INFO:root:Chunked 100 in [9, 9, 9, 9, 8, 8, 8, 8, 8, 8, 8, 8]
INFO:root:Considering 100 * 1 jobs for minsize=15
INFO:root:Chunked 100 in [9, 9, 9, 9, 8, 8, 8, 8, 8, 8, 8, 8]
INFO:root:Considering 100 * 1 jobs for minsize=16
INFO:root:Chunked 100 in [9, 9, 9, 9, 8, 8, 8, 8, 8, 8, 8, 8]
INFO:root:Considering 100 * 1 jobs for minsize=17
INFO:root:Chunked 100 in [9, 9, 9, 9, 8, 8, 8, 8, 8, 8, 8, 8]
INFO:root:Considering 100 * 1 jobs for minsize=18
INFO:root:Chunked 100 in [9, 9, 9, 9, 8, 8, 8, 8, 8, 8, 8, 8]
INFO:root:Considering 100 * 1 jobs for minsize=19
INFO:root:Chunked 100 in [9, 9, 9, 9, 8, 8, 8, 8, 8, 8, 8, 8]
INFO:root:Considering 100 * 1 jobs for minsize=20
INFO:root:Chunked 100 in [9, 9, 9, 9, 8, 8, 8, 8, 8, 8, 8, 8]
INFO:root:Considering 100 * 1 jobs for minsize=21
INFO:root:Chunked 100 in [9, 9, 9, 9, 8, 8, 8, 8, 8, 8, 8, 8]
INFO:root:Considering 100 * 1 jobs for minsize=22
INFO:root:Chunked 100 in [9, 9, 9, 9, 8, 8, 8, 8, 8, 8, 8, 8]
INFO:root:Considering 100 * 1 jobs for minsize=23
INFO:root:Chunked 100 in [9, 9, 9, 9, 8, 8, 8, 8, 8, 8, 8, 8]
INFO:root:Considering 100 * 1 jobs for minsize=24
INFO:root:Chunked 100 in [9, 9, 9, 9, 8, 8, 8, 8, 8, 8, 8, 8]
INFO:root:Considering 100 * 1 jobs for minsize=25
INFO:root:Chunked 100 in [9, 9, 9, 9, 8, 8, 8, 8, 8, 8, 8, 8]
INFO:root:Considering 100 * 1 jobs for minsize=26
INFO:root:Chunked 100 in [9, 9, 9, 9, 8, 8, 8, 8, 8, 8, 8, 8]
INFO:root:Considering 100 * 1 jobs for minsize=27
INFO:root:Chunked 100 in [9, 9, 9, 9, 8, 8, 8, 8, 8, 8, 8, 8]
INFO:root:Considering 100 * 1 jobs for minsize=28
INFO:root:Chunked 100 in [9, 9, 9, 9, 8, 8, 8, 8, 8, 8, 8, 8]
INFO:root:XX found first (2, 4) is not 4 28
INFO:root:Trace: [(28, [(2, 4) is not 4])]
INFO:root:Trace Quality: [(28, 1)]
INFO:root:Trace Sorted: [(28, 1)]
INFO:root:Finished
INFO:root:Full Trace [(28, [(2, 4) is not 4])]
INFO:root:Trying {'gallopingMUSes': True, 'minPrecheckMUS': True}
INFO:root:Starting Step 1
INFO:root:Current state [[[[1, 5, 8], [1, 5, 8], [7], [1, 5, 6, 8], [2], [1, 5, 6, 9], [1, 3, 5, 8], [1, 3, 8, 9], [4]], [[9], [3], [1, 2, 4, 5, 8], [1, 4, 5, 8], [4, 7, 8], [1, 4, 5, 7], [6], [1, 2, 7, 8], [2, 5, 7]], [[6], [1, 4, 5, 8], [1, 2, 4, 5, 8], [3], [4, 7, 8, 9], [1, 4, 5, 7, 9], [1, 2, 5, 7, 8], [1, 2, 7, 8, 9], [2, 5, 7, 9]], [[1, 3, 4, 7, 8], [1, 4, 7, 8, 9], [1, 4, 8], [2, 4, 8], [3, 4, 6, 7, 8], [2, 4, 7], [1, 2, 7], [5], [6, 9]], [[2], [4, 5, 7, 9], [4, 5, 9], [4, 5, 6], [1], [3, 4, 5, 6, 7], [3, 7], [6, 9], [8]], [[1, 3, 5, 7, 8], [1, 5, 7, 8], [6], [9], [3, 7, 8], [2, 5, 7], [4], [1, 2, 7], [2, 3, 7]], [[1, 4, 5, 8], [1, 4, 5, 6, 8], [3], [7], [4, 6], [1, 2], [9], [2, 4, 8], [2, 5, 6]], [[4, 7, 8], [2], [4, 8, 9], [4, 6], [5], [3, 9], [3, 7, 8], [3, 4, 6, 7, 8], [1]], [[1, 4, 5, 7], [1, 4, 5, 6, 7, 9], [1, 4, 5, 9], [1, 2], [3, 9], [8], [2, 5, 7], [2, 4, 7], [2, 3, 5, 6, 7]]]]
INFO:root:Doing checkSmall1
INFO:root:Getting tiny MUSes, distance 1, for 1 puzlits, 1 repeats
INFO:root:Chunked 1 in [1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
INFO:root:Doing checkSmall2
INFO:root:Getting tiny MUSes, distance 2, for 1 puzlits, 1 repeats
INFO:root:Chunked 1 in [1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
INFO:root:Considering 100 * 1 jobs for minsize=3
INFO:root:Chunked 100 in [9, 9, 9, 9, 8, 8, 8, 8, 8, 8, 8, 8]
INFO:root:Considering 100 * 1 jobs for minsize=4
INFO:root:Chunked 100 in [9, 9, 9, 9, 8, 8, 8, 8, 8, 8, 8, 8]
INFO:root:Considering 100 * 1 jobs for minsize=5
INFO:root:Chunked 100 in [9, 9, 9, 9, 8, 8, 8, 8, 8, 8, 8, 8]
INFO:root:Considering 100 * 1 jobs for minsize=6
INFO:root:Chunked 100 in [9, 9, 9, 9, 8, 8, 8, 8, 8, 8, 8, 8]
INFO:root:Considering 100 * 1 jobs for minsize=7
INFO:root:Chunked 100 in [9, 9, 9, 9, 8, 8, 8, 8, 8, 8, 8, 8]
INFO:root:Considering 100 * 1 jobs for minsize=8
INFO:root:Chunked 100 in [9, 9, 9, 9, 8, 8, 8, 8, 8, 8, 8, 8]
INFO:root:Considering 100 * 1 jobs for minsize=9
INFO:root:Chunked 100 in [9, 9, 9, 9, 8, 8, 8, 8, 8, 8, 8, 8]
INFO:root:Considering 100 * 1 jobs for minsize=10
INFO:root:Chunked 100 in [9, 9, 9, 9, 8, 8, 8, 8, 8, 8, 8, 8]
INFO:root:Considering 100 * 1 jobs for minsize=11
INFO:root:Chunked 100 in [9, 9, 9, 9, 8, 8, 8, 8, 8, 8, 8, 8]
INFO:root:Considering 100 * 1 jobs for minsize=12
INFO:root:Chunked 100 in [9, 9, 9, 9, 8, 8, 8, 8, 8, 8, 8, 8]
INFO:root:Considering 100 * 1 jobs for minsize=13
INFO:root:Chunked 100 in [9, 9, 9, 9, 8, 8, 8, 8, 8, 8, 8, 8]
INFO:root:Considering 100 * 1 jobs for minsize=14
INFO:root:Chunked 100 in [9, 9, 9, 9, 8, 8, 8, 8, 8, 8, 8, 8]
INFO:root:Considering 100 * 1 jobs for minsize=15
INFO:root:Chunked 100 in [9, 9, 9, 9, 8, 8, 8, 8, 8, 8, 8, 8]
INFO:root:Considering 100 * 1 jobs for minsize=16
INFO:root:Chunked 100 in [9, 9, 9, 9, 8, 8, 8, 8, 8, 8, 8, 8]
INFO:root:Considering 100 * 1 jobs for minsize=17
INFO:root:Chunked 100 in [9, 9, 9, 9, 8, 8, 8, 8, 8, 8, 8, 8]
INFO:root:Considering 100 * 1 jobs for minsize=18
INFO:root:Chunked 100 in [9, 9, 9, 9, 8, 8, 8, 8, 8, 8, 8, 8]
INFO:root:Considering 100 * 1 jobs for minsize=19
INFO:root:Chunked 100 in [9, 9, 9, 9, 8, 8, 8, 8, 8, 8, 8, 8]
INFO:root:Considering 100 * 1 jobs for minsize=20
INFO:root:Chunked 100 in [9, 9, 9, 9, 8, 8, 8, 8, 8, 8, 8, 8]
INFO:root:Considering 100 * 1 jobs for minsize=21
INFO:root:Chunked 100 in [9, 9, 9, 9, 8, 8, 8, 8, 8, 8, 8, 8]
INFO:root:Considering 100 * 1 jobs for minsize=22
INFO:root:Chunked 100 in [9, 9, 9, 9, 8, 8, 8, 8, 8, 8, 8, 8]
INFO:root:Considering 100 * 1 jobs for minsize=23
INFO:root:Chunked 100 in [9, 9, 9, 9, 8, 8, 8, 8, 8, 8, 8, 8]
INFO:root:Considering 100 * 1 jobs for minsize=24
INFO:root:Chunked 100 in [9, 9, 9, 9, 8, 8, 8, 8, 8, 8, 8, 8]
INFO:root:Considering 100 * 1 jobs for minsize=25
INFO:root:Chunked 100 in [9, 9, 9, 9, 8, 8, 8, 8, 8, 8, 8, 8]
INFO:root:Considering 100 * 1 jobs for minsize=26
INFO:root:Chunked 100 in [9, 9, 9, 9, 8, 8, 8, 8, 8, 8, 8, 8]
INFO:root:Considering 100 * 1 jobs for minsize=27
INFO:root:Chunked 100 in [9, 9, 9, 9, 8, 8, 8, 8, 8, 8, 8, 8]
INFO:root:Considering 100 * 1 jobs for minsize=28
INFO:root:Chunked 100 in [9, 9, 9, 9, 8, 8, 8, 8, 8, 8, 8, 8]
INFO:root:XX found first (2, 4) is not 4 28
INFO:root:Trace: [(28, [(2, 4) is not 4])]
INFO:root:Trace Quality: [(28, 1)]
INFO:root:Trace Sorted: [(28, 1)]
INFO:root:Finished
INFO:root:Full Trace [(28, [(2, 4) is not 4])]
INFO:root:Trying {}
INFO:root:Starting Step 1
INFO:root:Current state [[[[1], [8], [5], [4, 9], [2], [6], [3], [7], [4, 9]], [[2, 3, 4], [6], [2, 3, 4], [3, 5, 7, 9], [1, 3, 4], [1, 3, 5, 7], [2, 4, 5, 8], [2, 8], [2, 5, 8, 9]], [[2, 3, 4], [9], [7], [3, 4, 5], [3, 4], [8], [1], [2, 6], [2, 4, 5, 6]], [[4, 6, 7, 8], [1], [4, 8], [3, 8], [5], [2], [6, 8], [9], [3, 7]], [[2, 5, 7, 9], [2, 7], [2, 9], [3, 4, 8], [6], [3, 4], [2, 5, 8], [1, 3], [1, 3, 7]], [[2, 5, 6, 8], [3], [2, 8], [1], [7], [9], [2, 5, 6, 8], [4], [2, 5, 6, 8]], [[2, 3, 7, 8], [4], [1], [6], [3, 8], [3, 7], [9], [5], [2, 3, 8]], [[2, 3, 7, 8, 9], [2, 7], [2, 3, 8, 9], [3, 5, 7], [1, 3, 4, 8], [1, 3, 4, 5, 7], [2, 4, 6, 8], [1, 2, 3, 6, 8], [1, 2, 3, 4, 6, 8]], [[3, 8], [5], [6], [2], [9], [1, 3, 4], [7], [1, 3, 8], [1, 3, 4, 8]]]]
INFO:root:Doing checkSmall1
INFO:root:Getting tiny MUSes, distance 1, for 1 puzlits, 1 repeats
INFO:root:Chunked 1 in [1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
INFO:root:Doing checkSmall2
INFO:root:Getting tiny MUSes, distance 2, for 1 puzlits, 1 repeats
INFO:root:Chunked 1 in [1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
INFO:root:Considering 100 * 1 jobs for minsize=3
INFO:root:Chunked 100 in [9, 9, 9, 9, 8, 8, 8, 8, 8, 8, 8, 8]
INFO:root:Considering 100 * 1 jobs for minsize=4
INFO:root:Chunked 100 in [9, 9, 9, 9, 8, 8, 8, 8, 8, 8, 8, 8]
INFO:root:Considering 100 * 1 jobs for minsize=5
INFO:root:Chunked 100 in [9, 9, 9, 9, 8, 8, 8, 8, 8, 8, 8, 8]
INFO:root:Considering 100 * 1 jobs for minsize=6
INFO:root:Chunked 100 in [9, 9, 9, 9, 8, 8, 8, 8, 8, 8, 8, 8]
INFO:root:XX found first (3, 4) is not 4 7
INFO:root:XX add new best (3, 4) is not 4 7 7
INFO:root:XX add new best (3, 4) is not 4 7 7
INFO:root:XX add new best (3, 4) is not 4 7 7
INFO:root:XX add new best (3, 4) is not 4 7 7
INFO:root:XX add new best (3, 4) is not 4 7 7
INFO:root:XX add new best (3, 4) is not 4 7 7
INFO:root:XX add new best (3, 4) is not 4 7 7
INFO:root:XX add new best (3, 4) is not 4 7 7
INFO:root:XX add new best (3, 4) is not 4 7 7
INFO:root:XX add new best (3, 4) is not 4 7 7
INFO:root:XX add new best (3, 4) is not 4 7 7
INFO:root:XX add new best (3, 4) is not 4 7 7
INFO:root:XX add new best (3, 4) is not 4 7 7
INFO:root:XX add new best (3, 4) is not 4 7 7
INFO:root:XX add new best (3, 4) is not 4 7 7
INFO:root:XX add new best (3, 4) is not 4 7 7
INFO:root:XX add new best (3, 4) is not 4 7 7
INFO:root:XX add new best (3, 4) is not 4 7 7
INFO:root:XX add new best (3, 4) is not 4 7 7
INFO:root:XX add new best (3, 4) is not 4 7 7
INFO:root:XX add new best (3, 4) is not 4 7 7
INFO:root:XX add new best (3, 4) is not 4 7 7
INFO:root:XX add new best (3, 4) is not 4 7 7
INFO:root:XX add new best (3, 4) is not 4 7 7
INFO:root:XX add new best (3, 4) is not 4 7 7
INFO:root:XX add new best (3, 4) is not 4 7 7
INFO:root:XX add new best (3, 4) is not 4 7 7
INFO:root:XX add new best (3, 4) is not 4 7 7
INFO:root:XX add new best (3, 4) is not 4 7 7
INFO:root:XX add new best (3, 4) is not 4 7 7
INFO:root:XX add new best (3, 4) is not 4 7 7
INFO:root:XX add new best (3, 4) is not 4 7 7
INFO:root:XX add new best (3, 4) is not 4 7 7
INFO:root:XX add new best (3, 4) is not 4 7 7
INFO:root:XX add new best (3, 4) is not 4 7 7
INFO:root:XX add new best (3, 4) is not 4 7 7
INFO:root:XX add new best (3, 4) is not 4 7 7
INFO:root:XX add new best (3, 4) is not 4 7 7
INFO:root:XX add new best (3, 4) is not 4 7 7
INFO:root:XX add new best (3, 4) is not 4 7 7
INFO:root:XX add new best (3, 4) is not 4 7 7
INFO:root:XX add new best (3, 4) is not 4 7 7
INFO:root:XX add new best (3, 4) is not 4 7 7
INFO:root:XX add new best (3, 4) is not 4 7 7
INFO:root:XX add new best (3, 4) is not 4 7 7
INFO:root:XX add new best (3, 4) is not 4 7 7
INFO:root:XX add new best (3, 4) is not 4 7 7
INFO:root:XX add new best (3, 4) is not 4 7 7
INFO:root:XX add new best (3, 4) is not 4 7 7
INFO:root:XX add new best (3, 4) is not 4 7 7
INFO:root:XX add new best (3, 4) is not 4 7 7
INFO:root:XX add new best (3, 4) is not 4 7 7
INFO:root:XX add new best (3, 4) is not 4 7 7
INFO:root:XX add new best (3, 4) is not 4 7 7
INFO:root:XX add new best (3, 4) is not 4 7 7
INFO:root:XX add new best (3, 4) is not 4 7 7
INFO:root:XX add new best (3, 4) is not 4 7 7
INFO:root:XX add new best (3, 4) is not 4 7 7
INFO:root:XX add new best (3, 4) is not 4 7 7
INFO:root:XX add new best (3, 4) is not 4 7 7
INFO:root:XX add new best (3, 4) is not 4 7 7
INFO:root:XX add new best (3, 4) is not 4 7 7
INFO:root:XX add new best (3, 4) is not 4 7 7
INFO:root:XX add new best (3, 4) is not 4 7 7
INFO:root:XX add new best (3, 4) is not 4 7 7
INFO:root:XX add new best (3, 4) is not 4 7 7
INFO:root:XX add new best (3, 4) is not 4 7 7
INFO:root:XX add new best (3, 4) is not 4 7 7
INFO:root:XX add new best (3, 4) is not 4 7 7
INFO:root:XX add new best (3, 4) is not 4 7 7
INFO:root:XX add new best (3, 4) is not 4 7 7
INFO:root:XX add new best (3, 4) is not 4 7 7
INFO:root:XX add new best (3, 4) is not 4 7 7
INFO:root:XX add new best (3, 4) is not 4 7 7
INFO:root:XX add new best (3, 4) is not 4 7 7
INFO:root:XX add new best (3, 4) is not 4 7 7
INFO:root:XX add new best (3, 4) is not 4 7 7
INFO:root:XX add new best (3, 4) is not 4 7 7
INFO:root:XX add new best (3, 4) is not 4 7 7
INFO:root:XX add new best (3, 4) is not 4 7 7
INFO:root:XX add new best (3, 4) is not 4 7 7
INFO:root:XX add new best (3, 4) is not 4 7 7
INFO:root:XX add new best (3, 4) is not 4 7 7
INFO:root:XX add new best (3, 4) is not 4 7 7
INFO:root:XX add new best (3, 4) is not 4 7 7
INFO:root:XX add new best (3, 4) is not 4 7 7
INFO:root:XX add new best (3, 4) is not 4 7 7
INFO:root:XX add new best (3, 4) is not 4 7 7
INFO:root:XX add new best (3, 4) is not 4 7 7
INFO:root:XX add new best (3, 4) is not 4 7 7
INFO:root:XX add new best (3, 4) is not 4 7 7
INFO:root:XX add new best (3, 4) is not 4 7 7
INFO:root:XX add new best (3, 4) is not 4 7 7
INFO:root:XX add new best (3, 4) is not 4 7 7
INFO:root:XX add new best (3, 4) is not 4 7 7
INFO:root:XX add new best (3, 4) is not 4 7 7
INFO:root:XX add new best (3, 4) is not 4 7 7
INFO:root:XX add new best (3, 4) is not 4 7 7
INFO:root:XX add new best (3, 4) is not 4 7 7
INFO:root:Considering 100 * 1 jobs for minsize=7
INFO:root:Chunked 100 in [9, 9, 9, 9, 8, 8, 8, 8, 8, 8, 8, 8]
INFO:root:XX add new best (3, 4) is not 4 7 7
INFO:root:XX add new best (3, 4) is not 4 7 7
INFO:root:XX add new best (3, 4) is not 4 7 7
INFO:root:XX add new best (3, 4) is not 4 7 7
INFO:root:XX add new best (3, 4) is not 4 7 7
INFO:root:XX add new best (3, 4) is not 4 7 7
INFO:root:XX add new best (3, 4) is not 4 7 7
INFO:root:XX add new best (3, 4) is not 4 7 7
INFO:root:XX add new best (3, 4) is not 4 7 7
INFO:root:XX add new best (3, 4) is not 4 7 7
INFO:root:XX add new best (3, 4) is not 4 7 7
INFO:root:XX add new best (3, 4) is not 4 7 7
INFO:root:XX add new best (3, 4) is not 4 7 7
INFO:root:XX add new best (3, 4) is not 4 7 7
INFO:root:XX add new best (3, 4) is not 4 7 7
INFO:root:XX add new best (3, 4) is not 4 7 7
INFO:root:XX add new best (3, 4) is not 4 7 7
INFO:root:XX add new best (3, 4) is not 4 7 7
INFO:root:XX add new best (3, 4) is not 4 7 7
INFO:root:XX add new best (3, 4) is not 4 7 7
INFO:root:XX add new best (3, 4) is not 4 7 7
INFO:root:XX add new best (3, 4) is not 4 7 7
INFO:root:XX add new best (3, 4) is not 4 7 7
INFO:root:XX add new best (3, 4) is not 4 7 7
INFO:root:XX add new best (3, 4) is not 4 7 7
INFO:root:XX add new best (3, 4) is not 4 7 7
INFO:root:XX add new best (3, 4) is not 4 7 7
INFO:root:XX add new best (3, 4) is not 4 7 7
INFO:root:XX add new best (3, 4) is not 4 7 7
INFO:root:XX add new best (3, 4) is not 4 7 7
INFO:root:XX add new best (3, 4) is not 4 7 7
INFO:root:XX add new best (3, 4) is not 4 7 7
INFO:root:XX add new best (3, 4) is not 4 7 7
INFO:root:XX add new best (3, 4) is not 4 7 7
INFO:root:XX add new best (3, 4) is not 4 7 7
INFO:root:XX add new best (3, 4) is not 4 7 7
INFO:root:XX add new best (3, 4) is not 4 7 7
INFO:root:XX add new best (3, 4) is not 4 7 7
INFO:root:XX add new best (3, 4) is not 4 7 7
INFO:root:XX add new best (3, 4) is not 4 7 7
INFO:root:XX add new best (3, 4) is not 4 7 7
INFO:root:XX add new best (3, 4) is not 4 7 7
INFO:root:XX add new best (3, 4) is not 4 7 7
INFO:root:XX add new best (3, 4) is not 4 7 7
INFO:root:XX add new best (3, 4) is not 4 7 7
INFO:root:XX add new best (3, 4) is not 4 7 7
INFO:root:XX add new best (3, 4) is not 4 7 7
INFO:root:XX add new best (3, 4) is not 4 7 7
INFO:root:XX add new best (3, 4) is not 4 7 7
INFO:root:XX add new best (3, 4) is not 4 7 7
INFO:root:XX add new best (3, 4) is not 4 7 7
INFO:root:XX add new best (3, 4) is not 4 7 7
INFO:root:XX add new best (3, 4) is not 4 7 7
INFO:root:XX add new best (3, 4) is not 4 7 7
INFO:root:XX add new best (3, 4) is not 4 7 7
INFO:root:XX add new best (3, 4) is not 4 7 7
INFO:root:XX add new best (3, 4) is not 4 7 7
INFO:root:XX add new best (3, 4) is not 4 7 7
INFO:root:XX add new best (3, 4) is not 4 7 7
INFO:root:XX add new best (3, 4) is not 4 7 7
INFO:root:XX add new best (3, 4) is not 4 7 7
INFO:root:XX add new best (3, 4) is not 4 7 7
INFO:root:XX add new best (3, 4) is not 4 7 7
INFO:root:XX add new best (3, 4) is not 4 7 7
INFO:root:XX add new best (3, 4) is not 4 7 7
INFO:root:XX add new best (3, 4) is not 4 7 7
INFO:root:XX add new best (3, 4) is not 4 7 7
INFO:root:XX add new best (3, 4) is not 4 7 7
INFO:root:XX add new best (3, 4) is not 4 7 7
INFO:root:XX add new best (3, 4) is not 4 7 7
INFO:root:XX add new best (3, 4) is not 4 7 7
INFO:root:XX add new best (3, 4) is not 4 7 7
INFO:root:XX add new best (3, 4) is not 4 7 7
INFO:root:XX add new best (3, 4) is not 4 7 7
INFO:root:XX add new best (3, 4) is not 4 7 7
INFO:root:XX add new best (3, 4) is not 4 7 7
INFO:root:XX add new best (3, 4) is not 4 7 7
INFO:root:XX add new best (3, 4) is not 4 7 7
INFO:root:XX add new best (3, 4) is not 4 7 7
INFO:root:XX add new best (3, 4) is not 4 7 7
INFO:root:XX add new best (3, 4) is not 4 7 7
INFO:root:XX add new best (3, 4) is not 4 7 7
INFO:root:XX add new best (3, 4) is not 4 7 7
INFO:root:XX add new best (3, 4) is not 4 7 7
INFO:root:XX add new best (3, 4) is not 4 7 7
INFO:root:XX add new best (3, 4) is not 4 7 7
INFO:root:XX add new best (3, 4) is not 4 7 7
INFO:root:XX add new best (3, 4) is not 4 7 7
INFO:root:XX add new best (3, 4) is not 4 7 7
INFO:root:XX add new best (3, 4) is not 4 7 7
INFO:root:XX add new best (3, 4) is not 4 7 7
INFO:root:XX add new best (3, 4) is not 4 7 7
INFO:root:XX add new best (3, 4) is not 4 7 7
INFO:root:XX add new best (3, 4) is not 4 7 7
INFO:root:XX add new best (3, 4) is not 4 7 7
INFO:root:XX add new best (3, 4) is not 4 7 7
INFO:root:XX add new best (3, 4) is not 4 7 7
INFO:root:XX add new best (3, 4) is not 4 7 7
INFO:root:XX add new best (3, 4) is not 4 7 7
INFO:root:XX add new best (3, 4) is not 4 7 7
INFO:root:Trace: [(7, [(3, 4) is not 4])]
INFO:root:Trace Quality: [(7, 1)]
INFO:root:Trace Sorted: [(7, 1)]
INFO:root:Finished
INFO:root:Full Trace [(7, [(3, 4) is not 4])]
INFO:root:Trying {'prechopMUSes': True}
INFO:root:Starting Step 1
INFO:root:Current state [[[[1], [8], [5], [4, 9], [2], [6], [3], [7], [4, 9]], [[2, 3, 4], [6], [2, 3, 4], [3, 5, 7, 9], [1, 3, 4], [1, 3, 5, 7], [2, 4, 5, 8], [2, 8], [2, 5, 8, 9]], [[2, 3, 4], [9], [7], [3, 4, 5], [3, 4], [8], [1], [2, 6], [2, 4, 5, 6]], [[4, 6, 7, 8], [1], [4, 8], [3, 8], [5], [2], [6, 8], [9], [3, 7]], [[2, 5, 7, 9], [2, 7], [2, 9], [3, 4, 8], [6], [3, 4], [2, 5, 8], [1, 3], [1, 3, 7]], [[2, 5, 6, 8], [3], [2, 8], [1], [7], [9], [2, 5, 6, 8], [4], [2, 5, 6, 8]], [[2, 3, 7, 8], [4], [1], [6], [3, 8], [3, 7], [9], [5], [2, 3, 8]], [[2, 3, 7, 8, 9], [2, 7], [2, 3, 8, 9], [3, 5, 7], [1, 3, 4, 8], [1, 3, 4, 5, 7], [2, 4, 6, 8], [1, 2, 3, 6, 8], [1, 2, 3, 4, 6, 8]], [[3, 8], [5], [6], [2], [9], [1, 3, 4], [7], [1, 3, 8], [1, 3, 4, 8]]]]
INFO:root:Doing checkSmall1
INFO:root:Getting tiny MUSes, distance 1, for 1 puzlits, 1 repeats
INFO:root:Chunked 1 in [1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
INFO:root:Doing checkSmall2
INFO:root:Getting tiny MUSes, distance 2, for 1 puzlits, 1 repeats
INFO:root:Chunked 1 in [1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
INFO:root:Considering 100 * 1 jobs for minsize=3
INFO:root:Chunked 100 in [9, 9, 9, 9, 8, 8, 8, 8, 8, 8, 8, 8]
INFO:root:Considering 100 * 1 jobs for minsize=4
INFO:root:Chunked 100 in [9, 9, 9, 9, 8, 8, 8, 8, 8, 8, 8, 8]
INFO:root:Considering 100 * 1 jobs for minsize=5
INFO:root:Chunked 100 in [9, 9, 9, 9, 8, 8, 8, 8, 8, 8, 8, 8]
INFO:root:Considering 100 * 1 jobs for minsize=6
INFO:root:Chunked 100 in [9, 9, 9, 9, 8, 8, 8, 8, 8, 8, 8, 8]
INFO:root:XX found first (3, 4) is not 4 7
INFO:root:XX add new best (3, 4) is not 4 7 7
INFO:root:XX add new best (3, 4) is not 4 7 7
INFO:root:XX add new best (3, 4) is not 4 7 7
INFO:root:XX add new best (3, 4) is not 4 7 7
INFO:root:XX add new best (3, 4) is not 4 7 7
INFO:root:XX add new best (3, 4) is not 4 7 7
INFO:root:XX add new best (3, 4) is not 4 7 7
INFO:root:XX add new best (3, 4) is not 4 7 7
INFO:root:XX add new best (3, 4) is not 4 7 7
INFO:root:XX add new best (3, 4) is not 4 7 7
INFO:root:XX add new best (3, 4) is not 4 7 7
INFO:root:XX add new best (3, 4) is not 4 7 7
INFO:root:XX add new best (3, 4) is not 4 7 7
INFO:root:Considering 100 * 1 jobs for minsize=7
INFO:root:Chunked 100 in [9, 9, 9, 9, 8, 8, 8, 8, 8, 8, 8, 8]
INFO:root:XX add new best (3, 4) is not 4 7 7
INFO:root:XX add new best (3, 4) is not 4 7 7
INFO:root:XX add new best (3, 4) is not 4 7 7
INFO:root:XX add new best (3, 4) is not 4 7 7
INFO:root:XX add new best (3, 4) is not 4 7 7
INFO:root:XX add new best (3, 4) is not 4 7 7
INFO:root:XX add new best (3, 4) is not 4 7 7
INFO:root:XX add new best (3, 4) is not 4 7 7
INFO:root:XX add new best (3, 4) is not 4 7 7
INFO:root:XX add new best (3, 4) is not 4 7 7
INFO:root:XX add new best (3, 4) is not 4 7 7
INFO:root:XX add new best (3, 4) is not 4 7 7
INFO:root:Trace: [(7, [(3, 4) is not 4])]
INFO:root:Trace Quality: [(7, 1)]
INFO:root:Trace Sorted: [(7, 1)]
INFO:root:Finished
INFO:root:Full Trace [(7, [(3, 4) is not 4])]
INFO:root:Trying {'quarterChopMUS': True}
INFO:root:Starting Step 1
INFO:root:Current state [[[[1], [8], [5], [4, 9], [2], [6], [3], [7], [4, 9]], [[2, 3, 4], [6], [2, 3, 4], [3, 5, 7, 9], [1, 3, 4], [1, 3, 5, 7], [2, 4, 5, 8], [2, 8], [2, 5, 8, 9]], [[2, 3, 4], [9], [7], [3, 4, 5], [3, 4], [8], [1], [2, 6], [2, 4, 5, 6]], [[4, 6, 7, 8], [1], [4, 8], [3, 8], [5], [2], [6, 8], [9], [3, 7]], [[2, 5, 7, 9], [2, 7], [2, 9], [3, 4, 8], [6], [3, 4], [2, 5, 8], [1, 3], [1, 3, 7]], [[2, 5, 6, 8], [3], [2, 8], [1], [7], [9], [2, 5, 6, 8], [4], [2, 5, 6, 8]], [[2, 3, 7, 8], [4], [1], [6], [3, 8], [3, 7], [9], [5], [2, 3, 8]], [[2, 3, 7, 8, 9], [2, 7], [2, 3, 8, 9], [3, 5, 7], [1, 3, 4, 8], [1, 3, 4, 5, 7], [2, 4, 6, 8], [1, 2, 3, 6, 8], [1, 2, 3, 4, 6, 8]], [[3, 8], [5], [6], [2], [9], [1, 3, 4], [7], [1, 3, 8], [1, 3, 4, 8]]]]
INFO:root:Doing checkSmall1
INFO:root:Getting tiny MUSes, distance 1, for 1 puzlits, 1 repeats
INFO:root:Chunked 1 in [1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
INFO:root:Doing checkSmall2
INFO:root:Getting tiny MUSes, distance 2, for 1 puzlits, 1 repeats
INFO:root:Chunked 1 in [1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
INFO:root:Considering 100 * 1 jobs for minsize=3
INFO:root:Chunked 100 in [9, 9, 9, 9, 8, 8, 8, 8, 8, 8, 8, 8]
INFO:root:Considering 100 * 1 jobs for minsize=4
INFO:root:Chunked 100 in [9, 9, 9, 9, 8, 8, 8, 8, 8, 8, 8, 8]
INFO:root:Considering 100 * 1 jobs for minsize=5
INFO:root:Chunked 100 in [9, 9, 9, 9, 8, 8, 8, 8, 8, 8, 8, 8]
INFO:root:Considering 100 * 1 jobs for minsize=6
INFO:root:Chunked 100 in [9, 9, 9, 9, 8, 8, 8, 8, 8, 8, 8, 8]
INFO:root:XX found first (3, 4) is not 4 7
INFO:root:XX add new best (3, 4) is not 4 7 7
INFO:root:XX add new best (3, 4) is not 4 7 7
INFO:root:XX add new best (3, 4) is not 4 7 7
INFO:root:XX add new best (3, 4) is not 4 7 7
INFO:root:XX add new best (3, 4) is not 4 7 7
INFO:root:XX add new best (3, 4) is not 4 7 7
INFO:root:XX add new best (3, 4) is not 4 7 7
INFO:root:XX add new best (3, 4) is not 4 7 7
INFO:root:XX add new best (3, 4) is not 4 7 7
INFO:root:XX add new best (3, 4) is not 4 7 7
INFO:root:XX add new best (3, 4) is not 4 7 7
INFO:root:XX add new best (3, 4) is not 4 7 7
INFO:root:XX add new best (3, 4) is not 4 7 7
INFO:root:XX add new best (3, 4) is not 4 7 7
INFO:root:XX add new best (3, 4) is not 4 7 7
INFO:root:XX add new best (3, 4) is not 4 7 7
INFO:root:XX add new best (3, 4) is not 4 7 7
INFO:root:XX add new best (3, 4) is not 4 7 7
INFO:root:XX add new best (3, 4) is not 4 7 7
INFO:root:XX add new best (3, 4) is not 4 7 7
INFO:root:XX add new best (3, 4) is not 4 7 7
INFO:root:XX add new best (3, 4) is not 4 7 7
INFO:root:XX add new best (3, 4) is not 4 7 7
INFO:root:XX add new best (3, 4) is not 4 7 7
INFO:root:XX add new best (3, 4) is not 4 7 7
INFO:root:XX add new best (3, 4) is not 4 7 7
INFO:root:XX add new best (3, 4) is not 4 7 7
INFO:root:Considering 100 * 1 jobs for minsize=7
INFO:root:Chunked 100 in [9, 9, 9, 9, 8, 8, 8, 8, 8, 8, 8, 8]
INFO:root:XX add new best (3, 4) is not 4 7 7
INFO:root:XX add new best (3, 4) is not 4 7 7
INFO:root:XX add new best (3, 4) is not 4 7 7
INFO:root:XX add new best (3, 4) is not 4 7 7
INFO:root:XX add new best (3, 4) is not 4 7 7
INFO:root:XX add new best (3, 4) is not 4 7 7
INFO:root:XX add new best (3, 4) is not 4 7 7
INFO:root:XX add new best (3, 4) is not 4 7 7
INFO:root:XX add new best (3, 4) is not 4 7 7
INFO:root:XX add new best (3, 4) is not 4 7 7
INFO:root:XX add new best (3, 4) is not 4 7 7
INFO:root:XX add new best (3, 4) is not 4 7 7
INFO:root:XX add new best (3, 4) is not 4 7 7
INFO:root:XX add new best (3, 4) is not 4 7 7
INFO:root:XX add new best (3, 4) is not 4 7 7
INFO:root:XX add new best (3, 4) is not 4 7 7
INFO:root:XX add new best (3, 4) is not 4 7 7
INFO:root:XX add new best (3, 4) is not 4 7 7
INFO:root:XX add new best (3, 4) is not 4 7 7
INFO:root:Trace: [(7, [(3, 4) is not 4])]
INFO:root:Trace Quality: [(7, 1)]
INFO:root:Trace Sorted: [(7, 1)]
INFO:root:Finished
INFO:root:Full Trace [(7, [(3, 4) is not 4])]
INFO:root:Trying {'minPrecheckMUS': True}
INFO:root:Starting Step 1
INFO:root:Current state [[[[1], [8], [5], [4, 9], [2], [6], [3], [7], [4, 9]], [[2, 3, 4], [6], [2, 3, 4], [3, 5, 7, 9], [1, 3, 4], [1, 3, 5, 7], [2, 4, 5, 8], [2, 8], [2, 5, 8, 9]], [[2, 3, 4], [9], [7], [3, 4, 5], [3, 4], [8], [1], [2, 6], [2, 4, 5, 6]], [[4, 6, 7, 8], [1], [4, 8], [3, 8], [5], [2], [6, 8], [9], [3, 7]], [[2, 5, 7, 9], [2, 7], [2, 9], [3, 4, 8], [6], [3, 4], [2, 5, 8], [1, 3], [1, 3, 7]], [[2, 5, 6, 8], [3], [2, 8], [1], [7], [9], [2, 5, 6, 8], [4], [2, 5, 6, 8]], [[2, 3, 7, 8], [4], [1], [6], [3, 8], [3, 7], [9], [5], [2, 3, 8]], [[2, 3, 7, 8, 9], [2, 7], [2, 3, 8, 9], [3, 5, 7], [1, 3, 4, 8], [1, 3, 4, 5, 7], [2, 4, 6, 8], [1, 2, 3, 6, 8], [1, 2, 3, 4, 6, 8]], [[3, 8], [5], [6], [2], [9], [1, 3, 4], [7], [1, 3, 8], [1, 3, 4, 8]]]]
INFO:root:Doing checkSmall1
INFO:root:Getting tiny MUSes, distance 1, for 1 puzlits, 1 repeats
INFO:root:Chunked 1 in [1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
INFO:root:Doing checkSmall2
INFO:root:Getting tiny MUSes, distance 2, for 1 puzlits, 1 repeats
INFO:root:Chunked 1 in [1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
INFO:root:Considering 100 * 1 jobs for minsize=3
INFO:root:Chunked 100 in [9, 9, 9, 9, 8, 8, 8, 8, 8, 8, 8, 8]
INFO:root:Considering 100 * 1 jobs for minsize=4
INFO:root:Chunked 100 in [9, 9, 9, 9, 8, 8, 8, 8, 8, 8, 8, 8]
INFO:root:Considering 100 * 1 jobs for minsize=5
INFO:root:Chunked 100 in [9, 9, 9, 9, 8, 8, 8, 8, 8, 8, 8, 8]
INFO:root:Considering 100 * 1 jobs for minsize=6
INFO:root:Chunked 100 in [9, 9, 9, 9, 8, 8, 8, 8, 8, 8, 8, 8]
INFO:root:XX found first (3, 4) is not 4 7
INFO:root:XX add new best (3, 4) is not 4 7 7
INFO:root:XX add new best (3, 4) is not 4 7 7
INFO:root:XX add new best (3, 4) is not 4 7 7
INFO:root:XX add new best (3, 4) is not 4 7 7
INFO:root:XX add new best (3, 4) is not 4 7 7
INFO:root:XX add new best (3, 4) is not 4 7 7
INFO:root:XX add new best (3, 4) is not 4 7 7
INFO:root:XX add new best (3, 4) is not 4 7 7
INFO:root:XX add new best (3, 4) is not 4 7 7
INFO:root:XX add new best (3, 4) is not 4 7 7
INFO:root:XX add new best (3, 4) is not 4 7 7
INFO:root:XX add new best (3, 4) is not 4 7 7
INFO:root:XX add new best (3, 4) is not 4 7 7
INFO:root:XX add new best (3, 4) is not 4 7 7
INFO:root:XX add new best (3, 4) is not 4 7 7
INFO:root:XX add new best (3, 4) is not 4 7 7
INFO:root:Considering 100 * 1 jobs for minsize=7
INFO:root:Chunked 100 in [9, 9, 9, 9, 8, 8, 8, 8, 8, 8, 8, 8]
INFO:root:XX add new best (3, 4) is not 4 7 7
INFO:root:XX add new best (3, 4) is not 4 7 7
INFO:root:XX add new best (3, 4) is not 4 7 7
INFO:root:XX add new best (3, 4) is not 4 7 7
INFO:root:XX add new best (3, 4) is not 4 7 7
INFO:root:XX add new best (3, 4) is not 4 7 7
INFO:root:XX add new best (3, 4) is not 4 7 7
INFO:root:XX add new best (3, 4) is not 4 7 7
INFO:root:XX add new best (3, 4) is not 4 7 7
INFO:root:Trace: [(7, [(3, 4) is not 4])]
INFO:root:Trace Quality: [(7, 1)]
INFO:root:Trace Sorted: [(7, 1)]
INFO:root:Finished
INFO:root:Full Trace [(7, [(3, 4) is not 4])]
INFO:root:Trying {'gallopingMUSes': True}
INFO:root:Starting Step 1
INFO:root:Current state [[[[1], [8], [5], [4, 9], [2], [6], [3], [7], [4, 9]], [[2, 3, 4], [6], [2, 3, 4], [3, 5, 7, 9], [1, 3, 4], [1, 3, 5, 7], [2, 4, 5, 8], [2, 8], [2, 5, 8, 9]], [[2, 3, 4], [9], [7], [3, 4, 5], [3, 4], [8], [1], [2, 6], [2, 4, 5, 6]], [[4, 6, 7, 8], [1], [4, 8], [3, 8], [5], [2], [6, 8], [9], [3, 7]], [[2, 5, 7, 9], [2, 7], [2, 9], [3, 4, 8], [6], [3, 4], [2, 5, 8], [1, 3], [1, 3, 7]], [[2, 5, 6, 8], [3], [2, 8], [1], [7], [9], [2, 5, 6, 8], [4], [2, 5, 6, 8]], [[2, 3, 7, 8], [4], [1], [6], [3, 8], [3, 7], [9], [5], [2, 3, 8]], [[2, 3, 7, 8, 9], [2, 7], [2, 3, 8, 9], [3, 5, 7], [1, 3, 4, 8], [1, 3, 4, 5, 7], [2, 4, 6, 8], [1, 2, 3, 6, 8], [1, 2, 3, 4, 6, 8]], [[3, 8], [5], [6], [2], [9], [1, 3, 4], [7], [1, 3, 8], [1, 3, 4, 8]]]]
INFO:root:Doing checkSmall1
INFO:root:Getting tiny MUSes, distance 1, for 1 puzlits, 1 repeats
INFO:root:Chunked 1 in [1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
INFO:root:Doing checkSmall2
INFO:root:Getting tiny MUSes, distance 2, for 1 puzlits, 1 repeats
INFO:root:Chunked 1 in [1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
INFO:root:Considering 100 * 1 jobs for minsize=3
INFO:root:Chunked 100 in [9, 9, 9, 9, 8, 8, 8, 8, 8, 8, 8, 8]
INFO:root:Considering 100 * 1 jobs for minsize=4
INFO:root:Chunked 100 in [9, 9, 9, 9, 8, 8, 8, 8, 8, 8, 8, 8]
INFO:root:Considering 100 * 1 jobs for minsize=5
INFO:root:Chunked 100 in [9, 9, 9, 9, 8, 8, 8, 8, 8, 8, 8, 8]
INFO:root:Considering 100 * 1 jobs for minsize=6
INFO:root:Chunked 100 in [9, 9, 9, 9, 8, 8, 8, 8, 8, 8, 8, 8]
INFO:root:XX found first (3, 4) is not 4 7
INFO:root:XX add new best (3, 4) is not 4 7 7
INFO:root:XX add new best (3, 4) is not 4 7 7
INFO:root:XX add new best (3, 4) is not 4 7 7
INFO:root:XX add new best (3, 4) is not 4 7 7
INFO:root:XX add new best (3, 4) is not 4 7 7
INFO:root:XX add new best (3, 4) is not 4 7 7
INFO:root:XX add new best (3, 4) is not 4 7 7
INFO:root:XX add new best (3, 4) is not 4 7 7
INFO:root:Considering 100 * 1 jobs for minsize=7
INFO:root:Chunked 100 in [9, 9, 9, 9, 8, 8, 8, 8, 8, 8, 8, 8]
INFO:root:XX add new best (3, 4) is not 4 7 7
INFO:root:XX add new best (3, 4) is not 4 7 7
INFO:root:XX add new best (3, 4) is not 4 7 7
INFO:root:XX add new best (3, 4) is not 4 7 7
INFO:root:XX add new best (3, 4) is not 4 7 7
INFO:root:XX add new best (3, 4) is not 4 7 7
INFO:root:XX add new best (3, 4) is not 4 7 7
INFO:root:XX add new best (3, 4) is not 4 7 7
INFO:root:Trace: [(7, [(3, 4) is not 4])]
INFO:root:Trace Quality: [(7, 1)]
INFO:root:Trace Sorted: [(7, 1)]
INFO:root:Finished
INFO:root:Full Trace [(7, [(3, 4) is not 4])]
INFO:root:Trying {'minPrecheckStepsMUS': True}
INFO:root:Starting Step 1
INFO:root:Current state [[[[1], [8], [5], [4, 9], [2], [6], [3], [7], [4, 9]], [[2, 3, 4], [6], [2, 3, 4], [3, 5, 7, 9], [1, 3, 4], [1, 3, 5, 7], [2, 4, 5, 8], [2, 8], [2, 5, 8, 9]], [[2, 3, 4], [9], [7], [3, 4, 5], [3, 4], [8], [1], [2, 6], [2, 4, 5, 6]], [[4, 6, 7, 8], [1], [4, 8], [3, 8], [5], [2], [6, 8], [9], [3, 7]], [[2, 5, 7, 9], [2, 7], [2, 9], [3, 4, 8], [6], [3, 4], [2, 5, 8], [1, 3], [1, 3, 7]], [[2, 5, 6, 8], [3], [2, 8], [1], [7], [9], [2, 5, 6, 8], [4], [2, 5, 6, 8]], [[2, 3, 7, 8], [4], [1], [6], [3, 8], [3, 7], [9], [5], [2, 3, 8]], [[2, 3, 7, 8, 9], [2, 7], [2, 3, 8, 9], [3, 5, 7], [1, 3, 4, 8], [1, 3, 4, 5, 7], [2, 4, 6, 8], [1, 2, 3, 6, 8], [1, 2, 3, 4, 6, 8]], [[3, 8], [5], [6], [2], [9], [1, 3, 4], [7], [1, 3, 8], [1, 3, 4, 8]]]]
INFO:root:Doing checkSmall1
INFO:root:Getting tiny MUSes, distance 1, for 1 puzlits, 1 repeats
INFO:root:Chunked 1 in [1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
INFO:root:Doing checkSmall2
INFO:root:Getting tiny MUSes, distance 2, for 1 puzlits, 1 repeats
INFO:root:Chunked 1 in [1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
INFO:root:Considering 100 * 1 jobs for minsize=3
INFO:root:Chunked 100 in [9, 9, 9, 9, 8, 8, 8, 8, 8, 8, 8, 8]
INFO:root:Considering 100 * 1 jobs for minsize=4
INFO:root:Chunked 100 in [9, 9, 9, 9, 8, 8, 8, 8, 8, 8, 8, 8]
INFO:root:Considering 100 * 1 jobs for minsize=5
INFO:root:Chunked 100 in [9, 9, 9, 9, 8, 8, 8, 8, 8, 8, 8, 8]
INFO:root:Considering 100 * 1 jobs for minsize=6
INFO:root:Chunked 100 in [9, 9, 9, 9, 8, 8, 8, 8, 8, 8, 8, 8]
INFO:root:XX found first (3, 4) is not 4 7
INFO:root:XX add new best (3, 4) is not 4 7 7
INFO:root:XX add new best (3, 4) is not 4 7 7
INFO:root:XX add new best (3, 4) is not 4 7 7
INFO:root:XX add new best (3, 4) is not 4 7 7
INFO:root:XX add new best (3, 4) is not 4 7 7
INFO:root:XX add new best (3, 4) is not 4 7 7
INFO:root:XX add new best (3, 4) is not 4 7 7
INFO:root:XX add new best (3, 4) is not 4 7 7
INFO:root:XX add new best (3, 4) is not 4 7 7
INFO:root:XX add new best (3, 4) is not 4 7 7
INFO:root:XX add new best (3, 4) is not 4 7 7
INFO:root:XX add new best (3, 4) is not 4 7 7
INFO:root:XX add new best (3, 4) is not 4 7 7
INFO:root:XX add new best (3, 4) is not 4 7 7
INFO:root:XX add new best (3, 4) is not 4 7 7
INFO:root:XX add new best (3, 4) is not 4 7 7
INFO:root:Considering 100 * 1 jobs for minsize=7
INFO:root:Chunked 100 in [9, 9, 9, 9, 8, 8, 8, 8, 8, 8, 8, 8]
INFO:root:XX add new best (3, 4) is not 4 7 7
INFO:root:XX add new best (3, 4) is not 4 7 7
INFO:root:XX add new best (3, 4) is not 4 7 7
INFO:root:XX add new best (3, 4) is not 4 7 7
INFO:root:XX add new best (3, 4) is not 4 7 7
INFO:root:XX add new best (3, 4) is not 4 7 7
INFO:root:XX add new best (3, 4) is not 4 7 7
INFO:root:XX add new best (3, 4) is not 4 7 7
INFO:root:XX add new best (3, 4) is not 4 7 7
INFO:root:Trace: [(7, [(3, 4) is not 4])]
INFO:root:Trace Quality: [(7, 1)]
INFO:root:Trace Sorted: [(7, 1)]
INFO:root:Finished
INFO:root:Full Trace [(7, [(3, 4) is not 4])]
INFO:root:Trying {'gallopingMUSes': True, 'minPrecheckMUS': True}
INFO:root:Starting Step 1
INFO:root:Current state [[[[1], [8], [5], [4, 9], [2], [6], [3], [7], [4, 9]], [[2, 3, 4], [6], [2, 3, 4], [3, 5, 7, 9], [1, 3, 4], [1, 3, 5, 7], [2, 4, 5, 8], [2, 8], [2, 5, 8, 9]], [[2, 3, 4], [9], [7], [3, 4, 5], [3, 4], [8], [1], [2, 6], [2, 4, 5, 6]], [[4, 6, 7, 8], [1], [4, 8], [3, 8], [5], [2], [6, 8], [9], [3, 7]], [[2, 5, 7, 9], [2, 7], [2, 9], [3, 4, 8], [6], [3, 4], [2, 5, 8], [1, 3], [1, 3, 7]], [[2, 5, 6, 8], [3], [2, 8], [1], [7], [9], [2, 5, 6, 8], [4], [2, 5, 6, 8]], [[2, 3, 7, 8], [4], [1], [6], [3, 8], [3, 7], [9], [5], [2, 3, 8]], [[2, 3, 7, 8, 9], [2, 7], [2, 3, 8, 9], [3, 5, 7], [1, 3, 4, 8], [1, 3, 4, 5, 7], [2, 4, 6, 8], [1, 2, 3, 6, 8], [1, 2, 3, 4, 6, 8]], [[3, 8], [5], [6], [2], [9], [1, 3, 4], [7], [1, 3, 8], [1, 3, 4, 8]]]]
INFO:root:Doing checkSmall1
INFO:root:Getting tiny MUSes, distance 1, for 1 puzlits, 1 repeats
INFO:root:Chunked 1 in [1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
INFO:root:Doing checkSmall2
INFO:root:Getting tiny MUSes, distance 2, for 1 puzlits, 1 repeats
INFO:root:Chunked 1 in [1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
INFO:root:Considering 100 * 1 jobs for minsize=3
INFO:root:Chunked 100 in [9, 9, 9, 9, 8, 8, 8, 8, 8, 8, 8, 8]
INFO:root:Considering 100 * 1 jobs for minsize=4
INFO:root:Chunked 100 in [9, 9, 9, 9, 8, 8, 8, 8, 8, 8, 8, 8]
INFO:root:Considering 100 * 1 jobs for minsize=5
INFO:root:Chunked 100 in [9, 9, 9, 9, 8, 8, 8, 8, 8, 8, 8, 8]
INFO:root:Considering 100 * 1 jobs for minsize=6
INFO:root:Chunked 100 in [9, 9, 9, 9, 8, 8, 8, 8, 8, 8, 8, 8]
INFO:root:XX found first (3, 4) is not 4 7
INFO:root:XX add new best (3, 4) is not 4 7 7
INFO:root:XX add new best (3, 4) is not 4 7 7
INFO:root:XX add new best (3, 4) is not 4 7 7
INFO:root:XX add new best (3, 4) is not 4 7 7
INFO:root:XX add new best (3, 4) is not 4 7 7
INFO:root:XX add new best (3, 4) is not 4 7 7
INFO:root:XX add new best (3, 4) is not 4 7 7
INFO:root:XX add new best (3, 4) is not 4 7 7
INFO:root:XX add new best (3, 4) is not 4 7 7
INFO:root:XX add new best (3, 4) is not 4 7 7
INFO:root:XX add new best (3, 4) is not 4 7 7
INFO:root:XX add new best (3, 4) is not 4 7 7
INFO:root:XX add new best (3, 4) is not 4 7 7
INFO:root:XX add new best (3, 4) is not 4 7 7
INFO:root:XX add new best (3, 4) is not 4 7 7
INFO:root:XX add new best (3, 4) is not 4 7 7
INFO:root:Considering 100 * 1 jobs for minsize=7
INFO:root:Chunked 100 in [9, 9, 9, 9, 8, 8, 8, 8, 8, 8, 8, 8]
INFO:root:XX add new best (3, 4) is not 4 7 7
INFO:root:XX add new best (3, 4) is not 4 7 7
INFO:root:XX add new best (3, 4) is not 4 7 7
INFO:root:XX add new best (3, 4) is not 4 7 7
INFO:root:XX add new best (3, 4) is not 4 7 7
INFO:root:XX add new best (3, 4) is not 4 7 7
INFO:root:XX add new best (3, 4) is not 4 7 7
INFO:root:XX add new best (3, 4) is not 4 7 7
INFO:root:XX add new best (3, 4) is not 4 7 7
INFO:root:Trace: [(7, [(3, 4) is not 4])]
INFO:root:Trace Quality: [(7, 1)]
INFO:root:Trace Sorted: [(7, 1)]
INFO:root:Finished
INFO:root:Full Trace [(7, [(3, 4) is not 4])]
INFO:root:Trying {}
INFO:root:Starting Step 1
INFO:root:Current state [[[[3], [2, 7, 9], [1], [8, 9], [2, 5, 8], [4], [2, 5, 9], [6], [2, 5, 7]], [[8], [2, 7, 9], [4], [6, 9], [2, 5, 6], [5, 9], [2, 3, 5, 9], [1], [2, 3, 5, 7]], [[5], [6], [2, 9], [7], [1], [3], [8], [2, 9], [4]], [[1, 4, 7], [3], [5, 7, 8], [4, 6], [5, 6], [2], [1, 6], [7, 8], [9]], [[1, 4, 7], [1, 2, 8], [2, 5, 7, 8], [3, 4, 6], [9], [5, 7, 8], [1, 6], [2, 3, 7, 8], [2, 3, 5, 8]], [[6], [2, 8, 9], [2, 5, 7, 8, 9], [1], [3, 5, 7, 8], [5, 7, 8], [2, 3, 5], [4], [2, 3, 5, 8]], [[1, 7], [1, 8], [3, 7, 8], [5], [4], [6], [2, 3, 9], [2, 3, 8, 9], [2, 3, 8]], [[2], [5], [6], [3, 8, 9], [3, 7, 8], [7, 8, 9], [4], [3, 8], [1]], [[9], [4], [3, 8], [2], [3, 8], [1], [7], [5], [6]]]]
INFO:root:Doing checkSmall1
INFO:root:Getting tiny MUSes, distance 1, for 1 puzlits, 1 repeats
INFO:root:Chunked 1 in [1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
INFO:root:Doing checkSmall2
INFO:root:Getting tiny MUSes, distance 2, for 1 puzlits, 1 repeats
INFO:root:Chunked 1 in [1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
INFO:root:Considering 100 * 1 jobs for minsize=3
INFO:root:Chunked 100 in [9, 9, 9, 9, 8, 8, 8, 8, 8, 8, 8, 8]
INFO:root:Considering 100 * 1 jobs for minsize=4
INFO:root:Chunked 100 in [9, 9, 9, 9, 8, 8, 8, 8, 8, 8, 8, 8]
INFO:root:Considering 100 * 1 jobs for minsize=5
INFO:root:Chunked 100 in [9, 9, 9, 9, 8, 8, 8, 8, 8, 8, 8, 8]
INFO:root:Considering 100 * 1 jobs for minsize=6
INFO:root:Chunked 100 in [9, 9, 9, 9, 8, 8, 8, 8, 8, 8, 8, 8]
INFO:root:Considering 100 * 1 jobs for minsize=7
INFO:root:Chunked 100 in [9, 9, 9, 9, 8, 8, 8, 8, 8, 8, 8, 8]
INFO:root:Considering 100 * 1 jobs for minsize=8
INFO:root:Chunked 100 in [9, 9, 9, 9, 8, 8, 8, 8, 8, 8, 8, 8]
INFO:root:Considering 100 * 1 jobs for minsize=9
INFO:root:Chunked 100 in [9, 9, 9, 9, 8, 8, 8, 8, 8, 8, 8, 8]
INFO:root:Considering 100 * 1 jobs for minsize=10
INFO:root:Chunked 100 in [9, 9, 9, 9, 8, 8, 8, 8, 8, 8, 8, 8]
INFO:root:Considering 100 * 1 jobs for minsize=11
INFO:root:Chunked 100 in [9, 9, 9, 9, 8, 8, 8, 8, 8, 8, 8, 8]
INFO:root:Considering 100 * 1 jobs for minsize=12
INFO:root:Chunked 100 in [9, 9, 9, 9, 8, 8, 8, 8, 8, 8, 8, 8]
INFO:root:XX found first (5, 3) is not 8 13
INFO:root:XX add new best (5, 3) is not 8 13 13
INFO:root:XX add new best (5, 3) is not 8 13 13
INFO:root:XX add new best (5, 3) is not 8 13 13
INFO:root:XX add new best (5, 3) is not 8 13 13
INFO:root:XX add new best (5, 3) is not 8 13 13
INFO:root:XX add new best (5, 3) is not 8 13 13
INFO:root:XX add new best (5, 3) is not 8 13 13
INFO:root:XX add new best (5, 3) is not 8 13 13
INFO:root:XX add new best (5, 3) is not 8 13 13
INFO:root:XX add new best (5, 3) is not 8 13 13
INFO:root:XX add new best (5, 3) is not 8 13 13
INFO:root:XX add new best (5, 3) is not 8 13 13
INFO:root:XX add new best (5, 3) is not 8 13 13
INFO:root:XX add new best (5, 3) is not 8 13 13
INFO:root:XX add new best (5, 3) is not 8 13 13
INFO:root:XX add new best (5, 3) is not 8 13 13
INFO:root:XX add new best (5, 3) is not 8 13 13
INFO:root:XX add new best (5, 3) is not 8 13 13
INFO:root:XX add new best (5, 3) is not 8 13 13
INFO:root:XX add new best (5, 3) is not 8 13 13
INFO:root:XX add new best (5, 3) is not 8 13 13
INFO:root:XX add new best (5, 3) is not 8 13 13
INFO:root:XX add new best (5, 3) is not 8 13 13
INFO:root:XX add new best (5, 3) is not 8 13 13
INFO:root:XX add new best (5, 3) is not 8 13 13
INFO:root:XX add new best (5, 3) is not 8 13 13
INFO:root:XX add new best (5, 3) is not 8 13 13
INFO:root:XX add new best (5, 3) is not 8 13 13
INFO:root:XX add new best (5, 3) is not 8 13 13
INFO:root:XX add new best (5, 3) is not 8 13 13
INFO:root:XX add new best (5, 3) is not 8 13 13
INFO:root:XX add new best (5, 3) is not 8 13 13
INFO:root:XX add new best (5, 3) is not 8 13 13
INFO:root:XX add new best (5, 3) is not 8 13 13
INFO:root:XX add new best (5, 3) is not 8 13 13
INFO:root:XX add new best (5, 3) is not 8 13 13
INFO:root:XX add new best (5, 3) is not 8 13 13
INFO:root:XX add new best (5, 3) is not 8 13 13
INFO:root:XX add new best (5, 3) is not 8 13 13
INFO:root:XX add new best (5, 3) is not 8 13 13
INFO:root:XX add new best (5, 3) is not 8 13 13
INFO:root:Considering 100 * 1 jobs for minsize=13
INFO:root:Chunked 100 in [9, 9, 9, 9, 8, 8, 8, 8, 8, 8, 8, 8]
INFO:root:XX add new best (5, 3) is not 8 13 13
INFO:root:XX add new best (5, 3) is not 8 13 13
INFO:root:XX add new best (5, 3) is not 8 13 13
INFO:root:XX add new best (5, 3) is not 8 13 13
INFO:root:XX add new best (5, 3) is not 8 13 13
INFO:root:XX add new best (5, 3) is not 8 13 13
INFO:root:XX add new best (5, 3) is not 8 13 13
INFO:root:XX add new best (5, 3) is not 8 13 13
INFO:root:XX add new best (5, 3) is not 8 13 13
INFO:root:XX add new best (5, 3) is not 8 13 13
INFO:root:XX add new best (5, 3) is not 8 13 13
INFO:root:XX add new best (5, 3) is not 8 13 13
INFO:root:XX add new best (5, 3) is not 8 13 13
INFO:root:XX add new best (5, 3) is not 8 13 13
INFO:root:XX add new best (5, 3) is not 8 13 13
INFO:root:XX add new best (5, 3) is not 8 13 13
INFO:root:XX add new best (5, 3) is not 8 13 13
INFO:root:XX add new best (5, 3) is not 8 13 13
INFO:root:XX add new best (5, 3) is not 8 13 13
INFO:root:XX add new best (5, 3) is not 8 13 13
INFO:root:XX add new best (5, 3) is not 8 13 13
INFO:root:XX add new best (5, 3) is not 8 13 13
INFO:root:XX add new best (5, 3) is not 8 13 13
INFO:root:XX add new best (5, 3) is not 8 13 13
INFO:root:XX add new best (5, 3) is not 8 13 13
INFO:root:XX add new best (5, 3) is not 8 13 13
INFO:root:XX add new best (5, 3) is not 8 13 13
INFO:root:XX add new best (5, 3) is not 8 13 13
INFO:root:XX add new best (5, 3) is not 8 13 13
INFO:root:XX add new best (5, 3) is not 8 13 13
INFO:root:XX add new best (5, 3) is not 8 13 13
INFO:root:XX add new best (5, 3) is not 8 13 13
INFO:root:XX add new best (5, 3) is not 8 13 13
INFO:root:XX add new best (5, 3) is not 8 13 13
INFO:root:XX add new best (5, 3) is not 8 13 13
INFO:root:XX add new best (5, 3) is not 8 13 13
INFO:root:XX add new best (5, 3) is not 8 13 13
INFO:root:XX add new best (5, 3) is not 8 13 13
INFO:root:XX add new best (5, 3) is not 8 13 13
INFO:root:XX add new best (5, 3) is not 8 13 13
INFO:root:XX add new best (5, 3) is not 8 13 13
INFO:root:XX add new best (5, 3) is not 8 13 13
INFO:root:Trace: [(13, [(5, 3) is not 8])]
INFO:root:Trace Quality: [(13, 1)]
INFO:root:Trace Sorted: [(13, 1)]
INFO:root:Finished
INFO:root:Full Trace [(13, [(5, 3) is not 8])]
INFO:root:Trying {'prechopMUSes': True}
INFO:root:Starting Step 1
INFO:root:Current state [[[[3], [2, 7, 9], [1], [8, 9], [2, 5, 8], [4], [2, 5, 9], [6], [2, 5, 7]], [[8], [2, 7, 9], [4], [6, 9], [2, 5, 6], [5, 9], [2, 3, 5, 9], [1], [2, 3, 5, 7]], [[5], [6], [2, 9], [7], [1], [3], [8], [2, 9], [4]], [[1, 4, 7], [3], [5, 7, 8], [4, 6], [5, 6], [2], [1, 6], [7, 8], [9]], [[1, 4, 7], [1, 2, 8], [2, 5, 7, 8], [3, 4, 6], [9], [5, 7, 8], [1, 6], [2, 3, 7, 8], [2, 3, 5, 8]], [[6], [2, 8, 9], [2, 5, 7, 8, 9], [1], [3, 5, 7, 8], [5, 7, 8], [2, 3, 5], [4], [2, 3, 5, 8]], [[1, 7], [1, 8], [3, 7, 8], [5], [4], [6], [2, 3, 9], [2, 3, 8, 9], [2, 3, 8]], [[2], [5], [6], [3, 8, 9], [3, 7, 8], [7, 8, 9], [4], [3, 8], [1]], [[9], [4], [3, 8], [2], [3, 8], [1], [7], [5], [6]]]]
INFO:root:Doing checkSmall1
INFO:root:Getting tiny MUSes, distance 1, for 1 puzlits, 1 repeats
INFO:root:Chunked 1 in [1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
INFO:root:Doing checkSmall2
INFO:root:Getting tiny MUSes, distance 2, for 1 puzlits, 1 repeats
INFO:root:Chunked 1 in [1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
INFO:root:Considering 100 * 1 jobs for minsize=3
INFO:root:Chunked 100 in [9, 9, 9, 9, 8, 8, 8, 8, 8, 8, 8, 8]
INFO:root:Considering 100 * 1 jobs for minsize=4
INFO:root:Chunked 100 in [9, 9, 9, 9, 8, 8, 8, 8, 8, 8, 8, 8]
INFO:root:Considering 100 * 1 jobs for minsize=5
INFO:root:Chunked 100 in [9, 9, 9, 9, 8, 8, 8, 8, 8, 8, 8, 8]
INFO:root:Considering 100 * 1 jobs for minsize=6
INFO:root:Chunked 100 in [9, 9, 9, 9, 8, 8, 8, 8, 8, 8, 8, 8]
INFO:root:Considering 100 * 1 jobs for minsize=7
INFO:root:Chunked 100 in [9, 9, 9, 9, 8, 8, 8, 8, 8, 8, 8, 8]
INFO:root:Considering 100 * 1 jobs for minsize=8
INFO:root:Chunked 100 in [9, 9, 9, 9, 8, 8, 8, 8, 8, 8, 8, 8]
INFO:root:XX found first (5, 3) is not 8 9
INFO:root:XX add new best (5, 3) is not 8 9 9
INFO:root:XX add new best (5, 3) is not 8 9 9
INFO:root:XX add new best (5, 3) is not 8 9 9
INFO:root:XX add new best (5, 3) is not 8 9 9
INFO:root:XX add new best (5, 3) is not 8 9 9
INFO:root:XX add new best (5, 3) is not 8 9 9
INFO:root:XX add new best (5, 3) is not 8 9 9
INFO:root:XX add new best (5, 3) is not 8 9 9
INFO:root:XX add new best (5, 3) is not 8 9 9
INFO:root:XX add new best (5, 3) is not 8 9 9
INFO:root:XX add new best (5, 3) is not 8 9 9
INFO:root:XX add new best (5, 3) is not 8 9 9
INFO:root:XX add new best (5, 3) is not 8 9 9
INFO:root:XX add new best (5, 3) is not 8 9 9
INFO:root:XX add new best (5, 3) is not 8 9 9
INFO:root:XX add new best (5, 3) is not 8 9 9
INFO:root:XX add new best (5, 3) is not 8 9 9
INFO:root:XX add new best (5, 3) is not 8 9 9
INFO:root:XX add new best (5, 3) is not 8 9 9
INFO:root:Considering 100 * 1 jobs for minsize=9
INFO:root:Chunked 100 in [9, 9, 9, 9, 8, 8, 8, 8, 8, 8, 8, 8]
INFO:root:XX add new best (5, 3) is not 8 9 9
INFO:root:XX add new best (5, 3) is not 8 9 9
INFO:root:XX add new best (5, 3) is not 8 9 9
INFO:root:XX add new best (5, 3) is not 8 9 9
INFO:root:XX add new best (5, 3) is not 8 9 9
INFO:root:XX add new best (5, 3) is not 8 9 9
INFO:root:XX add new best (5, 3) is not 8 9 9
INFO:root:XX add new best (5, 3) is not 8 9 9
INFO:root:XX add new best (5, 3) is not 8 9 9
INFO:root:XX add new best (5, 3) is not 8 9 9
INFO:root:XX add new best (5, 3) is not 8 9 9
INFO:root:XX add new best (5, 3) is not 8 9 9
INFO:root:XX add new best (5, 3) is not 8 9 9
INFO:root:XX add new best (5, 3) is not 8 9 9
INFO:root:XX add new best (5, 3) is not 8 9 9
INFO:root:XX add new best (5, 3) is not 8 9 9
INFO:root:XX add new best (5, 3) is not 8 9 9
INFO:root:XX add new best (5, 3) is not 8 9 9
INFO:root:Trace: [(9, [(5, 3) is not 8])]
INFO:root:Trace Quality: [(9, 1)]
INFO:root:Trace Sorted: [(9, 1)]
INFO:root:Finished
INFO:root:Full Trace [(9, [(5, 3) is not 8])]
INFO:root:Trying {'quarterChopMUS': True}
INFO:root:Starting Step 1
INFO:root:Current state [[[[3], [2, 7, 9], [1], [8, 9], [2, 5, 8], [4], [2, 5, 9], [6], [2, 5, 7]], [[8], [2, 7, 9], [4], [6, 9], [2, 5, 6], [5, 9], [2, 3, 5, 9], [1], [2, 3, 5, 7]], [[5], [6], [2, 9], [7], [1], [3], [8], [2, 9], [4]], [[1, 4, 7], [3], [5, 7, 8], [4, 6], [5, 6], [2], [1, 6], [7, 8], [9]], [[1, 4, 7], [1, 2, 8], [2, 5, 7, 8], [3, 4, 6], [9], [5, 7, 8], [1, 6], [2, 3, 7, 8], [2, 3, 5, 8]], [[6], [2, 8, 9], [2, 5, 7, 8, 9], [1], [3, 5, 7, 8], [5, 7, 8], [2, 3, 5], [4], [2, 3, 5, 8]], [[1, 7], [1, 8], [3, 7, 8], [5], [4], [6], [2, 3, 9], [2, 3, 8, 9], [2, 3, 8]], [[2], [5], [6], [3, 8, 9], [3, 7, 8], [7, 8, 9], [4], [3, 8], [1]], [[9], [4], [3, 8], [2], [3, 8], [1], [7], [5], [6]]]]
INFO:root:Doing checkSmall1
INFO:root:Getting tiny MUSes, distance 1, for 1 puzlits, 1 repeats
INFO:root:Chunked 1 in [1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
INFO:root:Doing checkSmall2
INFO:root:Getting tiny MUSes, distance 2, for 1 puzlits, 1 repeats
INFO:root:Chunked 1 in [1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
INFO:root:Considering 100 * 1 jobs for minsize=3
INFO:root:Chunked 100 in [9, 9, 9, 9, 8, 8, 8, 8, 8, 8, 8, 8]
INFO:root:Considering 100 * 1 jobs for minsize=4
INFO:root:Chunked 100 in [9, 9, 9, 9, 8, 8, 8, 8, 8, 8, 8, 8]
INFO:root:Considering 100 * 1 jobs for minsize=5
INFO:root:Chunked 100 in [9, 9, 9, 9, 8, 8, 8, 8, 8, 8, 8, 8]
INFO:root:Considering 100 * 1 jobs for minsize=6
INFO:root:Chunked 100 in [9, 9, 9, 9, 8, 8, 8, 8, 8, 8, 8, 8]
INFO:root:Considering 100 * 1 jobs for minsize=7
INFO:root:Chunked 100 in [9, 9, 9, 9, 8, 8, 8, 8, 8, 8, 8, 8]
INFO:root:Considering 100 * 1 jobs for minsize=8
INFO:root:Chunked 100 in [9, 9, 9, 9, 8, 8, 8, 8, 8, 8, 8, 8]
INFO:root:XX found first (5, 3) is not 8 9
INFO:root:XX add new best (5, 3) is not 8 9 9
INFO:root:XX add new best (5, 3) is not 8 9 9
INFO:root:XX add new best (5, 3) is not 8 9 9
INFO:root:XX add new best (5, 3) is not 8 9 9
INFO:root:XX add new best (5, 3) is not 8 9 9
INFO:root:XX add new best (5, 3) is not 8 9 9
INFO:root:XX add new best (5, 3) is not 8 9 9
INFO:root:XX add new best (5, 3) is not 8 9 9
INFO:root:XX add new best (5, 3) is not 8 9 9
INFO:root:XX add new best (5, 3) is not 8 9 9
INFO:root:XX add new best (5, 3) is not 8 9 9
INFO:root:XX add new best (5, 3) is not 8 9 9
INFO:root:XX add new best (5, 3) is not 8 9 9
INFO:root:XX add new best (5, 3) is not 8 9 9
INFO:root:XX add new best (5, 3) is not 8 9 9
INFO:root:XX add new best (5, 3) is not 8 9 9
INFO:root:Considering 100 * 1 jobs for minsize=9
INFO:root:Chunked 100 in [9, 9, 9, 9, 8, 8, 8, 8, 8, 8, 8, 8]
INFO:root:XX add new best (5, 3) is not 8 9 9
INFO:root:XX add new best (5, 3) is not 8 9 9
INFO:root:XX add new best (5, 3) is not 8 9 9
INFO:root:XX add new best (5, 3) is not 8 9 9
INFO:root:XX add new best (5, 3) is not 8 9 9
INFO:root:XX add new best (5, 3) is not 8 9 9
INFO:root:XX add new best (5, 3) is not 8 9 9
INFO:root:XX add new best (5, 3) is not 8 9 9
INFO:root:XX add new best (5, 3) is not 8 9 9
INFO:root:XX add new best (5, 3) is not 8 9 9
INFO:root:XX add new best (5, 3) is not 8 9 9
INFO:root:XX add new best (5, 3) is not 8 9 9
INFO:root:XX add new best (5, 3) is not 8 9 9
INFO:root:XX add new best (5, 3) is not 8 9 9
INFO:root:XX add new best (5, 3) is not 8 9 9
INFO:root:XX add new best (5, 3) is not 8 9 9
INFO:root:XX add new best (5, 3) is not 8 9 9
INFO:root:XX add new best (5, 3) is not 8 9 9
INFO:root:XX add new best (5, 3) is not 8 9 9
INFO:root:XX add new best (5, 3) is not 8 9 9
INFO:root:XX add new best (5, 3) is not 8 9 9
INFO:root:Trace: [(9, [(5, 3) is not 8])]
INFO:root:Trace Quality: [(9, 1)]
INFO:root:Trace Sorted: [(9, 1)]
INFO:root:Finished
INFO:root:Full Trace [(9, [(5, 3) is not 8])]
INFO:root:Trying {'minPrecheckMUS': True}
INFO:root:Starting Step 1
INFO:root:Current state [[[[3], [2, 7, 9], [1], [8, 9], [2, 5, 8], [4], [2, 5, 9], [6], [2, 5, 7]], [[8], [2, 7, 9], [4], [6, 9], [2, 5, 6], [5, 9], [2, 3, 5, 9], [1], [2, 3, 5, 7]], [[5], [6], [2, 9], [7], [1], [3], [8], [2, 9], [4]], [[1, 4, 7], [3], [5, 7, 8], [4, 6], [5, 6], [2], [1, 6], [7, 8], [9]], [[1, 4, 7], [1, 2, 8], [2, 5, 7, 8], [3, 4, 6], [9], [5, 7, 8], [1, 6], [2, 3, 7, 8], [2, 3, 5, 8]], [[6], [2, 8, 9], [2, 5, 7, 8, 9], [1], [3, 5, 7, 8], [5, 7, 8], [2, 3, 5], [4], [2, 3, 5, 8]], [[1, 7], [1, 8], [3, 7, 8], [5], [4], [6], [2, 3, 9], [2, 3, 8, 9], [2, 3, 8]], [[2], [5], [6], [3, 8, 9], [3, 7, 8], [7, 8, 9], [4], [3, 8], [1]], [[9], [4], [3, 8], [2], [3, 8], [1], [7], [5], [6]]]]
INFO:root:Doing checkSmall1
INFO:root:Getting tiny MUSes, distance 1, for 1 puzlits, 1 repeats
INFO:root:Chunked 1 in [1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
INFO:root:Doing checkSmall2
INFO:root:Getting tiny MUSes, distance 2, for 1 puzlits, 1 repeats
INFO:root:Chunked 1 in [1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
INFO:root:Considering 100 * 1 jobs for minsize=3
INFO:root:Chunked 100 in [9, 9, 9, 9, 8, 8, 8, 8, 8, 8, 8, 8]
INFO:root:Considering 100 * 1 jobs for minsize=4
INFO:root:Chunked 100 in [9, 9, 9, 9, 8, 8, 8, 8, 8, 8, 8, 8]
INFO:root:Considering 100 * 1 jobs for minsize=5
INFO:root:Chunked 100 in [9, 9, 9, 9, 8, 8, 8, 8, 8, 8, 8, 8]
INFO:root:Considering 100 * 1 jobs for minsize=6
INFO:root:Chunked 100 in [9, 9, 9, 9, 8, 8, 8, 8, 8, 8, 8, 8]
INFO:root:Considering 100 * 1 jobs for minsize=7
INFO:root:Chunked 100 in [9, 9, 9, 9, 8, 8, 8, 8, 8, 8, 8, 8]
INFO:root:Considering 100 * 1 jobs for minsize=8
INFO:root:Chunked 100 in [9, 9, 9, 9, 8, 8, 8, 8, 8, 8, 8, 8]
INFO:root:XX found first (5, 3) is not 8 9
INFO:root:XX add new best (5, 3) is not 8 9 9
INFO:root:XX add new best (5, 3) is not 8 9 9
INFO:root:XX add new best (5, 3) is not 8 9 9
INFO:root:XX add new best (5, 3) is not 8 9 9
INFO:root:XX add new best (5, 3) is not 8 9 9
INFO:root:XX add new best (5, 3) is not 8 9 9
INFO:root:XX add new best (5, 3) is not 8 9 9
INFO:root:XX add new best (5, 3) is not 8 9 9
INFO:root:XX add new best (5, 3) is not 8 9 9
INFO:root:Considering 100 * 1 jobs for minsize=9
INFO:root:Chunked 100 in [9, 9, 9, 9, 8, 8, 8, 8, 8, 8, 8, 8]
INFO:root:XX add new best (5, 3) is not 8 9 9
INFO:root:XX add new best (5, 3) is not 8 9 9
INFO:root:XX add new best (5, 3) is not 8 9 9
INFO:root:XX add new best (5, 3) is not 8 9 9
INFO:root:XX add new best (5, 3) is not 8 9 9
INFO:root:XX add new best (5, 3) is not 8 9 9
INFO:root:XX add new best (5, 3) is not 8 9 9
INFO:root:XX add new best (5, 3) is not 8 9 9
INFO:root:XX add new best (5, 3) is not 8 9 9
INFO:root:XX add new best (5, 3) is not 8 9 9
INFO:root:XX add new best (5, 3) is not 8 9 9
INFO:root:XX add new best (5, 3) is not 8 9 9
INFO:root:XX add new best (5, 3) is not 8 9 9
INFO:root:XX add new best (5, 3) is not 8 9 9
INFO:root:XX add new best (5, 3) is not 8 9 9
INFO:root:XX add new best (5, 3) is not 8 9 9
INFO:root:Trace: [(9, [(5, 3) is not 8])]
INFO:root:Trace Quality: [(9, 1)]
INFO:root:Trace Sorted: [(9, 1)]
INFO:root:Finished
INFO:root:Full Trace [(9, [(5, 3) is not 8])]
INFO:root:Trying {'gallopingMUSes': True}
INFO:root:Starting Step 1
INFO:root:Current state [[[[3], [2, 7, 9], [1], [8, 9], [2, 5, 8], [4], [2, 5, 9], [6], [2, 5, 7]], [[8], [2, 7, 9], [4], [6, 9], [2, 5, 6], [5, 9], [2, 3, 5, 9], [1], [2, 3, 5, 7]], [[5], [6], [2, 9], [7], [1], [3], [8], [2, 9], [4]], [[1, 4, 7], [3], [5, 7, 8], [4, 6], [5, 6], [2], [1, 6], [7, 8], [9]], [[1, 4, 7], [1, 2, 8], [2, 5, 7, 8], [3, 4, 6], [9], [5, 7, 8], [1, 6], [2, 3, 7, 8], [2, 3, 5, 8]], [[6], [2, 8, 9], [2, 5, 7, 8, 9], [1], [3, 5, 7, 8], [5, 7, 8], [2, 3, 5], [4], [2, 3, 5, 8]], [[1, 7], [1, 8], [3, 7, 8], [5], [4], [6], [2, 3, 9], [2, 3, 8, 9], [2, 3, 8]], [[2], [5], [6], [3, 8, 9], [3, 7, 8], [7, 8, 9], [4], [3, 8], [1]], [[9], [4], [3, 8], [2], [3, 8], [1], [7], [5], [6]]]]
INFO:root:Doing checkSmall1
INFO:root:Getting tiny MUSes, distance 1, for 1 puzlits, 1 repeats
INFO:root:Chunked 1 in [1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
INFO:root:Doing checkSmall2
INFO:root:Getting tiny MUSes, distance 2, for 1 puzlits, 1 repeats
INFO:root:Chunked 1 in [1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
INFO:root:Considering 100 * 1 jobs for minsize=3
INFO:root:Chunked 100 in [9, 9, 9, 9, 8, 8, 8, 8, 8, 8, 8, 8]
INFO:root:Considering 100 * 1 jobs for minsize=4
INFO:root:Chunked 100 in [9, 9, 9, 9, 8, 8, 8, 8, 8, 8, 8, 8]
INFO:root:Considering 100 * 1 jobs for minsize=5
INFO:root:Chunked 100 in [9, 9, 9, 9, 8, 8, 8, 8, 8, 8, 8, 8]
INFO:root:Considering 100 * 1 jobs for minsize=6
INFO:root:Chunked 100 in [9, 9, 9, 9, 8, 8, 8, 8, 8, 8, 8, 8]
INFO:root:Considering 100 * 1 jobs for minsize=7
INFO:root:Chunked 100 in [9, 9, 9, 9, 8, 8, 8, 8, 8, 8, 8, 8]
INFO:root:Considering 100 * 1 jobs for minsize=8
INFO:root:Chunked 100 in [9, 9, 9, 9, 8, 8, 8, 8, 8, 8, 8, 8]
INFO:root:XX found first (5, 3) is not 8 9
INFO:root:XX add new best (5, 3) is not 8 9 9
INFO:root:XX add new best (5, 3) is not 8 9 9
INFO:root:XX add new best (5, 3) is not 8 9 9
INFO:root:XX add new best (5, 3) is not 8 9 9
INFO:root:XX add new best (5, 3) is not 8 9 9
INFO:root:XX add new best (5, 3) is not 8 9 9
INFO:root:XX add new best (5, 3) is not 8 9 9
INFO:root:XX add new best (5, 3) is not 8 9 9
INFO:root:XX add new best (5, 3) is not 8 9 9
INFO:root:Considering 100 * 1 jobs for minsize=9
INFO:root:Chunked 100 in [9, 9, 9, 9, 8, 8, 8, 8, 8, 8, 8, 8]
INFO:root:XX add new best (5, 3) is not 8 9 9
INFO:root:XX add new best (5, 3) is not 8 9 9
INFO:root:XX add new best (5, 3) is not 8 9 9
INFO:root:XX add new best (5, 3) is not 8 9 9
INFO:root:XX add new best (5, 3) is not 8 9 9
INFO:root:XX add new best (5, 3) is not 8 9 9
INFO:root:XX add new best (5, 3) is not 8 9 9
INFO:root:XX add new best (5, 3) is not 8 9 9
INFO:root:XX add new best (5, 3) is not 8 9 9
INFO:root:XX add new best (5, 3) is not 8 9 9
INFO:root:XX add new best (5, 3) is not 8 9 9
INFO:root:XX add new best (5, 3) is not 8 9 9
INFO:root:XX add new best (5, 3) is not 8 9 9
INFO:root:Trace: [(9, [(5, 3) is not 8])]
INFO:root:Trace Quality: [(9, 1)]
INFO:root:Trace Sorted: [(9, 1)]
INFO:root:Finished
INFO:root:Full Trace [(9, [(5, 3) is not 8])]
INFO:root:Trying {'minPrecheckStepsMUS': True}
INFO:root:Starting Step 1
INFO:root:Current state [[[[3], [2, 7, 9], [1], [8, 9], [2, 5, 8], [4], [2, 5, 9], [6], [2, 5, 7]], [[8], [2, 7, 9], [4], [6, 9], [2, 5, 6], [5, 9], [2, 3, 5, 9], [1], [2, 3, 5, 7]], [[5], [6], [2, 9], [7], [1], [3], [8], [2, 9], [4]], [[1, 4, 7], [3], [5, 7, 8], [4, 6], [5, 6], [2], [1, 6], [7, 8], [9]], [[1, 4, 7], [1, 2, 8], [2, 5, 7, 8], [3, 4, 6], [9], [5, 7, 8], [1, 6], [2, 3, 7, 8], [2, 3, 5, 8]], [[6], [2, 8, 9], [2, 5, 7, 8, 9], [1], [3, 5, 7, 8], [5, 7, 8], [2, 3, 5], [4], [2, 3, 5, 8]], [[1, 7], [1, 8], [3, 7, 8], [5], [4], [6], [2, 3, 9], [2, 3, 8, 9], [2, 3, 8]], [[2], [5], [6], [3, 8, 9], [3, 7, 8], [7, 8, 9], [4], [3, 8], [1]], [[9], [4], [3, 8], [2], [3, 8], [1], [7], [5], [6]]]]
INFO:root:Doing checkSmall1
INFO:root:Getting tiny MUSes, distance 1, for 1 puzlits, 1 repeats
INFO:root:Chunked 1 in [1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
INFO:root:Doing checkSmall2
INFO:root:Getting tiny MUSes, distance 2, for 1 puzlits, 1 repeats
INFO:root:Chunked 1 in [1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
INFO:root:Considering 100 * 1 jobs for minsize=3
INFO:root:Chunked 100 in [9, 9, 9, 9, 8, 8, 8, 8, 8, 8, 8, 8]
INFO:root:Considering 100 * 1 jobs for minsize=4
INFO:root:Chunked 100 in [9, 9, 9, 9, 8, 8, 8, 8, 8, 8, 8, 8]
INFO:root:Considering 100 * 1 jobs for minsize=5
INFO:root:Chunked 100 in [9, 9, 9, 9, 8, 8, 8, 8, 8, 8, 8, 8]
INFO:root:Considering 100 * 1 jobs for minsize=6
INFO:root:Chunked 100 in [9, 9, 9, 9, 8, 8, 8, 8, 8, 8, 8, 8]
INFO:root:Considering 100 * 1 jobs for minsize=7
INFO:root:Chunked 100 in [9, 9, 9, 9, 8, 8, 8, 8, 8, 8, 8, 8]
INFO:root:Considering 100 * 1 jobs for minsize=8
INFO:root:Chunked 100 in [9, 9, 9, 9, 8, 8, 8, 8, 8, 8, 8, 8]
INFO:root:XX found first (5, 3) is not 8 9
INFO:root:XX add new best (5, 3) is not 8 9 9
INFO:root:XX add new best (5, 3) is not 8 9 9
INFO:root:XX add new best (5, 3) is not 8 9 9
INFO:root:XX add new best (5, 3) is not 8 9 9
INFO:root:XX add new best (5, 3) is not 8 9 9
INFO:root:XX add new best (5, 3) is not 8 9 9
INFO:root:XX add new best (5, 3) is not 8 9 9
INFO:root:XX add new best (5, 3) is not 8 9 9
INFO:root:XX add new best (5, 3) is not 8 9 9
INFO:root:Considering 100 * 1 jobs for minsize=9
INFO:root:Chunked 100 in [9, 9, 9, 9, 8, 8, 8, 8, 8, 8, 8, 8]
INFO:root:XX add new best (5, 3) is not 8 9 9
INFO:root:XX add new best (5, 3) is not 8 9 9
INFO:root:XX add new best (5, 3) is not 8 9 9
INFO:root:XX add new best (5, 3) is not 8 9 9
INFO:root:XX add new best (5, 3) is not 8 9 9
INFO:root:XX add new best (5, 3) is not 8 9 9
INFO:root:XX add new best (5, 3) is not 8 9 9
INFO:root:XX add new best (5, 3) is not 8 9 9
INFO:root:XX add new best (5, 3) is not 8 9 9
INFO:root:XX add new best (5, 3) is not 8 9 9
INFO:root:XX add new best (5, 3) is not 8 9 9
INFO:root:XX add new best (5, 3) is not 8 9 9
INFO:root:XX add new best (5, 3) is not 8 9 9
INFO:root:XX add new best (5, 3) is not 8 9 9
INFO:root:XX add new best (5, 3) is not 8 9 9
INFO:root:XX add new best (5, 3) is not 8 9 9
INFO:root:Trace: [(9, [(5, 3) is not 8])]
INFO:root:Trace Quality: [(9, 1)]
INFO:root:Trace Sorted: [(9, 1)]
INFO:root:Finished
INFO:root:Full Trace [(9, [(5, 3) is not 8])]
INFO:root:Trying {'gallopingMUSes': True, 'minPrecheckMUS': True}
INFO:root:Starting Step 1
INFO:root:Current state [[[[3], [2, 7, 9], [1], [8, 9], [2, 5, 8], [4], [2, 5, 9], [6], [2, 5, 7]], [[8], [2, 7, 9], [4], [6, 9], [2, 5, 6], [5, 9], [2, 3, 5, 9], [1], [2, 3, 5, 7]], [[5], [6], [2, 9], [7], [1], [3], [8], [2, 9], [4]], [[1, 4, 7], [3], [5, 7, 8], [4, 6], [5, 6], [2], [1, 6], [7, 8], [9]], [[1, 4, 7], [1, 2, 8], [2, 5, 7, 8], [3, 4, 6], [9], [5, 7, 8], [1, 6], [2, 3, 7, 8], [2, 3, 5, 8]], [[6], [2, 8, 9], [2, 5, 7, 8, 9], [1], [3, 5, 7, 8], [5, 7, 8], [2, 3, 5], [4], [2, 3, 5, 8]], [[1, 7], [1, 8], [3, 7, 8], [5], [4], [6], [2, 3, 9], [2, 3, 8, 9], [2, 3, 8]], [[2], [5], [6], [3, 8, 9], [3, 7, 8], [7, 8, 9], [4], [3, 8], [1]], [[9], [4], [3, 8], [2], [3, 8], [1], [7], [5], [6]]]]
INFO:root:Doing checkSmall1
INFO:root:Getting tiny MUSes, distance 1, for 1 puzlits, 1 repeats
INFO:root:Chunked 1 in [1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
INFO:root:Doing checkSmall2
INFO:root:Getting tiny MUSes, distance 2, for 1 puzlits, 1 repeats
INFO:root:Chunked 1 in [1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
INFO:root:Considering 100 * 1 jobs for minsize=3
INFO:root:Chunked 100 in [9, 9, 9, 9, 8, 8, 8, 8, 8, 8, 8, 8]
INFO:root:Considering 100 * 1 jobs for minsize=4
INFO:root:Chunked 100 in [9, 9, 9, 9, 8, 8, 8, 8, 8, 8, 8, 8]
INFO:root:Considering 100 * 1 jobs for minsize=5
INFO:root:Chunked 100 in [9, 9, 9, 9, 8, 8, 8, 8, 8, 8, 8, 8]
INFO:root:Considering 100 * 1 jobs for minsize=6
INFO:root:Chunked 100 in [9, 9, 9, 9, 8, 8, 8, 8, 8, 8, 8, 8]
INFO:root:Considering 100 * 1 jobs for minsize=7
INFO:root:Chunked 100 in [9, 9, 9, 9, 8, 8, 8, 8, 8, 8, 8, 8]
INFO:root:Considering 100 * 1 jobs for minsize=8
INFO:root:Chunked 100 in [9, 9, 9, 9, 8, 8, 8, 8, 8, 8, 8, 8]
INFO:root:XX found first (5, 3) is not 8 9
INFO:root:XX add new best (5, 3) is not 8 9 9
INFO:root:XX add new best (5, 3) is not 8 9 9
INFO:root:XX add new best (5, 3) is not 8 9 9
INFO:root:XX add new best (5, 3) is not 8 9 9
INFO:root:XX add new best (5, 3) is not 8 9 9
INFO:root:XX add new best (5, 3) is not 8 9 9
INFO:root:XX add new best (5, 3) is not 8 9 9
INFO:root:XX add new best (5, 3) is not 8 9 9
INFO:root:XX add new best (5, 3) is not 8 9 9
INFO:root:Considering 100 * 1 jobs for minsize=9
INFO:root:Chunked 100 in [9, 9, 9, 9, 8, 8, 8, 8, 8, 8, 8, 8]
INFO:root:XX add new best (5, 3) is not 8 9 9
INFO:root:XX add new best (5, 3) is not 8 9 9
INFO:root:XX add new best (5, 3) is not 8 9 9
INFO:root:XX add new best (5, 3) is not 8 9 9
INFO:root:XX add new best (5, 3) is not 8 9 9
INFO:root:XX add new best (5, 3) is not 8 9 9
INFO:root:XX add new best (5, 3) is not 8 9 9
INFO:root:XX add new best (5, 3) is not 8 9 9
INFO:root:XX add new best (5, 3) is not 8 9 9
INFO:root:XX add new best (5, 3) is not 8 9 9
INFO:root:XX add new best (5, 3) is not 8 9 9
INFO:root:XX add new best (5, 3) is not 8 9 9
INFO:root:XX add new best (5, 3) is not 8 9 9
INFO:root:XX add new best (5, 3) is not 8 9 9
INFO:root:XX add new best (5, 3) is not 8 9 9
INFO:root:XX add new best (5, 3) is not 8 9 9
INFO:root:Trace: [(9, [(5, 3) is not 8])]
INFO:root:Trace Quality: [(9, 1)]
INFO:root:Trace Sorted: [(9, 1)]
INFO:root:Finished
INFO:root:Full Trace [(9, [(5, 3) is not 8])]
INFO:root:Trying {}
INFO:root:Starting Step 1
INFO:root:Current state [[[[2], [1, 6, 8], [4], [1, 6], [3, 6], [7], [9], [3, 8], [5]], [[1, 6, 8], [9], [1, 7, 8], [5], [1, 3, 6], [2], [1, 6, 7], [4], [3, 8]], [[1, 6, 7], [3], [5], [4], [9], [8], [2], [1, 6, 7], [1, 6]], [[1, 3, 8], [1, 7, 8], [6], [7, 8], [2], [9], [5], [1, 3], [4]], [[1, 3, 5], [1, 5, 7, 8], [2], [7, 8], [4], [1, 6], [6, 7], [9], [1, 3, 6]], [[1, 7], [4], [9], [3], [5], [1, 6], [8], [1, 6, 7], [2]], [[1, 5, 6, 8], [1, 5, 6], [3], [9], [7], [4], [1, 6], [2], [1, 6, 8]], [[9], [2], [1, 8], [1, 6], [1, 6, 8], [3], [4], [5], [7]], [[4], [1, 6, 7, 8], [1, 7, 8], [2], [1, 8], [5], [3], [1, 6, 8], [9]]]]
INFO:root:Doing checkSmall1
INFO:root:Getting tiny MUSes, distance 1, for 1 puzlits, 1 repeats
INFO:root:Chunked 1 in [1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
INFO:root:Doing checkSmall2
INFO:root:Getting tiny MUSes, distance 2, for 1 puzlits, 1 repeats
INFO:root:Chunked 1 in [1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
INFO:root:Considering 100 * 1 jobs for minsize=3
INFO:root:Chunked 100 in [9, 9, 9, 9, 8, 8, 8, 8, 8, 8, 8, 8]
INFO:root:Considering 100 * 1 jobs for minsize=4
INFO:root:Chunked 100 in [9, 9, 9, 9, 8, 8, 8, 8, 8, 8, 8, 8]
INFO:root:Considering 100 * 1 jobs for minsize=5
INFO:root:Chunked 100 in [9, 9, 9, 9, 8, 8, 8, 8, 8, 8, 8, 8]
INFO:root:Considering 100 * 1 jobs for minsize=6
INFO:root:Chunked 100 in [9, 9, 9, 9, 8, 8, 8, 8, 8, 8, 8, 8]
INFO:root:Considering 100 * 1 jobs for minsize=7
INFO:root:Chunked 100 in [9, 9, 9, 9, 8, 8, 8, 8, 8, 8, 8, 8]
INFO:root:Considering 100 * 1 jobs for minsize=8
INFO:root:Chunked 100 in [9, 9, 9, 9, 8, 8, 8, 8, 8, 8, 8, 8]
INFO:root:XX found first (7, 9) is not 1 9
INFO:root:XX add new best (7, 9) is not 1 9 9
INFO:root:XX add new best (7, 9) is not 1 9 9
INFO:root:XX add new best (7, 9) is not 1 9 9
INFO:root:XX add new best (7, 9) is not 1 9 9
INFO:root:XX add new best (7, 9) is not 1 9 9
INFO:root:XX add new best (7, 9) is not 1 9 9
INFO:root:XX add new best (7, 9) is not 1 9 9
INFO:root:Considering 100 * 1 jobs for minsize=9
INFO:root:Chunked 100 in [9, 9, 9, 9, 8, 8, 8, 8, 8, 8, 8, 8]
INFO:root:XX add new best (7, 9) is not 1 9 9
INFO:root:XX add new best (7, 9) is not 1 9 9
INFO:root:XX add new best (7, 9) is not 1 9 9
INFO:root:XX add new best (7, 9) is not 1 9 9
INFO:root:XX add new best (7, 9) is not 1 9 9
INFO:root:XX add new best (7, 9) is not 1 9 9
INFO:root:XX add new best (7, 9) is not 1 9 9
INFO:root:XX add new best (7, 9) is not 1 9 9
INFO:root:Trace: [(9, [(7, 9) is not 1])]
INFO:root:Trace Quality: [(9, 1)]
INFO:root:Trace Sorted: [(9, 1)]
INFO:root:Finished
INFO:root:Full Trace [(9, [(7, 9) is not 1])]
INFO:root:Trying {'prechopMUSes': True}
INFO:root:Starting Step 1
INFO:root:Current state [[[[2], [1, 6, 8], [4], [1, 6], [3, 6], [7], [9], [3, 8], [5]], [[1, 6, 8], [9], [1, 7, 8], [5], [1, 3, 6], [2], [1, 6, 7], [4], [3, 8]], [[1, 6, 7], [3], [5], [4], [9], [8], [2], [1, 6, 7], [1, 6]], [[1, 3, 8], [1, 7, 8], [6], [7, 8], [2], [9], [5], [1, 3], [4]], [[1, 3, 5], [1, 5, 7, 8], [2], [7, 8], [4], [1, 6], [6, 7], [9], [1, 3, 6]], [[1, 7], [4], [9], [3], [5], [1, 6], [8], [1, 6, 7], [2]], [[1, 5, 6, 8], [1, 5, 6], [3], [9], [7], [4], [1, 6], [2], [1, 6, 8]], [[9], [2], [1, 8], [1, 6], [1, 6, 8], [3], [4], [5], [7]], [[4], [1, 6, 7, 8], [1, 7, 8], [2], [1, 8], [5], [3], [1, 6, 8], [9]]]]
INFO:root:Doing checkSmall1
INFO:root:Getting tiny MUSes, distance 1, for 1 puzlits, 1 repeats
INFO:root:Chunked 1 in [1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
INFO:root:Doing checkSmall2
INFO:root:Getting tiny MUSes, distance 2, for 1 puzlits, 1 repeats
INFO:root:Chunked 1 in [1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
INFO:root:Considering 100 * 1 jobs for minsize=3
INFO:root:Chunked 100 in [9, 9, 9, 9, 8, 8, 8, 8, 8, 8, 8, 8]
INFO:root:Considering 100 * 1 jobs for minsize=4
INFO:root:Chunked 100 in [9, 9, 9, 9, 8, 8, 8, 8, 8, 8, 8, 8]
INFO:root:Considering 100 * 1 jobs for minsize=5
INFO:root:Chunked 100 in [9, 9, 9, 9, 8, 8, 8, 8, 8, 8, 8, 8]
INFO:root:Considering 100 * 1 jobs for minsize=6
INFO:root:Chunked 100 in [9, 9, 9, 9, 8, 8, 8, 8, 8, 8, 8, 8]
INFO:root:XX found first (7, 9) is not 1 7
INFO:root:XX add new best (7, 9) is not 1 7 7
INFO:root:XX add new best (7, 9) is not 1 7 7
INFO:root:XX add new best (7, 9) is not 1 7 7
INFO:root:XX add new best (7, 9) is not 1 7 7
INFO:root:XX add new best (7, 9) is not 1 7 7
INFO:root:XX add new best (7, 9) is not 1 7 7
INFO:root:XX add new best (7, 9) is not 1 7 7
INFO:root:Considering 100 * 1 jobs for minsize=7
INFO:root:Chunked 100 in [9, 9, 9, 9, 8, 8, 8, 8, 8, 8, 8, 8]
INFO:root:XX add new best (7, 9) is not 1 7 7
INFO:root:XX add new best (7, 9) is not 1 7 7
INFO:root:Trace: [(7, [(7, 9) is not 1])]
INFO:root:Trace Quality: [(7, 1)]
INFO:root:Trace Sorted: [(7, 1)]
INFO:root:Finished
INFO:root:Full Trace [(7, [(7, 9) is not 1])]
INFO:root:Trying {'quarterChopMUS': True}
INFO:root:Starting Step 1
INFO:root:Current state [[[[2], [1, 6, 8], [4], [1, 6], [3, 6], [7], [9], [3, 8], [5]], [[1, 6, 8], [9], [1, 7, 8], [5], [1, 3, 6], [2], [1, 6, 7], [4], [3, 8]], [[1, 6, 7], [3], [5], [4], [9], [8], [2], [1, 6, 7], [1, 6]], [[1, 3, 8], [1, 7, 8], [6], [7, 8], [2], [9], [5], [1, 3], [4]], [[1, 3, 5], [1, 5, 7, 8], [2], [7, 8], [4], [1, 6], [6, 7], [9], [1, 3, 6]], [[1, 7], [4], [9], [3], [5], [1, 6], [8], [1, 6, 7], [2]], [[1, 5, 6, 8], [1, 5, 6], [3], [9], [7], [4], [1, 6], [2], [1, 6, 8]], [[9], [2], [1, 8], [1, 6], [1, 6, 8], [3], [4], [5], [7]], [[4], [1, 6, 7, 8], [1, 7, 8], [2], [1, 8], [5], [3], [1, 6, 8], [9]]]]
INFO:root:Doing checkSmall1
INFO:root:Getting tiny MUSes, distance 1, for 1 puzlits, 1 repeats
INFO:root:Chunked 1 in [1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
INFO:root:Doing checkSmall2
INFO:root:Getting tiny MUSes, distance 2, for 1 puzlits, 1 repeats
INFO:root:Chunked 1 in [1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
INFO:root:Considering 100 * 1 jobs for minsize=3
INFO:root:Chunked 100 in [9, 9, 9, 9, 8, 8, 8, 8, 8, 8, 8, 8]
INFO:root:Considering 100 * 1 jobs for minsize=4
INFO:root:Chunked 100 in [9, 9, 9, 9, 8, 8, 8, 8, 8, 8, 8, 8]
INFO:root:Considering 100 * 1 jobs for minsize=5
INFO:root:Chunked 100 in [9, 9, 9, 9, 8, 8, 8, 8, 8, 8, 8, 8]
INFO:root:Considering 100 * 1 jobs for minsize=6
INFO:root:Chunked 100 in [9, 9, 9, 9, 8, 8, 8, 8, 8, 8, 8, 8]
INFO:root:XX found first (7, 9) is not 1 7
INFO:root:XX add new best (7, 9) is not 1 7 7
INFO:root:XX add new best (7, 9) is not 1 7 7
INFO:root:XX add new best (7, 9) is not 1 7 7
INFO:root:Considering 100 * 1 jobs for minsize=7
INFO:root:Chunked 100 in [9, 9, 9, 9, 8, 8, 8, 8, 8, 8, 8, 8]
INFO:root:XX add new best (7, 9) is not 1 7 7
INFO:root:XX add new best (7, 9) is not 1 7 7
INFO:root:XX add new best (7, 9) is not 1 7 7
INFO:root:XX add new best (7, 9) is not 1 7 7
INFO:root:Trace: [(7, [(7, 9) is not 1])]
INFO:root:Trace Quality: [(7, 1)]
INFO:root:Trace Sorted: [(7, 1)]
INFO:root:Finished
INFO:root:Full Trace [(7, [(7, 9) is not 1])]
INFO:root:Trying {'minPrecheckMUS': True}
INFO:root:Starting Step 1
INFO:root:Current state [[[[2], [1, 6, 8], [4], [1, 6], [3, 6], [7], [9], [3, 8], [5]], [[1, 6, 8], [9], [1, 7, 8], [5], [1, 3, 6], [2], [1, 6, 7], [4], [3, 8]], [[1, 6, 7], [3], [5], [4], [9], [8], [2], [1, 6, 7], [1, 6]], [[1, 3, 8], [1, 7, 8], [6], [7, 8], [2], [9], [5], [1, 3], [4]], [[1, 3, 5], [1, 5, 7, 8], [2], [7, 8], [4], [1, 6], [6, 7], [9], [1, 3, 6]], [[1, 7], [4], [9], [3], [5], [1, 6], [8], [1, 6, 7], [2]], [[1, 5, 6, 8], [1, 5, 6], [3], [9], [7], [4], [1, 6], [2], [1, 6, 8]], [[9], [2], [1, 8], [1, 6], [1, 6, 8], [3], [4], [5], [7]], [[4], [1, 6, 7, 8], [1, 7, 8], [2], [1, 8], [5], [3], [1, 6, 8], [9]]]]
INFO:root:Doing checkSmall1
INFO:root:Getting tiny MUSes, distance 1, for 1 puzlits, 1 repeats
INFO:root:Chunked 1 in [1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
INFO:root:Doing checkSmall2
INFO:root:Getting tiny MUSes, distance 2, for 1 puzlits, 1 repeats
INFO:root:Chunked 1 in [1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
INFO:root:Considering 100 * 1 jobs for minsize=3
INFO:root:Chunked 100 in [9, 9, 9, 9, 8, 8, 8, 8, 8, 8, 8, 8]
INFO:root:Considering 100 * 1 jobs for minsize=4
INFO:root:Chunked 100 in [9, 9, 9, 9, 8, 8, 8, 8, 8, 8, 8, 8]
INFO:root:Considering 100 * 1 jobs for minsize=5
INFO:root:Chunked 100 in [9, 9, 9, 9, 8, 8, 8, 8, 8, 8, 8, 8]
INFO:root:Considering 100 * 1 jobs for minsize=6
INFO:root:Chunked 100 in [9, 9, 9, 9, 8, 8, 8, 8, 8, 8, 8, 8]
INFO:root:XX found first (7, 9) is not 1 7
INFO:root:XX add new best (7, 9) is not 1 7 7
INFO:root:XX add new best (7, 9) is not 1 7 7
INFO:root:XX add new best (7, 9) is not 1 7 7
INFO:root:XX add new best (7, 9) is not 1 7 7
INFO:root:Considering 100 * 1 jobs for minsize=7
INFO:root:Chunked 100 in [9, 9, 9, 9, 8, 8, 8, 8, 8, 8, 8, 8]
INFO:root:XX add new best (7, 9) is not 1 7 7
INFO:root:Trace: [(7, [(7, 9) is not 1])]
INFO:root:Trace Quality: [(7, 1)]
INFO:root:Trace Sorted: [(7, 1)]
INFO:root:Finished
INFO:root:Full Trace [(7, [(7, 9) is not 1])]
INFO:root:Trying {'gallopingMUSes': True}
INFO:root:Starting Step 1
INFO:root:Current state [[[[2], [1, 6, 8], [4], [1, 6], [3, 6], [7], [9], [3, 8], [5]], [[1, 6, 8], [9], [1, 7, 8], [5], [1, 3, 6], [2], [1, 6, 7], [4], [3, 8]], [[1, 6, 7], [3], [5], [4], [9], [8], [2], [1, 6, 7], [1, 6]], [[1, 3, 8], [1, 7, 8], [6], [7, 8], [2], [9], [5], [1, 3], [4]], [[1, 3, 5], [1, 5, 7, 8], [2], [7, 8], [4], [1, 6], [6, 7], [9], [1, 3, 6]], [[1, 7], [4], [9], [3], [5], [1, 6], [8], [1, 6, 7], [2]], [[1, 5, 6, 8], [1, 5, 6], [3], [9], [7], [4], [1, 6], [2], [1, 6, 8]], [[9], [2], [1, 8], [1, 6], [1, 6, 8], [3], [4], [5], [7]], [[4], [1, 6, 7, 8], [1, 7, 8], [2], [1, 8], [5], [3], [1, 6, 8], [9]]]]
INFO:root:Doing checkSmall1
INFO:root:Getting tiny MUSes, distance 1, for 1 puzlits, 1 repeats
INFO:root:Chunked 1 in [1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
INFO:root:Doing checkSmall2
INFO:root:Getting tiny MUSes, distance 2, for 1 puzlits, 1 repeats
INFO:root:Chunked 1 in [1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
INFO:root:Considering 100 * 1 jobs for minsize=3
INFO:root:Chunked 100 in [9, 9, 9, 9, 8, 8, 8, 8, 8, 8, 8, 8]
INFO:root:Considering 100 * 1 jobs for minsize=4
INFO:root:Chunked 100 in [9, 9, 9, 9, 8, 8, 8, 8, 8, 8, 8, 8]
INFO:root:Considering 100 * 1 jobs for minsize=5
INFO:root:Chunked 100 in [9, 9, 9, 9, 8, 8, 8, 8, 8, 8, 8, 8]
INFO:root:Considering 100 * 1 jobs for minsize=6
INFO:root:Chunked 100 in [9, 9, 9, 9, 8, 8, 8, 8, 8, 8, 8, 8]
INFO:root:XX found first (7, 9) is not 1 7
INFO:root:XX add new best (7, 9) is not 1 7 7
INFO:root:XX add new best (7, 9) is not 1 7 7
INFO:root:XX add new best (7, 9) is not 1 7 7
INFO:root:Considering 100 * 1 jobs for minsize=7
INFO:root:Chunked 100 in [9, 9, 9, 9, 8, 8, 8, 8, 8, 8, 8, 8]
INFO:root:Trace: [(7, [(7, 9) is not 1])]
INFO:root:Trace Quality: [(7, 1)]
INFO:root:Trace Sorted: [(7, 1)]
INFO:root:Finished
INFO:root:Full Trace [(7, [(7, 9) is not 1])]
INFO:root:Trying {'minPrecheckStepsMUS': True}
INFO:root:Starting Step 1
INFO:root:Current state [[[[2], [1, 6, 8], [4], [1, 6], [3, 6], [7], [9], [3, 8], [5]], [[1, 6, 8], [9], [1, 7, 8], [5], [1, 3, 6], [2], [1, 6, 7], [4], [3, 8]], [[1, 6, 7], [3], [5], [4], [9], [8], [2], [1, 6, 7], [1, 6]], [[1, 3, 8], [1, 7, 8], [6], [7, 8], [2], [9], [5], [1, 3], [4]], [[1, 3, 5], [1, 5, 7, 8], [2], [7, 8], [4], [1, 6], [6, 7], [9], [1, 3, 6]], [[1, 7], [4], [9], [3], [5], [1, 6], [8], [1, 6, 7], [2]], [[1, 5, 6, 8], [1, 5, 6], [3], [9], [7], [4], [1, 6], [2], [1, 6, 8]], [[9], [2], [1, 8], [1, 6], [1, 6, 8], [3], [4], [5], [7]], [[4], [1, 6, 7, 8], [1, 7, 8], [2], [1, 8], [5], [3], [1, 6, 8], [9]]]]
INFO:root:Doing checkSmall1
INFO:root:Getting tiny MUSes, distance 1, for 1 puzlits, 1 repeats
INFO:root:Chunked 1 in [1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
INFO:root:Doing checkSmall2
INFO:root:Getting tiny MUSes, distance 2, for 1 puzlits, 1 repeats
INFO:root:Chunked 1 in [1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
INFO:root:Considering 100 * 1 jobs for minsize=3
INFO:root:Chunked 100 in [9, 9, 9, 9, 8, 8, 8, 8, 8, 8, 8, 8]
INFO:root:Considering 100 * 1 jobs for minsize=4
INFO:root:Chunked 100 in [9, 9, 9, 9, 8, 8, 8, 8, 8, 8, 8, 8]
INFO:root:Considering 100 * 1 jobs for minsize=5
INFO:root:Chunked 100 in [9, 9, 9, 9, 8, 8, 8, 8, 8, 8, 8, 8]
INFO:root:Considering 100 * 1 jobs for minsize=6
INFO:root:Chunked 100 in [9, 9, 9, 9, 8, 8, 8, 8, 8, 8, 8, 8]
INFO:root:XX found first (7, 9) is not 1 7
INFO:root:XX add new best (7, 9) is not 1 7 7
INFO:root:XX add new best (7, 9) is not 1 7 7
INFO:root:XX add new best (7, 9) is not 1 7 7
INFO:root:XX add new best (7, 9) is not 1 7 7
INFO:root:Considering 100 * 1 jobs for minsize=7
INFO:root:Chunked 100 in [9, 9, 9, 9, 8, 8, 8, 8, 8, 8, 8, 8]
INFO:root:XX add new best (7, 9) is not 1 7 7
INFO:root:Trace: [(7, [(7, 9) is not 1])]
INFO:root:Trace Quality: [(7, 1)]
INFO:root:Trace Sorted: [(7, 1)]
INFO:root:Finished
INFO:root:Full Trace [(7, [(7, 9) is not 1])]
INFO:root:Trying {'gallopingMUSes': True, 'minPrecheckMUS': True}
INFO:root:Starting Step 1
INFO:root:Current state [[[[2], [1, 6, 8], [4], [1, 6], [3, 6], [7], [9], [3, 8], [5]], [[1, 6, 8], [9], [1, 7, 8], [5], [1, 3, 6], [2], [1, 6, 7], [4], [3, 8]], [[1, 6, 7], [3], [5], [4], [9], [8], [2], [1, 6, 7], [1, 6]], [[1, 3, 8], [1, 7, 8], [6], [7, 8], [2], [9], [5], [1, 3], [4]], [[1, 3, 5], [1, 5, 7, 8], [2], [7, 8], [4], [1, 6], [6, 7], [9], [1, 3, 6]], [[1, 7], [4], [9], [3], [5], [1, 6], [8], [1, 6, 7], [2]], [[1, 5, 6, 8], [1, 5, 6], [3], [9], [7], [4], [1, 6], [2], [1, 6, 8]], [[9], [2], [1, 8], [1, 6], [1, 6, 8], [3], [4], [5], [7]], [[4], [1, 6, 7, 8], [1, 7, 8], [2], [1, 8], [5], [3], [1, 6, 8], [9]]]]
INFO:root:Doing checkSmall1
INFO:root:Getting tiny MUSes, distance 1, for 1 puzlits, 1 repeats
INFO:root:Chunked 1 in [1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
INFO:root:Doing checkSmall2
INFO:root:Getting tiny MUSes, distance 2, for 1 puzlits, 1 repeats
INFO:root:Chunked 1 in [1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
INFO:root:Considering 100 * 1 jobs for minsize=3
INFO:root:Chunked 100 in [9, 9, 9, 9, 8, 8, 8, 8, 8, 8, 8, 8]
INFO:root:Considering 100 * 1 jobs for minsize=4
INFO:root:Chunked 100 in [9, 9, 9, 9, 8, 8, 8, 8, 8, 8, 8, 8]
INFO:root:Considering 100 * 1 jobs for minsize=5
INFO:root:Chunked 100 in [9, 9, 9, 9, 8, 8, 8, 8, 8, 8, 8, 8]
INFO:root:Considering 100 * 1 jobs for minsize=6
INFO:root:Chunked 100 in [9, 9, 9, 9, 8, 8, 8, 8, 8, 8, 8, 8]
INFO:root:XX found first (7, 9) is not 1 7
INFO:root:XX add new best (7, 9) is not 1 7 7
INFO:root:XX add new best (7, 9) is not 1 7 7
INFO:root:XX add new best (7, 9) is not 1 7 7
INFO:root:XX add new best (7, 9) is not 1 7 7
INFO:root:Considering 100 * 1 jobs for minsize=7
INFO:root:Chunked 100 in [9, 9, 9, 9, 8, 8, 8, 8, 8, 8, 8, 8]
INFO:root:XX add new best (7, 9) is not 1 7 7
INFO:root:Trace: [(7, [(7, 9) is not 1])]
INFO:root:Trace Quality: [(7, 1)]
INFO:root:Trace Sorted: [(7, 1)]
INFO:root:Finished
INFO:root:Full Trace [(7, [(7, 9) is not 1])]
INFO:root:Trying {}
INFO:root:Starting Step 1
INFO:root:Current state [[[[1, 2, 8], [1, 2, 4], [3], [7], [8, 9], [6], [5], [2, 4, 8, 9], [4, 8, 9]], [[7], [2, 4, 8], [4, 8], [5], [2, 3, 8, 9], [3, 8], [3, 4, 6, 8], [2, 4, 6, 8, 9], [1]], [[5], [6], [9], [1, 2, 8], [4], [1, 3, 8], [3, 8], [7], [2, 3, 8]], [[1, 3, 6, 8], [1, 4, 8], [2], [4, 8, 9], [1, 3, 7, 8], [3, 4, 8], [3, 6, 8], [5], [3, 6, 7, 8, 9]], [[3, 8], [9], [5], [6], [3, 7, 8], [2], [3, 4, 8], [1], [3, 4, 7, 8]], [[1, 3, 6, 8], [7], [4, 6, 8], [4, 8, 9], [1, 3, 8], [5], [2], [6, 8, 9], [3, 6, 8, 9]], [[9], [2, 8], [6, 8], [1, 4], [5], [1, 4], [7], [3], [2, 6, 8]], [[4], [3], [7], [2, 8], [2, 6, 8], [9], [1], [2, 6, 8], [5]], [[2, 6, 8], [5], [1], [3], [2, 6, 8], [7], [9], [2, 4, 6, 8], [2, 4, 6, 8]]]]
INFO:root:Doing checkSmall1
INFO:root:Getting tiny MUSes, distance 1, for 1 puzlits, 1 repeats
INFO:root:Chunked 1 in [1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
INFO:root:Doing checkSmall2
INFO:root:Getting tiny MUSes, distance 2, for 1 puzlits, 1 repeats
INFO:root:Chunked 1 in [1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
INFO:root:Considering 100 * 1 jobs for minsize=3
INFO:root:Chunked 100 in [9, 9, 9, 9, 8, 8, 8, 8, 8, 8, 8, 8]
INFO:root:Considering 100 * 1 jobs for minsize=4
INFO:root:Chunked 100 in [9, 9, 9, 9, 8, 8, 8, 8, 8, 8, 8, 8]
INFO:root:Considering 100 * 1 jobs for minsize=5
INFO:root:Chunked 100 in [9, 9, 9, 9, 8, 8, 8, 8, 8, 8, 8, 8]
INFO:root:Considering 100 * 1 jobs for minsize=6
INFO:root:Chunked 100 in [9, 9, 9, 9, 8, 8, 8, 8, 8, 8, 8, 8]
INFO:root:Considering 100 * 1 jobs for minsize=7
INFO:root:Chunked 100 in [9, 9, 9, 9, 8, 8, 8, 8, 8, 8, 8, 8]
INFO:root:Considering 100 * 1 jobs for minsize=8
INFO:root:Chunked 100 in [9, 9, 9, 9, 8, 8, 8, 8, 8, 8, 8, 8]
INFO:root:Considering 100 * 1 jobs for minsize=9
INFO:root:Chunked 100 in [9, 9, 9, 9, 8, 8, 8, 8, 8, 8, 8, 8]
INFO:root:Considering 100 * 1 jobs for minsize=10
INFO:root:Chunked 100 in [9, 9, 9, 9, 8, 8, 8, 8, 8, 8, 8, 8]
INFO:root:Considering 100 * 1 jobs for minsize=11
INFO:root:Chunked 100 in [9, 9, 9, 9, 8, 8, 8, 8, 8, 8, 8, 8]
INFO:root:Considering 100 * 1 jobs for minsize=12
INFO:root:Chunked 100 in [9, 9, 9, 9, 8, 8, 8, 8, 8, 8, 8, 8]
INFO:root:XX found first (8, 8) is not 2 13
INFO:root:XX add new best (8, 8) is not 2 13 13
INFO:root:XX add new best (8, 8) is not 2 13 13
INFO:root:XX add new best (8, 8) is not 2 13 13
INFO:root:XX add new best (8, 8) is not 2 13 13
INFO:root:XX add new best (8, 8) is not 2 13 13
INFO:root:XX add new best (8, 8) is not 2 13 13
INFO:root:XX add new best (8, 8) is not 2 13 13
INFO:root:XX add new best (8, 8) is not 2 13 13
INFO:root:XX add new best (8, 8) is not 2 13 13
INFO:root:XX add new best (8, 8) is not 2 13 13
INFO:root:XX add new best (8, 8) is not 2 13 13
INFO:root:XX add new best (8, 8) is not 2 13 13
INFO:root:XX add new best (8, 8) is not 2 13 13
INFO:root:XX add new best (8, 8) is not 2 13 13
INFO:root:XX add new best (8, 8) is not 2 13 13
INFO:root:XX add new best (8, 8) is not 2 13 13
INFO:root:XX add new best (8, 8) is not 2 13 13
INFO:root:XX add new best (8, 8) is not 2 13 13
INFO:root:XX add new best (8, 8) is not 2 13 13
INFO:root:XX add new best (8, 8) is not 2 13 13
INFO:root:XX add new best (8, 8) is not 2 13 13
INFO:root:XX add new best (8, 8) is not 2 13 13
INFO:root:XX add new best (8, 8) is not 2 13 13
INFO:root:XX add new best (8, 8) is not 2 13 13
INFO:root:XX add new best (8, 8) is not 2 13 13
INFO:root:XX add new best (8, 8) is not 2 13 13
INFO:root:XX add new best (8, 8) is not 2 13 13
INFO:root:XX add new best (8, 8) is not 2 13 13
INFO:root:XX add new best (8, 8) is not 2 13 13
INFO:root:XX add new best (8, 8) is not 2 13 13
INFO:root:XX add new best (8, 8) is not 2 13 13
INFO:root:XX add new best (8, 8) is not 2 13 13
INFO:root:XX add new best (8, 8) is not 2 13 13
INFO:root:XX add new best (8, 8) is not 2 13 13
INFO:root:XX add new best (8, 8) is not 2 13 13
INFO:root:XX add new best (8, 8) is not 2 13 13
INFO:root:XX add new best (8, 8) is not 2 13 13
INFO:root:XX add new best (8, 8) is not 2 13 13
INFO:root:XX add new best (8, 8) is not 2 13 13
INFO:root:XX add new best (8, 8) is not 2 13 13
INFO:root:XX add new best (8, 8) is not 2 13 13
INFO:root:XX add new best (8, 8) is not 2 13 13
INFO:root:XX add new best (8, 8) is not 2 13 13
INFO:root:XX add new best (8, 8) is not 2 13 13
INFO:root:XX add new best (8, 8) is not 2 13 13
INFO:root:XX add new best (8, 8) is not 2 13 13
INFO:root:XX add new best (8, 8) is not 2 13 13
INFO:root:XX add new best (8, 8) is not 2 13 13
INFO:root:XX add new best (8, 8) is not 2 13 13
INFO:root:XX add new best (8, 8) is not 2 13 13
INFO:root:XX add new best (8, 8) is not 2 13 13
INFO:root:XX add new best (8, 8) is not 2 13 13
INFO:root:XX add new best (8, 8) is not 2 13 13
INFO:root:XX add new best (8, 8) is not 2 13 13
INFO:root:XX add new best (8, 8) is not 2 13 13
INFO:root:XX add new best (8, 8) is not 2 13 13
INFO:root:XX add new best (8, 8) is not 2 13 13
INFO:root:XX add new best (8, 8) is not 2 13 13
INFO:root:XX add new best (8, 8) is not 2 13 13
INFO:root:XX add new best (8, 8) is not 2 13 13
INFO:root:XX add new best (8, 8) is not 2 13 13
INFO:root:XX add new best (8, 8) is not 2 13 13
INFO:root:XX add new best (8, 8) is not 2 13 13
INFO:root:XX add new best (8, 8) is not 2 13 13
INFO:root:XX add new best (8, 8) is not 2 13 13
INFO:root:XX add new best (8, 8) is not 2 13 13
INFO:root:XX add new best (8, 8) is not 2 13 13
INFO:root:XX add new best (8, 8) is not 2 13 13
INFO:root:XX add new best (8, 8) is not 2 13 13
INFO:root:XX add new best (8, 8) is not 2 13 13
INFO:root:XX add new best (8, 8) is not 2 13 13
INFO:root:XX add new best (8, 8) is not 2 13 13
INFO:root:XX add new best (8, 8) is not 2 13 13
INFO:root:XX add new best (8, 8) is not 2 13 13
INFO:root:XX add new best (8, 8) is not 2 13 13
INFO:root:XX add new best (8, 8) is not 2 13 13
INFO:root:XX add new best (8, 8) is not 2 13 13
INFO:root:XX add new best (8, 8) is not 2 13 13
INFO:root:XX add new best (8, 8) is not 2 13 13
INFO:root:XX add new best (8, 8) is not 2 13 13
INFO:root:XX add new best (8, 8) is not 2 13 13
INFO:root:XX add new best (8, 8) is not 2 13 13
INFO:root:XX add new best (8, 8) is not 2 13 13
INFO:root:XX add new best (8, 8) is not 2 13 13
INFO:root:XX add new best (8, 8) is not 2 13 13
INFO:root:XX add new best (8, 8) is not 2 13 13
INFO:root:XX add new best (8, 8) is not 2 13 13
INFO:root:XX add new best (8, 8) is not 2 13 13
INFO:root:XX add new best (8, 8) is not 2 13 13
INFO:root:XX add new best (8, 8) is not 2 13 13
INFO:root:XX add new best (8, 8) is not 2 13 13
INFO:root:XX add new best (8, 8) is not 2 13 13
INFO:root:XX add new best (8, 8) is not 2 13 13
INFO:root:XX add new best (8, 8) is not 2 13 13
INFO:root:XX add new best (8, 8) is not 2 13 13
INFO:root:XX add new best (8, 8) is not 2 13 13
INFO:root:XX add new best (8, 8) is not 2 13 13
INFO:root:XX add new best (8, 8) is not 2 13 13
INFO:root:Considering 100 * 1 jobs for minsize=13
INFO:root:Chunked 100 in [9, 9, 9, 9, 8, 8, 8, 8, 8, 8, 8, 8]
INFO:root:XX add new best (8, 8) is not 2 13 13
INFO:root:XX add new best (8, 8) is not 2 13 13
INFO:root:XX add new best (8, 8) is not 2 13 13
INFO:root:XX add new best (8, 8) is not 2 13 13
INFO:root:XX add new best (8, 8) is not 2 13 13
INFO:root:XX add new best (8, 8) is not 2 13 13
INFO:root:XX add new best (8, 8) is not 2 13 13
INFO:root:XX add new best (8, 8) is not 2 13 13
INFO:root:XX add new best (8, 8) is not 2 13 13
INFO:root:XX add new best (8, 8) is not 2 13 13
INFO:root:XX add new best (8, 8) is not 2 13 13
INFO:root:XX add new best (8, 8) is not 2 13 13
INFO:root:XX add new best (8, 8) is not 2 13 13
INFO:root:XX add new best (8, 8) is not 2 13 13
INFO:root:XX add new best (8, 8) is not 2 13 13
INFO:root:XX add new best (8, 8) is not 2 13 13
INFO:root:XX add new best (8, 8) is not 2 13 13
INFO:root:XX add new best (8, 8) is not 2 13 13
INFO:root:XX add new best (8, 8) is not 2 13 13
INFO:root:XX add new best (8, 8) is not 2 13 13
INFO:root:XX add new best (8, 8) is not 2 13 13
INFO:root:XX add new best (8, 8) is not 2 13 13
INFO:root:XX add new best (8, 8) is not 2 13 13
INFO:root:XX add new best (8, 8) is not 2 13 13
INFO:root:XX add new best (8, 8) is not 2 13 13
INFO:root:XX add new best (8, 8) is not 2 13 13
INFO:root:XX add new best (8, 8) is not 2 13 13
INFO:root:XX add new best (8, 8) is not 2 13 13
INFO:root:XX add new best (8, 8) is not 2 13 13
INFO:root:XX add new best (8, 8) is not 2 13 13
INFO:root:XX add new best (8, 8) is not 2 13 13
INFO:root:XX add new best (8, 8) is not 2 13 13
INFO:root:XX add new best (8, 8) is not 2 13 13
INFO:root:XX add new best (8, 8) is not 2 13 13
INFO:root:XX add new best (8, 8) is not 2 13 13
INFO:root:XX add new best (8, 8) is not 2 13 13
INFO:root:XX add new best (8, 8) is not 2 13 13
INFO:root:XX add new best (8, 8) is not 2 13 13
INFO:root:XX add new best (8, 8) is not 2 13 13
INFO:root:XX add new best (8, 8) is not 2 13 13
INFO:root:XX add new best (8, 8) is not 2 13 13
INFO:root:XX add new best (8, 8) is not 2 13 13
INFO:root:XX add new best (8, 8) is not 2 13 13
INFO:root:XX add new best (8, 8) is not 2 13 13
INFO:root:XX add new best (8, 8) is not 2 13 13
INFO:root:XX add new best (8, 8) is not 2 13 13
INFO:root:XX add new best (8, 8) is not 2 13 13
INFO:root:XX add new best (8, 8) is not 2 13 13
INFO:root:XX add new best (8, 8) is not 2 13 13
INFO:root:XX add new best (8, 8) is not 2 13 13
INFO:root:XX add new best (8, 8) is not 2 13 13
INFO:root:XX add new best (8, 8) is not 2 13 13
INFO:root:XX add new best (8, 8) is not 2 13 13
INFO:root:XX add new best (8, 8) is not 2 13 13
INFO:root:XX add new best (8, 8) is not 2 13 13
INFO:root:XX add new best (8, 8) is not 2 13 13
INFO:root:XX add new best (8, 8) is not 2 13 13
INFO:root:XX add new best (8, 8) is not 2 13 13
INFO:root:XX add new best (8, 8) is not 2 13 13
INFO:root:XX add new best (8, 8) is not 2 13 13
INFO:root:XX add new best (8, 8) is not 2 13 13
INFO:root:XX add new best (8, 8) is not 2 13 13
INFO:root:XX add new best (8, 8) is not 2 13 13
INFO:root:XX add new best (8, 8) is not 2 13 13
INFO:root:XX add new best (8, 8) is not 2 13 13
INFO:root:XX add new best (8, 8) is not 2 13 13
INFO:root:XX add new best (8, 8) is not 2 13 13
INFO:root:XX add new best (8, 8) is not 2 13 13
INFO:root:XX add new best (8, 8) is not 2 13 13
INFO:root:XX add new best (8, 8) is not 2 13 13
INFO:root:XX add new best (8, 8) is not 2 13 13
INFO:root:XX add new best (8, 8) is not 2 13 13
INFO:root:XX add new best (8, 8) is not 2 13 13
INFO:root:XX add new best (8, 8) is not 2 13 13
INFO:root:XX add new best (8, 8) is not 2 13 13
INFO:root:XX add new best (8, 8) is not 2 13 13
INFO:root:XX add new best (8, 8) is not 2 13 13
INFO:root:XX add new best (8, 8) is not 2 13 13
INFO:root:XX add new best (8, 8) is not 2 13 13
INFO:root:XX add new best (8, 8) is not 2 13 13
INFO:root:XX add new best (8, 8) is not 2 13 13
INFO:root:XX add new best (8, 8) is not 2 13 13
INFO:root:XX add new best (8, 8) is not 2 13 13
INFO:root:XX add new best (8, 8) is not 2 13 13
INFO:root:XX add new best (8, 8) is not 2 13 13
INFO:root:XX add new best (8, 8) is not 2 13 13
INFO:root:XX add new best (8, 8) is not 2 13 13
INFO:root:XX add new best (8, 8) is not 2 13 13
INFO:root:XX add new best (8, 8) is not 2 13 13
INFO:root:XX add new best (8, 8) is not 2 13 13
INFO:root:XX add new best (8, 8) is not 2 13 13
INFO:root:XX add new best (8, 8) is not 2 13 13
INFO:root:XX add new best (8, 8) is not 2 13 13
INFO:root:XX add new best (8, 8) is not 2 13 13
INFO:root:XX add new best (8, 8) is not 2 13 13
INFO:root:XX add new best (8, 8) is not 2 13 13
INFO:root:XX add new best (8, 8) is not 2 13 13
INFO:root:Trace: [(13, [(8, 8) is not 2])]
INFO:root:Trace Quality: [(13, 1)]
INFO:root:Trace Sorted: [(13, 1)]
INFO:root:Finished
INFO:root:Full Trace [(13, [(8, 8) is not 2])]
INFO:root:Trying {'prechopMUSes': True}
INFO:root:Starting Step 1
INFO:root:Current state [[[[1, 2, 8], [1, 2, 4], [3], [7], [8, 9], [6], [5], [2, 4, 8, 9], [4, 8, 9]], [[7], [2, 4, 8], [4, 8], [5], [2, 3, 8, 9], [3, 8], [3, 4, 6, 8], [2, 4, 6, 8, 9], [1]], [[5], [6], [9], [1, 2, 8], [4], [1, 3, 8], [3, 8], [7], [2, 3, 8]], [[1, 3, 6, 8], [1, 4, 8], [2], [4, 8, 9], [1, 3, 7, 8], [3, 4, 8], [3, 6, 8], [5], [3, 6, 7, 8, 9]], [[3, 8], [9], [5], [6], [3, 7, 8], [2], [3, 4, 8], [1], [3, 4, 7, 8]], [[1, 3, 6, 8], [7], [4, 6, 8], [4, 8, 9], [1, 3, 8], [5], [2], [6, 8, 9], [3, 6, 8, 9]], [[9], [2, 8], [6, 8], [1, 4], [5], [1, 4], [7], [3], [2, 6, 8]], [[4], [3], [7], [2, 8], [2, 6, 8], [9], [1], [2, 6, 8], [5]], [[2, 6, 8], [5], [1], [3], [2, 6, 8], [7], [9], [2, 4, 6, 8], [2, 4, 6, 8]]]]
INFO:root:Doing checkSmall1
INFO:root:Getting tiny MUSes, distance 1, for 1 puzlits, 1 repeats
INFO:root:Chunked 1 in [1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
INFO:root:Doing checkSmall2
INFO:root:Getting tiny MUSes, distance 2, for 1 puzlits, 1 repeats
INFO:root:Chunked 1 in [1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
INFO:root:Considering 100 * 1 jobs for minsize=3
INFO:root:Chunked 100 in [9, 9, 9, 9, 8, 8, 8, 8, 8, 8, 8, 8]
INFO:root:Considering 100 * 1 jobs for minsize=4
INFO:root:Chunked 100 in [9, 9, 9, 9, 8, 8, 8, 8, 8, 8, 8, 8]
INFO:root:Considering 100 * 1 jobs for minsize=5
INFO:root:Chunked 100 in [9, 9, 9, 9, 8, 8, 8, 8, 8, 8, 8, 8]
INFO:root:XX found first (8, 8) is not 2 6
INFO:root:XX add new best (8, 8) is not 2 6 6
INFO:root:XX add new best (8, 8) is not 2 6 6
INFO:root:XX add new best (8, 8) is not 2 6 6
INFO:root:XX add new best (8, 8) is not 2 6 6
INFO:root:XX add new best (8, 8) is not 2 6 6
INFO:root:XX add new best (8, 8) is not 2 6 6
INFO:root:XX add new best (8, 8) is not 2 6 6
INFO:root:XX add new best (8, 8) is not 2 6 6
INFO:root:XX add new best (8, 8) is not 2 6 6
INFO:root:XX add new best (8, 8) is not 2 6 6
INFO:root:XX add new best (8, 8) is not 2 6 6
INFO:root:XX add new best (8, 8) is not 2 6 6
INFO:root:XX add new best (8, 8) is not 2 6 6
INFO:root:XX add new best (8, 8) is not 2 6 6
INFO:root:XX add new best (8, 8) is not 2 6 6
INFO:root:XX add new best (8, 8) is not 2 6 6
INFO:root:XX add new best (8, 8) is not 2 6 6
INFO:root:XX add new best (8, 8) is not 2 6 6
INFO:root:XX add new best (8, 8) is not 2 6 6
INFO:root:XX add new best (8, 8) is not 2 6 6
INFO:root:Considering 100 * 1 jobs for minsize=6
INFO:root:Chunked 100 in [9, 9, 9, 9, 8, 8, 8, 8, 8, 8, 8, 8]
INFO:root:XX add new best (8, 8) is not 2 6 6
INFO:root:XX add new best (8, 8) is not 2 6 6
INFO:root:XX add new best (8, 8) is not 2 6 6
INFO:root:XX add new best (8, 8) is not 2 6 6
INFO:root:XX add new best (8, 8) is not 2 6 6
INFO:root:XX add new best (8, 8) is not 2 6 6
INFO:root:XX add new best (8, 8) is not 2 6 6
INFO:root:XX add new best (8, 8) is not 2 6 6
INFO:root:XX add new best (8, 8) is not 2 6 6
INFO:root:XX add new best (8, 8) is not 2 6 6
INFO:root:XX add new best (8, 8) is not 2 6 6
INFO:root:XX add new best (8, 8) is not 2 6 6
INFO:root:XX add new best (8, 8) is not 2 6 6
INFO:root:Trace: [(6, [(8, 8) is not 2])]
INFO:root:Trace Quality: [(6, 1)]
INFO:root:Trace Sorted: [(6, 1)]
INFO:root:Finished
INFO:root:Full Trace [(6, [(8, 8) is not 2])]
INFO:root:Trying {'quarterChopMUS': True}
INFO:root:Starting Step 1
INFO:root:Current state [[[[1, 2, 8], [1, 2, 4], [3], [7], [8, 9], [6], [5], [2, 4, 8, 9], [4, 8, 9]], [[7], [2, 4, 8], [4, 8], [5], [2, 3, 8, 9], [3, 8], [3, 4, 6, 8], [2, 4, 6, 8, 9], [1]], [[5], [6], [9], [1, 2, 8], [4], [1, 3, 8], [3, 8], [7], [2, 3, 8]], [[1, 3, 6, 8], [1, 4, 8], [2], [4, 8, 9], [1, 3, 7, 8], [3, 4, 8], [3, 6, 8], [5], [3, 6, 7, 8, 9]], [[3, 8], [9], [5], [6], [3, 7, 8], [2], [3, 4, 8], [1], [3, 4, 7, 8]], [[1, 3, 6, 8], [7], [4, 6, 8], [4, 8, 9], [1, 3, 8], [5], [2], [6, 8, 9], [3, 6, 8, 9]], [[9], [2, 8], [6, 8], [1, 4], [5], [1, 4], [7], [3], [2, 6, 8]], [[4], [3], [7], [2, 8], [2, 6, 8], [9], [1], [2, 6, 8], [5]], [[2, 6, 8], [5], [1], [3], [2, 6, 8], [7], [9], [2, 4, 6, 8], [2, 4, 6, 8]]]]
INFO:root:Doing checkSmall1
INFO:root:Getting tiny MUSes, distance 1, for 1 puzlits, 1 repeats
INFO:root:Chunked 1 in [1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
INFO:root:Doing checkSmall2
INFO:root:Getting tiny MUSes, distance 2, for 1 puzlits, 1 repeats
INFO:root:Chunked 1 in [1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
INFO:root:Considering 100 * 1 jobs for minsize=3
INFO:root:Chunked 100 in [9, 9, 9, 9, 8, 8, 8, 8, 8, 8, 8, 8]
INFO:root:Considering 100 * 1 jobs for minsize=4
INFO:root:Chunked 100 in [9, 9, 9, 9, 8, 8, 8, 8, 8, 8, 8, 8]
INFO:root:Considering 100 * 1 jobs for minsize=5
INFO:root:Chunked 100 in [9, 9, 9, 9, 8, 8, 8, 8, 8, 8, 8, 8]
INFO:root:XX found first (8, 8) is not 2 6
INFO:root:XX add new best (8, 8) is not 2 6 6
INFO:root:XX add new best (8, 8) is not 2 6 6
INFO:root:XX add new best (8, 8) is not 2 6 6
INFO:root:XX add new best (8, 8) is not 2 6 6
INFO:root:XX add new best (8, 8) is not 2 6 6
INFO:root:XX add new best (8, 8) is not 2 6 6
INFO:root:XX add new best (8, 8) is not 2 6 6
INFO:root:XX add new best (8, 8) is not 2 6 6
INFO:root:XX add new best (8, 8) is not 2 6 6
INFO:root:XX add new best (8, 8) is not 2 6 6
INFO:root:XX add new best (8, 8) is not 2 6 6
INFO:root:XX add new best (8, 8) is not 2 6 6
INFO:root:XX add new best (8, 8) is not 2 6 6
INFO:root:XX add new best (8, 8) is not 2 6 6
INFO:root:XX add new best (8, 8) is not 2 6 6
INFO:root:XX add new best (8, 8) is not 2 6 6
INFO:root:XX add new best (8, 8) is not 2 6 6
INFO:root:XX add new best (8, 8) is not 2 6 6
INFO:root:XX add new best (8, 8) is not 2 6 6
INFO:root:XX add new best (8, 8) is not 2 6 6
INFO:root:XX add new best (8, 8) is not 2 6 6
INFO:root:Considering 100 * 1 jobs for minsize=6
INFO:root:Chunked 100 in [9, 9, 9, 9, 8, 8, 8, 8, 8, 8, 8, 8]
INFO:root:XX add new best (8, 8) is not 2 6 6
INFO:root:XX add new best (8, 8) is not 2 6 6
INFO:root:XX add new best (8, 8) is not 2 6 6
INFO:root:XX add new best (8, 8) is not 2 6 6
INFO:root:XX add new best (8, 8) is not 2 6 6
INFO:root:XX add new best (8, 8) is not 2 6 6
INFO:root:XX add new best (8, 8) is not 2 6 6
INFO:root:XX add new best (8, 8) is not 2 6 6
INFO:root:XX add new best (8, 8) is not 2 6 6
INFO:root:XX add new best (8, 8) is not 2 6 6
INFO:root:XX add new best (8, 8) is not 2 6 6
INFO:root:XX add new best (8, 8) is not 2 6 6
INFO:root:XX add new best (8, 8) is not 2 6 6
INFO:root:XX add new best (8, 8) is not 2 6 6
INFO:root:XX add new best (8, 8) is not 2 6 6
INFO:root:XX add new best (8, 8) is not 2 6 6
INFO:root:Trace: [(6, [(8, 8) is not 2])]
INFO:root:Trace Quality: [(6, 1)]
INFO:root:Trace Sorted: [(6, 1)]
INFO:root:Finished
INFO:root:Full Trace [(6, [(8, 8) is not 2])]
INFO:root:Trying {'minPrecheckMUS': True}
INFO:root:Starting Step 1
INFO:root:Current state [[[[1, 2, 8], [1, 2, 4], [3], [7], [8, 9], [6], [5], [2, 4, 8, 9], [4, 8, 9]], [[7], [2, 4, 8], [4, 8], [5], [2, 3, 8, 9], [3, 8], [3, 4, 6, 8], [2, 4, 6, 8, 9], [1]], [[5], [6], [9], [1, 2, 8], [4], [1, 3, 8], [3, 8], [7], [2, 3, 8]], [[1, 3, 6, 8], [1, 4, 8], [2], [4, 8, 9], [1, 3, 7, 8], [3, 4, 8], [3, 6, 8], [5], [3, 6, 7, 8, 9]], [[3, 8], [9], [5], [6], [3, 7, 8], [2], [3, 4, 8], [1], [3, 4, 7, 8]], [[1, 3, 6, 8], [7], [4, 6, 8], [4, 8, 9], [1, 3, 8], [5], [2], [6, 8, 9], [3, 6, 8, 9]], [[9], [2, 8], [6, 8], [1, 4], [5], [1, 4], [7], [3], [2, 6, 8]], [[4], [3], [7], [2, 8], [2, 6, 8], [9], [1], [2, 6, 8], [5]], [[2, 6, 8], [5], [1], [3], [2, 6, 8], [7], [9], [2, 4, 6, 8], [2, 4, 6, 8]]]]
INFO:root:Doing checkSmall1
INFO:root:Getting tiny MUSes, distance 1, for 1 puzlits, 1 repeats
INFO:root:Chunked 1 in [1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
INFO:root:Doing checkSmall2
INFO:root:Getting tiny MUSes, distance 2, for 1 puzlits, 1 repeats
INFO:root:Chunked 1 in [1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
INFO:root:Considering 100 * 1 jobs for minsize=3
INFO:root:Chunked 100 in [9, 9, 9, 9, 8, 8, 8, 8, 8, 8, 8, 8]
INFO:root:Considering 100 * 1 jobs for minsize=4
INFO:root:Chunked 100 in [9, 9, 9, 9, 8, 8, 8, 8, 8, 8, 8, 8]
INFO:root:Considering 100 * 1 jobs for minsize=5
INFO:root:Chunked 100 in [9, 9, 9, 9, 8, 8, 8, 8, 8, 8, 8, 8]
INFO:root:XX found first (8, 8) is not 2 6
INFO:root:XX add new best (8, 8) is not 2 6 6
INFO:root:XX add new best (8, 8) is not 2 6 6
INFO:root:XX add new best (8, 8) is not 2 6 6
INFO:root:XX add new best (8, 8) is not 2 6 6
INFO:root:XX add new best (8, 8) is not 2 6 6
INFO:root:XX add new best (8, 8) is not 2 6 6
INFO:root:XX add new best (8, 8) is not 2 6 6
INFO:root:XX add new best (8, 8) is not 2 6 6
INFO:root:XX add new best (8, 8) is not 2 6 6
INFO:root:XX add new best (8, 8) is not 2 6 6
INFO:root:XX add new best (8, 8) is not 2 6 6
INFO:root:XX add new best (8, 8) is not 2 6 6
INFO:root:Considering 100 * 1 jobs for minsize=6
INFO:root:Chunked 100 in [9, 9, 9, 9, 8, 8, 8, 8, 8, 8, 8, 8]
INFO:root:XX add new best (8, 8) is not 2 6 6
INFO:root:XX add new best (8, 8) is not 2 6 6
INFO:root:XX add new best (8, 8) is not 2 6 6
INFO:root:XX add new best (8, 8) is not 2 6 6
INFO:root:XX add new best (8, 8) is not 2 6 6
INFO:root:XX add new best (8, 8) is not 2 6 6
INFO:root:XX add new best (8, 8) is not 2 6 6
INFO:root:XX add new best (8, 8) is not 2 6 6
INFO:root:XX add new best (8, 8) is not 2 6 6
INFO:root:XX add new best (8, 8) is not 2 6 6
INFO:root:XX add new best (8, 8) is not 2 6 6
INFO:root:XX add new best (8, 8) is not 2 6 6
INFO:root:XX add new best (8, 8) is not 2 6 6
INFO:root:XX add new best (8, 8) is not 2 6 6
INFO:root:XX add new best (8, 8) is not 2 6 6
INFO:root:XX add new best (8, 8) is not 2 6 6
INFO:root:XX add new best (8, 8) is not 2 6 6
INFO:root:XX add new best (8, 8) is not 2 6 6
INFO:root:XX add new best (8, 8) is not 2 6 6
INFO:root:XX add new best (8, 8) is not 2 6 6
INFO:root:Trace: [(6, [(8, 8) is not 2])]
INFO:root:Trace Quality: [(6, 1)]
INFO:root:Trace Sorted: [(6, 1)]
INFO:root:Finished
INFO:root:Full Trace [(6, [(8, 8) is not 2])]
INFO:root:Trying {'gallopingMUSes': True}
INFO:root:Starting Step 1
INFO:root:Current state [[[[1, 2, 8], [1, 2, 4], [3], [7], [8, 9], [6], [5], [2, 4, 8, 9], [4, 8, 9]], [[7], [2, 4, 8], [4, 8], [5], [2, 3, 8, 9], [3, 8], [3, 4, 6, 8], [2, 4, 6, 8, 9], [1]], [[5], [6], [9], [1, 2, 8], [4], [1, 3, 8], [3, 8], [7], [2, 3, 8]], [[1, 3, 6, 8], [1, 4, 8], [2], [4, 8, 9], [1, 3, 7, 8], [3, 4, 8], [3, 6, 8], [5], [3, 6, 7, 8, 9]], [[3, 8], [9], [5], [6], [3, 7, 8], [2], [3, 4, 8], [1], [3, 4, 7, 8]], [[1, 3, 6, 8], [7], [4, 6, 8], [4, 8, 9], [1, 3, 8], [5], [2], [6, 8, 9], [3, 6, 8, 9]], [[9], [2, 8], [6, 8], [1, 4], [5], [1, 4], [7], [3], [2, 6, 8]], [[4], [3], [7], [2, 8], [2, 6, 8], [9], [1], [2, 6, 8], [5]], [[2, 6, 8], [5], [1], [3], [2, 6, 8], [7], [9], [2, 4, 6, 8], [2, 4, 6, 8]]]]
INFO:root:Doing checkSmall1
INFO:root:Getting tiny MUSes, distance 1, for 1 puzlits, 1 repeats
INFO:root:Chunked 1 in [1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
INFO:root:Doing checkSmall2
INFO:root:Getting tiny MUSes, distance 2, for 1 puzlits, 1 repeats
INFO:root:Chunked 1 in [1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
INFO:root:Considering 100 * 1 jobs for minsize=3
INFO:root:Chunked 100 in [9, 9, 9, 9, 8, 8, 8, 8, 8, 8, 8, 8]
INFO:root:Considering 100 * 1 jobs for minsize=4
INFO:root:Chunked 100 in [9, 9, 9, 9, 8, 8, 8, 8, 8, 8, 8, 8]
INFO:root:Considering 100 * 1 jobs for minsize=5
INFO:root:Chunked 100 in [9, 9, 9, 9, 8, 8, 8, 8, 8, 8, 8, 8]
INFO:root:XX found first (8, 8) is not 2 6
INFO:root:XX add new best (8, 8) is not 2 6 6
INFO:root:XX add new best (8, 8) is not 2 6 6
INFO:root:XX add new best (8, 8) is not 2 6 6
INFO:root:XX add new best (8, 8) is not 2 6 6
INFO:root:XX add new best (8, 8) is not 2 6 6
INFO:root:XX add new best (8, 8) is not 2 6 6
INFO:root:XX add new best (8, 8) is not 2 6 6
INFO:root:XX add new best (8, 8) is not 2 6 6
INFO:root:XX add new best (8, 8) is not 2 6 6
INFO:root:XX add new best (8, 8) is not 2 6 6
INFO:root:Considering 100 * 1 jobs for minsize=6
INFO:root:Chunked 100 in [9, 9, 9, 9, 8, 8, 8, 8, 8, 8, 8, 8]
INFO:root:XX add new best (8, 8) is not 2 6 6
INFO:root:XX add new best (8, 8) is not 2 6 6
INFO:root:XX add new best (8, 8) is not 2 6 6
INFO:root:XX add new best (8, 8) is not 2 6 6
INFO:root:XX add new best (8, 8) is not 2 6 6
INFO:root:XX add new best (8, 8) is not 2 6 6
INFO:root:XX add new best (8, 8) is not 2 6 6
INFO:root:XX add new best (8, 8) is not 2 6 6
INFO:root:XX add new best (8, 8) is not 2 6 6
INFO:root:XX add new best (8, 8) is not 2 6 6
INFO:root:XX add new best (8, 8) is not 2 6 6
INFO:root:XX add new best (8, 8) is not 2 6 6
INFO:root:XX add new best (8, 8) is not 2 6 6
INFO:root:XX add new best (8, 8) is not 2 6 6
INFO:root:Trace: [(6, [(8, 8) is not 2])]
INFO:root:Trace Quality: [(6, 1)]
INFO:root:Trace Sorted: [(6, 1)]
INFO:root:Finished
INFO:root:Full Trace [(6, [(8, 8) is not 2])]
INFO:root:Trying {'minPrecheckStepsMUS': True}
INFO:root:Starting Step 1
INFO:root:Current state [[[[1, 2, 8], [1, 2, 4], [3], [7], [8, 9], [6], [5], [2, 4, 8, 9], [4, 8, 9]], [[7], [2, 4, 8], [4, 8], [5], [2, 3, 8, 9], [3, 8], [3, 4, 6, 8], [2, 4, 6, 8, 9], [1]], [[5], [6], [9], [1, 2, 8], [4], [1, 3, 8], [3, 8], [7], [2, 3, 8]], [[1, 3, 6, 8], [1, 4, 8], [2], [4, 8, 9], [1, 3, 7, 8], [3, 4, 8], [3, 6, 8], [5], [3, 6, 7, 8, 9]], [[3, 8], [9], [5], [6], [3, 7, 8], [2], [3, 4, 8], [1], [3, 4, 7, 8]], [[1, 3, 6, 8], [7], [4, 6, 8], [4, 8, 9], [1, 3, 8], [5], [2], [6, 8, 9], [3, 6, 8, 9]], [[9], [2, 8], [6, 8], [1, 4], [5], [1, 4], [7], [3], [2, 6, 8]], [[4], [3], [7], [2, 8], [2, 6, 8], [9], [1], [2, 6, 8], [5]], [[2, 6, 8], [5], [1], [3], [2, 6, 8], [7], [9], [2, 4, 6, 8], [2, 4, 6, 8]]]]
INFO:root:Doing checkSmall1
INFO:root:Getting tiny MUSes, distance 1, for 1 puzlits, 1 repeats
INFO:root:Chunked 1 in [1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
INFO:root:Doing checkSmall2
INFO:root:Getting tiny MUSes, distance 2, for 1 puzlits, 1 repeats
INFO:root:Chunked 1 in [1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
INFO:root:Considering 100 * 1 jobs for minsize=3
INFO:root:Chunked 100 in [9, 9, 9, 9, 8, 8, 8, 8, 8, 8, 8, 8]
INFO:root:Considering 100 * 1 jobs for minsize=4
INFO:root:Chunked 100 in [9, 9, 9, 9, 8, 8, 8, 8, 8, 8, 8, 8]
INFO:root:Considering 100 * 1 jobs for minsize=5
INFO:root:Chunked 100 in [9, 9, 9, 9, 8, 8, 8, 8, 8, 8, 8, 8]
INFO:root:XX found first (8, 8) is not 2 6
INFO:root:XX add new best (8, 8) is not 2 6 6
INFO:root:XX add new best (8, 8) is not 2 6 6
INFO:root:XX add new best (8, 8) is not 2 6 6
INFO:root:XX add new best (8, 8) is not 2 6 6
INFO:root:XX add new best (8, 8) is not 2 6 6
INFO:root:XX add new best (8, 8) is not 2 6 6
INFO:root:XX add new best (8, 8) is not 2 6 6
INFO:root:XX add new best (8, 8) is not 2 6 6
INFO:root:XX add new best (8, 8) is not 2 6 6
INFO:root:XX add new best (8, 8) is not 2 6 6
INFO:root:XX add new best (8, 8) is not 2 6 6
INFO:root:XX add new best (8, 8) is not 2 6 6
INFO:root:XX add new best (8, 8) is not 2 6 6
INFO:root:Considering 100 * 1 jobs for minsize=6
INFO:root:Chunked 100 in [9, 9, 9, 9, 8, 8, 8, 8, 8, 8, 8, 8]
INFO:root:XX add new best (8, 8) is not 2 6 6
INFO:root:XX add new best (8, 8) is not 2 6 6
INFO:root:XX add new best (8, 8) is not 2 6 6
INFO:root:XX add new best (8, 8) is not 2 6 6
INFO:root:XX add new best (8, 8) is not 2 6 6
INFO:root:XX add new best (8, 8) is not 2 6 6
INFO:root:XX add new best (8, 8) is not 2 6 6
INFO:root:XX add new best (8, 8) is not 2 6 6
INFO:root:XX add new best (8, 8) is not 2 6 6
INFO:root:XX add new best (8, 8) is not 2 6 6
INFO:root:XX add new best (8, 8) is not 2 6 6
INFO:root:XX add new best (8, 8) is not 2 6 6
INFO:root:XX add new best (8, 8) is not 2 6 6
INFO:root:XX add new best (8, 8) is not 2 6 6
INFO:root:XX add new best (8, 8) is not 2 6 6
INFO:root:XX add new best (8, 8) is not 2 6 6
INFO:root:XX add new best (8, 8) is not 2 6 6
INFO:root:XX add new best (8, 8) is not 2 6 6
INFO:root:XX add new best (8, 8) is not 2 6 6
INFO:root:XX add new best (8, 8) is not 2 6 6
INFO:root:Trace: [(6, [(8, 8) is not 2])]
INFO:root:Trace Quality: [(6, 1)]
INFO:root:Trace Sorted: [(6, 1)]
INFO:root:Finished
INFO:root:Full Trace [(6, [(8, 8) is not 2])]
INFO:root:Trying {'gallopingMUSes': True, 'minPrecheckMUS': True}
INFO:root:Starting Step 1
INFO:root:Current state [[[[1, 2, 8], [1, 2, 4], [3], [7], [8, 9], [6], [5], [2, 4, 8, 9], [4, 8, 9]], [[7], [2, 4, 8], [4, 8], [5], [2, 3, 8, 9], [3, 8], [3, 4, 6, 8], [2, 4, 6, 8, 9], [1]], [[5], [6], [9], [1, 2, 8], [4], [1, 3, 8], [3, 8], [7], [2, 3, 8]], [[1, 3, 6, 8], [1, 4, 8], [2], [4, 8, 9], [1, 3, 7, 8], [3, 4, 8], [3, 6, 8], [5], [3, 6, 7, 8, 9]], [[3, 8], [9], [5], [6], [3, 7, 8], [2], [3, 4, 8], [1], [3, 4, 7, 8]], [[1, 3, 6, 8], [7], [4, 6, 8], [4, 8, 9], [1, 3, 8], [5], [2], [6, 8, 9], [3, 6, 8, 9]], [[9], [2, 8], [6, 8], [1, 4], [5], [1, 4], [7], [3], [2, 6, 8]], [[4], [3], [7], [2, 8], [2, 6, 8], [9], [1], [2, 6, 8], [5]], [[2, 6, 8], [5], [1], [3], [2, 6, 8], [7], [9], [2, 4, 6, 8], [2, 4, 6, 8]]]]
INFO:root:Doing checkSmall1
INFO:root:Getting tiny MUSes, distance 1, for 1 puzlits, 1 repeats
INFO:root:Chunked 1 in [1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
INFO:root:Doing checkSmall2
INFO:root:Getting tiny MUSes, distance 2, for 1 puzlits, 1 repeats
INFO:root:Chunked 1 in [1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
INFO:root:Considering 100 * 1 jobs for minsize=3
INFO:root:Chunked 100 in [9, 9, 9, 9, 8, 8, 8, 8, 8, 8, 8, 8]
INFO:root:Considering 100 * 1 jobs for minsize=4
INFO:root:Chunked 100 in [9, 9, 9, 9, 8, 8, 8, 8, 8, 8, 8, 8]
INFO:root:Considering 100 * 1 jobs for minsize=5
INFO:root:Chunked 100 in [9, 9, 9, 9, 8, 8, 8, 8, 8, 8, 8, 8]
INFO:root:XX found first (8, 8) is not 2 6
INFO:root:XX add new best (8, 8) is not 2 6 6
INFO:root:XX add new best (8, 8) is not 2 6 6
INFO:root:XX add new best (8, 8) is not 2 6 6
INFO:root:XX add new best (8, 8) is not 2 6 6
INFO:root:XX add new best (8, 8) is not 2 6 6
INFO:root:XX add new best (8, 8) is not 2 6 6
INFO:root:XX add new best (8, 8) is not 2 6 6
INFO:root:XX add new best (8, 8) is not 2 6 6
INFO:root:XX add new best (8, 8) is not 2 6 6
INFO:root:XX add new best (8, 8) is not 2 6 6
INFO:root:XX add new best (8, 8) is not 2 6 6
INFO:root:XX add new best (8, 8) is not 2 6 6
INFO:root:XX add new best (8, 8) is not 2 6 6
INFO:root:Considering 100 * 1 jobs for minsize=6
INFO:root:Chunked 100 in [9, 9, 9, 9, 8, 8, 8, 8, 8, 8, 8, 8]
INFO:root:XX add new best (8, 8) is not 2 6 6
INFO:root:XX add new best (8, 8) is not 2 6 6
INFO:root:XX add new best (8, 8) is not 2 6 6
INFO:root:XX add new best (8, 8) is not 2 6 6
INFO:root:XX add new best (8, 8) is not 2 6 6
INFO:root:XX add new best (8, 8) is not 2 6 6
INFO:root:XX add new best (8, 8) is not 2 6 6
INFO:root:XX add new best (8, 8) is not 2 6 6
INFO:root:XX add new best (8, 8) is not 2 6 6
INFO:root:XX add new best (8, 8) is not 2 6 6
INFO:root:XX add new best (8, 8) is not 2 6 6
INFO:root:XX add new best (8, 8) is not 2 6 6
INFO:root:XX add new best (8, 8) is not 2 6 6
INFO:root:XX add new best (8, 8) is not 2 6 6
INFO:root:XX add new best (8, 8) is not 2 6 6
INFO:root:XX add new best (8, 8) is not 2 6 6
INFO:root:XX add new best (8, 8) is not 2 6 6
INFO:root:XX add new best (8, 8) is not 2 6 6
INFO:root:XX add new best (8, 8) is not 2 6 6
INFO:root:XX add new best (8, 8) is not 2 6 6
INFO:root:Trace: [(6, [(8, 8) is not 2])]
INFO:root:Trace Quality: [(6, 1)]
INFO:root:Trace Sorted: [(6, 1)]
INFO:root:Finished
INFO:root:Full Trace [(6, [(8, 8) is not 2])]
INFO:root:Trying {}
INFO:root:Starting Step 1
INFO:root:Current state [[[[1], [2, 7, 8], [5], [3, 7], [2, 3, 8], [9], [4], [6], [2, 7, 8]], [[3], [4], [9], [6], [2, 8], [2, 7, 8], [2, 5, 7, 8], [1], [2, 5, 7, 8]], [[2, 6, 8], [2, 7, 8], [2, 6, 8], [1], [4], [5], [3], [2, 8, 9], [2, 7, 8, 9]], [[2, 4, 8], [9], [2, 4, 8], [5, 8], [1], [4, 6, 8], [2, 5, 6, 8], [7], [3]], [[5], [6], [2, 3, 8], [3, 7], [9], [7, 8], [1], [4], [2, 8]], [[7], [1], [3, 4, 8], [2], [3, 5, 6, 8], [4, 6], [5, 6, 8], [5, 8, 9], [5, 6, 8, 9]], [[2, 4, 6, 8], [5], [2, 4, 6, 8], [9], [7], [1], [2, 6, 8], [3], [2, 4, 6, 8]], [[2, 4, 6, 8], [2, 8], [7], [4, 5, 8], [2, 5, 6, 8], [3], [9], [2, 5, 8], [1]], [[9], [3], [1], [4, 5, 8], [2, 5, 6, 8], [2, 6, 8], [2, 5, 6, 7, 8], [2, 5, 8], [2, 4, 5, 6, 7, 8]]]]
INFO:root:Doing checkSmall1
INFO:root:Getting tiny MUSes, distance 1, for 1 puzlits, 1 repeats
INFO:root:Chunked 1 in [1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
INFO:root:Doing checkSmall2
INFO:root:Getting tiny MUSes, distance 2, for 1 puzlits, 1 repeats
INFO:root:Chunked 1 in [1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
INFO:root:Considering 100 * 1 jobs for minsize=3
INFO:root:Chunked 100 in [9, 9, 9, 9, 8, 8, 8, 8, 8, 8, 8, 8]
INFO:root:Considering 100 * 1 jobs for minsize=4
INFO:root:Chunked 100 in [9, 9, 9, 9, 8, 8, 8, 8, 8, 8, 8, 8]
INFO:root:Considering 100 * 1 jobs for minsize=5
INFO:root:Chunked 100 in [9, 9, 9, 9, 8, 8, 8, 8, 8, 8, 8, 8]
INFO:root:Considering 100 * 1 jobs for minsize=6
INFO:root:Chunked 100 in [9, 9, 9, 9, 8, 8, 8, 8, 8, 8, 8, 8]
INFO:root:Considering 100 * 1 jobs for minsize=7
INFO:root:Chunked 100 in [9, 9, 9, 9, 8, 8, 8, 8, 8, 8, 8, 8]
INFO:root:Considering 100 * 1 jobs for minsize=8
INFO:root:Chunked 100 in [9, 9, 9, 9, 8, 8, 8, 8, 8, 8, 8, 8]
INFO:root:Considering 100 * 1 jobs for minsize=9
INFO:root:Chunked 100 in [9, 9, 9, 9, 8, 8, 8, 8, 8, 8, 8, 8]
INFO:root:Considering 100 * 1 jobs for minsize=10
INFO:root:Chunked 100 in [9, 9, 9, 9, 8, 8, 8, 8, 8, 8, 8, 8]
INFO:root:XX found first (8, 2) is not 2 11
INFO:root:XX add new best (8, 2) is not 2 11 11
INFO:root:XX add new best (8, 2) is not 2 11 11
INFO:root:XX add new best (8, 2) is not 2 11 11
INFO:root:XX add new best (8, 2) is not 2 11 11
INFO:root:XX add new best (8, 2) is not 2 11 11
INFO:root:XX add new best (8, 2) is not 2 11 11
INFO:root:XX add new best (8, 2) is not 2 11 11
INFO:root:XX add new best (8, 2) is not 2 11 11
INFO:root:XX add new best (8, 2) is not 2 11 11
INFO:root:XX add new best (8, 2) is not 2 11 11
INFO:root:XX add new best (8, 2) is not 2 11 11
INFO:root:XX add new best (8, 2) is not 2 11 11
INFO:root:XX add new best (8, 2) is not 2 11 11
INFO:root:XX add new best (8, 2) is not 2 11 11
INFO:root:XX add new best (8, 2) is not 2 11 11
INFO:root:XX add new best (8, 2) is not 2 11 11
INFO:root:XX add new best (8, 2) is not 2 11 11
INFO:root:XX add new best (8, 2) is not 2 11 11
INFO:root:XX add new best (8, 2) is not 2 11 11
INFO:root:XX add new best (8, 2) is not 2 11 11
INFO:root:XX add new best (8, 2) is not 2 11 11
INFO:root:XX add new best (8, 2) is not 2 11 11
INFO:root:XX add new best (8, 2) is not 2 11 11
INFO:root:XX add new best (8, 2) is not 2 11 11
INFO:root:XX add new best (8, 2) is not 2 11 11
INFO:root:XX add new best (8, 2) is not 2 11 11
INFO:root:XX add new best (8, 2) is not 2 11 11
INFO:root:XX add new best (8, 2) is not 2 11 11
INFO:root:XX add new best (8, 2) is not 2 11 11
INFO:root:XX add new best (8, 2) is not 2 11 11
INFO:root:XX add new best (8, 2) is not 2 11 11
INFO:root:XX add new best (8, 2) is not 2 11 11
INFO:root:XX add new best (8, 2) is not 2 11 11
INFO:root:XX add new best (8, 2) is not 2 11 11
INFO:root:XX add new best (8, 2) is not 2 11 11
INFO:root:XX add new best (8, 2) is not 2 11 11
INFO:root:XX add new best (8, 2) is not 2 11 11
INFO:root:XX add new best (8, 2) is not 2 11 11
INFO:root:XX add new best (8, 2) is not 2 11 11
INFO:root:XX add new best (8, 2) is not 2 11 11
INFO:root:XX add new best (8, 2) is not 2 11 11
INFO:root:Considering 100 * 1 jobs for minsize=11
INFO:root:Chunked 100 in [9, 9, 9, 9, 8, 8, 8, 8, 8, 8, 8, 8]
INFO:root:XX add new best (8, 2) is not 2 11 11
INFO:root:XX add new best (8, 2) is not 2 11 11
INFO:root:XX add new best (8, 2) is not 2 11 11
INFO:root:XX add new best (8, 2) is not 2 11 11
INFO:root:XX add new best (8, 2) is not 2 11 11
INFO:root:XX add new best (8, 2) is not 2 11 11
INFO:root:XX add new best (8, 2) is not 2 11 11
INFO:root:XX add new best (8, 2) is not 2 11 11
INFO:root:XX add new best (8, 2) is not 2 11 11
INFO:root:XX add new best (8, 2) is not 2 11 11
INFO:root:XX add new best (8, 2) is not 2 11 11
INFO:root:XX add new best (8, 2) is not 2 11 11
INFO:root:XX add new best (8, 2) is not 2 11 11
INFO:root:XX add new best (8, 2) is not 2 11 11
INFO:root:XX add new best (8, 2) is not 2 11 11
INFO:root:XX add new best (8, 2) is not 2 11 11
INFO:root:XX add new best (8, 2) is not 2 11 11
INFO:root:XX add new best (8, 2) is not 2 11 11
INFO:root:XX add new best (8, 2) is not 2 11 11
INFO:root:XX add new best (8, 2) is not 2 11 11
INFO:root:XX add new best (8, 2) is not 2 11 11
INFO:root:XX add new best (8, 2) is not 2 11 11
INFO:root:XX add new best (8, 2) is not 2 11 11
INFO:root:XX add new best (8, 2) is not 2 11 11
INFO:root:XX add new best (8, 2) is not 2 11 11
INFO:root:XX add new best (8, 2) is not 2 11 11
INFO:root:XX add new best (8, 2) is not 2 11 11
INFO:root:XX add new best (8, 2) is not 2 11 11
INFO:root:XX add new best (8, 2) is not 2 11 11
INFO:root:XX add new best (8, 2) is not 2 11 11
INFO:root:XX add new best (8, 2) is not 2 11 11
INFO:root:XX add new best (8, 2) is not 2 11 11
INFO:root:XX add new best (8, 2) is not 2 11 11
INFO:root:XX add new best (8, 2) is not 2 11 11
INFO:root:XX add new best (8, 2) is not 2 11 11
INFO:root:XX add new best (8, 2) is not 2 11 11
INFO:root:XX add new best (8, 2) is not 2 11 11
INFO:root:XX add new best (8, 2) is not 2 11 11
INFO:root:XX add new best (8, 2) is not 2 11 11
INFO:root:XX add new best (8, 2) is not 2 11 11
INFO:root:XX add new best (8, 2) is not 2 11 11
INFO:root:XX add new best (8, 2) is not 2 11 11
INFO:root:XX add new best (8, 2) is not 2 11 11
INFO:root:Trace: [(11, [(8, 2) is not 2])]
INFO:root:Trace Quality: [(11, 1)]
INFO:root:Trace Sorted: [(11, 1)]
INFO:root:Finished
INFO:root:Full Trace [(11, [(8, 2) is not 2])]
INFO:root:Trying {'prechopMUSes': True}
INFO:root:Starting Step 1
INFO:root:Current state [[[[1], [2, 7, 8], [5], [3, 7], [2, 3, 8], [9], [4], [6], [2, 7, 8]], [[3], [4], [9], [6], [2, 8], [2, 7, 8], [2, 5, 7, 8], [1], [2, 5, 7, 8]], [[2, 6, 8], [2, 7, 8], [2, 6, 8], [1], [4], [5], [3], [2, 8, 9], [2, 7, 8, 9]], [[2, 4, 8], [9], [2, 4, 8], [5, 8], [1], [4, 6, 8], [2, 5, 6, 8], [7], [3]], [[5], [6], [2, 3, 8], [3, 7], [9], [7, 8], [1], [4], [2, 8]], [[7], [1], [3, 4, 8], [2], [3, 5, 6, 8], [4, 6], [5, 6, 8], [5, 8, 9], [5, 6, 8, 9]], [[2, 4, 6, 8], [5], [2, 4, 6, 8], [9], [7], [1], [2, 6, 8], [3], [2, 4, 6, 8]], [[2, 4, 6, 8], [2, 8], [7], [4, 5, 8], [2, 5, 6, 8], [3], [9], [2, 5, 8], [1]], [[9], [3], [1], [4, 5, 8], [2, 5, 6, 8], [2, 6, 8], [2, 5, 6, 7, 8], [2, 5, 8], [2, 4, 5, 6, 7, 8]]]]
INFO:root:Doing checkSmall1
INFO:root:Getting tiny MUSes, distance 1, for 1 puzlits, 1 repeats
INFO:root:Chunked 1 in [1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
INFO:root:Doing checkSmall2
INFO:root:Getting tiny MUSes, distance 2, for 1 puzlits, 1 repeats
INFO:root:Chunked 1 in [1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
INFO:root:Considering 100 * 1 jobs for minsize=3
INFO:root:Chunked 100 in [9, 9, 9, 9, 8, 8, 8, 8, 8, 8, 8, 8]
INFO:root:Considering 100 * 1 jobs for minsize=4
INFO:root:Chunked 100 in [9, 9, 9, 9, 8, 8, 8, 8, 8, 8, 8, 8]
INFO:root:Considering 100 * 1 jobs for minsize=5
INFO:root:Chunked 100 in [9, 9, 9, 9, 8, 8, 8, 8, 8, 8, 8, 8]
INFO:root:Considering 100 * 1 jobs for minsize=6
INFO:root:Chunked 100 in [9, 9, 9, 9, 8, 8, 8, 8, 8, 8, 8, 8]
INFO:root:Considering 100 * 1 jobs for minsize=7
INFO:root:Chunked 100 in [9, 9, 9, 9, 8, 8, 8, 8, 8, 8, 8, 8]
INFO:root:Considering 100 * 1 jobs for minsize=8
INFO:root:Chunked 100 in [9, 9, 9, 9, 8, 8, 8, 8, 8, 8, 8, 8]
INFO:root:Considering 100 * 1 jobs for minsize=9
INFO:root:Chunked 100 in [9, 9, 9, 9, 8, 8, 8, 8, 8, 8, 8, 8]
INFO:root:Considering 100 * 1 jobs for minsize=10
INFO:root:Chunked 100 in [9, 9, 9, 9, 8, 8, 8, 8, 8, 8, 8, 8]
INFO:root:XX found first (8, 2) is not 2 11
INFO:root:XX add new best (8, 2) is not 2 11 11
INFO:root:XX add new best (8, 2) is not 2 11 11
INFO:root:XX add new best (8, 2) is not 2 11 11
INFO:root:XX add new best (8, 2) is not 2 11 11
INFO:root:Considering 100 * 1 jobs for minsize=11
INFO:root:Chunked 100 in [9, 9, 9, 9, 8, 8, 8, 8, 8, 8, 8, 8]
INFO:root:XX add new best (8, 2) is not 2 11 11
INFO:root:XX add new best (8, 2) is not 2 11 11
INFO:root:XX add new best (8, 2) is not 2 11 11
INFO:root:XX add new best (8, 2) is not 2 11 11
INFO:root:XX add new best (8, 2) is not 2 11 11
INFO:root:XX add new best (8, 2) is not 2 11 11
INFO:root:XX add new best (8, 2) is not 2 11 11
INFO:root:Trace: [(11, [(8, 2) is not 2])]
INFO:root:Trace Quality: [(11, 1)]
INFO:root:Trace Sorted: [(11, 1)]
INFO:root:Finished
INFO:root:Full Trace [(11, [(8, 2) is not 2])]
INFO:root:Trying {'quarterChopMUS': True}
INFO:root:Starting Step 1
INFO:root:Current state [[[[1], [2, 7, 8], [5], [3, 7], [2, 3, 8], [9], [4], [6], [2, 7, 8]], [[3], [4], [9], [6], [2, 8], [2, 7, 8], [2, 5, 7, 8], [1], [2, 5, 7, 8]], [[2, 6, 8], [2, 7, 8], [2, 6, 8], [1], [4], [5], [3], [2, 8, 9], [2, 7, 8, 9]], [[2, 4, 8], [9], [2, 4, 8], [5, 8], [1], [4, 6, 8], [2, 5, 6, 8], [7], [3]], [[5], [6], [2, 3, 8], [3, 7], [9], [7, 8], [1], [4], [2, 8]], [[7], [1], [3, 4, 8], [2], [3, 5, 6, 8], [4, 6], [5, 6, 8], [5, 8, 9], [5, 6, 8, 9]], [[2, 4, 6, 8], [5], [2, 4, 6, 8], [9], [7], [1], [2, 6, 8], [3], [2, 4, 6, 8]], [[2, 4, 6, 8], [2, 8], [7], [4, 5, 8], [2, 5, 6, 8], [3], [9], [2, 5, 8], [1]], [[9], [3], [1], [4, 5, 8], [2, 5, 6, 8], [2, 6, 8], [2, 5, 6, 7, 8], [2, 5, 8], [2, 4, 5, 6, 7, 8]]]]
INFO:root:Doing checkSmall1
INFO:root:Getting tiny MUSes, distance 1, for 1 puzlits, 1 repeats
INFO:root:Chunked 1 in [1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
INFO:root:Doing checkSmall2
INFO:root:Getting tiny MUSes, distance 2, for 1 puzlits, 1 repeats
INFO:root:Chunked 1 in [1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
INFO:root:Considering 100 * 1 jobs for minsize=3
INFO:root:Chunked 100 in [9, 9, 9, 9, 8, 8, 8, 8, 8, 8, 8, 8]
INFO:root:Considering 100 * 1 jobs for minsize=4
INFO:root:Chunked 100 in [9, 9, 9, 9, 8, 8, 8, 8, 8, 8, 8, 8]
INFO:root:Considering 100 * 1 jobs for minsize=5
INFO:root:Chunked 100 in [9, 9, 9, 9, 8, 8, 8, 8, 8, 8, 8, 8]
INFO:root:Considering 100 * 1 jobs for minsize=6
INFO:root:Chunked 100 in [9, 9, 9, 9, 8, 8, 8, 8, 8, 8, 8, 8]
INFO:root:Considering 100 * 1 jobs for minsize=7
INFO:root:Chunked 100 in [9, 9, 9, 9, 8, 8, 8, 8, 8, 8, 8, 8]
INFO:root:Considering 100 * 1 jobs for minsize=8
INFO:root:Chunked 100 in [9, 9, 9, 9, 8, 8, 8, 8, 8, 8, 8, 8]
INFO:root:Considering 100 * 1 jobs for minsize=9
INFO:root:Chunked 100 in [9, 9, 9, 9, 8, 8, 8, 8, 8, 8, 8, 8]
INFO:root:Considering 100 * 1 jobs for minsize=10
INFO:root:Chunked 100 in [9, 9, 9, 9, 8, 8, 8, 8, 8, 8, 8, 8]
INFO:root:XX found first (8, 2) is not 2 11
INFO:root:XX add new best (8, 2) is not 2 11 11
INFO:root:XX add new best (8, 2) is not 2 11 11
INFO:root:XX add new best (8, 2) is not 2 11 11
INFO:root:XX add new best (8, 2) is not 2 11 11
INFO:root:XX add new best (8, 2) is not 2 11 11
INFO:root:XX add new best (8, 2) is not 2 11 11
INFO:root:XX add new best (8, 2) is not 2 11 11
INFO:root:XX add new best (8, 2) is not 2 11 11
INFO:root:XX add new best (8, 2) is not 2 11 11
INFO:root:XX add new best (8, 2) is not 2 11 11
INFO:root:XX add new best (8, 2) is not 2 11 11
INFO:root:XX add new best (8, 2) is not 2 11 11
INFO:root:XX add new best (8, 2) is not 2 11 11
INFO:root:XX add new best (8, 2) is not 2 11 11
INFO:root:XX add new best (8, 2) is not 2 11 11
INFO:root:XX add new best (8, 2) is not 2 11 11
INFO:root:XX add new best (8, 2) is not 2 11 11
INFO:root:XX add new best (8, 2) is not 2 11 11
INFO:root:XX add new best (8, 2) is not 2 11 11
INFO:root:XX add new best (8, 2) is not 2 11 11
INFO:root:XX add new best (8, 2) is not 2 11 11
INFO:root:XX add new best (8, 2) is not 2 11 11
INFO:root:XX add new best (8, 2) is not 2 11 11
INFO:root:XX add new best (8, 2) is not 2 11 11
INFO:root:XX add new best (8, 2) is not 2 11 11
INFO:root:XX add new best (8, 2) is not 2 11 11
INFO:root:XX add new best (8, 2) is not 2 11 11
INFO:root:XX add new best (8, 2) is not 2 11 11
INFO:root:XX add new best (8, 2) is not 2 11 11
INFO:root:XX add new best (8, 2) is not 2 11 11
INFO:root:XX add new best (8, 2) is not 2 11 11
INFO:root:XX add new best (8, 2) is not 2 11 11
INFO:root:Considering 100 * 1 jobs for minsize=11
INFO:root:Chunked 100 in [9, 9, 9, 9, 8, 8, 8, 8, 8, 8, 8, 8]
INFO:root:XX add new best (8, 2) is not 2 11 11
INFO:root:XX add new best (8, 2) is not 2 11 11
INFO:root:XX add new best (8, 2) is not 2 11 11
INFO:root:XX add new best (8, 2) is not 2 11 11
INFO:root:XX add new best (8, 2) is not 2 11 11
INFO:root:XX add new best (8, 2) is not 2 11 11
INFO:root:XX add new best (8, 2) is not 2 11 11
INFO:root:XX add new best (8, 2) is not 2 11 11
INFO:root:XX add new best (8, 2) is not 2 11 11
INFO:root:XX add new best (8, 2) is not 2 11 11
INFO:root:XX add new best (8, 2) is not 2 11 11
INFO:root:XX add new best (8, 2) is not 2 11 11
INFO:root:XX add new best (8, 2) is not 2 11 11
INFO:root:XX add new best (8, 2) is not 2 11 11
INFO:root:XX add new best (8, 2) is not 2 11 11
INFO:root:XX add new best (8, 2) is not 2 11 11
INFO:root:XX add new best (8, 2) is not 2 11 11
INFO:root:XX add new best (8, 2) is not 2 11 11
INFO:root:XX add new best (8, 2) is not 2 11 11
INFO:root:XX add new best (8, 2) is not 2 11 11
INFO:root:XX add new best (8, 2) is not 2 11 11
INFO:root:XX add new best (8, 2) is not 2 11 11
INFO:root:XX add new best (8, 2) is not 2 11 11
INFO:root:XX add new best (8, 2) is not 2 11 11
INFO:root:XX add new best (8, 2) is not 2 11 11
INFO:root:XX add new best (8, 2) is not 2 11 11
INFO:root:XX add new best (8, 2) is not 2 11 11
INFO:root:XX add new best (8, 2) is not 2 11 11
INFO:root:XX add new best (8, 2) is not 2 11 11
INFO:root:XX add new best (8, 2) is not 2 11 11
INFO:root:XX add new best (8, 2) is not 2 11 11
INFO:root:XX add new best (8, 2) is not 2 11 11
INFO:root:XX add new best (8, 2) is not 2 11 11
INFO:root:XX add new best (8, 2) is not 2 11 11
INFO:root:XX add new best (8, 2) is not 2 11 11
INFO:root:XX add new best (8, 2) is not 2 11 11
INFO:root:XX add new best (8, 2) is not 2 11 11
INFO:root:XX add new best (8, 2) is not 2 11 11
INFO:root:XX add new best (8, 2) is not 2 11 11
INFO:root:XX add new best (8, 2) is not 2 11 11
INFO:root:XX add new best (8, 2) is not 2 11 11
INFO:root:XX add new best (8, 2) is not 2 11 11
INFO:root:XX add new best (8, 2) is not 2 11 11
INFO:root:Trace: [(11, [(8, 2) is not 2])]
INFO:root:Trace Quality: [(11, 1)]
INFO:root:Trace Sorted: [(11, 1)]
INFO:root:Finished
INFO:root:Full Trace [(11, [(8, 2) is not 2])]
INFO:root:Trying {'minPrecheckMUS': True}
INFO:root:Starting Step 1
INFO:root:Current state [[[[1], [2, 7, 8], [5], [3, 7], [2, 3, 8], [9], [4], [6], [2, 7, 8]], [[3], [4], [9], [6], [2, 8], [2, 7, 8], [2, 5, 7, 8], [1], [2, 5, 7, 8]], [[2, 6, 8], [2, 7, 8], [2, 6, 8], [1], [4], [5], [3], [2, 8, 9], [2, 7, 8, 9]], [[2, 4, 8], [9], [2, 4, 8], [5, 8], [1], [4, 6, 8], [2, 5, 6, 8], [7], [3]], [[5], [6], [2, 3, 8], [3, 7], [9], [7, 8], [1], [4], [2, 8]], [[7], [1], [3, 4, 8], [2], [3, 5, 6, 8], [4, 6], [5, 6, 8], [5, 8, 9], [5, 6, 8, 9]], [[2, 4, 6, 8], [5], [2, 4, 6, 8], [9], [7], [1], [2, 6, 8], [3], [2, 4, 6, 8]], [[2, 4, 6, 8], [2, 8], [7], [4, 5, 8], [2, 5, 6, 8], [3], [9], [2, 5, 8], [1]], [[9], [3], [1], [4, 5, 8], [2, 5, 6, 8], [2, 6, 8], [2, 5, 6, 7, 8], [2, 5, 8], [2, 4, 5, 6, 7, 8]]]]
INFO:root:Doing checkSmall1
INFO:root:Getting tiny MUSes, distance 1, for 1 puzlits, 1 repeats
INFO:root:Chunked 1 in [1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
INFO:root:Doing checkSmall2
INFO:root:Getting tiny MUSes, distance 2, for 1 puzlits, 1 repeats
INFO:root:Chunked 1 in [1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
INFO:root:Considering 100 * 1 jobs for minsize=3
INFO:root:Chunked 100 in [9, 9, 9, 9, 8, 8, 8, 8, 8, 8, 8, 8]
INFO:root:Considering 100 * 1 jobs for minsize=4
INFO:root:Chunked 100 in [9, 9, 9, 9, 8, 8, 8, 8, 8, 8, 8, 8]
INFO:root:Considering 100 * 1 jobs for minsize=5
INFO:root:Chunked 100 in [9, 9, 9, 9, 8, 8, 8, 8, 8, 8, 8, 8]
INFO:root:Considering 100 * 1 jobs for minsize=6
INFO:root:Chunked 100 in [9, 9, 9, 9, 8, 8, 8, 8, 8, 8, 8, 8]
INFO:root:Considering 100 * 1 jobs for minsize=7
INFO:root:Chunked 100 in [9, 9, 9, 9, 8, 8, 8, 8, 8, 8, 8, 8]
INFO:root:Considering 100 * 1 jobs for minsize=8
INFO:root:Chunked 100 in [9, 9, 9, 9, 8, 8, 8, 8, 8, 8, 8, 8]
INFO:root:Considering 100 * 1 jobs for minsize=9
INFO:root:Chunked 100 in [9, 9, 9, 9, 8, 8, 8, 8, 8, 8, 8, 8]
INFO:root:Considering 100 * 1 jobs for minsize=10
INFO:root:Chunked 100 in [9, 9, 9, 9, 8, 8, 8, 8, 8, 8, 8, 8]
INFO:root:XX found first (8, 2) is not 2 11
INFO:root:XX add new best (8, 2) is not 2 11 11
INFO:root:XX add new best (8, 2) is not 2 11 11
INFO:root:XX add new best (8, 2) is not 2 11 11
INFO:root:Considering 100 * 1 jobs for minsize=11
INFO:root:Chunked 100 in [9, 9, 9, 9, 8, 8, 8, 8, 8, 8, 8, 8]
INFO:root:XX add new best (8, 2) is not 2 11 11
INFO:root:XX add new best (8, 2) is not 2 11 11
INFO:root:XX add new best (8, 2) is not 2 11 11
INFO:root:XX add new best (8, 2) is not 2 11 11
INFO:root:XX add new best (8, 2) is not 2 11 11
INFO:root:Trace: [(11, [(8, 2) is not 2])]
INFO:root:Trace Quality: [(11, 1)]
INFO:root:Trace Sorted: [(11, 1)]
INFO:root:Finished
INFO:root:Full Trace [(11, [(8, 2) is not 2])]
INFO:root:Trying {'gallopingMUSes': True}
INFO:root:Starting Step 1
INFO:root:Current state [[[[1], [2, 7, 8], [5], [3, 7], [2, 3, 8], [9], [4], [6], [2, 7, 8]], [[3], [4], [9], [6], [2, 8], [2, 7, 8], [2, 5, 7, 8], [1], [2, 5, 7, 8]], [[2, 6, 8], [2, 7, 8], [2, 6, 8], [1], [4], [5], [3], [2, 8, 9], [2, 7, 8, 9]], [[2, 4, 8], [9], [2, 4, 8], [5, 8], [1], [4, 6, 8], [2, 5, 6, 8], [7], [3]], [[5], [6], [2, 3, 8], [3, 7], [9], [7, 8], [1], [4], [2, 8]], [[7], [1], [3, 4, 8], [2], [3, 5, 6, 8], [4, 6], [5, 6, 8], [5, 8, 9], [5, 6, 8, 9]], [[2, 4, 6, 8], [5], [2, 4, 6, 8], [9], [7], [1], [2, 6, 8], [3], [2, 4, 6, 8]], [[2, 4, 6, 8], [2, 8], [7], [4, 5, 8], [2, 5, 6, 8], [3], [9], [2, 5, 8], [1]], [[9], [3], [1], [4, 5, 8], [2, 5, 6, 8], [2, 6, 8], [2, 5, 6, 7, 8], [2, 5, 8], [2, 4, 5, 6, 7, 8]]]]
INFO:root:Doing checkSmall1
INFO:root:Getting tiny MUSes, distance 1, for 1 puzlits, 1 repeats
INFO:root:Chunked 1 in [1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
INFO:root:Doing checkSmall2
INFO:root:Getting tiny MUSes, distance 2, for 1 puzlits, 1 repeats
INFO:root:Chunked 1 in [1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
INFO:root:Considering 100 * 1 jobs for minsize=3
INFO:root:Chunked 100 in [9, 9, 9, 9, 8, 8, 8, 8, 8, 8, 8, 8]
INFO:root:Considering 100 * 1 jobs for minsize=4
INFO:root:Chunked 100 in [9, 9, 9, 9, 8, 8, 8, 8, 8, 8, 8, 8]
INFO:root:Considering 100 * 1 jobs for minsize=5
INFO:root:Chunked 100 in [9, 9, 9, 9, 8, 8, 8, 8, 8, 8, 8, 8]
INFO:root:Considering 100 * 1 jobs for minsize=6
INFO:root:Chunked 100 in [9, 9, 9, 9, 8, 8, 8, 8, 8, 8, 8, 8]
INFO:root:Considering 100 * 1 jobs for minsize=7
INFO:root:Chunked 100 in [9, 9, 9, 9, 8, 8, 8, 8, 8, 8, 8, 8]
INFO:root:Considering 100 * 1 jobs for minsize=8
INFO:root:Chunked 100 in [9, 9, 9, 9, 8, 8, 8, 8, 8, 8, 8, 8]
INFO:root:Considering 100 * 1 jobs for minsize=9
INFO:root:Chunked 100 in [9, 9, 9, 9, 8, 8, 8, 8, 8, 8, 8, 8]
INFO:root:Considering 100 * 1 jobs for minsize=10
INFO:root:Chunked 100 in [9, 9, 9, 9, 8, 8, 8, 8, 8, 8, 8, 8]
INFO:root:XX found first (8, 2) is not 2 11
INFO:root:XX add new best (8, 2) is not 2 11 11
INFO:root:XX add new best (8, 2) is not 2 11 11
INFO:root:Considering 100 * 1 jobs for minsize=11
INFO:root:Chunked 100 in [9, 9, 9, 9, 8, 8, 8, 8, 8, 8, 8, 8]
INFO:root:XX add new best (8, 2) is not 2 11 11
INFO:root:XX add new best (8, 2) is not 2 11 11
INFO:root:Trace: [(11, [(8, 2) is not 2])]
INFO:root:Trace Quality: [(11, 1)]
INFO:root:Trace Sorted: [(11, 1)]
INFO:root:Finished
INFO:root:Full Trace [(11, [(8, 2) is not 2])]
INFO:root:Trying {'minPrecheckStepsMUS': True}
INFO:root:Starting Step 1
INFO:root:Current state [[[[1], [2, 7, 8], [5], [3, 7], [2, 3, 8], [9], [4], [6], [2, 7, 8]], [[3], [4], [9], [6], [2, 8], [2, 7, 8], [2, 5, 7, 8], [1], [2, 5, 7, 8]], [[2, 6, 8], [2, 7, 8], [2, 6, 8], [1], [4], [5], [3], [2, 8, 9], [2, 7, 8, 9]], [[2, 4, 8], [9], [2, 4, 8], [5, 8], [1], [4, 6, 8], [2, 5, 6, 8], [7], [3]], [[5], [6], [2, 3, 8], [3, 7], [9], [7, 8], [1], [4], [2, 8]], [[7], [1], [3, 4, 8], [2], [3, 5, 6, 8], [4, 6], [5, 6, 8], [5, 8, 9], [5, 6, 8, 9]], [[2, 4, 6, 8], [5], [2, 4, 6, 8], [9], [7], [1], [2, 6, 8], [3], [2, 4, 6, 8]], [[2, 4, 6, 8], [2, 8], [7], [4, 5, 8], [2, 5, 6, 8], [3], [9], [2, 5, 8], [1]], [[9], [3], [1], [4, 5, 8], [2, 5, 6, 8], [2, 6, 8], [2, 5, 6, 7, 8], [2, 5, 8], [2, 4, 5, 6, 7, 8]]]]
INFO:root:Doing checkSmall1
INFO:root:Getting tiny MUSes, distance 1, for 1 puzlits, 1 repeats
INFO:root:Chunked 1 in [1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
INFO:root:Doing checkSmall2
INFO:root:Getting tiny MUSes, distance 2, for 1 puzlits, 1 repeats
INFO:root:Chunked 1 in [1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
INFO:root:Considering 100 * 1 jobs for minsize=3
INFO:root:Chunked 100 in [9, 9, 9, 9, 8, 8, 8, 8, 8, 8, 8, 8]
INFO:root:Considering 100 * 1 jobs for minsize=4
INFO:root:Chunked 100 in [9, 9, 9, 9, 8, 8, 8, 8, 8, 8, 8, 8]
INFO:root:Considering 100 * 1 jobs for minsize=5
INFO:root:Chunked 100 in [9, 9, 9, 9, 8, 8, 8, 8, 8, 8, 8, 8]
INFO:root:Considering 100 * 1 jobs for minsize=6
INFO:root:Chunked 100 in [9, 9, 9, 9, 8, 8, 8, 8, 8, 8, 8, 8]
INFO:root:Considering 100 * 1 jobs for minsize=7
INFO:root:Chunked 100 in [9, 9, 9, 9, 8, 8, 8, 8, 8, 8, 8, 8]
INFO:root:Considering 100 * 1 jobs for minsize=8
INFO:root:Chunked 100 in [9, 9, 9, 9, 8, 8, 8, 8, 8, 8, 8, 8]
INFO:root:Considering 100 * 1 jobs for minsize=9
INFO:root:Chunked 100 in [9, 9, 9, 9, 8, 8, 8, 8, 8, 8, 8, 8]
INFO:root:Considering 100 * 1 jobs for minsize=10
INFO:root:Chunked 100 in [9, 9, 9, 9, 8, 8, 8, 8, 8, 8, 8, 8]
INFO:root:XX found first (8, 2) is not 2 11
INFO:root:XX add new best (8, 2) is not 2 11 11
INFO:root:XX add new best (8, 2) is not 2 11 11
INFO:root:XX add new best (8, 2) is not 2 11 11
INFO:root:Considering 100 * 1 jobs for minsize=11
INFO:root:Chunked 100 in [9, 9, 9, 9, 8, 8, 8, 8, 8, 8, 8, 8]
INFO:root:XX add new best (8, 2) is not 2 11 11
INFO:root:XX add new best (8, 2) is not 2 11 11
INFO:root:XX add new best (8, 2) is not 2 11 11
INFO:root:XX add new best (8, 2) is not 2 11 11
INFO:root:XX add new best (8, 2) is not 2 11 11
INFO:root:Trace: [(11, [(8, 2) is not 2])]
INFO:root:Trace Quality: [(11, 1)]
INFO:root:Trace Sorted: [(11, 1)]
INFO:root:Finished
INFO:root:Full Trace [(11, [(8, 2) is not 2])]
INFO:root:Trying {'gallopingMUSes': True, 'minPrecheckMUS': True}
INFO:root:Starting Step 1
INFO:root:Current state [[[[1], [2, 7, 8], [5], [3, 7], [2, 3, 8], [9], [4], [6], [2, 7, 8]], [[3], [4], [9], [6], [2, 8], [2, 7, 8], [2, 5, 7, 8], [1], [2, 5, 7, 8]], [[2, 6, 8], [2, 7, 8], [2, 6, 8], [1], [4], [5], [3], [2, 8, 9], [2, 7, 8, 9]], [[2, 4, 8], [9], [2, 4, 8], [5, 8], [1], [4, 6, 8], [2, 5, 6, 8], [7], [3]], [[5], [6], [2, 3, 8], [3, 7], [9], [7, 8], [1], [4], [2, 8]], [[7], [1], [3, 4, 8], [2], [3, 5, 6, 8], [4, 6], [5, 6, 8], [5, 8, 9], [5, 6, 8, 9]], [[2, 4, 6, 8], [5], [2, 4, 6, 8], [9], [7], [1], [2, 6, 8], [3], [2, 4, 6, 8]], [[2, 4, 6, 8], [2, 8], [7], [4, 5, 8], [2, 5, 6, 8], [3], [9], [2, 5, 8], [1]], [[9], [3], [1], [4, 5, 8], [2, 5, 6, 8], [2, 6, 8], [2, 5, 6, 7, 8], [2, 5, 8], [2, 4, 5, 6, 7, 8]]]]
INFO:root:Doing checkSmall1
INFO:root:Getting tiny MUSes, distance 1, for 1 puzlits, 1 repeats
INFO:root:Chunked 1 in [1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
INFO:root:Doing checkSmall2
INFO:root:Getting tiny MUSes, distance 2, for 1 puzlits, 1 repeats
INFO:root:Chunked 1 in [1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
INFO:root:Considering 100 * 1 jobs for minsize=3
INFO:root:Chunked 100 in [9, 9, 9, 9, 8, 8, 8, 8, 8, 8, 8, 8]
INFO:root:Considering 100 * 1 jobs for minsize=4
INFO:root:Chunked 100 in [9, 9, 9, 9, 8, 8, 8, 8, 8, 8, 8, 8]
INFO:root:Considering 100 * 1 jobs for minsize=5
INFO:root:Chunked 100 in [9, 9, 9, 9, 8, 8, 8, 8, 8, 8, 8, 8]
INFO:root:Considering 100 * 1 jobs for minsize=6
INFO:root:Chunked 100 in [9, 9, 9, 9, 8, 8, 8, 8, 8, 8, 8, 8]
INFO:root:Considering 100 * 1 jobs for minsize=7
INFO:root:Chunked 100 in [9, 9, 9, 9, 8, 8, 8, 8, 8, 8, 8, 8]
INFO:root:Considering 100 * 1 jobs for minsize=8
INFO:root:Chunked 100 in [9, 9, 9, 9, 8, 8, 8, 8, 8, 8, 8, 8]
INFO:root:Considering 100 * 1 jobs for minsize=9
INFO:root:Chunked 100 in [9, 9, 9, 9, 8, 8, 8, 8, 8, 8, 8, 8]
INFO:root:Considering 100 * 1 jobs for minsize=10
INFO:root:Chunked 100 in [9, 9, 9, 9, 8, 8, 8, 8, 8, 8, 8, 8]
INFO:root:XX found first (8, 2) is not 2 11
INFO:root:XX add new best (8, 2) is not 2 11 11
INFO:root:XX add new best (8, 2) is not 2 11 11
INFO:root:XX add new best (8, 2) is not 2 11 11
INFO:root:Considering 100 * 1 jobs for minsize=11
INFO:root:Chunked 100 in [9, 9, 9, 9, 8, 8, 8, 8, 8, 8, 8, 8]
INFO:root:XX add new best (8, 2) is not 2 11 11
INFO:root:XX add new best (8, 2) is not 2 11 11
INFO:root:XX add new best (8, 2) is not 2 11 11
INFO:root:XX add new best (8, 2) is not 2 11 11
INFO:root:XX add new best (8, 2) is not 2 11 11
INFO:root:Trace: [(11, [(8, 2) is not 2])]
INFO:root:Trace Quality: [(11, 1)]
INFO:root:Trace Sorted: [(11, 1)]
INFO:root:Finished
INFO:root:Full Trace [(11, [(8, 2) is not 2])]
INFO:root:Trying {}
INFO:root:Starting Step 1
INFO:root:Current state [[[[6], [2], [4, 8, 9], [4, 8], [5], [3], [4, 8, 9], [7], [1]], [[3], [1], [4, 8, 9], [4, 7, 8], [2, 4, 7, 8, 9], [2, 4, 9], [2, 4, 8, 9], [5, 6], [5, 6]], [[4, 5], [4, 5, 8, 9], [7], [1], [2, 4, 8, 9], [6], [3], [2, 4, 9], [4, 8]], [[2, 4, 5, 7], [4, 5, 8, 9], [2, 4, 8, 9], [3], [4, 8, 9], [1], [6], [2, 4, 5, 9], [4, 5, 7, 8]], [[2, 4, 7], [3, 4, 8, 9], [2, 3, 4, 8, 9], [4, 5, 6, 8], [4, 6, 8, 9], [4, 5, 8, 9], [2, 4, 7, 8, 9], [1], [3, 4, 7, 8]], [[1], [3, 4, 5, 8, 9], [6], [2], [4, 8, 9], [7], [4, 8, 9], [4, 5, 9], [3, 4, 5, 8]], [[2, 4], [3, 4], [1], [9], [2, 3, 4, 7, 8], [2, 4, 8], [5], [4, 6], [4, 6, 7]], [[8], [7], [2, 4, 5], [5, 6], [1, 2, 4, 6], [2, 4, 5], [1, 4], [3], [9]], [[9], [6], [3, 4, 5], [4, 5, 7], [1, 3, 7], [4, 5], [1, 4, 7], [8], [2]]]]
INFO:root:Doing checkSmall1
INFO:root:Getting tiny MUSes, distance 1, for 1 puzlits, 1 repeats
INFO:root:Chunked 1 in [1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
INFO:root:Doing checkSmall2
INFO:root:Getting tiny MUSes, distance 2, for 1 puzlits, 1 repeats
INFO:root:Chunked 1 in [1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
INFO:root:Considering 100 * 1 jobs for minsize=3
INFO:root:Chunked 100 in [9, 9, 9, 9, 8, 8, 8, 8, 8, 8, 8, 8]
INFO:root:Considering 100 * 1 jobs for minsize=4
INFO:root:Chunked 100 in [9, 9, 9, 9, 8, 8, 8, 8, 8, 8, 8, 8]
INFO:root:Considering 100 * 1 jobs for minsize=5
INFO:root:Chunked 100 in [9, 9, 9, 9, 8, 8, 8, 8, 8, 8, 8, 8]
INFO:root:Considering 100 * 1 jobs for minsize=6
INFO:root:Chunked 100 in [9, 9, 9, 9, 8, 8, 8, 8, 8, 8, 8, 8]
INFO:root:Considering 100 * 1 jobs for minsize=7
INFO:root:Chunked 100 in [9, 9, 9, 9, 8, 8, 8, 8, 8, 8, 8, 8]
INFO:root:Considering 100 * 1 jobs for minsize=8
INFO:root:Chunked 100 in [9, 9, 9, 9, 8, 8, 8, 8, 8, 8, 8, 8]
INFO:root:Considering 100 * 1 jobs for minsize=9
INFO:root:Chunked 100 in [9, 9, 9, 9, 8, 8, 8, 8, 8, 8, 8, 8]
INFO:root:Considering 100 * 1 jobs for minsize=10
INFO:root:Chunked 100 in [9, 9, 9, 9, 8, 8, 8, 8, 8, 8, 8, 8]
INFO:root:XX found first (6, 7) is not 4 11
INFO:root:XX add new best (6, 7) is not 4 11 11
INFO:root:XX add new best (6, 7) is not 4 11 11
INFO:root:XX add new best (6, 7) is not 4 11 11
INFO:root:XX add new best (6, 7) is not 4 11 11
INFO:root:XX add new best (6, 7) is not 4 11 11
INFO:root:XX add new best (6, 7) is not 4 11 11
INFO:root:XX add new best (6, 7) is not 4 11 11
INFO:root:XX add new best (6, 7) is not 4 11 11
INFO:root:XX add new best (6, 7) is not 4 11 11
INFO:root:XX add new best (6, 7) is not 4 11 11
INFO:root:XX add new best (6, 7) is not 4 11 11
INFO:root:XX add new best (6, 7) is not 4 11 11
INFO:root:XX add new best (6, 7) is not 4 11 11
INFO:root:XX add new best (6, 7) is not 4 11 11
INFO:root:XX add new best (6, 7) is not 4 11 11
INFO:root:XX add new best (6, 7) is not 4 11 11
INFO:root:XX add new best (6, 7) is not 4 11 11
INFO:root:XX add new best (6, 7) is not 4 11 11
INFO:root:XX add new best (6, 7) is not 4 11 11
INFO:root:XX add new best (6, 7) is not 4 11 11
INFO:root:XX add new best (6, 7) is not 4 11 11
INFO:root:XX add new best (6, 7) is not 4 11 11
INFO:root:XX add new best (6, 7) is not 4 11 11
INFO:root:XX add new best (6, 7) is not 4 11 11
INFO:root:XX add new best (6, 7) is not 4 11 11
INFO:root:XX add new best (6, 7) is not 4 11 11
INFO:root:XX add new best (6, 7) is not 4 11 11
INFO:root:XX add new best (6, 7) is not 4 11 11
INFO:root:XX add new best (6, 7) is not 4 11 11
INFO:root:XX add new best (6, 7) is not 4 11 11
INFO:root:XX add new best (6, 7) is not 4 11 11
INFO:root:XX add new best (6, 7) is not 4 11 11
INFO:root:Considering 100 * 1 jobs for minsize=11
INFO:root:Chunked 100 in [9, 9, 9, 9, 8, 8, 8, 8, 8, 8, 8, 8]
INFO:root:XX add new best (6, 7) is not 4 11 11
INFO:root:XX add new best (6, 7) is not 4 11 11
INFO:root:XX add new best (6, 7) is not 4 11 11
INFO:root:XX add new best (6, 7) is not 4 11 11
INFO:root:XX add new best (6, 7) is not 4 11 11
INFO:root:XX add new best (6, 7) is not 4 11 11
INFO:root:XX add new best (6, 7) is not 4 11 11
INFO:root:XX add new best (6, 7) is not 4 11 11
INFO:root:XX add new best (6, 7) is not 4 11 11
INFO:root:XX add new best (6, 7) is not 4 11 11
INFO:root:XX add new best (6, 7) is not 4 11 11
INFO:root:XX add new best (6, 7) is not 4 11 11
INFO:root:XX add new best (6, 7) is not 4 11 11
INFO:root:XX add new best (6, 7) is not 4 11 11
INFO:root:XX add new best (6, 7) is not 4 11 11
INFO:root:XX add new best (6, 7) is not 4 11 11
INFO:root:XX add new best (6, 7) is not 4 11 11
INFO:root:XX add new best (6, 7) is not 4 11 11
INFO:root:XX add new best (6, 7) is not 4 11 11
INFO:root:XX add new best (6, 7) is not 4 11 11
INFO:root:XX add new best (6, 7) is not 4 11 11
INFO:root:XX add new best (6, 7) is not 4 11 11
INFO:root:XX add new best (6, 7) is not 4 11 11
INFO:root:XX add new best (6, 7) is not 4 11 11
INFO:root:XX add new best (6, 7) is not 4 11 11
INFO:root:XX add new best (6, 7) is not 4 11 11
INFO:root:XX add new best (6, 7) is not 4 11 11
INFO:root:XX add new best (6, 7) is not 4 11 11
INFO:root:XX add new best (6, 7) is not 4 11 11
INFO:root:XX add new best (6, 7) is not 4 11 11
INFO:root:XX add new best (6, 7) is not 4 11 11
INFO:root:XX add new best (6, 7) is not 4 11 11
INFO:root:XX add new best (6, 7) is not 4 11 11
INFO:root:XX add new best (6, 7) is not 4 11 11
INFO:root:XX add new best (6, 7) is not 4 11 11
INFO:root:XX add new best (6, 7) is not 4 11 11
INFO:root:XX add new best (6, 7) is not 4 11 11
INFO:root:XX add new best (6, 7) is not 4 11 11
INFO:root:XX add new best (6, 7) is not 4 11 11
INFO:root:XX add new best (6, 7) is not 4 11 11
INFO:root:Trace: [(11, [(6, 7) is not 4])]
INFO:root:Trace Quality: [(11, 1)]
INFO:root:Trace Sorted: [(11, 1)]
INFO:root:Finished
INFO:root:Full Trace [(11, [(6, 7) is not 4])]
INFO:root:Trying {'prechopMUSes': True}
INFO:root:Starting Step 1
INFO:root:Current state [[[[6], [2], [4, 8, 9], [4, 8], [5], [3], [4, 8, 9], [7], [1]], [[3], [1], [4, 8, 9], [4, 7, 8], [2, 4, 7, 8, 9], [2, 4, 9], [2, 4, 8, 9], [5, 6], [5, 6]], [[4, 5], [4, 5, 8, 9], [7], [1], [2, 4, 8, 9], [6], [3], [2, 4, 9], [4, 8]], [[2, 4, 5, 7], [4, 5, 8, 9], [2, 4, 8, 9], [3], [4, 8, 9], [1], [6], [2, 4, 5, 9], [4, 5, 7, 8]], [[2, 4, 7], [3, 4, 8, 9], [2, 3, 4, 8, 9], [4, 5, 6, 8], [4, 6, 8, 9], [4, 5, 8, 9], [2, 4, 7, 8, 9], [1], [3, 4, 7, 8]], [[1], [3, 4, 5, 8, 9], [6], [2], [4, 8, 9], [7], [4, 8, 9], [4, 5, 9], [3, 4, 5, 8]], [[2, 4], [3, 4], [1], [9], [2, 3, 4, 7, 8], [2, 4, 8], [5], [4, 6], [4, 6, 7]], [[8], [7], [2, 4, 5], [5, 6], [1, 2, 4, 6], [2, 4, 5], [1, 4], [3], [9]], [[9], [6], [3, 4, 5], [4, 5, 7], [1, 3, 7], [4, 5], [1, 4, 7], [8], [2]]]]
INFO:root:Doing checkSmall1
INFO:root:Getting tiny MUSes, distance 1, for 1 puzlits, 1 repeats
INFO:root:Chunked 1 in [1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
INFO:root:Doing checkSmall2
INFO:root:Getting tiny MUSes, distance 2, for 1 puzlits, 1 repeats
INFO:root:Chunked 1 in [1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
INFO:root:Considering 100 * 1 jobs for minsize=3
INFO:root:Chunked 100 in [9, 9, 9, 9, 8, 8, 8, 8, 8, 8, 8, 8]
INFO:root:Considering 100 * 1 jobs for minsize=4
INFO:root:Chunked 100 in [9, 9, 9, 9, 8, 8, 8, 8, 8, 8, 8, 8]
INFO:root:Considering 100 * 1 jobs for minsize=5
INFO:root:Chunked 100 in [9, 9, 9, 9, 8, 8, 8, 8, 8, 8, 8, 8]
INFO:root:Considering 100 * 1 jobs for minsize=6
INFO:root:Chunked 100 in [9, 9, 9, 9, 8, 8, 8, 8, 8, 8, 8, 8]
INFO:root:Considering 100 * 1 jobs for minsize=7
INFO:root:Chunked 100 in [9, 9, 9, 9, 8, 8, 8, 8, 8, 8, 8, 8]
INFO:root:Considering 100 * 1 jobs for minsize=8
INFO:root:Chunked 100 in [9, 9, 9, 9, 8, 8, 8, 8, 8, 8, 8, 8]
INFO:root:Considering 100 * 1 jobs for minsize=9
INFO:root:Chunked 100 in [9, 9, 9, 9, 8, 8, 8, 8, 8, 8, 8, 8]
INFO:root:Considering 100 * 1 jobs for minsize=10
INFO:root:Chunked 100 in [9, 9, 9, 9, 8, 8, 8, 8, 8, 8, 8, 8]
INFO:root:XX found first (6, 7) is not 4 11
INFO:root:XX add new best (6, 7) is not 4 11 11
INFO:root:XX add new best (6, 7) is not 4 11 11
INFO:root:XX add new best (6, 7) is not 4 11 11
INFO:root:XX add new best (6, 7) is not 4 11 11
INFO:root:Considering 100 * 1 jobs for minsize=11
INFO:root:Chunked 100 in [9, 9, 9, 9, 8, 8, 8, 8, 8, 8, 8, 8]
INFO:root:XX add new best (6, 7) is not 4 11 11
INFO:root:XX add new best (6, 7) is not 4 11 11
INFO:root:XX add new best (6, 7) is not 4 11 11
INFO:root:XX add new best (6, 7) is not 4 11 11
INFO:root:XX add new best (6, 7) is not 4 11 11
INFO:root:XX add new best (6, 7) is not 4 11 11
INFO:root:Trace: [(11, [(6, 7) is not 4])]
INFO:root:Trace Quality: [(11, 1)]
INFO:root:Trace Sorted: [(11, 1)]
INFO:root:Finished
INFO:root:Full Trace [(11, [(6, 7) is not 4])]
INFO:root:Trying {'quarterChopMUS': True}
INFO:root:Starting Step 1
INFO:root:Current state [[[[6], [2], [4, 8, 9], [4, 8], [5], [3], [4, 8, 9], [7], [1]], [[3], [1], [4, 8, 9], [4, 7, 8], [2, 4, 7, 8, 9], [2, 4, 9], [2, 4, 8, 9], [5, 6], [5, 6]], [[4, 5], [4, 5, 8, 9], [7], [1], [2, 4, 8, 9], [6], [3], [2, 4, 9], [4, 8]], [[2, 4, 5, 7], [4, 5, 8, 9], [2, 4, 8, 9], [3], [4, 8, 9], [1], [6], [2, 4, 5, 9], [4, 5, 7, 8]], [[2, 4, 7], [3, 4, 8, 9], [2, 3, 4, 8, 9], [4, 5, 6, 8], [4, 6, 8, 9], [4, 5, 8, 9], [2, 4, 7, 8, 9], [1], [3, 4, 7, 8]], [[1], [3, 4, 5, 8, 9], [6], [2], [4, 8, 9], [7], [4, 8, 9], [4, 5, 9], [3, 4, 5, 8]], [[2, 4], [3, 4], [1], [9], [2, 3, 4, 7, 8], [2, 4, 8], [5], [4, 6], [4, 6, 7]], [[8], [7], [2, 4, 5], [5, 6], [1, 2, 4, 6], [2, 4, 5], [1, 4], [3], [9]], [[9], [6], [3, 4, 5], [4, 5, 7], [1, 3, 7], [4, 5], [1, 4, 7], [8], [2]]]]
INFO:root:Doing checkSmall1
INFO:root:Getting tiny MUSes, distance 1, for 1 puzlits, 1 repeats
INFO:root:Chunked 1 in [1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
INFO:root:Doing checkSmall2
INFO:root:Getting tiny MUSes, distance 2, for 1 puzlits, 1 repeats
INFO:root:Chunked 1 in [1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
INFO:root:Considering 100 * 1 jobs for minsize=3
INFO:root:Chunked 100 in [9, 9, 9, 9, 8, 8, 8, 8, 8, 8, 8, 8]
INFO:root:Considering 100 * 1 jobs for minsize=4
INFO:root:Chunked 100 in [9, 9, 9, 9, 8, 8, 8, 8, 8, 8, 8, 8]
INFO:root:Considering 100 * 1 jobs for minsize=5
INFO:root:Chunked 100 in [9, 9, 9, 9, 8, 8, 8, 8, 8, 8, 8, 8]
INFO:root:Considering 100 * 1 jobs for minsize=6
INFO:root:Chunked 100 in [9, 9, 9, 9, 8, 8, 8, 8, 8, 8, 8, 8]
INFO:root:Considering 100 * 1 jobs for minsize=7
INFO:root:Chunked 100 in [9, 9, 9, 9, 8, 8, 8, 8, 8, 8, 8, 8]
INFO:root:Considering 100 * 1 jobs for minsize=8
INFO:root:Chunked 100 in [9, 9, 9, 9, 8, 8, 8, 8, 8, 8, 8, 8]
INFO:root:Considering 100 * 1 jobs for minsize=9
INFO:root:Chunked 100 in [9, 9, 9, 9, 8, 8, 8, 8, 8, 8, 8, 8]
INFO:root:Considering 100 * 1 jobs for minsize=10
INFO:root:Chunked 100 in [9, 9, 9, 9, 8, 8, 8, 8, 8, 8, 8, 8]
INFO:root:XX found first (6, 7) is not 4 11
INFO:root:XX add new best (6, 7) is not 4 11 11
INFO:root:XX add new best (6, 7) is not 4 11 11
INFO:root:XX add new best (6, 7) is not 4 11 11
INFO:root:XX add new best (6, 7) is not 4 11 11
INFO:root:XX add new best (6, 7) is not 4 11 11
INFO:root:XX add new best (6, 7) is not 4 11 11
INFO:root:Considering 100 * 1 jobs for minsize=11
INFO:root:Chunked 100 in [9, 9, 9, 9, 8, 8, 8, 8, 8, 8, 8, 8]
INFO:root:XX add new best (6, 7) is not 4 11 11
INFO:root:XX add new best (6, 7) is not 4 11 11
INFO:root:XX add new best (6, 7) is not 4 11 11
INFO:root:XX add new best (6, 7) is not 4 11 11
INFO:root:Trace: [(11, [(6, 7) is not 4])]
INFO:root:Trace Quality: [(11, 1)]
INFO:root:Trace Sorted: [(11, 1)]
INFO:root:Finished
INFO:root:Full Trace [(11, [(6, 7) is not 4])]
INFO:root:Trying {'minPrecheckMUS': True}
INFO:root:Starting Step 1
INFO:root:Current state [[[[6], [2], [4, 8, 9], [4, 8], [5], [3], [4, 8, 9], [7], [1]], [[3], [1], [4, 8, 9], [4, 7, 8], [2, 4, 7, 8, 9], [2, 4, 9], [2, 4, 8, 9], [5, 6], [5, 6]], [[4, 5], [4, 5, 8, 9], [7], [1], [2, 4, 8, 9], [6], [3], [2, 4, 9], [4, 8]], [[2, 4, 5, 7], [4, 5, 8, 9], [2, 4, 8, 9], [3], [4, 8, 9], [1], [6], [2, 4, 5, 9], [4, 5, 7, 8]], [[2, 4, 7], [3, 4, 8, 9], [2, 3, 4, 8, 9], [4, 5, 6, 8], [4, 6, 8, 9], [4, 5, 8, 9], [2, 4, 7, 8, 9], [1], [3, 4, 7, 8]], [[1], [3, 4, 5, 8, 9], [6], [2], [4, 8, 9], [7], [4, 8, 9], [4, 5, 9], [3, 4, 5, 8]], [[2, 4], [3, 4], [1], [9], [2, 3, 4, 7, 8], [2, 4, 8], [5], [4, 6], [4, 6, 7]], [[8], [7], [2, 4, 5], [5, 6], [1, 2, 4, 6], [2, 4, 5], [1, 4], [3], [9]], [[9], [6], [3, 4, 5], [4, 5, 7], [1, 3, 7], [4, 5], [1, 4, 7], [8], [2]]]]
INFO:root:Doing checkSmall1
INFO:root:Getting tiny MUSes, distance 1, for 1 puzlits, 1 repeats
INFO:root:Chunked 1 in [1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
INFO:root:Doing checkSmall2
INFO:root:Getting tiny MUSes, distance 2, for 1 puzlits, 1 repeats
INFO:root:Chunked 1 in [1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
INFO:root:Considering 100 * 1 jobs for minsize=3
INFO:root:Chunked 100 in [9, 9, 9, 9, 8, 8, 8, 8, 8, 8, 8, 8]
INFO:root:Considering 100 * 1 jobs for minsize=4
INFO:root:Chunked 100 in [9, 9, 9, 9, 8, 8, 8, 8, 8, 8, 8, 8]
INFO:root:Considering 100 * 1 jobs for minsize=5
INFO:root:Chunked 100 in [9, 9, 9, 9, 8, 8, 8, 8, 8, 8, 8, 8]
INFO:root:Considering 100 * 1 jobs for minsize=6
INFO:root:Chunked 100 in [9, 9, 9, 9, 8, 8, 8, 8, 8, 8, 8, 8]
INFO:root:Considering 100 * 1 jobs for minsize=7
INFO:root:Chunked 100 in [9, 9, 9, 9, 8, 8, 8, 8, 8, 8, 8, 8]
INFO:root:Considering 100 * 1 jobs for minsize=8
INFO:root:Chunked 100 in [9, 9, 9, 9, 8, 8, 8, 8, 8, 8, 8, 8]
INFO:root:Considering 100 * 1 jobs for minsize=9
INFO:root:Chunked 100 in [9, 9, 9, 9, 8, 8, 8, 8, 8, 8, 8, 8]
INFO:root:Considering 100 * 1 jobs for minsize=10
INFO:root:Chunked 100 in [9, 9, 9, 9, 8, 8, 8, 8, 8, 8, 8, 8]
INFO:root:XX found first (6, 7) is not 4 11
INFO:root:XX add new best (6, 7) is not 4 11 11
INFO:root:Considering 100 * 1 jobs for minsize=11
INFO:root:Chunked 100 in [9, 9, 9, 9, 8, 8, 8, 8, 8, 8, 8, 8]
INFO:root:Trace: [(11, [(6, 7) is not 4])]
INFO:root:Trace Quality: [(11, 1)]
INFO:root:Trace Sorted: [(11, 1)]
INFO:root:Finished
INFO:root:Full Trace [(11, [(6, 7) is not 4])]
INFO:root:Trying {'gallopingMUSes': True}
INFO:root:Starting Step 1
INFO:root:Current state [[[[6], [2], [4, 8, 9], [4, 8], [5], [3], [4, 8, 9], [7], [1]], [[3], [1], [4, 8, 9], [4, 7, 8], [2, 4, 7, 8, 9], [2, 4, 9], [2, 4, 8, 9], [5, 6], [5, 6]], [[4, 5], [4, 5, 8, 9], [7], [1], [2, 4, 8, 9], [6], [3], [2, 4, 9], [4, 8]], [[2, 4, 5, 7], [4, 5, 8, 9], [2, 4, 8, 9], [3], [4, 8, 9], [1], [6], [2, 4, 5, 9], [4, 5, 7, 8]], [[2, 4, 7], [3, 4, 8, 9], [2, 3, 4, 8, 9], [4, 5, 6, 8], [4, 6, 8, 9], [4, 5, 8, 9], [2, 4, 7, 8, 9], [1], [3, 4, 7, 8]], [[1], [3, 4, 5, 8, 9], [6], [2], [4, 8, 9], [7], [4, 8, 9], [4, 5, 9], [3, 4, 5, 8]], [[2, 4], [3, 4], [1], [9], [2, 3, 4, 7, 8], [2, 4, 8], [5], [4, 6], [4, 6, 7]], [[8], [7], [2, 4, 5], [5, 6], [1, 2, 4, 6], [2, 4, 5], [1, 4], [3], [9]], [[9], [6], [3, 4, 5], [4, 5, 7], [1, 3, 7], [4, 5], [1, 4, 7], [8], [2]]]]
INFO:root:Doing checkSmall1
INFO:root:Getting tiny MUSes, distance 1, for 1 puzlits, 1 repeats
INFO:root:Chunked 1 in [1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
INFO:root:Doing checkSmall2
INFO:root:Getting tiny MUSes, distance 2, for 1 puzlits, 1 repeats
INFO:root:Chunked 1 in [1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
INFO:root:Considering 100 * 1 jobs for minsize=3
INFO:root:Chunked 100 in [9, 9, 9, 9, 8, 8, 8, 8, 8, 8, 8, 8]
INFO:root:Considering 100 * 1 jobs for minsize=4
INFO:root:Chunked 100 in [9, 9, 9, 9, 8, 8, 8, 8, 8, 8, 8, 8]
INFO:root:Considering 100 * 1 jobs for minsize=5
INFO:root:Chunked 100 in [9, 9, 9, 9, 8, 8, 8, 8, 8, 8, 8, 8]
INFO:root:Considering 100 * 1 jobs for minsize=6
INFO:root:Chunked 100 in [9, 9, 9, 9, 8, 8, 8, 8, 8, 8, 8, 8]
INFO:root:Considering 100 * 1 jobs for minsize=7
INFO:root:Chunked 100 in [9, 9, 9, 9, 8, 8, 8, 8, 8, 8, 8, 8]
INFO:root:Considering 100 * 1 jobs for minsize=8
INFO:root:Chunked 100 in [9, 9, 9, 9, 8, 8, 8, 8, 8, 8, 8, 8]
INFO:root:Considering 100 * 1 jobs for minsize=9
INFO:root:Chunked 100 in [9, 9, 9, 9, 8, 8, 8, 8, 8, 8, 8, 8]
INFO:root:Considering 100 * 1 jobs for minsize=10
INFO:root:Chunked 100 in [9, 9, 9, 9, 8, 8, 8, 8, 8, 8, 8, 8]
INFO:root:XX found first (6, 7) is not 4 11
INFO:root:XX add new best (6, 7) is not 4 11 11
INFO:root:Considering 100 * 1 jobs for minsize=11
INFO:root:Chunked 100 in [9, 9, 9, 9, 8, 8, 8, 8, 8, 8, 8, 8]
INFO:root:Trace: [(11, [(6, 7) is not 4])]
INFO:root:Trace Quality: [(11, 1)]
INFO:root:Trace Sorted: [(11, 1)]
INFO:root:Finished
INFO:root:Full Trace [(11, [(6, 7) is not 4])]
INFO:root:Trying {'minPrecheckStepsMUS': True}
INFO:root:Starting Step 1
INFO:root:Current state [[[[6], [2], [4, 8, 9], [4, 8], [5], [3], [4, 8, 9], [7], [1]], [[3], [1], [4, 8, 9], [4, 7, 8], [2, 4, 7, 8, 9], [2, 4, 9], [2, 4, 8, 9], [5, 6], [5, 6]], [[4, 5], [4, 5, 8, 9], [7], [1], [2, 4, 8, 9], [6], [3], [2, 4, 9], [4, 8]], [[2, 4, 5, 7], [4, 5, 8, 9], [2, 4, 8, 9], [3], [4, 8, 9], [1], [6], [2, 4, 5, 9], [4, 5, 7, 8]], [[2, 4, 7], [3, 4, 8, 9], [2, 3, 4, 8, 9], [4, 5, 6, 8], [4, 6, 8, 9], [4, 5, 8, 9], [2, 4, 7, 8, 9], [1], [3, 4, 7, 8]], [[1], [3, 4, 5, 8, 9], [6], [2], [4, 8, 9], [7], [4, 8, 9], [4, 5, 9], [3, 4, 5, 8]], [[2, 4], [3, 4], [1], [9], [2, 3, 4, 7, 8], [2, 4, 8], [5], [4, 6], [4, 6, 7]], [[8], [7], [2, 4, 5], [5, 6], [1, 2, 4, 6], [2, 4, 5], [1, 4], [3], [9]], [[9], [6], [3, 4, 5], [4, 5, 7], [1, 3, 7], [4, 5], [1, 4, 7], [8], [2]]]]
INFO:root:Doing checkSmall1
INFO:root:Getting tiny MUSes, distance 1, for 1 puzlits, 1 repeats
INFO:root:Chunked 1 in [1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
INFO:root:Doing checkSmall2
INFO:root:Getting tiny MUSes, distance 2, for 1 puzlits, 1 repeats
INFO:root:Chunked 1 in [1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
INFO:root:Considering 100 * 1 jobs for minsize=3
INFO:root:Chunked 100 in [9, 9, 9, 9, 8, 8, 8, 8, 8, 8, 8, 8]
INFO:root:Considering 100 * 1 jobs for minsize=4
INFO:root:Chunked 100 in [9, 9, 9, 9, 8, 8, 8, 8, 8, 8, 8, 8]
INFO:root:Considering 100 * 1 jobs for minsize=5
INFO:root:Chunked 100 in [9, 9, 9, 9, 8, 8, 8, 8, 8, 8, 8, 8]
INFO:root:Considering 100 * 1 jobs for minsize=6
INFO:root:Chunked 100 in [9, 9, 9, 9, 8, 8, 8, 8, 8, 8, 8, 8]
INFO:root:Considering 100 * 1 jobs for minsize=7
INFO:root:Chunked 100 in [9, 9, 9, 9, 8, 8, 8, 8, 8, 8, 8, 8]
INFO:root:Considering 100 * 1 jobs for minsize=8
INFO:root:Chunked 100 in [9, 9, 9, 9, 8, 8, 8, 8, 8, 8, 8, 8]
INFO:root:Considering 100 * 1 jobs for minsize=9
INFO:root:Chunked 100 in [9, 9, 9, 9, 8, 8, 8, 8, 8, 8, 8, 8]
INFO:root:Considering 100 * 1 jobs for minsize=10
INFO:root:Chunked 100 in [9, 9, 9, 9, 8, 8, 8, 8, 8, 8, 8, 8]
INFO:root:XX found first (6, 7) is not 4 11
INFO:root:XX add new best (6, 7) is not 4 11 11
INFO:root:Considering 100 * 1 jobs for minsize=11
INFO:root:Chunked 100 in [9, 9, 9, 9, 8, 8, 8, 8, 8, 8, 8, 8]
INFO:root:Trace: [(11, [(6, 7) is not 4])]
INFO:root:Trace Quality: [(11, 1)]
INFO:root:Trace Sorted: [(11, 1)]
INFO:root:Finished
INFO:root:Full Trace [(11, [(6, 7) is not 4])]
INFO:root:Trying {'gallopingMUSes': True, 'minPrecheckMUS': True}
INFO:root:Starting Step 1
INFO:root:Current state [[[[6], [2], [4, 8, 9], [4, 8], [5], [3], [4, 8, 9], [7], [1]], [[3], [1], [4, 8, 9], [4, 7, 8], [2, 4, 7, 8, 9], [2, 4, 9], [2, 4, 8, 9], [5, 6], [5, 6]], [[4, 5], [4, 5, 8, 9], [7], [1], [2, 4, 8, 9], [6], [3], [2, 4, 9], [4, 8]], [[2, 4, 5, 7], [4, 5, 8, 9], [2, 4, 8, 9], [3], [4, 8, 9], [1], [6], [2, 4, 5, 9], [4, 5, 7, 8]], [[2, 4, 7], [3, 4, 8, 9], [2, 3, 4, 8, 9], [4, 5, 6, 8], [4, 6, 8, 9], [4, 5, 8, 9], [2, 4, 7, 8, 9], [1], [3, 4, 7, 8]], [[1], [3, 4, 5, 8, 9], [6], [2], [4, 8, 9], [7], [4, 8, 9], [4, 5, 9], [3, 4, 5, 8]], [[2, 4], [3, 4], [1], [9], [2, 3, 4, 7, 8], [2, 4, 8], [5], [4, 6], [4, 6, 7]], [[8], [7], [2, 4, 5], [5, 6], [1, 2, 4, 6], [2, 4, 5], [1, 4], [3], [9]], [[9], [6], [3, 4, 5], [4, 5, 7], [1, 3, 7], [4, 5], [1, 4, 7], [8], [2]]]]
INFO:root:Doing checkSmall1
INFO:root:Getting tiny MUSes, distance 1, for 1 puzlits, 1 repeats
INFO:root:Chunked 1 in [1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
INFO:root:Doing checkSmall2
INFO:root:Getting tiny MUSes, distance 2, for 1 puzlits, 1 repeats
INFO:root:Chunked 1 in [1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
INFO:root:Considering 100 * 1 jobs for minsize=3
INFO:root:Chunked 100 in [9, 9, 9, 9, 8, 8, 8, 8, 8, 8, 8, 8]
INFO:root:Considering 100 * 1 jobs for minsize=4
INFO:root:Chunked 100 in [9, 9, 9, 9, 8, 8, 8, 8, 8, 8, 8, 8]
INFO:root:Considering 100 * 1 jobs for minsize=5
INFO:root:Chunked 100 in [9, 9, 9, 9, 8, 8, 8, 8, 8, 8, 8, 8]
INFO:root:Considering 100 * 1 jobs for minsize=6
INFO:root:Chunked 100 in [9, 9, 9, 9, 8, 8, 8, 8, 8, 8, 8, 8]
INFO:root:Considering 100 * 1 jobs for minsize=7
INFO:root:Chunked 100 in [9, 9, 9, 9, 8, 8, 8, 8, 8, 8, 8, 8]
INFO:root:Considering 100 * 1 jobs for minsize=8
INFO:root:Chunked 100 in [9, 9, 9, 9, 8, 8, 8, 8, 8, 8, 8, 8]
INFO:root:Considering 100 * 1 jobs for minsize=9
INFO:root:Chunked 100 in [9, 9, 9, 9, 8, 8, 8, 8, 8, 8, 8, 8]
INFO:root:Considering 100 * 1 jobs for minsize=10
INFO:root:Chunked 100 in [9, 9, 9, 9, 8, 8, 8, 8, 8, 8, 8, 8]
INFO:root:XX found first (6, 7) is not 4 11
INFO:root:XX add new best (6, 7) is not 4 11 11
INFO:root:Considering 100 * 1 jobs for minsize=11
INFO:root:Chunked 100 in [9, 9, 9, 9, 8, 8, 8, 8, 8, 8, 8, 8]
INFO:root:Trace: [(11, [(6, 7) is not 4])]
INFO:root:Trace Quality: [(11, 1)]
INFO:root:Trace Sorted: [(11, 1)]
INFO:root:Finished
INFO:root:Full Trace [(11, [(6, 7) is not 4])]
Traceback (most recent call last):
  File "./sudoku-wiki.py", line 455, in <module>
    print("<h2>CONFIG: {} TIME: {}</h2>".format(solver, time.time() - start_time))
NameError: name 'solver' is not defined
