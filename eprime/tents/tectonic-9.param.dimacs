p cnf 1607 6023                                                                                     

1 0
c Encoding variable: grid_00000_00000 with domain: int(0..6) (representing constraint )
c Both direct and order encoding.
c Var 'grid_00000_00000' order represents '0' with '2'
c Var 'grid_00000_00000' direct represents '0' with '2'
c Var 'grid_00000_00000' order represents '1' with '3'
-2 3 0
c Var 'grid_00000_00000' direct represents '1' with '4'
2 -3 4 0
-4 3 0
-4 -2 0
c Var 'grid_00000_00000' order represents '2' with '5'
-3 5 0
c Var 'grid_00000_00000' direct represents '2' with '6'
3 -5 6 0
-6 5 0
-6 -3 0
c Var 'grid_00000_00000' order represents '3' with '7'
-5 7 0
c Var 'grid_00000_00000' direct represents '3' with '8'
5 -7 8 0
-8 7 0
-8 -5 0
c Var 'grid_00000_00000' order represents '4' with '9'
-7 9 0
c Var 'grid_00000_00000' direct represents '4' with '10'
7 -9 10 0
-10 9 0
-10 -7 0
c Var 'grid_00000_00000' order represents '5' with '11'
-9 11 0
c Var 'grid_00000_00000' direct represents '5' with '12'
9 -11 12 0
-12 11 0
-12 -9 0
c Var 'grid_00000_00000' direct represents '6' with '-11'
2 4 6 8 10 12 -11 0
c Encoding variable: grid_00000_00001 with domain: int(0..6) (representing constraint )
c Both direct and order encoding.
c Var 'grid_00000_00001' order represents '0' with '13'
c Var 'grid_00000_00001' direct represents '0' with '13'
c Var 'grid_00000_00001' order represents '1' with '14'
-13 14 0
c Var 'grid_00000_00001' direct represents '1' with '15'
13 -14 15 0
-15 14 0
-15 -13 0
c Var 'grid_00000_00001' order represents '2' with '16'
-14 16 0
c Var 'grid_00000_00001' direct represents '2' with '17'
14 -16 17 0
-17 16 0
-17 -14 0
c Var 'grid_00000_00001' order represents '3' with '18'
-16 18 0
c Var 'grid_00000_00001' direct represents '3' with '19'
16 -18 19 0
-19 18 0
-19 -16 0
c Var 'grid_00000_00001' order represents '4' with '20'
-18 20 0
c Var 'grid_00000_00001' direct represents '4' with '21'
18 -20 21 0
-21 20 0
-21 -18 0
c Var 'grid_00000_00001' order represents '5' with '22'
-20 22 0
c Var 'grid_00000_00001' direct represents '5' with '23'
20 -22 23 0
-23 22 0
-23 -20 0
c Var 'grid_00000_00001' direct represents '6' with '-22'
13 15 17 19 21 23 -22 0
c Encoding variable: grid_00000_00002 with domain: int(0..6) (representing constraint )
c Both direct and order encoding.
c Var 'grid_00000_00002' order represents '0' with '24'
c Var 'grid_00000_00002' direct represents '0' with '24'
c Var 'grid_00000_00002' order represents '1' with '25'
-24 25 0
c Var 'grid_00000_00002' direct represents '1' with '26'
24 -25 26 0
-26 25 0
-26 -24 0
c Var 'grid_00000_00002' order represents '2' with '27'
-25 27 0
c Var 'grid_00000_00002' direct represents '2' with '28'
25 -27 28 0
-28 27 0
-28 -25 0
c Var 'grid_00000_00002' order represents '3' with '29'
-27 29 0
c Var 'grid_00000_00002' direct represents '3' with '30'
27 -29 30 0
-30 29 0
-30 -27 0
c Var 'grid_00000_00002' order represents '4' with '31'
-29 31 0
c Var 'grid_00000_00002' direct represents '4' with '32'
29 -31 32 0
-32 31 0
-32 -29 0
c Var 'grid_00000_00002' order represents '5' with '33'
-31 33 0
c Var 'grid_00000_00002' direct represents '5' with '34'
31 -33 34 0
-34 33 0
-34 -31 0
c Var 'grid_00000_00002' direct represents '6' with '-33'
24 26 28 30 32 34 -33 0
c Encoding variable: grid_00000_00003 with domain: int(0..6) (representing constraint )
c Both direct and order encoding.
c Var 'grid_00000_00003' order represents '0' with '35'
c Var 'grid_00000_00003' direct represents '0' with '35'
c Var 'grid_00000_00003' order represents '1' with '36'
-35 36 0
c Var 'grid_00000_00003' direct represents '1' with '37'
35 -36 37 0
-37 36 0
-37 -35 0
c Var 'grid_00000_00003' order represents '2' with '38'
-36 38 0
c Var 'grid_00000_00003' direct represents '2' with '39'
36 -38 39 0
-39 38 0
-39 -36 0
c Var 'grid_00000_00003' order represents '3' with '40'
-38 40 0
c Var 'grid_00000_00003' direct represents '3' with '41'
38 -40 41 0
-41 40 0
-41 -38 0
c Var 'grid_00000_00003' order represents '4' with '42'
-40 42 0
c Var 'grid_00000_00003' direct represents '4' with '43'
40 -42 43 0
-43 42 0
-43 -40 0
c Var 'grid_00000_00003' order represents '5' with '44'
-42 44 0
c Var 'grid_00000_00003' direct represents '5' with '45'
42 -44 45 0
-45 44 0
-45 -42 0
c Var 'grid_00000_00003' direct represents '6' with '-44'
35 37 39 41 43 45 -44 0
c Encoding variable: grid_00000_00004 with domain: int(-1) (representing constraint )
c Var 'grid_00000_00004' direct represents '-1' with '46'
46 0
c Encoding variable: grid_00001_00000 with domain: int(-2) (representing constraint )
c Var 'grid_00001_00000' direct represents '-2' with '47'
47 0
c Encoding variable: grid_00001_00001 with domain: int(0..6) (representing constraint )
c Both direct and order encoding.
c Var 'grid_00001_00001' order represents '0' with '48'
c Var 'grid_00001_00001' direct represents '0' with '48'
c Var 'grid_00001_00001' order represents '1' with '49'
-48 49 0
c Var 'grid_00001_00001' direct represents '1' with '50'
48 -49 50 0
-50 49 0
-50 -48 0
c Var 'grid_00001_00001' order represents '2' with '51'
-49 51 0
c Var 'grid_00001_00001' direct represents '2' with '52'
49 -51 52 0
-52 51 0
-52 -49 0
c Var 'grid_00001_00001' order represents '3' with '53'
-51 53 0
c Var 'grid_00001_00001' direct represents '3' with '54'
51 -53 54 0
-54 53 0
-54 -51 0
c Var 'grid_00001_00001' order represents '4' with '55'
-53 55 0
c Var 'grid_00001_00001' direct represents '4' with '56'
53 -55 56 0
-56 55 0
-56 -53 0
c Var 'grid_00001_00001' order represents '5' with '57'
-55 57 0
c Var 'grid_00001_00001' direct represents '5' with '58'
55 -57 58 0
-58 57 0
-58 -55 0
c Var 'grid_00001_00001' direct represents '6' with '-57'
48 50 52 54 56 58 -57 0
c Encoding variable: grid_00001_00002 with domain: int(0..6) (representing constraint )
c Both direct and order encoding.
c Var 'grid_00001_00002' order represents '0' with '59'
c Var 'grid_00001_00002' direct represents '0' with '59'
c Var 'grid_00001_00002' order represents '1' with '60'
-59 60 0
c Var 'grid_00001_00002' direct represents '1' with '61'
59 -60 61 0
-61 60 0
-61 -59 0
c Var 'grid_00001_00002' order represents '2' with '62'
-60 62 0
c Var 'grid_00001_00002' direct represents '2' with '63'
60 -62 63 0
-63 62 0
-63 -60 0
c Var 'grid_00001_00002' order represents '3' with '64'
-62 64 0
c Var 'grid_00001_00002' direct represents '3' with '65'
62 -64 65 0
-65 64 0
-65 -62 0
c Var 'grid_00001_00002' order represents '4' with '66'
-64 66 0
c Var 'grid_00001_00002' direct represents '4' with '67'
64 -66 67 0
-67 66 0
-67 -64 0
c Var 'grid_00001_00002' order represents '5' with '68'
-66 68 0
c Var 'grid_00001_00002' direct represents '5' with '69'
66 -68 69 0
-69 68 0
-69 -66 0
c Var 'grid_00001_00002' direct represents '6' with '-68'
59 61 63 65 67 69 -68 0
c Encoding variable: grid_00001_00003 with domain: int(0..6) (representing constraint )
c Both direct and order encoding.
c Var 'grid_00001_00003' order represents '0' with '70'
c Var 'grid_00001_00003' direct represents '0' with '70'
c Var 'grid_00001_00003' order represents '1' with '71'
-70 71 0
c Var 'grid_00001_00003' direct represents '1' with '72'
70 -71 72 0
-72 71 0
-72 -70 0
c Var 'grid_00001_00003' order represents '2' with '73'
-71 73 0
c Var 'grid_00001_00003' direct represents '2' with '74'
71 -73 74 0
-74 73 0
-74 -71 0
c Var 'grid_00001_00003' order represents '3' with '75'
-73 75 0
c Var 'grid_00001_00003' direct represents '3' with '76'
73 -75 76 0
-76 75 0
-76 -73 0
c Var 'grid_00001_00003' order represents '4' with '77'
-75 77 0
c Var 'grid_00001_00003' direct represents '4' with '78'
75 -77 78 0
-78 77 0
-78 -75 0
c Var 'grid_00001_00003' order represents '5' with '79'
-77 79 0
c Var 'grid_00001_00003' direct represents '5' with '80'
77 -79 80 0
-80 79 0
-80 -77 0
c Var 'grid_00001_00003' direct represents '6' with '-79'
70 72 74 76 78 80 -79 0
c Encoding variable: grid_00001_00004 with domain: int(0..6) (representing constraint )
c Both direct and order encoding.
c Var 'grid_00001_00004' order represents '0' with '81'
c Var 'grid_00001_00004' direct represents '0' with '81'
c Var 'grid_00001_00004' order represents '1' with '82'
-81 82 0
c Var 'grid_00001_00004' direct represents '1' with '83'
81 -82 83 0
-83 82 0
-83 -81 0
c Var 'grid_00001_00004' order represents '2' with '84'
-82 84 0
c Var 'grid_00001_00004' direct represents '2' with '85'
82 -84 85 0
-85 84 0
-85 -82 0
c Var 'grid_00001_00004' order represents '3' with '86'
-84 86 0
c Var 'grid_00001_00004' direct represents '3' with '87'
84 -86 87 0
-87 86 0
-87 -84 0
c Var 'grid_00001_00004' order represents '4' with '88'
-86 88 0
c Var 'grid_00001_00004' direct represents '4' with '89'
86 -88 89 0
-89 88 0
-89 -86 0
c Var 'grid_00001_00004' order represents '5' with '90'
-88 90 0
c Var 'grid_00001_00004' direct represents '5' with '91'
88 -90 91 0
-91 90 0
-91 -88 0
c Var 'grid_00001_00004' direct represents '6' with '-90'
81 83 85 87 89 91 -90 0
c Encoding variable: grid_00002_00000 with domain: int(0..6) (representing constraint )
c Both direct and order encoding.
c Var 'grid_00002_00000' order represents '0' with '92'
c Var 'grid_00002_00000' direct represents '0' with '92'
c Var 'grid_00002_00000' order represents '1' with '93'
-92 93 0
c Var 'grid_00002_00000' direct represents '1' with '94'
92 -93 94 0
-94 93 0
-94 -92 0
c Var 'grid_00002_00000' order represents '2' with '95'
-93 95 0
c Var 'grid_00002_00000' direct represents '2' with '96'
93 -95 96 0
-96 95 0
-96 -93 0
c Var 'grid_00002_00000' order represents '3' with '97'
-95 97 0
c Var 'grid_00002_00000' direct represents '3' with '98'
95 -97 98 0
-98 97 0
-98 -95 0
c Var 'grid_00002_00000' order represents '4' with '99'
-97 99 0
c Var 'grid_00002_00000' direct represents '4' with '100'
97 -99 100 0
-100 99 0
-100 -97 0
c Var 'grid_00002_00000' order represents '5' with '101'
-99 101 0
c Var 'grid_00002_00000' direct represents '5' with '102'
99 -101 102 0
-102 101 0
-102 -99 0
c Var 'grid_00002_00000' direct represents '6' with '-101'
92 94 96 98 100 102 -101 0
c Encoding variable: grid_00002_00001 with domain: int(0..6) (representing constraint )
c Both direct and order encoding.
c Var 'grid_00002_00001' order represents '0' with '103'
c Var 'grid_00002_00001' direct represents '0' with '103'
c Var 'grid_00002_00001' order represents '1' with '104'
-103 104 0
c Var 'grid_00002_00001' direct represents '1' with '105'
103 -104 105 0
-105 104 0
-105 -103 0
c Var 'grid_00002_00001' order represents '2' with '106'
-104 106 0
c Var 'grid_00002_00001' direct represents '2' with '107'
104 -106 107 0
-107 106 0
-107 -104 0
c Var 'grid_00002_00001' order represents '3' with '108'
-106 108 0
c Var 'grid_00002_00001' direct represents '3' with '109'
106 -108 109 0
-109 108 0
-109 -106 0
c Var 'grid_00002_00001' order represents '4' with '110'
-108 110 0
c Var 'grid_00002_00001' direct represents '4' with '111'
108 -110 111 0
-111 110 0
-111 -108 0
c Var 'grid_00002_00001' order represents '5' with '112'
-110 112 0
c Var 'grid_00002_00001' direct represents '5' with '113'
110 -112 113 0
-113 112 0
-113 -110 0
c Var 'grid_00002_00001' direct represents '6' with '-112'
103 105 107 109 111 113 -112 0
c Encoding variable: grid_00002_00002 with domain: int(0..6) (representing constraint )
c Both direct and order encoding.
c Var 'grid_00002_00002' order represents '0' with '114'
c Var 'grid_00002_00002' direct represents '0' with '114'
c Var 'grid_00002_00002' order represents '1' with '115'
-114 115 0
c Var 'grid_00002_00002' direct represents '1' with '116'
114 -115 116 0
-116 115 0
-116 -114 0
c Var 'grid_00002_00002' order represents '2' with '117'
-115 117 0
c Var 'grid_00002_00002' direct represents '2' with '118'
115 -117 118 0
-118 117 0
-118 -115 0
c Var 'grid_00002_00002' order represents '3' with '119'
-117 119 0
c Var 'grid_00002_00002' direct represents '3' with '120'
117 -119 120 0
-120 119 0
-120 -117 0
c Var 'grid_00002_00002' order represents '4' with '121'
-119 121 0
c Var 'grid_00002_00002' direct represents '4' with '122'
119 -121 122 0
-122 121 0
-122 -119 0
c Var 'grid_00002_00002' order represents '5' with '123'
-121 123 0
c Var 'grid_00002_00002' direct represents '5' with '124'
121 -123 124 0
-124 123 0
-124 -121 0
c Var 'grid_00002_00002' direct represents '6' with '-123'
114 116 118 120 122 124 -123 0
c Encoding variable: grid_00002_00003 with domain: int(0..6) (representing constraint )
c Both direct and order encoding.
c Var 'grid_00002_00003' order represents '0' with '125'
c Var 'grid_00002_00003' direct represents '0' with '125'
c Var 'grid_00002_00003' order represents '1' with '126'
-125 126 0
c Var 'grid_00002_00003' direct represents '1' with '127'
125 -126 127 0
-127 126 0
-127 -125 0
c Var 'grid_00002_00003' order represents '2' with '128'
-126 128 0
c Var 'grid_00002_00003' direct represents '2' with '129'
126 -128 129 0
-129 128 0
-129 -126 0
c Var 'grid_00002_00003' order represents '3' with '130'
-128 130 0
c Var 'grid_00002_00003' direct represents '3' with '131'
128 -130 131 0
-131 130 0
-131 -128 0
c Var 'grid_00002_00003' order represents '4' with '132'
-130 132 0
c Var 'grid_00002_00003' direct represents '4' with '133'
130 -132 133 0
-133 132 0
-133 -130 0
c Var 'grid_00002_00003' order represents '5' with '134'
-132 134 0
c Var 'grid_00002_00003' direct represents '5' with '135'
132 -134 135 0
-135 134 0
-135 -132 0
c Var 'grid_00002_00003' direct represents '6' with '-134'
125 127 129 131 133 135 -134 0
c Encoding variable: grid_00002_00004 with domain: int(-3) (representing constraint )
c Var 'grid_00002_00004' direct represents '-3' with '136'
136 0
c Encoding variable: grid_00003_00000 with domain: int(0..6) (representing constraint )
c Both direct and order encoding.
c Var 'grid_00003_00000' order represents '0' with '137'
c Var 'grid_00003_00000' direct represents '0' with '137'
c Var 'grid_00003_00000' order represents '1' with '138'
-137 138 0
c Var 'grid_00003_00000' direct represents '1' with '139'
137 -138 139 0
-139 138 0
-139 -137 0
c Var 'grid_00003_00000' order represents '2' with '140'
-138 140 0
c Var 'grid_00003_00000' direct represents '2' with '141'
138 -140 141 0
-141 140 0
-141 -138 0
c Var 'grid_00003_00000' order represents '3' with '142'
-140 142 0
c Var 'grid_00003_00000' direct represents '3' with '143'
140 -142 143 0
-143 142 0
-143 -140 0
c Var 'grid_00003_00000' order represents '4' with '144'
-142 144 0
c Var 'grid_00003_00000' direct represents '4' with '145'
142 -144 145 0
-145 144 0
-145 -142 0
c Var 'grid_00003_00000' order represents '5' with '146'
-144 146 0
c Var 'grid_00003_00000' direct represents '5' with '147'
144 -146 147 0
-147 146 0
-147 -144 0
c Var 'grid_00003_00000' direct represents '6' with '-146'
137 139 141 143 145 147 -146 0
c Encoding variable: grid_00003_00001 with domain: int(0..6) (representing constraint )
c Both direct and order encoding.
c Var 'grid_00003_00001' order represents '0' with '148'
c Var 'grid_00003_00001' direct represents '0' with '148'
c Var 'grid_00003_00001' order represents '1' with '149'
-148 149 0
c Var 'grid_00003_00001' direct represents '1' with '150'
148 -149 150 0
-150 149 0
-150 -148 0
c Var 'grid_00003_00001' order represents '2' with '151'
-149 151 0
c Var 'grid_00003_00001' direct represents '2' with '152'
149 -151 152 0
-152 151 0
-152 -149 0
c Var 'grid_00003_00001' order represents '3' with '153'
-151 153 0
c Var 'grid_00003_00001' direct represents '3' with '154'
151 -153 154 0
-154 153 0
-154 -151 0
c Var 'grid_00003_00001' order represents '4' with '155'
-153 155 0
c Var 'grid_00003_00001' direct represents '4' with '156'
153 -155 156 0
-156 155 0
-156 -153 0
c Var 'grid_00003_00001' order represents '5' with '157'
-155 157 0
c Var 'grid_00003_00001' direct represents '5' with '158'
155 -157 158 0
-158 157 0
-158 -155 0
c Var 'grid_00003_00001' direct represents '6' with '-157'
148 150 152 154 156 158 -157 0
c Encoding variable: grid_00003_00002 with domain: int(-4) (representing constraint )
c Var 'grid_00003_00002' direct represents '-4' with '159'
159 0
c Encoding variable: grid_00003_00003 with domain: int(0..6) (representing constraint )
c Both direct and order encoding.
c Var 'grid_00003_00003' order represents '0' with '160'
c Var 'grid_00003_00003' direct represents '0' with '160'
c Var 'grid_00003_00003' order represents '1' with '161'
-160 161 0
c Var 'grid_00003_00003' direct represents '1' with '162'
160 -161 162 0
-162 161 0
-162 -160 0
c Var 'grid_00003_00003' order represents '2' with '163'
-161 163 0
c Var 'grid_00003_00003' direct represents '2' with '164'
161 -163 164 0
-164 163 0
-164 -161 0
c Var 'grid_00003_00003' order represents '3' with '165'
-163 165 0
c Var 'grid_00003_00003' direct represents '3' with '166'
163 -165 166 0
-166 165 0
-166 -163 0
c Var 'grid_00003_00003' order represents '4' with '167'
-165 167 0
c Var 'grid_00003_00003' direct represents '4' with '168'
165 -167 168 0
-168 167 0
-168 -165 0
c Var 'grid_00003_00003' order represents '5' with '169'
-167 169 0
c Var 'grid_00003_00003' direct represents '5' with '170'
167 -169 170 0
-170 169 0
-170 -167 0
c Var 'grid_00003_00003' direct represents '6' with '-169'
160 162 164 166 168 170 -169 0
c Encoding variable: grid_00003_00004 with domain: int(0..6) (representing constraint )
c Both direct and order encoding.
c Var 'grid_00003_00004' order represents '0' with '171'
c Var 'grid_00003_00004' direct represents '0' with '171'
c Var 'grid_00003_00004' order represents '1' with '172'
-171 172 0
c Var 'grid_00003_00004' direct represents '1' with '173'
171 -172 173 0
-173 172 0
-173 -171 0
c Var 'grid_00003_00004' order represents '2' with '174'
-172 174 0
c Var 'grid_00003_00004' direct represents '2' with '175'
172 -174 175 0
-175 174 0
-175 -172 0
c Var 'grid_00003_00004' order represents '3' with '176'
-174 176 0
c Var 'grid_00003_00004' direct represents '3' with '177'
174 -176 177 0
-177 176 0
-177 -174 0
c Var 'grid_00003_00004' order represents '4' with '178'
-176 178 0
c Var 'grid_00003_00004' direct represents '4' with '179'
176 -178 179 0
-179 178 0
-179 -176 0
c Var 'grid_00003_00004' order represents '5' with '180'
-178 180 0
c Var 'grid_00003_00004' direct represents '5' with '181'
178 -180 181 0
-181 180 0
-181 -178 0
c Var 'grid_00003_00004' direct represents '6' with '-180'
171 173 175 177 179 181 -180 0
c Encoding variable: grid_00004_00000 with domain: int(-5) (representing constraint )
c Var 'grid_00004_00000' direct represents '-5' with '182'
182 0
c Encoding variable: grid_00004_00001 with domain: int(0..6) (representing constraint )
c Both direct and order encoding.
c Var 'grid_00004_00001' order represents '0' with '183'
c Var 'grid_00004_00001' direct represents '0' with '183'
c Var 'grid_00004_00001' order represents '1' with '184'
-183 184 0
c Var 'grid_00004_00001' direct represents '1' with '185'
183 -184 185 0
-185 184 0
-185 -183 0
c Var 'grid_00004_00001' order represents '2' with '186'
-184 186 0
c Var 'grid_00004_00001' direct represents '2' with '187'
184 -186 187 0
-187 186 0
-187 -184 0
c Var 'grid_00004_00001' order represents '3' with '188'
-186 188 0
c Var 'grid_00004_00001' direct represents '3' with '189'
186 -188 189 0
-189 188 0
-189 -186 0
c Var 'grid_00004_00001' order represents '4' with '190'
-188 190 0
c Var 'grid_00004_00001' direct represents '4' with '191'
188 -190 191 0
-191 190 0
-191 -188 0
c Var 'grid_00004_00001' order represents '5' with '192'
-190 192 0
c Var 'grid_00004_00001' direct represents '5' with '193'
190 -192 193 0
-193 192 0
-193 -190 0
c Var 'grid_00004_00001' direct represents '6' with '-192'
183 185 187 189 191 193 -192 0
c Encoding variable: grid_00004_00002 with domain: int(0..6) (representing constraint )
c Both direct and order encoding.
c Var 'grid_00004_00002' order represents '0' with '194'
c Var 'grid_00004_00002' direct represents '0' with '194'
c Var 'grid_00004_00002' order represents '1' with '195'
-194 195 0
c Var 'grid_00004_00002' direct represents '1' with '196'
194 -195 196 0
-196 195 0
-196 -194 0
c Var 'grid_00004_00002' order represents '2' with '197'
-195 197 0
c Var 'grid_00004_00002' direct represents '2' with '198'
195 -197 198 0
-198 197 0
-198 -195 0
c Var 'grid_00004_00002' order represents '3' with '199'
-197 199 0
c Var 'grid_00004_00002' direct represents '3' with '200'
197 -199 200 0
-200 199 0
-200 -197 0
c Var 'grid_00004_00002' order represents '4' with '201'
-199 201 0
c Var 'grid_00004_00002' direct represents '4' with '202'
199 -201 202 0
-202 201 0
-202 -199 0
c Var 'grid_00004_00002' order represents '5' with '203'
-201 203 0
c Var 'grid_00004_00002' direct represents '5' with '204'
201 -203 204 0
-204 203 0
-204 -201 0
c Var 'grid_00004_00002' direct represents '6' with '-203'
194 196 198 200 202 204 -203 0
c Encoding variable: grid_00004_00003 with domain: int(-6) (representing constraint )
c Var 'grid_00004_00003' direct represents '-6' with '205'
205 0
c Encoding variable: grid_00004_00004 with domain: int(0..6) (representing constraint )
c Both direct and order encoding.
c Var 'grid_00004_00004' order represents '0' with '206'
c Var 'grid_00004_00004' direct represents '0' with '206'
c Var 'grid_00004_00004' order represents '1' with '207'
-206 207 0
c Var 'grid_00004_00004' direct represents '1' with '208'
206 -207 208 0
-208 207 0
-208 -206 0
c Var 'grid_00004_00004' order represents '2' with '209'
-207 209 0
c Var 'grid_00004_00004' direct represents '2' with '210'
207 -209 210 0
-210 209 0
-210 -207 0
c Var 'grid_00004_00004' order represents '3' with '211'
-209 211 0
c Var 'grid_00004_00004' direct represents '3' with '212'
209 -211 212 0
-212 211 0
-212 -209 0
c Var 'grid_00004_00004' order represents '4' with '213'
-211 213 0
c Var 'grid_00004_00004' direct represents '4' with '214'
211 -213 214 0
-214 213 0
-214 -211 0
c Var 'grid_00004_00004' order represents '5' with '215'
-213 215 0
c Var 'grid_00004_00004' direct represents '5' with '216'
213 -215 216 0
-216 215 0
-216 -213 0
c Var 'grid_00004_00004' direct represents '6' with '-215'
206 208 210 212 214 216 -215 0
c Encoding variable: adj_00000_00000_n00001_n00001 with domain: bool (representing constraint )
c Var 'adj_00000_00000_n00001_n00001' direct represents '0' with '-217'
c Var 'adj_00000_00000_n00001_n00001' direct represents '1' with '217'
c Var 'adj_00000_00000_n00001_n00001' order represents '1' with '1'
c Var 'adj_00000_00000_n00001_n00001' order represents '0' with '-217'
217 -217 0
c Encoding variable: adj_00000_00000_n00001_00000 with domain: bool (representing constraint )
c Var 'adj_00000_00000_n00001_00000' direct represents '0' with '-218'
c Var 'adj_00000_00000_n00001_00000' direct represents '1' with '218'
c Var 'adj_00000_00000_n00001_00000' order represents '1' with '1'
c Var 'adj_00000_00000_n00001_00000' order represents '0' with '-218'
218 -218 0
c Encoding variable: adj_00000_00000_n00001_00001 with domain: bool (representing constraint )
c Var 'adj_00000_00000_n00001_00001' direct represents '0' with '-219'
c Var 'adj_00000_00000_n00001_00001' direct represents '1' with '219'
c Var 'adj_00000_00000_n00001_00001' order represents '1' with '1'
c Var 'adj_00000_00000_n00001_00001' order represents '0' with '-219'
219 -219 0
c Encoding variable: adj_00000_00000_00000_n00001 with domain: bool (representing constraint )
c Var 'adj_00000_00000_00000_n00001' direct represents '0' with '-220'
c Var 'adj_00000_00000_00000_n00001' direct represents '1' with '220'
c Var 'adj_00000_00000_00000_n00001' order represents '1' with '1'
c Var 'adj_00000_00000_00000_n00001' order represents '0' with '-220'
220 -220 0
c Encoding variable: adj_00000_00000_00000_00000 with domain: bool (representing constraint )
c Var 'adj_00000_00000_00000_00000' direct represents '0' with '-221'
c Var 'adj_00000_00000_00000_00000' direct represents '1' with '221'
c Var 'adj_00000_00000_00000_00000' order represents '1' with '1'
c Var 'adj_00000_00000_00000_00000' order represents '0' with '-221'
221 -221 0
c Encoding variable: adj_00000_00000_00000_00001 with domain: bool (representing constraint )
c Var 'adj_00000_00000_00000_00001' direct represents '0' with '-222'
c Var 'adj_00000_00000_00000_00001' direct represents '1' with '222'
c Var 'adj_00000_00000_00000_00001' order represents '1' with '1'
c Var 'adj_00000_00000_00000_00001' order represents '0' with '-222'
222 -222 0
c Encoding variable: adj_00000_00000_00001_n00001 with domain: bool (representing constraint )
c Var 'adj_00000_00000_00001_n00001' direct represents '0' with '-223'
c Var 'adj_00000_00000_00001_n00001' direct represents '1' with '223'
c Var 'adj_00000_00000_00001_n00001' order represents '1' with '1'
c Var 'adj_00000_00000_00001_n00001' order represents '0' with '-223'
223 -223 0
c Encoding variable: adj_00000_00000_00001_00000 with domain: bool (representing constraint )
c Var 'adj_00000_00000_00001_00000' direct represents '0' with '-224'
c Var 'adj_00000_00000_00001_00000' direct represents '1' with '224'
c Var 'adj_00000_00000_00001_00000' order represents '1' with '1'
c Var 'adj_00000_00000_00001_00000' order represents '0' with '-224'
224 -224 0
c Encoding variable: adj_00000_00000_00001_00001 with domain: bool (representing constraint )
c Var 'adj_00000_00000_00001_00001' direct represents '0' with '-225'
c Var 'adj_00000_00000_00001_00001' direct represents '1' with '225'
c Var 'adj_00000_00000_00001_00001' order represents '1' with '1'
c Var 'adj_00000_00000_00001_00001' order represents '0' with '-225'
c Encoding variable: adj_00000_00001_n00001_n00001 with domain: bool (representing constraint )
c Var 'adj_00000_00001_n00001_n00001' direct represents '0' with '-226'
c Var 'adj_00000_00001_n00001_n00001' direct represents '1' with '226'
c Var 'adj_00000_00001_n00001_n00001' order represents '1' with '1'
c Var 'adj_00000_00001_n00001_n00001' order represents '0' with '-226'
226 -226 0
c Encoding variable: adj_00000_00001_n00001_00000 with domain: bool (representing constraint )
c Var 'adj_00000_00001_n00001_00000' direct represents '0' with '-227'
c Var 'adj_00000_00001_n00001_00000' direct represents '1' with '227'
c Var 'adj_00000_00001_n00001_00000' order represents '1' with '1'
c Var 'adj_00000_00001_n00001_00000' order represents '0' with '-227'
227 -227 0
c Encoding variable: adj_00000_00001_n00001_00001 with domain: bool (representing constraint )
c Var 'adj_00000_00001_n00001_00001' direct represents '0' with '-228'
c Var 'adj_00000_00001_n00001_00001' direct represents '1' with '228'
c Var 'adj_00000_00001_n00001_00001' order represents '1' with '1'
c Var 'adj_00000_00001_n00001_00001' order represents '0' with '-228'
228 -228 0
c Encoding variable: adj_00000_00001_00000_n00001 with domain: bool (representing constraint )
c Var 'adj_00000_00001_00000_n00001' direct represents '0' with '-229'
c Var 'adj_00000_00001_00000_n00001' direct represents '1' with '229'
c Var 'adj_00000_00001_00000_n00001' order represents '1' with '1'
c Var 'adj_00000_00001_00000_n00001' order represents '0' with '-229'
c Encoding variable: adj_00000_00001_00000_00000 with domain: bool (representing constraint )
c Var 'adj_00000_00001_00000_00000' direct represents '0' with '-230'
c Var 'adj_00000_00001_00000_00000' direct represents '1' with '230'
c Var 'adj_00000_00001_00000_00000' order represents '1' with '1'
c Var 'adj_00000_00001_00000_00000' order represents '0' with '-230'
230 -230 0
c Encoding variable: adj_00000_00001_00000_00001 with domain: bool (representing constraint )
c Var 'adj_00000_00001_00000_00001' direct represents '0' with '-231'
c Var 'adj_00000_00001_00000_00001' direct represents '1' with '231'
c Var 'adj_00000_00001_00000_00001' order represents '1' with '1'
c Var 'adj_00000_00001_00000_00001' order represents '0' with '-231'
231 -231 0
c Encoding variable: adj_00000_00001_00001_n00001 with domain: bool (representing constraint )
c Var 'adj_00000_00001_00001_n00001' direct represents '0' with '-232'
c Var 'adj_00000_00001_00001_n00001' direct represents '1' with '232'
c Var 'adj_00000_00001_00001_n00001' order represents '1' with '1'
c Var 'adj_00000_00001_00001_n00001' order represents '0' with '-232'
232 -232 0
c Encoding variable: adj_00000_00001_00001_00000 with domain: bool (representing constraint )
c Var 'adj_00000_00001_00001_00000' direct represents '0' with '-233'
c Var 'adj_00000_00001_00001_00000' direct represents '1' with '233'
c Var 'adj_00000_00001_00001_00000' order represents '1' with '1'
c Var 'adj_00000_00001_00001_00000' order represents '0' with '-233'
c Encoding variable: adj_00000_00001_00001_00001 with domain: bool (representing constraint )
c Var 'adj_00000_00001_00001_00001' direct represents '0' with '-234'
c Var 'adj_00000_00001_00001_00001' direct represents '1' with '234'
c Var 'adj_00000_00001_00001_00001' order represents '1' with '1'
c Var 'adj_00000_00001_00001_00001' order represents '0' with '-234'
c Encoding variable: adj_00000_00002_n00001_n00001 with domain: bool (representing constraint )
c Var 'adj_00000_00002_n00001_n00001' direct represents '0' with '-235'
c Var 'adj_00000_00002_n00001_n00001' direct represents '1' with '235'
c Var 'adj_00000_00002_n00001_n00001' order represents '1' with '1'
c Var 'adj_00000_00002_n00001_n00001' order represents '0' with '-235'
235 -235 0
c Encoding variable: adj_00000_00002_n00001_00000 with domain: bool (representing constraint )
c Var 'adj_00000_00002_n00001_00000' direct represents '0' with '-236'
c Var 'adj_00000_00002_n00001_00000' direct represents '1' with '236'
c Var 'adj_00000_00002_n00001_00000' order represents '1' with '1'
c Var 'adj_00000_00002_n00001_00000' order represents '0' with '-236'
236 -236 0
c Encoding variable: adj_00000_00002_n00001_00001 with domain: bool (representing constraint )
c Var 'adj_00000_00002_n00001_00001' direct represents '0' with '-237'
c Var 'adj_00000_00002_n00001_00001' direct represents '1' with '237'
c Var 'adj_00000_00002_n00001_00001' order represents '1' with '1'
c Var 'adj_00000_00002_n00001_00001' order represents '0' with '-237'
237 -237 0
c Encoding variable: adj_00000_00002_00000_n00001 with domain: bool (representing constraint )
c Var 'adj_00000_00002_00000_n00001' direct represents '0' with '-238'
c Var 'adj_00000_00002_00000_n00001' direct represents '1' with '238'
c Var 'adj_00000_00002_00000_n00001' order represents '1' with '1'
c Var 'adj_00000_00002_00000_n00001' order represents '0' with '-238'
c Encoding variable: adj_00000_00002_00000_00000 with domain: bool (representing constraint )
c Var 'adj_00000_00002_00000_00000' direct represents '0' with '-239'
c Var 'adj_00000_00002_00000_00000' direct represents '1' with '239'
c Var 'adj_00000_00002_00000_00000' order represents '1' with '1'
c Var 'adj_00000_00002_00000_00000' order represents '0' with '-239'
239 -239 0
c Encoding variable: adj_00000_00002_00000_00001 with domain: bool (representing constraint )
c Var 'adj_00000_00002_00000_00001' direct represents '0' with '-240'
c Var 'adj_00000_00002_00000_00001' direct represents '1' with '240'
c Var 'adj_00000_00002_00000_00001' order represents '1' with '1'
c Var 'adj_00000_00002_00000_00001' order represents '0' with '-240'
240 -240 0
c Encoding variable: adj_00000_00002_00001_n00001 with domain: bool (representing constraint )
c Var 'adj_00000_00002_00001_n00001' direct represents '0' with '-241'
c Var 'adj_00000_00002_00001_n00001' direct represents '1' with '241'
c Var 'adj_00000_00002_00001_n00001' order represents '1' with '1'
c Var 'adj_00000_00002_00001_n00001' order represents '0' with '-241'
c Encoding variable: adj_00000_00002_00001_00000 with domain: bool (representing constraint )
c Var 'adj_00000_00002_00001_00000' direct represents '0' with '-242'
c Var 'adj_00000_00002_00001_00000' direct represents '1' with '242'
c Var 'adj_00000_00002_00001_00000' order represents '1' with '1'
c Var 'adj_00000_00002_00001_00000' order represents '0' with '-242'
c Encoding variable: adj_00000_00002_00001_00001 with domain: bool (representing constraint )
c Var 'adj_00000_00002_00001_00001' direct represents '0' with '-243'
c Var 'adj_00000_00002_00001_00001' direct represents '1' with '243'
c Var 'adj_00000_00002_00001_00001' order represents '1' with '1'
c Var 'adj_00000_00002_00001_00001' order represents '0' with '-243'
c Encoding variable: adj_00000_00003_n00001_n00001 with domain: bool (representing constraint )
c Var 'adj_00000_00003_n00001_n00001' direct represents '0' with '-244'
c Var 'adj_00000_00003_n00001_n00001' direct represents '1' with '244'
c Var 'adj_00000_00003_n00001_n00001' order represents '1' with '1'
c Var 'adj_00000_00003_n00001_n00001' order represents '0' with '-244'
244 -244 0
c Encoding variable: adj_00000_00003_n00001_00000 with domain: bool (representing constraint )
c Var 'adj_00000_00003_n00001_00000' direct represents '0' with '-245'
c Var 'adj_00000_00003_n00001_00000' direct represents '1' with '245'
c Var 'adj_00000_00003_n00001_00000' order represents '1' with '1'
c Var 'adj_00000_00003_n00001_00000' order represents '0' with '-245'
245 -245 0
c Encoding variable: adj_00000_00003_n00001_00001 with domain: bool (representing constraint )
c Var 'adj_00000_00003_n00001_00001' direct represents '0' with '-246'
c Var 'adj_00000_00003_n00001_00001' direct represents '1' with '246'
c Var 'adj_00000_00003_n00001_00001' order represents '1' with '1'
c Var 'adj_00000_00003_n00001_00001' order represents '0' with '-246'
246 -246 0
c Encoding variable: adj_00000_00003_00000_n00001 with domain: bool (representing constraint )
c Var 'adj_00000_00003_00000_n00001' direct represents '0' with '-247'
c Var 'adj_00000_00003_00000_n00001' direct represents '1' with '247'
c Var 'adj_00000_00003_00000_n00001' order represents '1' with '1'
c Var 'adj_00000_00003_00000_n00001' order represents '0' with '-247'
c Encoding variable: adj_00000_00003_00000_00000 with domain: bool (representing constraint )
c Var 'adj_00000_00003_00000_00000' direct represents '0' with '-248'
c Var 'adj_00000_00003_00000_00000' direct represents '1' with '248'
c Var 'adj_00000_00003_00000_00000' order represents '1' with '1'
c Var 'adj_00000_00003_00000_00000' order represents '0' with '-248'
248 -248 0
c Encoding variable: adj_00000_00003_00000_00001 with domain: bool (representing constraint )
c Var 'adj_00000_00003_00000_00001' direct represents '0' with '-249'
c Var 'adj_00000_00003_00000_00001' direct represents '1' with '249'
c Var 'adj_00000_00003_00000_00001' order represents '1' with '1'
c Var 'adj_00000_00003_00000_00001' order represents '0' with '-249'
249 -249 0
c Encoding variable: adj_00000_00003_00001_n00001 with domain: bool (representing constraint )
c Var 'adj_00000_00003_00001_n00001' direct represents '0' with '-250'
c Var 'adj_00000_00003_00001_n00001' direct represents '1' with '250'
c Var 'adj_00000_00003_00001_n00001' order represents '1' with '1'
c Var 'adj_00000_00003_00001_n00001' order represents '0' with '-250'
c Encoding variable: adj_00000_00003_00001_00000 with domain: bool (representing constraint )
c Var 'adj_00000_00003_00001_00000' direct represents '0' with '-251'
c Var 'adj_00000_00003_00001_00000' direct represents '1' with '251'
c Var 'adj_00000_00003_00001_00000' order represents '1' with '1'
c Var 'adj_00000_00003_00001_00000' order represents '0' with '-251'
c Encoding variable: adj_00000_00003_00001_00001 with domain: bool (representing constraint )
c Var 'adj_00000_00003_00001_00001' direct represents '0' with '-252'
c Var 'adj_00000_00003_00001_00001' direct represents '1' with '252'
c Var 'adj_00000_00003_00001_00001' order represents '1' with '1'
c Var 'adj_00000_00003_00001_00001' order represents '0' with '-252'
c Encoding variable: adj_00000_00004_n00001_n00001 with domain: bool (representing constraint )
c Var 'adj_00000_00004_n00001_n00001' direct represents '0' with '-253'
c Var 'adj_00000_00004_n00001_n00001' direct represents '1' with '253'
c Var 'adj_00000_00004_n00001_n00001' order represents '1' with '1'
c Var 'adj_00000_00004_n00001_n00001' order represents '0' with '-253'
253 -253 0
c Encoding variable: adj_00000_00004_n00001_00000 with domain: bool (representing constraint )
c Var 'adj_00000_00004_n00001_00000' direct represents '0' with '-254'
c Var 'adj_00000_00004_n00001_00000' direct represents '1' with '254'
c Var 'adj_00000_00004_n00001_00000' order represents '1' with '1'
c Var 'adj_00000_00004_n00001_00000' order represents '0' with '-254'
254 -254 0
c Encoding variable: adj_00000_00004_n00001_00001 with domain: bool (representing constraint )
c Var 'adj_00000_00004_n00001_00001' direct represents '0' with '-255'
c Var 'adj_00000_00004_n00001_00001' direct represents '1' with '255'
c Var 'adj_00000_00004_n00001_00001' order represents '1' with '1'
c Var 'adj_00000_00004_n00001_00001' order represents '0' with '-255'
255 -255 0
c Encoding variable: adj_00000_00004_00000_n00001 with domain: bool (representing constraint )
c Var 'adj_00000_00004_00000_n00001' direct represents '0' with '-256'
c Var 'adj_00000_00004_00000_n00001' direct represents '1' with '256'
c Var 'adj_00000_00004_00000_n00001' order represents '1' with '1'
c Var 'adj_00000_00004_00000_n00001' order represents '0' with '-256'
256 -256 0
c Encoding variable: adj_00000_00004_00000_00000 with domain: bool (representing constraint )
c Var 'adj_00000_00004_00000_00000' direct represents '0' with '-257'
c Var 'adj_00000_00004_00000_00000' direct represents '1' with '257'
c Var 'adj_00000_00004_00000_00000' order represents '1' with '1'
c Var 'adj_00000_00004_00000_00000' order represents '0' with '-257'
257 -257 0
c Encoding variable: adj_00000_00004_00000_00001 with domain: bool (representing constraint )
c Var 'adj_00000_00004_00000_00001' direct represents '0' with '-258'
c Var 'adj_00000_00004_00000_00001' direct represents '1' with '258'
c Var 'adj_00000_00004_00000_00001' order represents '1' with '1'
c Var 'adj_00000_00004_00000_00001' order represents '0' with '-258'
258 -258 0
c Encoding variable: adj_00000_00004_00001_n00001 with domain: bool (representing constraint )
c Var 'adj_00000_00004_00001_n00001' direct represents '0' with '-259'
c Var 'adj_00000_00004_00001_n00001' direct represents '1' with '259'
c Var 'adj_00000_00004_00001_n00001' order represents '1' with '1'
c Var 'adj_00000_00004_00001_n00001' order represents '0' with '-259'
259 -259 0
c Encoding variable: adj_00000_00004_00001_00000 with domain: bool (representing constraint )
c Var 'adj_00000_00004_00001_00000' direct represents '0' with '-260'
c Var 'adj_00000_00004_00001_00000' direct represents '1' with '260'
c Var 'adj_00000_00004_00001_00000' order represents '1' with '1'
c Var 'adj_00000_00004_00001_00000' order represents '0' with '-260'
260 -260 0
c Encoding variable: adj_00000_00004_00001_00001 with domain: bool (representing constraint )
c Var 'adj_00000_00004_00001_00001' direct represents '0' with '-261'
c Var 'adj_00000_00004_00001_00001' direct represents '1' with '261'
c Var 'adj_00000_00004_00001_00001' order represents '1' with '1'
c Var 'adj_00000_00004_00001_00001' order represents '0' with '-261'
261 -261 0
c Encoding variable: adj_00001_00000_n00001_n00001 with domain: bool (representing constraint )
c Var 'adj_00001_00000_n00001_n00001' direct represents '0' with '-262'
c Var 'adj_00001_00000_n00001_n00001' direct represents '1' with '262'
c Var 'adj_00001_00000_n00001_n00001' order represents '1' with '1'
c Var 'adj_00001_00000_n00001_n00001' order represents '0' with '-262'
262 -262 0
c Encoding variable: adj_00001_00000_n00001_00000 with domain: bool (representing constraint )
c Var 'adj_00001_00000_n00001_00000' direct represents '0' with '-263'
c Var 'adj_00001_00000_n00001_00000' direct represents '1' with '263'
c Var 'adj_00001_00000_n00001_00000' order represents '1' with '1'
c Var 'adj_00001_00000_n00001_00000' order represents '0' with '-263'
263 -263 0
c Encoding variable: adj_00001_00000_n00001_00001 with domain: bool (representing constraint )
c Var 'adj_00001_00000_n00001_00001' direct represents '0' with '-264'
c Var 'adj_00001_00000_n00001_00001' direct represents '1' with '264'
c Var 'adj_00001_00000_n00001_00001' order represents '1' with '1'
c Var 'adj_00001_00000_n00001_00001' order represents '0' with '-264'
264 -264 0
c Encoding variable: adj_00001_00000_00000_n00001 with domain: bool (representing constraint )
c Var 'adj_00001_00000_00000_n00001' direct represents '0' with '-265'
c Var 'adj_00001_00000_00000_n00001' direct represents '1' with '265'
c Var 'adj_00001_00000_00000_n00001' order represents '1' with '1'
c Var 'adj_00001_00000_00000_n00001' order represents '0' with '-265'
265 -265 0
c Encoding variable: adj_00001_00000_00000_00000 with domain: bool (representing constraint )
c Var 'adj_00001_00000_00000_00000' direct represents '0' with '-266'
c Var 'adj_00001_00000_00000_00000' direct represents '1' with '266'
c Var 'adj_00001_00000_00000_00000' order represents '1' with '1'
c Var 'adj_00001_00000_00000_00000' order represents '0' with '-266'
266 -266 0
c Encoding variable: adj_00001_00000_00000_00001 with domain: bool (representing constraint )
c Var 'adj_00001_00000_00000_00001' direct represents '0' with '-267'
c Var 'adj_00001_00000_00000_00001' direct represents '1' with '267'
c Var 'adj_00001_00000_00000_00001' order represents '1' with '1'
c Var 'adj_00001_00000_00000_00001' order represents '0' with '-267'
267 -267 0
c Encoding variable: adj_00001_00000_00001_n00001 with domain: bool (representing constraint )
c Var 'adj_00001_00000_00001_n00001' direct represents '0' with '-268'
c Var 'adj_00001_00000_00001_n00001' direct represents '1' with '268'
c Var 'adj_00001_00000_00001_n00001' order represents '1' with '1'
c Var 'adj_00001_00000_00001_n00001' order represents '0' with '-268'
268 -268 0
c Encoding variable: adj_00001_00000_00001_00000 with domain: bool (representing constraint )
c Var 'adj_00001_00000_00001_00000' direct represents '0' with '-269'
c Var 'adj_00001_00000_00001_00000' direct represents '1' with '269'
c Var 'adj_00001_00000_00001_00000' order represents '1' with '1'
c Var 'adj_00001_00000_00001_00000' order represents '0' with '-269'
269 -269 0
c Encoding variable: adj_00001_00000_00001_00001 with domain: bool (representing constraint )
c Var 'adj_00001_00000_00001_00001' direct represents '0' with '-270'
c Var 'adj_00001_00000_00001_00001' direct represents '1' with '270'
c Var 'adj_00001_00000_00001_00001' order represents '1' with '1'
c Var 'adj_00001_00000_00001_00001' order represents '0' with '-270'
270 -270 0
c Encoding variable: adj_00001_00001_n00001_n00001 with domain: bool (representing constraint )
c Var 'adj_00001_00001_n00001_n00001' direct represents '0' with '-271'
c Var 'adj_00001_00001_n00001_n00001' direct represents '1' with '271'
c Var 'adj_00001_00001_n00001_n00001' order represents '1' with '1'
c Var 'adj_00001_00001_n00001_n00001' order represents '0' with '-271'
271 -271 0
c Encoding variable: adj_00001_00001_n00001_00000 with domain: bool (representing constraint )
c Var 'adj_00001_00001_n00001_00000' direct represents '0' with '-272'
c Var 'adj_00001_00001_n00001_00000' direct represents '1' with '272'
c Var 'adj_00001_00001_n00001_00000' order represents '1' with '1'
c Var 'adj_00001_00001_n00001_00000' order represents '0' with '-272'
272 -272 0
c Encoding variable: adj_00001_00001_n00001_00001 with domain: bool (representing constraint )
c Var 'adj_00001_00001_n00001_00001' direct represents '0' with '-273'
c Var 'adj_00001_00001_n00001_00001' direct represents '1' with '273'
c Var 'adj_00001_00001_n00001_00001' order represents '1' with '1'
c Var 'adj_00001_00001_n00001_00001' order represents '0' with '-273'
273 -273 0
c Encoding variable: adj_00001_00001_00000_n00001 with domain: bool (representing constraint )
c Var 'adj_00001_00001_00000_n00001' direct represents '0' with '-274'
c Var 'adj_00001_00001_00000_n00001' direct represents '1' with '274'
c Var 'adj_00001_00001_00000_n00001' order represents '1' with '1'
c Var 'adj_00001_00001_00000_n00001' order represents '0' with '-274'
274 -274 0
c Encoding variable: adj_00001_00001_00000_00000 with domain: bool (representing constraint )
c Var 'adj_00001_00001_00000_00000' direct represents '0' with '-275'
c Var 'adj_00001_00001_00000_00000' direct represents '1' with '275'
c Var 'adj_00001_00001_00000_00000' order represents '1' with '1'
c Var 'adj_00001_00001_00000_00000' order represents '0' with '-275'
275 -275 0
c Encoding variable: adj_00001_00001_00000_00001 with domain: bool (representing constraint )
c Var 'adj_00001_00001_00000_00001' direct represents '0' with '-276'
c Var 'adj_00001_00001_00000_00001' direct represents '1' with '276'
c Var 'adj_00001_00001_00000_00001' order represents '1' with '1'
c Var 'adj_00001_00001_00000_00001' order represents '0' with '-276'
276 -276 0
c Encoding variable: adj_00001_00001_00001_n00001 with domain: bool (representing constraint )
c Var 'adj_00001_00001_00001_n00001' direct represents '0' with '-277'
c Var 'adj_00001_00001_00001_n00001' direct represents '1' with '277'
c Var 'adj_00001_00001_00001_n00001' order represents '1' with '1'
c Var 'adj_00001_00001_00001_n00001' order represents '0' with '-277'
c Encoding variable: adj_00001_00001_00001_00000 with domain: bool (representing constraint )
c Var 'adj_00001_00001_00001_00000' direct represents '0' with '-278'
c Var 'adj_00001_00001_00001_00000' direct represents '1' with '278'
c Var 'adj_00001_00001_00001_00000' order represents '1' with '1'
c Var 'adj_00001_00001_00001_00000' order represents '0' with '-278'
c Encoding variable: adj_00001_00001_00001_00001 with domain: bool (representing constraint )
c Var 'adj_00001_00001_00001_00001' direct represents '0' with '-279'
c Var 'adj_00001_00001_00001_00001' direct represents '1' with '279'
c Var 'adj_00001_00001_00001_00001' order represents '1' with '1'
c Var 'adj_00001_00001_00001_00001' order represents '0' with '-279'
c Encoding variable: adj_00001_00002_n00001_n00001 with domain: bool (representing constraint )
c Var 'adj_00001_00002_n00001_n00001' direct represents '0' with '-280'
c Var 'adj_00001_00002_n00001_n00001' direct represents '1' with '280'
c Var 'adj_00001_00002_n00001_n00001' order represents '1' with '1'
c Var 'adj_00001_00002_n00001_n00001' order represents '0' with '-280'
280 -280 0
c Encoding variable: adj_00001_00002_n00001_00000 with domain: bool (representing constraint )
c Var 'adj_00001_00002_n00001_00000' direct represents '0' with '-281'
c Var 'adj_00001_00002_n00001_00000' direct represents '1' with '281'
c Var 'adj_00001_00002_n00001_00000' order represents '1' with '1'
c Var 'adj_00001_00002_n00001_00000' order represents '0' with '-281'
281 -281 0
c Encoding variable: adj_00001_00002_n00001_00001 with domain: bool (representing constraint )
c Var 'adj_00001_00002_n00001_00001' direct represents '0' with '-282'
c Var 'adj_00001_00002_n00001_00001' direct represents '1' with '282'
c Var 'adj_00001_00002_n00001_00001' order represents '1' with '1'
c Var 'adj_00001_00002_n00001_00001' order represents '0' with '-282'
282 -282 0
c Encoding variable: adj_00001_00002_00000_n00001 with domain: bool (representing constraint )
c Var 'adj_00001_00002_00000_n00001' direct represents '0' with '-283'
c Var 'adj_00001_00002_00000_n00001' direct represents '1' with '283'
c Var 'adj_00001_00002_00000_n00001' order represents '1' with '1'
c Var 'adj_00001_00002_00000_n00001' order represents '0' with '-283'
c Encoding variable: adj_00001_00002_00000_00000 with domain: bool (representing constraint )
c Var 'adj_00001_00002_00000_00000' direct represents '0' with '-284'
c Var 'adj_00001_00002_00000_00000' direct represents '1' with '284'
c Var 'adj_00001_00002_00000_00000' order represents '1' with '1'
c Var 'adj_00001_00002_00000_00000' order represents '0' with '-284'
284 -284 0
c Encoding variable: adj_00001_00002_00000_00001 with domain: bool (representing constraint )
c Var 'adj_00001_00002_00000_00001' direct represents '0' with '-285'
c Var 'adj_00001_00002_00000_00001' direct represents '1' with '285'
c Var 'adj_00001_00002_00000_00001' order represents '1' with '1'
c Var 'adj_00001_00002_00000_00001' order represents '0' with '-285'
285 -285 0
c Encoding variable: adj_00001_00002_00001_n00001 with domain: bool (representing constraint )
c Var 'adj_00001_00002_00001_n00001' direct represents '0' with '-286'
c Var 'adj_00001_00002_00001_n00001' direct represents '1' with '286'
c Var 'adj_00001_00002_00001_n00001' order represents '1' with '1'
c Var 'adj_00001_00002_00001_n00001' order represents '0' with '-286'
c Encoding variable: adj_00001_00002_00001_00000 with domain: bool (representing constraint )
c Var 'adj_00001_00002_00001_00000' direct represents '0' with '-287'
c Var 'adj_00001_00002_00001_00000' direct represents '1' with '287'
c Var 'adj_00001_00002_00001_00000' order represents '1' with '1'
c Var 'adj_00001_00002_00001_00000' order represents '0' with '-287'
c Encoding variable: adj_00001_00002_00001_00001 with domain: bool (representing constraint )
c Var 'adj_00001_00002_00001_00001' direct represents '0' with '-288'
c Var 'adj_00001_00002_00001_00001' direct represents '1' with '288'
c Var 'adj_00001_00002_00001_00001' order represents '1' with '1'
c Var 'adj_00001_00002_00001_00001' order represents '0' with '-288'
c Encoding variable: adj_00001_00003_n00001_n00001 with domain: bool (representing constraint )
c Var 'adj_00001_00003_n00001_n00001' direct represents '0' with '-289'
c Var 'adj_00001_00003_n00001_n00001' direct represents '1' with '289'
c Var 'adj_00001_00003_n00001_n00001' order represents '1' with '1'
c Var 'adj_00001_00003_n00001_n00001' order represents '0' with '-289'
289 -289 0
c Encoding variable: adj_00001_00003_n00001_00000 with domain: bool (representing constraint )
c Var 'adj_00001_00003_n00001_00000' direct represents '0' with '-290'
c Var 'adj_00001_00003_n00001_00000' direct represents '1' with '290'
c Var 'adj_00001_00003_n00001_00000' order represents '1' with '1'
c Var 'adj_00001_00003_n00001_00000' order represents '0' with '-290'
290 -290 0
c Encoding variable: adj_00001_00003_n00001_00001 with domain: bool (representing constraint )
c Var 'adj_00001_00003_n00001_00001' direct represents '0' with '-291'
c Var 'adj_00001_00003_n00001_00001' direct represents '1' with '291'
c Var 'adj_00001_00003_n00001_00001' order represents '1' with '1'
c Var 'adj_00001_00003_n00001_00001' order represents '0' with '-291'
291 -291 0
c Encoding variable: adj_00001_00003_00000_n00001 with domain: bool (representing constraint )
c Var 'adj_00001_00003_00000_n00001' direct represents '0' with '-292'
c Var 'adj_00001_00003_00000_n00001' direct represents '1' with '292'
c Var 'adj_00001_00003_00000_n00001' order represents '1' with '1'
c Var 'adj_00001_00003_00000_n00001' order represents '0' with '-292'
c Encoding variable: adj_00001_00003_00000_00000 with domain: bool (representing constraint )
c Var 'adj_00001_00003_00000_00000' direct represents '0' with '-293'
c Var 'adj_00001_00003_00000_00000' direct represents '1' with '293'
c Var 'adj_00001_00003_00000_00000' order represents '1' with '1'
c Var 'adj_00001_00003_00000_00000' order represents '0' with '-293'
293 -293 0
c Encoding variable: adj_00001_00003_00000_00001 with domain: bool (representing constraint )
c Var 'adj_00001_00003_00000_00001' direct represents '0' with '-294'
c Var 'adj_00001_00003_00000_00001' direct represents '1' with '294'
c Var 'adj_00001_00003_00000_00001' order represents '1' with '1'
c Var 'adj_00001_00003_00000_00001' order represents '0' with '-294'
294 -294 0
c Encoding variable: adj_00001_00003_00001_n00001 with domain: bool (representing constraint )
c Var 'adj_00001_00003_00001_n00001' direct represents '0' with '-295'
c Var 'adj_00001_00003_00001_n00001' direct represents '1' with '295'
c Var 'adj_00001_00003_00001_n00001' order represents '1' with '1'
c Var 'adj_00001_00003_00001_n00001' order represents '0' with '-295'
c Encoding variable: adj_00001_00003_00001_00000 with domain: bool (representing constraint )
c Var 'adj_00001_00003_00001_00000' direct represents '0' with '-296'
c Var 'adj_00001_00003_00001_00000' direct represents '1' with '296'
c Var 'adj_00001_00003_00001_00000' order represents '1' with '1'
c Var 'adj_00001_00003_00001_00000' order represents '0' with '-296'
c Encoding variable: adj_00001_00003_00001_00001 with domain: bool (representing constraint )
c Var 'adj_00001_00003_00001_00001' direct represents '0' with '-297'
c Var 'adj_00001_00003_00001_00001' direct represents '1' with '297'
c Var 'adj_00001_00003_00001_00001' order represents '1' with '1'
c Var 'adj_00001_00003_00001_00001' order represents '0' with '-297'
297 -297 0
c Encoding variable: adj_00001_00004_n00001_n00001 with domain: bool (representing constraint )
c Var 'adj_00001_00004_n00001_n00001' direct represents '0' with '-298'
c Var 'adj_00001_00004_n00001_n00001' direct represents '1' with '298'
c Var 'adj_00001_00004_n00001_n00001' order represents '1' with '1'
c Var 'adj_00001_00004_n00001_n00001' order represents '0' with '-298'
298 -298 0
c Encoding variable: adj_00001_00004_n00001_00000 with domain: bool (representing constraint )
c Var 'adj_00001_00004_n00001_00000' direct represents '0' with '-299'
c Var 'adj_00001_00004_n00001_00000' direct represents '1' with '299'
c Var 'adj_00001_00004_n00001_00000' order represents '1' with '1'
c Var 'adj_00001_00004_n00001_00000' order represents '0' with '-299'
299 -299 0
c Encoding variable: adj_00001_00004_n00001_00001 with domain: bool (representing constraint )
c Var 'adj_00001_00004_n00001_00001' direct represents '0' with '-300'
c Var 'adj_00001_00004_n00001_00001' direct represents '1' with '300'
c Var 'adj_00001_00004_n00001_00001' order represents '1' with '1'
c Var 'adj_00001_00004_n00001_00001' order represents '0' with '-300'
300 -300 0
c Encoding variable: adj_00001_00004_00000_n00001 with domain: bool (representing constraint )
c Var 'adj_00001_00004_00000_n00001' direct represents '0' with '-301'
c Var 'adj_00001_00004_00000_n00001' direct represents '1' with '301'
c Var 'adj_00001_00004_00000_n00001' order represents '1' with '1'
c Var 'adj_00001_00004_00000_n00001' order represents '0' with '-301'
c Encoding variable: adj_00001_00004_00000_00000 with domain: bool (representing constraint )
c Var 'adj_00001_00004_00000_00000' direct represents '0' with '-302'
c Var 'adj_00001_00004_00000_00000' direct represents '1' with '302'
c Var 'adj_00001_00004_00000_00000' order represents '1' with '1'
c Var 'adj_00001_00004_00000_00000' order represents '0' with '-302'
302 -302 0
c Encoding variable: adj_00001_00004_00000_00001 with domain: bool (representing constraint )
c Var 'adj_00001_00004_00000_00001' direct represents '0' with '-303'
c Var 'adj_00001_00004_00000_00001' direct represents '1' with '303'
c Var 'adj_00001_00004_00000_00001' order represents '1' with '1'
c Var 'adj_00001_00004_00000_00001' order represents '0' with '-303'
303 -303 0
c Encoding variable: adj_00001_00004_00001_n00001 with domain: bool (representing constraint )
c Var 'adj_00001_00004_00001_n00001' direct represents '0' with '-304'
c Var 'adj_00001_00004_00001_n00001' direct represents '1' with '304'
c Var 'adj_00001_00004_00001_n00001' order represents '1' with '1'
c Var 'adj_00001_00004_00001_n00001' order represents '0' with '-304'
c Encoding variable: adj_00001_00004_00001_00000 with domain: bool (representing constraint )
c Var 'adj_00001_00004_00001_00000' direct represents '0' with '-305'
c Var 'adj_00001_00004_00001_00000' direct represents '1' with '305'
c Var 'adj_00001_00004_00001_00000' order represents '1' with '1'
c Var 'adj_00001_00004_00001_00000' order represents '0' with '-305'
305 -305 0
c Encoding variable: adj_00001_00004_00001_00001 with domain: bool (representing constraint )
c Var 'adj_00001_00004_00001_00001' direct represents '0' with '-306'
c Var 'adj_00001_00004_00001_00001' direct represents '1' with '306'
c Var 'adj_00001_00004_00001_00001' order represents '1' with '1'
c Var 'adj_00001_00004_00001_00001' order represents '0' with '-306'
306 -306 0
c Encoding variable: adj_00002_00000_n00001_n00001 with domain: bool (representing constraint )
c Var 'adj_00002_00000_n00001_n00001' direct represents '0' with '-307'
c Var 'adj_00002_00000_n00001_n00001' direct represents '1' with '307'
c Var 'adj_00002_00000_n00001_n00001' order represents '1' with '1'
c Var 'adj_00002_00000_n00001_n00001' order represents '0' with '-307'
307 -307 0
c Encoding variable: adj_00002_00000_n00001_00000 with domain: bool (representing constraint )
c Var 'adj_00002_00000_n00001_00000' direct represents '0' with '-308'
c Var 'adj_00002_00000_n00001_00000' direct represents '1' with '308'
c Var 'adj_00002_00000_n00001_00000' order represents '1' with '1'
c Var 'adj_00002_00000_n00001_00000' order represents '0' with '-308'
308 -308 0
c Encoding variable: adj_00002_00000_n00001_00001 with domain: bool (representing constraint )
c Var 'adj_00002_00000_n00001_00001' direct represents '0' with '-309'
c Var 'adj_00002_00000_n00001_00001' direct represents '1' with '309'
c Var 'adj_00002_00000_n00001_00001' order represents '1' with '1'
c Var 'adj_00002_00000_n00001_00001' order represents '0' with '-309'
309 -309 0
c Encoding variable: adj_00002_00000_00000_n00001 with domain: bool (representing constraint )
c Var 'adj_00002_00000_00000_n00001' direct represents '0' with '-310'
c Var 'adj_00002_00000_00000_n00001' direct represents '1' with '310'
c Var 'adj_00002_00000_00000_n00001' order represents '1' with '1'
c Var 'adj_00002_00000_00000_n00001' order represents '0' with '-310'
310 -310 0
c Encoding variable: adj_00002_00000_00000_00000 with domain: bool (representing constraint )
c Var 'adj_00002_00000_00000_00000' direct represents '0' with '-311'
c Var 'adj_00002_00000_00000_00000' direct represents '1' with '311'
c Var 'adj_00002_00000_00000_00000' order represents '1' with '1'
c Var 'adj_00002_00000_00000_00000' order represents '0' with '-311'
311 -311 0
c Encoding variable: adj_00002_00000_00000_00001 with domain: bool (representing constraint )
c Var 'adj_00002_00000_00000_00001' direct represents '0' with '-312'
c Var 'adj_00002_00000_00000_00001' direct represents '1' with '312'
c Var 'adj_00002_00000_00000_00001' order represents '1' with '1'
c Var 'adj_00002_00000_00000_00001' order represents '0' with '-312'
312 -312 0
c Encoding variable: adj_00002_00000_00001_n00001 with domain: bool (representing constraint )
c Var 'adj_00002_00000_00001_n00001' direct represents '0' with '-313'
c Var 'adj_00002_00000_00001_n00001' direct represents '1' with '313'
c Var 'adj_00002_00000_00001_n00001' order represents '1' with '1'
c Var 'adj_00002_00000_00001_n00001' order represents '0' with '-313'
313 -313 0
c Encoding variable: adj_00002_00000_00001_00000 with domain: bool (representing constraint )
c Var 'adj_00002_00000_00001_00000' direct represents '0' with '-314'
c Var 'adj_00002_00000_00001_00000' direct represents '1' with '314'
c Var 'adj_00002_00000_00001_00000' order represents '1' with '1'
c Var 'adj_00002_00000_00001_00000' order represents '0' with '-314'
c Encoding variable: adj_00002_00000_00001_00001 with domain: bool (representing constraint )
c Var 'adj_00002_00000_00001_00001' direct represents '0' with '-315'
c Var 'adj_00002_00000_00001_00001' direct represents '1' with '315'
c Var 'adj_00002_00000_00001_00001' order represents '1' with '1'
c Var 'adj_00002_00000_00001_00001' order represents '0' with '-315'
c Encoding variable: adj_00002_00001_n00001_n00001 with domain: bool (representing constraint )
c Var 'adj_00002_00001_n00001_n00001' direct represents '0' with '-316'
c Var 'adj_00002_00001_n00001_n00001' direct represents '1' with '316'
c Var 'adj_00002_00001_n00001_n00001' order represents '1' with '1'
c Var 'adj_00002_00001_n00001_n00001' order represents '0' with '-316'
316 -316 0
c Encoding variable: adj_00002_00001_n00001_00000 with domain: bool (representing constraint )
c Var 'adj_00002_00001_n00001_00000' direct represents '0' with '-317'
c Var 'adj_00002_00001_n00001_00000' direct represents '1' with '317'
c Var 'adj_00002_00001_n00001_00000' order represents '1' with '1'
c Var 'adj_00002_00001_n00001_00000' order represents '0' with '-317'
317 -317 0
c Encoding variable: adj_00002_00001_n00001_00001 with domain: bool (representing constraint )
c Var 'adj_00002_00001_n00001_00001' direct represents '0' with '-318'
c Var 'adj_00002_00001_n00001_00001' direct represents '1' with '318'
c Var 'adj_00002_00001_n00001_00001' order represents '1' with '1'
c Var 'adj_00002_00001_n00001_00001' order represents '0' with '-318'
318 -318 0
c Encoding variable: adj_00002_00001_00000_n00001 with domain: bool (representing constraint )
c Var 'adj_00002_00001_00000_n00001' direct represents '0' with '-319'
c Var 'adj_00002_00001_00000_n00001' direct represents '1' with '319'
c Var 'adj_00002_00001_00000_n00001' order represents '1' with '1'
c Var 'adj_00002_00001_00000_n00001' order represents '0' with '-319'
c Encoding variable: adj_00002_00001_00000_00000 with domain: bool (representing constraint )
c Var 'adj_00002_00001_00000_00000' direct represents '0' with '-320'
c Var 'adj_00002_00001_00000_00000' direct represents '1' with '320'
c Var 'adj_00002_00001_00000_00000' order represents '1' with '1'
c Var 'adj_00002_00001_00000_00000' order represents '0' with '-320'
320 -320 0
c Encoding variable: adj_00002_00001_00000_00001 with domain: bool (representing constraint )
c Var 'adj_00002_00001_00000_00001' direct represents '0' with '-321'
c Var 'adj_00002_00001_00000_00001' direct represents '1' with '321'
c Var 'adj_00002_00001_00000_00001' order represents '1' with '1'
c Var 'adj_00002_00001_00000_00001' order represents '0' with '-321'
321 -321 0
c Encoding variable: adj_00002_00001_00001_n00001 with domain: bool (representing constraint )
c Var 'adj_00002_00001_00001_n00001' direct represents '0' with '-322'
c Var 'adj_00002_00001_00001_n00001' direct represents '1' with '322'
c Var 'adj_00002_00001_00001_n00001' order represents '1' with '1'
c Var 'adj_00002_00001_00001_n00001' order represents '0' with '-322'
c Encoding variable: adj_00002_00001_00001_00000 with domain: bool (representing constraint )
c Var 'adj_00002_00001_00001_00000' direct represents '0' with '-323'
c Var 'adj_00002_00001_00001_00000' direct represents '1' with '323'
c Var 'adj_00002_00001_00001_00000' order represents '1' with '1'
c Var 'adj_00002_00001_00001_00000' order represents '0' with '-323'
c Encoding variable: adj_00002_00001_00001_00001 with domain: bool (representing constraint )
c Var 'adj_00002_00001_00001_00001' direct represents '0' with '-324'
c Var 'adj_00002_00001_00001_00001' direct represents '1' with '324'
c Var 'adj_00002_00001_00001_00001' order represents '1' with '1'
c Var 'adj_00002_00001_00001_00001' order represents '0' with '-324'
324 -324 0
c Encoding variable: adj_00002_00002_n00001_n00001 with domain: bool (representing constraint )
c Var 'adj_00002_00002_n00001_n00001' direct represents '0' with '-325'
c Var 'adj_00002_00002_n00001_n00001' direct represents '1' with '325'
c Var 'adj_00002_00002_n00001_n00001' order represents '1' with '1'
c Var 'adj_00002_00002_n00001_n00001' order represents '0' with '-325'
325 -325 0
c Encoding variable: adj_00002_00002_n00001_00000 with domain: bool (representing constraint )
c Var 'adj_00002_00002_n00001_00000' direct represents '0' with '-326'
c Var 'adj_00002_00002_n00001_00000' direct represents '1' with '326'
c Var 'adj_00002_00002_n00001_00000' order represents '1' with '1'
c Var 'adj_00002_00002_n00001_00000' order represents '0' with '-326'
326 -326 0
c Encoding variable: adj_00002_00002_n00001_00001 with domain: bool (representing constraint )
c Var 'adj_00002_00002_n00001_00001' direct represents '0' with '-327'
c Var 'adj_00002_00002_n00001_00001' direct represents '1' with '327'
c Var 'adj_00002_00002_n00001_00001' order represents '1' with '1'
c Var 'adj_00002_00002_n00001_00001' order represents '0' with '-327'
327 -327 0
c Encoding variable: adj_00002_00002_00000_n00001 with domain: bool (representing constraint )
c Var 'adj_00002_00002_00000_n00001' direct represents '0' with '-328'
c Var 'adj_00002_00002_00000_n00001' direct represents '1' with '328'
c Var 'adj_00002_00002_00000_n00001' order represents '1' with '1'
c Var 'adj_00002_00002_00000_n00001' order represents '0' with '-328'
c Encoding variable: adj_00002_00002_00000_00000 with domain: bool (representing constraint )
c Var 'adj_00002_00002_00000_00000' direct represents '0' with '-329'
c Var 'adj_00002_00002_00000_00000' direct represents '1' with '329'
c Var 'adj_00002_00002_00000_00000' order represents '1' with '1'
c Var 'adj_00002_00002_00000_00000' order represents '0' with '-329'
329 -329 0
c Encoding variable: adj_00002_00002_00000_00001 with domain: bool (representing constraint )
c Var 'adj_00002_00002_00000_00001' direct represents '0' with '-330'
c Var 'adj_00002_00002_00000_00001' direct represents '1' with '330'
c Var 'adj_00002_00002_00000_00001' order represents '1' with '1'
c Var 'adj_00002_00002_00000_00001' order represents '0' with '-330'
330 -330 0
c Encoding variable: adj_00002_00002_00001_n00001 with domain: bool (representing constraint )
c Var 'adj_00002_00002_00001_n00001' direct represents '0' with '-331'
c Var 'adj_00002_00002_00001_n00001' direct represents '1' with '331'
c Var 'adj_00002_00002_00001_n00001' order represents '1' with '1'
c Var 'adj_00002_00002_00001_n00001' order represents '0' with '-331'
c Encoding variable: adj_00002_00002_00001_00000 with domain: bool (representing constraint )
c Var 'adj_00002_00002_00001_00000' direct represents '0' with '-332'
c Var 'adj_00002_00002_00001_00000' direct represents '1' with '332'
c Var 'adj_00002_00002_00001_00000' order represents '1' with '1'
c Var 'adj_00002_00002_00001_00000' order represents '0' with '-332'
332 -332 0
c Encoding variable: adj_00002_00002_00001_00001 with domain: bool (representing constraint )
c Var 'adj_00002_00002_00001_00001' direct represents '0' with '-333'
c Var 'adj_00002_00002_00001_00001' direct represents '1' with '333'
c Var 'adj_00002_00002_00001_00001' order represents '1' with '1'
c Var 'adj_00002_00002_00001_00001' order represents '0' with '-333'
c Encoding variable: adj_00002_00003_n00001_n00001 with domain: bool (representing constraint )
c Var 'adj_00002_00003_n00001_n00001' direct represents '0' with '-334'
c Var 'adj_00002_00003_n00001_n00001' direct represents '1' with '334'
c Var 'adj_00002_00003_n00001_n00001' order represents '1' with '1'
c Var 'adj_00002_00003_n00001_n00001' order represents '0' with '-334'
334 -334 0
c Encoding variable: adj_00002_00003_n00001_00000 with domain: bool (representing constraint )
c Var 'adj_00002_00003_n00001_00000' direct represents '0' with '-335'
c Var 'adj_00002_00003_n00001_00000' direct represents '1' with '335'
c Var 'adj_00002_00003_n00001_00000' order represents '1' with '1'
c Var 'adj_00002_00003_n00001_00000' order represents '0' with '-335'
335 -335 0
c Encoding variable: adj_00002_00003_n00001_00001 with domain: bool (representing constraint )
c Var 'adj_00002_00003_n00001_00001' direct represents '0' with '-336'
c Var 'adj_00002_00003_n00001_00001' direct represents '1' with '336'
c Var 'adj_00002_00003_n00001_00001' order represents '1' with '1'
c Var 'adj_00002_00003_n00001_00001' order represents '0' with '-336'
336 -336 0
c Encoding variable: adj_00002_00003_00000_n00001 with domain: bool (representing constraint )
c Var 'adj_00002_00003_00000_n00001' direct represents '0' with '-337'
c Var 'adj_00002_00003_00000_n00001' direct represents '1' with '337'
c Var 'adj_00002_00003_00000_n00001' order represents '1' with '1'
c Var 'adj_00002_00003_00000_n00001' order represents '0' with '-337'
c Encoding variable: adj_00002_00003_00000_00000 with domain: bool (representing constraint )
c Var 'adj_00002_00003_00000_00000' direct represents '0' with '-338'
c Var 'adj_00002_00003_00000_00000' direct represents '1' with '338'
c Var 'adj_00002_00003_00000_00000' order represents '1' with '1'
c Var 'adj_00002_00003_00000_00000' order represents '0' with '-338'
338 -338 0
c Encoding variable: adj_00002_00003_00000_00001 with domain: bool (representing constraint )
c Var 'adj_00002_00003_00000_00001' direct represents '0' with '-339'
c Var 'adj_00002_00003_00000_00001' direct represents '1' with '339'
c Var 'adj_00002_00003_00000_00001' order represents '1' with '1'
c Var 'adj_00002_00003_00000_00001' order represents '0' with '-339'
339 -339 0
c Encoding variable: adj_00002_00003_00001_n00001 with domain: bool (representing constraint )
c Var 'adj_00002_00003_00001_n00001' direct represents '0' with '-340'
c Var 'adj_00002_00003_00001_n00001' direct represents '1' with '340'
c Var 'adj_00002_00003_00001_n00001' order represents '1' with '1'
c Var 'adj_00002_00003_00001_n00001' order represents '0' with '-340'
340 -340 0
c Encoding variable: adj_00002_00003_00001_00000 with domain: bool (representing constraint )
c Var 'adj_00002_00003_00001_00000' direct represents '0' with '-341'
c Var 'adj_00002_00003_00001_00000' direct represents '1' with '341'
c Var 'adj_00002_00003_00001_00000' order represents '1' with '1'
c Var 'adj_00002_00003_00001_00000' order represents '0' with '-341'
c Encoding variable: adj_00002_00003_00001_00001 with domain: bool (representing constraint )
c Var 'adj_00002_00003_00001_00001' direct represents '0' with '-342'
c Var 'adj_00002_00003_00001_00001' direct represents '1' with '342'
c Var 'adj_00002_00003_00001_00001' order represents '1' with '1'
c Var 'adj_00002_00003_00001_00001' order represents '0' with '-342'
c Encoding variable: adj_00002_00004_n00001_n00001 with domain: bool (representing constraint )
c Var 'adj_00002_00004_n00001_n00001' direct represents '0' with '-343'
c Var 'adj_00002_00004_n00001_n00001' direct represents '1' with '343'
c Var 'adj_00002_00004_n00001_n00001' order represents '1' with '1'
c Var 'adj_00002_00004_n00001_n00001' order represents '0' with '-343'
343 -343 0
c Encoding variable: adj_00002_00004_n00001_00000 with domain: bool (representing constraint )
c Var 'adj_00002_00004_n00001_00000' direct represents '0' with '-344'
c Var 'adj_00002_00004_n00001_00000' direct represents '1' with '344'
c Var 'adj_00002_00004_n00001_00000' order represents '1' with '1'
c Var 'adj_00002_00004_n00001_00000' order represents '0' with '-344'
344 -344 0
c Encoding variable: adj_00002_00004_n00001_00001 with domain: bool (representing constraint )
c Var 'adj_00002_00004_n00001_00001' direct represents '0' with '-345'
c Var 'adj_00002_00004_n00001_00001' direct represents '1' with '345'
c Var 'adj_00002_00004_n00001_00001' order represents '1' with '1'
c Var 'adj_00002_00004_n00001_00001' order represents '0' with '-345'
345 -345 0
c Encoding variable: adj_00002_00004_00000_n00001 with domain: bool (representing constraint )
c Var 'adj_00002_00004_00000_n00001' direct represents '0' with '-346'
c Var 'adj_00002_00004_00000_n00001' direct represents '1' with '346'
c Var 'adj_00002_00004_00000_n00001' order represents '1' with '1'
c Var 'adj_00002_00004_00000_n00001' order represents '0' with '-346'
346 -346 0
c Encoding variable: adj_00002_00004_00000_00000 with domain: bool (representing constraint )
c Var 'adj_00002_00004_00000_00000' direct represents '0' with '-347'
c Var 'adj_00002_00004_00000_00000' direct represents '1' with '347'
c Var 'adj_00002_00004_00000_00000' order represents '1' with '1'
c Var 'adj_00002_00004_00000_00000' order represents '0' with '-347'
347 -347 0
c Encoding variable: adj_00002_00004_00000_00001 with domain: bool (representing constraint )
c Var 'adj_00002_00004_00000_00001' direct represents '0' with '-348'
c Var 'adj_00002_00004_00000_00001' direct represents '1' with '348'
c Var 'adj_00002_00004_00000_00001' order represents '1' with '1'
c Var 'adj_00002_00004_00000_00001' order represents '0' with '-348'
348 -348 0
c Encoding variable: adj_00002_00004_00001_n00001 with domain: bool (representing constraint )
c Var 'adj_00002_00004_00001_n00001' direct represents '0' with '-349'
c Var 'adj_00002_00004_00001_n00001' direct represents '1' with '349'
c Var 'adj_00002_00004_00001_n00001' order represents '1' with '1'
c Var 'adj_00002_00004_00001_n00001' order represents '0' with '-349'
349 -349 0
c Encoding variable: adj_00002_00004_00001_00000 with domain: bool (representing constraint )
c Var 'adj_00002_00004_00001_00000' direct represents '0' with '-350'
c Var 'adj_00002_00004_00001_00000' direct represents '1' with '350'
c Var 'adj_00002_00004_00001_00000' order represents '1' with '1'
c Var 'adj_00002_00004_00001_00000' order represents '0' with '-350'
350 -350 0
c Encoding variable: adj_00002_00004_00001_00001 with domain: bool (representing constraint )
c Var 'adj_00002_00004_00001_00001' direct represents '0' with '-351'
c Var 'adj_00002_00004_00001_00001' direct represents '1' with '351'
c Var 'adj_00002_00004_00001_00001' order represents '1' with '1'
c Var 'adj_00002_00004_00001_00001' order represents '0' with '-351'
351 -351 0
c Encoding variable: adj_00003_00000_n00001_n00001 with domain: bool (representing constraint )
c Var 'adj_00003_00000_n00001_n00001' direct represents '0' with '-352'
c Var 'adj_00003_00000_n00001_n00001' direct represents '1' with '352'
c Var 'adj_00003_00000_n00001_n00001' order represents '1' with '1'
c Var 'adj_00003_00000_n00001_n00001' order represents '0' with '-352'
352 -352 0
c Encoding variable: adj_00003_00000_n00001_00000 with domain: bool (representing constraint )
c Var 'adj_00003_00000_n00001_00000' direct represents '0' with '-353'
c Var 'adj_00003_00000_n00001_00000' direct represents '1' with '353'
c Var 'adj_00003_00000_n00001_00000' order represents '1' with '1'
c Var 'adj_00003_00000_n00001_00000' order represents '0' with '-353'
353 -353 0
c Encoding variable: adj_00003_00000_n00001_00001 with domain: bool (representing constraint )
c Var 'adj_00003_00000_n00001_00001' direct represents '0' with '-354'
c Var 'adj_00003_00000_n00001_00001' direct represents '1' with '354'
c Var 'adj_00003_00000_n00001_00001' order represents '1' with '1'
c Var 'adj_00003_00000_n00001_00001' order represents '0' with '-354'
354 -354 0
c Encoding variable: adj_00003_00000_00000_n00001 with domain: bool (representing constraint )
c Var 'adj_00003_00000_00000_n00001' direct represents '0' with '-355'
c Var 'adj_00003_00000_00000_n00001' direct represents '1' with '355'
c Var 'adj_00003_00000_00000_n00001' order represents '1' with '1'
c Var 'adj_00003_00000_00000_n00001' order represents '0' with '-355'
355 -355 0
c Encoding variable: adj_00003_00000_00000_00000 with domain: bool (representing constraint )
c Var 'adj_00003_00000_00000_00000' direct represents '0' with '-356'
c Var 'adj_00003_00000_00000_00000' direct represents '1' with '356'
c Var 'adj_00003_00000_00000_00000' order represents '1' with '1'
c Var 'adj_00003_00000_00000_00000' order represents '0' with '-356'
356 -356 0
c Encoding variable: adj_00003_00000_00000_00001 with domain: bool (representing constraint )
c Var 'adj_00003_00000_00000_00001' direct represents '0' with '-357'
c Var 'adj_00003_00000_00000_00001' direct represents '1' with '357'
c Var 'adj_00003_00000_00000_00001' order represents '1' with '1'
c Var 'adj_00003_00000_00000_00001' order represents '0' with '-357'
357 -357 0
c Encoding variable: adj_00003_00000_00001_n00001 with domain: bool (representing constraint )
c Var 'adj_00003_00000_00001_n00001' direct represents '0' with '-358'
c Var 'adj_00003_00000_00001_n00001' direct represents '1' with '358'
c Var 'adj_00003_00000_00001_n00001' order represents '1' with '1'
c Var 'adj_00003_00000_00001_n00001' order represents '0' with '-358'
358 -358 0
c Encoding variable: adj_00003_00000_00001_00000 with domain: bool (representing constraint )
c Var 'adj_00003_00000_00001_00000' direct represents '0' with '-359'
c Var 'adj_00003_00000_00001_00000' direct represents '1' with '359'
c Var 'adj_00003_00000_00001_00000' order represents '1' with '1'
c Var 'adj_00003_00000_00001_00000' order represents '0' with '-359'
359 -359 0
c Encoding variable: adj_00003_00000_00001_00001 with domain: bool (representing constraint )
c Var 'adj_00003_00000_00001_00001' direct represents '0' with '-360'
c Var 'adj_00003_00000_00001_00001' direct represents '1' with '360'
c Var 'adj_00003_00000_00001_00001' order represents '1' with '1'
c Var 'adj_00003_00000_00001_00001' order represents '0' with '-360'
c Encoding variable: adj_00003_00001_n00001_n00001 with domain: bool (representing constraint )
c Var 'adj_00003_00001_n00001_n00001' direct represents '0' with '-361'
c Var 'adj_00003_00001_n00001_n00001' direct represents '1' with '361'
c Var 'adj_00003_00001_n00001_n00001' order represents '1' with '1'
c Var 'adj_00003_00001_n00001_n00001' order represents '0' with '-361'
361 -361 0
c Encoding variable: adj_00003_00001_n00001_00000 with domain: bool (representing constraint )
c Var 'adj_00003_00001_n00001_00000' direct represents '0' with '-362'
c Var 'adj_00003_00001_n00001_00000' direct represents '1' with '362'
c Var 'adj_00003_00001_n00001_00000' order represents '1' with '1'
c Var 'adj_00003_00001_n00001_00000' order represents '0' with '-362'
362 -362 0
c Encoding variable: adj_00003_00001_n00001_00001 with domain: bool (representing constraint )
c Var 'adj_00003_00001_n00001_00001' direct represents '0' with '-363'
c Var 'adj_00003_00001_n00001_00001' direct represents '1' with '363'
c Var 'adj_00003_00001_n00001_00001' order represents '1' with '1'
c Var 'adj_00003_00001_n00001_00001' order represents '0' with '-363'
363 -363 0
c Encoding variable: adj_00003_00001_00000_n00001 with domain: bool (representing constraint )
c Var 'adj_00003_00001_00000_n00001' direct represents '0' with '-364'
c Var 'adj_00003_00001_00000_n00001' direct represents '1' with '364'
c Var 'adj_00003_00001_00000_n00001' order represents '1' with '1'
c Var 'adj_00003_00001_00000_n00001' order represents '0' with '-364'
c Encoding variable: adj_00003_00001_00000_00000 with domain: bool (representing constraint )
c Var 'adj_00003_00001_00000_00000' direct represents '0' with '-365'
c Var 'adj_00003_00001_00000_00000' direct represents '1' with '365'
c Var 'adj_00003_00001_00000_00000' order represents '1' with '1'
c Var 'adj_00003_00001_00000_00000' order represents '0' with '-365'
365 -365 0
c Encoding variable: adj_00003_00001_00000_00001 with domain: bool (representing constraint )
c Var 'adj_00003_00001_00000_00001' direct represents '0' with '-366'
c Var 'adj_00003_00001_00000_00001' direct represents '1' with '366'
c Var 'adj_00003_00001_00000_00001' order represents '1' with '1'
c Var 'adj_00003_00001_00000_00001' order represents '0' with '-366'
366 -366 0
c Encoding variable: adj_00003_00001_00001_n00001 with domain: bool (representing constraint )
c Var 'adj_00003_00001_00001_n00001' direct represents '0' with '-367'
c Var 'adj_00003_00001_00001_n00001' direct represents '1' with '367'
c Var 'adj_00003_00001_00001_n00001' order represents '1' with '1'
c Var 'adj_00003_00001_00001_n00001' order represents '0' with '-367'
367 -367 0
c Encoding variable: adj_00003_00001_00001_00000 with domain: bool (representing constraint )
c Var 'adj_00003_00001_00001_00000' direct represents '0' with '-368'
c Var 'adj_00003_00001_00001_00000' direct represents '1' with '368'
c Var 'adj_00003_00001_00001_00000' order represents '1' with '1'
c Var 'adj_00003_00001_00001_00000' order represents '0' with '-368'
c Encoding variable: adj_00003_00001_00001_00001 with domain: bool (representing constraint )
c Var 'adj_00003_00001_00001_00001' direct represents '0' with '-369'
c Var 'adj_00003_00001_00001_00001' direct represents '1' with '369'
c Var 'adj_00003_00001_00001_00001' order represents '1' with '1'
c Var 'adj_00003_00001_00001_00001' order represents '0' with '-369'
c Encoding variable: adj_00003_00002_n00001_n00001 with domain: bool (representing constraint )
c Var 'adj_00003_00002_n00001_n00001' direct represents '0' with '-370'
c Var 'adj_00003_00002_n00001_n00001' direct represents '1' with '370'
c Var 'adj_00003_00002_n00001_n00001' order represents '1' with '1'
c Var 'adj_00003_00002_n00001_n00001' order represents '0' with '-370'
370 -370 0
c Encoding variable: adj_00003_00002_n00001_00000 with domain: bool (representing constraint )
c Var 'adj_00003_00002_n00001_00000' direct represents '0' with '-371'
c Var 'adj_00003_00002_n00001_00000' direct represents '1' with '371'
c Var 'adj_00003_00002_n00001_00000' order represents '1' with '1'
c Var 'adj_00003_00002_n00001_00000' order represents '0' with '-371'
371 -371 0
c Encoding variable: adj_00003_00002_n00001_00001 with domain: bool (representing constraint )
c Var 'adj_00003_00002_n00001_00001' direct represents '0' with '-372'
c Var 'adj_00003_00002_n00001_00001' direct represents '1' with '372'
c Var 'adj_00003_00002_n00001_00001' order represents '1' with '1'
c Var 'adj_00003_00002_n00001_00001' order represents '0' with '-372'
372 -372 0
c Encoding variable: adj_00003_00002_00000_n00001 with domain: bool (representing constraint )
c Var 'adj_00003_00002_00000_n00001' direct represents '0' with '-373'
c Var 'adj_00003_00002_00000_n00001' direct represents '1' with '373'
c Var 'adj_00003_00002_00000_n00001' order represents '1' with '1'
c Var 'adj_00003_00002_00000_n00001' order represents '0' with '-373'
373 -373 0
c Encoding variable: adj_00003_00002_00000_00000 with domain: bool (representing constraint )
c Var 'adj_00003_00002_00000_00000' direct represents '0' with '-374'
c Var 'adj_00003_00002_00000_00000' direct represents '1' with '374'
c Var 'adj_00003_00002_00000_00000' order represents '1' with '1'
c Var 'adj_00003_00002_00000_00000' order represents '0' with '-374'
374 -374 0
c Encoding variable: adj_00003_00002_00000_00001 with domain: bool (representing constraint )
c Var 'adj_00003_00002_00000_00001' direct represents '0' with '-375'
c Var 'adj_00003_00002_00000_00001' direct represents '1' with '375'
c Var 'adj_00003_00002_00000_00001' order represents '1' with '1'
c Var 'adj_00003_00002_00000_00001' order represents '0' with '-375'
375 -375 0
c Encoding variable: adj_00003_00002_00001_n00001 with domain: bool (representing constraint )
c Var 'adj_00003_00002_00001_n00001' direct represents '0' with '-376'
c Var 'adj_00003_00002_00001_n00001' direct represents '1' with '376'
c Var 'adj_00003_00002_00001_n00001' order represents '1' with '1'
c Var 'adj_00003_00002_00001_n00001' order represents '0' with '-376'
376 -376 0
c Encoding variable: adj_00003_00002_00001_00000 with domain: bool (representing constraint )
c Var 'adj_00003_00002_00001_00000' direct represents '0' with '-377'
c Var 'adj_00003_00002_00001_00000' direct represents '1' with '377'
c Var 'adj_00003_00002_00001_00000' order represents '1' with '1'
c Var 'adj_00003_00002_00001_00000' order represents '0' with '-377'
377 -377 0
c Encoding variable: adj_00003_00002_00001_00001 with domain: bool (representing constraint )
c Var 'adj_00003_00002_00001_00001' direct represents '0' with '-378'
c Var 'adj_00003_00002_00001_00001' direct represents '1' with '378'
c Var 'adj_00003_00002_00001_00001' order represents '1' with '1'
c Var 'adj_00003_00002_00001_00001' order represents '0' with '-378'
378 -378 0
c Encoding variable: adj_00003_00003_n00001_n00001 with domain: bool (representing constraint )
c Var 'adj_00003_00003_n00001_n00001' direct represents '0' with '-379'
c Var 'adj_00003_00003_n00001_n00001' direct represents '1' with '379'
c Var 'adj_00003_00003_n00001_n00001' order represents '1' with '1'
c Var 'adj_00003_00003_n00001_n00001' order represents '0' with '-379'
379 -379 0
c Encoding variable: adj_00003_00003_n00001_00000 with domain: bool (representing constraint )
c Var 'adj_00003_00003_n00001_00000' direct represents '0' with '-380'
c Var 'adj_00003_00003_n00001_00000' direct represents '1' with '380'
c Var 'adj_00003_00003_n00001_00000' order represents '1' with '1'
c Var 'adj_00003_00003_n00001_00000' order represents '0' with '-380'
380 -380 0
c Encoding variable: adj_00003_00003_n00001_00001 with domain: bool (representing constraint )
c Var 'adj_00003_00003_n00001_00001' direct represents '0' with '-381'
c Var 'adj_00003_00003_n00001_00001' direct represents '1' with '381'
c Var 'adj_00003_00003_n00001_00001' order represents '1' with '1'
c Var 'adj_00003_00003_n00001_00001' order represents '0' with '-381'
381 -381 0
c Encoding variable: adj_00003_00003_00000_n00001 with domain: bool (representing constraint )
c Var 'adj_00003_00003_00000_n00001' direct represents '0' with '-382'
c Var 'adj_00003_00003_00000_n00001' direct represents '1' with '382'
c Var 'adj_00003_00003_00000_n00001' order represents '1' with '1'
c Var 'adj_00003_00003_00000_n00001' order represents '0' with '-382'
382 -382 0
c Encoding variable: adj_00003_00003_00000_00000 with domain: bool (representing constraint )
c Var 'adj_00003_00003_00000_00000' direct represents '0' with '-383'
c Var 'adj_00003_00003_00000_00000' direct represents '1' with '383'
c Var 'adj_00003_00003_00000_00000' order represents '1' with '1'
c Var 'adj_00003_00003_00000_00000' order represents '0' with '-383'
383 -383 0
c Encoding variable: adj_00003_00003_00000_00001 with domain: bool (representing constraint )
c Var 'adj_00003_00003_00000_00001' direct represents '0' with '-384'
c Var 'adj_00003_00003_00000_00001' direct represents '1' with '384'
c Var 'adj_00003_00003_00000_00001' order represents '1' with '1'
c Var 'adj_00003_00003_00000_00001' order represents '0' with '-384'
384 -384 0
c Encoding variable: adj_00003_00003_00001_n00001 with domain: bool (representing constraint )
c Var 'adj_00003_00003_00001_n00001' direct represents '0' with '-385'
c Var 'adj_00003_00003_00001_n00001' direct represents '1' with '385'
c Var 'adj_00003_00003_00001_n00001' order represents '1' with '1'
c Var 'adj_00003_00003_00001_n00001' order represents '0' with '-385'
c Encoding variable: adj_00003_00003_00001_00000 with domain: bool (representing constraint )
c Var 'adj_00003_00003_00001_00000' direct represents '0' with '-386'
c Var 'adj_00003_00003_00001_00000' direct represents '1' with '386'
c Var 'adj_00003_00003_00001_00000' order represents '1' with '1'
c Var 'adj_00003_00003_00001_00000' order represents '0' with '-386'
386 -386 0
c Encoding variable: adj_00003_00003_00001_00001 with domain: bool (representing constraint )
c Var 'adj_00003_00003_00001_00001' direct represents '0' with '-387'
c Var 'adj_00003_00003_00001_00001' direct represents '1' with '387'
c Var 'adj_00003_00003_00001_00001' order represents '1' with '1'
c Var 'adj_00003_00003_00001_00001' order represents '0' with '-387'
c Encoding variable: adj_00003_00004_n00001_n00001 with domain: bool (representing constraint )
c Var 'adj_00003_00004_n00001_n00001' direct represents '0' with '-388'
c Var 'adj_00003_00004_n00001_n00001' direct represents '1' with '388'
c Var 'adj_00003_00004_n00001_n00001' order represents '1' with '1'
c Var 'adj_00003_00004_n00001_n00001' order represents '0' with '-388'
388 -388 0
c Encoding variable: adj_00003_00004_n00001_00000 with domain: bool (representing constraint )
c Var 'adj_00003_00004_n00001_00000' direct represents '0' with '-389'
c Var 'adj_00003_00004_n00001_00000' direct represents '1' with '389'
c Var 'adj_00003_00004_n00001_00000' order represents '1' with '1'
c Var 'adj_00003_00004_n00001_00000' order represents '0' with '-389'
389 -389 0
c Encoding variable: adj_00003_00004_n00001_00001 with domain: bool (representing constraint )
c Var 'adj_00003_00004_n00001_00001' direct represents '0' with '-390'
c Var 'adj_00003_00004_n00001_00001' direct represents '1' with '390'
c Var 'adj_00003_00004_n00001_00001' order represents '1' with '1'
c Var 'adj_00003_00004_n00001_00001' order represents '0' with '-390'
390 -390 0
c Encoding variable: adj_00003_00004_00000_n00001 with domain: bool (representing constraint )
c Var 'adj_00003_00004_00000_n00001' direct represents '0' with '-391'
c Var 'adj_00003_00004_00000_n00001' direct represents '1' with '391'
c Var 'adj_00003_00004_00000_n00001' order represents '1' with '1'
c Var 'adj_00003_00004_00000_n00001' order represents '0' with '-391'
c Encoding variable: adj_00003_00004_00000_00000 with domain: bool (representing constraint )
c Var 'adj_00003_00004_00000_00000' direct represents '0' with '-392'
c Var 'adj_00003_00004_00000_00000' direct represents '1' with '392'
c Var 'adj_00003_00004_00000_00000' order represents '1' with '1'
c Var 'adj_00003_00004_00000_00000' order represents '0' with '-392'
392 -392 0
c Encoding variable: adj_00003_00004_00000_00001 with domain: bool (representing constraint )
c Var 'adj_00003_00004_00000_00001' direct represents '0' with '-393'
c Var 'adj_00003_00004_00000_00001' direct represents '1' with '393'
c Var 'adj_00003_00004_00000_00001' order represents '1' with '1'
c Var 'adj_00003_00004_00000_00001' order represents '0' with '-393'
393 -393 0
c Encoding variable: adj_00003_00004_00001_n00001 with domain: bool (representing constraint )
c Var 'adj_00003_00004_00001_n00001' direct represents '0' with '-394'
c Var 'adj_00003_00004_00001_n00001' direct represents '1' with '394'
c Var 'adj_00003_00004_00001_n00001' order represents '1' with '1'
c Var 'adj_00003_00004_00001_n00001' order represents '0' with '-394'
394 -394 0
c Encoding variable: adj_00003_00004_00001_00000 with domain: bool (representing constraint )
c Var 'adj_00003_00004_00001_00000' direct represents '0' with '-395'
c Var 'adj_00003_00004_00001_00000' direct represents '1' with '395'
c Var 'adj_00003_00004_00001_00000' order represents '1' with '1'
c Var 'adj_00003_00004_00001_00000' order represents '0' with '-395'
c Encoding variable: adj_00003_00004_00001_00001 with domain: bool (representing constraint )
c Var 'adj_00003_00004_00001_00001' direct represents '0' with '-396'
c Var 'adj_00003_00004_00001_00001' direct represents '1' with '396'
c Var 'adj_00003_00004_00001_00001' order represents '1' with '1'
c Var 'adj_00003_00004_00001_00001' order represents '0' with '-396'
396 -396 0
c Encoding variable: adj_00004_00000_n00001_n00001 with domain: bool (representing constraint )
c Var 'adj_00004_00000_n00001_n00001' direct represents '0' with '-397'
c Var 'adj_00004_00000_n00001_n00001' direct represents '1' with '397'
c Var 'adj_00004_00000_n00001_n00001' order represents '1' with '1'
c Var 'adj_00004_00000_n00001_n00001' order represents '0' with '-397'
397 -397 0
c Encoding variable: adj_00004_00000_n00001_00000 with domain: bool (representing constraint )
c Var 'adj_00004_00000_n00001_00000' direct represents '0' with '-398'
c Var 'adj_00004_00000_n00001_00000' direct represents '1' with '398'
c Var 'adj_00004_00000_n00001_00000' order represents '1' with '1'
c Var 'adj_00004_00000_n00001_00000' order represents '0' with '-398'
398 -398 0
c Encoding variable: adj_00004_00000_n00001_00001 with domain: bool (representing constraint )
c Var 'adj_00004_00000_n00001_00001' direct represents '0' with '-399'
c Var 'adj_00004_00000_n00001_00001' direct represents '1' with '399'
c Var 'adj_00004_00000_n00001_00001' order represents '1' with '1'
c Var 'adj_00004_00000_n00001_00001' order represents '0' with '-399'
399 -399 0
c Encoding variable: adj_00004_00000_00000_n00001 with domain: bool (representing constraint )
c Var 'adj_00004_00000_00000_n00001' direct represents '0' with '-400'
c Var 'adj_00004_00000_00000_n00001' direct represents '1' with '400'
c Var 'adj_00004_00000_00000_n00001' order represents '1' with '1'
c Var 'adj_00004_00000_00000_n00001' order represents '0' with '-400'
400 -400 0
c Encoding variable: adj_00004_00000_00000_00000 with domain: bool (representing constraint )
c Var 'adj_00004_00000_00000_00000' direct represents '0' with '-401'
c Var 'adj_00004_00000_00000_00000' direct represents '1' with '401'
c Var 'adj_00004_00000_00000_00000' order represents '1' with '1'
c Var 'adj_00004_00000_00000_00000' order represents '0' with '-401'
401 -401 0
c Encoding variable: adj_00004_00000_00000_00001 with domain: bool (representing constraint )
c Var 'adj_00004_00000_00000_00001' direct represents '0' with '-402'
c Var 'adj_00004_00000_00000_00001' direct represents '1' with '402'
c Var 'adj_00004_00000_00000_00001' order represents '1' with '1'
c Var 'adj_00004_00000_00000_00001' order represents '0' with '-402'
402 -402 0
c Encoding variable: adj_00004_00000_00001_n00001 with domain: bool (representing constraint )
c Var 'adj_00004_00000_00001_n00001' direct represents '0' with '-403'
c Var 'adj_00004_00000_00001_n00001' direct represents '1' with '403'
c Var 'adj_00004_00000_00001_n00001' order represents '1' with '1'
c Var 'adj_00004_00000_00001_n00001' order represents '0' with '-403'
403 -403 0
c Encoding variable: adj_00004_00000_00001_00000 with domain: bool (representing constraint )
c Var 'adj_00004_00000_00001_00000' direct represents '0' with '-404'
c Var 'adj_00004_00000_00001_00000' direct represents '1' with '404'
c Var 'adj_00004_00000_00001_00000' order represents '1' with '1'
c Var 'adj_00004_00000_00001_00000' order represents '0' with '-404'
404 -404 0
c Encoding variable: adj_00004_00000_00001_00001 with domain: bool (representing constraint )
c Var 'adj_00004_00000_00001_00001' direct represents '0' with '-405'
c Var 'adj_00004_00000_00001_00001' direct represents '1' with '405'
c Var 'adj_00004_00000_00001_00001' order represents '1' with '1'
c Var 'adj_00004_00000_00001_00001' order represents '0' with '-405'
405 -405 0
c Encoding variable: adj_00004_00001_n00001_n00001 with domain: bool (representing constraint )
c Var 'adj_00004_00001_n00001_n00001' direct represents '0' with '-406'
c Var 'adj_00004_00001_n00001_n00001' direct represents '1' with '406'
c Var 'adj_00004_00001_n00001_n00001' order represents '1' with '1'
c Var 'adj_00004_00001_n00001_n00001' order represents '0' with '-406'
406 -406 0
c Encoding variable: adj_00004_00001_n00001_00000 with domain: bool (representing constraint )
c Var 'adj_00004_00001_n00001_00000' direct represents '0' with '-407'
c Var 'adj_00004_00001_n00001_00000' direct represents '1' with '407'
c Var 'adj_00004_00001_n00001_00000' order represents '1' with '1'
c Var 'adj_00004_00001_n00001_00000' order represents '0' with '-407'
407 -407 0
c Encoding variable: adj_00004_00001_n00001_00001 with domain: bool (representing constraint )
c Var 'adj_00004_00001_n00001_00001' direct represents '0' with '-408'
c Var 'adj_00004_00001_n00001_00001' direct represents '1' with '408'
c Var 'adj_00004_00001_n00001_00001' order represents '1' with '1'
c Var 'adj_00004_00001_n00001_00001' order represents '0' with '-408'
408 -408 0
c Encoding variable: adj_00004_00001_00000_n00001 with domain: bool (representing constraint )
c Var 'adj_00004_00001_00000_n00001' direct represents '0' with '-409'
c Var 'adj_00004_00001_00000_n00001' direct represents '1' with '409'
c Var 'adj_00004_00001_00000_n00001' order represents '1' with '1'
c Var 'adj_00004_00001_00000_n00001' order represents '0' with '-409'
409 -409 0
c Encoding variable: adj_00004_00001_00000_00000 with domain: bool (representing constraint )
c Var 'adj_00004_00001_00000_00000' direct represents '0' with '-410'
c Var 'adj_00004_00001_00000_00000' direct represents '1' with '410'
c Var 'adj_00004_00001_00000_00000' order represents '1' with '1'
c Var 'adj_00004_00001_00000_00000' order represents '0' with '-410'
410 -410 0
c Encoding variable: adj_00004_00001_00000_00001 with domain: bool (representing constraint )
c Var 'adj_00004_00001_00000_00001' direct represents '0' with '-411'
c Var 'adj_00004_00001_00000_00001' direct represents '1' with '411'
c Var 'adj_00004_00001_00000_00001' order represents '1' with '1'
c Var 'adj_00004_00001_00000_00001' order represents '0' with '-411'
411 -411 0
c Encoding variable: adj_00004_00001_00001_n00001 with domain: bool (representing constraint )
c Var 'adj_00004_00001_00001_n00001' direct represents '0' with '-412'
c Var 'adj_00004_00001_00001_n00001' direct represents '1' with '412'
c Var 'adj_00004_00001_00001_n00001' order represents '1' with '1'
c Var 'adj_00004_00001_00001_n00001' order represents '0' with '-412'
412 -412 0
c Encoding variable: adj_00004_00001_00001_00000 with domain: bool (representing constraint )
c Var 'adj_00004_00001_00001_00000' direct represents '0' with '-413'
c Var 'adj_00004_00001_00001_00000' direct represents '1' with '413'
c Var 'adj_00004_00001_00001_00000' order represents '1' with '1'
c Var 'adj_00004_00001_00001_00000' order represents '0' with '-413'
413 -413 0
c Encoding variable: adj_00004_00001_00001_00001 with domain: bool (representing constraint )
c Var 'adj_00004_00001_00001_00001' direct represents '0' with '-414'
c Var 'adj_00004_00001_00001_00001' direct represents '1' with '414'
c Var 'adj_00004_00001_00001_00001' order represents '1' with '1'
c Var 'adj_00004_00001_00001_00001' order represents '0' with '-414'
414 -414 0
c Encoding variable: adj_00004_00002_n00001_n00001 with domain: bool (representing constraint )
c Var 'adj_00004_00002_n00001_n00001' direct represents '0' with '-415'
c Var 'adj_00004_00002_n00001_n00001' direct represents '1' with '415'
c Var 'adj_00004_00002_n00001_n00001' order represents '1' with '1'
c Var 'adj_00004_00002_n00001_n00001' order represents '0' with '-415'
415 -415 0
c Encoding variable: adj_00004_00002_n00001_00000 with domain: bool (representing constraint )
c Var 'adj_00004_00002_n00001_00000' direct represents '0' with '-416'
c Var 'adj_00004_00002_n00001_00000' direct represents '1' with '416'
c Var 'adj_00004_00002_n00001_00000' order represents '1' with '1'
c Var 'adj_00004_00002_n00001_00000' order represents '0' with '-416'
416 -416 0
c Encoding variable: adj_00004_00002_n00001_00001 with domain: bool (representing constraint )
c Var 'adj_00004_00002_n00001_00001' direct represents '0' with '-417'
c Var 'adj_00004_00002_n00001_00001' direct represents '1' with '417'
c Var 'adj_00004_00002_n00001_00001' order represents '1' with '1'
c Var 'adj_00004_00002_n00001_00001' order represents '0' with '-417'
417 -417 0
c Encoding variable: adj_00004_00002_00000_n00001 with domain: bool (representing constraint )
c Var 'adj_00004_00002_00000_n00001' direct represents '0' with '-418'
c Var 'adj_00004_00002_00000_n00001' direct represents '1' with '418'
c Var 'adj_00004_00002_00000_n00001' order represents '1' with '1'
c Var 'adj_00004_00002_00000_n00001' order represents '0' with '-418'
c Encoding variable: adj_00004_00002_00000_00000 with domain: bool (representing constraint )
c Var 'adj_00004_00002_00000_00000' direct represents '0' with '-419'
c Var 'adj_00004_00002_00000_00000' direct represents '1' with '419'
c Var 'adj_00004_00002_00000_00000' order represents '1' with '1'
c Var 'adj_00004_00002_00000_00000' order represents '0' with '-419'
419 -419 0
c Encoding variable: adj_00004_00002_00000_00001 with domain: bool (representing constraint )
c Var 'adj_00004_00002_00000_00001' direct represents '0' with '-420'
c Var 'adj_00004_00002_00000_00001' direct represents '1' with '420'
c Var 'adj_00004_00002_00000_00001' order represents '1' with '1'
c Var 'adj_00004_00002_00000_00001' order represents '0' with '-420'
420 -420 0
c Encoding variable: adj_00004_00002_00001_n00001 with domain: bool (representing constraint )
c Var 'adj_00004_00002_00001_n00001' direct represents '0' with '-421'
c Var 'adj_00004_00002_00001_n00001' direct represents '1' with '421'
c Var 'adj_00004_00002_00001_n00001' order represents '1' with '1'
c Var 'adj_00004_00002_00001_n00001' order represents '0' with '-421'
421 -421 0
c Encoding variable: adj_00004_00002_00001_00000 with domain: bool (representing constraint )
c Var 'adj_00004_00002_00001_00000' direct represents '0' with '-422'
c Var 'adj_00004_00002_00001_00000' direct represents '1' with '422'
c Var 'adj_00004_00002_00001_00000' order represents '1' with '1'
c Var 'adj_00004_00002_00001_00000' order represents '0' with '-422'
422 -422 0
c Encoding variable: adj_00004_00002_00001_00001 with domain: bool (representing constraint )
c Var 'adj_00004_00002_00001_00001' direct represents '0' with '-423'
c Var 'adj_00004_00002_00001_00001' direct represents '1' with '423'
c Var 'adj_00004_00002_00001_00001' order represents '1' with '1'
c Var 'adj_00004_00002_00001_00001' order represents '0' with '-423'
423 -423 0
c Encoding variable: adj_00004_00003_n00001_n00001 with domain: bool (representing constraint )
c Var 'adj_00004_00003_n00001_n00001' direct represents '0' with '-424'
c Var 'adj_00004_00003_n00001_n00001' direct represents '1' with '424'
c Var 'adj_00004_00003_n00001_n00001' order represents '1' with '1'
c Var 'adj_00004_00003_n00001_n00001' order represents '0' with '-424'
424 -424 0
c Encoding variable: adj_00004_00003_n00001_00000 with domain: bool (representing constraint )
c Var 'adj_00004_00003_n00001_00000' direct represents '0' with '-425'
c Var 'adj_00004_00003_n00001_00000' direct represents '1' with '425'
c Var 'adj_00004_00003_n00001_00000' order represents '1' with '1'
c Var 'adj_00004_00003_n00001_00000' order represents '0' with '-425'
425 -425 0
c Encoding variable: adj_00004_00003_n00001_00001 with domain: bool (representing constraint )
c Var 'adj_00004_00003_n00001_00001' direct represents '0' with '-426'
c Var 'adj_00004_00003_n00001_00001' direct represents '1' with '426'
c Var 'adj_00004_00003_n00001_00001' order represents '1' with '1'
c Var 'adj_00004_00003_n00001_00001' order represents '0' with '-426'
426 -426 0
c Encoding variable: adj_00004_00003_00000_n00001 with domain: bool (representing constraint )
c Var 'adj_00004_00003_00000_n00001' direct represents '0' with '-427'
c Var 'adj_00004_00003_00000_n00001' direct represents '1' with '427'
c Var 'adj_00004_00003_00000_n00001' order represents '1' with '1'
c Var 'adj_00004_00003_00000_n00001' order represents '0' with '-427'
427 -427 0
c Encoding variable: adj_00004_00003_00000_00000 with domain: bool (representing constraint )
c Var 'adj_00004_00003_00000_00000' direct represents '0' with '-428'
c Var 'adj_00004_00003_00000_00000' direct represents '1' with '428'
c Var 'adj_00004_00003_00000_00000' order represents '1' with '1'
c Var 'adj_00004_00003_00000_00000' order represents '0' with '-428'
428 -428 0
c Encoding variable: adj_00004_00003_00000_00001 with domain: bool (representing constraint )
c Var 'adj_00004_00003_00000_00001' direct represents '0' with '-429'
c Var 'adj_00004_00003_00000_00001' direct represents '1' with '429'
c Var 'adj_00004_00003_00000_00001' order represents '1' with '1'
c Var 'adj_00004_00003_00000_00001' order represents '0' with '-429'
429 -429 0
c Encoding variable: adj_00004_00003_00001_n00001 with domain: bool (representing constraint )
c Var 'adj_00004_00003_00001_n00001' direct represents '0' with '-430'
c Var 'adj_00004_00003_00001_n00001' direct represents '1' with '430'
c Var 'adj_00004_00003_00001_n00001' order represents '1' with '1'
c Var 'adj_00004_00003_00001_n00001' order represents '0' with '-430'
430 -430 0
c Encoding variable: adj_00004_00003_00001_00000 with domain: bool (representing constraint )
c Var 'adj_00004_00003_00001_00000' direct represents '0' with '-431'
c Var 'adj_00004_00003_00001_00000' direct represents '1' with '431'
c Var 'adj_00004_00003_00001_00000' order represents '1' with '1'
c Var 'adj_00004_00003_00001_00000' order represents '0' with '-431'
431 -431 0
c Encoding variable: adj_00004_00003_00001_00001 with domain: bool (representing constraint )
c Var 'adj_00004_00003_00001_00001' direct represents '0' with '-432'
c Var 'adj_00004_00003_00001_00001' direct represents '1' with '432'
c Var 'adj_00004_00003_00001_00001' order represents '1' with '1'
c Var 'adj_00004_00003_00001_00001' order represents '0' with '-432'
432 -432 0
c Encoding variable: adj_00004_00004_n00001_n00001 with domain: bool (representing constraint )
c Var 'adj_00004_00004_n00001_n00001' direct represents '0' with '-433'
c Var 'adj_00004_00004_n00001_n00001' direct represents '1' with '433'
c Var 'adj_00004_00004_n00001_n00001' order represents '1' with '1'
c Var 'adj_00004_00004_n00001_n00001' order represents '0' with '-433'
433 -433 0
c Encoding variable: adj_00004_00004_n00001_00000 with domain: bool (representing constraint )
c Var 'adj_00004_00004_n00001_00000' direct represents '0' with '-434'
c Var 'adj_00004_00004_n00001_00000' direct represents '1' with '434'
c Var 'adj_00004_00004_n00001_00000' order represents '1' with '1'
c Var 'adj_00004_00004_n00001_00000' order represents '0' with '-434'
434 -434 0
c Encoding variable: adj_00004_00004_n00001_00001 with domain: bool (representing constraint )
c Var 'adj_00004_00004_n00001_00001' direct represents '0' with '-435'
c Var 'adj_00004_00004_n00001_00001' direct represents '1' with '435'
c Var 'adj_00004_00004_n00001_00001' order represents '1' with '1'
c Var 'adj_00004_00004_n00001_00001' order represents '0' with '-435'
435 -435 0
c Encoding variable: adj_00004_00004_00000_n00001 with domain: bool (representing constraint )
c Var 'adj_00004_00004_00000_n00001' direct represents '0' with '-436'
c Var 'adj_00004_00004_00000_n00001' direct represents '1' with '436'
c Var 'adj_00004_00004_00000_n00001' order represents '1' with '1'
c Var 'adj_00004_00004_00000_n00001' order represents '0' with '-436'
436 -436 0
c Encoding variable: adj_00004_00004_00000_00000 with domain: bool (representing constraint )
c Var 'adj_00004_00004_00000_00000' direct represents '0' with '-437'
c Var 'adj_00004_00004_00000_00000' direct represents '1' with '437'
c Var 'adj_00004_00004_00000_00000' order represents '1' with '1'
c Var 'adj_00004_00004_00000_00000' order represents '0' with '-437'
437 -437 0
c Encoding variable: adj_00004_00004_00000_00001 with domain: bool (representing constraint )
c Var 'adj_00004_00004_00000_00001' direct represents '0' with '-438'
c Var 'adj_00004_00004_00000_00001' direct represents '1' with '438'
c Var 'adj_00004_00004_00000_00001' order represents '1' with '1'
c Var 'adj_00004_00004_00000_00001' order represents '0' with '-438'
438 -438 0
c Encoding variable: adj_00004_00004_00001_n00001 with domain: bool (representing constraint )
c Var 'adj_00004_00004_00001_n00001' direct represents '0' with '-439'
c Var 'adj_00004_00004_00001_n00001' direct represents '1' with '439'
c Var 'adj_00004_00004_00001_n00001' order represents '1' with '1'
c Var 'adj_00004_00004_00001_n00001' order represents '0' with '-439'
439 -439 0
c Encoding variable: adj_00004_00004_00001_00000 with domain: bool (representing constraint )
c Var 'adj_00004_00004_00001_00000' direct represents '0' with '-440'
c Var 'adj_00004_00004_00001_00000' direct represents '1' with '440'
c Var 'adj_00004_00004_00001_00000' order represents '1' with '1'
c Var 'adj_00004_00004_00001_00000' order represents '0' with '-440'
440 -440 0
c Encoding variable: adj_00004_00004_00001_00001 with domain: bool (representing constraint )
c Var 'adj_00004_00004_00001_00001' direct represents '0' with '-441'
c Var 'adj_00004_00004_00001_00001' direct represents '1' with '441'
c Var 'adj_00004_00004_00001_00001' order represents '1' with '1'
c Var 'adj_00004_00004_00001_00001' order represents '0' with '-441'
441 -441 0
c Encoding variable: rowup_00000 with domain: bool (representing constraint )
c Var 'rowup_00000' direct represents '0' with '-442'
c Var 'rowup_00000' direct represents '1' with '442'
c Var 'rowup_00000' order represents '1' with '1'
c Var 'rowup_00000' order represents '0' with '-442'
442 -442 0
c Encoding variable: rowup_00001 with domain: bool (representing constraint )
c Var 'rowup_00001' direct represents '0' with '-443'
c Var 'rowup_00001' direct represents '1' with '443'
c Var 'rowup_00001' order represents '1' with '1'
c Var 'rowup_00001' order represents '0' with '-443'
c Encoding variable: rowup_00002 with domain: bool (representing constraint )
c Var 'rowup_00002' direct represents '0' with '-444'
c Var 'rowup_00002' direct represents '1' with '444'
c Var 'rowup_00002' order represents '1' with '1'
c Var 'rowup_00002' order represents '0' with '-444'
c Encoding variable: rowup_00003 with domain: bool (representing constraint )
c Var 'rowup_00003' direct represents '0' with '-445'
c Var 'rowup_00003' direct represents '1' with '445'
c Var 'rowup_00003' order represents '1' with '1'
c Var 'rowup_00003' order represents '0' with '-445'
c Encoding variable: rowup_00004 with domain: bool (representing constraint )
c Var 'rowup_00004' direct represents '0' with '-446'
c Var 'rowup_00004' direct represents '1' with '446'
c Var 'rowup_00004' order represents '1' with '1'
c Var 'rowup_00004' order represents '0' with '-446'
c Encoding variable: rowdown_00000 with domain: bool (representing constraint )
c Var 'rowdown_00000' direct represents '0' with '-447'
c Var 'rowdown_00000' direct represents '1' with '447'
c Var 'rowdown_00000' order represents '1' with '1'
c Var 'rowdown_00000' order represents '0' with '-447'
447 -447 0
c Encoding variable: rowdown_00001 with domain: bool (representing constraint )
c Var 'rowdown_00001' direct represents '0' with '-448'
c Var 'rowdown_00001' direct represents '1' with '448'
c Var 'rowdown_00001' order represents '1' with '1'
c Var 'rowdown_00001' order represents '0' with '-448'
c Encoding variable: rowdown_00002 with domain: bool (representing constraint )
c Var 'rowdown_00002' direct represents '0' with '-449'
c Var 'rowdown_00002' direct represents '1' with '449'
c Var 'rowdown_00002' order represents '1' with '1'
c Var 'rowdown_00002' order represents '0' with '-449'
c Encoding variable: rowdown_00003 with domain: bool (representing constraint )
c Var 'rowdown_00003' direct represents '0' with '-450'
c Var 'rowdown_00003' direct represents '1' with '450'
c Var 'rowdown_00003' order represents '1' with '1'
c Var 'rowdown_00003' order represents '0' with '-450'
c Encoding variable: rowdown_00004 with domain: bool (representing constraint )
c Var 'rowdown_00004' direct represents '0' with '-451'
c Var 'rowdown_00004' direct represents '1' with '451'
c Var 'rowdown_00004' order represents '1' with '1'
c Var 'rowdown_00004' order represents '0' with '-451'
c Encoding variable: colup_00000 with domain: bool (representing constraint )
c Var 'colup_00000' direct represents '0' with '-452'
c Var 'colup_00000' direct represents '1' with '452'
c Var 'colup_00000' order represents '1' with '1'
c Var 'colup_00000' order represents '0' with '-452'
c Encoding variable: colup_00001 with domain: bool (representing constraint )
c Var 'colup_00001' direct represents '0' with '-453'
c Var 'colup_00001' direct represents '1' with '453'
c Var 'colup_00001' order represents '1' with '1'
c Var 'colup_00001' order represents '0' with '-453'
c Encoding variable: colup_00002 with domain: bool (representing constraint )
c Var 'colup_00002' direct represents '0' with '-454'
c Var 'colup_00002' direct represents '1' with '454'
c Var 'colup_00002' order represents '1' with '1'
c Var 'colup_00002' order represents '0' with '-454'
c Encoding variable: colup_00003 with domain: bool (representing constraint )
c Var 'colup_00003' direct represents '0' with '-455'
c Var 'colup_00003' direct represents '1' with '455'
c Var 'colup_00003' order represents '1' with '1'
c Var 'colup_00003' order represents '0' with '-455'
c Encoding variable: colup_00004 with domain: bool (representing constraint )
c Var 'colup_00004' direct represents '0' with '-456'
c Var 'colup_00004' direct represents '1' with '456'
c Var 'colup_00004' order represents '1' with '1'
c Var 'colup_00004' order represents '0' with '-456'
c Encoding variable: coldown_00000 with domain: bool (representing constraint )
c Var 'coldown_00000' direct represents '0' with '-457'
c Var 'coldown_00000' direct represents '1' with '457'
c Var 'coldown_00000' order represents '1' with '1'
c Var 'coldown_00000' order represents '0' with '-457'
c Encoding variable: coldown_00001 with domain: bool (representing constraint )
c Var 'coldown_00001' direct represents '0' with '-458'
c Var 'coldown_00001' direct represents '1' with '458'
c Var 'coldown_00001' order represents '1' with '1'
c Var 'coldown_00001' order represents '0' with '-458'
c Encoding variable: coldown_00002 with domain: bool (representing constraint )
c Var 'coldown_00002' direct represents '0' with '-459'
c Var 'coldown_00002' direct represents '1' with '459'
c Var 'coldown_00002' order represents '1' with '1'
c Var 'coldown_00002' order represents '0' with '-459'
c Encoding variable: coldown_00003 with domain: bool (representing constraint )
c Var 'coldown_00003' direct represents '0' with '-460'
c Var 'coldown_00003' direct represents '1' with '460'
c Var 'coldown_00003' order represents '1' with '1'
c Var 'coldown_00003' order represents '0' with '-460'
c Encoding variable: coldown_00004 with domain: bool (representing constraint )
c Var 'coldown_00004' direct represents '0' with '-461'
c Var 'coldown_00004' direct represents '1' with '461'
c Var 'coldown_00004' order represents '1' with '1'
c Var 'coldown_00004' order represents '0' with '-461'
c Encoding variable: treetentup_00001 with domain: bool (representing constraint )
c Var 'treetentup_00001' direct represents '0' with '-462'
c Var 'treetentup_00001' direct represents '1' with '462'
c Var 'treetentup_00001' order represents '1' with '1'
c Var 'treetentup_00001' order represents '0' with '-462'
c Encoding variable: treetentup_00002 with domain: bool (representing constraint )
c Var 'treetentup_00002' direct represents '0' with '-463'
c Var 'treetentup_00002' direct represents '1' with '463'
c Var 'treetentup_00002' order represents '1' with '1'
c Var 'treetentup_00002' order represents '0' with '-463'
c Encoding variable: treetentup_00003 with domain: bool (representing constraint )
c Var 'treetentup_00003' direct represents '0' with '-464'
c Var 'treetentup_00003' direct represents '1' with '464'
c Var 'treetentup_00003' order represents '1' with '1'
c Var 'treetentup_00003' order represents '0' with '-464'
c Encoding variable: treetentup_00004 with domain: bool (representing constraint )
c Var 'treetentup_00004' direct represents '0' with '-465'
c Var 'treetentup_00004' direct represents '1' with '465'
c Var 'treetentup_00004' order represents '1' with '1'
c Var 'treetentup_00004' order represents '0' with '-465'
c Encoding variable: treetentup_00005 with domain: bool (representing constraint )
c Var 'treetentup_00005' direct represents '0' with '-466'
c Var 'treetentup_00005' direct represents '1' with '466'
c Var 'treetentup_00005' order represents '1' with '1'
c Var 'treetentup_00005' order represents '0' with '-466'
c Encoding variable: treetentup_00006 with domain: bool (representing constraint )
c Var 'treetentup_00006' direct represents '0' with '-467'
c Var 'treetentup_00006' direct represents '1' with '467'
c Var 'treetentup_00006' order represents '1' with '1'
c Var 'treetentup_00006' order represents '0' with '-467'
c Encoding variable: treetentdown_00001 with domain: bool (representing constraint )
c Var 'treetentdown_00001' direct represents '0' with '-468'
c Var 'treetentdown_00001' direct represents '1' with '468'
c Var 'treetentdown_00001' order represents '1' with '1'
c Var 'treetentdown_00001' order represents '0' with '-468'
c Encoding variable: treetentdown_00002 with domain: bool (representing constraint )
c Var 'treetentdown_00002' direct represents '0' with '-469'
c Var 'treetentdown_00002' direct represents '1' with '469'
c Var 'treetentdown_00002' order represents '1' with '1'
c Var 'treetentdown_00002' order represents '0' with '-469'
c Encoding variable: treetentdown_00003 with domain: bool (representing constraint )
c Var 'treetentdown_00003' direct represents '0' with '-470'
c Var 'treetentdown_00003' direct represents '1' with '470'
c Var 'treetentdown_00003' order represents '1' with '1'
c Var 'treetentdown_00003' order represents '0' with '-470'
c Encoding variable: treetentdown_00004 with domain: bool (representing constraint )
c Var 'treetentdown_00004' direct represents '0' with '-471'
c Var 'treetentdown_00004' direct represents '1' with '471'
c Var 'treetentdown_00004' order represents '1' with '1'
c Var 'treetentdown_00004' order represents '0' with '-471'
c Encoding variable: treetentdown_00005 with domain: bool (representing constraint )
c Var 'treetentdown_00005' direct represents '0' with '-472'
c Var 'treetentdown_00005' direct represents '1' with '472'
c Var 'treetentdown_00005' order represents '1' with '1'
c Var 'treetentdown_00005' order represents '0' with '-472'
c Encoding variable: treetentdown_00006 with domain: bool (representing constraint )
c Var 'treetentdown_00006' direct represents '0' with '-473'
c Var 'treetentdown_00006' direct represents '1' with '473'
c Var 'treetentdown_00006' order represents '1' with '1'
c Var 'treetentdown_00006' order represents '0' with '-473'
c Encoding variable: tentneartree_00001 with domain: bool (representing constraint )
c Var 'tentneartree_00001' direct represents '0' with '-474'
c Var 'tentneartree_00001' direct represents '1' with '474'
c Var 'tentneartree_00001' order represents '1' with '1'
c Var 'tentneartree_00001' order represents '0' with '-474'
c Encoding variable: tentneartree_00002 with domain: bool (representing constraint )
c Var 'tentneartree_00002' direct represents '0' with '-475'
c Var 'tentneartree_00002' direct represents '1' with '475'
c Var 'tentneartree_00002' order represents '1' with '1'
c Var 'tentneartree_00002' order represents '0' with '-475'
c Encoding variable: tentneartree_00003 with domain: bool (representing constraint )
c Var 'tentneartree_00003' direct represents '0' with '-476'
c Var 'tentneartree_00003' direct represents '1' with '476'
c Var 'tentneartree_00003' order represents '1' with '1'
c Var 'tentneartree_00003' order represents '0' with '-476'
c Encoding variable: tentneartree_00004 with domain: bool (representing constraint )
c Var 'tentneartree_00004' direct represents '0' with '-477'
c Var 'tentneartree_00004' direct represents '1' with '477'
c Var 'tentneartree_00004' order represents '1' with '1'
c Var 'tentneartree_00004' order represents '0' with '-477'
c Encoding variable: tentneartree_00005 with domain: bool (representing constraint )
c Var 'tentneartree_00005' direct represents '0' with '-478'
c Var 'tentneartree_00005' direct represents '1' with '478'
c Var 'tentneartree_00005' order represents '1' with '1'
c Var 'tentneartree_00005' order represents '0' with '-478'
c Encoding variable: tentneartree_00006 with domain: bool (representing constraint )
c Var 'tentneartree_00006' direct represents '0' with '-479'
c Var 'tentneartree_00006' direct represents '1' with '479'
c Var 'tentneartree_00006' order represents '1' with '1'
c Var 'tentneartree_00006' order represents '0' with '-479'
c Encoding variable: aux0 with domain: bool (representing constraint (1<=((grid_00003_00000=1) + (grid_00003_00001=1) + (grid_00003_00003=1) + (grid_00003_00004=1) + (1=grid_00001_00001) + (1=grid_00001_00002) + (1=grid_00001_00003) + (1=grid_00001_00004) + (1=grid_00002_00000) + (1=grid_00002_00001) + (1=grid_00002_00002) + (1=grid_00002_00003) + (grid_00004_00001=1) + (grid_00004_00002=1) + (grid_00004_00004=1) + (grid_00000_00000=1) + (grid_00000_00001=1) + (grid_00000_00002=1) + (grid_00000_00003=1))))
c Var 'aux0' direct represents '0' with '-480'
c Var 'aux0' direct represents '1' with '480'
c Var 'aux0' order represents '1' with '1'
c Var 'aux0' order represents '0' with '-480'
c Encoding variable: aux1 with domain: bool (representing constraint (1<=((grid_00003_00000=2) + (grid_00003_00001=2) + (grid_00003_00003=2) + (grid_00003_00004=2) + (2=grid_00001_00001) + (2=grid_00001_00002) + (2=grid_00001_00003) + (2=grid_00001_00004) + (2=grid_00002_00000) + (2=grid_00002_00001) + (2=grid_00002_00002) + (2=grid_00002_00003) + (grid_00004_00001=2) + (grid_00004_00002=2) + (grid_00004_00004=2) + (grid_00000_00000=2) + (grid_00000_00001=2) + (grid_00000_00002=2) + (grid_00000_00003=2))))
c Var 'aux1' direct represents '0' with '-481'
c Var 'aux1' direct represents '1' with '481'
c Var 'aux1' order represents '1' with '1'
c Var 'aux1' order represents '0' with '-481'
c Encoding variable: aux2 with domain: bool (representing constraint (1<=((grid_00003_00000=3) + (grid_00003_00001=3) + (grid_00003_00003=3) + (grid_00003_00004=3) + (3=grid_00001_00001) + (3=grid_00001_00002) + (3=grid_00001_00003) + (3=grid_00001_00004) + (3=grid_00002_00000) + (3=grid_00002_00001) + (3=grid_00002_00002) + (3=grid_00002_00003) + (grid_00004_00001=3) + (grid_00004_00002=3) + (grid_00004_00004=3) + (grid_00000_00000=3) + (grid_00000_00001=3) + (grid_00000_00002=3) + (grid_00000_00003=3))))
c Var 'aux2' direct represents '0' with '-482'
c Var 'aux2' direct represents '1' with '482'
c Var 'aux2' order represents '1' with '1'
c Var 'aux2' order represents '0' with '-482'
c Encoding variable: aux3 with domain: bool (representing constraint (1<=((grid_00003_00000=4) + (grid_00003_00001=4) + (grid_00003_00003=4) + (grid_00003_00004=4) + (4=grid_00001_00001) + (4=grid_00001_00002) + (4=grid_00001_00003) + (4=grid_00001_00004) + (4=grid_00002_00000) + (4=grid_00002_00001) + (4=grid_00002_00002) + (4=grid_00002_00003) + (grid_00004_00001=4) + (grid_00004_00002=4) + (grid_00004_00004=4) + (grid_00000_00000=4) + (grid_00000_00001=4) + (grid_00000_00002=4) + (grid_00000_00003=4))))
c Var 'aux3' direct represents '0' with '-483'
c Var 'aux3' direct represents '1' with '483'
c Var 'aux3' order represents '1' with '1'
c Var 'aux3' order represents '0' with '-483'
c Encoding variable: aux4 with domain: bool (representing constraint (1<=((grid_00003_00000=5) + (grid_00003_00001=5) + (grid_00003_00003=5) + (grid_00003_00004=5) + (5=grid_00001_00001) + (5=grid_00001_00002) + (5=grid_00001_00003) + (5=grid_00001_00004) + (5=grid_00002_00000) + (5=grid_00002_00001) + (5=grid_00002_00002) + (5=grid_00002_00003) + (grid_00004_00001=5) + (grid_00004_00002=5) + (grid_00004_00004=5) + (grid_00000_00000=5) + (grid_00000_00001=5) + (grid_00000_00002=5) + (grid_00000_00003=5))))
c Var 'aux4' direct represents '0' with '-484'
c Var 'aux4' direct represents '1' with '484'
c Var 'aux4' order represents '1' with '1'
c Var 'aux4' order represents '0' with '-484'
c Encoding variable: aux5 with domain: bool (representing constraint (1<=((grid_00003_00000=6) + (grid_00003_00001=6) + (grid_00003_00003=6) + (grid_00003_00004=6) + (6=grid_00001_00001) + (6=grid_00001_00002) + (6=grid_00001_00003) + (6=grid_00001_00004) + (6=grid_00002_00000) + (6=grid_00002_00001) + (6=grid_00002_00002) + (6=grid_00002_00003) + (grid_00004_00001=6) + (grid_00004_00002=6) + (grid_00004_00004=6) + (grid_00000_00000=6) + (grid_00000_00001=6) + (grid_00000_00002=6) + (grid_00000_00003=6))))
c Var 'aux5' direct represents '0' with '-485'
c Var 'aux5' direct represents '1' with '485'
c Var 'aux5' order represents '1' with '1'
c Var 'aux5' order represents '0' with '-485'
c Encoding variable: aux6 with domain: bool (representing constraint (((grid_00003_00000=1) + (grid_00003_00001=1) + (grid_00003_00003=1) + (grid_00003_00004=1) + (1=grid_00001_00001) + (1=grid_00001_00002) + (1=grid_00001_00003) + (1=grid_00001_00004) + (1=grid_00002_00000) + (1=grid_00002_00001) + (1=grid_00002_00002) + (1=grid_00002_00003) + (grid_00004_00001=1) + (grid_00004_00002=1) + (grid_00004_00004=1) + (grid_00000_00000=1) + (grid_00000_00001=1) + (grid_00000_00002=1) + (grid_00000_00003=1))<=1))
c Var 'aux6' direct represents '0' with '-486'
c Var 'aux6' direct represents '1' with '486'
c Var 'aux6' order represents '1' with '1'
c Var 'aux6' order represents '0' with '-486'
c Encoding variable: aux7 with domain: bool (representing constraint (((grid_00003_00000=2) + (grid_00003_00001=2) + (grid_00003_00003=2) + (grid_00003_00004=2) + (2=grid_00001_00001) + (2=grid_00001_00002) + (2=grid_00001_00003) + (2=grid_00001_00004) + (2=grid_00002_00000) + (2=grid_00002_00001) + (2=grid_00002_00002) + (2=grid_00002_00003) + (grid_00004_00001=2) + (grid_00004_00002=2) + (grid_00004_00004=2) + (grid_00000_00000=2) + (grid_00000_00001=2) + (grid_00000_00002=2) + (grid_00000_00003=2))<=1))
c Var 'aux7' direct represents '0' with '-487'
c Var 'aux7' direct represents '1' with '487'
c Var 'aux7' order represents '1' with '1'
c Var 'aux7' order represents '0' with '-487'
c Encoding variable: aux8 with domain: bool (representing constraint (((grid_00003_00000=3) + (grid_00003_00001=3) + (grid_00003_00003=3) + (grid_00003_00004=3) + (3=grid_00001_00001) + (3=grid_00001_00002) + (3=grid_00001_00003) + (3=grid_00001_00004) + (3=grid_00002_00000) + (3=grid_00002_00001) + (3=grid_00002_00002) + (3=grid_00002_00003) + (grid_00004_00001=3) + (grid_00004_00002=3) + (grid_00004_00004=3) + (grid_00000_00000=3) + (grid_00000_00001=3) + (grid_00000_00002=3) + (grid_00000_00003=3))<=1))
c Var 'aux8' direct represents '0' with '-488'
c Var 'aux8' direct represents '1' with '488'
c Var 'aux8' order represents '1' with '1'
c Var 'aux8' order represents '0' with '-488'
c Encoding variable: aux9 with domain: bool (representing constraint (((grid_00003_00000=4) + (grid_00003_00001=4) + (grid_00003_00003=4) + (grid_00003_00004=4) + (4=grid_00001_00001) + (4=grid_00001_00002) + (4=grid_00001_00003) + (4=grid_00001_00004) + (4=grid_00002_00000) + (4=grid_00002_00001) + (4=grid_00002_00002) + (4=grid_00002_00003) + (grid_00004_00001=4) + (grid_00004_00002=4) + (grid_00004_00004=4) + (grid_00000_00000=4) + (grid_00000_00001=4) + (grid_00000_00002=4) + (grid_00000_00003=4))<=1))
c Var 'aux9' direct represents '0' with '-489'
c Var 'aux9' direct represents '1' with '489'
c Var 'aux9' order represents '1' with '1'
c Var 'aux9' order represents '0' with '-489'
c Encoding variable: aux10 with domain: bool (representing constraint (((grid_00003_00000=5) + (grid_00003_00001=5) + (grid_00003_00003=5) + (grid_00003_00004=5) + (5=grid_00001_00001) + (5=grid_00001_00002) + (5=grid_00001_00003) + (5=grid_00001_00004) + (5=grid_00002_00000) + (5=grid_00002_00001) + (5=grid_00002_00002) + (5=grid_00002_00003) + (grid_00004_00001=5) + (grid_00004_00002=5) + (grid_00004_00004=5) + (grid_00000_00000=5) + (grid_00000_00001=5) + (grid_00000_00002=5) + (grid_00000_00003=5))<=1))
c Var 'aux10' direct represents '0' with '-490'
c Var 'aux10' direct represents '1' with '490'
c Var 'aux10' order represents '1' with '1'
c Var 'aux10' order represents '0' with '-490'
c Encoding variable: aux11 with domain: bool (representing constraint (((grid_00003_00000=6) + (grid_00003_00001=6) + (grid_00003_00003=6) + (grid_00003_00004=6) + (6=grid_00001_00001) + (6=grid_00001_00002) + (6=grid_00001_00003) + (6=grid_00001_00004) + (6=grid_00002_00000) + (6=grid_00002_00001) + (6=grid_00002_00002) + (6=grid_00002_00003) + (grid_00004_00001=6) + (grid_00004_00002=6) + (grid_00004_00004=6) + (grid_00000_00000=6) + (grid_00000_00001=6) + (grid_00000_00002=6) + (grid_00000_00003=6))<=1))
c Var 'aux11' direct represents '0' with '-491'
c Var 'aux11' direct represents '1' with '491'
c Var 'aux11' order represents '1' with '1'
c Var 'aux11' order represents '0' with '-491'
c Encoding variable: aux12 with domain: bool (representing constraint (1<=((0<grid_00001_00001) + (0<grid_00001_00002) + (0<grid_00001_00003) + (0<grid_00001_00004))))
c Var 'aux12' direct represents '0' with '-492'
c Var 'aux12' direct represents '1' with '492'
c Var 'aux12' order represents '1' with '1'
c Var 'aux12' order represents '0' with '-492'
c Encoding variable: aux13 with domain: bool (representing constraint (1<=((0<grid_00002_00000) + (0<grid_00002_00001) + (0<grid_00002_00002) + (0<grid_00002_00003))))
c Var 'aux13' direct represents '0' with '-493'
c Var 'aux13' direct represents '1' with '493'
c Var 'aux13' order represents '1' with '1'
c Var 'aux13' order represents '0' with '-493'
c Encoding variable: aux14 with domain: bool (representing constraint (1<=((0<grid_00003_00000) + (0<grid_00003_00001) + (0<grid_00003_00003) + (0<grid_00003_00004))))
c Var 'aux14' direct represents '0' with '-494'
c Var 'aux14' direct represents '1' with '494'
c Var 'aux14' order represents '1' with '1'
c Var 'aux14' order represents '0' with '-494'
c Encoding variable: aux15 with domain: bool (representing constraint (2<=((0<grid_00004_00001) + (0<grid_00004_00002) + (0<grid_00004_00004))))
c Var 'aux15' direct represents '0' with '-495'
c Var 'aux15' direct represents '1' with '495'
c Var 'aux15' order represents '1' with '1'
c Var 'aux15' order represents '0' with '-495'
c Encoding variable: aux16 with domain: bool (representing constraint (((0<grid_00001_00001) + (0<grid_00001_00002) + (0<grid_00001_00003) + (0<grid_00001_00004))<=1))
c Var 'aux16' direct represents '0' with '-496'
c Var 'aux16' direct represents '1' with '496'
c Var 'aux16' order represents '1' with '1'
c Var 'aux16' order represents '0' with '-496'
c Encoding variable: aux17 with domain: bool (representing constraint (((0<grid_00002_00000) + (0<grid_00002_00001) + (0<grid_00002_00002) + (0<grid_00002_00003))<=1))
c Var 'aux17' direct represents '0' with '-497'
c Var 'aux17' direct represents '1' with '497'
c Var 'aux17' order represents '1' with '1'
c Var 'aux17' order represents '0' with '-497'
c Encoding variable: aux18 with domain: bool (representing constraint (((0<grid_00003_00000) + (0<grid_00003_00001) + (0<grid_00003_00003) + (0<grid_00003_00004))<=1))
c Var 'aux18' direct represents '0' with '-498'
c Var 'aux18' direct represents '1' with '498'
c Var 'aux18' order represents '1' with '1'
c Var 'aux18' order represents '0' with '-498'
c Encoding variable: aux19 with domain: bool (representing constraint (((0<grid_00004_00001) + (0<grid_00004_00002) + (0<grid_00004_00004))<=2))
c Var 'aux19' direct represents '0' with '-499'
c Var 'aux19' direct represents '1' with '499'
c Var 'aux19' order represents '1' with '1'
c Var 'aux19' order represents '0' with '-499'
c Encoding variable: aux20 with domain: bool (representing constraint (1<=((0<grid_00002_00000) + (0<grid_00003_00000) + (0<grid_00000_00000))))
c Var 'aux20' direct represents '0' with '-500'
c Var 'aux20' direct represents '1' with '500'
c Var 'aux20' order represents '1' with '1'
c Var 'aux20' order represents '0' with '-500'
c Encoding variable: aux21 with domain: bool (representing constraint (1<=((0<grid_00002_00001) + (0<grid_00003_00001) + (0<grid_00004_00001) + (0<grid_00000_00001) + (0<grid_00001_00001))))
c Var 'aux21' direct represents '0' with '-501'
c Var 'aux21' direct represents '1' with '501'
c Var 'aux21' order represents '1' with '1'
c Var 'aux21' order represents '0' with '-501'
c Encoding variable: aux22 with domain: bool (representing constraint (1<=((0<grid_00002_00002) + (0<grid_00004_00002) + (0<grid_00000_00002) + (0<grid_00001_00002))))
c Var 'aux22' direct represents '0' with '-502'
c Var 'aux22' direct represents '1' with '502'
c Var 'aux22' order represents '1' with '1'
c Var 'aux22' order represents '0' with '-502'
c Encoding variable: aux23 with domain: bool (representing constraint (2<=((0<grid_00002_00003) + (0<grid_00003_00003) + (0<grid_00000_00003) + (0<grid_00001_00003))))
c Var 'aux23' direct represents '0' with '-503'
c Var 'aux23' direct represents '1' with '503'
c Var 'aux23' order represents '1' with '1'
c Var 'aux23' order represents '0' with '-503'
c Encoding variable: aux24 with domain: bool (representing constraint (1<=((0<grid_00003_00004) + (0<grid_00004_00004) + (0<grid_00001_00004))))
c Var 'aux24' direct represents '0' with '-504'
c Var 'aux24' direct represents '1' with '504'
c Var 'aux24' order represents '1' with '1'
c Var 'aux24' order represents '0' with '-504'
c Encoding variable: aux25 with domain: bool (representing constraint (((0<grid_00002_00000) + (0<grid_00003_00000) + (0<grid_00000_00000))<=1))
c Var 'aux25' direct represents '0' with '-505'
c Var 'aux25' direct represents '1' with '505'
c Var 'aux25' order represents '1' with '1'
c Var 'aux25' order represents '0' with '-505'
c Encoding variable: aux26 with domain: bool (representing constraint (((0<grid_00002_00001) + (0<grid_00003_00001) + (0<grid_00004_00001) + (0<grid_00000_00001) + (0<grid_00001_00001))<=1))
c Var 'aux26' direct represents '0' with '-506'
c Var 'aux26' direct represents '1' with '506'
c Var 'aux26' order represents '1' with '1'
c Var 'aux26' order represents '0' with '-506'
c Encoding variable: aux27 with domain: bool (representing constraint (((0<grid_00002_00002) + (0<grid_00004_00002) + (0<grid_00000_00002) + (0<grid_00001_00002))<=1))
c Var 'aux27' direct represents '0' with '-507'
c Var 'aux27' direct represents '1' with '507'
c Var 'aux27' order represents '1' with '1'
c Var 'aux27' order represents '0' with '-507'
c Encoding variable: aux28 with domain: bool (representing constraint (((0<grid_00002_00003) + (0<grid_00003_00003) + (0<grid_00000_00003) + (0<grid_00001_00003))<=2))
c Var 'aux28' direct represents '0' with '-508'
c Var 'aux28' direct represents '1' with '508'
c Var 'aux28' order represents '1' with '1'
c Var 'aux28' order represents '0' with '-508'
c Encoding variable: aux29 with domain: bool (representing constraint (((0<grid_00003_00004) + (0<grid_00004_00004) + (0<grid_00001_00004))<=1))
c Var 'aux29' direct represents '0' with '-509'
c Var 'aux29' direct represents '1' with '509'
c Var 'aux29' order represents '1' with '1'
c Var 'aux29' order represents '0' with '-509'
c Encoding variable: aux30 with domain: int(0..2) (representing constraint ((grid_00003_00000=1) + (grid_00000_00003=1)))
c Both direct and order encoding.
c Var 'aux30' order represents '0' with '510'
c Var 'aux30' direct represents '0' with '510'
c Var 'aux30' order represents '1' with '511'
-510 511 0
c Var 'aux30' direct represents '1' with '512'
510 -511 512 0
-512 511 0
-512 -510 0
c Var 'aux30' direct represents '2' with '-511'
510 512 -511 0
c Encoding variable: aux31 with domain: int(0..2) (representing constraint ((grid_00000_00002=1) + (grid_00003_00001=1)))
c Both direct and order encoding.
c Var 'aux31' order represents '0' with '513'
c Var 'aux31' direct represents '0' with '513'
c Var 'aux31' order represents '1' with '514'
-513 514 0
c Var 'aux31' direct represents '1' with '515'
513 -514 515 0
-515 514 0
-515 -513 0
c Var 'aux31' direct represents '2' with '-514'
513 515 -514 0
c Encoding variable: aux32 with domain: int(0..2) (representing constraint ((grid_00000_00001=1) + (grid_00003_00004=1)))
c Both direct and order encoding.
c Var 'aux32' order represents '0' with '516'
c Var 'aux32' direct represents '0' with '516'
c Var 'aux32' order represents '1' with '517'
-516 517 0
c Var 'aux32' direct represents '1' with '518'
516 -517 518 0
-518 517 0
-518 -516 0
c Var 'aux32' direct represents '2' with '-517'
516 518 -517 0
c Encoding variable: aux33 with domain: int(0..2) (representing constraint ((1=grid_00001_00004) + (grid_00000_00000=1)))
c Both direct and order encoding.
c Var 'aux33' order represents '0' with '519'
c Var 'aux33' direct represents '0' with '519'
c Var 'aux33' order represents '1' with '520'
-519 520 0
c Var 'aux33' direct represents '1' with '521'
519 -520 521 0
-521 520 0
-521 -519 0
c Var 'aux33' direct represents '2' with '-520'
519 521 -520 0
c Encoding variable: aux34 with domain: int(0..2) (representing constraint ((grid_00004_00004=1) + (1=grid_00002_00000)))
c Both direct and order encoding.
c Var 'aux34' order represents '0' with '522'
c Var 'aux34' direct represents '0' with '522'
c Var 'aux34' order represents '1' with '523'
-522 523 0
c Var 'aux34' direct represents '1' with '524'
522 -523 524 0
-524 523 0
-524 -522 0
c Var 'aux34' direct represents '2' with '-523'
522 524 -523 0
c Encoding variable: aux35 with domain: int(0..2) (representing constraint ((grid_00004_00002=1) + (1=grid_00001_00001)))
c Both direct and order encoding.
c Var 'aux35' order represents '0' with '525'
c Var 'aux35' direct represents '0' with '525'
c Var 'aux35' order represents '1' with '526'
-525 526 0
c Var 'aux35' direct represents '1' with '527'
525 -526 527 0
-527 526 0
-527 -525 0
c Var 'aux35' direct represents '2' with '-526'
525 527 -526 0
c Encoding variable: aux36 with domain: int(0..2) (representing constraint ((grid_00004_00001=1) + (1=grid_00002_00001)))
c Both direct and order encoding.
c Var 'aux36' order represents '0' with '528'
c Var 'aux36' direct represents '0' with '528'
c Var 'aux36' order represents '1' with '529'
-528 529 0
c Var 'aux36' direct represents '1' with '530'
528 -529 530 0
-530 529 0
-530 -528 0
c Var 'aux36' direct represents '2' with '-529'
528 530 -529 0
c Encoding variable: aux37 with domain: int(0..2) (representing constraint ((1=grid_00002_00003) + (1=grid_00002_00002)))
c Both direct and order encoding.
c Var 'aux37' order represents '0' with '531'
c Var 'aux37' direct represents '0' with '531'
c Var 'aux37' order represents '1' with '532'
-531 532 0
c Var 'aux37' direct represents '1' with '533'
531 -532 533 0
-533 532 0
-533 -531 0
c Var 'aux37' direct represents '2' with '-532'
531 533 -532 0
c Encoding variable: aux38 with domain: int(0..2) (representing constraint ((grid_00003_00003=1) + (1=grid_00001_00002)))
c Both direct and order encoding.
c Var 'aux38' order represents '0' with '534'
c Var 'aux38' direct represents '0' with '534'
c Var 'aux38' order represents '1' with '535'
-534 535 0
c Var 'aux38' direct represents '1' with '536'
534 -535 536 0
-536 535 0
-536 -534 0
c Var 'aux38' direct represents '2' with '-535'
534 536 -535 0
c Encoding variable: aux39 with domain: int(0..3) (representing constraint ((1=grid_00001_00003) + aux38))
c Both direct and order encoding.
c Var 'aux39' order represents '0' with '537'
c Var 'aux39' direct represents '0' with '537'
c Var 'aux39' order represents '1' with '538'
-537 538 0
c Var 'aux39' direct represents '1' with '539'
537 -538 539 0
-539 538 0
-539 -537 0
c Var 'aux39' order represents '2' with '540'
-538 540 0
c Var 'aux39' direct represents '2' with '541'
538 -540 541 0
-541 540 0
-541 -538 0
c Var 'aux39' direct represents '3' with '-540'
537 539 541 -540 0
c Encoding variable: aux40 with domain: int(0..4) (representing constraint (aux30 + aux36))
c Both direct and order encoding.
c Var 'aux40' order represents '0' with '542'
c Var 'aux40' direct represents '0' with '542'
c Var 'aux40' order represents '1' with '543'
-542 543 0
c Var 'aux40' direct represents '1' with '544'
542 -543 544 0
-544 543 0
-544 -542 0
c Var 'aux40' order represents '2' with '545'
-543 545 0
c Var 'aux40' direct represents '2' with '546'
543 -545 546 0
-546 545 0
-546 -543 0
c Var 'aux40' order represents '3' with '547'
-545 547 0
c Var 'aux40' direct represents '3' with '548'
545 -547 548 0
-548 547 0
-548 -545 0
c Var 'aux40' direct represents '4' with '-547'
542 544 546 548 -547 0
c Encoding variable: aux41 with domain: int(0..4) (representing constraint (aux32 + aux31))
c Both direct and order encoding.
c Var 'aux41' order represents '0' with '549'
c Var 'aux41' direct represents '0' with '549'
c Var 'aux41' order represents '1' with '550'
-549 550 0
c Var 'aux41' direct represents '1' with '551'
549 -550 551 0
-551 550 0
-551 -549 0
c Var 'aux41' order represents '2' with '552'
-550 552 0
c Var 'aux41' direct represents '2' with '553'
550 -552 553 0
-553 552 0
-553 -550 0
c Var 'aux41' order represents '3' with '554'
-552 554 0
c Var 'aux41' direct represents '3' with '555'
552 -554 555 0
-555 554 0
-555 -552 0
c Var 'aux41' direct represents '4' with '-554'
549 551 553 555 -554 0
c Encoding variable: aux42 with domain: int(0..4) (representing constraint (aux37 + aux35))
c Both direct and order encoding.
c Var 'aux42' order represents '0' with '556'
c Var 'aux42' direct represents '0' with '556'
c Var 'aux42' order represents '1' with '557'
-556 557 0
c Var 'aux42' direct represents '1' with '558'
556 -557 558 0
-558 557 0
-558 -556 0
c Var 'aux42' order represents '2' with '559'
-557 559 0
c Var 'aux42' direct represents '2' with '560'
557 -559 560 0
-560 559 0
-560 -557 0
c Var 'aux42' order represents '3' with '561'
-559 561 0
c Var 'aux42' direct represents '3' with '562'
559 -561 562 0
-562 561 0
-562 -559 0
c Var 'aux42' direct represents '4' with '-561'
556 558 560 562 -561 0
c Encoding variable: aux43 with domain: int(0..4) (representing constraint (aux34 + aux33))
c Both direct and order encoding.
c Var 'aux43' order represents '0' with '563'
c Var 'aux43' direct represents '0' with '563'
c Var 'aux43' order represents '1' with '564'
-563 564 0
c Var 'aux43' direct represents '1' with '565'
563 -564 565 0
-565 564 0
-565 -563 0
c Var 'aux43' order represents '2' with '566'
-564 566 0
c Var 'aux43' direct represents '2' with '567'
564 -566 567 0
-567 566 0
-567 -564 0
c Var 'aux43' order represents '3' with '568'
-566 568 0
c Var 'aux43' direct represents '3' with '569'
566 -568 569 0
-569 568 0
-569 -566 0
c Var 'aux43' direct represents '4' with '-568'
563 565 567 569 -568 0
c Encoding variable: aux44 with domain: int(0..7) (representing constraint (aux39 + aux43))
c Both direct and order encoding.
c Var 'aux44' order represents '0' with '570'
c Var 'aux44' direct represents '0' with '570'
c Var 'aux44' order represents '1' with '571'
-570 571 0
c Var 'aux44' direct represents '1' with '572'
570 -571 572 0
-572 571 0
-572 -570 0
c Var 'aux44' order represents '2' with '573'
-571 573 0
c Var 'aux44' direct represents '2' with '574'
571 -573 574 0
-574 573 0
-574 -571 0
c Var 'aux44' order represents '3' with '575'
-573 575 0
c Var 'aux44' direct represents '3' with '576'
573 -575 576 0
-576 575 0
-576 -573 0
c Var 'aux44' order represents '4' with '577'
-575 577 0
c Var 'aux44' direct represents '4' with '578'
575 -577 578 0
-578 577 0
-578 -575 0
c Var 'aux44' order represents '5' with '579'
-577 579 0
c Var 'aux44' direct represents '5' with '580'
577 -579 580 0
-580 579 0
-580 -577 0
c Var 'aux44' order represents '6' with '581'
-579 581 0
c Var 'aux44' direct represents '6' with '582'
579 -581 582 0
-582 581 0
-582 -579 0
c Var 'aux44' direct represents '7' with '-581'
570 572 574 576 578 580 582 -581 0
c Encoding variable: aux45 with domain: int(0..8) (representing constraint (aux41 + aux40))
c Both direct and order encoding.
c Var 'aux45' order represents '0' with '583'
c Var 'aux45' direct represents '0' with '583'
c Var 'aux45' order represents '1' with '584'
-583 584 0
c Var 'aux45' direct represents '1' with '585'
583 -584 585 0
-585 584 0
-585 -583 0
c Var 'aux45' order represents '2' with '586'
-584 586 0
c Var 'aux45' direct represents '2' with '587'
584 -586 587 0
-587 586 0
-587 -584 0
c Var 'aux45' order represents '3' with '588'
-586 588 0
c Var 'aux45' direct represents '3' with '589'
586 -588 589 0
-589 588 0
-589 -586 0
c Var 'aux45' order represents '4' with '590'
-588 590 0
c Var 'aux45' direct represents '4' with '591'
588 -590 591 0
-591 590 0
-591 -588 0
c Var 'aux45' order represents '5' with '592'
-590 592 0
c Var 'aux45' direct represents '5' with '593'
590 -592 593 0
-593 592 0
-593 -590 0
c Var 'aux45' order represents '6' with '594'
-592 594 0
c Var 'aux45' direct represents '6' with '595'
592 -594 595 0
-595 594 0
-595 -592 0
c Var 'aux45' order represents '7' with '596'
-594 596 0
c Var 'aux45' direct represents '7' with '597'
594 -596 597 0
-597 596 0
-597 -594 0
c Var 'aux45' direct represents '8' with '-596'
583 585 587 589 591 593 595 597 -596 0
c Encoding variable: aux46 with domain: int(0..2) (representing constraint ((grid_00003_00000=2) + (grid_00000_00003=2)))
c Both direct and order encoding.
c Var 'aux46' order represents '0' with '598'
c Var 'aux46' direct represents '0' with '598'
c Var 'aux46' order represents '1' with '599'
-598 599 0
c Var 'aux46' direct represents '1' with '600'
598 -599 600 0
-600 599 0
-600 -598 0
c Var 'aux46' direct represents '2' with '-599'
598 600 -599 0
c Encoding variable: aux47 with domain: int(0..2) (representing constraint ((grid_00000_00002=2) + (grid_00003_00001=2)))
c Both direct and order encoding.
c Var 'aux47' order represents '0' with '601'
c Var 'aux47' direct represents '0' with '601'
c Var 'aux47' order represents '1' with '602'
-601 602 0
c Var 'aux47' direct represents '1' with '603'
601 -602 603 0
-603 602 0
-603 -601 0
c Var 'aux47' direct represents '2' with '-602'
601 603 -602 0
c Encoding variable: aux48 with domain: int(0..2) (representing constraint ((grid_00000_00001=2) + (grid_00003_00004=2)))
c Both direct and order encoding.
c Var 'aux48' order represents '0' with '604'
c Var 'aux48' direct represents '0' with '604'
c Var 'aux48' order represents '1' with '605'
-604 605 0
c Var 'aux48' direct represents '1' with '606'
604 -605 606 0
-606 605 0
-606 -604 0
c Var 'aux48' direct represents '2' with '-605'
604 606 -605 0
c Encoding variable: aux49 with domain: int(0..2) (representing constraint ((2=grid_00001_00004) + (grid_00000_00000=2)))
c Both direct and order encoding.
c Var 'aux49' order represents '0' with '607'
c Var 'aux49' direct represents '0' with '607'
c Var 'aux49' order represents '1' with '608'
-607 608 0
c Var 'aux49' direct represents '1' with '609'
607 -608 609 0
-609 608 0
-609 -607 0
c Var 'aux49' direct represents '2' with '-608'
607 609 -608 0
c Encoding variable: aux50 with domain: int(0..2) (representing constraint ((grid_00004_00004=2) + (2=grid_00002_00000)))
c Both direct and order encoding.
c Var 'aux50' order represents '0' with '610'
c Var 'aux50' direct represents '0' with '610'
c Var 'aux50' order represents '1' with '611'
-610 611 0
c Var 'aux50' direct represents '1' with '612'
610 -611 612 0
-612 611 0
-612 -610 0
c Var 'aux50' direct represents '2' with '-611'
610 612 -611 0
c Encoding variable: aux51 with domain: int(0..2) (representing constraint ((grid_00004_00002=2) + (2=grid_00001_00001)))
c Both direct and order encoding.
c Var 'aux51' order represents '0' with '613'
c Var 'aux51' direct represents '0' with '613'
c Var 'aux51' order represents '1' with '614'
-613 614 0
c Var 'aux51' direct represents '1' with '615'
613 -614 615 0
-615 614 0
-615 -613 0
c Var 'aux51' direct represents '2' with '-614'
613 615 -614 0
c Encoding variable: aux52 with domain: int(0..2) (representing constraint ((grid_00004_00001=2) + (2=grid_00002_00001)))
c Both direct and order encoding.
c Var 'aux52' order represents '0' with '616'
c Var 'aux52' direct represents '0' with '616'
c Var 'aux52' order represents '1' with '617'
-616 617 0
c Var 'aux52' direct represents '1' with '618'
616 -617 618 0
-618 617 0
-618 -616 0
c Var 'aux52' direct represents '2' with '-617'
616 618 -617 0
c Encoding variable: aux53 with domain: int(0..2) (representing constraint ((2=grid_00002_00003) + (2=grid_00002_00002)))
c Both direct and order encoding.
c Var 'aux53' order represents '0' with '619'
c Var 'aux53' direct represents '0' with '619'
c Var 'aux53' order represents '1' with '620'
-619 620 0
c Var 'aux53' direct represents '1' with '621'
619 -620 621 0
-621 620 0
-621 -619 0
c Var 'aux53' direct represents '2' with '-620'
619 621 -620 0
c Encoding variable: aux54 with domain: int(0..2) (representing constraint ((grid_00003_00003=2) + (2=grid_00001_00002)))
c Both direct and order encoding.
c Var 'aux54' order represents '0' with '622'
c Var 'aux54' direct represents '0' with '622'
c Var 'aux54' order represents '1' with '623'
-622 623 0
c Var 'aux54' direct represents '1' with '624'
622 -623 624 0
-624 623 0
-624 -622 0
c Var 'aux54' direct represents '2' with '-623'
622 624 -623 0
c Encoding variable: aux55 with domain: int(0..3) (representing constraint ((2=grid_00001_00003) + aux54))
c Both direct and order encoding.
c Var 'aux55' order represents '0' with '625'
c Var 'aux55' direct represents '0' with '625'
c Var 'aux55' order represents '1' with '626'
-625 626 0
c Var 'aux55' direct represents '1' with '627'
625 -626 627 0
-627 626 0
-627 -625 0
c Var 'aux55' order represents '2' with '628'
-626 628 0
c Var 'aux55' direct represents '2' with '629'
626 -628 629 0
-629 628 0
-629 -626 0
c Var 'aux55' direct represents '3' with '-628'
625 627 629 -628 0
c Encoding variable: aux56 with domain: int(0..4) (representing constraint (aux46 + aux52))
c Both direct and order encoding.
c Var 'aux56' order represents '0' with '630'
c Var 'aux56' direct represents '0' with '630'
c Var 'aux56' order represents '1' with '631'
-630 631 0
c Var 'aux56' direct represents '1' with '632'
630 -631 632 0
-632 631 0
-632 -630 0
c Var 'aux56' order represents '2' with '633'
-631 633 0
c Var 'aux56' direct represents '2' with '634'
631 -633 634 0
-634 633 0
-634 -631 0
c Var 'aux56' order represents '3' with '635'
-633 635 0
c Var 'aux56' direct represents '3' with '636'
633 -635 636 0
-636 635 0
-636 -633 0
c Var 'aux56' direct represents '4' with '-635'
630 632 634 636 -635 0
c Encoding variable: aux57 with domain: int(0..4) (representing constraint (aux48 + aux47))
c Both direct and order encoding.
c Var 'aux57' order represents '0' with '637'
c Var 'aux57' direct represents '0' with '637'
c Var 'aux57' order represents '1' with '638'
-637 638 0
c Var 'aux57' direct represents '1' with '639'
637 -638 639 0
-639 638 0
-639 -637 0
c Var 'aux57' order represents '2' with '640'
-638 640 0
c Var 'aux57' direct represents '2' with '641'
638 -640 641 0
-641 640 0
-641 -638 0
c Var 'aux57' order represents '3' with '642'
-640 642 0
c Var 'aux57' direct represents '3' with '643'
640 -642 643 0
-643 642 0
-643 -640 0
c Var 'aux57' direct represents '4' with '-642'
637 639 641 643 -642 0
c Encoding variable: aux58 with domain: int(0..4) (representing constraint (aux53 + aux51))
c Both direct and order encoding.
c Var 'aux58' order represents '0' with '644'
c Var 'aux58' direct represents '0' with '644'
c Var 'aux58' order represents '1' with '645'
-644 645 0
c Var 'aux58' direct represents '1' with '646'
644 -645 646 0
-646 645 0
-646 -644 0
c Var 'aux58' order represents '2' with '647'
-645 647 0
c Var 'aux58' direct represents '2' with '648'
645 -647 648 0
-648 647 0
-648 -645 0
c Var 'aux58' order represents '3' with '649'
-647 649 0
c Var 'aux58' direct represents '3' with '650'
647 -649 650 0
-650 649 0
-650 -647 0
c Var 'aux58' direct represents '4' with '-649'
644 646 648 650 -649 0
c Encoding variable: aux59 with domain: int(0..4) (representing constraint (aux50 + aux49))
c Both direct and order encoding.
c Var 'aux59' order represents '0' with '651'
c Var 'aux59' direct represents '0' with '651'
c Var 'aux59' order represents '1' with '652'
-651 652 0
c Var 'aux59' direct represents '1' with '653'
651 -652 653 0
-653 652 0
-653 -651 0
c Var 'aux59' order represents '2' with '654'
-652 654 0
c Var 'aux59' direct represents '2' with '655'
652 -654 655 0
-655 654 0
-655 -652 0
c Var 'aux59' order represents '3' with '656'
-654 656 0
c Var 'aux59' direct represents '3' with '657'
654 -656 657 0
-657 656 0
-657 -654 0
c Var 'aux59' direct represents '4' with '-656'
651 653 655 657 -656 0
c Encoding variable: aux60 with domain: int(0..7) (representing constraint (aux55 + aux59))
c Both direct and order encoding.
c Var 'aux60' order represents '0' with '658'
c Var 'aux60' direct represents '0' with '658'
c Var 'aux60' order represents '1' with '659'
-658 659 0
c Var 'aux60' direct represents '1' with '660'
658 -659 660 0
-660 659 0
-660 -658 0
c Var 'aux60' order represents '2' with '661'
-659 661 0
c Var 'aux60' direct represents '2' with '662'
659 -661 662 0
-662 661 0
-662 -659 0
c Var 'aux60' order represents '3' with '663'
-661 663 0
c Var 'aux60' direct represents '3' with '664'
661 -663 664 0
-664 663 0
-664 -661 0
c Var 'aux60' order represents '4' with '665'
-663 665 0
c Var 'aux60' direct represents '4' with '666'
663 -665 666 0
-666 665 0
-666 -663 0
c Var 'aux60' order represents '5' with '667'
-665 667 0
c Var 'aux60' direct represents '5' with '668'
665 -667 668 0
-668 667 0
-668 -665 0
c Var 'aux60' order represents '6' with '669'
-667 669 0
c Var 'aux60' direct represents '6' with '670'
667 -669 670 0
-670 669 0
-670 -667 0
c Var 'aux60' direct represents '7' with '-669'
658 660 662 664 666 668 670 -669 0
c Encoding variable: aux61 with domain: int(0..8) (representing constraint (aux57 + aux56))
c Both direct and order encoding.
c Var 'aux61' order represents '0' with '671'
c Var 'aux61' direct represents '0' with '671'
c Var 'aux61' order represents '1' with '672'
-671 672 0
c Var 'aux61' direct represents '1' with '673'
671 -672 673 0
-673 672 0
-673 -671 0
c Var 'aux61' order represents '2' with '674'
-672 674 0
c Var 'aux61' direct represents '2' with '675'
672 -674 675 0
-675 674 0
-675 -672 0
c Var 'aux61' order represents '3' with '676'
-674 676 0
c Var 'aux61' direct represents '3' with '677'
674 -676 677 0
-677 676 0
-677 -674 0
c Var 'aux61' order represents '4' with '678'
-676 678 0
c Var 'aux61' direct represents '4' with '679'
676 -678 679 0
-679 678 0
-679 -676 0
c Var 'aux61' order represents '5' with '680'
-678 680 0
c Var 'aux61' direct represents '5' with '681'
678 -680 681 0
-681 680 0
-681 -678 0
c Var 'aux61' order represents '6' with '682'
-680 682 0
c Var 'aux61' direct represents '6' with '683'
680 -682 683 0
-683 682 0
-683 -680 0
c Var 'aux61' order represents '7' with '684'
-682 684 0
c Var 'aux61' direct represents '7' with '685'
682 -684 685 0
-685 684 0
-685 -682 0
c Var 'aux61' direct represents '8' with '-684'
671 673 675 677 679 681 683 685 -684 0
c Encoding variable: aux62 with domain: int(0..2) (representing constraint ((grid_00003_00000=3) + (grid_00000_00003=3)))
c Both direct and order encoding.
c Var 'aux62' order represents '0' with '686'
c Var 'aux62' direct represents '0' with '686'
c Var 'aux62' order represents '1' with '687'
-686 687 0
c Var 'aux62' direct represents '1' with '688'
686 -687 688 0
-688 687 0
-688 -686 0
c Var 'aux62' direct represents '2' with '-687'
686 688 -687 0
c Encoding variable: aux63 with domain: int(0..2) (representing constraint ((grid_00000_00002=3) + (grid_00003_00001=3)))
c Both direct and order encoding.
c Var 'aux63' order represents '0' with '689'
c Var 'aux63' direct represents '0' with '689'
c Var 'aux63' order represents '1' with '690'
-689 690 0
c Var 'aux63' direct represents '1' with '691'
689 -690 691 0
-691 690 0
-691 -689 0
c Var 'aux63' direct represents '2' with '-690'
689 691 -690 0
c Encoding variable: aux64 with domain: int(0..2) (representing constraint ((grid_00000_00001=3) + (grid_00003_00004=3)))
c Both direct and order encoding.
c Var 'aux64' order represents '0' with '692'
c Var 'aux64' direct represents '0' with '692'
c Var 'aux64' order represents '1' with '693'
-692 693 0
c Var 'aux64' direct represents '1' with '694'
692 -693 694 0
-694 693 0
-694 -692 0
c Var 'aux64' direct represents '2' with '-693'
692 694 -693 0
c Encoding variable: aux65 with domain: int(0..2) (representing constraint ((3=grid_00001_00004) + (grid_00000_00000=3)))
c Both direct and order encoding.
c Var 'aux65' order represents '0' with '695'
c Var 'aux65' direct represents '0' with '695'
c Var 'aux65' order represents '1' with '696'
-695 696 0
c Var 'aux65' direct represents '1' with '697'
695 -696 697 0
-697 696 0
-697 -695 0
c Var 'aux65' direct represents '2' with '-696'
695 697 -696 0
c Encoding variable: aux66 with domain: int(0..2) (representing constraint ((grid_00004_00004=3) + (3=grid_00002_00000)))
c Both direct and order encoding.
c Var 'aux66' order represents '0' with '698'
c Var 'aux66' direct represents '0' with '698'
c Var 'aux66' order represents '1' with '699'
-698 699 0
c Var 'aux66' direct represents '1' with '700'
698 -699 700 0
-700 699 0
-700 -698 0
c Var 'aux66' direct represents '2' with '-699'
698 700 -699 0
c Encoding variable: aux67 with domain: int(0..2) (representing constraint ((grid_00004_00002=3) + (3=grid_00001_00001)))
c Both direct and order encoding.
c Var 'aux67' order represents '0' with '701'
c Var 'aux67' direct represents '0' with '701'
c Var 'aux67' order represents '1' with '702'
-701 702 0
c Var 'aux67' direct represents '1' with '703'
701 -702 703 0
-703 702 0
-703 -701 0
c Var 'aux67' direct represents '2' with '-702'
701 703 -702 0
c Encoding variable: aux68 with domain: int(0..2) (representing constraint ((grid_00004_00001=3) + (3=grid_00002_00001)))
c Both direct and order encoding.
c Var 'aux68' order represents '0' with '704'
c Var 'aux68' direct represents '0' with '704'
c Var 'aux68' order represents '1' with '705'
-704 705 0
c Var 'aux68' direct represents '1' with '706'
704 -705 706 0
-706 705 0
-706 -704 0
c Var 'aux68' direct represents '2' with '-705'
704 706 -705 0
c Encoding variable: aux69 with domain: int(0..2) (representing constraint ((3=grid_00002_00003) + (3=grid_00002_00002)))
c Both direct and order encoding.
c Var 'aux69' order represents '0' with '707'
c Var 'aux69' direct represents '0' with '707'
c Var 'aux69' order represents '1' with '708'
-707 708 0
c Var 'aux69' direct represents '1' with '709'
707 -708 709 0
-709 708 0
-709 -707 0
c Var 'aux69' direct represents '2' with '-708'
707 709 -708 0
c Encoding variable: aux70 with domain: int(0..2) (representing constraint ((grid_00003_00003=3) + (3=grid_00001_00002)))
c Both direct and order encoding.
c Var 'aux70' order represents '0' with '710'
c Var 'aux70' direct represents '0' with '710'
c Var 'aux70' order represents '1' with '711'
-710 711 0
c Var 'aux70' direct represents '1' with '712'
710 -711 712 0
-712 711 0
-712 -710 0
c Var 'aux70' direct represents '2' with '-711'
710 712 -711 0
c Encoding variable: aux71 with domain: int(0..3) (representing constraint ((3=grid_00001_00003) + aux70))
c Both direct and order encoding.
c Var 'aux71' order represents '0' with '713'
c Var 'aux71' direct represents '0' with '713'
c Var 'aux71' order represents '1' with '714'
-713 714 0
c Var 'aux71' direct represents '1' with '715'
713 -714 715 0
-715 714 0
-715 -713 0
c Var 'aux71' order represents '2' with '716'
-714 716 0
c Var 'aux71' direct represents '2' with '717'
714 -716 717 0
-717 716 0
-717 -714 0
c Var 'aux71' direct represents '3' with '-716'
713 715 717 -716 0
c Encoding variable: aux72 with domain: int(0..4) (representing constraint (aux62 + aux68))
c Both direct and order encoding.
c Var 'aux72' order represents '0' with '718'
c Var 'aux72' direct represents '0' with '718'
c Var 'aux72' order represents '1' with '719'
-718 719 0
c Var 'aux72' direct represents '1' with '720'
718 -719 720 0
-720 719 0
-720 -718 0
c Var 'aux72' order represents '2' with '721'
-719 721 0
c Var 'aux72' direct represents '2' with '722'
719 -721 722 0
-722 721 0
-722 -719 0
c Var 'aux72' order represents '3' with '723'
-721 723 0
c Var 'aux72' direct represents '3' with '724'
721 -723 724 0
-724 723 0
-724 -721 0
c Var 'aux72' direct represents '4' with '-723'
718 720 722 724 -723 0
c Encoding variable: aux73 with domain: int(0..4) (representing constraint (aux64 + aux63))
c Both direct and order encoding.
c Var 'aux73' order represents '0' with '725'
c Var 'aux73' direct represents '0' with '725'
c Var 'aux73' order represents '1' with '726'
-725 726 0
c Var 'aux73' direct represents '1' with '727'
725 -726 727 0
-727 726 0
-727 -725 0
c Var 'aux73' order represents '2' with '728'
-726 728 0
c Var 'aux73' direct represents '2' with '729'
726 -728 729 0
-729 728 0
-729 -726 0
c Var 'aux73' order represents '3' with '730'
-728 730 0
c Var 'aux73' direct represents '3' with '731'
728 -730 731 0
-731 730 0
-731 -728 0
c Var 'aux73' direct represents '4' with '-730'
725 727 729 731 -730 0
c Encoding variable: aux74 with domain: int(0..4) (representing constraint (aux69 + aux67))
c Both direct and order encoding.
c Var 'aux74' order represents '0' with '732'
c Var 'aux74' direct represents '0' with '732'
c Var 'aux74' order represents '1' with '733'
-732 733 0
c Var 'aux74' direct represents '1' with '734'
732 -733 734 0
-734 733 0
-734 -732 0
c Var 'aux74' order represents '2' with '735'
-733 735 0
c Var 'aux74' direct represents '2' with '736'
733 -735 736 0
-736 735 0
-736 -733 0
c Var 'aux74' order represents '3' with '737'
-735 737 0
c Var 'aux74' direct represents '3' with '738'
735 -737 738 0
-738 737 0
-738 -735 0
c Var 'aux74' direct represents '4' with '-737'
732 734 736 738 -737 0
c Encoding variable: aux75 with domain: int(0..4) (representing constraint (aux66 + aux65))
c Both direct and order encoding.
c Var 'aux75' order represents '0' with '739'
c Var 'aux75' direct represents '0' with '739'
c Var 'aux75' order represents '1' with '740'
-739 740 0
c Var 'aux75' direct represents '1' with '741'
739 -740 741 0
-741 740 0
-741 -739 0
c Var 'aux75' order represents '2' with '742'
-740 742 0
c Var 'aux75' direct represents '2' with '743'
740 -742 743 0
-743 742 0
-743 -740 0
c Var 'aux75' order represents '3' with '744'
-742 744 0
c Var 'aux75' direct represents '3' with '745'
742 -744 745 0
-745 744 0
-745 -742 0
c Var 'aux75' direct represents '4' with '-744'
739 741 743 745 -744 0
c Encoding variable: aux76 with domain: int(0..7) (representing constraint (aux71 + aux75))
c Both direct and order encoding.
c Var 'aux76' order represents '0' with '746'
c Var 'aux76' direct represents '0' with '746'
c Var 'aux76' order represents '1' with '747'
-746 747 0
c Var 'aux76' direct represents '1' with '748'
746 -747 748 0
-748 747 0
-748 -746 0
c Var 'aux76' order represents '2' with '749'
-747 749 0
c Var 'aux76' direct represents '2' with '750'
747 -749 750 0
-750 749 0
-750 -747 0
c Var 'aux76' order represents '3' with '751'
-749 751 0
c Var 'aux76' direct represents '3' with '752'
749 -751 752 0
-752 751 0
-752 -749 0
c Var 'aux76' order represents '4' with '753'
-751 753 0
c Var 'aux76' direct represents '4' with '754'
751 -753 754 0
-754 753 0
-754 -751 0
c Var 'aux76' order represents '5' with '755'
-753 755 0
c Var 'aux76' direct represents '5' with '756'
753 -755 756 0
-756 755 0
-756 -753 0
c Var 'aux76' order represents '6' with '757'
-755 757 0
c Var 'aux76' direct represents '6' with '758'
755 -757 758 0
-758 757 0
-758 -755 0
c Var 'aux76' direct represents '7' with '-757'
746 748 750 752 754 756 758 -757 0
c Encoding variable: aux77 with domain: int(0..8) (representing constraint (aux73 + aux72))
c Both direct and order encoding.
c Var 'aux77' order represents '0' with '759'
c Var 'aux77' direct represents '0' with '759'
c Var 'aux77' order represents '1' with '760'
-759 760 0
c Var 'aux77' direct represents '1' with '761'
759 -760 761 0
-761 760 0
-761 -759 0
c Var 'aux77' order represents '2' with '762'
-760 762 0
c Var 'aux77' direct represents '2' with '763'
760 -762 763 0
-763 762 0
-763 -760 0
c Var 'aux77' order represents '3' with '764'
-762 764 0
c Var 'aux77' direct represents '3' with '765'
762 -764 765 0
-765 764 0
-765 -762 0
c Var 'aux77' order represents '4' with '766'
-764 766 0
c Var 'aux77' direct represents '4' with '767'
764 -766 767 0
-767 766 0
-767 -764 0
c Var 'aux77' order represents '5' with '768'
-766 768 0
c Var 'aux77' direct represents '5' with '769'
766 -768 769 0
-769 768 0
-769 -766 0
c Var 'aux77' order represents '6' with '770'
-768 770 0
c Var 'aux77' direct represents '6' with '771'
768 -770 771 0
-771 770 0
-771 -768 0
c Var 'aux77' order represents '7' with '772'
-770 772 0
c Var 'aux77' direct represents '7' with '773'
770 -772 773 0
-773 772 0
-773 -770 0
c Var 'aux77' direct represents '8' with '-772'
759 761 763 765 767 769 771 773 -772 0
c Encoding variable: aux78 with domain: int(0..2) (representing constraint ((grid_00003_00000=4) + (grid_00000_00003=4)))
c Both direct and order encoding.
c Var 'aux78' order represents '0' with '774'
c Var 'aux78' direct represents '0' with '774'
c Var 'aux78' order represents '1' with '775'
-774 775 0
c Var 'aux78' direct represents '1' with '776'
774 -775 776 0
-776 775 0
-776 -774 0
c Var 'aux78' direct represents '2' with '-775'
774 776 -775 0
c Encoding variable: aux79 with domain: int(0..2) (representing constraint ((grid_00000_00002=4) + (grid_00003_00001=4)))
c Both direct and order encoding.
c Var 'aux79' order represents '0' with '777'
c Var 'aux79' direct represents '0' with '777'
c Var 'aux79' order represents '1' with '778'
-777 778 0
c Var 'aux79' direct represents '1' with '779'
777 -778 779 0
-779 778 0
-779 -777 0
c Var 'aux79' direct represents '2' with '-778'
777 779 -778 0
c Encoding variable: aux80 with domain: int(0..2) (representing constraint ((grid_00000_00001=4) + (grid_00003_00004=4)))
c Both direct and order encoding.
c Var 'aux80' order represents '0' with '780'
c Var 'aux80' direct represents '0' with '780'
c Var 'aux80' order represents '1' with '781'
-780 781 0
c Var 'aux80' direct represents '1' with '782'
780 -781 782 0
-782 781 0
-782 -780 0
c Var 'aux80' direct represents '2' with '-781'
780 782 -781 0
c Encoding variable: aux81 with domain: int(0..2) (representing constraint ((4=grid_00001_00004) + (grid_00000_00000=4)))
c Both direct and order encoding.
c Var 'aux81' order represents '0' with '783'
c Var 'aux81' direct represents '0' with '783'
c Var 'aux81' order represents '1' with '784'
-783 784 0
c Var 'aux81' direct represents '1' with '785'
783 -784 785 0
-785 784 0
-785 -783 0
c Var 'aux81' direct represents '2' with '-784'
783 785 -784 0
c Encoding variable: aux82 with domain: int(0..2) (representing constraint ((grid_00004_00004=4) + (4=grid_00002_00000)))
c Both direct and order encoding.
c Var 'aux82' order represents '0' with '786'
c Var 'aux82' direct represents '0' with '786'
c Var 'aux82' order represents '1' with '787'
-786 787 0
c Var 'aux82' direct represents '1' with '788'
786 -787 788 0
-788 787 0
-788 -786 0
c Var 'aux82' direct represents '2' with '-787'
786 788 -787 0
c Encoding variable: aux83 with domain: int(0..2) (representing constraint ((grid_00004_00002=4) + (4=grid_00001_00001)))
c Both direct and order encoding.
c Var 'aux83' order represents '0' with '789'
c Var 'aux83' direct represents '0' with '789'
c Var 'aux83' order represents '1' with '790'
-789 790 0
c Var 'aux83' direct represents '1' with '791'
789 -790 791 0
-791 790 0
-791 -789 0
c Var 'aux83' direct represents '2' with '-790'
789 791 -790 0
c Encoding variable: aux84 with domain: int(0..2) (representing constraint ((grid_00004_00001=4) + (4=grid_00002_00001)))
c Both direct and order encoding.
c Var 'aux84' order represents '0' with '792'
c Var 'aux84' direct represents '0' with '792'
c Var 'aux84' order represents '1' with '793'
-792 793 0
c Var 'aux84' direct represents '1' with '794'
792 -793 794 0
-794 793 0
-794 -792 0
c Var 'aux84' direct represents '2' with '-793'
792 794 -793 0
c Encoding variable: aux85 with domain: int(0..2) (representing constraint ((4=grid_00002_00003) + (4=grid_00002_00002)))
c Both direct and order encoding.
c Var 'aux85' order represents '0' with '795'
c Var 'aux85' direct represents '0' with '795'
c Var 'aux85' order represents '1' with '796'
-795 796 0
c Var 'aux85' direct represents '1' with '797'
795 -796 797 0
-797 796 0
-797 -795 0
c Var 'aux85' direct represents '2' with '-796'
795 797 -796 0
c Encoding variable: aux86 with domain: int(0..2) (representing constraint ((grid_00003_00003=4) + (4=grid_00001_00002)))
c Both direct and order encoding.
c Var 'aux86' order represents '0' with '798'
c Var 'aux86' direct represents '0' with '798'
c Var 'aux86' order represents '1' with '799'
-798 799 0
c Var 'aux86' direct represents '1' with '800'
798 -799 800 0
-800 799 0
-800 -798 0
c Var 'aux86' direct represents '2' with '-799'
798 800 -799 0
c Encoding variable: aux87 with domain: int(0..3) (representing constraint ((4=grid_00001_00003) + aux86))
c Both direct and order encoding.
c Var 'aux87' order represents '0' with '801'
c Var 'aux87' direct represents '0' with '801'
c Var 'aux87' order represents '1' with '802'
-801 802 0
c Var 'aux87' direct represents '1' with '803'
801 -802 803 0
-803 802 0
-803 -801 0
c Var 'aux87' order represents '2' with '804'
-802 804 0
c Var 'aux87' direct represents '2' with '805'
802 -804 805 0
-805 804 0
-805 -802 0
c Var 'aux87' direct represents '3' with '-804'
801 803 805 -804 0
c Encoding variable: aux88 with domain: int(0..4) (representing constraint (aux78 + aux84))
c Both direct and order encoding.
c Var 'aux88' order represents '0' with '806'
c Var 'aux88' direct represents '0' with '806'
c Var 'aux88' order represents '1' with '807'
-806 807 0
c Var 'aux88' direct represents '1' with '808'
806 -807 808 0
-808 807 0
-808 -806 0
c Var 'aux88' order represents '2' with '809'
-807 809 0
c Var 'aux88' direct represents '2' with '810'
807 -809 810 0
-810 809 0
-810 -807 0
c Var 'aux88' order represents '3' with '811'
-809 811 0
c Var 'aux88' direct represents '3' with '812'
809 -811 812 0
-812 811 0
-812 -809 0
c Var 'aux88' direct represents '4' with '-811'
806 808 810 812 -811 0
c Encoding variable: aux89 with domain: int(0..4) (representing constraint (aux80 + aux79))
c Both direct and order encoding.
c Var 'aux89' order represents '0' with '813'
c Var 'aux89' direct represents '0' with '813'
c Var 'aux89' order represents '1' with '814'
-813 814 0
c Var 'aux89' direct represents '1' with '815'
813 -814 815 0
-815 814 0
-815 -813 0
c Var 'aux89' order represents '2' with '816'
-814 816 0
c Var 'aux89' direct represents '2' with '817'
814 -816 817 0
-817 816 0
-817 -814 0
c Var 'aux89' order represents '3' with '818'
-816 818 0
c Var 'aux89' direct represents '3' with '819'
816 -818 819 0
-819 818 0
-819 -816 0
c Var 'aux89' direct represents '4' with '-818'
813 815 817 819 -818 0
c Encoding variable: aux90 with domain: int(0..4) (representing constraint (aux85 + aux83))
c Both direct and order encoding.
c Var 'aux90' order represents '0' with '820'
c Var 'aux90' direct represents '0' with '820'
c Var 'aux90' order represents '1' with '821'
-820 821 0
c Var 'aux90' direct represents '1' with '822'
820 -821 822 0
-822 821 0
-822 -820 0
c Var 'aux90' order represents '2' with '823'
-821 823 0
c Var 'aux90' direct represents '2' with '824'
821 -823 824 0
-824 823 0
-824 -821 0
c Var 'aux90' order represents '3' with '825'
-823 825 0
c Var 'aux90' direct represents '3' with '826'
823 -825 826 0
-826 825 0
-826 -823 0
c Var 'aux90' direct represents '4' with '-825'
820 822 824 826 -825 0
c Encoding variable: aux91 with domain: int(0..4) (representing constraint (aux82 + aux81))
c Both direct and order encoding.
c Var 'aux91' order represents '0' with '827'
c Var 'aux91' direct represents '0' with '827'
c Var 'aux91' order represents '1' with '828'
-827 828 0
c Var 'aux91' direct represents '1' with '829'
827 -828 829 0
-829 828 0
-829 -827 0
c Var 'aux91' order represents '2' with '830'
-828 830 0
c Var 'aux91' direct represents '2' with '831'
828 -830 831 0
-831 830 0
-831 -828 0
c Var 'aux91' order represents '3' with '832'
-830 832 0
c Var 'aux91' direct represents '3' with '833'
830 -832 833 0
-833 832 0
-833 -830 0
c Var 'aux91' direct represents '4' with '-832'
827 829 831 833 -832 0
c Encoding variable: aux92 with domain: int(0..7) (representing constraint (aux87 + aux91))
c Both direct and order encoding.
c Var 'aux92' order represents '0' with '834'
c Var 'aux92' direct represents '0' with '834'
c Var 'aux92' order represents '1' with '835'
-834 835 0
c Var 'aux92' direct represents '1' with '836'
834 -835 836 0
-836 835 0
-836 -834 0
c Var 'aux92' order represents '2' with '837'
-835 837 0
c Var 'aux92' direct represents '2' with '838'
835 -837 838 0
-838 837 0
-838 -835 0
c Var 'aux92' order represents '3' with '839'
-837 839 0
c Var 'aux92' direct represents '3' with '840'
837 -839 840 0
-840 839 0
-840 -837 0
c Var 'aux92' order represents '4' with '841'
-839 841 0
c Var 'aux92' direct represents '4' with '842'
839 -841 842 0
-842 841 0
-842 -839 0
c Var 'aux92' order represents '5' with '843'
-841 843 0
c Var 'aux92' direct represents '5' with '844'
841 -843 844 0
-844 843 0
-844 -841 0
c Var 'aux92' order represents '6' with '845'
-843 845 0
c Var 'aux92' direct represents '6' with '846'
843 -845 846 0
-846 845 0
-846 -843 0
c Var 'aux92' direct represents '7' with '-845'
834 836 838 840 842 844 846 -845 0
c Encoding variable: aux93 with domain: int(0..8) (representing constraint (aux89 + aux88))
c Both direct and order encoding.
c Var 'aux93' order represents '0' with '847'
c Var 'aux93' direct represents '0' with '847'
c Var 'aux93' order represents '1' with '848'
-847 848 0
c Var 'aux93' direct represents '1' with '849'
847 -848 849 0
-849 848 0
-849 -847 0
c Var 'aux93' order represents '2' with '850'
-848 850 0
c Var 'aux93' direct represents '2' with '851'
848 -850 851 0
-851 850 0
-851 -848 0
c Var 'aux93' order represents '3' with '852'
-850 852 0
c Var 'aux93' direct represents '3' with '853'
850 -852 853 0
-853 852 0
-853 -850 0
c Var 'aux93' order represents '4' with '854'
-852 854 0
c Var 'aux93' direct represents '4' with '855'
852 -854 855 0
-855 854 0
-855 -852 0
c Var 'aux93' order represents '5' with '856'
-854 856 0
c Var 'aux93' direct represents '5' with '857'
854 -856 857 0
-857 856 0
-857 -854 0
c Var 'aux93' order represents '6' with '858'
-856 858 0
c Var 'aux93' direct represents '6' with '859'
856 -858 859 0
-859 858 0
-859 -856 0
c Var 'aux93' order represents '7' with '860'
-858 860 0
c Var 'aux93' direct represents '7' with '861'
858 -860 861 0
-861 860 0
-861 -858 0
c Var 'aux93' direct represents '8' with '-860'
847 849 851 853 855 857 859 861 -860 0
c Encoding variable: aux94 with domain: int(0..2) (representing constraint ((grid_00003_00000=5) + (grid_00000_00003=5)))
c Both direct and order encoding.
c Var 'aux94' order represents '0' with '862'
c Var 'aux94' direct represents '0' with '862'
c Var 'aux94' order represents '1' with '863'
-862 863 0
c Var 'aux94' direct represents '1' with '864'
862 -863 864 0
-864 863 0
-864 -862 0
c Var 'aux94' direct represents '2' with '-863'
862 864 -863 0
c Encoding variable: aux95 with domain: int(0..2) (representing constraint ((grid_00000_00002=5) + (grid_00003_00001=5)))
c Both direct and order encoding.
c Var 'aux95' order represents '0' with '865'
c Var 'aux95' direct represents '0' with '865'
c Var 'aux95' order represents '1' with '866'
-865 866 0
c Var 'aux95' direct represents '1' with '867'
865 -866 867 0
-867 866 0
-867 -865 0
c Var 'aux95' direct represents '2' with '-866'
865 867 -866 0
c Encoding variable: aux96 with domain: int(0..2) (representing constraint ((grid_00000_00001=5) + (grid_00003_00004=5)))
c Both direct and order encoding.
c Var 'aux96' order represents '0' with '868'
c Var 'aux96' direct represents '0' with '868'
c Var 'aux96' order represents '1' with '869'
-868 869 0
c Var 'aux96' direct represents '1' with '870'
868 -869 870 0
-870 869 0
-870 -868 0
c Var 'aux96' direct represents '2' with '-869'
868 870 -869 0
c Encoding variable: aux97 with domain: int(0..2) (representing constraint ((5=grid_00001_00004) + (grid_00000_00000=5)))
c Both direct and order encoding.
c Var 'aux97' order represents '0' with '871'
c Var 'aux97' direct represents '0' with '871'
c Var 'aux97' order represents '1' with '872'
-871 872 0
c Var 'aux97' direct represents '1' with '873'
871 -872 873 0
-873 872 0
-873 -871 0
c Var 'aux97' direct represents '2' with '-872'
871 873 -872 0
c Encoding variable: aux98 with domain: int(0..2) (representing constraint ((grid_00004_00004=5) + (5=grid_00002_00000)))
c Both direct and order encoding.
c Var 'aux98' order represents '0' with '874'
c Var 'aux98' direct represents '0' with '874'
c Var 'aux98' order represents '1' with '875'
-874 875 0
c Var 'aux98' direct represents '1' with '876'
874 -875 876 0
-876 875 0
-876 -874 0
c Var 'aux98' direct represents '2' with '-875'
874 876 -875 0
c Encoding variable: aux99 with domain: int(0..2) (representing constraint ((grid_00004_00002=5) + (5=grid_00001_00001)))
c Both direct and order encoding.
c Var 'aux99' order represents '0' with '877'
c Var 'aux99' direct represents '0' with '877'
c Var 'aux99' order represents '1' with '878'
-877 878 0
c Var 'aux99' direct represents '1' with '879'
877 -878 879 0
-879 878 0
-879 -877 0
c Var 'aux99' direct represents '2' with '-878'
877 879 -878 0
c Encoding variable: aux100 with domain: int(0..2) (representing constraint ((grid_00004_00001=5) + (5=grid_00002_00001)))
c Both direct and order encoding.
c Var 'aux100' order represents '0' with '880'
c Var 'aux100' direct represents '0' with '880'
c Var 'aux100' order represents '1' with '881'
-880 881 0
c Var 'aux100' direct represents '1' with '882'
880 -881 882 0
-882 881 0
-882 -880 0
c Var 'aux100' direct represents '2' with '-881'
880 882 -881 0
c Encoding variable: aux101 with domain: int(0..2) (representing constraint ((5=grid_00002_00003) + (5=grid_00002_00002)))
c Both direct and order encoding.
c Var 'aux101' order represents '0' with '883'
c Var 'aux101' direct represents '0' with '883'
c Var 'aux101' order represents '1' with '884'
-883 884 0
c Var 'aux101' direct represents '1' with '885'
883 -884 885 0
-885 884 0
-885 -883 0
c Var 'aux101' direct represents '2' with '-884'
883 885 -884 0
c Encoding variable: aux102 with domain: int(0..2) (representing constraint ((grid_00003_00003=5) + (5=grid_00001_00002)))
c Both direct and order encoding.
c Var 'aux102' order represents '0' with '886'
c Var 'aux102' direct represents '0' with '886'
c Var 'aux102' order represents '1' with '887'
-886 887 0
c Var 'aux102' direct represents '1' with '888'
886 -887 888 0
-888 887 0
-888 -886 0
c Var 'aux102' direct represents '2' with '-887'
886 888 -887 0
c Encoding variable: aux103 with domain: int(0..3) (representing constraint ((5=grid_00001_00003) + aux102))
c Both direct and order encoding.
c Var 'aux103' order represents '0' with '889'
c Var 'aux103' direct represents '0' with '889'
c Var 'aux103' order represents '1' with '890'
-889 890 0
c Var 'aux103' direct represents '1' with '891'
889 -890 891 0
-891 890 0
-891 -889 0
c Var 'aux103' order represents '2' with '892'
-890 892 0
c Var 'aux103' direct represents '2' with '893'
890 -892 893 0
-893 892 0
-893 -890 0
c Var 'aux103' direct represents '3' with '-892'
889 891 893 -892 0
c Encoding variable: aux104 with domain: int(0..4) (representing constraint (aux94 + aux100))
c Both direct and order encoding.
c Var 'aux104' order represents '0' with '894'
c Var 'aux104' direct represents '0' with '894'
c Var 'aux104' order represents '1' with '895'
-894 895 0
c Var 'aux104' direct represents '1' with '896'
894 -895 896 0
-896 895 0
-896 -894 0
c Var 'aux104' order represents '2' with '897'
-895 897 0
c Var 'aux104' direct represents '2' with '898'
895 -897 898 0
-898 897 0
-898 -895 0
c Var 'aux104' order represents '3' with '899'
-897 899 0
c Var 'aux104' direct represents '3' with '900'
897 -899 900 0
-900 899 0
-900 -897 0
c Var 'aux104' direct represents '4' with '-899'
894 896 898 900 -899 0
c Encoding variable: aux105 with domain: int(0..4) (representing constraint (aux96 + aux95))
c Both direct and order encoding.
c Var 'aux105' order represents '0' with '901'
c Var 'aux105' direct represents '0' with '901'
c Var 'aux105' order represents '1' with '902'
-901 902 0
c Var 'aux105' direct represents '1' with '903'
901 -902 903 0
-903 902 0
-903 -901 0
c Var 'aux105' order represents '2' with '904'
-902 904 0
c Var 'aux105' direct represents '2' with '905'
902 -904 905 0
-905 904 0
-905 -902 0
c Var 'aux105' order represents '3' with '906'
-904 906 0
c Var 'aux105' direct represents '3' with '907'
904 -906 907 0
-907 906 0
-907 -904 0
c Var 'aux105' direct represents '4' with '-906'
901 903 905 907 -906 0
c Encoding variable: aux106 with domain: int(0..4) (representing constraint (aux101 + aux99))
c Both direct and order encoding.
c Var 'aux106' order represents '0' with '908'
c Var 'aux106' direct represents '0' with '908'
c Var 'aux106' order represents '1' with '909'
-908 909 0
c Var 'aux106' direct represents '1' with '910'
908 -909 910 0
-910 909 0
-910 -908 0
c Var 'aux106' order represents '2' with '911'
-909 911 0
c Var 'aux106' direct represents '2' with '912'
909 -911 912 0
-912 911 0
-912 -909 0
c Var 'aux106' order represents '3' with '913'
-911 913 0
c Var 'aux106' direct represents '3' with '914'
911 -913 914 0
-914 913 0
-914 -911 0
c Var 'aux106' direct represents '4' with '-913'
908 910 912 914 -913 0
c Encoding variable: aux107 with domain: int(0..4) (representing constraint (aux98 + aux97))
c Both direct and order encoding.
c Var 'aux107' order represents '0' with '915'
c Var 'aux107' direct represents '0' with '915'
c Var 'aux107' order represents '1' with '916'
-915 916 0
c Var 'aux107' direct represents '1' with '917'
915 -916 917 0
-917 916 0
-917 -915 0
c Var 'aux107' order represents '2' with '918'
-916 918 0
c Var 'aux107' direct represents '2' with '919'
916 -918 919 0
-919 918 0
-919 -916 0
c Var 'aux107' order represents '3' with '920'
-918 920 0
c Var 'aux107' direct represents '3' with '921'
918 -920 921 0
-921 920 0
-921 -918 0
c Var 'aux107' direct represents '4' with '-920'
915 917 919 921 -920 0
c Encoding variable: aux108 with domain: int(0..7) (representing constraint (aux103 + aux107))
c Both direct and order encoding.
c Var 'aux108' order represents '0' with '922'
c Var 'aux108' direct represents '0' with '922'
c Var 'aux108' order represents '1' with '923'
-922 923 0
c Var 'aux108' direct represents '1' with '924'
922 -923 924 0
-924 923 0
-924 -922 0
c Var 'aux108' order represents '2' with '925'
-923 925 0
c Var 'aux108' direct represents '2' with '926'
923 -925 926 0
-926 925 0
-926 -923 0
c Var 'aux108' order represents '3' with '927'
-925 927 0
c Var 'aux108' direct represents '3' with '928'
925 -927 928 0
-928 927 0
-928 -925 0
c Var 'aux108' order represents '4' with '929'
-927 929 0
c Var 'aux108' direct represents '4' with '930'
927 -929 930 0
-930 929 0
-930 -927 0
c Var 'aux108' order represents '5' with '931'
-929 931 0
c Var 'aux108' direct represents '5' with '932'
929 -931 932 0
-932 931 0
-932 -929 0
c Var 'aux108' order represents '6' with '933'
-931 933 0
c Var 'aux108' direct represents '6' with '934'
931 -933 934 0
-934 933 0
-934 -931 0
c Var 'aux108' direct represents '7' with '-933'
922 924 926 928 930 932 934 -933 0
c Encoding variable: aux109 with domain: int(0..8) (representing constraint (aux105 + aux104))
c Both direct and order encoding.
c Var 'aux109' order represents '0' with '935'
c Var 'aux109' direct represents '0' with '935'
c Var 'aux109' order represents '1' with '936'
-935 936 0
c Var 'aux109' direct represents '1' with '937'
935 -936 937 0
-937 936 0
-937 -935 0
c Var 'aux109' order represents '2' with '938'
-936 938 0
c Var 'aux109' direct represents '2' with '939'
936 -938 939 0
-939 938 0
-939 -936 0
c Var 'aux109' order represents '3' with '940'
-938 940 0
c Var 'aux109' direct represents '3' with '941'
938 -940 941 0
-941 940 0
-941 -938 0
c Var 'aux109' order represents '4' with '942'
-940 942 0
c Var 'aux109' direct represents '4' with '943'
940 -942 943 0
-943 942 0
-943 -940 0
c Var 'aux109' order represents '5' with '944'
-942 944 0
c Var 'aux109' direct represents '5' with '945'
942 -944 945 0
-945 944 0
-945 -942 0
c Var 'aux109' order represents '6' with '946'
-944 946 0
c Var 'aux109' direct represents '6' with '947'
944 -946 947 0
-947 946 0
-947 -944 0
c Var 'aux109' order represents '7' with '948'
-946 948 0
c Var 'aux109' direct represents '7' with '949'
946 -948 949 0
-949 948 0
-949 -946 0
c Var 'aux109' direct represents '8' with '-948'
935 937 939 941 943 945 947 949 -948 0
c Encoding variable: aux110 with domain: int(0..2) (representing constraint ((grid_00003_00000=6) + (grid_00000_00003=6)))
c Both direct and order encoding.
c Var 'aux110' order represents '0' with '950'
c Var 'aux110' direct represents '0' with '950'
c Var 'aux110' order represents '1' with '951'
-950 951 0
c Var 'aux110' direct represents '1' with '952'
950 -951 952 0
-952 951 0
-952 -950 0
c Var 'aux110' direct represents '2' with '-951'
950 952 -951 0
c Encoding variable: aux111 with domain: int(0..2) (representing constraint ((grid_00000_00002=6) + (grid_00003_00001=6)))
c Both direct and order encoding.
c Var 'aux111' order represents '0' with '953'
c Var 'aux111' direct represents '0' with '953'
c Var 'aux111' order represents '1' with '954'
-953 954 0
c Var 'aux111' direct represents '1' with '955'
953 -954 955 0
-955 954 0
-955 -953 0
c Var 'aux111' direct represents '2' with '-954'
953 955 -954 0
c Encoding variable: aux112 with domain: int(0..2) (representing constraint ((grid_00000_00001=6) + (grid_00003_00004=6)))
c Both direct and order encoding.
c Var 'aux112' order represents '0' with '956'
c Var 'aux112' direct represents '0' with '956'
c Var 'aux112' order represents '1' with '957'
-956 957 0
c Var 'aux112' direct represents '1' with '958'
956 -957 958 0
-958 957 0
-958 -956 0
c Var 'aux112' direct represents '2' with '-957'
956 958 -957 0
c Encoding variable: aux113 with domain: int(0..2) (representing constraint ((6=grid_00001_00004) + (grid_00000_00000=6)))
c Both direct and order encoding.
c Var 'aux113' order represents '0' with '959'
c Var 'aux113' direct represents '0' with '959'
c Var 'aux113' order represents '1' with '960'
-959 960 0
c Var 'aux113' direct represents '1' with '961'
959 -960 961 0
-961 960 0
-961 -959 0
c Var 'aux113' direct represents '2' with '-960'
959 961 -960 0
c Encoding variable: aux114 with domain: int(0..2) (representing constraint ((grid_00004_00004=6) + (6=grid_00002_00000)))
c Both direct and order encoding.
c Var 'aux114' order represents '0' with '962'
c Var 'aux114' direct represents '0' with '962'
c Var 'aux114' order represents '1' with '963'
-962 963 0
c Var 'aux114' direct represents '1' with '964'
962 -963 964 0
-964 963 0
-964 -962 0
c Var 'aux114' direct represents '2' with '-963'
962 964 -963 0
c Encoding variable: aux115 with domain: int(0..2) (representing constraint ((grid_00004_00002=6) + (6=grid_00001_00001)))
c Both direct and order encoding.
c Var 'aux115' order represents '0' with '965'
c Var 'aux115' direct represents '0' with '965'
c Var 'aux115' order represents '1' with '966'
-965 966 0
c Var 'aux115' direct represents '1' with '967'
965 -966 967 0
-967 966 0
-967 -965 0
c Var 'aux115' direct represents '2' with '-966'
965 967 -966 0
c Encoding variable: aux116 with domain: int(0..2) (representing constraint ((grid_00004_00001=6) + (6=grid_00002_00001)))
c Both direct and order encoding.
c Var 'aux116' order represents '0' with '968'
c Var 'aux116' direct represents '0' with '968'
c Var 'aux116' order represents '1' with '969'
-968 969 0
c Var 'aux116' direct represents '1' with '970'
968 -969 970 0
-970 969 0
-970 -968 0
c Var 'aux116' direct represents '2' with '-969'
968 970 -969 0
c Encoding variable: aux117 with domain: int(0..2) (representing constraint ((6=grid_00002_00003) + (6=grid_00002_00002)))
c Both direct and order encoding.
c Var 'aux117' order represents '0' with '971'
c Var 'aux117' direct represents '0' with '971'
c Var 'aux117' order represents '1' with '972'
-971 972 0
c Var 'aux117' direct represents '1' with '973'
971 -972 973 0
-973 972 0
-973 -971 0
c Var 'aux117' direct represents '2' with '-972'
971 973 -972 0
c Encoding variable: aux118 with domain: int(0..2) (representing constraint ((grid_00003_00003=6) + (6=grid_00001_00002)))
c Both direct and order encoding.
c Var 'aux118' order represents '0' with '974'
c Var 'aux118' direct represents '0' with '974'
c Var 'aux118' order represents '1' with '975'
-974 975 0
c Var 'aux118' direct represents '1' with '976'
974 -975 976 0
-976 975 0
-976 -974 0
c Var 'aux118' direct represents '2' with '-975'
974 976 -975 0
c Encoding variable: aux119 with domain: int(0..3) (representing constraint ((6=grid_00001_00003) + aux118))
c Both direct and order encoding.
c Var 'aux119' order represents '0' with '977'
c Var 'aux119' direct represents '0' with '977'
c Var 'aux119' order represents '1' with '978'
-977 978 0
c Var 'aux119' direct represents '1' with '979'
977 -978 979 0
-979 978 0
-979 -977 0
c Var 'aux119' order represents '2' with '980'
-978 980 0
c Var 'aux119' direct represents '2' with '981'
978 -980 981 0
-981 980 0
-981 -978 0
c Var 'aux119' direct represents '3' with '-980'
977 979 981 -980 0
c Encoding variable: aux120 with domain: int(0..4) (representing constraint (aux110 + aux116))
c Both direct and order encoding.
c Var 'aux120' order represents '0' with '982'
c Var 'aux120' direct represents '0' with '982'
c Var 'aux120' order represents '1' with '983'
-982 983 0
c Var 'aux120' direct represents '1' with '984'
982 -983 984 0
-984 983 0
-984 -982 0
c Var 'aux120' order represents '2' with '985'
-983 985 0
c Var 'aux120' direct represents '2' with '986'
983 -985 986 0
-986 985 0
-986 -983 0
c Var 'aux120' order represents '3' with '987'
-985 987 0
c Var 'aux120' direct represents '3' with '988'
985 -987 988 0
-988 987 0
-988 -985 0
c Var 'aux120' direct represents '4' with '-987'
982 984 986 988 -987 0
c Encoding variable: aux121 with domain: int(0..4) (representing constraint (aux112 + aux111))
c Both direct and order encoding.
c Var 'aux121' order represents '0' with '989'
c Var 'aux121' direct represents '0' with '989'
c Var 'aux121' order represents '1' with '990'
-989 990 0
c Var 'aux121' direct represents '1' with '991'
989 -990 991 0
-991 990 0
-991 -989 0
c Var 'aux121' order represents '2' with '992'
-990 992 0
c Var 'aux121' direct represents '2' with '993'
990 -992 993 0
-993 992 0
-993 -990 0
c Var 'aux121' order represents '3' with '994'
-992 994 0
c Var 'aux121' direct represents '3' with '995'
992 -994 995 0
-995 994 0
-995 -992 0
c Var 'aux121' direct represents '4' with '-994'
989 991 993 995 -994 0
c Encoding variable: aux122 with domain: int(0..4) (representing constraint (aux117 + aux115))
c Both direct and order encoding.
c Var 'aux122' order represents '0' with '996'
c Var 'aux122' direct represents '0' with '996'
c Var 'aux122' order represents '1' with '997'
-996 997 0
c Var 'aux122' direct represents '1' with '998'
996 -997 998 0
-998 997 0
-998 -996 0
c Var 'aux122' order represents '2' with '999'
-997 999 0
c Var 'aux122' direct represents '2' with '1000'
997 -999 1000 0
-1000 999 0
-1000 -997 0
c Var 'aux122' order represents '3' with '1001'
-999 1001 0
c Var 'aux122' direct represents '3' with '1002'
999 -1001 1002 0
-1002 1001 0
-1002 -999 0
c Var 'aux122' direct represents '4' with '-1001'
996 998 1000 1002 -1001 0
c Encoding variable: aux123 with domain: int(0..4) (representing constraint (aux114 + aux113))
c Both direct and order encoding.
c Var 'aux123' order represents '0' with '1003'
c Var 'aux123' direct represents '0' with '1003'
c Var 'aux123' order represents '1' with '1004'
-1003 1004 0
c Var 'aux123' direct represents '1' with '1005'
1003 -1004 1005 0
-1005 1004 0
-1005 -1003 0
c Var 'aux123' order represents '2' with '1006'
-1004 1006 0
c Var 'aux123' direct represents '2' with '1007'
1004 -1006 1007 0
-1007 1006 0
-1007 -1004 0
c Var 'aux123' order represents '3' with '1008'
-1006 1008 0
c Var 'aux123' direct represents '3' with '1009'
1006 -1008 1009 0
-1009 1008 0
-1009 -1006 0
c Var 'aux123' direct represents '4' with '-1008'
1003 1005 1007 1009 -1008 0
c Encoding variable: aux124 with domain: int(0..7) (representing constraint (aux119 + aux123))
c Both direct and order encoding.
c Var 'aux124' order represents '0' with '1010'
c Var 'aux124' direct represents '0' with '1010'
c Var 'aux124' order represents '1' with '1011'
-1010 1011 0
c Var 'aux124' direct represents '1' with '1012'
1010 -1011 1012 0
-1012 1011 0
-1012 -1010 0
c Var 'aux124' order represents '2' with '1013'
-1011 1013 0
c Var 'aux124' direct represents '2' with '1014'
1011 -1013 1014 0
-1014 1013 0
-1014 -1011 0
c Var 'aux124' order represents '3' with '1015'
-1013 1015 0
c Var 'aux124' direct represents '3' with '1016'
1013 -1015 1016 0
-1016 1015 0
-1016 -1013 0
c Var 'aux124' order represents '4' with '1017'
-1015 1017 0
c Var 'aux124' direct represents '4' with '1018'
1015 -1017 1018 0
-1018 1017 0
-1018 -1015 0
c Var 'aux124' order represents '5' with '1019'
-1017 1019 0
c Var 'aux124' direct represents '5' with '1020'
1017 -1019 1020 0
-1020 1019 0
-1020 -1017 0
c Var 'aux124' order represents '6' with '1021'
-1019 1021 0
c Var 'aux124' direct represents '6' with '1022'
1019 -1021 1022 0
-1022 1021 0
-1022 -1019 0
c Var 'aux124' direct represents '7' with '-1021'
1010 1012 1014 1016 1018 1020 1022 -1021 0
c Encoding variable: aux125 with domain: int(0..8) (representing constraint (aux121 + aux120))
c Both direct and order encoding.
c Var 'aux125' order represents '0' with '1023'
c Var 'aux125' direct represents '0' with '1023'
c Var 'aux125' order represents '1' with '1024'
-1023 1024 0
c Var 'aux125' direct represents '1' with '1025'
1023 -1024 1025 0
-1025 1024 0
-1025 -1023 0
c Var 'aux125' order represents '2' with '1026'
-1024 1026 0
c Var 'aux125' direct represents '2' with '1027'
1024 -1026 1027 0
-1027 1026 0
-1027 -1024 0
c Var 'aux125' order represents '3' with '1028'
-1026 1028 0
c Var 'aux125' direct represents '3' with '1029'
1026 -1028 1029 0
-1029 1028 0
-1029 -1026 0
c Var 'aux125' order represents '4' with '1030'
-1028 1030 0
c Var 'aux125' direct represents '4' with '1031'
1028 -1030 1031 0
-1031 1030 0
-1031 -1028 0
c Var 'aux125' order represents '5' with '1032'
-1030 1032 0
c Var 'aux125' direct represents '5' with '1033'
1030 -1032 1033 0
-1033 1032 0
-1033 -1030 0
c Var 'aux125' order represents '6' with '1034'
-1032 1034 0
c Var 'aux125' direct represents '6' with '1035'
1032 -1034 1035 0
-1035 1034 0
-1035 -1032 0
c Var 'aux125' order represents '7' with '1036'
-1034 1036 0
c Var 'aux125' direct represents '7' with '1037'
1034 -1036 1037 0
-1037 1036 0
-1037 -1034 0
c Var 'aux125' direct represents '8' with '-1036'
1023 1025 1027 1029 1031 1033 1035 1037 -1036 0
c Encoding variable: aux126 with domain: int(0..2) (representing constraint ((grid_00003_00000=1) + (grid_00000_00003=1)))
c Both direct and order encoding.
c Var 'aux126' order represents '0' with '1038'
c Var 'aux126' direct represents '0' with '1038'
c Var 'aux126' order represents '1' with '1039'
-1038 1039 0
c Var 'aux126' direct represents '1' with '1040'
1038 -1039 1040 0
-1040 1039 0
-1040 -1038 0
c Var 'aux126' direct represents '2' with '-1039'
1038 1040 -1039 0
c Encoding variable: aux127 with domain: int(0..2) (representing constraint ((grid_00000_00002=1) + (grid_00003_00001=1)))
c Both direct and order encoding.
c Var 'aux127' order represents '0' with '1041'
c Var 'aux127' direct represents '0' with '1041'
c Var 'aux127' order represents '1' with '1042'
-1041 1042 0
c Var 'aux127' direct represents '1' with '1043'
1041 -1042 1043 0
-1043 1042 0
-1043 -1041 0
c Var 'aux127' direct represents '2' with '-1042'
1041 1043 -1042 0
c Encoding variable: aux128 with domain: int(0..2) (representing constraint ((grid_00000_00001=1) + (grid_00003_00004=1)))
c Both direct and order encoding.
c Var 'aux128' order represents '0' with '1044'
c Var 'aux128' direct represents '0' with '1044'
c Var 'aux128' order represents '1' with '1045'
-1044 1045 0
c Var 'aux128' direct represents '1' with '1046'
1044 -1045 1046 0
-1046 1045 0
-1046 -1044 0
c Var 'aux128' direct represents '2' with '-1045'
1044 1046 -1045 0
c Encoding variable: aux129 with domain: int(0..2) (representing constraint ((1=grid_00001_00004) + (grid_00000_00000=1)))
c Both direct and order encoding.
c Var 'aux129' order represents '0' with '1047'
c Var 'aux129' direct represents '0' with '1047'
c Var 'aux129' order represents '1' with '1048'
-1047 1048 0
c Var 'aux129' direct represents '1' with '1049'
1047 -1048 1049 0
-1049 1048 0
-1049 -1047 0
c Var 'aux129' direct represents '2' with '-1048'
1047 1049 -1048 0
c Encoding variable: aux130 with domain: int(0..2) (representing constraint ((grid_00004_00004=1) + (1=grid_00002_00000)))
c Both direct and order encoding.
c Var 'aux130' order represents '0' with '1050'
c Var 'aux130' direct represents '0' with '1050'
c Var 'aux130' order represents '1' with '1051'
-1050 1051 0
c Var 'aux130' direct represents '1' with '1052'
1050 -1051 1052 0
-1052 1051 0
-1052 -1050 0
c Var 'aux130' direct represents '2' with '-1051'
1050 1052 -1051 0
c Encoding variable: aux131 with domain: int(0..2) (representing constraint ((grid_00004_00002=1) + (1=grid_00001_00001)))
c Both direct and order encoding.
c Var 'aux131' order represents '0' with '1053'
c Var 'aux131' direct represents '0' with '1053'
c Var 'aux131' order represents '1' with '1054'
-1053 1054 0
c Var 'aux131' direct represents '1' with '1055'
1053 -1054 1055 0
-1055 1054 0
-1055 -1053 0
c Var 'aux131' direct represents '2' with '-1054'
1053 1055 -1054 0
c Encoding variable: aux132 with domain: int(0..2) (representing constraint ((grid_00004_00001=1) + (1=grid_00002_00001)))
c Both direct and order encoding.
c Var 'aux132' order represents '0' with '1056'
c Var 'aux132' direct represents '0' with '1056'
c Var 'aux132' order represents '1' with '1057'
-1056 1057 0
c Var 'aux132' direct represents '1' with '1058'
1056 -1057 1058 0
-1058 1057 0
-1058 -1056 0
c Var 'aux132' direct represents '2' with '-1057'
1056 1058 -1057 0
c Encoding variable: aux133 with domain: int(0..2) (representing constraint ((1=grid_00002_00003) + (1=grid_00002_00002)))
c Both direct and order encoding.
c Var 'aux133' order represents '0' with '1059'
c Var 'aux133' direct represents '0' with '1059'
c Var 'aux133' order represents '1' with '1060'
-1059 1060 0
c Var 'aux133' direct represents '1' with '1061'
1059 -1060 1061 0
-1061 1060 0
-1061 -1059 0
c Var 'aux133' direct represents '2' with '-1060'
1059 1061 -1060 0
c Encoding variable: aux134 with domain: int(0..2) (representing constraint ((grid_00003_00003=1) + (1=grid_00001_00002)))
c Both direct and order encoding.
c Var 'aux134' order represents '0' with '1062'
c Var 'aux134' direct represents '0' with '1062'
c Var 'aux134' order represents '1' with '1063'
-1062 1063 0
c Var 'aux134' direct represents '1' with '1064'
1062 -1063 1064 0
-1064 1063 0
-1064 -1062 0
c Var 'aux134' direct represents '2' with '-1063'
1062 1064 -1063 0
c Encoding variable: aux135 with domain: int(0..3) (representing constraint ((1=grid_00001_00003) + aux134))
c Both direct and order encoding.
c Var 'aux135' order represents '0' with '1065'
c Var 'aux135' direct represents '0' with '1065'
c Var 'aux135' order represents '1' with '1066'
-1065 1066 0
c Var 'aux135' direct represents '1' with '1067'
1065 -1066 1067 0
-1067 1066 0
-1067 -1065 0
c Var 'aux135' order represents '2' with '1068'
-1066 1068 0
c Var 'aux135' direct represents '2' with '1069'
1066 -1068 1069 0
-1069 1068 0
-1069 -1066 0
c Var 'aux135' direct represents '3' with '-1068'
1065 1067 1069 -1068 0
c Encoding variable: aux136 with domain: int(0..4) (representing constraint (aux126 + aux132))
c Both direct and order encoding.
c Var 'aux136' order represents '0' with '1070'
c Var 'aux136' direct represents '0' with '1070'
c Var 'aux136' order represents '1' with '1071'
-1070 1071 0
c Var 'aux136' direct represents '1' with '1072'
1070 -1071 1072 0
-1072 1071 0
-1072 -1070 0
c Var 'aux136' order represents '2' with '1073'
-1071 1073 0
c Var 'aux136' direct represents '2' with '1074'
1071 -1073 1074 0
-1074 1073 0
-1074 -1071 0
c Var 'aux136' order represents '3' with '1075'
-1073 1075 0
c Var 'aux136' direct represents '3' with '1076'
1073 -1075 1076 0
-1076 1075 0
-1076 -1073 0
c Var 'aux136' direct represents '4' with '-1075'
1070 1072 1074 1076 -1075 0
c Encoding variable: aux137 with domain: int(0..4) (representing constraint (aux128 + aux127))
c Both direct and order encoding.
c Var 'aux137' order represents '0' with '1077'
c Var 'aux137' direct represents '0' with '1077'
c Var 'aux137' order represents '1' with '1078'
-1077 1078 0
c Var 'aux137' direct represents '1' with '1079'
1077 -1078 1079 0
-1079 1078 0
-1079 -1077 0
c Var 'aux137' order represents '2' with '1080'
-1078 1080 0
c Var 'aux137' direct represents '2' with '1081'
1078 -1080 1081 0
-1081 1080 0
-1081 -1078 0
c Var 'aux137' order represents '3' with '1082'
-1080 1082 0
c Var 'aux137' direct represents '3' with '1083'
1080 -1082 1083 0
-1083 1082 0
-1083 -1080 0
c Var 'aux137' direct represents '4' with '-1082'
1077 1079 1081 1083 -1082 0
c Encoding variable: aux138 with domain: int(0..4) (representing constraint (aux133 + aux131))
c Both direct and order encoding.
c Var 'aux138' order represents '0' with '1084'
c Var 'aux138' direct represents '0' with '1084'
c Var 'aux138' order represents '1' with '1085'
-1084 1085 0
c Var 'aux138' direct represents '1' with '1086'
1084 -1085 1086 0
-1086 1085 0
-1086 -1084 0
c Var 'aux138' order represents '2' with '1087'
-1085 1087 0
c Var 'aux138' direct represents '2' with '1088'
1085 -1087 1088 0
-1088 1087 0
-1088 -1085 0
c Var 'aux138' order represents '3' with '1089'
-1087 1089 0
c Var 'aux138' direct represents '3' with '1090'
1087 -1089 1090 0
-1090 1089 0
-1090 -1087 0
c Var 'aux138' direct represents '4' with '-1089'
1084 1086 1088 1090 -1089 0
c Encoding variable: aux139 with domain: int(0..4) (representing constraint (aux130 + aux129))
c Both direct and order encoding.
c Var 'aux139' order represents '0' with '1091'
c Var 'aux139' direct represents '0' with '1091'
c Var 'aux139' order represents '1' with '1092'
-1091 1092 0
c Var 'aux139' direct represents '1' with '1093'
1091 -1092 1093 0
-1093 1092 0
-1093 -1091 0
c Var 'aux139' order represents '2' with '1094'
-1092 1094 0
c Var 'aux139' direct represents '2' with '1095'
1092 -1094 1095 0
-1095 1094 0
-1095 -1092 0
c Var 'aux139' order represents '3' with '1096'
-1094 1096 0
c Var 'aux139' direct represents '3' with '1097'
1094 -1096 1097 0
-1097 1096 0
-1097 -1094 0
c Var 'aux139' direct represents '4' with '-1096'
1091 1093 1095 1097 -1096 0
c Encoding variable: aux140 with domain: int(0..7) (representing constraint (aux135 + aux139))
c Both direct and order encoding.
c Var 'aux140' order represents '0' with '1098'
c Var 'aux140' direct represents '0' with '1098'
c Var 'aux140' order represents '1' with '1099'
-1098 1099 0
c Var 'aux140' direct represents '1' with '1100'
1098 -1099 1100 0
-1100 1099 0
-1100 -1098 0
c Var 'aux140' order represents '2' with '1101'
-1099 1101 0
c Var 'aux140' direct represents '2' with '1102'
1099 -1101 1102 0
-1102 1101 0
-1102 -1099 0
c Var 'aux140' order represents '3' with '1103'
-1101 1103 0
c Var 'aux140' direct represents '3' with '1104'
1101 -1103 1104 0
-1104 1103 0
-1104 -1101 0
c Var 'aux140' order represents '4' with '1105'
-1103 1105 0
c Var 'aux140' direct represents '4' with '1106'
1103 -1105 1106 0
-1106 1105 0
-1106 -1103 0
c Var 'aux140' order represents '5' with '1107'
-1105 1107 0
c Var 'aux140' direct represents '5' with '1108'
1105 -1107 1108 0
-1108 1107 0
-1108 -1105 0
c Var 'aux140' order represents '6' with '1109'
-1107 1109 0
c Var 'aux140' direct represents '6' with '1110'
1107 -1109 1110 0
-1110 1109 0
-1110 -1107 0
c Var 'aux140' direct represents '7' with '-1109'
1098 1100 1102 1104 1106 1108 1110 -1109 0
c Encoding variable: aux141 with domain: int(0..8) (representing constraint (aux137 + aux136))
c Both direct and order encoding.
c Var 'aux141' order represents '0' with '1111'
c Var 'aux141' direct represents '0' with '1111'
c Var 'aux141' order represents '1' with '1112'
-1111 1112 0
c Var 'aux141' direct represents '1' with '1113'
1111 -1112 1113 0
-1113 1112 0
-1113 -1111 0
c Var 'aux141' order represents '2' with '1114'
-1112 1114 0
c Var 'aux141' direct represents '2' with '1115'
1112 -1114 1115 0
-1115 1114 0
-1115 -1112 0
c Var 'aux141' order represents '3' with '1116'
-1114 1116 0
c Var 'aux141' direct represents '3' with '1117'
1114 -1116 1117 0
-1117 1116 0
-1117 -1114 0
c Var 'aux141' order represents '4' with '1118'
-1116 1118 0
c Var 'aux141' direct represents '4' with '1119'
1116 -1118 1119 0
-1119 1118 0
-1119 -1116 0
c Var 'aux141' order represents '5' with '1120'
-1118 1120 0
c Var 'aux141' direct represents '5' with '1121'
1118 -1120 1121 0
-1121 1120 0
-1121 -1118 0
c Var 'aux141' order represents '6' with '1122'
-1120 1122 0
c Var 'aux141' direct represents '6' with '1123'
1120 -1122 1123 0
-1123 1122 0
-1123 -1120 0
c Var 'aux141' order represents '7' with '1124'
-1122 1124 0
c Var 'aux141' direct represents '7' with '1125'
1122 -1124 1125 0
-1125 1124 0
-1125 -1122 0
c Var 'aux141' direct represents '8' with '-1124'
1111 1113 1115 1117 1119 1121 1123 1125 -1124 0
c Encoding variable: aux142 with domain: int(0..2) (representing constraint ((grid_00003_00000=2) + (grid_00000_00003=2)))
c Both direct and order encoding.
c Var 'aux142' order represents '0' with '1126'
c Var 'aux142' direct represents '0' with '1126'
c Var 'aux142' order represents '1' with '1127'
-1126 1127 0
c Var 'aux142' direct represents '1' with '1128'
1126 -1127 1128 0
-1128 1127 0
-1128 -1126 0
c Var 'aux142' direct represents '2' with '-1127'
1126 1128 -1127 0
c Encoding variable: aux143 with domain: int(0..2) (representing constraint ((grid_00000_00002=2) + (grid_00003_00001=2)))
c Both direct and order encoding.
c Var 'aux143' order represents '0' with '1129'
c Var 'aux143' direct represents '0' with '1129'
c Var 'aux143' order represents '1' with '1130'
-1129 1130 0
c Var 'aux143' direct represents '1' with '1131'
1129 -1130 1131 0
-1131 1130 0
-1131 -1129 0
c Var 'aux143' direct represents '2' with '-1130'
1129 1131 -1130 0
c Encoding variable: aux144 with domain: int(0..2) (representing constraint ((grid_00000_00001=2) + (grid_00003_00004=2)))
c Both direct and order encoding.
c Var 'aux144' order represents '0' with '1132'
c Var 'aux144' direct represents '0' with '1132'
c Var 'aux144' order represents '1' with '1133'
-1132 1133 0
c Var 'aux144' direct represents '1' with '1134'
1132 -1133 1134 0
-1134 1133 0
-1134 -1132 0
c Var 'aux144' direct represents '2' with '-1133'
1132 1134 -1133 0
c Encoding variable: aux145 with domain: int(0..2) (representing constraint ((2=grid_00001_00004) + (grid_00000_00000=2)))
c Both direct and order encoding.
c Var 'aux145' order represents '0' with '1135'
c Var 'aux145' direct represents '0' with '1135'
c Var 'aux145' order represents '1' with '1136'
-1135 1136 0
c Var 'aux145' direct represents '1' with '1137'
1135 -1136 1137 0
-1137 1136 0
-1137 -1135 0
c Var 'aux145' direct represents '2' with '-1136'
1135 1137 -1136 0
c Encoding variable: aux146 with domain: int(0..2) (representing constraint ((grid_00004_00004=2) + (2=grid_00002_00000)))
c Both direct and order encoding.
c Var 'aux146' order represents '0' with '1138'
c Var 'aux146' direct represents '0' with '1138'
c Var 'aux146' order represents '1' with '1139'
-1138 1139 0
c Var 'aux146' direct represents '1' with '1140'
1138 -1139 1140 0
-1140 1139 0
-1140 -1138 0
c Var 'aux146' direct represents '2' with '-1139'
1138 1140 -1139 0
c Encoding variable: aux147 with domain: int(0..2) (representing constraint ((grid_00004_00002=2) + (2=grid_00001_00001)))
c Both direct and order encoding.
c Var 'aux147' order represents '0' with '1141'
c Var 'aux147' direct represents '0' with '1141'
c Var 'aux147' order represents '1' with '1142'
-1141 1142 0
c Var 'aux147' direct represents '1' with '1143'
1141 -1142 1143 0
-1143 1142 0
-1143 -1141 0
c Var 'aux147' direct represents '2' with '-1142'
1141 1143 -1142 0
c Encoding variable: aux148 with domain: int(0..2) (representing constraint ((grid_00004_00001=2) + (2=grid_00002_00001)))
c Both direct and order encoding.
c Var 'aux148' order represents '0' with '1144'
c Var 'aux148' direct represents '0' with '1144'
c Var 'aux148' order represents '1' with '1145'
-1144 1145 0
c Var 'aux148' direct represents '1' with '1146'
1144 -1145 1146 0
-1146 1145 0
-1146 -1144 0
c Var 'aux148' direct represents '2' with '-1145'
1144 1146 -1145 0
c Encoding variable: aux149 with domain: int(0..2) (representing constraint ((2=grid_00002_00003) + (2=grid_00002_00002)))
c Both direct and order encoding.
c Var 'aux149' order represents '0' with '1147'
c Var 'aux149' direct represents '0' with '1147'
c Var 'aux149' order represents '1' with '1148'
-1147 1148 0
c Var 'aux149' direct represents '1' with '1149'
1147 -1148 1149 0
-1149 1148 0
-1149 -1147 0
c Var 'aux149' direct represents '2' with '-1148'
1147 1149 -1148 0
c Encoding variable: aux150 with domain: int(0..2) (representing constraint ((grid_00003_00003=2) + (2=grid_00001_00002)))
c Both direct and order encoding.
c Var 'aux150' order represents '0' with '1150'
c Var 'aux150' direct represents '0' with '1150'
c Var 'aux150' order represents '1' with '1151'
-1150 1151 0
c Var 'aux150' direct represents '1' with '1152'
1150 -1151 1152 0
-1152 1151 0
-1152 -1150 0
c Var 'aux150' direct represents '2' with '-1151'
1150 1152 -1151 0
c Encoding variable: aux151 with domain: int(0..3) (representing constraint ((2=grid_00001_00003) + aux150))
c Both direct and order encoding.
c Var 'aux151' order represents '0' with '1153'
c Var 'aux151' direct represents '0' with '1153'
c Var 'aux151' order represents '1' with '1154'
-1153 1154 0
c Var 'aux151' direct represents '1' with '1155'
1153 -1154 1155 0
-1155 1154 0
-1155 -1153 0
c Var 'aux151' order represents '2' with '1156'
-1154 1156 0
c Var 'aux151' direct represents '2' with '1157'
1154 -1156 1157 0
-1157 1156 0
-1157 -1154 0
c Var 'aux151' direct represents '3' with '-1156'
1153 1155 1157 -1156 0
c Encoding variable: aux152 with domain: int(0..4) (representing constraint (aux142 + aux148))
c Both direct and order encoding.
c Var 'aux152' order represents '0' with '1158'
c Var 'aux152' direct represents '0' with '1158'
c Var 'aux152' order represents '1' with '1159'
-1158 1159 0
c Var 'aux152' direct represents '1' with '1160'
1158 -1159 1160 0
-1160 1159 0
-1160 -1158 0
c Var 'aux152' order represents '2' with '1161'
-1159 1161 0
c Var 'aux152' direct represents '2' with '1162'
1159 -1161 1162 0
-1162 1161 0
-1162 -1159 0
c Var 'aux152' order represents '3' with '1163'
-1161 1163 0
c Var 'aux152' direct represents '3' with '1164'
1161 -1163 1164 0
-1164 1163 0
-1164 -1161 0
c Var 'aux152' direct represents '4' with '-1163'
1158 1160 1162 1164 -1163 0
c Encoding variable: aux153 with domain: int(0..4) (representing constraint (aux144 + aux143))
c Both direct and order encoding.
c Var 'aux153' order represents '0' with '1165'
c Var 'aux153' direct represents '0' with '1165'
c Var 'aux153' order represents '1' with '1166'
-1165 1166 0
c Var 'aux153' direct represents '1' with '1167'
1165 -1166 1167 0
-1167 1166 0
-1167 -1165 0
c Var 'aux153' order represents '2' with '1168'
-1166 1168 0
c Var 'aux153' direct represents '2' with '1169'
1166 -1168 1169 0
-1169 1168 0
-1169 -1166 0
c Var 'aux153' order represents '3' with '1170'
-1168 1170 0
c Var 'aux153' direct represents '3' with '1171'
1168 -1170 1171 0
-1171 1170 0
-1171 -1168 0
c Var 'aux153' direct represents '4' with '-1170'
1165 1167 1169 1171 -1170 0
c Encoding variable: aux154 with domain: int(0..4) (representing constraint (aux149 + aux147))
c Both direct and order encoding.
c Var 'aux154' order represents '0' with '1172'
c Var 'aux154' direct represents '0' with '1172'
c Var 'aux154' order represents '1' with '1173'
-1172 1173 0
c Var 'aux154' direct represents '1' with '1174'
1172 -1173 1174 0
-1174 1173 0
-1174 -1172 0
c Var 'aux154' order represents '2' with '1175'
-1173 1175 0
c Var 'aux154' direct represents '2' with '1176'
1173 -1175 1176 0
-1176 1175 0
-1176 -1173 0
c Var 'aux154' order represents '3' with '1177'
-1175 1177 0
c Var 'aux154' direct represents '3' with '1178'
1175 -1177 1178 0
-1178 1177 0
-1178 -1175 0
c Var 'aux154' direct represents '4' with '-1177'
1172 1174 1176 1178 -1177 0
c Encoding variable: aux155 with domain: int(0..4) (representing constraint (aux146 + aux145))
c Both direct and order encoding.
c Var 'aux155' order represents '0' with '1179'
c Var 'aux155' direct represents '0' with '1179'
c Var 'aux155' order represents '1' with '1180'
-1179 1180 0
c Var 'aux155' direct represents '1' with '1181'
1179 -1180 1181 0
-1181 1180 0
-1181 -1179 0
c Var 'aux155' order represents '2' with '1182'
-1180 1182 0
c Var 'aux155' direct represents '2' with '1183'
1180 -1182 1183 0
-1183 1182 0
-1183 -1180 0
c Var 'aux155' order represents '3' with '1184'
-1182 1184 0
c Var 'aux155' direct represents '3' with '1185'
1182 -1184 1185 0
-1185 1184 0
-1185 -1182 0
c Var 'aux155' direct represents '4' with '-1184'
1179 1181 1183 1185 -1184 0
c Encoding variable: aux156 with domain: int(0..7) (representing constraint (aux151 + aux155))
c Both direct and order encoding.
c Var 'aux156' order represents '0' with '1186'
c Var 'aux156' direct represents '0' with '1186'
c Var 'aux156' order represents '1' with '1187'
-1186 1187 0
c Var 'aux156' direct represents '1' with '1188'
1186 -1187 1188 0
-1188 1187 0
-1188 -1186 0
c Var 'aux156' order represents '2' with '1189'
-1187 1189 0
c Var 'aux156' direct represents '2' with '1190'
1187 -1189 1190 0
-1190 1189 0
-1190 -1187 0
c Var 'aux156' order represents '3' with '1191'
-1189 1191 0
c Var 'aux156' direct represents '3' with '1192'
1189 -1191 1192 0
-1192 1191 0
-1192 -1189 0
c Var 'aux156' order represents '4' with '1193'
-1191 1193 0
c Var 'aux156' direct represents '4' with '1194'
1191 -1193 1194 0
-1194 1193 0
-1194 -1191 0
c Var 'aux156' order represents '5' with '1195'
-1193 1195 0
c Var 'aux156' direct represents '5' with '1196'
1193 -1195 1196 0
-1196 1195 0
-1196 -1193 0
c Var 'aux156' order represents '6' with '1197'
-1195 1197 0
c Var 'aux156' direct represents '6' with '1198'
1195 -1197 1198 0
-1198 1197 0
-1198 -1195 0
c Var 'aux156' direct represents '7' with '-1197'
1186 1188 1190 1192 1194 1196 1198 -1197 0
c Encoding variable: aux157 with domain: int(0..8) (representing constraint (aux153 + aux152))
c Both direct and order encoding.
c Var 'aux157' order represents '0' with '1199'
c Var 'aux157' direct represents '0' with '1199'
c Var 'aux157' order represents '1' with '1200'
-1199 1200 0
c Var 'aux157' direct represents '1' with '1201'
1199 -1200 1201 0
-1201 1200 0
-1201 -1199 0
c Var 'aux157' order represents '2' with '1202'
-1200 1202 0
c Var 'aux157' direct represents '2' with '1203'
1200 -1202 1203 0
-1203 1202 0
-1203 -1200 0
c Var 'aux157' order represents '3' with '1204'
-1202 1204 0
c Var 'aux157' direct represents '3' with '1205'
1202 -1204 1205 0
-1205 1204 0
-1205 -1202 0
c Var 'aux157' order represents '4' with '1206'
-1204 1206 0
c Var 'aux157' direct represents '4' with '1207'
1204 -1206 1207 0
-1207 1206 0
-1207 -1204 0
c Var 'aux157' order represents '5' with '1208'
-1206 1208 0
c Var 'aux157' direct represents '5' with '1209'
1206 -1208 1209 0
-1209 1208 0
-1209 -1206 0
c Var 'aux157' order represents '6' with '1210'
-1208 1210 0
c Var 'aux157' direct represents '6' with '1211'
1208 -1210 1211 0
-1211 1210 0
-1211 -1208 0
c Var 'aux157' order represents '7' with '1212'
-1210 1212 0
c Var 'aux157' direct represents '7' with '1213'
1210 -1212 1213 0
-1213 1212 0
-1213 -1210 0
c Var 'aux157' direct represents '8' with '-1212'
1199 1201 1203 1205 1207 1209 1211 1213 -1212 0
c Encoding variable: aux158 with domain: int(0..2) (representing constraint ((grid_00003_00000=3) + (grid_00000_00003=3)))
c Both direct and order encoding.
c Var 'aux158' order represents '0' with '1214'
c Var 'aux158' direct represents '0' with '1214'
c Var 'aux158' order represents '1' with '1215'
-1214 1215 0
c Var 'aux158' direct represents '1' with '1216'
1214 -1215 1216 0
-1216 1215 0
-1216 -1214 0
c Var 'aux158' direct represents '2' with '-1215'
1214 1216 -1215 0
c Encoding variable: aux159 with domain: int(0..2) (representing constraint ((grid_00000_00002=3) + (grid_00003_00001=3)))
c Both direct and order encoding.
c Var 'aux159' order represents '0' with '1217'
c Var 'aux159' direct represents '0' with '1217'
c Var 'aux159' order represents '1' with '1218'
-1217 1218 0
c Var 'aux159' direct represents '1' with '1219'
1217 -1218 1219 0
-1219 1218 0
-1219 -1217 0
c Var 'aux159' direct represents '2' with '-1218'
1217 1219 -1218 0
c Encoding variable: aux160 with domain: int(0..2) (representing constraint ((grid_00000_00001=3) + (grid_00003_00004=3)))
c Both direct and order encoding.
c Var 'aux160' order represents '0' with '1220'
c Var 'aux160' direct represents '0' with '1220'
c Var 'aux160' order represents '1' with '1221'
-1220 1221 0
c Var 'aux160' direct represents '1' with '1222'
1220 -1221 1222 0
-1222 1221 0
-1222 -1220 0
c Var 'aux160' direct represents '2' with '-1221'
1220 1222 -1221 0
c Encoding variable: aux161 with domain: int(0..2) (representing constraint ((3=grid_00001_00004) + (grid_00000_00000=3)))
c Both direct and order encoding.
c Var 'aux161' order represents '0' with '1223'
c Var 'aux161' direct represents '0' with '1223'
c Var 'aux161' order represents '1' with '1224'
-1223 1224 0
c Var 'aux161' direct represents '1' with '1225'
1223 -1224 1225 0
-1225 1224 0
-1225 -1223 0
c Var 'aux161' direct represents '2' with '-1224'
1223 1225 -1224 0
c Encoding variable: aux162 with domain: int(0..2) (representing constraint ((grid_00004_00004=3) + (3=grid_00002_00000)))
c Both direct and order encoding.
c Var 'aux162' order represents '0' with '1226'
c Var 'aux162' direct represents '0' with '1226'
c Var 'aux162' order represents '1' with '1227'
-1226 1227 0
c Var 'aux162' direct represents '1' with '1228'
1226 -1227 1228 0
-1228 1227 0
-1228 -1226 0
c Var 'aux162' direct represents '2' with '-1227'
1226 1228 -1227 0
c Encoding variable: aux163 with domain: int(0..2) (representing constraint ((grid_00004_00002=3) + (3=grid_00001_00001)))
c Both direct and order encoding.
c Var 'aux163' order represents '0' with '1229'
c Var 'aux163' direct represents '0' with '1229'
c Var 'aux163' order represents '1' with '1230'
-1229 1230 0
c Var 'aux163' direct represents '1' with '1231'
1229 -1230 1231 0
-1231 1230 0
-1231 -1229 0
c Var 'aux163' direct represents '2' with '-1230'
1229 1231 -1230 0
c Encoding variable: aux164 with domain: int(0..2) (representing constraint ((grid_00004_00001=3) + (3=grid_00002_00001)))
c Both direct and order encoding.
c Var 'aux164' order represents '0' with '1232'
c Var 'aux164' direct represents '0' with '1232'
c Var 'aux164' order represents '1' with '1233'
-1232 1233 0
c Var 'aux164' direct represents '1' with '1234'
1232 -1233 1234 0
-1234 1233 0
-1234 -1232 0
c Var 'aux164' direct represents '2' with '-1233'
1232 1234 -1233 0
c Encoding variable: aux165 with domain: int(0..2) (representing constraint ((3=grid_00002_00003) + (3=grid_00002_00002)))
c Both direct and order encoding.
c Var 'aux165' order represents '0' with '1235'
c Var 'aux165' direct represents '0' with '1235'
c Var 'aux165' order represents '1' with '1236'
-1235 1236 0
c Var 'aux165' direct represents '1' with '1237'
1235 -1236 1237 0
-1237 1236 0
-1237 -1235 0
c Var 'aux165' direct represents '2' with '-1236'
1235 1237 -1236 0
c Encoding variable: aux166 with domain: int(0..2) (representing constraint ((grid_00003_00003=3) + (3=grid_00001_00002)))
c Both direct and order encoding.
c Var 'aux166' order represents '0' with '1238'
c Var 'aux166' direct represents '0' with '1238'
c Var 'aux166' order represents '1' with '1239'
-1238 1239 0
c Var 'aux166' direct represents '1' with '1240'
1238 -1239 1240 0
-1240 1239 0
-1240 -1238 0
c Var 'aux166' direct represents '2' with '-1239'
1238 1240 -1239 0
c Encoding variable: aux167 with domain: int(0..3) (representing constraint ((3=grid_00001_00003) + aux166))
c Both direct and order encoding.
c Var 'aux167' order represents '0' with '1241'
c Var 'aux167' direct represents '0' with '1241'
c Var 'aux167' order represents '1' with '1242'
-1241 1242 0
c Var 'aux167' direct represents '1' with '1243'
1241 -1242 1243 0
-1243 1242 0
-1243 -1241 0
c Var 'aux167' order represents '2' with '1244'
-1242 1244 0
c Var 'aux167' direct represents '2' with '1245'
1242 -1244 1245 0
-1245 1244 0
-1245 -1242 0
c Var 'aux167' direct represents '3' with '-1244'
1241 1243 1245 -1244 0
c Encoding variable: aux168 with domain: int(0..4) (representing constraint (aux158 + aux164))
c Both direct and order encoding.
c Var 'aux168' order represents '0' with '1246'
c Var 'aux168' direct represents '0' with '1246'
c Var 'aux168' order represents '1' with '1247'
-1246 1247 0
c Var 'aux168' direct represents '1' with '1248'
1246 -1247 1248 0
-1248 1247 0
-1248 -1246 0
c Var 'aux168' order represents '2' with '1249'
-1247 1249 0
c Var 'aux168' direct represents '2' with '1250'
1247 -1249 1250 0
-1250 1249 0
-1250 -1247 0
c Var 'aux168' order represents '3' with '1251'
-1249 1251 0
c Var 'aux168' direct represents '3' with '1252'
1249 -1251 1252 0
-1252 1251 0
-1252 -1249 0
c Var 'aux168' direct represents '4' with '-1251'
1246 1248 1250 1252 -1251 0
c Encoding variable: aux169 with domain: int(0..4) (representing constraint (aux160 + aux159))
c Both direct and order encoding.
c Var 'aux169' order represents '0' with '1253'
c Var 'aux169' direct represents '0' with '1253'
c Var 'aux169' order represents '1' with '1254'
-1253 1254 0
c Var 'aux169' direct represents '1' with '1255'
1253 -1254 1255 0
-1255 1254 0
-1255 -1253 0
c Var 'aux169' order represents '2' with '1256'
-1254 1256 0
c Var 'aux169' direct represents '2' with '1257'
1254 -1256 1257 0
-1257 1256 0
-1257 -1254 0
c Var 'aux169' order represents '3' with '1258'
-1256 1258 0
c Var 'aux169' direct represents '3' with '1259'
1256 -1258 1259 0
-1259 1258 0
-1259 -1256 0
c Var 'aux169' direct represents '4' with '-1258'
1253 1255 1257 1259 -1258 0
c Encoding variable: aux170 with domain: int(0..4) (representing constraint (aux165 + aux163))
c Both direct and order encoding.
c Var 'aux170' order represents '0' with '1260'
c Var 'aux170' direct represents '0' with '1260'
c Var 'aux170' order represents '1' with '1261'
-1260 1261 0
c Var 'aux170' direct represents '1' with '1262'
1260 -1261 1262 0
-1262 1261 0
-1262 -1260 0
c Var 'aux170' order represents '2' with '1263'
-1261 1263 0
c Var 'aux170' direct represents '2' with '1264'
1261 -1263 1264 0
-1264 1263 0
-1264 -1261 0
c Var 'aux170' order represents '3' with '1265'
-1263 1265 0
c Var 'aux170' direct represents '3' with '1266'
1263 -1265 1266 0
-1266 1265 0
-1266 -1263 0
c Var 'aux170' direct represents '4' with '-1265'
1260 1262 1264 1266 -1265 0
c Encoding variable: aux171 with domain: int(0..4) (representing constraint (aux162 + aux161))
c Both direct and order encoding.
c Var 'aux171' order represents '0' with '1267'
c Var 'aux171' direct represents '0' with '1267'
c Var 'aux171' order represents '1' with '1268'
-1267 1268 0
c Var 'aux171' direct represents '1' with '1269'
1267 -1268 1269 0
-1269 1268 0
-1269 -1267 0
c Var 'aux171' order represents '2' with '1270'
-1268 1270 0
c Var 'aux171' direct represents '2' with '1271'
1268 -1270 1271 0
-1271 1270 0
-1271 -1268 0
c Var 'aux171' order represents '3' with '1272'
-1270 1272 0
c Var 'aux171' direct represents '3' with '1273'
1270 -1272 1273 0
-1273 1272 0
-1273 -1270 0
c Var 'aux171' direct represents '4' with '-1272'
1267 1269 1271 1273 -1272 0
c Encoding variable: aux172 with domain: int(0..7) (representing constraint (aux167 + aux171))
c Both direct and order encoding.
c Var 'aux172' order represents '0' with '1274'
c Var 'aux172' direct represents '0' with '1274'
c Var 'aux172' order represents '1' with '1275'
-1274 1275 0
c Var 'aux172' direct represents '1' with '1276'
1274 -1275 1276 0
-1276 1275 0
-1276 -1274 0
c Var 'aux172' order represents '2' with '1277'
-1275 1277 0
c Var 'aux172' direct represents '2' with '1278'
1275 -1277 1278 0
-1278 1277 0
-1278 -1275 0
c Var 'aux172' order represents '3' with '1279'
-1277 1279 0
c Var 'aux172' direct represents '3' with '1280'
1277 -1279 1280 0
-1280 1279 0
-1280 -1277 0
c Var 'aux172' order represents '4' with '1281'
-1279 1281 0
c Var 'aux172' direct represents '4' with '1282'
1279 -1281 1282 0
-1282 1281 0
-1282 -1279 0
c Var 'aux172' order represents '5' with '1283'
-1281 1283 0
c Var 'aux172' direct represents '5' with '1284'
1281 -1283 1284 0
-1284 1283 0
-1284 -1281 0
c Var 'aux172' order represents '6' with '1285'
-1283 1285 0
c Var 'aux172' direct represents '6' with '1286'
1283 -1285 1286 0
-1286 1285 0
-1286 -1283 0
c Var 'aux172' direct represents '7' with '-1285'
1274 1276 1278 1280 1282 1284 1286 -1285 0
c Encoding variable: aux173 with domain: int(0..8) (representing constraint (aux169 + aux168))
c Both direct and order encoding.
c Var 'aux173' order represents '0' with '1287'
c Var 'aux173' direct represents '0' with '1287'
c Var 'aux173' order represents '1' with '1288'
-1287 1288 0
c Var 'aux173' direct represents '1' with '1289'
1287 -1288 1289 0
-1289 1288 0
-1289 -1287 0
c Var 'aux173' order represents '2' with '1290'
-1288 1290 0
c Var 'aux173' direct represents '2' with '1291'
1288 -1290 1291 0
-1291 1290 0
-1291 -1288 0
c Var 'aux173' order represents '3' with '1292'
-1290 1292 0
c Var 'aux173' direct represents '3' with '1293'
1290 -1292 1293 0
-1293 1292 0
-1293 -1290 0
c Var 'aux173' order represents '4' with '1294'
-1292 1294 0
c Var 'aux173' direct represents '4' with '1295'
1292 -1294 1295 0
-1295 1294 0
-1295 -1292 0
c Var 'aux173' order represents '5' with '1296'
-1294 1296 0
c Var 'aux173' direct represents '5' with '1297'
1294 -1296 1297 0
-1297 1296 0
-1297 -1294 0
c Var 'aux173' order represents '6' with '1298'
-1296 1298 0
c Var 'aux173' direct represents '6' with '1299'
1296 -1298 1299 0
-1299 1298 0
-1299 -1296 0
c Var 'aux173' order represents '7' with '1300'
-1298 1300 0
c Var 'aux173' direct represents '7' with '1301'
1298 -1300 1301 0
-1301 1300 0
-1301 -1298 0
c Var 'aux173' direct represents '8' with '-1300'
1287 1289 1291 1293 1295 1297 1299 1301 -1300 0
c Encoding variable: aux174 with domain: int(0..2) (representing constraint ((grid_00003_00000=4) + (grid_00000_00003=4)))
c Both direct and order encoding.
c Var 'aux174' order represents '0' with '1302'
c Var 'aux174' direct represents '0' with '1302'
c Var 'aux174' order represents '1' with '1303'
-1302 1303 0
c Var 'aux174' direct represents '1' with '1304'
1302 -1303 1304 0
-1304 1303 0
-1304 -1302 0
c Var 'aux174' direct represents '2' with '-1303'
1302 1304 -1303 0
c Encoding variable: aux175 with domain: int(0..2) (representing constraint ((grid_00000_00002=4) + (grid_00003_00001=4)))
c Both direct and order encoding.
c Var 'aux175' order represents '0' with '1305'
c Var 'aux175' direct represents '0' with '1305'
c Var 'aux175' order represents '1' with '1306'
-1305 1306 0
c Var 'aux175' direct represents '1' with '1307'
1305 -1306 1307 0
-1307 1306 0
-1307 -1305 0
c Var 'aux175' direct represents '2' with '-1306'
1305 1307 -1306 0
c Encoding variable: aux176 with domain: int(0..2) (representing constraint ((grid_00000_00001=4) + (grid_00003_00004=4)))
c Both direct and order encoding.
c Var 'aux176' order represents '0' with '1308'
c Var 'aux176' direct represents '0' with '1308'
c Var 'aux176' order represents '1' with '1309'
-1308 1309 0
c Var 'aux176' direct represents '1' with '1310'
1308 -1309 1310 0
-1310 1309 0
-1310 -1308 0
c Var 'aux176' direct represents '2' with '-1309'
1308 1310 -1309 0
c Encoding variable: aux177 with domain: int(0..2) (representing constraint ((4=grid_00001_00004) + (grid_00000_00000=4)))
c Both direct and order encoding.
c Var 'aux177' order represents '0' with '1311'
c Var 'aux177' direct represents '0' with '1311'
c Var 'aux177' order represents '1' with '1312'
-1311 1312 0
c Var 'aux177' direct represents '1' with '1313'
1311 -1312 1313 0
-1313 1312 0
-1313 -1311 0
c Var 'aux177' direct represents '2' with '-1312'
1311 1313 -1312 0
c Encoding variable: aux178 with domain: int(0..2) (representing constraint ((grid_00004_00004=4) + (4=grid_00002_00000)))
c Both direct and order encoding.
c Var 'aux178' order represents '0' with '1314'
c Var 'aux178' direct represents '0' with '1314'
c Var 'aux178' order represents '1' with '1315'
-1314 1315 0
c Var 'aux178' direct represents '1' with '1316'
1314 -1315 1316 0
-1316 1315 0
-1316 -1314 0
c Var 'aux178' direct represents '2' with '-1315'
1314 1316 -1315 0
c Encoding variable: aux179 with domain: int(0..2) (representing constraint ((grid_00004_00002=4) + (4=grid_00001_00001)))
c Both direct and order encoding.
c Var 'aux179' order represents '0' with '1317'
c Var 'aux179' direct represents '0' with '1317'
c Var 'aux179' order represents '1' with '1318'
-1317 1318 0
c Var 'aux179' direct represents '1' with '1319'
1317 -1318 1319 0
-1319 1318 0
-1319 -1317 0
c Var 'aux179' direct represents '2' with '-1318'
1317 1319 -1318 0
c Encoding variable: aux180 with domain: int(0..2) (representing constraint ((grid_00004_00001=4) + (4=grid_00002_00001)))
c Both direct and order encoding.
c Var 'aux180' order represents '0' with '1320'
c Var 'aux180' direct represents '0' with '1320'
c Var 'aux180' order represents '1' with '1321'
-1320 1321 0
c Var 'aux180' direct represents '1' with '1322'
1320 -1321 1322 0
-1322 1321 0
-1322 -1320 0
c Var 'aux180' direct represents '2' with '-1321'
1320 1322 -1321 0
c Encoding variable: aux181 with domain: int(0..2) (representing constraint ((4=grid_00002_00003) + (4=grid_00002_00002)))
c Both direct and order encoding.
c Var 'aux181' order represents '0' with '1323'
c Var 'aux181' direct represents '0' with '1323'
c Var 'aux181' order represents '1' with '1324'
-1323 1324 0
c Var 'aux181' direct represents '1' with '1325'
1323 -1324 1325 0
-1325 1324 0
-1325 -1323 0
c Var 'aux181' direct represents '2' with '-1324'
1323 1325 -1324 0
c Encoding variable: aux182 with domain: int(0..2) (representing constraint ((grid_00003_00003=4) + (4=grid_00001_00002)))
c Both direct and order encoding.
c Var 'aux182' order represents '0' with '1326'
c Var 'aux182' direct represents '0' with '1326'
c Var 'aux182' order represents '1' with '1327'
-1326 1327 0
c Var 'aux182' direct represents '1' with '1328'
1326 -1327 1328 0
-1328 1327 0
-1328 -1326 0
c Var 'aux182' direct represents '2' with '-1327'
1326 1328 -1327 0
c Encoding variable: aux183 with domain: int(0..3) (representing constraint ((4=grid_00001_00003) + aux182))
c Both direct and order encoding.
c Var 'aux183' order represents '0' with '1329'
c Var 'aux183' direct represents '0' with '1329'
c Var 'aux183' order represents '1' with '1330'
-1329 1330 0
c Var 'aux183' direct represents '1' with '1331'
1329 -1330 1331 0
-1331 1330 0
-1331 -1329 0
c Var 'aux183' order represents '2' with '1332'
-1330 1332 0
c Var 'aux183' direct represents '2' with '1333'
1330 -1332 1333 0
-1333 1332 0
-1333 -1330 0
c Var 'aux183' direct represents '3' with '-1332'
1329 1331 1333 -1332 0
c Encoding variable: aux184 with domain: int(0..4) (representing constraint (aux174 + aux180))
c Both direct and order encoding.
c Var 'aux184' order represents '0' with '1334'
c Var 'aux184' direct represents '0' with '1334'
c Var 'aux184' order represents '1' with '1335'
-1334 1335 0
c Var 'aux184' direct represents '1' with '1336'
1334 -1335 1336 0
-1336 1335 0
-1336 -1334 0
c Var 'aux184' order represents '2' with '1337'
-1335 1337 0
c Var 'aux184' direct represents '2' with '1338'
1335 -1337 1338 0
-1338 1337 0
-1338 -1335 0
c Var 'aux184' order represents '3' with '1339'
-1337 1339 0
c Var 'aux184' direct represents '3' with '1340'
1337 -1339 1340 0
-1340 1339 0
-1340 -1337 0
c Var 'aux184' direct represents '4' with '-1339'
1334 1336 1338 1340 -1339 0
c Encoding variable: aux185 with domain: int(0..4) (representing constraint (aux176 + aux175))
c Both direct and order encoding.
c Var 'aux185' order represents '0' with '1341'
c Var 'aux185' direct represents '0' with '1341'
c Var 'aux185' order represents '1' with '1342'
-1341 1342 0
c Var 'aux185' direct represents '1' with '1343'
1341 -1342 1343 0
-1343 1342 0
-1343 -1341 0
c Var 'aux185' order represents '2' with '1344'
-1342 1344 0
c Var 'aux185' direct represents '2' with '1345'
1342 -1344 1345 0
-1345 1344 0
-1345 -1342 0
c Var 'aux185' order represents '3' with '1346'
-1344 1346 0
c Var 'aux185' direct represents '3' with '1347'
1344 -1346 1347 0
-1347 1346 0
-1347 -1344 0
c Var 'aux185' direct represents '4' with '-1346'
1341 1343 1345 1347 -1346 0
c Encoding variable: aux186 with domain: int(0..4) (representing constraint (aux181 + aux179))
c Both direct and order encoding.
c Var 'aux186' order represents '0' with '1348'
c Var 'aux186' direct represents '0' with '1348'
c Var 'aux186' order represents '1' with '1349'
-1348 1349 0
c Var 'aux186' direct represents '1' with '1350'
1348 -1349 1350 0
-1350 1349 0
-1350 -1348 0
c Var 'aux186' order represents '2' with '1351'
-1349 1351 0
c Var 'aux186' direct represents '2' with '1352'
1349 -1351 1352 0
-1352 1351 0
-1352 -1349 0
c Var 'aux186' order represents '3' with '1353'
-1351 1353 0
c Var 'aux186' direct represents '3' with '1354'
1351 -1353 1354 0
-1354 1353 0
-1354 -1351 0
c Var 'aux186' direct represents '4' with '-1353'
1348 1350 1352 1354 -1353 0
c Encoding variable: aux187 with domain: int(0..4) (representing constraint (aux178 + aux177))
c Both direct and order encoding.
c Var 'aux187' order represents '0' with '1355'
c Var 'aux187' direct represents '0' with '1355'
c Var 'aux187' order represents '1' with '1356'
-1355 1356 0
c Var 'aux187' direct represents '1' with '1357'
1355 -1356 1357 0
-1357 1356 0
-1357 -1355 0
c Var 'aux187' order represents '2' with '1358'
-1356 1358 0
c Var 'aux187' direct represents '2' with '1359'
1356 -1358 1359 0
-1359 1358 0
-1359 -1356 0
c Var 'aux187' order represents '3' with '1360'
-1358 1360 0
c Var 'aux187' direct represents '3' with '1361'
1358 -1360 1361 0
-1361 1360 0
-1361 -1358 0
c Var 'aux187' direct represents '4' with '-1360'
1355 1357 1359 1361 -1360 0
c Encoding variable: aux188 with domain: int(0..7) (representing constraint (aux183 + aux187))
c Both direct and order encoding.
c Var 'aux188' order represents '0' with '1362'
c Var 'aux188' direct represents '0' with '1362'
c Var 'aux188' order represents '1' with '1363'
-1362 1363 0
c Var 'aux188' direct represents '1' with '1364'
1362 -1363 1364 0
-1364 1363 0
-1364 -1362 0
c Var 'aux188' order represents '2' with '1365'
-1363 1365 0
c Var 'aux188' direct represents '2' with '1366'
1363 -1365 1366 0
-1366 1365 0
-1366 -1363 0
c Var 'aux188' order represents '3' with '1367'
-1365 1367 0
c Var 'aux188' direct represents '3' with '1368'
1365 -1367 1368 0
-1368 1367 0
-1368 -1365 0
c Var 'aux188' order represents '4' with '1369'
-1367 1369 0
c Var 'aux188' direct represents '4' with '1370'
1367 -1369 1370 0
-1370 1369 0
-1370 -1367 0
c Var 'aux188' order represents '5' with '1371'
-1369 1371 0
c Var 'aux188' direct represents '5' with '1372'
1369 -1371 1372 0
-1372 1371 0
-1372 -1369 0
c Var 'aux188' order represents '6' with '1373'
-1371 1373 0
c Var 'aux188' direct represents '6' with '1374'
1371 -1373 1374 0
-1374 1373 0
-1374 -1371 0
c Var 'aux188' direct represents '7' with '-1373'
1362 1364 1366 1368 1370 1372 1374 -1373 0
c Encoding variable: aux189 with domain: int(0..8) (representing constraint (aux185 + aux184))
c Both direct and order encoding.
c Var 'aux189' order represents '0' with '1375'
c Var 'aux189' direct represents '0' with '1375'
c Var 'aux189' order represents '1' with '1376'
-1375 1376 0
c Var 'aux189' direct represents '1' with '1377'
1375 -1376 1377 0
-1377 1376 0
-1377 -1375 0
c Var 'aux189' order represents '2' with '1378'
-1376 1378 0
c Var 'aux189' direct represents '2' with '1379'
1376 -1378 1379 0
-1379 1378 0
-1379 -1376 0
c Var 'aux189' order represents '3' with '1380'
-1378 1380 0
c Var 'aux189' direct represents '3' with '1381'
1378 -1380 1381 0
-1381 1380 0
-1381 -1378 0
c Var 'aux189' order represents '4' with '1382'
-1380 1382 0
c Var 'aux189' direct represents '4' with '1383'
1380 -1382 1383 0
-1383 1382 0
-1383 -1380 0
c Var 'aux189' order represents '5' with '1384'
-1382 1384 0
c Var 'aux189' direct represents '5' with '1385'
1382 -1384 1385 0
-1385 1384 0
-1385 -1382 0
c Var 'aux189' order represents '6' with '1386'
-1384 1386 0
c Var 'aux189' direct represents '6' with '1387'
1384 -1386 1387 0
-1387 1386 0
-1387 -1384 0
c Var 'aux189' order represents '7' with '1388'
-1386 1388 0
c Var 'aux189' direct represents '7' with '1389'
1386 -1388 1389 0
-1389 1388 0
-1389 -1386 0
c Var 'aux189' direct represents '8' with '-1388'
1375 1377 1379 1381 1383 1385 1387 1389 -1388 0
c Encoding variable: aux190 with domain: int(0..2) (representing constraint ((grid_00003_00000=5) + (grid_00000_00003=5)))
c Both direct and order encoding.
c Var 'aux190' order represents '0' with '1390'
c Var 'aux190' direct represents '0' with '1390'
c Var 'aux190' order represents '1' with '1391'
-1390 1391 0
c Var 'aux190' direct represents '1' with '1392'
1390 -1391 1392 0
-1392 1391 0
-1392 -1390 0
c Var 'aux190' direct represents '2' with '-1391'
1390 1392 -1391 0
c Encoding variable: aux191 with domain: int(0..2) (representing constraint ((grid_00000_00002=5) + (grid_00003_00001=5)))
c Both direct and order encoding.
c Var 'aux191' order represents '0' with '1393'
c Var 'aux191' direct represents '0' with '1393'
c Var 'aux191' order represents '1' with '1394'
-1393 1394 0
c Var 'aux191' direct represents '1' with '1395'
1393 -1394 1395 0
-1395 1394 0
-1395 -1393 0
c Var 'aux191' direct represents '2' with '-1394'
1393 1395 -1394 0
c Encoding variable: aux192 with domain: int(0..2) (representing constraint ((grid_00000_00001=5) + (grid_00003_00004=5)))
c Both direct and order encoding.
c Var 'aux192' order represents '0' with '1396'
c Var 'aux192' direct represents '0' with '1396'
c Var 'aux192' order represents '1' with '1397'
-1396 1397 0
c Var 'aux192' direct represents '1' with '1398'
1396 -1397 1398 0
-1398 1397 0
-1398 -1396 0
c Var 'aux192' direct represents '2' with '-1397'
1396 1398 -1397 0
c Encoding variable: aux193 with domain: int(0..2) (representing constraint ((5=grid_00001_00004) + (grid_00000_00000=5)))
c Both direct and order encoding.
c Var 'aux193' order represents '0' with '1399'
c Var 'aux193' direct represents '0' with '1399'
c Var 'aux193' order represents '1' with '1400'
-1399 1400 0
c Var 'aux193' direct represents '1' with '1401'
1399 -1400 1401 0
-1401 1400 0
-1401 -1399 0
c Var 'aux193' direct represents '2' with '-1400'
1399 1401 -1400 0
c Encoding variable: aux194 with domain: int(0..2) (representing constraint ((grid_00004_00004=5) + (5=grid_00002_00000)))
c Both direct and order encoding.
c Var 'aux194' order represents '0' with '1402'
c Var 'aux194' direct represents '0' with '1402'
c Var 'aux194' order represents '1' with '1403'
-1402 1403 0
c Var 'aux194' direct represents '1' with '1404'
1402 -1403 1404 0
-1404 1403 0
-1404 -1402 0
c Var 'aux194' direct represents '2' with '-1403'
1402 1404 -1403 0
c Encoding variable: aux195 with domain: int(0..2) (representing constraint ((grid_00004_00002=5) + (5=grid_00001_00001)))
c Both direct and order encoding.
c Var 'aux195' order represents '0' with '1405'
c Var 'aux195' direct represents '0' with '1405'
c Var 'aux195' order represents '1' with '1406'
-1405 1406 0
c Var 'aux195' direct represents '1' with '1407'
1405 -1406 1407 0
-1407 1406 0
-1407 -1405 0
c Var 'aux195' direct represents '2' with '-1406'
1405 1407 -1406 0
c Encoding variable: aux196 with domain: int(0..2) (representing constraint ((grid_00004_00001=5) + (5=grid_00002_00001)))
c Both direct and order encoding.
c Var 'aux196' order represents '0' with '1408'
c Var 'aux196' direct represents '0' with '1408'
c Var 'aux196' order represents '1' with '1409'
-1408 1409 0
c Var 'aux196' direct represents '1' with '1410'
1408 -1409 1410 0
-1410 1409 0
-1410 -1408 0
c Var 'aux196' direct represents '2' with '-1409'
1408 1410 -1409 0
c Encoding variable: aux197 with domain: int(0..2) (representing constraint ((5=grid_00002_00003) + (5=grid_00002_00002)))
c Both direct and order encoding.
c Var 'aux197' order represents '0' with '1411'
c Var 'aux197' direct represents '0' with '1411'
c Var 'aux197' order represents '1' with '1412'
-1411 1412 0
c Var 'aux197' direct represents '1' with '1413'
1411 -1412 1413 0
-1413 1412 0
-1413 -1411 0
c Var 'aux197' direct represents '2' with '-1412'
1411 1413 -1412 0
c Encoding variable: aux198 with domain: int(0..2) (representing constraint ((grid_00003_00003=5) + (5=grid_00001_00002)))
c Both direct and order encoding.
c Var 'aux198' order represents '0' with '1414'
c Var 'aux198' direct represents '0' with '1414'
c Var 'aux198' order represents '1' with '1415'
-1414 1415 0
c Var 'aux198' direct represents '1' with '1416'
1414 -1415 1416 0
-1416 1415 0
-1416 -1414 0
c Var 'aux198' direct represents '2' with '-1415'
1414 1416 -1415 0
c Encoding variable: aux199 with domain: int(0..3) (representing constraint ((5=grid_00001_00003) + aux198))
c Both direct and order encoding.
c Var 'aux199' order represents '0' with '1417'
c Var 'aux199' direct represents '0' with '1417'
c Var 'aux199' order represents '1' with '1418'
-1417 1418 0
c Var 'aux199' direct represents '1' with '1419'
1417 -1418 1419 0
-1419 1418 0
-1419 -1417 0
c Var 'aux199' order represents '2' with '1420'
-1418 1420 0
c Var 'aux199' direct represents '2' with '1421'
1418 -1420 1421 0
-1421 1420 0
-1421 -1418 0
c Var 'aux199' direct represents '3' with '-1420'
1417 1419 1421 -1420 0
c Encoding variable: aux200 with domain: int(0..4) (representing constraint (aux190 + aux196))
c Both direct and order encoding.
c Var 'aux200' order represents '0' with '1422'
c Var 'aux200' direct represents '0' with '1422'
c Var 'aux200' order represents '1' with '1423'
-1422 1423 0
c Var 'aux200' direct represents '1' with '1424'
1422 -1423 1424 0
-1424 1423 0
-1424 -1422 0
c Var 'aux200' order represents '2' with '1425'
-1423 1425 0
c Var 'aux200' direct represents '2' with '1426'
1423 -1425 1426 0
-1426 1425 0
-1426 -1423 0
c Var 'aux200' order represents '3' with '1427'
-1425 1427 0
c Var 'aux200' direct represents '3' with '1428'
1425 -1427 1428 0
-1428 1427 0
-1428 -1425 0
c Var 'aux200' direct represents '4' with '-1427'
1422 1424 1426 1428 -1427 0
c Encoding variable: aux201 with domain: int(0..4) (representing constraint (aux192 + aux191))
c Both direct and order encoding.
c Var 'aux201' order represents '0' with '1429'
c Var 'aux201' direct represents '0' with '1429'
c Var 'aux201' order represents '1' with '1430'
-1429 1430 0
c Var 'aux201' direct represents '1' with '1431'
1429 -1430 1431 0
-1431 1430 0
-1431 -1429 0
c Var 'aux201' order represents '2' with '1432'
-1430 1432 0
c Var 'aux201' direct represents '2' with '1433'
1430 -1432 1433 0
-1433 1432 0
-1433 -1430 0
c Var 'aux201' order represents '3' with '1434'
-1432 1434 0
c Var 'aux201' direct represents '3' with '1435'
1432 -1434 1435 0
-1435 1434 0
-1435 -1432 0
c Var 'aux201' direct represents '4' with '-1434'
1429 1431 1433 1435 -1434 0
c Encoding variable: aux202 with domain: int(0..4) (representing constraint (aux197 + aux195))
c Both direct and order encoding.
c Var 'aux202' order represents '0' with '1436'
c Var 'aux202' direct represents '0' with '1436'
c Var 'aux202' order represents '1' with '1437'
-1436 1437 0
c Var 'aux202' direct represents '1' with '1438'
1436 -1437 1438 0
-1438 1437 0
-1438 -1436 0
c Var 'aux202' order represents '2' with '1439'
-1437 1439 0
c Var 'aux202' direct represents '2' with '1440'
1437 -1439 1440 0
-1440 1439 0
-1440 -1437 0
c Var 'aux202' order represents '3' with '1441'
-1439 1441 0
c Var 'aux202' direct represents '3' with '1442'
1439 -1441 1442 0
-1442 1441 0
-1442 -1439 0
c Var 'aux202' direct represents '4' with '-1441'
1436 1438 1440 1442 -1441 0
c Encoding variable: aux203 with domain: int(0..4) (representing constraint (aux194 + aux193))
c Both direct and order encoding.
c Var 'aux203' order represents '0' with '1443'
c Var 'aux203' direct represents '0' with '1443'
c Var 'aux203' order represents '1' with '1444'
-1443 1444 0
c Var 'aux203' direct represents '1' with '1445'
1443 -1444 1445 0
-1445 1444 0
-1445 -1443 0
c Var 'aux203' order represents '2' with '1446'
-1444 1446 0
c Var 'aux203' direct represents '2' with '1447'
1444 -1446 1447 0
-1447 1446 0
-1447 -1444 0
c Var 'aux203' order represents '3' with '1448'
-1446 1448 0
c Var 'aux203' direct represents '3' with '1449'
1446 -1448 1449 0
-1449 1448 0
-1449 -1446 0
c Var 'aux203' direct represents '4' with '-1448'
1443 1445 1447 1449 -1448 0
c Encoding variable: aux204 with domain: int(0..7) (representing constraint (aux199 + aux203))
c Both direct and order encoding.
c Var 'aux204' order represents '0' with '1450'
c Var 'aux204' direct represents '0' with '1450'
c Var 'aux204' order represents '1' with '1451'
-1450 1451 0
c Var 'aux204' direct represents '1' with '1452'
1450 -1451 1452 0
-1452 1451 0
-1452 -1450 0
c Var 'aux204' order represents '2' with '1453'
-1451 1453 0
c Var 'aux204' direct represents '2' with '1454'
1451 -1453 1454 0
-1454 1453 0
-1454 -1451 0
c Var 'aux204' order represents '3' with '1455'
-1453 1455 0
c Var 'aux204' direct represents '3' with '1456'
1453 -1455 1456 0
-1456 1455 0
-1456 -1453 0
c Var 'aux204' order represents '4' with '1457'
-1455 1457 0
c Var 'aux204' direct represents '4' with '1458'
1455 -1457 1458 0
-1458 1457 0
-1458 -1455 0
c Var 'aux204' order represents '5' with '1459'
-1457 1459 0
c Var 'aux204' direct represents '5' with '1460'
1457 -1459 1460 0
-1460 1459 0
-1460 -1457 0
c Var 'aux204' order represents '6' with '1461'
-1459 1461 0
c Var 'aux204' direct represents '6' with '1462'
1459 -1461 1462 0
-1462 1461 0
-1462 -1459 0
c Var 'aux204' direct represents '7' with '-1461'
1450 1452 1454 1456 1458 1460 1462 -1461 0
c Encoding variable: aux205 with domain: int(0..8) (representing constraint (aux201 + aux200))
c Both direct and order encoding.
c Var 'aux205' order represents '0' with '1463'
c Var 'aux205' direct represents '0' with '1463'
c Var 'aux205' order represents '1' with '1464'
-1463 1464 0
c Var 'aux205' direct represents '1' with '1465'
1463 -1464 1465 0
-1465 1464 0
-1465 -1463 0
c Var 'aux205' order represents '2' with '1466'
-1464 1466 0
c Var 'aux205' direct represents '2' with '1467'
1464 -1466 1467 0
-1467 1466 0
-1467 -1464 0
c Var 'aux205' order represents '3' with '1468'
-1466 1468 0
c Var 'aux205' direct represents '3' with '1469'
1466 -1468 1469 0
-1469 1468 0
-1469 -1466 0
c Var 'aux205' order represents '4' with '1470'
-1468 1470 0
c Var 'aux205' direct represents '4' with '1471'
1468 -1470 1471 0
-1471 1470 0
-1471 -1468 0
c Var 'aux205' order represents '5' with '1472'
-1470 1472 0
c Var 'aux205' direct represents '5' with '1473'
1470 -1472 1473 0
-1473 1472 0
-1473 -1470 0
c Var 'aux205' order represents '6' with '1474'
-1472 1474 0
c Var 'aux205' direct represents '6' with '1475'
1472 -1474 1475 0
-1475 1474 0
-1475 -1472 0
c Var 'aux205' order represents '7' with '1476'
-1474 1476 0
c Var 'aux205' direct represents '7' with '1477'
1474 -1476 1477 0
-1477 1476 0
-1477 -1474 0
c Var 'aux205' direct represents '8' with '-1476'
1463 1465 1467 1469 1471 1473 1475 1477 -1476 0
c Encoding variable: aux206 with domain: int(0..2) (representing constraint ((grid_00003_00000=6) + (grid_00000_00003=6)))
c Both direct and order encoding.
c Var 'aux206' order represents '0' with '1478'
c Var 'aux206' direct represents '0' with '1478'
c Var 'aux206' order represents '1' with '1479'
-1478 1479 0
c Var 'aux206' direct represents '1' with '1480'
1478 -1479 1480 0
-1480 1479 0
-1480 -1478 0
c Var 'aux206' direct represents '2' with '-1479'
1478 1480 -1479 0
c Encoding variable: aux207 with domain: int(0..2) (representing constraint ((grid_00000_00002=6) + (grid_00003_00001=6)))
c Both direct and order encoding.
c Var 'aux207' order represents '0' with '1481'
c Var 'aux207' direct represents '0' with '1481'
c Var 'aux207' order represents '1' with '1482'
-1481 1482 0
c Var 'aux207' direct represents '1' with '1483'
1481 -1482 1483 0
-1483 1482 0
-1483 -1481 0
c Var 'aux207' direct represents '2' with '-1482'
1481 1483 -1482 0
c Encoding variable: aux208 with domain: int(0..2) (representing constraint ((grid_00000_00001=6) + (grid_00003_00004=6)))
c Both direct and order encoding.
c Var 'aux208' order represents '0' with '1484'
c Var 'aux208' direct represents '0' with '1484'
c Var 'aux208' order represents '1' with '1485'
-1484 1485 0
c Var 'aux208' direct represents '1' with '1486'
1484 -1485 1486 0
-1486 1485 0
-1486 -1484 0
c Var 'aux208' direct represents '2' with '-1485'
1484 1486 -1485 0
c Encoding variable: aux209 with domain: int(0..2) (representing constraint ((6=grid_00001_00004) + (grid_00000_00000=6)))
c Both direct and order encoding.
c Var 'aux209' order represents '0' with '1487'
c Var 'aux209' direct represents '0' with '1487'
c Var 'aux209' order represents '1' with '1488'
-1487 1488 0
c Var 'aux209' direct represents '1' with '1489'
1487 -1488 1489 0
-1489 1488 0
-1489 -1487 0
c Var 'aux209' direct represents '2' with '-1488'
1487 1489 -1488 0
c Encoding variable: aux210 with domain: int(0..2) (representing constraint ((grid_00004_00004=6) + (6=grid_00002_00000)))
c Both direct and order encoding.
c Var 'aux210' order represents '0' with '1490'
c Var 'aux210' direct represents '0' with '1490'
c Var 'aux210' order represents '1' with '1491'
-1490 1491 0
c Var 'aux210' direct represents '1' with '1492'
1490 -1491 1492 0
-1492 1491 0
-1492 -1490 0
c Var 'aux210' direct represents '2' with '-1491'
1490 1492 -1491 0
c Encoding variable: aux211 with domain: int(0..2) (representing constraint ((grid_00004_00002=6) + (6=grid_00001_00001)))
c Both direct and order encoding.
c Var 'aux211' order represents '0' with '1493'
c Var 'aux211' direct represents '0' with '1493'
c Var 'aux211' order represents '1' with '1494'
-1493 1494 0
c Var 'aux211' direct represents '1' with '1495'
1493 -1494 1495 0
-1495 1494 0
-1495 -1493 0
c Var 'aux211' direct represents '2' with '-1494'
1493 1495 -1494 0
c Encoding variable: aux212 with domain: int(0..2) (representing constraint ((grid_00004_00001=6) + (6=grid_00002_00001)))
c Both direct and order encoding.
c Var 'aux212' order represents '0' with '1496'
c Var 'aux212' direct represents '0' with '1496'
c Var 'aux212' order represents '1' with '1497'
-1496 1497 0
c Var 'aux212' direct represents '1' with '1498'
1496 -1497 1498 0
-1498 1497 0
-1498 -1496 0
c Var 'aux212' direct represents '2' with '-1497'
1496 1498 -1497 0
c Encoding variable: aux213 with domain: int(0..2) (representing constraint ((6=grid_00002_00003) + (6=grid_00002_00002)))
c Both direct and order encoding.
c Var 'aux213' order represents '0' with '1499'
c Var 'aux213' direct represents '0' with '1499'
c Var 'aux213' order represents '1' with '1500'
-1499 1500 0
c Var 'aux213' direct represents '1' with '1501'
1499 -1500 1501 0
-1501 1500 0
-1501 -1499 0
c Var 'aux213' direct represents '2' with '-1500'
1499 1501 -1500 0
c Encoding variable: aux214 with domain: int(0..2) (representing constraint ((grid_00003_00003=6) + (6=grid_00001_00002)))
c Both direct and order encoding.
c Var 'aux214' order represents '0' with '1502'
c Var 'aux214' direct represents '0' with '1502'
c Var 'aux214' order represents '1' with '1503'
-1502 1503 0
c Var 'aux214' direct represents '1' with '1504'
1502 -1503 1504 0
-1504 1503 0
-1504 -1502 0
c Var 'aux214' direct represents '2' with '-1503'
1502 1504 -1503 0
c Encoding variable: aux215 with domain: int(0..3) (representing constraint ((6=grid_00001_00003) + aux214))
c Both direct and order encoding.
c Var 'aux215' order represents '0' with '1505'
c Var 'aux215' direct represents '0' with '1505'
c Var 'aux215' order represents '1' with '1506'
-1505 1506 0
c Var 'aux215' direct represents '1' with '1507'
1505 -1506 1507 0
-1507 1506 0
-1507 -1505 0
c Var 'aux215' order represents '2' with '1508'
-1506 1508 0
c Var 'aux215' direct represents '2' with '1509'
1506 -1508 1509 0
-1509 1508 0
-1509 -1506 0
c Var 'aux215' direct represents '3' with '-1508'
1505 1507 1509 -1508 0
c Encoding variable: aux216 with domain: int(0..4) (representing constraint (aux206 + aux212))
c Both direct and order encoding.
c Var 'aux216' order represents '0' with '1510'
c Var 'aux216' direct represents '0' with '1510'
c Var 'aux216' order represents '1' with '1511'
-1510 1511 0
c Var 'aux216' direct represents '1' with '1512'
1510 -1511 1512 0
-1512 1511 0
-1512 -1510 0
c Var 'aux216' order represents '2' with '1513'
-1511 1513 0
c Var 'aux216' direct represents '2' with '1514'
1511 -1513 1514 0
-1514 1513 0
-1514 -1511 0
c Var 'aux216' order represents '3' with '1515'
-1513 1515 0
c Var 'aux216' direct represents '3' with '1516'
1513 -1515 1516 0
-1516 1515 0
-1516 -1513 0
c Var 'aux216' direct represents '4' with '-1515'
1510 1512 1514 1516 -1515 0
c Encoding variable: aux217 with domain: int(0..4) (representing constraint (aux208 + aux207))
c Both direct and order encoding.
c Var 'aux217' order represents '0' with '1517'
c Var 'aux217' direct represents '0' with '1517'
c Var 'aux217' order represents '1' with '1518'
-1517 1518 0
c Var 'aux217' direct represents '1' with '1519'
1517 -1518 1519 0
-1519 1518 0
-1519 -1517 0
c Var 'aux217' order represents '2' with '1520'
-1518 1520 0
c Var 'aux217' direct represents '2' with '1521'
1518 -1520 1521 0
-1521 1520 0
-1521 -1518 0
c Var 'aux217' order represents '3' with '1522'
-1520 1522 0
c Var 'aux217' direct represents '3' with '1523'
1520 -1522 1523 0
-1523 1522 0
-1523 -1520 0
c Var 'aux217' direct represents '4' with '-1522'
1517 1519 1521 1523 -1522 0
c Encoding variable: aux218 with domain: int(0..4) (representing constraint (aux213 + aux211))
c Both direct and order encoding.
c Var 'aux218' order represents '0' with '1524'
c Var 'aux218' direct represents '0' with '1524'
c Var 'aux218' order represents '1' with '1525'
-1524 1525 0
c Var 'aux218' direct represents '1' with '1526'
1524 -1525 1526 0
-1526 1525 0
-1526 -1524 0
c Var 'aux218' order represents '2' with '1527'
-1525 1527 0
c Var 'aux218' direct represents '2' with '1528'
1525 -1527 1528 0
-1528 1527 0
-1528 -1525 0
c Var 'aux218' order represents '3' with '1529'
-1527 1529 0
c Var 'aux218' direct represents '3' with '1530'
1527 -1529 1530 0
-1530 1529 0
-1530 -1527 0
c Var 'aux218' direct represents '4' with '-1529'
1524 1526 1528 1530 -1529 0
c Encoding variable: aux219 with domain: int(0..4) (representing constraint (aux210 + aux209))
c Both direct and order encoding.
c Var 'aux219' order represents '0' with '1531'
c Var 'aux219' direct represents '0' with '1531'
c Var 'aux219' order represents '1' with '1532'
-1531 1532 0
c Var 'aux219' direct represents '1' with '1533'
1531 -1532 1533 0
-1533 1532 0
-1533 -1531 0
c Var 'aux219' order represents '2' with '1534'
-1532 1534 0
c Var 'aux219' direct represents '2' with '1535'
1532 -1534 1535 0
-1535 1534 0
-1535 -1532 0
c Var 'aux219' order represents '3' with '1536'
-1534 1536 0
c Var 'aux219' direct represents '3' with '1537'
1534 -1536 1537 0
-1537 1536 0
-1537 -1534 0
c Var 'aux219' direct represents '4' with '-1536'
1531 1533 1535 1537 -1536 0
c Encoding variable: aux220 with domain: int(0..7) (representing constraint (aux215 + aux219))
c Both direct and order encoding.
c Var 'aux220' order represents '0' with '1538'
c Var 'aux220' direct represents '0' with '1538'
c Var 'aux220' order represents '1' with '1539'
-1538 1539 0
c Var 'aux220' direct represents '1' with '1540'
1538 -1539 1540 0
-1540 1539 0
-1540 -1538 0
c Var 'aux220' order represents '2' with '1541'
-1539 1541 0
c Var 'aux220' direct represents '2' with '1542'
1539 -1541 1542 0
-1542 1541 0
-1542 -1539 0
c Var 'aux220' order represents '3' with '1543'
-1541 1543 0
c Var 'aux220' direct represents '3' with '1544'
1541 -1543 1544 0
-1544 1543 0
-1544 -1541 0
c Var 'aux220' order represents '4' with '1545'
-1543 1545 0
c Var 'aux220' direct represents '4' with '1546'
1543 -1545 1546 0
-1546 1545 0
-1546 -1543 0
c Var 'aux220' order represents '5' with '1547'
-1545 1547 0
c Var 'aux220' direct represents '5' with '1548'
1545 -1547 1548 0
-1548 1547 0
-1548 -1545 0
c Var 'aux220' order represents '6' with '1549'
-1547 1549 0
c Var 'aux220' direct represents '6' with '1550'
1547 -1549 1550 0
-1550 1549 0
-1550 -1547 0
c Var 'aux220' direct represents '7' with '-1549'
1538 1540 1542 1544 1546 1548 1550 -1549 0
c Encoding variable: aux221 with domain: int(0..8) (representing constraint (aux217 + aux216))
c Both direct and order encoding.
c Var 'aux221' order represents '0' with '1551'
c Var 'aux221' direct represents '0' with '1551'
c Var 'aux221' order represents '1' with '1552'
-1551 1552 0
c Var 'aux221' direct represents '1' with '1553'
1551 -1552 1553 0
-1553 1552 0
-1553 -1551 0
c Var 'aux221' order represents '2' with '1554'
-1552 1554 0
c Var 'aux221' direct represents '2' with '1555'
1552 -1554 1555 0
-1555 1554 0
-1555 -1552 0
c Var 'aux221' order represents '3' with '1556'
-1554 1556 0
c Var 'aux221' direct represents '3' with '1557'
1554 -1556 1557 0
-1557 1556 0
-1557 -1554 0
c Var 'aux221' order represents '4' with '1558'
-1556 1558 0
c Var 'aux221' direct represents '4' with '1559'
1556 -1558 1559 0
-1559 1558 0
-1559 -1556 0
c Var 'aux221' order represents '5' with '1560'
-1558 1560 0
c Var 'aux221' direct represents '5' with '1561'
1558 -1560 1561 0
-1561 1560 0
-1561 -1558 0
c Var 'aux221' order represents '6' with '1562'
-1560 1562 0
c Var 'aux221' direct represents '6' with '1563'
1560 -1562 1563 0
-1563 1562 0
-1563 -1560 0
c Var 'aux221' order represents '7' with '1564'
-1562 1564 0
c Var 'aux221' direct represents '7' with '1565'
1562 -1564 1565 0
-1565 1564 0
-1565 -1562 0
c Var 'aux221' direct represents '8' with '-1564'
1551 1553 1555 1557 1559 1561 1563 1565 -1564 0
c Encoding variable: aux222 with domain: int(0..2) (representing constraint ((0<grid_00001_00001) + (0<grid_00001_00004)))
c Both direct and order encoding.
c Var 'aux222' order represents '0' with '1566'
c Var 'aux222' direct represents '0' with '1566'
c Var 'aux222' order represents '1' with '1567'
-1566 1567 0
c Var 'aux222' direct represents '1' with '1568'
1566 -1567 1568 0
-1568 1567 0
-1568 -1566 0
c Var 'aux222' direct represents '2' with '-1567'
1566 1568 -1567 0
c Encoding variable: aux223 with domain: int(0..2) (representing constraint ((0<grid_00002_00000) + (0<grid_00002_00003)))
c Both direct and order encoding.
c Var 'aux223' order represents '0' with '1569'
c Var 'aux223' direct represents '0' with '1569'
c Var 'aux223' order represents '1' with '1570'
-1569 1570 0
c Var 'aux223' direct represents '1' with '1571'
1569 -1570 1571 0
-1571 1570 0
-1571 -1569 0
c Var 'aux223' direct represents '2' with '-1570'
1569 1571 -1570 0
c Encoding variable: aux224 with domain: int(0..2) (representing constraint ((0<grid_00003_00000) + (0<grid_00003_00004)))
c Both direct and order encoding.
c Var 'aux224' order represents '0' with '1572'
c Var 'aux224' direct represents '0' with '1572'
c Var 'aux224' order represents '1' with '1573'
-1572 1573 0
c Var 'aux224' direct represents '1' with '1574'
1572 -1573 1574 0
-1574 1573 0
-1574 -1572 0
c Var 'aux224' direct represents '2' with '-1573'
1572 1574 -1573 0
c Encoding variable: aux225 with domain: int(0..2) (representing constraint ((0<grid_00001_00001) + (0<grid_00001_00004)))
c Both direct and order encoding.
c Var 'aux225' order represents '0' with '1575'
c Var 'aux225' direct represents '0' with '1575'
c Var 'aux225' order represents '1' with '1576'
-1575 1576 0
c Var 'aux225' direct represents '1' with '1577'
1575 -1576 1577 0
-1577 1576 0
-1577 -1575 0
c Var 'aux225' direct represents '2' with '-1576'
1575 1577 -1576 0
c Encoding variable: aux226 with domain: int(0..2) (representing constraint ((0<grid_00002_00000) + (0<grid_00002_00003)))
c Both direct and order encoding.
c Var 'aux226' order represents '0' with '1578'
c Var 'aux226' direct represents '0' with '1578'
c Var 'aux226' order represents '1' with '1579'
-1578 1579 0
c Var 'aux226' direct represents '1' with '1580'
1578 -1579 1580 0
-1580 1579 0
-1580 -1578 0
c Var 'aux226' direct represents '2' with '-1579'
1578 1580 -1579 0
c Encoding variable: aux227 with domain: int(0..2) (representing constraint ((0<grid_00003_00000) + (0<grid_00003_00004)))
c Both direct and order encoding.
c Var 'aux227' order represents '0' with '1581'
c Var 'aux227' direct represents '0' with '1581'
c Var 'aux227' order represents '1' with '1582'
-1581 1582 0
c Var 'aux227' direct represents '1' with '1583'
1581 -1582 1583 0
-1583 1582 0
-1583 -1581 0
c Var 'aux227' direct represents '2' with '-1582'
1581 1583 -1582 0
c Encoding variable: aux228 with domain: int(0..2) (representing constraint ((0<grid_00002_00001) + (0<grid_00001_00001)))
c Both direct and order encoding.
c Var 'aux228' order represents '0' with '1584'
c Var 'aux228' direct represents '0' with '1584'
c Var 'aux228' order represents '1' with '1585'
-1584 1585 0
c Var 'aux228' direct represents '1' with '1586'
1584 -1585 1586 0
-1586 1585 0
-1586 -1584 0
c Var 'aux228' direct represents '2' with '-1585'
1584 1586 -1585 0
c Encoding variable: aux229 with domain: int(0..2) (representing constraint ((0<grid_00000_00001) + (0<grid_00003_00001)))
c Both direct and order encoding.
c Var 'aux229' order represents '0' with '1587'
c Var 'aux229' direct represents '0' with '1587'
c Var 'aux229' order represents '1' with '1588'
-1587 1588 0
c Var 'aux229' direct represents '1' with '1589'
1587 -1588 1589 0
-1589 1588 0
-1589 -1587 0
c Var 'aux229' direct represents '2' with '-1588'
1587 1589 -1588 0
c Encoding variable: aux230 with domain: int(0..2) (representing constraint ((0<grid_00002_00002) + (0<grid_00001_00002)))
c Both direct and order encoding.
c Var 'aux230' order represents '0' with '1590'
c Var 'aux230' direct represents '0' with '1590'
c Var 'aux230' order represents '1' with '1591'
-1590 1591 0
c Var 'aux230' direct represents '1' with '1592'
1590 -1591 1592 0
-1592 1591 0
-1592 -1590 0
c Var 'aux230' direct represents '2' with '-1591'
1590 1592 -1591 0
c Encoding variable: aux231 with domain: int(0..2) (representing constraint ((0<grid_00002_00003) + (0<grid_00001_00003)))
c Both direct and order encoding.
c Var 'aux231' order represents '0' with '1593'
c Var 'aux231' direct represents '0' with '1593'
c Var 'aux231' order represents '1' with '1594'
-1593 1594 0
c Var 'aux231' direct represents '1' with '1595'
1593 -1594 1595 0
-1595 1594 0
-1595 -1593 0
c Var 'aux231' direct represents '2' with '-1594'
1593 1595 -1594 0
c Encoding variable: aux232 with domain: int(0..2) (representing constraint ((0<grid_00002_00001) + (0<grid_00001_00001)))
c Both direct and order encoding.
c Var 'aux232' order represents '0' with '1596'
c Var 'aux232' direct represents '0' with '1596'
c Var 'aux232' order represents '1' with '1597'
-1596 1597 0
c Var 'aux232' direct represents '1' with '1598'
1596 -1597 1598 0
-1598 1597 0
-1598 -1596 0
c Var 'aux232' direct represents '2' with '-1597'
1596 1598 -1597 0
c Encoding variable: aux233 with domain: int(0..2) (representing constraint ((0<grid_00000_00001) + (0<grid_00003_00001)))
c Both direct and order encoding.
c Var 'aux233' order represents '0' with '1599'
c Var 'aux233' direct represents '0' with '1599'
c Var 'aux233' order represents '1' with '1600'
-1599 1600 0
c Var 'aux233' direct represents '1' with '1601'
1599 -1600 1601 0
-1601 1600 0
-1601 -1599 0
c Var 'aux233' direct represents '2' with '-1600'
1599 1601 -1600 0
c Encoding variable: aux234 with domain: int(0..2) (representing constraint ((0<grid_00002_00002) + (0<grid_00001_00002)))
c Both direct and order encoding.
c Var 'aux234' order represents '0' with '1602'
c Var 'aux234' direct represents '0' with '1602'
c Var 'aux234' order represents '1' with '1603'
-1602 1603 0
c Var 'aux234' direct represents '1' with '1604'
1602 -1603 1604 0
-1604 1603 0
-1604 -1602 0
c Var 'aux234' direct represents '2' with '-1603'
1602 1604 -1603 0
c Encoding variable: aux235 with domain: int(0..2) (representing constraint ((0<grid_00002_00003) + (0<grid_00001_00003)))
c Both direct and order encoding.
c Var 'aux235' order represents '0' with '1605'
c Var 'aux235' direct represents '0' with '1605'
c Var 'aux235' order represents '1' with '1606'
-1605 1606 0
c Var 'aux235' direct represents '1' with '1607'
1605 -1606 1607 0
-1607 1606 0
-1607 -1605 0
c Var 'aux235' direct represents '2' with '-1606'
1605 1607 -1606 0
c ((1<=(aux42 + aux44 + aux45))=tv=SATLiteral(480))
-480 -556 -570 -583 0
480 583 0
480 570 0
480 571 0
480 573 0
480 575 0
480 577 0
480 579 0
480 581 0
480 556 0
480 556 570 0
480 556 571 0
480 556 573 0
480 556 575 0
480 556 577 0
480 556 579 0
480 556 581 0
480 557 0
480 557 570 0
480 557 571 0
480 557 573 0
480 557 575 0
480 557 577 0
480 557 579 0
480 557 581 0
480 559 0
480 559 570 0
480 559 571 0
480 559 573 0
480 559 575 0
480 559 577 0
480 559 579 0
480 559 581 0
480 561 0
480 561 570 0
480 561 571 0
480 561 573 0
480 561 575 0
480 561 577 0
480 561 579 0
480 561 581 0
c ((1<=(aux58 + aux60 + aux61))=tv=SATLiteral(481))
-481 -644 -658 -671 0
481 671 0
481 658 0
481 659 0
481 661 0
481 663 0
481 665 0
481 667 0
481 669 0
481 644 0
481 644 658 0
481 644 659 0
481 644 661 0
481 644 663 0
481 644 665 0
481 644 667 0
481 644 669 0
481 645 0
481 645 658 0
481 645 659 0
481 645 661 0
481 645 663 0
481 645 665 0
481 645 667 0
481 645 669 0
481 647 0
481 647 658 0
481 647 659 0
481 647 661 0
481 647 663 0
481 647 665 0
481 647 667 0
481 647 669 0
481 649 0
481 649 658 0
481 649 659 0
481 649 661 0
481 649 663 0
481 649 665 0
481 649 667 0
481 649 669 0
c ((1<=(aux74 + aux76 + aux77))=tv=SATLiteral(482))
-482 -732 -746 -759 0
482 759 0
482 746 0
482 747 0
482 749 0
482 751 0
482 753 0
482 755 0
482 757 0
482 732 0
482 732 746 0
482 732 747 0
482 732 749 0
482 732 751 0
482 732 753 0
482 732 755 0
482 732 757 0
482 733 0
482 733 746 0
482 733 747 0
482 733 749 0
482 733 751 0
482 733 753 0
482 733 755 0
482 733 757 0
482 735 0
482 735 746 0
482 735 747 0
482 735 749 0
482 735 751 0
482 735 753 0
482 735 755 0
482 735 757 0
482 737 0
482 737 746 0
482 737 747 0
482 737 749 0
482 737 751 0
482 737 753 0
482 737 755 0
482 737 757 0
c ((1<=(aux90 + aux92 + aux93))=tv=SATLiteral(483))
-483 -820 -834 -847 0
483 847 0
483 834 0
483 835 0
483 837 0
483 839 0
483 841 0
483 843 0
483 845 0
483 820 0
483 820 834 0
483 820 835 0
483 820 837 0
483 820 839 0
483 820 841 0
483 820 843 0
483 820 845 0
483 821 0
483 821 834 0
483 821 835 0
483 821 837 0
483 821 839 0
483 821 841 0
483 821 843 0
483 821 845 0
483 823 0
483 823 834 0
483 823 835 0
483 823 837 0
483 823 839 0
483 823 841 0
483 823 843 0
483 823 845 0
483 825 0
483 825 834 0
483 825 835 0
483 825 837 0
483 825 839 0
483 825 841 0
483 825 843 0
483 825 845 0
c ((1<=(aux106 + aux108 + aux109))=tv=SATLiteral(484))
-484 -908 -922 -935 0
484 935 0
484 922 0
484 923 0
484 925 0
484 927 0
484 929 0
484 931 0
484 933 0
484 908 0
484 908 922 0
484 908 923 0
484 908 925 0
484 908 927 0
484 908 929 0
484 908 931 0
484 908 933 0
484 909 0
484 909 922 0
484 909 923 0
484 909 925 0
484 909 927 0
484 909 929 0
484 909 931 0
484 909 933 0
484 911 0
484 911 922 0
484 911 923 0
484 911 925 0
484 911 927 0
484 911 929 0
484 911 931 0
484 911 933 0
484 913 0
484 913 922 0
484 913 923 0
484 913 925 0
484 913 927 0
484 913 929 0
484 913 931 0
484 913 933 0
c ((1<=(aux122 + aux124 + aux125))=tv=SATLiteral(485))
-485 -996 -1010 -1023 0
485 1023 0
485 1010 0
485 1011 0
485 1013 0
485 1015 0
485 1017 0
485 1019 0
485 1021 0
485 996 0
485 996 1010 0
485 996 1011 0
485 996 1013 0
485 996 1015 0
485 996 1017 0
485 996 1019 0
485 996 1021 0
485 997 0
485 997 1010 0
485 997 1011 0
485 997 1013 0
485 997 1015 0
485 997 1017 0
485 997 1019 0
485 997 1021 0
485 999 0
485 999 1010 0
485 999 1011 0
485 999 1013 0
485 999 1015 0
485 999 1017 0
485 999 1019 0
485 999 1021 0
485 1001 0
485 1001 1010 0
485 1001 1011 0
485 1001 1013 0
485 1001 1015 0
485 1001 1017 0
485 1001 1019 0
485 1001 1021 0
c (((aux138 + aux140 + aux141)<=1)=tv=SATLiteral(486))
-486 1112 0
-486 1098 1111 0
-486 1099 0
-486 1101 0
-486 1103 0
-486 1105 0
-486 1107 0
-486 1109 0
-486 1084 1111 0
-486 1084 1098 0
-486 1084 1099 0
-486 1084 1101 0
-486 1084 1103 0
-486 1084 1105 0
-486 1084 1107 0
-486 1084 1109 0
-486 1085 0
-486 1085 1098 0
-486 1085 1099 0
-486 1085 1101 0
-486 1085 1103 0
-486 1085 1105 0
-486 1085 1107 0
-486 1085 1109 0
-486 1087 0
-486 1087 1098 0
-486 1087 1099 0
-486 1087 1101 0
-486 1087 1103 0
-486 1087 1105 0
-486 1087 1107 0
-486 1087 1109 0
-486 1089 0
-486 1089 1098 0
-486 1089 1099 0
-486 1089 1101 0
-486 1089 1103 0
-486 1089 1105 0
-486 1089 1107 0
-486 1089 1109 0
486 -1085 -1098 -1111 0
486 -1084 -1099 -1111 0
486 -1084 -1098 -1112 0
c (((aux154 + aux156 + aux157)<=1)=tv=SATLiteral(487))
-487 1200 0
-487 1186 1199 0
-487 1187 0
-487 1189 0
-487 1191 0
-487 1193 0
-487 1195 0
-487 1197 0
-487 1172 1199 0
-487 1172 1186 0
-487 1172 1187 0
-487 1172 1189 0
-487 1172 1191 0
-487 1172 1193 0
-487 1172 1195 0
-487 1172 1197 0
-487 1173 0
-487 1173 1186 0
-487 1173 1187 0
-487 1173 1189 0
-487 1173 1191 0
-487 1173 1193 0
-487 1173 1195 0
-487 1173 1197 0
-487 1175 0
-487 1175 1186 0
-487 1175 1187 0
-487 1175 1189 0
-487 1175 1191 0
-487 1175 1193 0
-487 1175 1195 0
-487 1175 1197 0
-487 1177 0
-487 1177 1186 0
-487 1177 1187 0
-487 1177 1189 0
-487 1177 1191 0
-487 1177 1193 0
-487 1177 1195 0
-487 1177 1197 0
487 -1173 -1186 -1199 0
487 -1172 -1187 -1199 0
487 -1172 -1186 -1200 0
c (((aux170 + aux172 + aux173)<=1)=tv=SATLiteral(488))
-488 1288 0
-488 1274 1287 0
-488 1275 0
-488 1277 0
-488 1279 0
-488 1281 0
-488 1283 0
-488 1285 0
-488 1260 1287 0
-488 1260 1274 0
-488 1260 1275 0
-488 1260 1277 0
-488 1260 1279 0
-488 1260 1281 0
-488 1260 1283 0
-488 1260 1285 0
-488 1261 0
-488 1261 1274 0
-488 1261 1275 0
-488 1261 1277 0
-488 1261 1279 0
-488 1261 1281 0
-488 1261 1283 0
-488 1261 1285 0
-488 1263 0
-488 1263 1274 0
-488 1263 1275 0
-488 1263 1277 0
-488 1263 1279 0
-488 1263 1281 0
-488 1263 1283 0
-488 1263 1285 0
-488 1265 0
-488 1265 1274 0
-488 1265 1275 0
-488 1265 1277 0
-488 1265 1279 0
-488 1265 1281 0
-488 1265 1283 0
-488 1265 1285 0
488 -1261 -1274 -1287 0
488 -1260 -1275 -1287 0
488 -1260 -1274 -1288 0
c (((aux186 + aux188 + aux189)<=1)=tv=SATLiteral(489))
-489 1376 0
-489 1362 1375 0
-489 1363 0
-489 1365 0
-489 1367 0
-489 1369 0
-489 1371 0
-489 1373 0
-489 1348 1375 0
-489 1348 1362 0
-489 1348 1363 0
-489 1348 1365 0
-489 1348 1367 0
-489 1348 1369 0
-489 1348 1371 0
-489 1348 1373 0
-489 1349 0
-489 1349 1362 0
-489 1349 1363 0
-489 1349 1365 0
-489 1349 1367 0
-489 1349 1369 0
-489 1349 1371 0
-489 1349 1373 0
-489 1351 0
-489 1351 1362 0
-489 1351 1363 0
-489 1351 1365 0
-489 1351 1367 0
-489 1351 1369 0
-489 1351 1371 0
-489 1351 1373 0
-489 1353 0
-489 1353 1362 0
-489 1353 1363 0
-489 1353 1365 0
-489 1353 1367 0
-489 1353 1369 0
-489 1353 1371 0
-489 1353 1373 0
489 -1349 -1362 -1375 0
489 -1348 -1363 -1375 0
489 -1348 -1362 -1376 0
c (((aux202 + aux204 + aux205)<=1)=tv=SATLiteral(490))
-490 1464 0
-490 1450 1463 0
-490 1451 0
-490 1453 0
-490 1455 0
-490 1457 0
-490 1459 0
-490 1461 0
-490 1436 1463 0
-490 1436 1450 0
-490 1436 1451 0
-490 1436 1453 0
-490 1436 1455 0
-490 1436 1457 0
-490 1436 1459 0
-490 1436 1461 0
-490 1437 0
-490 1437 1450 0
-490 1437 1451 0
-490 1437 1453 0
-490 1437 1455 0
-490 1437 1457 0
-490 1437 1459 0
-490 1437 1461 0
-490 1439 0
-490 1439 1450 0
-490 1439 1451 0
-490 1439 1453 0
-490 1439 1455 0
-490 1439 1457 0
-490 1439 1459 0
-490 1439 1461 0
-490 1441 0
-490 1441 1450 0
-490 1441 1451 0
-490 1441 1453 0
-490 1441 1455 0
-490 1441 1457 0
-490 1441 1459 0
-490 1441 1461 0
490 -1437 -1450 -1463 0
490 -1436 -1451 -1463 0
490 -1436 -1450 -1464 0
c (((aux218 + aux220 + aux221)<=1)=tv=SATLiteral(491))
-491 1552 0
-491 1538 1551 0
-491 1539 0
-491 1541 0
-491 1543 0
-491 1545 0
-491 1547 0
-491 1549 0
-491 1524 1551 0
-491 1524 1538 0
-491 1524 1539 0
-491 1524 1541 0
-491 1524 1543 0
-491 1524 1545 0
-491 1524 1547 0
-491 1524 1549 0
-491 1525 0
-491 1525 1538 0
-491 1525 1539 0
-491 1525 1541 0
-491 1525 1543 0
-491 1525 1545 0
-491 1525 1547 0
-491 1525 1549 0
-491 1527 0
-491 1527 1538 0
-491 1527 1539 0
-491 1527 1541 0
-491 1527 1543 0
-491 1527 1545 0
-491 1527 1547 0
-491 1527 1549 0
-491 1529 0
-491 1529 1538 0
-491 1529 1539 0
-491 1529 1541 0
-491 1529 1543 0
-491 1529 1545 0
-491 1529 1547 0
-491 1529 1549 0
491 -1525 -1538 -1551 0
491 -1524 -1539 -1551 0
491 -1524 -1538 -1552 0
c ((1<=(aux222 + SATLiteral(-59) + SATLiteral(-70)))=tv=SATLiteral(492))
-492 -59 -70 -1566 0
492 1566 0
492 70 0
492 59 0
492 59 70 0
c ((1<=(SATLiteral(-103) + SATLiteral(-114) + aux223))=tv=SATLiteral(493))
-493 -103 -114 -1569 0
493 1569 0
493 114 0
493 103 0
493 103 114 0
c ((1<=(aux224 + SATLiteral(-148) + SATLiteral(-160)))=tv=SATLiteral(494))
-494 -148 -160 -1572 0
494 1572 0
494 160 0
494 148 0
494 148 160 0
c ((2<=(SATLiteral(-183) + SATLiteral(-194) + SATLiteral(-206)))=tv=SATLiteral(495))
-495 -194 -206 0
-495 -183 -206 0
-495 -183 -194 0
495 194 206 0
495 183 206 0
495 183 194 0
c (((aux225 + SATLiteral(-59) + SATLiteral(-70))<=1)=tv=SATLiteral(496))
-496 1576 0
-496 70 1575 0
-496 59 1575 0
-496 59 70 0
496 -70 -1575 0
496 -59 -1575 0
496 -59 -70 -1576 0
c (((SATLiteral(-103) + SATLiteral(-114) + aux226)<=1)=tv=SATLiteral(497))
-497 1579 0
-497 114 1578 0
-497 103 1578 0
-497 103 114 0
497 -114 -1578 0
497 -103 -1578 0
497 -103 -114 -1579 0
c (((aux227 + SATLiteral(-148) + SATLiteral(-160))<=1)=tv=SATLiteral(498))
-498 1582 0
-498 160 1581 0
-498 148 1581 0
-498 148 160 0
498 -160 -1581 0
498 -148 -1581 0
498 -148 -160 -1582 0
c (((SATLiteral(-183) + SATLiteral(-194) + SATLiteral(-206))<=2)=tv=SATLiteral(499))
-499 183 194 206 0
499 -206 0
499 -194 0
499 -183 0
499 -183 -194 0
c ((1<=(SATLiteral(-92) + SATLiteral(-137) + SATLiteral(-2)))=tv=SATLiteral(500))
-500 -92 -137 -2 0
500 2 0
500 137 0
500 92 0
500 92 137 0
c ((1<=(aux228 + aux229 + SATLiteral(-183)))=tv=SATLiteral(501))
-501 -183 -1584 -1587 0
501 1587 0
501 1584 0
501 1585 0
501 183 0
501 183 1584 0
501 183 1585 0
c ((1<=(aux230 + SATLiteral(-194) + SATLiteral(-24)))=tv=SATLiteral(502))
-502 -194 -24 -1590 0
502 1590 0
502 24 0
502 194 0
502 194 24 0
c ((2<=(aux231 + SATLiteral(-160) + SATLiteral(-35)))=tv=SATLiteral(503))
-503 -35 -1593 0
-503 -160 -1593 0
-503 -160 -35 -1594 0
503 1594 0
503 35 1593 0
503 160 1593 0
503 160 35 0
c ((1<=(SATLiteral(-171) + SATLiteral(-206) + SATLiteral(-81)))=tv=SATLiteral(504))
-504 -171 -206 -81 0
504 81 0
504 206 0
504 171 0
504 171 206 0
c (((SATLiteral(-92) + SATLiteral(-137) + SATLiteral(-2))<=1)=tv=SATLiteral(505))
-505 137 2 0
-505 92 2 0
-505 92 137 0
505 -137 -2 0
505 -92 -2 0
505 -92 -137 0
c (((aux232 + aux233 + SATLiteral(-183))<=1)=tv=SATLiteral(506))
-506 1600 0
-506 1596 1599 0
-506 1597 0
-506 183 1599 0
-506 183 1596 0
-506 183 1597 0
506 -1596 -1599 0
506 -183 -1597 -1599 0
506 -183 -1596 -1600 0
c (((aux234 + SATLiteral(-194) + SATLiteral(-24))<=1)=tv=SATLiteral(507))
-507 1603 0
-507 24 1602 0
-507 194 1602 0
-507 194 24 0
507 -24 -1602 0
507 -194 -1602 0
507 -194 -24 -1603 0
c (((aux235 + SATLiteral(-160) + SATLiteral(-35))<=2)=tv=SATLiteral(508))
-508 35 1606 0
-508 160 1606 0
-508 160 35 1605 0
508 -1605 0
508 -35 -1606 0
508 -160 -1606 0
508 -160 -35 0
c (((SATLiteral(-171) + SATLiteral(-206) + SATLiteral(-81))<=1)=tv=SATLiteral(509))
-509 206 81 0
-509 171 81 0
-509 171 206 0
509 -206 -81 0
509 -171 -81 0
509 -171 -206 0
c SATLiteral(46)
46 0
c SATLiteral(47)
47 0
c SATLiteral(136)
136 0
c SATLiteral(159)
159 0
c SATLiteral(182)
182 0
c SATLiteral(205)
205 0
c (SATLiteral(-4) \/ SATLiteral(-474))
-4 -474 0
c (SATLiteral(-8) \/ SATLiteral(-476))
-8 -476 0
c (SATLiteral(-10) \/ SATLiteral(-477))
-10 -477 0
c (SATLiteral(-12) \/ SATLiteral(-478))
-12 -478 0
c (SATLiteral(11) \/ SATLiteral(-479))
11 -479 0
c (SATLiteral(-15) \/ SATLiteral(-474))
-15 -474 0
c (SATLiteral(-17) \/ SATLiteral(-475))
-17 -475 0
c (SATLiteral(-19) \/ SATLiteral(-476))
-19 -476 0
c (SATLiteral(-21) \/ SATLiteral(-477))
-21 -477 0
c (SATLiteral(-23) \/ SATLiteral(-478))
-23 -478 0
c (SATLiteral(22) \/ SATLiteral(-479))
22 -479 0
c (SATLiteral(-26) \/ SATLiteral(-474))
-26 -474 0
c (SATLiteral(-28) \/ SATLiteral(-475))
-28 -475 0
c (SATLiteral(-30) \/ SATLiteral(-476))
-30 -476 0
c (SATLiteral(-32) \/ SATLiteral(-477))
-32 -477 0
c (SATLiteral(-34) \/ SATLiteral(-478))
-34 -478 0
c (SATLiteral(33) \/ SATLiteral(-479))
33 -479 0
c (SATLiteral(-39) \/ SATLiteral(-475))
-39 -475 0
c (SATLiteral(-41) \/ SATLiteral(-476))
-41 -476 0
c (SATLiteral(-43) \/ SATLiteral(-477))
-43 -477 0
c (SATLiteral(-45) \/ SATLiteral(-478))
-45 -478 0
c (SATLiteral(44) \/ SATLiteral(-479))
44 -479 0
c (SATLiteral(-50) \/ SATLiteral(-474))
-50 -474 0
c (SATLiteral(-54) \/ SATLiteral(-476))
-54 -476 0
c (SATLiteral(-56) \/ SATLiteral(-477))
-56 -477 0
c (SATLiteral(-58) \/ SATLiteral(-478))
-58 -478 0
c (SATLiteral(57) \/ SATLiteral(-479))
57 -479 0
c (SATLiteral(-61) \/ SATLiteral(-474))
-61 -474 0
c (SATLiteral(-63) \/ SATLiteral(-475))
-63 -475 0
c (SATLiteral(-65) \/ SATLiteral(-476))
-65 -476 0
c (SATLiteral(-67) \/ SATLiteral(-477))
-67 -477 0
c (SATLiteral(-69) \/ SATLiteral(-478))
-69 -478 0
c (SATLiteral(68) \/ SATLiteral(-479))
68 -479 0
c (SATLiteral(-72) \/ SATLiteral(-474))
-72 -474 0
c (SATLiteral(-74) \/ SATLiteral(-475))
-74 -475 0
c (SATLiteral(-76) \/ SATLiteral(-476))
-76 -476 0
c (SATLiteral(-78) \/ SATLiteral(-477))
-78 -477 0
c (SATLiteral(-80) \/ SATLiteral(-478))
-80 -478 0
c (SATLiteral(79) \/ SATLiteral(-479))
79 -479 0
c (SATLiteral(-85) \/ SATLiteral(-475))
-85 -475 0
c (SATLiteral(-89) \/ SATLiteral(-477))
-89 -477 0
c (SATLiteral(-91) \/ SATLiteral(-478))
-91 -478 0
c (SATLiteral(90) \/ SATLiteral(-479))
90 -479 0
c (SATLiteral(-94) \/ SATLiteral(-474))
-94 -474 0
c (SATLiteral(-98) \/ SATLiteral(-476))
-98 -476 0
c (SATLiteral(-100) \/ SATLiteral(-477))
-100 -477 0
c (SATLiteral(-102) \/ SATLiteral(-478))
-102 -478 0
c (SATLiteral(101) \/ SATLiteral(-479))
101 -479 0
c (SATLiteral(-105) \/ SATLiteral(-474))
-105 -474 0
c (SATLiteral(-107) \/ SATLiteral(-475))
-107 -475 0
c (SATLiteral(-109) \/ SATLiteral(-476))
-109 -476 0
c (SATLiteral(-111) \/ SATLiteral(-477))
-111 -477 0
c (SATLiteral(-113) \/ SATLiteral(-478))
-113 -478 0
c (SATLiteral(112) \/ SATLiteral(-479))
112 -479 0
c (SATLiteral(-116) \/ SATLiteral(-474))
-116 -474 0
c (SATLiteral(-118) \/ SATLiteral(-475))
-118 -475 0
c (SATLiteral(-120) \/ SATLiteral(-476))
-120 -476 0
c (SATLiteral(-124) \/ SATLiteral(-478))
-124 -478 0
c (SATLiteral(123) \/ SATLiteral(-479))
123 -479 0
c (SATLiteral(-127) \/ SATLiteral(-474))
-127 -474 0
c (SATLiteral(-129) \/ SATLiteral(-475))
-129 -475 0
c (SATLiteral(-133) \/ SATLiteral(-477))
-133 -477 0
c (SATLiteral(-135) \/ SATLiteral(-478))
-135 -478 0
c (SATLiteral(134) \/ SATLiteral(-479))
134 -479 0
c (SATLiteral(-139) \/ SATLiteral(-474))
-139 -474 0
c (SATLiteral(-141) \/ SATLiteral(-475))
-141 -475 0
c (SATLiteral(-143) \/ SATLiteral(-476))
-143 -476 0
c (SATLiteral(-145) \/ SATLiteral(-477))
-145 -477 0
c (SATLiteral(146) \/ SATLiteral(-479))
146 -479 0
c (SATLiteral(-150) \/ SATLiteral(-474))
-150 -474 0
c (SATLiteral(-152) \/ SATLiteral(-475))
-152 -475 0
c (SATLiteral(-154) \/ SATLiteral(-476))
-154 -476 0
c (SATLiteral(-158) \/ SATLiteral(-478))
-158 -478 0
c (SATLiteral(157) \/ SATLiteral(-479))
157 -479 0
c (SATLiteral(-162) \/ SATLiteral(-474))
-162 -474 0
c (SATLiteral(-164) \/ SATLiteral(-475))
-164 -475 0
c (SATLiteral(-166) \/ SATLiteral(-476))
-166 -476 0
c (SATLiteral(-170) \/ SATLiteral(-478))
-170 -478 0
c (SATLiteral(-173) \/ SATLiteral(-474))
-173 -474 0
c (SATLiteral(-175) \/ SATLiteral(-475))
-175 -475 0
c (SATLiteral(-179) \/ SATLiteral(-477))
-179 -477 0
c (SATLiteral(-181) \/ SATLiteral(-478))
-181 -478 0
c (SATLiteral(180) \/ SATLiteral(-479))
180 -479 0
c (SATLiteral(-185) \/ SATLiteral(-474))
-185 -474 0
c (SATLiteral(-187) \/ SATLiteral(-475))
-187 -475 0
c (SATLiteral(-189) \/ SATLiteral(-476))
-189 -476 0
c (SATLiteral(-191) \/ SATLiteral(-477))
-191 -477 0
c (SATLiteral(192) \/ SATLiteral(-479))
192 -479 0
c (SATLiteral(-196) \/ SATLiteral(-474))
-196 -474 0
c (SATLiteral(-198) \/ SATLiteral(-475))
-198 -475 0
c (SATLiteral(-200) \/ SATLiteral(-476))
-200 -476 0
c (SATLiteral(-204) \/ SATLiteral(-478))
-204 -478 0
c (SATLiteral(-208) \/ SATLiteral(-474))
-208 -474 0
c (SATLiteral(-210) \/ SATLiteral(-475))
-210 -475 0
c (SATLiteral(-212) \/ SATLiteral(-476))
-212 -476 0
c (SATLiteral(-214) \/ SATLiteral(-477))
-214 -477 0
c (SATLiteral(-216) \/ SATLiteral(-478))
-216 -478 0
c (SATLiteral(462) -> SATLiteral(480))
-462 480 0
c (SATLiteral(463) -> SATLiteral(481))
-463 481 0
c (SATLiteral(464) -> SATLiteral(482))
-464 482 0
c (SATLiteral(465) -> SATLiteral(483))
-465 483 0
c (SATLiteral(466) -> SATLiteral(484))
-466 484 0
c (SATLiteral(467) -> SATLiteral(485))
-467 485 0
c (SATLiteral(468) -> SATLiteral(486))
-468 486 0
c (SATLiteral(469) -> SATLiteral(487))
-469 487 0
c (SATLiteral(470) -> SATLiteral(488))
-470 488 0
c (SATLiteral(471) -> SATLiteral(489))
-471 489 0
c (SATLiteral(472) -> SATLiteral(490))
-472 490 0
c (SATLiteral(473) -> SATLiteral(491))
-473 491 0
c (SATLiteral(48) \/ SATLiteral(2) \/ SATLiteral(-225))
48 2 -225 0
c (SATLiteral(-229) \/ SATLiteral(2) \/ SATLiteral(13))
-229 2 13 0
c (SATLiteral(48) \/ SATLiteral(13) \/ SATLiteral(-233))
48 13 -233 0
c (SATLiteral(59) \/ SATLiteral(13) \/ SATLiteral(-234))
59 13 -234 0
c (SATLiteral(-238) \/ SATLiteral(13) \/ SATLiteral(24))
-238 13 24 0
c (SATLiteral(48) \/ SATLiteral(-241) \/ SATLiteral(24))
48 -241 24 0
c (SATLiteral(59) \/ SATLiteral(24) \/ SATLiteral(-242))
59 24 -242 0
c (SATLiteral(70) \/ SATLiteral(24) \/ SATLiteral(-243))
70 24 -243 0
c (SATLiteral(-247) \/ SATLiteral(24) \/ SATLiteral(35))
-247 24 35 0
c (SATLiteral(59) \/ SATLiteral(-250) \/ SATLiteral(35))
59 -250 35 0
c (SATLiteral(70) \/ SATLiteral(-251) \/ SATLiteral(35))
70 -251 35 0
c (SATLiteral(81) \/ SATLiteral(-252) \/ SATLiteral(35))
81 -252 35 0
c (SATLiteral(48) \/ SATLiteral(92) \/ SATLiteral(-277))
48 92 -277 0
c (SATLiteral(48) \/ SATLiteral(103) \/ SATLiteral(-278))
48 103 -278 0
c (SATLiteral(48) \/ SATLiteral(114) \/ SATLiteral(-279))
48 114 -279 0
c (SATLiteral(48) \/ SATLiteral(59) \/ SATLiteral(-283))
48 59 -283 0
c (SATLiteral(59) \/ SATLiteral(103) \/ SATLiteral(-286))
59 103 -286 0
c (SATLiteral(59) \/ SATLiteral(-287) \/ SATLiteral(114))
59 -287 114 0
c (SATLiteral(59) \/ SATLiteral(-288) \/ SATLiteral(125))
59 -288 125 0
c (SATLiteral(-292) \/ SATLiteral(59) \/ SATLiteral(70))
-292 59 70 0
c (SATLiteral(70) \/ SATLiteral(-295) \/ SATLiteral(114))
70 -295 114 0
c (SATLiteral(70) \/ SATLiteral(-296) \/ SATLiteral(125))
70 -296 125 0
c (SATLiteral(70) \/ SATLiteral(81) \/ SATLiteral(-301))
70 81 -301 0
c (SATLiteral(81) \/ SATLiteral(-304) \/ SATLiteral(125))
81 -304 125 0
c (SATLiteral(-314) \/ SATLiteral(92) \/ SATLiteral(137))
-314 92 137 0
c (SATLiteral(-315) \/ SATLiteral(92) \/ SATLiteral(148))
-315 92 148 0
c (SATLiteral(-319) \/ SATLiteral(92) \/ SATLiteral(103))
-319 92 103 0
c (SATLiteral(103) \/ SATLiteral(-322) \/ SATLiteral(137))
103 -322 137 0
c (SATLiteral(-323) \/ SATLiteral(103) \/ SATLiteral(148))
-323 103 148 0
c (SATLiteral(-328) \/ SATLiteral(103) \/ SATLiteral(114))
-328 103 114 0
c (SATLiteral(-331) \/ SATLiteral(114) \/ SATLiteral(148))
-331 114 148 0
c (SATLiteral(-333) \/ SATLiteral(114) \/ SATLiteral(160))
-333 114 160 0
c (SATLiteral(114) \/ SATLiteral(125) \/ SATLiteral(-337))
114 125 -337 0
c (SATLiteral(-341) \/ SATLiteral(125) \/ SATLiteral(160))
-341 125 160 0
c (SATLiteral(-342) \/ SATLiteral(125) \/ SATLiteral(171))
-342 125 171 0
c (SATLiteral(-360) \/ SATLiteral(183) \/ SATLiteral(137))
-360 183 137 0
c (SATLiteral(-364) \/ SATLiteral(137) \/ SATLiteral(148))
-364 137 148 0
c (SATLiteral(-368) \/ SATLiteral(183) \/ SATLiteral(148))
-368 183 148 0
c (SATLiteral(-369) \/ SATLiteral(194) \/ SATLiteral(148))
-369 194 148 0
c (SATLiteral(-385) \/ SATLiteral(194) \/ SATLiteral(160))
-385 194 160 0
c (SATLiteral(-387) \/ SATLiteral(206) \/ SATLiteral(160))
-387 206 160 0
c (SATLiteral(-391) \/ SATLiteral(160) \/ SATLiteral(171))
-391 160 171 0
c (SATLiteral(206) \/ SATLiteral(171) \/ SATLiteral(-395))
206 171 -395 0
c (SATLiteral(183) \/ SATLiteral(194) \/ SATLiteral(-418))
183 194 -418 0
c (SATLiteral(443) -> SATLiteral(492))
-443 492 0
c (SATLiteral(444) -> SATLiteral(493))
-444 493 0
c (SATLiteral(445) -> SATLiteral(494))
-445 494 0
c (SATLiteral(446) -> SATLiteral(495))
-446 495 0
c (SATLiteral(448) -> SATLiteral(496))
-448 496 0
c (SATLiteral(449) -> SATLiteral(497))
-449 497 0
c (SATLiteral(450) -> SATLiteral(498))
-450 498 0
c (SATLiteral(451) -> SATLiteral(499))
-451 499 0
c (SATLiteral(452) -> SATLiteral(500))
-452 500 0
c (SATLiteral(453) -> SATLiteral(501))
-453 501 0
c (SATLiteral(454) -> SATLiteral(502))
-454 502 0
c (SATLiteral(455) -> SATLiteral(503))
-455 503 0
c (SATLiteral(456) -> SATLiteral(504))
-456 504 0
c (SATLiteral(457) -> SATLiteral(505))
-457 505 0
c (SATLiteral(458) -> SATLiteral(506))
-458 506 0
c (SATLiteral(459) -> SATLiteral(507))
-459 507 0
c (SATLiteral(460) -> SATLiteral(508))
-460 508 0
c (SATLiteral(461) -> SATLiteral(509))
-461 509 0
c (( - aux222 + SATLiteral(-48) + SATLiteral(-81))<=0)
81 -1566 0
48 -1566 0
48 81 -1567 0
c (0<=( - aux222 + SATLiteral(-48) + SATLiteral(-81)))
-81 1567 0
-48 1567 0
-48 -81 1566 0
c ((SATLiteral(-92) + SATLiteral(-125) - aux223)<=0)
125 -1569 0
92 -1569 0
92 125 -1570 0
c (0<=(SATLiteral(-92) + SATLiteral(-125) - aux223))
-125 1570 0
-92 1570 0
-92 -125 1569 0
c (( - aux224 + SATLiteral(-137) + SATLiteral(-171))<=0)
171 -1572 0
137 -1572 0
137 171 -1573 0
c (0<=( - aux224 + SATLiteral(-137) + SATLiteral(-171)))
-171 1573 0
-137 1573 0
-137 -171 1572 0
c (( - aux225 + SATLiteral(-48) + SATLiteral(-81))<=0)
81 -1575 0
48 -1575 0
48 81 -1576 0
c (0<=( - aux225 + SATLiteral(-48) + SATLiteral(-81)))
-81 1576 0
-48 1576 0
-48 -81 1575 0
c ((SATLiteral(-92) + SATLiteral(-125) - aux226)<=0)
125 -1578 0
92 -1578 0
92 125 -1579 0
c (0<=(SATLiteral(-92) + SATLiteral(-125) - aux226))
-125 1579 0
-92 1579 0
-92 -125 1578 0
c (( - aux227 + SATLiteral(-137) + SATLiteral(-171))<=0)
171 -1581 0
137 -1581 0
137 171 -1582 0
c (0<=( - aux227 + SATLiteral(-137) + SATLiteral(-171)))
-171 1582 0
-137 1582 0
-137 -171 1581 0
c ((SATLiteral(-114) - aux230 + SATLiteral(-59))<=0)
59 -1590 0
114 -1590 0
114 59 -1591 0
c (0<=(SATLiteral(-114) - aux230 + SATLiteral(-59)))
-59 1591 0
-114 1591 0
-114 -59 1590 0
c ((SATLiteral(-125) - aux231 + SATLiteral(-70))<=0)
70 -1593 0
125 -1593 0
125 70 -1594 0
c (0<=(SATLiteral(-125) - aux231 + SATLiteral(-70)))
-70 1594 0
-125 1594 0
-125 -70 1593 0
c ((SATLiteral(-114) - aux234 + SATLiteral(-59))<=0)
59 -1602 0
114 -1602 0
114 59 -1603 0
c (0<=(SATLiteral(-114) - aux234 + SATLiteral(-59)))
-59 1603 0
-114 1603 0
-114 -59 1602 0
c ((SATLiteral(-125) - aux235 + SATLiteral(-70))<=0)
70 -1605 0
125 -1605 0
125 70 -1606 0
c (0<=(SATLiteral(-125) - aux235 + SATLiteral(-70)))
-70 1606 0
-125 1606 0
-125 -70 1605 0
c ((SATLiteral(139) - aux30 + SATLiteral(37))<=0)
-37 -510 0
-139 -510 0
-139 -37 -511 0
c (0<=(SATLiteral(139) - aux30 + SATLiteral(37)))
37 511 0
139 511 0
139 37 510 0
c ((SATLiteral(150) - aux31 + SATLiteral(26))<=0)
-26 -513 0
-150 -513 0
-150 -26 -514 0
c (0<=(SATLiteral(150) - aux31 + SATLiteral(26)))
26 514 0
150 514 0
150 26 513 0
c ((SATLiteral(173) - aux32 + SATLiteral(15))<=0)
-15 -516 0
-173 -516 0
-173 -15 -517 0
c (0<=(SATLiteral(173) - aux32 + SATLiteral(15)))
15 517 0
173 517 0
173 15 516 0
c ((SATLiteral(83) - aux33 + SATLiteral(4))<=0)
-4 -519 0
-83 -519 0
-83 -4 -520 0
c (0<=(SATLiteral(83) - aux33 + SATLiteral(4)))
4 520 0
83 520 0
83 4 519 0
c ((SATLiteral(94) - aux34 + SATLiteral(208))<=0)
-208 -522 0
-94 -522 0
-94 -208 -523 0
c (0<=(SATLiteral(94) - aux34 + SATLiteral(208)))
208 523 0
94 523 0
94 208 522 0
c ((SATLiteral(50) - aux35 + SATLiteral(196))<=0)
-196 -525 0
-50 -525 0
-50 -196 -526 0
c (0<=(SATLiteral(50) - aux35 + SATLiteral(196)))
196 526 0
50 526 0
50 196 525 0
c ((SATLiteral(105) - aux36 + SATLiteral(185))<=0)
-185 -528 0
-105 -528 0
-105 -185 -529 0
c (0<=(SATLiteral(105) - aux36 + SATLiteral(185)))
185 529 0
105 529 0
105 185 528 0
c ((SATLiteral(116) + SATLiteral(127) - aux37)<=0)
-127 -531 0
-116 -531 0
-116 -127 -532 0
c (0<=(SATLiteral(116) + SATLiteral(127) - aux37))
127 532 0
116 532 0
116 127 531 0
c ((SATLiteral(162) + SATLiteral(61) - aux38)<=0)
-61 -534 0
-162 -534 0
-162 -61 -535 0
c (0<=(SATLiteral(162) + SATLiteral(61) - aux38))
61 535 0
162 535 0
162 61 534 0
c ((SATLiteral(72) + aux38 - aux39)<=0)
534 -537 0
535 -538 0
-72 -537 0
-72 534 -538 0
-72 535 -540 0
c (0<=(SATLiteral(72) + aux38 - aux39))
-535 540 0
-534 538 0
72 540 0
72 -535 538 0
72 -534 537 0
c ((aux30 + aux36 - aux40)<=0)
528 -542 0
529 -543 0
510 -542 0
510 528 -543 0
510 529 -545 0
511 -543 0
511 528 -545 0
511 529 -547 0
c (0<=(aux30 + aux36 - aux40))
-529 547 0
-528 545 0
-511 547 0
-511 -529 545 0
-511 -528 543 0
-510 545 0
-510 -529 543 0
-510 -528 542 0
c ((aux31 + aux32 - aux41)<=0)
516 -549 0
517 -550 0
513 -549 0
513 516 -550 0
513 517 -552 0
514 -550 0
514 516 -552 0
514 517 -554 0
c (0<=(aux31 + aux32 - aux41))
-517 554 0
-516 552 0
-514 554 0
-514 -517 552 0
-514 -516 550 0
-513 552 0
-513 -517 550 0
-513 -516 549 0
c ((aux35 + aux37 - aux42)<=0)
531 -556 0
532 -557 0
525 -556 0
525 531 -557 0
525 532 -559 0
526 -557 0
526 531 -559 0
526 532 -561 0
c (0<=(aux35 + aux37 - aux42))
-532 561 0
-531 559 0
-526 561 0
-526 -532 559 0
-526 -531 557 0
-525 559 0
-525 -532 557 0
-525 -531 556 0
c ((aux33 + aux34 - aux43)<=0)
522 -563 0
523 -564 0
519 -563 0
519 522 -564 0
519 523 -566 0
520 -564 0
520 522 -566 0
520 523 -568 0
c (0<=(aux33 + aux34 - aux43))
-523 568 0
-522 566 0
-520 568 0
-520 -523 566 0
-520 -522 564 0
-519 566 0
-519 -523 564 0
-519 -522 563 0
c ((aux39 + aux43 - aux44)<=0)
563 -570 0
564 -571 0
566 -573 0
568 -575 0
537 -570 0
537 563 -571 0
537 564 -573 0
537 566 -575 0
537 568 -577 0
538 -571 0
538 563 -573 0
538 564 -575 0
538 566 -577 0
538 568 -579 0
540 -573 0
540 563 -575 0
540 564 -577 0
540 566 -579 0
540 568 -581 0
c (0<=(aux39 + aux43 - aux44))
-568 581 0
-566 579 0
-564 577 0
-563 575 0
-540 581 0
-540 -568 579 0
-540 -566 577 0
-540 -564 575 0
-540 -563 573 0
-538 579 0
-538 -568 577 0
-538 -566 575 0
-538 -564 573 0
-538 -563 571 0
-537 577 0
-537 -568 575 0
-537 -566 573 0
-537 -564 571 0
-537 -563 570 0
c ((aux40 + aux41 - aux45)<=0)
549 -583 0
550 -584 0
552 -586 0
554 -588 0
542 -583 0
542 549 -584 0
542 550 -586 0
542 552 -588 0
542 554 -590 0
543 -584 0
543 549 -586 0
543 550 -588 0
543 552 -590 0
543 554 -592 0
545 -586 0
545 549 -588 0
545 550 -590 0
545 552 -592 0
545 554 -594 0
547 -588 0
547 549 -590 0
547 550 -592 0
547 552 -594 0
547 554 -596 0
c (0<=(aux40 + aux41 - aux45))
-554 596 0
-552 594 0
-550 592 0
-549 590 0
-547 596 0
-547 -554 594 0
-547 -552 592 0
-547 -550 590 0
-547 -549 588 0
-545 594 0
-545 -554 592 0
-545 -552 590 0
-545 -550 588 0
-545 -549 586 0
-543 592 0
-543 -554 590 0
-543 -552 588 0
-543 -550 586 0
-543 -549 584 0
-542 590 0
-542 -554 588 0
-542 -552 586 0
-542 -550 584 0
-542 -549 583 0
c ((SATLiteral(141) - aux46 + SATLiteral(39))<=0)
-39 -598 0
-141 -598 0
-141 -39 -599 0
c (0<=(SATLiteral(141) - aux46 + SATLiteral(39)))
39 599 0
141 599 0
141 39 598 0
c ((SATLiteral(152) - aux47 + SATLiteral(28))<=0)
-28 -601 0
-152 -601 0
-152 -28 -602 0
c (0<=(SATLiteral(152) - aux47 + SATLiteral(28)))
28 602 0
152 602 0
152 28 601 0
c ((SATLiteral(175) - aux48 + SATLiteral(17))<=0)
-17 -604 0
-175 -604 0
-175 -17 -605 0
c (0<=(SATLiteral(175) - aux48 + SATLiteral(17)))
17 605 0
175 605 0
175 17 604 0
c ((SATLiteral(85) - aux49 + SATLiteral(6))<=0)
-6 -607 0
-85 -607 0
-85 -6 -608 0
c (0<=(SATLiteral(85) - aux49 + SATLiteral(6)))
6 608 0
85 608 0
85 6 607 0
c ((SATLiteral(96) - aux50 + SATLiteral(210))<=0)
-210 -610 0
-96 -610 0
-96 -210 -611 0
c (0<=(SATLiteral(96) - aux50 + SATLiteral(210)))
210 611 0
96 611 0
96 210 610 0
c ((SATLiteral(52) - aux51 + SATLiteral(198))<=0)
-198 -613 0
-52 -613 0
-52 -198 -614 0
c (0<=(SATLiteral(52) - aux51 + SATLiteral(198)))
198 614 0
52 614 0
52 198 613 0
c ((SATLiteral(107) - aux52 + SATLiteral(187))<=0)
-187 -616 0
-107 -616 0
-107 -187 -617 0
c (0<=(SATLiteral(107) - aux52 + SATLiteral(187)))
187 617 0
107 617 0
107 187 616 0
c ((SATLiteral(118) + SATLiteral(129) - aux53)<=0)
-129 -619 0
-118 -619 0
-118 -129 -620 0
c (0<=(SATLiteral(118) + SATLiteral(129) - aux53))
129 620 0
118 620 0
118 129 619 0
c ((SATLiteral(164) + SATLiteral(63) - aux54)<=0)
-63 -622 0
-164 -622 0
-164 -63 -623 0
c (0<=(SATLiteral(164) + SATLiteral(63) - aux54))
63 623 0
164 623 0
164 63 622 0
c ((SATLiteral(74) + aux54 - aux55)<=0)
622 -625 0
623 -626 0
-74 -625 0
-74 622 -626 0
-74 623 -628 0
c (0<=(SATLiteral(74) + aux54 - aux55))
-623 628 0
-622 626 0
74 628 0
74 -623 626 0
74 -622 625 0
c ((aux46 + aux52 - aux56)<=0)
616 -630 0
617 -631 0
598 -630 0
598 616 -631 0
598 617 -633 0
599 -631 0
599 616 -633 0
599 617 -635 0
c (0<=(aux46 + aux52 - aux56))
-617 635 0
-616 633 0
-599 635 0
-599 -617 633 0
-599 -616 631 0
-598 633 0
-598 -617 631 0
-598 -616 630 0
c ((aux47 + aux48 - aux57)<=0)
604 -637 0
605 -638 0
601 -637 0
601 604 -638 0
601 605 -640 0
602 -638 0
602 604 -640 0
602 605 -642 0
c (0<=(aux47 + aux48 - aux57))
-605 642 0
-604 640 0
-602 642 0
-602 -605 640 0
-602 -604 638 0
-601 640 0
-601 -605 638 0
-601 -604 637 0
c ((aux51 + aux53 - aux58)<=0)
619 -644 0
620 -645 0
613 -644 0
613 619 -645 0
613 620 -647 0
614 -645 0
614 619 -647 0
614 620 -649 0
c (0<=(aux51 + aux53 - aux58))
-620 649 0
-619 647 0
-614 649 0
-614 -620 647 0
-614 -619 645 0
-613 647 0
-613 -620 645 0
-613 -619 644 0
c ((aux49 + aux50 - aux59)<=0)
610 -651 0
611 -652 0
607 -651 0
607 610 -652 0
607 611 -654 0
608 -652 0
608 610 -654 0
608 611 -656 0
c (0<=(aux49 + aux50 - aux59))
-611 656 0
-610 654 0
-608 656 0
-608 -611 654 0
-608 -610 652 0
-607 654 0
-607 -611 652 0
-607 -610 651 0
c ((aux55 + aux59 - aux60)<=0)
651 -658 0
652 -659 0
654 -661 0
656 -663 0
625 -658 0
625 651 -659 0
625 652 -661 0
625 654 -663 0
625 656 -665 0
626 -659 0
626 651 -661 0
626 652 -663 0
626 654 -665 0
626 656 -667 0
628 -661 0
628 651 -663 0
628 652 -665 0
628 654 -667 0
628 656 -669 0
c (0<=(aux55 + aux59 - aux60))
-656 669 0
-654 667 0
-652 665 0
-651 663 0
-628 669 0
-628 -656 667 0
-628 -654 665 0
-628 -652 663 0
-628 -651 661 0
-626 667 0
-626 -656 665 0
-626 -654 663 0
-626 -652 661 0
-626 -651 659 0
-625 665 0
-625 -656 663 0
-625 -654 661 0
-625 -652 659 0
-625 -651 658 0
c ((aux56 + aux57 - aux61)<=0)
637 -671 0
638 -672 0
640 -674 0
642 -676 0
630 -671 0
630 637 -672 0
630 638 -674 0
630 640 -676 0
630 642 -678 0
631 -672 0
631 637 -674 0
631 638 -676 0
631 640 -678 0
631 642 -680 0
633 -674 0
633 637 -676 0
633 638 -678 0
633 640 -680 0
633 642 -682 0
635 -676 0
635 637 -678 0
635 638 -680 0
635 640 -682 0
635 642 -684 0
c (0<=(aux56 + aux57 - aux61))
-642 684 0
-640 682 0
-638 680 0
-637 678 0
-635 684 0
-635 -642 682 0
-635 -640 680 0
-635 -638 678 0
-635 -637 676 0
-633 682 0
-633 -642 680 0
-633 -640 678 0
-633 -638 676 0
-633 -637 674 0
-631 680 0
-631 -642 678 0
-631 -640 676 0
-631 -638 674 0
-631 -637 672 0
-630 678 0
-630 -642 676 0
-630 -640 674 0
-630 -638 672 0
-630 -637 671 0
c ((SATLiteral(143) - aux62 + SATLiteral(41))<=0)
-41 -686 0
-143 -686 0
-143 -41 -687 0
c (0<=(SATLiteral(143) - aux62 + SATLiteral(41)))
41 687 0
143 687 0
143 41 686 0
c ((SATLiteral(154) - aux63 + SATLiteral(30))<=0)
-30 -689 0
-154 -689 0
-154 -30 -690 0
c (0<=(SATLiteral(154) - aux63 + SATLiteral(30)))
30 690 0
154 690 0
154 30 689 0
c ((SATLiteral(177) - aux64 + SATLiteral(19))<=0)
-19 -692 0
-177 -692 0
-177 -19 -693 0
c (0<=(SATLiteral(177) - aux64 + SATLiteral(19)))
19 693 0
177 693 0
177 19 692 0
c ((SATLiteral(87) - aux65 + SATLiteral(8))<=0)
-8 -695 0
-87 -695 0
-87 -8 -696 0
c (0<=(SATLiteral(87) - aux65 + SATLiteral(8)))
8 696 0
87 696 0
87 8 695 0
c ((SATLiteral(98) - aux66 + SATLiteral(212))<=0)
-212 -698 0
-98 -698 0
-98 -212 -699 0
c (0<=(SATLiteral(98) - aux66 + SATLiteral(212)))
212 699 0
98 699 0
98 212 698 0
c ((SATLiteral(54) - aux67 + SATLiteral(200))<=0)
-200 -701 0
-54 -701 0
-54 -200 -702 0
c (0<=(SATLiteral(54) - aux67 + SATLiteral(200)))
200 702 0
54 702 0
54 200 701 0
c ((SATLiteral(109) - aux68 + SATLiteral(189))<=0)
-189 -704 0
-109 -704 0
-109 -189 -705 0
c (0<=(SATLiteral(109) - aux68 + SATLiteral(189)))
189 705 0
109 705 0
109 189 704 0
c ((SATLiteral(120) + SATLiteral(131) - aux69)<=0)
-131 -707 0
-120 -707 0
-120 -131 -708 0
c (0<=(SATLiteral(120) + SATLiteral(131) - aux69))
131 708 0
120 708 0
120 131 707 0
c ((SATLiteral(166) + SATLiteral(65) - aux70)<=0)
-65 -710 0
-166 -710 0
-166 -65 -711 0
c (0<=(SATLiteral(166) + SATLiteral(65) - aux70))
65 711 0
166 711 0
166 65 710 0
c ((SATLiteral(76) + aux70 - aux71)<=0)
710 -713 0
711 -714 0
-76 -713 0
-76 710 -714 0
-76 711 -716 0
c (0<=(SATLiteral(76) + aux70 - aux71))
-711 716 0
-710 714 0
76 716 0
76 -711 714 0
76 -710 713 0
c ((aux62 + aux68 - aux72)<=0)
704 -718 0
705 -719 0
686 -718 0
686 704 -719 0
686 705 -721 0
687 -719 0
687 704 -721 0
687 705 -723 0
c (0<=(aux62 + aux68 - aux72))
-705 723 0
-704 721 0
-687 723 0
-687 -705 721 0
-687 -704 719 0
-686 721 0
-686 -705 719 0
-686 -704 718 0
c ((aux63 + aux64 - aux73)<=0)
692 -725 0
693 -726 0
689 -725 0
689 692 -726 0
689 693 -728 0
690 -726 0
690 692 -728 0
690 693 -730 0
c (0<=(aux63 + aux64 - aux73))
-693 730 0
-692 728 0
-690 730 0
-690 -693 728 0
-690 -692 726 0
-689 728 0
-689 -693 726 0
-689 -692 725 0
c ((aux67 + aux69 - aux74)<=0)
707 -732 0
708 -733 0
701 -732 0
701 707 -733 0
701 708 -735 0
702 -733 0
702 707 -735 0
702 708 -737 0
c (0<=(aux67 + aux69 - aux74))
-708 737 0
-707 735 0
-702 737 0
-702 -708 735 0
-702 -707 733 0
-701 735 0
-701 -708 733 0
-701 -707 732 0
c ((aux65 + aux66 - aux75)<=0)
698 -739 0
699 -740 0
695 -739 0
695 698 -740 0
695 699 -742 0
696 -740 0
696 698 -742 0
696 699 -744 0
c (0<=(aux65 + aux66 - aux75))
-699 744 0
-698 742 0
-696 744 0
-696 -699 742 0
-696 -698 740 0
-695 742 0
-695 -699 740 0
-695 -698 739 0
c ((aux71 + aux75 - aux76)<=0)
739 -746 0
740 -747 0
742 -749 0
744 -751 0
713 -746 0
713 739 -747 0
713 740 -749 0
713 742 -751 0
713 744 -753 0
714 -747 0
714 739 -749 0
714 740 -751 0
714 742 -753 0
714 744 -755 0
716 -749 0
716 739 -751 0
716 740 -753 0
716 742 -755 0
716 744 -757 0
c (0<=(aux71 + aux75 - aux76))
-744 757 0
-742 755 0
-740 753 0
-739 751 0
-716 757 0
-716 -744 755 0
-716 -742 753 0
-716 -740 751 0
-716 -739 749 0
-714 755 0
-714 -744 753 0
-714 -742 751 0
-714 -740 749 0
-714 -739 747 0
-713 753 0
-713 -744 751 0
-713 -742 749 0
-713 -740 747 0
-713 -739 746 0
c ((aux72 + aux73 - aux77)<=0)
725 -759 0
726 -760 0
728 -762 0
730 -764 0
718 -759 0
718 725 -760 0
718 726 -762 0
718 728 -764 0
718 730 -766 0
719 -760 0
719 725 -762 0
719 726 -764 0
719 728 -766 0
719 730 -768 0
721 -762 0
721 725 -764 0
721 726 -766 0
721 728 -768 0
721 730 -770 0
723 -764 0
723 725 -766 0
723 726 -768 0
723 728 -770 0
723 730 -772 0
c (0<=(aux72 + aux73 - aux77))
-730 772 0
-728 770 0
-726 768 0
-725 766 0
-723 772 0
-723 -730 770 0
-723 -728 768 0
-723 -726 766 0
-723 -725 764 0
-721 770 0
-721 -730 768 0
-721 -728 766 0
-721 -726 764 0
-721 -725 762 0
-719 768 0
-719 -730 766 0
-719 -728 764 0
-719 -726 762 0
-719 -725 760 0
-718 766 0
-718 -730 764 0
-718 -728 762 0
-718 -726 760 0
-718 -725 759 0
c ((SATLiteral(145) - aux78 + SATLiteral(43))<=0)
-43 -774 0
-145 -774 0
-145 -43 -775 0
c (0<=(SATLiteral(145) - aux78 + SATLiteral(43)))
43 775 0
145 775 0
145 43 774 0
c ((SATLiteral(156) - aux79 + SATLiteral(32))<=0)
-32 -777 0
-156 -777 0
-156 -32 -778 0
c (0<=(SATLiteral(156) - aux79 + SATLiteral(32)))
32 778 0
156 778 0
156 32 777 0
c ((SATLiteral(179) - aux80 + SATLiteral(21))<=0)
-21 -780 0
-179 -780 0
-179 -21 -781 0
c (0<=(SATLiteral(179) - aux80 + SATLiteral(21)))
21 781 0
179 781 0
179 21 780 0
c ((SATLiteral(89) - aux81 + SATLiteral(10))<=0)
-10 -783 0
-89 -783 0
-89 -10 -784 0
c (0<=(SATLiteral(89) - aux81 + SATLiteral(10)))
10 784 0
89 784 0
89 10 783 0
c ((SATLiteral(100) - aux82 + SATLiteral(214))<=0)
-214 -786 0
-100 -786 0
-100 -214 -787 0
c (0<=(SATLiteral(100) - aux82 + SATLiteral(214)))
214 787 0
100 787 0
100 214 786 0
c ((SATLiteral(56) - aux83 + SATLiteral(202))<=0)
-202 -789 0
-56 -789 0
-56 -202 -790 0
c (0<=(SATLiteral(56) - aux83 + SATLiteral(202)))
202 790 0
56 790 0
56 202 789 0
c ((SATLiteral(111) - aux84 + SATLiteral(191))<=0)
-191 -792 0
-111 -792 0
-111 -191 -793 0
c (0<=(SATLiteral(111) - aux84 + SATLiteral(191)))
191 793 0
111 793 0
111 191 792 0
c ((SATLiteral(122) + SATLiteral(133) - aux85)<=0)
-133 -795 0
-122 -795 0
-122 -133 -796 0
c (0<=(SATLiteral(122) + SATLiteral(133) - aux85))
133 796 0
122 796 0
122 133 795 0
c ((SATLiteral(168) + SATLiteral(67) - aux86)<=0)
-67 -798 0
-168 -798 0
-168 -67 -799 0
c (0<=(SATLiteral(168) + SATLiteral(67) - aux86))
67 799 0
168 799 0
168 67 798 0
c ((SATLiteral(78) + aux86 - aux87)<=0)
798 -801 0
799 -802 0
-78 -801 0
-78 798 -802 0
-78 799 -804 0
c (0<=(SATLiteral(78) + aux86 - aux87))
-799 804 0
-798 802 0
78 804 0
78 -799 802 0
78 -798 801 0
c ((aux78 + aux84 - aux88)<=0)
792 -806 0
793 -807 0
774 -806 0
774 792 -807 0
774 793 -809 0
775 -807 0
775 792 -809 0
775 793 -811 0
c (0<=(aux78 + aux84 - aux88))
-793 811 0
-792 809 0
-775 811 0
-775 -793 809 0
-775 -792 807 0
-774 809 0
-774 -793 807 0
-774 -792 806 0
c ((aux79 + aux80 - aux89)<=0)
780 -813 0
781 -814 0
777 -813 0
777 780 -814 0
777 781 -816 0
778 -814 0
778 780 -816 0
778 781 -818 0
c (0<=(aux79 + aux80 - aux89))
-781 818 0
-780 816 0
-778 818 0
-778 -781 816 0
-778 -780 814 0
-777 816 0
-777 -781 814 0
-777 -780 813 0
c ((aux83 + aux85 - aux90)<=0)
795 -820 0
796 -821 0
789 -820 0
789 795 -821 0
789 796 -823 0
790 -821 0
790 795 -823 0
790 796 -825 0
c (0<=(aux83 + aux85 - aux90))
-796 825 0
-795 823 0
-790 825 0
-790 -796 823 0
-790 -795 821 0
-789 823 0
-789 -796 821 0
-789 -795 820 0
c ((aux81 + aux82 - aux91)<=0)
786 -827 0
787 -828 0
783 -827 0
783 786 -828 0
783 787 -830 0
784 -828 0
784 786 -830 0
784 787 -832 0
c (0<=(aux81 + aux82 - aux91))
-787 832 0
-786 830 0
-784 832 0
-784 -787 830 0
-784 -786 828 0
-783 830 0
-783 -787 828 0
-783 -786 827 0
c ((aux87 + aux91 - aux92)<=0)
827 -834 0
828 -835 0
830 -837 0
832 -839 0
801 -834 0
801 827 -835 0
801 828 -837 0
801 830 -839 0
801 832 -841 0
802 -835 0
802 827 -837 0
802 828 -839 0
802 830 -841 0
802 832 -843 0
804 -837 0
804 827 -839 0
804 828 -841 0
804 830 -843 0
804 832 -845 0
c (0<=(aux87 + aux91 - aux92))
-832 845 0
-830 843 0
-828 841 0
-827 839 0
-804 845 0
-804 -832 843 0
-804 -830 841 0
-804 -828 839 0
-804 -827 837 0
-802 843 0
-802 -832 841 0
-802 -830 839 0
-802 -828 837 0
-802 -827 835 0
-801 841 0
-801 -832 839 0
-801 -830 837 0
-801 -828 835 0
-801 -827 834 0
c ((aux88 + aux89 - aux93)<=0)
813 -847 0
814 -848 0
816 -850 0
818 -852 0
806 -847 0
806 813 -848 0
806 814 -850 0
806 816 -852 0
806 818 -854 0
807 -848 0
807 813 -850 0
807 814 -852 0
807 816 -854 0
807 818 -856 0
809 -850 0
809 813 -852 0
809 814 -854 0
809 816 -856 0
809 818 -858 0
811 -852 0
811 813 -854 0
811 814 -856 0
811 816 -858 0
811 818 -860 0
c (0<=(aux88 + aux89 - aux93))
-818 860 0
-816 858 0
-814 856 0
-813 854 0
-811 860 0
-811 -818 858 0
-811 -816 856 0
-811 -814 854 0
-811 -813 852 0
-809 858 0
-809 -818 856 0
-809 -816 854 0
-809 -814 852 0
-809 -813 850 0
-807 856 0
-807 -818 854 0
-807 -816 852 0
-807 -814 850 0
-807 -813 848 0
-806 854 0
-806 -818 852 0
-806 -816 850 0
-806 -814 848 0
-806 -813 847 0
c ((SATLiteral(147) - aux94 + SATLiteral(45))<=0)
-45 -862 0
-147 -862 0
-147 -45 -863 0
c (0<=(SATLiteral(147) - aux94 + SATLiteral(45)))
45 863 0
147 863 0
147 45 862 0
c ((SATLiteral(158) - aux95 + SATLiteral(34))<=0)
-34 -865 0
-158 -865 0
-158 -34 -866 0
c (0<=(SATLiteral(158) - aux95 + SATLiteral(34)))
34 866 0
158 866 0
158 34 865 0
c ((SATLiteral(181) - aux96 + SATLiteral(23))<=0)
-23 -868 0
-181 -868 0
-181 -23 -869 0
c (0<=(SATLiteral(181) - aux96 + SATLiteral(23)))
23 869 0
181 869 0
181 23 868 0
c ((SATLiteral(91) - aux97 + SATLiteral(12))<=0)
-12 -871 0
-91 -871 0
-91 -12 -872 0
c (0<=(SATLiteral(91) - aux97 + SATLiteral(12)))
12 872 0
91 872 0
91 12 871 0
c ((SATLiteral(102) - aux98 + SATLiteral(216))<=0)
-216 -874 0
-102 -874 0
-102 -216 -875 0
c (0<=(SATLiteral(102) - aux98 + SATLiteral(216)))
216 875 0
102 875 0
102 216 874 0
c ((SATLiteral(58) - aux99 + SATLiteral(204))<=0)
-204 -877 0
-58 -877 0
-58 -204 -878 0
c (0<=(SATLiteral(58) - aux99 + SATLiteral(204)))
204 878 0
58 878 0
58 204 877 0
c (( - aux100 + SATLiteral(113) + SATLiteral(193))<=0)
-193 -880 0
-113 -880 0
-113 -193 -881 0
c (0<=( - aux100 + SATLiteral(113) + SATLiteral(193)))
193 881 0
113 881 0
113 193 880 0
c (( - aux101 + SATLiteral(124) + SATLiteral(135))<=0)
-135 -883 0
-124 -883 0
-124 -135 -884 0
c (0<=( - aux101 + SATLiteral(124) + SATLiteral(135)))
135 884 0
124 884 0
124 135 883 0
c ((SATLiteral(170) - aux102 + SATLiteral(69))<=0)
-69 -886 0
-170 -886 0
-170 -69 -887 0
c (0<=(SATLiteral(170) - aux102 + SATLiteral(69)))
69 887 0
170 887 0
170 69 886 0
c ((aux102 - aux103 + SATLiteral(80))<=0)
886 -889 0
887 -890 0
-80 -889 0
-80 886 -890 0
-80 887 -892 0
c (0<=(aux102 - aux103 + SATLiteral(80)))
-887 892 0
-886 890 0
80 892 0
80 -887 890 0
80 -886 889 0
c ((aux100 - aux104 + aux94)<=0)
862 -894 0
863 -895 0
880 -894 0
880 862 -895 0
880 863 -897 0
881 -895 0
881 862 -897 0
881 863 -899 0
c (0<=(aux100 - aux104 + aux94))
-863 899 0
-862 897 0
-881 899 0
-881 -863 897 0
-881 -862 895 0
-880 897 0
-880 -863 895 0
-880 -862 894 0
c (( - aux105 + aux95 + aux96)<=0)
868 -901 0
869 -902 0
865 -901 0
865 868 -902 0
865 869 -904 0
866 -902 0
866 868 -904 0
866 869 -906 0
c (0<=( - aux105 + aux95 + aux96))
-869 906 0
-868 904 0
-866 906 0
-866 -869 904 0
-866 -868 902 0
-865 904 0
-865 -869 902 0
-865 -868 901 0
c ((aux101 - aux106 + aux99)<=0)
877 -908 0
878 -909 0
883 -908 0
883 877 -909 0
883 878 -911 0
884 -909 0
884 877 -911 0
884 878 -913 0
c (0<=(aux101 - aux106 + aux99))
-878 913 0
-877 911 0
-884 913 0
-884 -878 911 0
-884 -877 909 0
-883 911 0
-883 -878 909 0
-883 -877 908 0
c (( - aux107 + aux97 + aux98)<=0)
874 -915 0
875 -916 0
871 -915 0
871 874 -916 0
871 875 -918 0
872 -916 0
872 874 -918 0
872 875 -920 0
c (0<=( - aux107 + aux97 + aux98))
-875 920 0
-874 918 0
-872 920 0
-872 -875 918 0
-872 -874 916 0
-871 918 0
-871 -875 916 0
-871 -874 915 0
c ((aux103 + aux107 - aux108)<=0)
915 -922 0
916 -923 0
918 -925 0
920 -927 0
889 -922 0
889 915 -923 0
889 916 -925 0
889 918 -927 0
889 920 -929 0
890 -923 0
890 915 -925 0
890 916 -927 0
890 918 -929 0
890 920 -931 0
892 -925 0
892 915 -927 0
892 916 -929 0
892 918 -931 0
892 920 -933 0
c (0<=(aux103 + aux107 - aux108))
-920 933 0
-918 931 0
-916 929 0
-915 927 0
-892 933 0
-892 -920 931 0
-892 -918 929 0
-892 -916 927 0
-892 -915 925 0
-890 931 0
-890 -920 929 0
-890 -918 927 0
-890 -916 925 0
-890 -915 923 0
-889 929 0
-889 -920 927 0
-889 -918 925 0
-889 -916 923 0
-889 -915 922 0
c ((aux104 + aux105 - aux109)<=0)
901 -935 0
902 -936 0
904 -938 0
906 -940 0
894 -935 0
894 901 -936 0
894 902 -938 0
894 904 -940 0
894 906 -942 0
895 -936 0
895 901 -938 0
895 902 -940 0
895 904 -942 0
895 906 -944 0
897 -938 0
897 901 -940 0
897 902 -942 0
897 904 -944 0
897 906 -946 0
899 -940 0
899 901 -942 0
899 902 -944 0
899 904 -946 0
899 906 -948 0
c (0<=(aux104 + aux105 - aux109))
-906 948 0
-904 946 0
-902 944 0
-901 942 0
-899 948 0
-899 -906 946 0
-899 -904 944 0
-899 -902 942 0
-899 -901 940 0
-897 946 0
-897 -906 944 0
-897 -904 942 0
-897 -902 940 0
-897 -901 938 0
-895 944 0
-895 -906 942 0
-895 -904 940 0
-895 -902 938 0
-895 -901 936 0
-894 942 0
-894 -906 940 0
-894 -904 938 0
-894 -902 936 0
-894 -901 935 0
c ((SATLiteral(-146) - aux110 + SATLiteral(-44))<=0)
44 -950 0
146 -950 0
146 44 -951 0
c (0<=(SATLiteral(-146) - aux110 + SATLiteral(-44)))
-44 951 0
-146 951 0
-146 -44 950 0
c ((SATLiteral(-157) - aux111 + SATLiteral(-33))<=0)
33 -953 0
157 -953 0
157 33 -954 0
c (0<=(SATLiteral(-157) - aux111 + SATLiteral(-33)))
-33 954 0
-157 954 0
-157 -33 953 0
c ((SATLiteral(-180) - aux112 + SATLiteral(-22))<=0)
22 -956 0
180 -956 0
180 22 -957 0
c (0<=(SATLiteral(-180) - aux112 + SATLiteral(-22)))
-22 957 0
-180 957 0
-180 -22 956 0
c (( - aux113 + SATLiteral(-90) + SATLiteral(-11))<=0)
11 -959 0
90 -959 0
90 11 -960 0
c (0<=( - aux113 + SATLiteral(-90) + SATLiteral(-11)))
-11 960 0
-90 960 0
-90 -11 959 0
c (( - aux114 + SATLiteral(-101) + SATLiteral(-215))<=0)
215 -962 0
101 -962 0
101 215 -963 0
c (0<=( - aux114 + SATLiteral(-101) + SATLiteral(-215)))
-215 963 0
-101 963 0
-101 -215 962 0
c (( - aux115 + SATLiteral(-57) + SATLiteral(-203))<=0)
203 -965 0
57 -965 0
57 203 -966 0
c (0<=( - aux115 + SATLiteral(-57) + SATLiteral(-203)))
-203 966 0
-57 966 0
-57 -203 965 0
c (( - aux116 + SATLiteral(-112) + SATLiteral(-192))<=0)
192 -968 0
112 -968 0
112 192 -969 0
c (0<=( - aux116 + SATLiteral(-112) + SATLiteral(-192)))
-192 969 0
-112 969 0
-112 -192 968 0
c (( - aux117 + SATLiteral(-123) + SATLiteral(-134))<=0)
134 -971 0
123 -971 0
123 134 -972 0
c (0<=( - aux117 + SATLiteral(-123) + SATLiteral(-134)))
-134 972 0
-123 972 0
-123 -134 971 0
c ((SATLiteral(-169) - aux118 + SATLiteral(-68))<=0)
68 -974 0
169 -974 0
169 68 -975 0
c (0<=(SATLiteral(-169) - aux118 + SATLiteral(-68)))
-68 975 0
-169 975 0
-169 -68 974 0
c ((aux118 - aux119 + SATLiteral(-79))<=0)
974 -977 0
975 -978 0
79 -977 0
79 974 -978 0
79 975 -980 0
c (0<=(aux118 - aux119 + SATLiteral(-79)))
-975 980 0
-974 978 0
-79 980 0
-79 -975 978 0
-79 -974 977 0
c ((aux110 + aux116 - aux120)<=0)
968 -982 0
969 -983 0
950 -982 0
950 968 -983 0
950 969 -985 0
951 -983 0
951 968 -985 0
951 969 -987 0
c (0<=(aux110 + aux116 - aux120))
-969 987 0
-968 985 0
-951 987 0
-951 -969 985 0
-951 -968 983 0
-950 985 0
-950 -969 983 0
-950 -968 982 0
c ((aux111 + aux112 - aux121)<=0)
956 -989 0
957 -990 0
953 -989 0
953 956 -990 0
953 957 -992 0
954 -990 0
954 956 -992 0
954 957 -994 0
c (0<=(aux111 + aux112 - aux121))
-957 994 0
-956 992 0
-954 994 0
-954 -957 992 0
-954 -956 990 0
-953 992 0
-953 -957 990 0
-953 -956 989 0
c ((aux115 + aux117 - aux122)<=0)
971 -996 0
972 -997 0
965 -996 0
965 971 -997 0
965 972 -999 0
966 -997 0
966 971 -999 0
966 972 -1001 0
c (0<=(aux115 + aux117 - aux122))
-972 1001 0
-971 999 0
-966 1001 0
-966 -972 999 0
-966 -971 997 0
-965 999 0
-965 -972 997 0
-965 -971 996 0
c ((aux113 + aux114 - aux123)<=0)
962 -1003 0
963 -1004 0
959 -1003 0
959 962 -1004 0
959 963 -1006 0
960 -1004 0
960 962 -1006 0
960 963 -1008 0
c (0<=(aux113 + aux114 - aux123))
-963 1008 0
-962 1006 0
-960 1008 0
-960 -963 1006 0
-960 -962 1004 0
-959 1006 0
-959 -963 1004 0
-959 -962 1003 0
c ((aux119 + aux123 - aux124)<=0)
1003 -1010 0
1004 -1011 0
1006 -1013 0
1008 -1015 0
977 -1010 0
977 1003 -1011 0
977 1004 -1013 0
977 1006 -1015 0
977 1008 -1017 0
978 -1011 0
978 1003 -1013 0
978 1004 -1015 0
978 1006 -1017 0
978 1008 -1019 0
980 -1013 0
980 1003 -1015 0
980 1004 -1017 0
980 1006 -1019 0
980 1008 -1021 0
c (0<=(aux119 + aux123 - aux124))
-1008 1021 0
-1006 1019 0
-1004 1017 0
-1003 1015 0
-980 1021 0
-980 -1008 1019 0
-980 -1006 1017 0
-980 -1004 1015 0
-980 -1003 1013 0
-978 1019 0
-978 -1008 1017 0
-978 -1006 1015 0
-978 -1004 1013 0
-978 -1003 1011 0
-977 1017 0
-977 -1008 1015 0
-977 -1006 1013 0
-977 -1004 1011 0
-977 -1003 1010 0
c ((aux120 + aux121 - aux125)<=0)
989 -1023 0
990 -1024 0
992 -1026 0
994 -1028 0
982 -1023 0
982 989 -1024 0
982 990 -1026 0
982 992 -1028 0
982 994 -1030 0
983 -1024 0
983 989 -1026 0
983 990 -1028 0
983 992 -1030 0
983 994 -1032 0
985 -1026 0
985 989 -1028 0
985 990 -1030 0
985 992 -1032 0
985 994 -1034 0
987 -1028 0
987 989 -1030 0
987 990 -1032 0
987 992 -1034 0
987 994 -1036 0
c (0<=(aux120 + aux121 - aux125))
-994 1036 0
-992 1034 0
-990 1032 0
-989 1030 0
-987 1036 0
-987 -994 1034 0
-987 -992 1032 0
-987 -990 1030 0
-987 -989 1028 0
-985 1034 0
-985 -994 1032 0
-985 -992 1030 0
-985 -990 1028 0
-985 -989 1026 0
-983 1032 0
-983 -994 1030 0
-983 -992 1028 0
-983 -990 1026 0
-983 -989 1024 0
-982 1030 0
-982 -994 1028 0
-982 -992 1026 0
-982 -990 1024 0
-982 -989 1023 0
c ((SATLiteral(139) - aux126 + SATLiteral(37))<=0)
-37 -1038 0
-139 -1038 0
-139 -37 -1039 0
c (0<=(SATLiteral(139) - aux126 + SATLiteral(37)))
37 1039 0
139 1039 0
139 37 1038 0
c ((SATLiteral(150) - aux127 + SATLiteral(26))<=0)
-26 -1041 0
-150 -1041 0
-150 -26 -1042 0
c (0<=(SATLiteral(150) - aux127 + SATLiteral(26)))
26 1042 0
150 1042 0
150 26 1041 0
c ((SATLiteral(173) - aux128 + SATLiteral(15))<=0)
-15 -1044 0
-173 -1044 0
-173 -15 -1045 0
c (0<=(SATLiteral(173) - aux128 + SATLiteral(15)))
15 1045 0
173 1045 0
173 15 1044 0
c (( - aux129 + SATLiteral(83) + SATLiteral(4))<=0)
-4 -1047 0
-83 -1047 0
-83 -4 -1048 0
c (0<=( - aux129 + SATLiteral(83) + SATLiteral(4)))
4 1048 0
83 1048 0
83 4 1047 0
c (( - aux130 + SATLiteral(94) + SATLiteral(208))<=0)
-208 -1050 0
-94 -1050 0
-94 -208 -1051 0
c (0<=( - aux130 + SATLiteral(94) + SATLiteral(208)))
208 1051 0
94 1051 0
94 208 1050 0
c (( - aux131 + SATLiteral(50) + SATLiteral(196))<=0)
-196 -1053 0
-50 -1053 0
-50 -196 -1054 0
c (0<=( - aux131 + SATLiteral(50) + SATLiteral(196)))
196 1054 0
50 1054 0
50 196 1053 0
c (( - aux132 + SATLiteral(105) + SATLiteral(185))<=0)
-185 -1056 0
-105 -1056 0
-105 -185 -1057 0
c (0<=( - aux132 + SATLiteral(105) + SATLiteral(185)))
185 1057 0
105 1057 0
105 185 1056 0
c (( - aux133 + SATLiteral(116) + SATLiteral(127))<=0)
-127 -1059 0
-116 -1059 0
-116 -127 -1060 0
c (0<=( - aux133 + SATLiteral(116) + SATLiteral(127)))
127 1060 0
116 1060 0
116 127 1059 0
c ((SATLiteral(162) - aux134 + SATLiteral(61))<=0)
-61 -1062 0
-162 -1062 0
-162 -61 -1063 0
c (0<=(SATLiteral(162) - aux134 + SATLiteral(61)))
61 1063 0
162 1063 0
162 61 1062 0
c ((aux134 - aux135 + SATLiteral(72))<=0)
1062 -1065 0
1063 -1066 0
-72 -1065 0
-72 1062 -1066 0
-72 1063 -1068 0
c (0<=(aux134 - aux135 + SATLiteral(72)))
-1063 1068 0
-1062 1066 0
72 1068 0
72 -1063 1066 0
72 -1062 1065 0
c ((aux126 + aux132 - aux136)<=0)
1056 -1070 0
1057 -1071 0
1038 -1070 0
1038 1056 -1071 0
1038 1057 -1073 0
1039 -1071 0
1039 1056 -1073 0
1039 1057 -1075 0
c (0<=(aux126 + aux132 - aux136))
-1057 1075 0
-1056 1073 0
-1039 1075 0
-1039 -1057 1073 0
-1039 -1056 1071 0
-1038 1073 0
-1038 -1057 1071 0
-1038 -1056 1070 0
c ((aux127 + aux128 - aux137)<=0)
1044 -1077 0
1045 -1078 0
1041 -1077 0
1041 1044 -1078 0
1041 1045 -1080 0
1042 -1078 0
1042 1044 -1080 0
1042 1045 -1082 0
c (0<=(aux127 + aux128 - aux137))
-1045 1082 0
-1044 1080 0
-1042 1082 0
-1042 -1045 1080 0
-1042 -1044 1078 0
-1041 1080 0
-1041 -1045 1078 0
-1041 -1044 1077 0
c ((aux131 + aux133 - aux138)<=0)
1059 -1084 0
1060 -1085 0
1053 -1084 0
1053 1059 -1085 0
1053 1060 -1087 0
1054 -1085 0
1054 1059 -1087 0
1054 1060 -1089 0
c (0<=(aux131 + aux133 - aux138))
-1060 1089 0
-1059 1087 0
-1054 1089 0
-1054 -1060 1087 0
-1054 -1059 1085 0
-1053 1087 0
-1053 -1060 1085 0
-1053 -1059 1084 0
c ((aux129 + aux130 - aux139)<=0)
1050 -1091 0
1051 -1092 0
1047 -1091 0
1047 1050 -1092 0
1047 1051 -1094 0
1048 -1092 0
1048 1050 -1094 0
1048 1051 -1096 0
c (0<=(aux129 + aux130 - aux139))
-1051 1096 0
-1050 1094 0
-1048 1096 0
-1048 -1051 1094 0
-1048 -1050 1092 0
-1047 1094 0
-1047 -1051 1092 0
-1047 -1050 1091 0
c ((aux135 + aux139 - aux140)<=0)
1091 -1098 0
1092 -1099 0
1094 -1101 0
1096 -1103 0
1065 -1098 0
1065 1091 -1099 0
1065 1092 -1101 0
1065 1094 -1103 0
1065 1096 -1105 0
1066 -1099 0
1066 1091 -1101 0
1066 1092 -1103 0
1066 1094 -1105 0
1066 1096 -1107 0
1068 -1101 0
1068 1091 -1103 0
1068 1092 -1105 0
1068 1094 -1107 0
1068 1096 -1109 0
c (0<=(aux135 + aux139 - aux140))
-1096 1109 0
-1094 1107 0
-1092 1105 0
-1091 1103 0
-1068 1109 0
-1068 -1096 1107 0
-1068 -1094 1105 0
-1068 -1092 1103 0
-1068 -1091 1101 0
-1066 1107 0
-1066 -1096 1105 0
-1066 -1094 1103 0
-1066 -1092 1101 0
-1066 -1091 1099 0
-1065 1105 0
-1065 -1096 1103 0
-1065 -1094 1101 0
-1065 -1092 1099 0
-1065 -1091 1098 0
c ((aux136 + aux137 - aux141)<=0)
1077 -1111 0
1078 -1112 0
1080 -1114 0
1082 -1116 0
1070 -1111 0
1070 1077 -1112 0
1070 1078 -1114 0
1070 1080 -1116 0
1070 1082 -1118 0
1071 -1112 0
1071 1077 -1114 0
1071 1078 -1116 0
1071 1080 -1118 0
1071 1082 -1120 0
1073 -1114 0
1073 1077 -1116 0
1073 1078 -1118 0
1073 1080 -1120 0
1073 1082 -1122 0
1075 -1116 0
1075 1077 -1118 0
1075 1078 -1120 0
1075 1080 -1122 0
1075 1082 -1124 0
c (0<=(aux136 + aux137 - aux141))
-1082 1124 0
-1080 1122 0
-1078 1120 0
-1077 1118 0
-1075 1124 0
-1075 -1082 1122 0
-1075 -1080 1120 0
-1075 -1078 1118 0
-1075 -1077 1116 0
-1073 1122 0
-1073 -1082 1120 0
-1073 -1080 1118 0
-1073 -1078 1116 0
-1073 -1077 1114 0
-1071 1120 0
-1071 -1082 1118 0
-1071 -1080 1116 0
-1071 -1078 1114 0
-1071 -1077 1112 0
-1070 1118 0
-1070 -1082 1116 0
-1070 -1080 1114 0
-1070 -1078 1112 0
-1070 -1077 1111 0
c ((SATLiteral(141) - aux142 + SATLiteral(39))<=0)
-39 -1126 0
-141 -1126 0
-141 -39 -1127 0
c (0<=(SATLiteral(141) - aux142 + SATLiteral(39)))
39 1127 0
141 1127 0
141 39 1126 0
c ((SATLiteral(152) - aux143 + SATLiteral(28))<=0)
-28 -1129 0
-152 -1129 0
-152 -28 -1130 0
c (0<=(SATLiteral(152) - aux143 + SATLiteral(28)))
28 1130 0
152 1130 0
152 28 1129 0
c ((SATLiteral(175) - aux144 + SATLiteral(17))<=0)
-17 -1132 0
-175 -1132 0
-175 -17 -1133 0
c (0<=(SATLiteral(175) - aux144 + SATLiteral(17)))
17 1133 0
175 1133 0
175 17 1132 0
c (( - aux145 + SATLiteral(85) + SATLiteral(6))<=0)
-6 -1135 0
-85 -1135 0
-85 -6 -1136 0
c (0<=( - aux145 + SATLiteral(85) + SATLiteral(6)))
6 1136 0
85 1136 0
85 6 1135 0
c (( - aux146 + SATLiteral(96) + SATLiteral(210))<=0)
-210 -1138 0
-96 -1138 0
-96 -210 -1139 0
c (0<=( - aux146 + SATLiteral(96) + SATLiteral(210)))
210 1139 0
96 1139 0
96 210 1138 0
c (( - aux147 + SATLiteral(52) + SATLiteral(198))<=0)
-198 -1141 0
-52 -1141 0
-52 -198 -1142 0
c (0<=( - aux147 + SATLiteral(52) + SATLiteral(198)))
198 1142 0
52 1142 0
52 198 1141 0
c (( - aux148 + SATLiteral(107) + SATLiteral(187))<=0)
-187 -1144 0
-107 -1144 0
-107 -187 -1145 0
c (0<=( - aux148 + SATLiteral(107) + SATLiteral(187)))
187 1145 0
107 1145 0
107 187 1144 0
c (( - aux149 + SATLiteral(118) + SATLiteral(129))<=0)
-129 -1147 0
-118 -1147 0
-118 -129 -1148 0
c (0<=( - aux149 + SATLiteral(118) + SATLiteral(129)))
129 1148 0
118 1148 0
118 129 1147 0
c ((SATLiteral(164) - aux150 + SATLiteral(63))<=0)
-63 -1150 0
-164 -1150 0
-164 -63 -1151 0
c (0<=(SATLiteral(164) - aux150 + SATLiteral(63)))
63 1151 0
164 1151 0
164 63 1150 0
c ((aux150 - aux151 + SATLiteral(74))<=0)
1150 -1153 0
1151 -1154 0
-74 -1153 0
-74 1150 -1154 0
-74 1151 -1156 0
c (0<=(aux150 - aux151 + SATLiteral(74)))
-1151 1156 0
-1150 1154 0
74 1156 0
74 -1151 1154 0
74 -1150 1153 0
c ((aux142 + aux148 - aux152)<=0)
1144 -1158 0
1145 -1159 0
1126 -1158 0
1126 1144 -1159 0
1126 1145 -1161 0
1127 -1159 0
1127 1144 -1161 0
1127 1145 -1163 0
c (0<=(aux142 + aux148 - aux152))
-1145 1163 0
-1144 1161 0
-1127 1163 0
-1127 -1145 1161 0
-1127 -1144 1159 0
-1126 1161 0
-1126 -1145 1159 0
-1126 -1144 1158 0
c ((aux143 + aux144 - aux153)<=0)
1132 -1165 0
1133 -1166 0
1129 -1165 0
1129 1132 -1166 0
1129 1133 -1168 0
1130 -1166 0
1130 1132 -1168 0
1130 1133 -1170 0
c (0<=(aux143 + aux144 - aux153))
-1133 1170 0
-1132 1168 0
-1130 1170 0
-1130 -1133 1168 0
-1130 -1132 1166 0
-1129 1168 0
-1129 -1133 1166 0
-1129 -1132 1165 0
c ((aux147 + aux149 - aux154)<=0)
1147 -1172 0
1148 -1173 0
1141 -1172 0
1141 1147 -1173 0
1141 1148 -1175 0
1142 -1173 0
1142 1147 -1175 0
1142 1148 -1177 0
c (0<=(aux147 + aux149 - aux154))
-1148 1177 0
-1147 1175 0
-1142 1177 0
-1142 -1148 1175 0
-1142 -1147 1173 0
-1141 1175 0
-1141 -1148 1173 0
-1141 -1147 1172 0
c ((aux145 + aux146 - aux155)<=0)
1138 -1179 0
1139 -1180 0
1135 -1179 0
1135 1138 -1180 0
1135 1139 -1182 0
1136 -1180 0
1136 1138 -1182 0
1136 1139 -1184 0
c (0<=(aux145 + aux146 - aux155))
-1139 1184 0
-1138 1182 0
-1136 1184 0
-1136 -1139 1182 0
-1136 -1138 1180 0
-1135 1182 0
-1135 -1139 1180 0
-1135 -1138 1179 0
c ((aux151 + aux155 - aux156)<=0)
1179 -1186 0
1180 -1187 0
1182 -1189 0
1184 -1191 0
1153 -1186 0
1153 1179 -1187 0
1153 1180 -1189 0
1153 1182 -1191 0
1153 1184 -1193 0
1154 -1187 0
1154 1179 -1189 0
1154 1180 -1191 0
1154 1182 -1193 0
1154 1184 -1195 0
1156 -1189 0
1156 1179 -1191 0
1156 1180 -1193 0
1156 1182 -1195 0
1156 1184 -1197 0
c (0<=(aux151 + aux155 - aux156))
-1184 1197 0
-1182 1195 0
-1180 1193 0
-1179 1191 0
-1156 1197 0
-1156 -1184 1195 0
-1156 -1182 1193 0
-1156 -1180 1191 0
-1156 -1179 1189 0
-1154 1195 0
-1154 -1184 1193 0
-1154 -1182 1191 0
-1154 -1180 1189 0
-1154 -1179 1187 0
-1153 1193 0
-1153 -1184 1191 0
-1153 -1182 1189 0
-1153 -1180 1187 0
-1153 -1179 1186 0
c ((aux152 + aux153 - aux157)<=0)
1165 -1199 0
1166 -1200 0
1168 -1202 0
1170 -1204 0
1158 -1199 0
1158 1165 -1200 0
1158 1166 -1202 0
1158 1168 -1204 0
1158 1170 -1206 0
1159 -1200 0
1159 1165 -1202 0
1159 1166 -1204 0
1159 1168 -1206 0
1159 1170 -1208 0
1161 -1202 0
1161 1165 -1204 0
1161 1166 -1206 0
1161 1168 -1208 0
1161 1170 -1210 0
1163 -1204 0
1163 1165 -1206 0
1163 1166 -1208 0
1163 1168 -1210 0
1163 1170 -1212 0
c (0<=(aux152 + aux153 - aux157))
-1170 1212 0
-1168 1210 0
-1166 1208 0
-1165 1206 0
-1163 1212 0
-1163 -1170 1210 0
-1163 -1168 1208 0
-1163 -1166 1206 0
-1163 -1165 1204 0
-1161 1210 0
-1161 -1170 1208 0
-1161 -1168 1206 0
-1161 -1166 1204 0
-1161 -1165 1202 0
-1159 1208 0
-1159 -1170 1206 0
-1159 -1168 1204 0
-1159 -1166 1202 0
-1159 -1165 1200 0
-1158 1206 0
-1158 -1170 1204 0
-1158 -1168 1202 0
-1158 -1166 1200 0
-1158 -1165 1199 0
c ((SATLiteral(143) - aux158 + SATLiteral(41))<=0)
-41 -1214 0
-143 -1214 0
-143 -41 -1215 0
c (0<=(SATLiteral(143) - aux158 + SATLiteral(41)))
41 1215 0
143 1215 0
143 41 1214 0
c ((SATLiteral(154) - aux159 + SATLiteral(30))<=0)
-30 -1217 0
-154 -1217 0
-154 -30 -1218 0
c (0<=(SATLiteral(154) - aux159 + SATLiteral(30)))
30 1218 0
154 1218 0
154 30 1217 0
c ((SATLiteral(177) - aux160 + SATLiteral(19))<=0)
-19 -1220 0
-177 -1220 0
-177 -19 -1221 0
c (0<=(SATLiteral(177) - aux160 + SATLiteral(19)))
19 1221 0
177 1221 0
177 19 1220 0
c (( - aux161 + SATLiteral(87) + SATLiteral(8))<=0)
-8 -1223 0
-87 -1223 0
-87 -8 -1224 0
c (0<=( - aux161 + SATLiteral(87) + SATLiteral(8)))
8 1224 0
87 1224 0
87 8 1223 0
c (( - aux162 + SATLiteral(98) + SATLiteral(212))<=0)
-212 -1226 0
-98 -1226 0
-98 -212 -1227 0
c (0<=( - aux162 + SATLiteral(98) + SATLiteral(212)))
212 1227 0
98 1227 0
98 212 1226 0
c (( - aux163 + SATLiteral(54) + SATLiteral(200))<=0)
-200 -1229 0
-54 -1229 0
-54 -200 -1230 0
c (0<=( - aux163 + SATLiteral(54) + SATLiteral(200)))
200 1230 0
54 1230 0
54 200 1229 0
c (( - aux164 + SATLiteral(109) + SATLiteral(189))<=0)
-189 -1232 0
-109 -1232 0
-109 -189 -1233 0
c (0<=( - aux164 + SATLiteral(109) + SATLiteral(189)))
189 1233 0
109 1233 0
109 189 1232 0
c (( - aux165 + SATLiteral(120) + SATLiteral(131))<=0)
-131 -1235 0
-120 -1235 0
-120 -131 -1236 0
c (0<=( - aux165 + SATLiteral(120) + SATLiteral(131)))
131 1236 0
120 1236 0
120 131 1235 0
c ((SATLiteral(166) - aux166 + SATLiteral(65))<=0)
-65 -1238 0
-166 -1238 0
-166 -65 -1239 0
c (0<=(SATLiteral(166) - aux166 + SATLiteral(65)))
65 1239 0
166 1239 0
166 65 1238 0
c ((aux166 - aux167 + SATLiteral(76))<=0)
1238 -1241 0
1239 -1242 0
-76 -1241 0
-76 1238 -1242 0
-76 1239 -1244 0
c (0<=(aux166 - aux167 + SATLiteral(76)))
-1239 1244 0
-1238 1242 0
76 1244 0
76 -1239 1242 0
76 -1238 1241 0
c ((aux158 + aux164 - aux168)<=0)
1232 -1246 0
1233 -1247 0
1214 -1246 0
1214 1232 -1247 0
1214 1233 -1249 0
1215 -1247 0
1215 1232 -1249 0
1215 1233 -1251 0
c (0<=(aux158 + aux164 - aux168))
-1233 1251 0
-1232 1249 0
-1215 1251 0
-1215 -1233 1249 0
-1215 -1232 1247 0
-1214 1249 0
-1214 -1233 1247 0
-1214 -1232 1246 0
c ((aux159 + aux160 - aux169)<=0)
1220 -1253 0
1221 -1254 0
1217 -1253 0
1217 1220 -1254 0
1217 1221 -1256 0
1218 -1254 0
1218 1220 -1256 0
1218 1221 -1258 0
c (0<=(aux159 + aux160 - aux169))
-1221 1258 0
-1220 1256 0
-1218 1258 0
-1218 -1221 1256 0
-1218 -1220 1254 0
-1217 1256 0
-1217 -1221 1254 0
-1217 -1220 1253 0
c ((aux163 + aux165 - aux170)<=0)
1235 -1260 0
1236 -1261 0
1229 -1260 0
1229 1235 -1261 0
1229 1236 -1263 0
1230 -1261 0
1230 1235 -1263 0
1230 1236 -1265 0
c (0<=(aux163 + aux165 - aux170))
-1236 1265 0
-1235 1263 0
-1230 1265 0
-1230 -1236 1263 0
-1230 -1235 1261 0
-1229 1263 0
-1229 -1236 1261 0
-1229 -1235 1260 0
c ((aux161 + aux162 - aux171)<=0)
1226 -1267 0
1227 -1268 0
1223 -1267 0
1223 1226 -1268 0
1223 1227 -1270 0
1224 -1268 0
1224 1226 -1270 0
1224 1227 -1272 0
c (0<=(aux161 + aux162 - aux171))
-1227 1272 0
-1226 1270 0
-1224 1272 0
-1224 -1227 1270 0
-1224 -1226 1268 0
-1223 1270 0
-1223 -1227 1268 0
-1223 -1226 1267 0
c ((aux167 + aux171 - aux172)<=0)
1267 -1274 0
1268 -1275 0
1270 -1277 0
1272 -1279 0
1241 -1274 0
1241 1267 -1275 0
1241 1268 -1277 0
1241 1270 -1279 0
1241 1272 -1281 0
1242 -1275 0
1242 1267 -1277 0
1242 1268 -1279 0
1242 1270 -1281 0
1242 1272 -1283 0
1244 -1277 0
1244 1267 -1279 0
1244 1268 -1281 0
1244 1270 -1283 0
1244 1272 -1285 0
c (0<=(aux167 + aux171 - aux172))
-1272 1285 0
-1270 1283 0
-1268 1281 0
-1267 1279 0
-1244 1285 0
-1244 -1272 1283 0
-1244 -1270 1281 0
-1244 -1268 1279 0
-1244 -1267 1277 0
-1242 1283 0
-1242 -1272 1281 0
-1242 -1270 1279 0
-1242 -1268 1277 0
-1242 -1267 1275 0
-1241 1281 0
-1241 -1272 1279 0
-1241 -1270 1277 0
-1241 -1268 1275 0
-1241 -1267 1274 0
c ((aux168 + aux169 - aux173)<=0)
1253 -1287 0
1254 -1288 0
1256 -1290 0
1258 -1292 0
1246 -1287 0
1246 1253 -1288 0
1246 1254 -1290 0
1246 1256 -1292 0
1246 1258 -1294 0
1247 -1288 0
1247 1253 -1290 0
1247 1254 -1292 0
1247 1256 -1294 0
1247 1258 -1296 0
1249 -1290 0
1249 1253 -1292 0
1249 1254 -1294 0
1249 1256 -1296 0
1249 1258 -1298 0
1251 -1292 0
1251 1253 -1294 0
1251 1254 -1296 0
1251 1256 -1298 0
1251 1258 -1300 0
c (0<=(aux168 + aux169 - aux173))
-1258 1300 0
-1256 1298 0
-1254 1296 0
-1253 1294 0
-1251 1300 0
-1251 -1258 1298 0
-1251 -1256 1296 0
-1251 -1254 1294 0
-1251 -1253 1292 0
-1249 1298 0
-1249 -1258 1296 0
-1249 -1256 1294 0
-1249 -1254 1292 0
-1249 -1253 1290 0
-1247 1296 0
-1247 -1258 1294 0
-1247 -1256 1292 0
-1247 -1254 1290 0
-1247 -1253 1288 0
-1246 1294 0
-1246 -1258 1292 0
-1246 -1256 1290 0
-1246 -1254 1288 0
-1246 -1253 1287 0
c ((SATLiteral(145) - aux174 + SATLiteral(43))<=0)
-43 -1302 0
-145 -1302 0
-145 -43 -1303 0
c (0<=(SATLiteral(145) - aux174 + SATLiteral(43)))
43 1303 0
145 1303 0
145 43 1302 0
c ((SATLiteral(156) - aux175 + SATLiteral(32))<=0)
-32 -1305 0
-156 -1305 0
-156 -32 -1306 0
c (0<=(SATLiteral(156) - aux175 + SATLiteral(32)))
32 1306 0
156 1306 0
156 32 1305 0
c ((SATLiteral(179) - aux176 + SATLiteral(21))<=0)
-21 -1308 0
-179 -1308 0
-179 -21 -1309 0
c (0<=(SATLiteral(179) - aux176 + SATLiteral(21)))
21 1309 0
179 1309 0
179 21 1308 0
c (( - aux177 + SATLiteral(89) + SATLiteral(10))<=0)
-10 -1311 0
-89 -1311 0
-89 -10 -1312 0
c (0<=( - aux177 + SATLiteral(89) + SATLiteral(10)))
10 1312 0
89 1312 0
89 10 1311 0
c (( - aux178 + SATLiteral(100) + SATLiteral(214))<=0)
-214 -1314 0
-100 -1314 0
-100 -214 -1315 0
c (0<=( - aux178 + SATLiteral(100) + SATLiteral(214)))
214 1315 0
100 1315 0
100 214 1314 0
c (( - aux179 + SATLiteral(56) + SATLiteral(202))<=0)
-202 -1317 0
-56 -1317 0
-56 -202 -1318 0
c (0<=( - aux179 + SATLiteral(56) + SATLiteral(202)))
202 1318 0
56 1318 0
56 202 1317 0
c (( - aux180 + SATLiteral(111) + SATLiteral(191))<=0)
-191 -1320 0
-111 -1320 0
-111 -191 -1321 0
c (0<=( - aux180 + SATLiteral(111) + SATLiteral(191)))
191 1321 0
111 1321 0
111 191 1320 0
c (( - aux181 + SATLiteral(122) + SATLiteral(133))<=0)
-133 -1323 0
-122 -1323 0
-122 -133 -1324 0
c (0<=( - aux181 + SATLiteral(122) + SATLiteral(133)))
133 1324 0
122 1324 0
122 133 1323 0
c ((SATLiteral(168) - aux182 + SATLiteral(67))<=0)
-67 -1326 0
-168 -1326 0
-168 -67 -1327 0
c (0<=(SATLiteral(168) - aux182 + SATLiteral(67)))
67 1327 0
168 1327 0
168 67 1326 0
c ((aux182 - aux183 + SATLiteral(78))<=0)
1326 -1329 0
1327 -1330 0
-78 -1329 0
-78 1326 -1330 0
-78 1327 -1332 0
c (0<=(aux182 - aux183 + SATLiteral(78)))
-1327 1332 0
-1326 1330 0
78 1332 0
78 -1327 1330 0
78 -1326 1329 0
c ((aux174 + aux180 - aux184)<=0)
1320 -1334 0
1321 -1335 0
1302 -1334 0
1302 1320 -1335 0
1302 1321 -1337 0
1303 -1335 0
1303 1320 -1337 0
1303 1321 -1339 0
c (0<=(aux174 + aux180 - aux184))
-1321 1339 0
-1320 1337 0
-1303 1339 0
-1303 -1321 1337 0
-1303 -1320 1335 0
-1302 1337 0
-1302 -1321 1335 0
-1302 -1320 1334 0
c ((aux175 + aux176 - aux185)<=0)
1308 -1341 0
1309 -1342 0
1305 -1341 0
1305 1308 -1342 0
1305 1309 -1344 0
1306 -1342 0
1306 1308 -1344 0
1306 1309 -1346 0
c (0<=(aux175 + aux176 - aux185))
-1309 1346 0
-1308 1344 0
-1306 1346 0
-1306 -1309 1344 0
-1306 -1308 1342 0
-1305 1344 0
-1305 -1309 1342 0
-1305 -1308 1341 0
c ((aux179 + aux181 - aux186)<=0)
1323 -1348 0
1324 -1349 0
1317 -1348 0
1317 1323 -1349 0
1317 1324 -1351 0
1318 -1349 0
1318 1323 -1351 0
1318 1324 -1353 0
c (0<=(aux179 + aux181 - aux186))
-1324 1353 0
-1323 1351 0
-1318 1353 0
-1318 -1324 1351 0
-1318 -1323 1349 0
-1317 1351 0
-1317 -1324 1349 0
-1317 -1323 1348 0
c ((aux177 + aux178 - aux187)<=0)
1314 -1355 0
1315 -1356 0
1311 -1355 0
1311 1314 -1356 0
1311 1315 -1358 0
1312 -1356 0
1312 1314 -1358 0
1312 1315 -1360 0
c (0<=(aux177 + aux178 - aux187))
-1315 1360 0
-1314 1358 0
-1312 1360 0
-1312 -1315 1358 0
-1312 -1314 1356 0
-1311 1358 0
-1311 -1315 1356 0
-1311 -1314 1355 0
c ((aux183 + aux187 - aux188)<=0)
1355 -1362 0
1356 -1363 0
1358 -1365 0
1360 -1367 0
1329 -1362 0
1329 1355 -1363 0
1329 1356 -1365 0
1329 1358 -1367 0
1329 1360 -1369 0
1330 -1363 0
1330 1355 -1365 0
1330 1356 -1367 0
1330 1358 -1369 0
1330 1360 -1371 0
1332 -1365 0
1332 1355 -1367 0
1332 1356 -1369 0
1332 1358 -1371 0
1332 1360 -1373 0
c (0<=(aux183 + aux187 - aux188))
-1360 1373 0
-1358 1371 0
-1356 1369 0
-1355 1367 0
-1332 1373 0
-1332 -1360 1371 0
-1332 -1358 1369 0
-1332 -1356 1367 0
-1332 -1355 1365 0
-1330 1371 0
-1330 -1360 1369 0
-1330 -1358 1367 0
-1330 -1356 1365 0
-1330 -1355 1363 0
-1329 1369 0
-1329 -1360 1367 0
-1329 -1358 1365 0
-1329 -1356 1363 0
-1329 -1355 1362 0
c ((aux184 + aux185 - aux189)<=0)
1341 -1375 0
1342 -1376 0
1344 -1378 0
1346 -1380 0
1334 -1375 0
1334 1341 -1376 0
1334 1342 -1378 0
1334 1344 -1380 0
1334 1346 -1382 0
1335 -1376 0
1335 1341 -1378 0
1335 1342 -1380 0
1335 1344 -1382 0
1335 1346 -1384 0
1337 -1378 0
1337 1341 -1380 0
1337 1342 -1382 0
1337 1344 -1384 0
1337 1346 -1386 0
1339 -1380 0
1339 1341 -1382 0
1339 1342 -1384 0
1339 1344 -1386 0
1339 1346 -1388 0
c (0<=(aux184 + aux185 - aux189))
-1346 1388 0
-1344 1386 0
-1342 1384 0
-1341 1382 0
-1339 1388 0
-1339 -1346 1386 0
-1339 -1344 1384 0
-1339 -1342 1382 0
-1339 -1341 1380 0
-1337 1386 0
-1337 -1346 1384 0
-1337 -1344 1382 0
-1337 -1342 1380 0
-1337 -1341 1378 0
-1335 1384 0
-1335 -1346 1382 0
-1335 -1344 1380 0
-1335 -1342 1378 0
-1335 -1341 1376 0
-1334 1382 0
-1334 -1346 1380 0
-1334 -1344 1378 0
-1334 -1342 1376 0
-1334 -1341 1375 0
c ((SATLiteral(147) - aux190 + SATLiteral(45))<=0)
-45 -1390 0
-147 -1390 0
-147 -45 -1391 0
c (0<=(SATLiteral(147) - aux190 + SATLiteral(45)))
45 1391 0
147 1391 0
147 45 1390 0
c ((SATLiteral(158) - aux191 + SATLiteral(34))<=0)
-34 -1393 0
-158 -1393 0
-158 -34 -1394 0
c (0<=(SATLiteral(158) - aux191 + SATLiteral(34)))
34 1394 0
158 1394 0
158 34 1393 0
c ((SATLiteral(181) - aux192 + SATLiteral(23))<=0)
-23 -1396 0
-181 -1396 0
-181 -23 -1397 0
c (0<=(SATLiteral(181) - aux192 + SATLiteral(23)))
23 1397 0
181 1397 0
181 23 1396 0
c (( - aux193 + SATLiteral(91) + SATLiteral(12))<=0)
-12 -1399 0
-91 -1399 0
-91 -12 -1400 0
c (0<=( - aux193 + SATLiteral(91) + SATLiteral(12)))
12 1400 0
91 1400 0
91 12 1399 0
c (( - aux194 + SATLiteral(102) + SATLiteral(216))<=0)
-216 -1402 0
-102 -1402 0
-102 -216 -1403 0
c (0<=( - aux194 + SATLiteral(102) + SATLiteral(216)))
216 1403 0
102 1403 0
102 216 1402 0
c (( - aux195 + SATLiteral(58) + SATLiteral(204))<=0)
-204 -1405 0
-58 -1405 0
-58 -204 -1406 0
c (0<=( - aux195 + SATLiteral(58) + SATLiteral(204)))
204 1406 0
58 1406 0
58 204 1405 0
c (( - aux196 + SATLiteral(113) + SATLiteral(193))<=0)
-193 -1408 0
-113 -1408 0
-113 -193 -1409 0
c (0<=( - aux196 + SATLiteral(113) + SATLiteral(193)))
193 1409 0
113 1409 0
113 193 1408 0
c (( - aux197 + SATLiteral(124) + SATLiteral(135))<=0)
-135 -1411 0
-124 -1411 0
-124 -135 -1412 0
c (0<=( - aux197 + SATLiteral(124) + SATLiteral(135)))
135 1412 0
124 1412 0
124 135 1411 0
c ((SATLiteral(170) - aux198 + SATLiteral(69))<=0)
-69 -1414 0
-170 -1414 0
-170 -69 -1415 0
c (0<=(SATLiteral(170) - aux198 + SATLiteral(69)))
69 1415 0
170 1415 0
170 69 1414 0
c ((aux198 - aux199 + SATLiteral(80))<=0)
1414 -1417 0
1415 -1418 0
-80 -1417 0
-80 1414 -1418 0
-80 1415 -1420 0
c (0<=(aux198 - aux199 + SATLiteral(80)))
-1415 1420 0
-1414 1418 0
80 1420 0
80 -1415 1418 0
80 -1414 1417 0
c ((aux190 + aux196 - aux200)<=0)
1408 -1422 0
1409 -1423 0
1390 -1422 0
1390 1408 -1423 0
1390 1409 -1425 0
1391 -1423 0
1391 1408 -1425 0
1391 1409 -1427 0
c (0<=(aux190 + aux196 - aux200))
-1409 1427 0
-1408 1425 0
-1391 1427 0
-1391 -1409 1425 0
-1391 -1408 1423 0
-1390 1425 0
-1390 -1409 1423 0
-1390 -1408 1422 0
c ((aux191 + aux192 - aux201)<=0)
1396 -1429 0
1397 -1430 0
1393 -1429 0
1393 1396 -1430 0
1393 1397 -1432 0
1394 -1430 0
1394 1396 -1432 0
1394 1397 -1434 0
c (0<=(aux191 + aux192 - aux201))
-1397 1434 0
-1396 1432 0
-1394 1434 0
-1394 -1397 1432 0
-1394 -1396 1430 0
-1393 1432 0
-1393 -1397 1430 0
-1393 -1396 1429 0
c ((aux195 + aux197 - aux202)<=0)
1411 -1436 0
1412 -1437 0
1405 -1436 0
1405 1411 -1437 0
1405 1412 -1439 0
1406 -1437 0
1406 1411 -1439 0
1406 1412 -1441 0
c (0<=(aux195 + aux197 - aux202))
-1412 1441 0
-1411 1439 0
-1406 1441 0
-1406 -1412 1439 0
-1406 -1411 1437 0
-1405 1439 0
-1405 -1412 1437 0
-1405 -1411 1436 0
c ((aux193 + aux194 - aux203)<=0)
1402 -1443 0
1403 -1444 0
1399 -1443 0
1399 1402 -1444 0
1399 1403 -1446 0
1400 -1444 0
1400 1402 -1446 0
1400 1403 -1448 0
c (0<=(aux193 + aux194 - aux203))
-1403 1448 0
-1402 1446 0
-1400 1448 0
-1400 -1403 1446 0
-1400 -1402 1444 0
-1399 1446 0
-1399 -1403 1444 0
-1399 -1402 1443 0
c ((aux199 + aux203 - aux204)<=0)
1443 -1450 0
1444 -1451 0
1446 -1453 0
1448 -1455 0
1417 -1450 0
1417 1443 -1451 0
1417 1444 -1453 0
1417 1446 -1455 0
1417 1448 -1457 0
1418 -1451 0
1418 1443 -1453 0
1418 1444 -1455 0
1418 1446 -1457 0
1418 1448 -1459 0
1420 -1453 0
1420 1443 -1455 0
1420 1444 -1457 0
1420 1446 -1459 0
1420 1448 -1461 0
c (0<=(aux199 + aux203 - aux204))
-1448 1461 0
-1446 1459 0
-1444 1457 0
-1443 1455 0
-1420 1461 0
-1420 -1448 1459 0
-1420 -1446 1457 0
-1420 -1444 1455 0
-1420 -1443 1453 0
-1418 1459 0
-1418 -1448 1457 0
-1418 -1446 1455 0
-1418 -1444 1453 0
-1418 -1443 1451 0
-1417 1457 0
-1417 -1448 1455 0
-1417 -1446 1453 0
-1417 -1444 1451 0
-1417 -1443 1450 0
c ((aux200 + aux201 - aux205)<=0)
1429 -1463 0
1430 -1464 0
1432 -1466 0
1434 -1468 0
1422 -1463 0
1422 1429 -1464 0
1422 1430 -1466 0
1422 1432 -1468 0
1422 1434 -1470 0
1423 -1464 0
1423 1429 -1466 0
1423 1430 -1468 0
1423 1432 -1470 0
1423 1434 -1472 0
1425 -1466 0
1425 1429 -1468 0
1425 1430 -1470 0
1425 1432 -1472 0
1425 1434 -1474 0
1427 -1468 0
1427 1429 -1470 0
1427 1430 -1472 0
1427 1432 -1474 0
1427 1434 -1476 0
c (0<=(aux200 + aux201 - aux205))
-1434 1476 0
-1432 1474 0
-1430 1472 0
-1429 1470 0
-1427 1476 0
-1427 -1434 1474 0
-1427 -1432 1472 0
-1427 -1430 1470 0
-1427 -1429 1468 0
-1425 1474 0
-1425 -1434 1472 0
-1425 -1432 1470 0
-1425 -1430 1468 0
-1425 -1429 1466 0
-1423 1472 0
-1423 -1434 1470 0
-1423 -1432 1468 0
-1423 -1430 1466 0
-1423 -1429 1464 0
-1422 1470 0
-1422 -1434 1468 0
-1422 -1432 1466 0
-1422 -1430 1464 0
-1422 -1429 1463 0
c ((SATLiteral(-146) - aux206 + SATLiteral(-44))<=0)
44 -1478 0
146 -1478 0
146 44 -1479 0
c (0<=(SATLiteral(-146) - aux206 + SATLiteral(-44)))
-44 1479 0
-146 1479 0
-146 -44 1478 0
c ((SATLiteral(-157) - aux207 + SATLiteral(-33))<=0)
33 -1481 0
157 -1481 0
157 33 -1482 0
c (0<=(SATLiteral(-157) - aux207 + SATLiteral(-33)))
-33 1482 0
-157 1482 0
-157 -33 1481 0
c ((SATLiteral(-180) - aux208 + SATLiteral(-22))<=0)
22 -1484 0
180 -1484 0
180 22 -1485 0
c (0<=(SATLiteral(-180) - aux208 + SATLiteral(-22)))
-22 1485 0
-180 1485 0
-180 -22 1484 0
c (( - aux209 + SATLiteral(-90) + SATLiteral(-11))<=0)
11 -1487 0
90 -1487 0
90 11 -1488 0
c (0<=( - aux209 + SATLiteral(-90) + SATLiteral(-11)))
-11 1488 0
-90 1488 0
-90 -11 1487 0
c (( - aux210 + SATLiteral(-101) + SATLiteral(-215))<=0)
215 -1490 0
101 -1490 0
101 215 -1491 0
c (0<=( - aux210 + SATLiteral(-101) + SATLiteral(-215)))
-215 1491 0
-101 1491 0
-101 -215 1490 0
c (( - aux211 + SATLiteral(-57) + SATLiteral(-203))<=0)
203 -1493 0
57 -1493 0
57 203 -1494 0
c (0<=( - aux211 + SATLiteral(-57) + SATLiteral(-203)))
-203 1494 0
-57 1494 0
-57 -203 1493 0
c (( - aux212 + SATLiteral(-112) + SATLiteral(-192))<=0)
192 -1496 0
112 -1496 0
112 192 -1497 0
c (0<=( - aux212 + SATLiteral(-112) + SATLiteral(-192)))
-192 1497 0
-112 1497 0
-112 -192 1496 0
c (( - aux213 + SATLiteral(-123) + SATLiteral(-134))<=0)
134 -1499 0
123 -1499 0
123 134 -1500 0
c (0<=( - aux213 + SATLiteral(-123) + SATLiteral(-134)))
-134 1500 0
-123 1500 0
-123 -134 1499 0
c ((SATLiteral(-169) - aux214 + SATLiteral(-68))<=0)
68 -1502 0
169 -1502 0
169 68 -1503 0
c (0<=(SATLiteral(-169) - aux214 + SATLiteral(-68)))
-68 1503 0
-169 1503 0
-169 -68 1502 0
c ((aux214 - aux215 + SATLiteral(-79))<=0)
1502 -1505 0
1503 -1506 0
79 -1505 0
79 1502 -1506 0
79 1503 -1508 0
c (0<=(aux214 - aux215 + SATLiteral(-79)))
-1503 1508 0
-1502 1506 0
-79 1508 0
-79 -1503 1506 0
-79 -1502 1505 0
c ((aux206 + aux212 - aux216)<=0)
1496 -1510 0
1497 -1511 0
1478 -1510 0
1478 1496 -1511 0
1478 1497 -1513 0
1479 -1511 0
1479 1496 -1513 0
1479 1497 -1515 0
c (0<=(aux206 + aux212 - aux216))
-1497 1515 0
-1496 1513 0
-1479 1515 0
-1479 -1497 1513 0
-1479 -1496 1511 0
-1478 1513 0
-1478 -1497 1511 0
-1478 -1496 1510 0
c ((aux207 + aux208 - aux217)<=0)
1484 -1517 0
1485 -1518 0
1481 -1517 0
1481 1484 -1518 0
1481 1485 -1520 0
1482 -1518 0
1482 1484 -1520 0
1482 1485 -1522 0
c (0<=(aux207 + aux208 - aux217))
-1485 1522 0
-1484 1520 0
-1482 1522 0
-1482 -1485 1520 0
-1482 -1484 1518 0
-1481 1520 0
-1481 -1485 1518 0
-1481 -1484 1517 0
c ((aux211 + aux213 - aux218)<=0)
1499 -1524 0
1500 -1525 0
1493 -1524 0
1493 1499 -1525 0
1493 1500 -1527 0
1494 -1525 0
1494 1499 -1527 0
1494 1500 -1529 0
c (0<=(aux211 + aux213 - aux218))
-1500 1529 0
-1499 1527 0
-1494 1529 0
-1494 -1500 1527 0
-1494 -1499 1525 0
-1493 1527 0
-1493 -1500 1525 0
-1493 -1499 1524 0
c ((aux209 + aux210 - aux219)<=0)
1490 -1531 0
1491 -1532 0
1487 -1531 0
1487 1490 -1532 0
1487 1491 -1534 0
1488 -1532 0
1488 1490 -1534 0
1488 1491 -1536 0
c (0<=(aux209 + aux210 - aux219))
-1491 1536 0
-1490 1534 0
-1488 1536 0
-1488 -1491 1534 0
-1488 -1490 1532 0
-1487 1534 0
-1487 -1491 1532 0
-1487 -1490 1531 0
c ((aux215 + aux219 - aux220)<=0)
1531 -1538 0
1532 -1539 0
1534 -1541 0
1536 -1543 0
1505 -1538 0
1505 1531 -1539 0
1505 1532 -1541 0
1505 1534 -1543 0
1505 1536 -1545 0
1506 -1539 0
1506 1531 -1541 0
1506 1532 -1543 0
1506 1534 -1545 0
1506 1536 -1547 0
1508 -1541 0
1508 1531 -1543 0
1508 1532 -1545 0
1508 1534 -1547 0
1508 1536 -1549 0
c (0<=(aux215 + aux219 - aux220))
-1536 1549 0
-1534 1547 0
-1532 1545 0
-1531 1543 0
-1508 1549 0
-1508 -1536 1547 0
-1508 -1534 1545 0
-1508 -1532 1543 0
-1508 -1531 1541 0
-1506 1547 0
-1506 -1536 1545 0
-1506 -1534 1543 0
-1506 -1532 1541 0
-1506 -1531 1539 0
-1505 1545 0
-1505 -1536 1543 0
-1505 -1534 1541 0
-1505 -1532 1539 0
-1505 -1531 1538 0
c ((aux216 + aux217 - aux221)<=0)
1517 -1551 0
1518 -1552 0
1520 -1554 0
1522 -1556 0
1510 -1551 0
1510 1517 -1552 0
1510 1518 -1554 0
1510 1520 -1556 0
1510 1522 -1558 0
1511 -1552 0
1511 1517 -1554 0
1511 1518 -1556 0
1511 1520 -1558 0
1511 1522 -1560 0
1513 -1554 0
1513 1517 -1556 0
1513 1518 -1558 0
1513 1520 -1560 0
1513 1522 -1562 0
1515 -1556 0
1515 1517 -1558 0
1515 1518 -1560 0
1515 1520 -1562 0
1515 1522 -1564 0
c (0<=(aux216 + aux217 - aux221))
-1522 1564 0
-1520 1562 0
-1518 1560 0
-1517 1558 0
-1515 1564 0
-1515 -1522 1562 0
-1515 -1520 1560 0
-1515 -1518 1558 0
-1515 -1517 1556 0
-1513 1562 0
-1513 -1522 1560 0
-1513 -1520 1558 0
-1513 -1518 1556 0
-1513 -1517 1554 0
-1511 1560 0
-1511 -1522 1558 0
-1511 -1520 1556 0
-1511 -1518 1554 0
-1511 -1517 1552 0
-1510 1558 0
-1510 -1522 1556 0
-1510 -1520 1554 0
-1510 -1518 1552 0
-1510 -1517 1551 0
c ((SATLiteral(-103) - aux228 + SATLiteral(-48))<=0)
48 -1584 0
103 -1584 0
103 48 -1585 0
c (0<=(SATLiteral(-103) - aux228 + SATLiteral(-48)))
-48 1585 0
-103 1585 0
-103 -48 1584 0
c (( - aux229 + SATLiteral(-148) + SATLiteral(-13))<=0)
13 -1587 0
148 -1587 0
148 13 -1588 0
c (0<=( - aux229 + SATLiteral(-148) + SATLiteral(-13)))
-13 1588 0
-148 1588 0
-148 -13 1587 0
c ((SATLiteral(-103) - aux232 + SATLiteral(-48))<=0)
48 -1596 0
103 -1596 0
103 48 -1597 0
c (0<=(SATLiteral(-103) - aux232 + SATLiteral(-48)))
-48 1597 0
-103 1597 0
-103 -48 1596 0
c (( - aux233 + SATLiteral(-148) + SATLiteral(-13))<=0)
13 -1599 0
148 -1599 0
148 13 -1600 0
c (0<=( - aux233 + SATLiteral(-148) + SATLiteral(-13)))
-13 1600 0
-148 1600 0
-148 -13 1599 0
