p cnf 1704 6335                                                                                     

1 0
c Encoding variable: grid_00000_00000 with domain: int(0..7) (representing constraint )
c Both direct and order encoding.
c Var 'grid_00000_00000' order represents '0' with '2'
c Var 'grid_00000_00000' direct represents '0' with '2'
c Var 'grid_00000_00000' order represents '1' with '3'
-2 3 0
c Var 'grid_00000_00000' direct represents '1' with '4'
2 -3 4 0
-4 3 0
-4 -2 0
c Var 'grid_00000_00000' order represents '2' with '5'
-3 5 0
c Var 'grid_00000_00000' direct represents '2' with '6'
3 -5 6 0
-6 5 0
-6 -3 0
c Var 'grid_00000_00000' order represents '3' with '7'
-5 7 0
c Var 'grid_00000_00000' direct represents '3' with '8'
5 -7 8 0
-8 7 0
-8 -5 0
c Var 'grid_00000_00000' order represents '4' with '9'
-7 9 0
c Var 'grid_00000_00000' direct represents '4' with '10'
7 -9 10 0
-10 9 0
-10 -7 0
c Var 'grid_00000_00000' order represents '5' with '11'
-9 11 0
c Var 'grid_00000_00000' direct represents '5' with '12'
9 -11 12 0
-12 11 0
-12 -9 0
c Var 'grid_00000_00000' order represents '6' with '13'
-11 13 0
c Var 'grid_00000_00000' direct represents '6' with '14'
11 -13 14 0
-14 13 0
-14 -11 0
c Var 'grid_00000_00000' direct represents '7' with '-13'
2 4 6 8 10 12 14 -13 0
c Encoding variable: grid_00000_00001 with domain: int(0..7) (representing constraint )
c Both direct and order encoding.
c Var 'grid_00000_00001' order represents '0' with '15'
c Var 'grid_00000_00001' direct represents '0' with '15'
c Var 'grid_00000_00001' order represents '1' with '16'
-15 16 0
c Var 'grid_00000_00001' direct represents '1' with '17'
15 -16 17 0
-17 16 0
-17 -15 0
c Var 'grid_00000_00001' order represents '2' with '18'
-16 18 0
c Var 'grid_00000_00001' direct represents '2' with '19'
16 -18 19 0
-19 18 0
-19 -16 0
c Var 'grid_00000_00001' order represents '3' with '20'
-18 20 0
c Var 'grid_00000_00001' direct represents '3' with '21'
18 -20 21 0
-21 20 0
-21 -18 0
c Var 'grid_00000_00001' order represents '4' with '22'
-20 22 0
c Var 'grid_00000_00001' direct represents '4' with '23'
20 -22 23 0
-23 22 0
-23 -20 0
c Var 'grid_00000_00001' order represents '5' with '24'
-22 24 0
c Var 'grid_00000_00001' direct represents '5' with '25'
22 -24 25 0
-25 24 0
-25 -22 0
c Var 'grid_00000_00001' order represents '6' with '26'
-24 26 0
c Var 'grid_00000_00001' direct represents '6' with '27'
24 -26 27 0
-27 26 0
-27 -24 0
c Var 'grid_00000_00001' direct represents '7' with '-26'
15 17 19 21 23 25 27 -26 0
c Encoding variable: grid_00000_00002 with domain: int(0..7) (representing constraint )
c Both direct and order encoding.
c Var 'grid_00000_00002' order represents '0' with '28'
c Var 'grid_00000_00002' direct represents '0' with '28'
c Var 'grid_00000_00002' order represents '1' with '29'
-28 29 0
c Var 'grid_00000_00002' direct represents '1' with '30'
28 -29 30 0
-30 29 0
-30 -28 0
c Var 'grid_00000_00002' order represents '2' with '31'
-29 31 0
c Var 'grid_00000_00002' direct represents '2' with '32'
29 -31 32 0
-32 31 0
-32 -29 0
c Var 'grid_00000_00002' order represents '3' with '33'
-31 33 0
c Var 'grid_00000_00002' direct represents '3' with '34'
31 -33 34 0
-34 33 0
-34 -31 0
c Var 'grid_00000_00002' order represents '4' with '35'
-33 35 0
c Var 'grid_00000_00002' direct represents '4' with '36'
33 -35 36 0
-36 35 0
-36 -33 0
c Var 'grid_00000_00002' order represents '5' with '37'
-35 37 0
c Var 'grid_00000_00002' direct represents '5' with '38'
35 -37 38 0
-38 37 0
-38 -35 0
c Var 'grid_00000_00002' order represents '6' with '39'
-37 39 0
c Var 'grid_00000_00002' direct represents '6' with '40'
37 -39 40 0
-40 39 0
-40 -37 0
c Var 'grid_00000_00002' direct represents '7' with '-39'
28 30 32 34 36 38 40 -39 0
c Encoding variable: grid_00000_00003 with domain: int(0..7) (representing constraint )
c Both direct and order encoding.
c Var 'grid_00000_00003' order represents '0' with '41'
c Var 'grid_00000_00003' direct represents '0' with '41'
c Var 'grid_00000_00003' order represents '1' with '42'
-41 42 0
c Var 'grid_00000_00003' direct represents '1' with '43'
41 -42 43 0
-43 42 0
-43 -41 0
c Var 'grid_00000_00003' order represents '2' with '44'
-42 44 0
c Var 'grid_00000_00003' direct represents '2' with '45'
42 -44 45 0
-45 44 0
-45 -42 0
c Var 'grid_00000_00003' order represents '3' with '46'
-44 46 0
c Var 'grid_00000_00003' direct represents '3' with '47'
44 -46 47 0
-47 46 0
-47 -44 0
c Var 'grid_00000_00003' order represents '4' with '48'
-46 48 0
c Var 'grid_00000_00003' direct represents '4' with '49'
46 -48 49 0
-49 48 0
-49 -46 0
c Var 'grid_00000_00003' order represents '5' with '50'
-48 50 0
c Var 'grid_00000_00003' direct represents '5' with '51'
48 -50 51 0
-51 50 0
-51 -48 0
c Var 'grid_00000_00003' order represents '6' with '52'
-50 52 0
c Var 'grid_00000_00003' direct represents '6' with '53'
50 -52 53 0
-53 52 0
-53 -50 0
c Var 'grid_00000_00003' direct represents '7' with '-52'
41 43 45 47 49 51 53 -52 0
c Encoding variable: grid_00000_00004 with domain: int(-1) (representing constraint )
c Var 'grid_00000_00004' direct represents '-1' with '54'
54 0
c Encoding variable: grid_00001_00000 with domain: int(-4) (representing constraint )
c Var 'grid_00001_00000' direct represents '-4' with '55'
55 0
c Encoding variable: grid_00001_00001 with domain: int(0..7) (representing constraint )
c Both direct and order encoding.
c Var 'grid_00001_00001' order represents '0' with '56'
c Var 'grid_00001_00001' direct represents '0' with '56'
c Var 'grid_00001_00001' order represents '1' with '57'
-56 57 0
c Var 'grid_00001_00001' direct represents '1' with '58'
56 -57 58 0
-58 57 0
-58 -56 0
c Var 'grid_00001_00001' order represents '2' with '59'
-57 59 0
c Var 'grid_00001_00001' direct represents '2' with '60'
57 -59 60 0
-60 59 0
-60 -57 0
c Var 'grid_00001_00001' order represents '3' with '61'
-59 61 0
c Var 'grid_00001_00001' direct represents '3' with '62'
59 -61 62 0
-62 61 0
-62 -59 0
c Var 'grid_00001_00001' order represents '4' with '63'
-61 63 0
c Var 'grid_00001_00001' direct represents '4' with '64'
61 -63 64 0
-64 63 0
-64 -61 0
c Var 'grid_00001_00001' order represents '5' with '65'
-63 65 0
c Var 'grid_00001_00001' direct represents '5' with '66'
63 -65 66 0
-66 65 0
-66 -63 0
c Var 'grid_00001_00001' order represents '6' with '67'
-65 67 0
c Var 'grid_00001_00001' direct represents '6' with '68'
65 -67 68 0
-68 67 0
-68 -65 0
c Var 'grid_00001_00001' direct represents '7' with '-67'
56 58 60 62 64 66 68 -67 0
c Encoding variable: grid_00001_00002 with domain: int(0..7) (representing constraint )
c Both direct and order encoding.
c Var 'grid_00001_00002' order represents '0' with '69'
c Var 'grid_00001_00002' direct represents '0' with '69'
c Var 'grid_00001_00002' order represents '1' with '70'
-69 70 0
c Var 'grid_00001_00002' direct represents '1' with '71'
69 -70 71 0
-71 70 0
-71 -69 0
c Var 'grid_00001_00002' order represents '2' with '72'
-70 72 0
c Var 'grid_00001_00002' direct represents '2' with '73'
70 -72 73 0
-73 72 0
-73 -70 0
c Var 'grid_00001_00002' order represents '3' with '74'
-72 74 0
c Var 'grid_00001_00002' direct represents '3' with '75'
72 -74 75 0
-75 74 0
-75 -72 0
c Var 'grid_00001_00002' order represents '4' with '76'
-74 76 0
c Var 'grid_00001_00002' direct represents '4' with '77'
74 -76 77 0
-77 76 0
-77 -74 0
c Var 'grid_00001_00002' order represents '5' with '78'
-76 78 0
c Var 'grid_00001_00002' direct represents '5' with '79'
76 -78 79 0
-79 78 0
-79 -76 0
c Var 'grid_00001_00002' order represents '6' with '80'
-78 80 0
c Var 'grid_00001_00002' direct represents '6' with '81'
78 -80 81 0
-81 80 0
-81 -78 0
c Var 'grid_00001_00002' direct represents '7' with '-80'
69 71 73 75 77 79 81 -80 0
c Encoding variable: grid_00001_00003 with domain: int(0..7) (representing constraint )
c Both direct and order encoding.
c Var 'grid_00001_00003' order represents '0' with '82'
c Var 'grid_00001_00003' direct represents '0' with '82'
c Var 'grid_00001_00003' order represents '1' with '83'
-82 83 0
c Var 'grid_00001_00003' direct represents '1' with '84'
82 -83 84 0
-84 83 0
-84 -82 0
c Var 'grid_00001_00003' order represents '2' with '85'
-83 85 0
c Var 'grid_00001_00003' direct represents '2' with '86'
83 -85 86 0
-86 85 0
-86 -83 0
c Var 'grid_00001_00003' order represents '3' with '87'
-85 87 0
c Var 'grid_00001_00003' direct represents '3' with '88'
85 -87 88 0
-88 87 0
-88 -85 0
c Var 'grid_00001_00003' order represents '4' with '89'
-87 89 0
c Var 'grid_00001_00003' direct represents '4' with '90'
87 -89 90 0
-90 89 0
-90 -87 0
c Var 'grid_00001_00003' order represents '5' with '91'
-89 91 0
c Var 'grid_00001_00003' direct represents '5' with '92'
89 -91 92 0
-92 91 0
-92 -89 0
c Var 'grid_00001_00003' order represents '6' with '93'
-91 93 0
c Var 'grid_00001_00003' direct represents '6' with '94'
91 -93 94 0
-94 93 0
-94 -91 0
c Var 'grid_00001_00003' direct represents '7' with '-93'
82 84 86 88 90 92 94 -93 0
c Encoding variable: grid_00001_00004 with domain: int(0..7) (representing constraint )
c Both direct and order encoding.
c Var 'grid_00001_00004' order represents '0' with '95'
c Var 'grid_00001_00004' direct represents '0' with '95'
c Var 'grid_00001_00004' order represents '1' with '96'
-95 96 0
c Var 'grid_00001_00004' direct represents '1' with '97'
95 -96 97 0
-97 96 0
-97 -95 0
c Var 'grid_00001_00004' order represents '2' with '98'
-96 98 0
c Var 'grid_00001_00004' direct represents '2' with '99'
96 -98 99 0
-99 98 0
-99 -96 0
c Var 'grid_00001_00004' order represents '3' with '100'
-98 100 0
c Var 'grid_00001_00004' direct represents '3' with '101'
98 -100 101 0
-101 100 0
-101 -98 0
c Var 'grid_00001_00004' order represents '4' with '102'
-100 102 0
c Var 'grid_00001_00004' direct represents '4' with '103'
100 -102 103 0
-103 102 0
-103 -100 0
c Var 'grid_00001_00004' order represents '5' with '104'
-102 104 0
c Var 'grid_00001_00004' direct represents '5' with '105'
102 -104 105 0
-105 104 0
-105 -102 0
c Var 'grid_00001_00004' order represents '6' with '106'
-104 106 0
c Var 'grid_00001_00004' direct represents '6' with '107'
104 -106 107 0
-107 106 0
-107 -104 0
c Var 'grid_00001_00004' direct represents '7' with '-106'
95 97 99 101 103 105 107 -106 0
c Encoding variable: grid_00002_00000 with domain: int(-3) (representing constraint )
c Var 'grid_00002_00000' direct represents '-3' with '108'
108 0
c Encoding variable: grid_00002_00001 with domain: int(0..7) (representing constraint )
c Both direct and order encoding.
c Var 'grid_00002_00001' order represents '0' with '109'
c Var 'grid_00002_00001' direct represents '0' with '109'
c Var 'grid_00002_00001' order represents '1' with '110'
-109 110 0
c Var 'grid_00002_00001' direct represents '1' with '111'
109 -110 111 0
-111 110 0
-111 -109 0
c Var 'grid_00002_00001' order represents '2' with '112'
-110 112 0
c Var 'grid_00002_00001' direct represents '2' with '113'
110 -112 113 0
-113 112 0
-113 -110 0
c Var 'grid_00002_00001' order represents '3' with '114'
-112 114 0
c Var 'grid_00002_00001' direct represents '3' with '115'
112 -114 115 0
-115 114 0
-115 -112 0
c Var 'grid_00002_00001' order represents '4' with '116'
-114 116 0
c Var 'grid_00002_00001' direct represents '4' with '117'
114 -116 117 0
-117 116 0
-117 -114 0
c Var 'grid_00002_00001' order represents '5' with '118'
-116 118 0
c Var 'grid_00002_00001' direct represents '5' with '119'
116 -118 119 0
-119 118 0
-119 -116 0
c Var 'grid_00002_00001' order represents '6' with '120'
-118 120 0
c Var 'grid_00002_00001' direct represents '6' with '121'
118 -120 121 0
-121 120 0
-121 -118 0
c Var 'grid_00002_00001' direct represents '7' with '-120'
109 111 113 115 117 119 121 -120 0
c Encoding variable: grid_00002_00002 with domain: int(-2) (representing constraint )
c Var 'grid_00002_00002' direct represents '-2' with '122'
122 0
c Encoding variable: grid_00002_00003 with domain: int(0..7) (representing constraint )
c Both direct and order encoding.
c Var 'grid_00002_00003' order represents '0' with '123'
c Var 'grid_00002_00003' direct represents '0' with '123'
c Var 'grid_00002_00003' order represents '1' with '124'
-123 124 0
c Var 'grid_00002_00003' direct represents '1' with '125'
123 -124 125 0
-125 124 0
-125 -123 0
c Var 'grid_00002_00003' order represents '2' with '126'
-124 126 0
c Var 'grid_00002_00003' direct represents '2' with '127'
124 -126 127 0
-127 126 0
-127 -124 0
c Var 'grid_00002_00003' order represents '3' with '128'
-126 128 0
c Var 'grid_00002_00003' direct represents '3' with '129'
126 -128 129 0
-129 128 0
-129 -126 0
c Var 'grid_00002_00003' order represents '4' with '130'
-128 130 0
c Var 'grid_00002_00003' direct represents '4' with '131'
128 -130 131 0
-131 130 0
-131 -128 0
c Var 'grid_00002_00003' order represents '5' with '132'
-130 132 0
c Var 'grid_00002_00003' direct represents '5' with '133'
130 -132 133 0
-133 132 0
-133 -130 0
c Var 'grid_00002_00003' order represents '6' with '134'
-132 134 0
c Var 'grid_00002_00003' direct represents '6' with '135'
132 -134 135 0
-135 134 0
-135 -132 0
c Var 'grid_00002_00003' direct represents '7' with '-134'
123 125 127 129 131 133 135 -134 0
c Encoding variable: grid_00002_00004 with domain: int(0..7) (representing constraint )
c Both direct and order encoding.
c Var 'grid_00002_00004' order represents '0' with '136'
c Var 'grid_00002_00004' direct represents '0' with '136'
c Var 'grid_00002_00004' order represents '1' with '137'
-136 137 0
c Var 'grid_00002_00004' direct represents '1' with '138'
136 -137 138 0
-138 137 0
-138 -136 0
c Var 'grid_00002_00004' order represents '2' with '139'
-137 139 0
c Var 'grid_00002_00004' direct represents '2' with '140'
137 -139 140 0
-140 139 0
-140 -137 0
c Var 'grid_00002_00004' order represents '3' with '141'
-139 141 0
c Var 'grid_00002_00004' direct represents '3' with '142'
139 -141 142 0
-142 141 0
-142 -139 0
c Var 'grid_00002_00004' order represents '4' with '143'
-141 143 0
c Var 'grid_00002_00004' direct represents '4' with '144'
141 -143 144 0
-144 143 0
-144 -141 0
c Var 'grid_00002_00004' order represents '5' with '145'
-143 145 0
c Var 'grid_00002_00004' direct represents '5' with '146'
143 -145 146 0
-146 145 0
-146 -143 0
c Var 'grid_00002_00004' order represents '6' with '147'
-145 147 0
c Var 'grid_00002_00004' direct represents '6' with '148'
145 -147 148 0
-148 147 0
-148 -145 0
c Var 'grid_00002_00004' direct represents '7' with '-147'
136 138 140 142 144 146 148 -147 0
c Encoding variable: grid_00003_00000 with domain: int(-5) (representing constraint )
c Var 'grid_00003_00000' direct represents '-5' with '149'
149 0
c Encoding variable: grid_00003_00001 with domain: int(0..7) (representing constraint )
c Both direct and order encoding.
c Var 'grid_00003_00001' order represents '0' with '150'
c Var 'grid_00003_00001' direct represents '0' with '150'
c Var 'grid_00003_00001' order represents '1' with '151'
-150 151 0
c Var 'grid_00003_00001' direct represents '1' with '152'
150 -151 152 0
-152 151 0
-152 -150 0
c Var 'grid_00003_00001' order represents '2' with '153'
-151 153 0
c Var 'grid_00003_00001' direct represents '2' with '154'
151 -153 154 0
-154 153 0
-154 -151 0
c Var 'grid_00003_00001' order represents '3' with '155'
-153 155 0
c Var 'grid_00003_00001' direct represents '3' with '156'
153 -155 156 0
-156 155 0
-156 -153 0
c Var 'grid_00003_00001' order represents '4' with '157'
-155 157 0
c Var 'grid_00003_00001' direct represents '4' with '158'
155 -157 158 0
-158 157 0
-158 -155 0
c Var 'grid_00003_00001' order represents '5' with '159'
-157 159 0
c Var 'grid_00003_00001' direct represents '5' with '160'
157 -159 160 0
-160 159 0
-160 -157 0
c Var 'grid_00003_00001' order represents '6' with '161'
-159 161 0
c Var 'grid_00003_00001' direct represents '6' with '162'
159 -161 162 0
-162 161 0
-162 -159 0
c Var 'grid_00003_00001' direct represents '7' with '-161'
150 152 154 156 158 160 162 -161 0
c Encoding variable: grid_00003_00002 with domain: int(0..7) (representing constraint )
c Both direct and order encoding.
c Var 'grid_00003_00002' order represents '0' with '163'
c Var 'grid_00003_00002' direct represents '0' with '163'
c Var 'grid_00003_00002' order represents '1' with '164'
-163 164 0
c Var 'grid_00003_00002' direct represents '1' with '165'
163 -164 165 0
-165 164 0
-165 -163 0
c Var 'grid_00003_00002' order represents '2' with '166'
-164 166 0
c Var 'grid_00003_00002' direct represents '2' with '167'
164 -166 167 0
-167 166 0
-167 -164 0
c Var 'grid_00003_00002' order represents '3' with '168'
-166 168 0
c Var 'grid_00003_00002' direct represents '3' with '169'
166 -168 169 0
-169 168 0
-169 -166 0
c Var 'grid_00003_00002' order represents '4' with '170'
-168 170 0
c Var 'grid_00003_00002' direct represents '4' with '171'
168 -170 171 0
-171 170 0
-171 -168 0
c Var 'grid_00003_00002' order represents '5' with '172'
-170 172 0
c Var 'grid_00003_00002' direct represents '5' with '173'
170 -172 173 0
-173 172 0
-173 -170 0
c Var 'grid_00003_00002' order represents '6' with '174'
-172 174 0
c Var 'grid_00003_00002' direct represents '6' with '175'
172 -174 175 0
-175 174 0
-175 -172 0
c Var 'grid_00003_00002' direct represents '7' with '-174'
163 165 167 169 171 173 175 -174 0
c Encoding variable: grid_00003_00003 with domain: int(0..7) (representing constraint )
c Both direct and order encoding.
c Var 'grid_00003_00003' order represents '0' with '176'
c Var 'grid_00003_00003' direct represents '0' with '176'
c Var 'grid_00003_00003' order represents '1' with '177'
-176 177 0
c Var 'grid_00003_00003' direct represents '1' with '178'
176 -177 178 0
-178 177 0
-178 -176 0
c Var 'grid_00003_00003' order represents '2' with '179'
-177 179 0
c Var 'grid_00003_00003' direct represents '2' with '180'
177 -179 180 0
-180 179 0
-180 -177 0
c Var 'grid_00003_00003' order represents '3' with '181'
-179 181 0
c Var 'grid_00003_00003' direct represents '3' with '182'
179 -181 182 0
-182 181 0
-182 -179 0
c Var 'grid_00003_00003' order represents '4' with '183'
-181 183 0
c Var 'grid_00003_00003' direct represents '4' with '184'
181 -183 184 0
-184 183 0
-184 -181 0
c Var 'grid_00003_00003' order represents '5' with '185'
-183 185 0
c Var 'grid_00003_00003' direct represents '5' with '186'
183 -185 186 0
-186 185 0
-186 -183 0
c Var 'grid_00003_00003' order represents '6' with '187'
-185 187 0
c Var 'grid_00003_00003' direct represents '6' with '188'
185 -187 188 0
-188 187 0
-188 -185 0
c Var 'grid_00003_00003' direct represents '7' with '-187'
176 178 180 182 184 186 188 -187 0
c Encoding variable: grid_00003_00004 with domain: int(-7) (representing constraint )
c Var 'grid_00003_00004' direct represents '-7' with '189'
189 0
c Encoding variable: grid_00004_00000 with domain: int(0..7) (representing constraint )
c Both direct and order encoding.
c Var 'grid_00004_00000' order represents '0' with '190'
c Var 'grid_00004_00000' direct represents '0' with '190'
c Var 'grid_00004_00000' order represents '1' with '191'
-190 191 0
c Var 'grid_00004_00000' direct represents '1' with '192'
190 -191 192 0
-192 191 0
-192 -190 0
c Var 'grid_00004_00000' order represents '2' with '193'
-191 193 0
c Var 'grid_00004_00000' direct represents '2' with '194'
191 -193 194 0
-194 193 0
-194 -191 0
c Var 'grid_00004_00000' order represents '3' with '195'
-193 195 0
c Var 'grid_00004_00000' direct represents '3' with '196'
193 -195 196 0
-196 195 0
-196 -193 0
c Var 'grid_00004_00000' order represents '4' with '197'
-195 197 0
c Var 'grid_00004_00000' direct represents '4' with '198'
195 -197 198 0
-198 197 0
-198 -195 0
c Var 'grid_00004_00000' order represents '5' with '199'
-197 199 0
c Var 'grid_00004_00000' direct represents '5' with '200'
197 -199 200 0
-200 199 0
-200 -197 0
c Var 'grid_00004_00000' order represents '6' with '201'
-199 201 0
c Var 'grid_00004_00000' direct represents '6' with '202'
199 -201 202 0
-202 201 0
-202 -199 0
c Var 'grid_00004_00000' direct represents '7' with '-201'
190 192 194 196 198 200 202 -201 0
c Encoding variable: grid_00004_00001 with domain: int(0..7) (representing constraint )
c Both direct and order encoding.
c Var 'grid_00004_00001' order represents '0' with '203'
c Var 'grid_00004_00001' direct represents '0' with '203'
c Var 'grid_00004_00001' order represents '1' with '204'
-203 204 0
c Var 'grid_00004_00001' direct represents '1' with '205'
203 -204 205 0
-205 204 0
-205 -203 0
c Var 'grid_00004_00001' order represents '2' with '206'
-204 206 0
c Var 'grid_00004_00001' direct represents '2' with '207'
204 -206 207 0
-207 206 0
-207 -204 0
c Var 'grid_00004_00001' order represents '3' with '208'
-206 208 0
c Var 'grid_00004_00001' direct represents '3' with '209'
206 -208 209 0
-209 208 0
-209 -206 0
c Var 'grid_00004_00001' order represents '4' with '210'
-208 210 0
c Var 'grid_00004_00001' direct represents '4' with '211'
208 -210 211 0
-211 210 0
-211 -208 0
c Var 'grid_00004_00001' order represents '5' with '212'
-210 212 0
c Var 'grid_00004_00001' direct represents '5' with '213'
210 -212 213 0
-213 212 0
-213 -210 0
c Var 'grid_00004_00001' order represents '6' with '214'
-212 214 0
c Var 'grid_00004_00001' direct represents '6' with '215'
212 -214 215 0
-215 214 0
-215 -212 0
c Var 'grid_00004_00001' direct represents '7' with '-214'
203 205 207 209 211 213 215 -214 0
c Encoding variable: grid_00004_00002 with domain: int(0..7) (representing constraint )
c Both direct and order encoding.
c Var 'grid_00004_00002' order represents '0' with '216'
c Var 'grid_00004_00002' direct represents '0' with '216'
c Var 'grid_00004_00002' order represents '1' with '217'
-216 217 0
c Var 'grid_00004_00002' direct represents '1' with '218'
216 -217 218 0
-218 217 0
-218 -216 0
c Var 'grid_00004_00002' order represents '2' with '219'
-217 219 0
c Var 'grid_00004_00002' direct represents '2' with '220'
217 -219 220 0
-220 219 0
-220 -217 0
c Var 'grid_00004_00002' order represents '3' with '221'
-219 221 0
c Var 'grid_00004_00002' direct represents '3' with '222'
219 -221 222 0
-222 221 0
-222 -219 0
c Var 'grid_00004_00002' order represents '4' with '223'
-221 223 0
c Var 'grid_00004_00002' direct represents '4' with '224'
221 -223 224 0
-224 223 0
-224 -221 0
c Var 'grid_00004_00002' order represents '5' with '225'
-223 225 0
c Var 'grid_00004_00002' direct represents '5' with '226'
223 -225 226 0
-226 225 0
-226 -223 0
c Var 'grid_00004_00002' order represents '6' with '227'
-225 227 0
c Var 'grid_00004_00002' direct represents '6' with '228'
225 -227 228 0
-228 227 0
-228 -225 0
c Var 'grid_00004_00002' direct represents '7' with '-227'
216 218 220 222 224 226 228 -227 0
c Encoding variable: grid_00004_00003 with domain: int(-6) (representing constraint )
c Var 'grid_00004_00003' direct represents '-6' with '229'
229 0
c Encoding variable: grid_00004_00004 with domain: int(0..7) (representing constraint )
c Both direct and order encoding.
c Var 'grid_00004_00004' order represents '0' with '230'
c Var 'grid_00004_00004' direct represents '0' with '230'
c Var 'grid_00004_00004' order represents '1' with '231'
-230 231 0
c Var 'grid_00004_00004' direct represents '1' with '232'
230 -231 232 0
-232 231 0
-232 -230 0
c Var 'grid_00004_00004' order represents '2' with '233'
-231 233 0
c Var 'grid_00004_00004' direct represents '2' with '234'
231 -233 234 0
-234 233 0
-234 -231 0
c Var 'grid_00004_00004' order represents '3' with '235'
-233 235 0
c Var 'grid_00004_00004' direct represents '3' with '236'
233 -235 236 0
-236 235 0
-236 -233 0
c Var 'grid_00004_00004' order represents '4' with '237'
-235 237 0
c Var 'grid_00004_00004' direct represents '4' with '238'
235 -237 238 0
-238 237 0
-238 -235 0
c Var 'grid_00004_00004' order represents '5' with '239'
-237 239 0
c Var 'grid_00004_00004' direct represents '5' with '240'
237 -239 240 0
-240 239 0
-240 -237 0
c Var 'grid_00004_00004' order represents '6' with '241'
-239 241 0
c Var 'grid_00004_00004' direct represents '6' with '242'
239 -241 242 0
-242 241 0
-242 -239 0
c Var 'grid_00004_00004' direct represents '7' with '-241'
230 232 234 236 238 240 242 -241 0
c Encoding variable: adj_00000_00000_n00001_n00001 with domain: bool (representing constraint )
c Var 'adj_00000_00000_n00001_n00001' direct represents '0' with '-243'
c Var 'adj_00000_00000_n00001_n00001' direct represents '1' with '243'
c Var 'adj_00000_00000_n00001_n00001' order represents '1' with '1'
c Var 'adj_00000_00000_n00001_n00001' order represents '0' with '-243'
243 -243 0
c Encoding variable: adj_00000_00000_n00001_00000 with domain: bool (representing constraint )
c Var 'adj_00000_00000_n00001_00000' direct represents '0' with '-244'
c Var 'adj_00000_00000_n00001_00000' direct represents '1' with '244'
c Var 'adj_00000_00000_n00001_00000' order represents '1' with '1'
c Var 'adj_00000_00000_n00001_00000' order represents '0' with '-244'
244 -244 0
c Encoding variable: adj_00000_00000_n00001_00001 with domain: bool (representing constraint )
c Var 'adj_00000_00000_n00001_00001' direct represents '0' with '-245'
c Var 'adj_00000_00000_n00001_00001' direct represents '1' with '245'
c Var 'adj_00000_00000_n00001_00001' order represents '1' with '1'
c Var 'adj_00000_00000_n00001_00001' order represents '0' with '-245'
245 -245 0
c Encoding variable: adj_00000_00000_00000_n00001 with domain: bool (representing constraint )
c Var 'adj_00000_00000_00000_n00001' direct represents '0' with '-246'
c Var 'adj_00000_00000_00000_n00001' direct represents '1' with '246'
c Var 'adj_00000_00000_00000_n00001' order represents '1' with '1'
c Var 'adj_00000_00000_00000_n00001' order represents '0' with '-246'
246 -246 0
c Encoding variable: adj_00000_00000_00000_00000 with domain: bool (representing constraint )
c Var 'adj_00000_00000_00000_00000' direct represents '0' with '-247'
c Var 'adj_00000_00000_00000_00000' direct represents '1' with '247'
c Var 'adj_00000_00000_00000_00000' order represents '1' with '1'
c Var 'adj_00000_00000_00000_00000' order represents '0' with '-247'
247 -247 0
c Encoding variable: adj_00000_00000_00000_00001 with domain: bool (representing constraint )
c Var 'adj_00000_00000_00000_00001' direct represents '0' with '-248'
c Var 'adj_00000_00000_00000_00001' direct represents '1' with '248'
c Var 'adj_00000_00000_00000_00001' order represents '1' with '1'
c Var 'adj_00000_00000_00000_00001' order represents '0' with '-248'
248 -248 0
c Encoding variable: adj_00000_00000_00001_n00001 with domain: bool (representing constraint )
c Var 'adj_00000_00000_00001_n00001' direct represents '0' with '-249'
c Var 'adj_00000_00000_00001_n00001' direct represents '1' with '249'
c Var 'adj_00000_00000_00001_n00001' order represents '1' with '1'
c Var 'adj_00000_00000_00001_n00001' order represents '0' with '-249'
249 -249 0
c Encoding variable: adj_00000_00000_00001_00000 with domain: bool (representing constraint )
c Var 'adj_00000_00000_00001_00000' direct represents '0' with '-250'
c Var 'adj_00000_00000_00001_00000' direct represents '1' with '250'
c Var 'adj_00000_00000_00001_00000' order represents '1' with '1'
c Var 'adj_00000_00000_00001_00000' order represents '0' with '-250'
250 -250 0
c Encoding variable: adj_00000_00000_00001_00001 with domain: bool (representing constraint )
c Var 'adj_00000_00000_00001_00001' direct represents '0' with '-251'
c Var 'adj_00000_00000_00001_00001' direct represents '1' with '251'
c Var 'adj_00000_00000_00001_00001' order represents '1' with '1'
c Var 'adj_00000_00000_00001_00001' order represents '0' with '-251'
c Encoding variable: adj_00000_00001_n00001_n00001 with domain: bool (representing constraint )
c Var 'adj_00000_00001_n00001_n00001' direct represents '0' with '-252'
c Var 'adj_00000_00001_n00001_n00001' direct represents '1' with '252'
c Var 'adj_00000_00001_n00001_n00001' order represents '1' with '1'
c Var 'adj_00000_00001_n00001_n00001' order represents '0' with '-252'
252 -252 0
c Encoding variable: adj_00000_00001_n00001_00000 with domain: bool (representing constraint )
c Var 'adj_00000_00001_n00001_00000' direct represents '0' with '-253'
c Var 'adj_00000_00001_n00001_00000' direct represents '1' with '253'
c Var 'adj_00000_00001_n00001_00000' order represents '1' with '1'
c Var 'adj_00000_00001_n00001_00000' order represents '0' with '-253'
253 -253 0
c Encoding variable: adj_00000_00001_n00001_00001 with domain: bool (representing constraint )
c Var 'adj_00000_00001_n00001_00001' direct represents '0' with '-254'
c Var 'adj_00000_00001_n00001_00001' direct represents '1' with '254'
c Var 'adj_00000_00001_n00001_00001' order represents '1' with '1'
c Var 'adj_00000_00001_n00001_00001' order represents '0' with '-254'
254 -254 0
c Encoding variable: adj_00000_00001_00000_n00001 with domain: bool (representing constraint )
c Var 'adj_00000_00001_00000_n00001' direct represents '0' with '-255'
c Var 'adj_00000_00001_00000_n00001' direct represents '1' with '255'
c Var 'adj_00000_00001_00000_n00001' order represents '1' with '1'
c Var 'adj_00000_00001_00000_n00001' order represents '0' with '-255'
c Encoding variable: adj_00000_00001_00000_00000 with domain: bool (representing constraint )
c Var 'adj_00000_00001_00000_00000' direct represents '0' with '-256'
c Var 'adj_00000_00001_00000_00000' direct represents '1' with '256'
c Var 'adj_00000_00001_00000_00000' order represents '1' with '1'
c Var 'adj_00000_00001_00000_00000' order represents '0' with '-256'
256 -256 0
c Encoding variable: adj_00000_00001_00000_00001 with domain: bool (representing constraint )
c Var 'adj_00000_00001_00000_00001' direct represents '0' with '-257'
c Var 'adj_00000_00001_00000_00001' direct represents '1' with '257'
c Var 'adj_00000_00001_00000_00001' order represents '1' with '1'
c Var 'adj_00000_00001_00000_00001' order represents '0' with '-257'
257 -257 0
c Encoding variable: adj_00000_00001_00001_n00001 with domain: bool (representing constraint )
c Var 'adj_00000_00001_00001_n00001' direct represents '0' with '-258'
c Var 'adj_00000_00001_00001_n00001' direct represents '1' with '258'
c Var 'adj_00000_00001_00001_n00001' order represents '1' with '1'
c Var 'adj_00000_00001_00001_n00001' order represents '0' with '-258'
258 -258 0
c Encoding variable: adj_00000_00001_00001_00000 with domain: bool (representing constraint )
c Var 'adj_00000_00001_00001_00000' direct represents '0' with '-259'
c Var 'adj_00000_00001_00001_00000' direct represents '1' with '259'
c Var 'adj_00000_00001_00001_00000' order represents '1' with '1'
c Var 'adj_00000_00001_00001_00000' order represents '0' with '-259'
c Encoding variable: adj_00000_00001_00001_00001 with domain: bool (representing constraint )
c Var 'adj_00000_00001_00001_00001' direct represents '0' with '-260'
c Var 'adj_00000_00001_00001_00001' direct represents '1' with '260'
c Var 'adj_00000_00001_00001_00001' order represents '1' with '1'
c Var 'adj_00000_00001_00001_00001' order represents '0' with '-260'
c Encoding variable: adj_00000_00002_n00001_n00001 with domain: bool (representing constraint )
c Var 'adj_00000_00002_n00001_n00001' direct represents '0' with '-261'
c Var 'adj_00000_00002_n00001_n00001' direct represents '1' with '261'
c Var 'adj_00000_00002_n00001_n00001' order represents '1' with '1'
c Var 'adj_00000_00002_n00001_n00001' order represents '0' with '-261'
261 -261 0
c Encoding variable: adj_00000_00002_n00001_00000 with domain: bool (representing constraint )
c Var 'adj_00000_00002_n00001_00000' direct represents '0' with '-262'
c Var 'adj_00000_00002_n00001_00000' direct represents '1' with '262'
c Var 'adj_00000_00002_n00001_00000' order represents '1' with '1'
c Var 'adj_00000_00002_n00001_00000' order represents '0' with '-262'
262 -262 0
c Encoding variable: adj_00000_00002_n00001_00001 with domain: bool (representing constraint )
c Var 'adj_00000_00002_n00001_00001' direct represents '0' with '-263'
c Var 'adj_00000_00002_n00001_00001' direct represents '1' with '263'
c Var 'adj_00000_00002_n00001_00001' order represents '1' with '1'
c Var 'adj_00000_00002_n00001_00001' order represents '0' with '-263'
263 -263 0
c Encoding variable: adj_00000_00002_00000_n00001 with domain: bool (representing constraint )
c Var 'adj_00000_00002_00000_n00001' direct represents '0' with '-264'
c Var 'adj_00000_00002_00000_n00001' direct represents '1' with '264'
c Var 'adj_00000_00002_00000_n00001' order represents '1' with '1'
c Var 'adj_00000_00002_00000_n00001' order represents '0' with '-264'
c Encoding variable: adj_00000_00002_00000_00000 with domain: bool (representing constraint )
c Var 'adj_00000_00002_00000_00000' direct represents '0' with '-265'
c Var 'adj_00000_00002_00000_00000' direct represents '1' with '265'
c Var 'adj_00000_00002_00000_00000' order represents '1' with '1'
c Var 'adj_00000_00002_00000_00000' order represents '0' with '-265'
265 -265 0
c Encoding variable: adj_00000_00002_00000_00001 with domain: bool (representing constraint )
c Var 'adj_00000_00002_00000_00001' direct represents '0' with '-266'
c Var 'adj_00000_00002_00000_00001' direct represents '1' with '266'
c Var 'adj_00000_00002_00000_00001' order represents '1' with '1'
c Var 'adj_00000_00002_00000_00001' order represents '0' with '-266'
266 -266 0
c Encoding variable: adj_00000_00002_00001_n00001 with domain: bool (representing constraint )
c Var 'adj_00000_00002_00001_n00001' direct represents '0' with '-267'
c Var 'adj_00000_00002_00001_n00001' direct represents '1' with '267'
c Var 'adj_00000_00002_00001_n00001' order represents '1' with '1'
c Var 'adj_00000_00002_00001_n00001' order represents '0' with '-267'
c Encoding variable: adj_00000_00002_00001_00000 with domain: bool (representing constraint )
c Var 'adj_00000_00002_00001_00000' direct represents '0' with '-268'
c Var 'adj_00000_00002_00001_00000' direct represents '1' with '268'
c Var 'adj_00000_00002_00001_00000' order represents '1' with '1'
c Var 'adj_00000_00002_00001_00000' order represents '0' with '-268'
c Encoding variable: adj_00000_00002_00001_00001 with domain: bool (representing constraint )
c Var 'adj_00000_00002_00001_00001' direct represents '0' with '-269'
c Var 'adj_00000_00002_00001_00001' direct represents '1' with '269'
c Var 'adj_00000_00002_00001_00001' order represents '1' with '1'
c Var 'adj_00000_00002_00001_00001' order represents '0' with '-269'
c Encoding variable: adj_00000_00003_n00001_n00001 with domain: bool (representing constraint )
c Var 'adj_00000_00003_n00001_n00001' direct represents '0' with '-270'
c Var 'adj_00000_00003_n00001_n00001' direct represents '1' with '270'
c Var 'adj_00000_00003_n00001_n00001' order represents '1' with '1'
c Var 'adj_00000_00003_n00001_n00001' order represents '0' with '-270'
270 -270 0
c Encoding variable: adj_00000_00003_n00001_00000 with domain: bool (representing constraint )
c Var 'adj_00000_00003_n00001_00000' direct represents '0' with '-271'
c Var 'adj_00000_00003_n00001_00000' direct represents '1' with '271'
c Var 'adj_00000_00003_n00001_00000' order represents '1' with '1'
c Var 'adj_00000_00003_n00001_00000' order represents '0' with '-271'
271 -271 0
c Encoding variable: adj_00000_00003_n00001_00001 with domain: bool (representing constraint )
c Var 'adj_00000_00003_n00001_00001' direct represents '0' with '-272'
c Var 'adj_00000_00003_n00001_00001' direct represents '1' with '272'
c Var 'adj_00000_00003_n00001_00001' order represents '1' with '1'
c Var 'adj_00000_00003_n00001_00001' order represents '0' with '-272'
272 -272 0
c Encoding variable: adj_00000_00003_00000_n00001 with domain: bool (representing constraint )
c Var 'adj_00000_00003_00000_n00001' direct represents '0' with '-273'
c Var 'adj_00000_00003_00000_n00001' direct represents '1' with '273'
c Var 'adj_00000_00003_00000_n00001' order represents '1' with '1'
c Var 'adj_00000_00003_00000_n00001' order represents '0' with '-273'
c Encoding variable: adj_00000_00003_00000_00000 with domain: bool (representing constraint )
c Var 'adj_00000_00003_00000_00000' direct represents '0' with '-274'
c Var 'adj_00000_00003_00000_00000' direct represents '1' with '274'
c Var 'adj_00000_00003_00000_00000' order represents '1' with '1'
c Var 'adj_00000_00003_00000_00000' order represents '0' with '-274'
274 -274 0
c Encoding variable: adj_00000_00003_00000_00001 with domain: bool (representing constraint )
c Var 'adj_00000_00003_00000_00001' direct represents '0' with '-275'
c Var 'adj_00000_00003_00000_00001' direct represents '1' with '275'
c Var 'adj_00000_00003_00000_00001' order represents '1' with '1'
c Var 'adj_00000_00003_00000_00001' order represents '0' with '-275'
275 -275 0
c Encoding variable: adj_00000_00003_00001_n00001 with domain: bool (representing constraint )
c Var 'adj_00000_00003_00001_n00001' direct represents '0' with '-276'
c Var 'adj_00000_00003_00001_n00001' direct represents '1' with '276'
c Var 'adj_00000_00003_00001_n00001' order represents '1' with '1'
c Var 'adj_00000_00003_00001_n00001' order represents '0' with '-276'
c Encoding variable: adj_00000_00003_00001_00000 with domain: bool (representing constraint )
c Var 'adj_00000_00003_00001_00000' direct represents '0' with '-277'
c Var 'adj_00000_00003_00001_00000' direct represents '1' with '277'
c Var 'adj_00000_00003_00001_00000' order represents '1' with '1'
c Var 'adj_00000_00003_00001_00000' order represents '0' with '-277'
c Encoding variable: adj_00000_00003_00001_00001 with domain: bool (representing constraint )
c Var 'adj_00000_00003_00001_00001' direct represents '0' with '-278'
c Var 'adj_00000_00003_00001_00001' direct represents '1' with '278'
c Var 'adj_00000_00003_00001_00001' order represents '1' with '1'
c Var 'adj_00000_00003_00001_00001' order represents '0' with '-278'
c Encoding variable: adj_00000_00004_n00001_n00001 with domain: bool (representing constraint )
c Var 'adj_00000_00004_n00001_n00001' direct represents '0' with '-279'
c Var 'adj_00000_00004_n00001_n00001' direct represents '1' with '279'
c Var 'adj_00000_00004_n00001_n00001' order represents '1' with '1'
c Var 'adj_00000_00004_n00001_n00001' order represents '0' with '-279'
279 -279 0
c Encoding variable: adj_00000_00004_n00001_00000 with domain: bool (representing constraint )
c Var 'adj_00000_00004_n00001_00000' direct represents '0' with '-280'
c Var 'adj_00000_00004_n00001_00000' direct represents '1' with '280'
c Var 'adj_00000_00004_n00001_00000' order represents '1' with '1'
c Var 'adj_00000_00004_n00001_00000' order represents '0' with '-280'
280 -280 0
c Encoding variable: adj_00000_00004_n00001_00001 with domain: bool (representing constraint )
c Var 'adj_00000_00004_n00001_00001' direct represents '0' with '-281'
c Var 'adj_00000_00004_n00001_00001' direct represents '1' with '281'
c Var 'adj_00000_00004_n00001_00001' order represents '1' with '1'
c Var 'adj_00000_00004_n00001_00001' order represents '0' with '-281'
281 -281 0
c Encoding variable: adj_00000_00004_00000_n00001 with domain: bool (representing constraint )
c Var 'adj_00000_00004_00000_n00001' direct represents '0' with '-282'
c Var 'adj_00000_00004_00000_n00001' direct represents '1' with '282'
c Var 'adj_00000_00004_00000_n00001' order represents '1' with '1'
c Var 'adj_00000_00004_00000_n00001' order represents '0' with '-282'
282 -282 0
c Encoding variable: adj_00000_00004_00000_00000 with domain: bool (representing constraint )
c Var 'adj_00000_00004_00000_00000' direct represents '0' with '-283'
c Var 'adj_00000_00004_00000_00000' direct represents '1' with '283'
c Var 'adj_00000_00004_00000_00000' order represents '1' with '1'
c Var 'adj_00000_00004_00000_00000' order represents '0' with '-283'
283 -283 0
c Encoding variable: adj_00000_00004_00000_00001 with domain: bool (representing constraint )
c Var 'adj_00000_00004_00000_00001' direct represents '0' with '-284'
c Var 'adj_00000_00004_00000_00001' direct represents '1' with '284'
c Var 'adj_00000_00004_00000_00001' order represents '1' with '1'
c Var 'adj_00000_00004_00000_00001' order represents '0' with '-284'
284 -284 0
c Encoding variable: adj_00000_00004_00001_n00001 with domain: bool (representing constraint )
c Var 'adj_00000_00004_00001_n00001' direct represents '0' with '-285'
c Var 'adj_00000_00004_00001_n00001' direct represents '1' with '285'
c Var 'adj_00000_00004_00001_n00001' order represents '1' with '1'
c Var 'adj_00000_00004_00001_n00001' order represents '0' with '-285'
285 -285 0
c Encoding variable: adj_00000_00004_00001_00000 with domain: bool (representing constraint )
c Var 'adj_00000_00004_00001_00000' direct represents '0' with '-286'
c Var 'adj_00000_00004_00001_00000' direct represents '1' with '286'
c Var 'adj_00000_00004_00001_00000' order represents '1' with '1'
c Var 'adj_00000_00004_00001_00000' order represents '0' with '-286'
286 -286 0
c Encoding variable: adj_00000_00004_00001_00001 with domain: bool (representing constraint )
c Var 'adj_00000_00004_00001_00001' direct represents '0' with '-287'
c Var 'adj_00000_00004_00001_00001' direct represents '1' with '287'
c Var 'adj_00000_00004_00001_00001' order represents '1' with '1'
c Var 'adj_00000_00004_00001_00001' order represents '0' with '-287'
287 -287 0
c Encoding variable: adj_00001_00000_n00001_n00001 with domain: bool (representing constraint )
c Var 'adj_00001_00000_n00001_n00001' direct represents '0' with '-288'
c Var 'adj_00001_00000_n00001_n00001' direct represents '1' with '288'
c Var 'adj_00001_00000_n00001_n00001' order represents '1' with '1'
c Var 'adj_00001_00000_n00001_n00001' order represents '0' with '-288'
288 -288 0
c Encoding variable: adj_00001_00000_n00001_00000 with domain: bool (representing constraint )
c Var 'adj_00001_00000_n00001_00000' direct represents '0' with '-289'
c Var 'adj_00001_00000_n00001_00000' direct represents '1' with '289'
c Var 'adj_00001_00000_n00001_00000' order represents '1' with '1'
c Var 'adj_00001_00000_n00001_00000' order represents '0' with '-289'
289 -289 0
c Encoding variable: adj_00001_00000_n00001_00001 with domain: bool (representing constraint )
c Var 'adj_00001_00000_n00001_00001' direct represents '0' with '-290'
c Var 'adj_00001_00000_n00001_00001' direct represents '1' with '290'
c Var 'adj_00001_00000_n00001_00001' order represents '1' with '1'
c Var 'adj_00001_00000_n00001_00001' order represents '0' with '-290'
290 -290 0
c Encoding variable: adj_00001_00000_00000_n00001 with domain: bool (representing constraint )
c Var 'adj_00001_00000_00000_n00001' direct represents '0' with '-291'
c Var 'adj_00001_00000_00000_n00001' direct represents '1' with '291'
c Var 'adj_00001_00000_00000_n00001' order represents '1' with '1'
c Var 'adj_00001_00000_00000_n00001' order represents '0' with '-291'
291 -291 0
c Encoding variable: adj_00001_00000_00000_00000 with domain: bool (representing constraint )
c Var 'adj_00001_00000_00000_00000' direct represents '0' with '-292'
c Var 'adj_00001_00000_00000_00000' direct represents '1' with '292'
c Var 'adj_00001_00000_00000_00000' order represents '1' with '1'
c Var 'adj_00001_00000_00000_00000' order represents '0' with '-292'
292 -292 0
c Encoding variable: adj_00001_00000_00000_00001 with domain: bool (representing constraint )
c Var 'adj_00001_00000_00000_00001' direct represents '0' with '-293'
c Var 'adj_00001_00000_00000_00001' direct represents '1' with '293'
c Var 'adj_00001_00000_00000_00001' order represents '1' with '1'
c Var 'adj_00001_00000_00000_00001' order represents '0' with '-293'
293 -293 0
c Encoding variable: adj_00001_00000_00001_n00001 with domain: bool (representing constraint )
c Var 'adj_00001_00000_00001_n00001' direct represents '0' with '-294'
c Var 'adj_00001_00000_00001_n00001' direct represents '1' with '294'
c Var 'adj_00001_00000_00001_n00001' order represents '1' with '1'
c Var 'adj_00001_00000_00001_n00001' order represents '0' with '-294'
294 -294 0
c Encoding variable: adj_00001_00000_00001_00000 with domain: bool (representing constraint )
c Var 'adj_00001_00000_00001_00000' direct represents '0' with '-295'
c Var 'adj_00001_00000_00001_00000' direct represents '1' with '295'
c Var 'adj_00001_00000_00001_00000' order represents '1' with '1'
c Var 'adj_00001_00000_00001_00000' order represents '0' with '-295'
295 -295 0
c Encoding variable: adj_00001_00000_00001_00001 with domain: bool (representing constraint )
c Var 'adj_00001_00000_00001_00001' direct represents '0' with '-296'
c Var 'adj_00001_00000_00001_00001' direct represents '1' with '296'
c Var 'adj_00001_00000_00001_00001' order represents '1' with '1'
c Var 'adj_00001_00000_00001_00001' order represents '0' with '-296'
296 -296 0
c Encoding variable: adj_00001_00001_n00001_n00001 with domain: bool (representing constraint )
c Var 'adj_00001_00001_n00001_n00001' direct represents '0' with '-297'
c Var 'adj_00001_00001_n00001_n00001' direct represents '1' with '297'
c Var 'adj_00001_00001_n00001_n00001' order represents '1' with '1'
c Var 'adj_00001_00001_n00001_n00001' order represents '0' with '-297'
297 -297 0
c Encoding variable: adj_00001_00001_n00001_00000 with domain: bool (representing constraint )
c Var 'adj_00001_00001_n00001_00000' direct represents '0' with '-298'
c Var 'adj_00001_00001_n00001_00000' direct represents '1' with '298'
c Var 'adj_00001_00001_n00001_00000' order represents '1' with '1'
c Var 'adj_00001_00001_n00001_00000' order represents '0' with '-298'
298 -298 0
c Encoding variable: adj_00001_00001_n00001_00001 with domain: bool (representing constraint )
c Var 'adj_00001_00001_n00001_00001' direct represents '0' with '-299'
c Var 'adj_00001_00001_n00001_00001' direct represents '1' with '299'
c Var 'adj_00001_00001_n00001_00001' order represents '1' with '1'
c Var 'adj_00001_00001_n00001_00001' order represents '0' with '-299'
299 -299 0
c Encoding variable: adj_00001_00001_00000_n00001 with domain: bool (representing constraint )
c Var 'adj_00001_00001_00000_n00001' direct represents '0' with '-300'
c Var 'adj_00001_00001_00000_n00001' direct represents '1' with '300'
c Var 'adj_00001_00001_00000_n00001' order represents '1' with '1'
c Var 'adj_00001_00001_00000_n00001' order represents '0' with '-300'
300 -300 0
c Encoding variable: adj_00001_00001_00000_00000 with domain: bool (representing constraint )
c Var 'adj_00001_00001_00000_00000' direct represents '0' with '-301'
c Var 'adj_00001_00001_00000_00000' direct represents '1' with '301'
c Var 'adj_00001_00001_00000_00000' order represents '1' with '1'
c Var 'adj_00001_00001_00000_00000' order represents '0' with '-301'
301 -301 0
c Encoding variable: adj_00001_00001_00000_00001 with domain: bool (representing constraint )
c Var 'adj_00001_00001_00000_00001' direct represents '0' with '-302'
c Var 'adj_00001_00001_00000_00001' direct represents '1' with '302'
c Var 'adj_00001_00001_00000_00001' order represents '1' with '1'
c Var 'adj_00001_00001_00000_00001' order represents '0' with '-302'
302 -302 0
c Encoding variable: adj_00001_00001_00001_n00001 with domain: bool (representing constraint )
c Var 'adj_00001_00001_00001_n00001' direct represents '0' with '-303'
c Var 'adj_00001_00001_00001_n00001' direct represents '1' with '303'
c Var 'adj_00001_00001_00001_n00001' order represents '1' with '1'
c Var 'adj_00001_00001_00001_n00001' order represents '0' with '-303'
303 -303 0
c Encoding variable: adj_00001_00001_00001_00000 with domain: bool (representing constraint )
c Var 'adj_00001_00001_00001_00000' direct represents '0' with '-304'
c Var 'adj_00001_00001_00001_00000' direct represents '1' with '304'
c Var 'adj_00001_00001_00001_00000' order represents '1' with '1'
c Var 'adj_00001_00001_00001_00000' order represents '0' with '-304'
c Encoding variable: adj_00001_00001_00001_00001 with domain: bool (representing constraint )
c Var 'adj_00001_00001_00001_00001' direct represents '0' with '-305'
c Var 'adj_00001_00001_00001_00001' direct represents '1' with '305'
c Var 'adj_00001_00001_00001_00001' order represents '1' with '1'
c Var 'adj_00001_00001_00001_00001' order represents '0' with '-305'
305 -305 0
c Encoding variable: adj_00001_00002_n00001_n00001 with domain: bool (representing constraint )
c Var 'adj_00001_00002_n00001_n00001' direct represents '0' with '-306'
c Var 'adj_00001_00002_n00001_n00001' direct represents '1' with '306'
c Var 'adj_00001_00002_n00001_n00001' order represents '1' with '1'
c Var 'adj_00001_00002_n00001_n00001' order represents '0' with '-306'
306 -306 0
c Encoding variable: adj_00001_00002_n00001_00000 with domain: bool (representing constraint )
c Var 'adj_00001_00002_n00001_00000' direct represents '0' with '-307'
c Var 'adj_00001_00002_n00001_00000' direct represents '1' with '307'
c Var 'adj_00001_00002_n00001_00000' order represents '1' with '1'
c Var 'adj_00001_00002_n00001_00000' order represents '0' with '-307'
307 -307 0
c Encoding variable: adj_00001_00002_n00001_00001 with domain: bool (representing constraint )
c Var 'adj_00001_00002_n00001_00001' direct represents '0' with '-308'
c Var 'adj_00001_00002_n00001_00001' direct represents '1' with '308'
c Var 'adj_00001_00002_n00001_00001' order represents '1' with '1'
c Var 'adj_00001_00002_n00001_00001' order represents '0' with '-308'
308 -308 0
c Encoding variable: adj_00001_00002_00000_n00001 with domain: bool (representing constraint )
c Var 'adj_00001_00002_00000_n00001' direct represents '0' with '-309'
c Var 'adj_00001_00002_00000_n00001' direct represents '1' with '309'
c Var 'adj_00001_00002_00000_n00001' order represents '1' with '1'
c Var 'adj_00001_00002_00000_n00001' order represents '0' with '-309'
c Encoding variable: adj_00001_00002_00000_00000 with domain: bool (representing constraint )
c Var 'adj_00001_00002_00000_00000' direct represents '0' with '-310'
c Var 'adj_00001_00002_00000_00000' direct represents '1' with '310'
c Var 'adj_00001_00002_00000_00000' order represents '1' with '1'
c Var 'adj_00001_00002_00000_00000' order represents '0' with '-310'
310 -310 0
c Encoding variable: adj_00001_00002_00000_00001 with domain: bool (representing constraint )
c Var 'adj_00001_00002_00000_00001' direct represents '0' with '-311'
c Var 'adj_00001_00002_00000_00001' direct represents '1' with '311'
c Var 'adj_00001_00002_00000_00001' order represents '1' with '1'
c Var 'adj_00001_00002_00000_00001' order represents '0' with '-311'
311 -311 0
c Encoding variable: adj_00001_00002_00001_n00001 with domain: bool (representing constraint )
c Var 'adj_00001_00002_00001_n00001' direct represents '0' with '-312'
c Var 'adj_00001_00002_00001_n00001' direct represents '1' with '312'
c Var 'adj_00001_00002_00001_n00001' order represents '1' with '1'
c Var 'adj_00001_00002_00001_n00001' order represents '0' with '-312'
c Encoding variable: adj_00001_00002_00001_00000 with domain: bool (representing constraint )
c Var 'adj_00001_00002_00001_00000' direct represents '0' with '-313'
c Var 'adj_00001_00002_00001_00000' direct represents '1' with '313'
c Var 'adj_00001_00002_00001_00000' order represents '1' with '1'
c Var 'adj_00001_00002_00001_00000' order represents '0' with '-313'
313 -313 0
c Encoding variable: adj_00001_00002_00001_00001 with domain: bool (representing constraint )
c Var 'adj_00001_00002_00001_00001' direct represents '0' with '-314'
c Var 'adj_00001_00002_00001_00001' direct represents '1' with '314'
c Var 'adj_00001_00002_00001_00001' order represents '1' with '1'
c Var 'adj_00001_00002_00001_00001' order represents '0' with '-314'
c Encoding variable: adj_00001_00003_n00001_n00001 with domain: bool (representing constraint )
c Var 'adj_00001_00003_n00001_n00001' direct represents '0' with '-315'
c Var 'adj_00001_00003_n00001_n00001' direct represents '1' with '315'
c Var 'adj_00001_00003_n00001_n00001' order represents '1' with '1'
c Var 'adj_00001_00003_n00001_n00001' order represents '0' with '-315'
315 -315 0
c Encoding variable: adj_00001_00003_n00001_00000 with domain: bool (representing constraint )
c Var 'adj_00001_00003_n00001_00000' direct represents '0' with '-316'
c Var 'adj_00001_00003_n00001_00000' direct represents '1' with '316'
c Var 'adj_00001_00003_n00001_00000' order represents '1' with '1'
c Var 'adj_00001_00003_n00001_00000' order represents '0' with '-316'
316 -316 0
c Encoding variable: adj_00001_00003_n00001_00001 with domain: bool (representing constraint )
c Var 'adj_00001_00003_n00001_00001' direct represents '0' with '-317'
c Var 'adj_00001_00003_n00001_00001' direct represents '1' with '317'
c Var 'adj_00001_00003_n00001_00001' order represents '1' with '1'
c Var 'adj_00001_00003_n00001_00001' order represents '0' with '-317'
317 -317 0
c Encoding variable: adj_00001_00003_00000_n00001 with domain: bool (representing constraint )
c Var 'adj_00001_00003_00000_n00001' direct represents '0' with '-318'
c Var 'adj_00001_00003_00000_n00001' direct represents '1' with '318'
c Var 'adj_00001_00003_00000_n00001' order represents '1' with '1'
c Var 'adj_00001_00003_00000_n00001' order represents '0' with '-318'
c Encoding variable: adj_00001_00003_00000_00000 with domain: bool (representing constraint )
c Var 'adj_00001_00003_00000_00000' direct represents '0' with '-319'
c Var 'adj_00001_00003_00000_00000' direct represents '1' with '319'
c Var 'adj_00001_00003_00000_00000' order represents '1' with '1'
c Var 'adj_00001_00003_00000_00000' order represents '0' with '-319'
319 -319 0
c Encoding variable: adj_00001_00003_00000_00001 with domain: bool (representing constraint )
c Var 'adj_00001_00003_00000_00001' direct represents '0' with '-320'
c Var 'adj_00001_00003_00000_00001' direct represents '1' with '320'
c Var 'adj_00001_00003_00000_00001' order represents '1' with '1'
c Var 'adj_00001_00003_00000_00001' order represents '0' with '-320'
320 -320 0
c Encoding variable: adj_00001_00003_00001_n00001 with domain: bool (representing constraint )
c Var 'adj_00001_00003_00001_n00001' direct represents '0' with '-321'
c Var 'adj_00001_00003_00001_n00001' direct represents '1' with '321'
c Var 'adj_00001_00003_00001_n00001' order represents '1' with '1'
c Var 'adj_00001_00003_00001_n00001' order represents '0' with '-321'
321 -321 0
c Encoding variable: adj_00001_00003_00001_00000 with domain: bool (representing constraint )
c Var 'adj_00001_00003_00001_00000' direct represents '0' with '-322'
c Var 'adj_00001_00003_00001_00000' direct represents '1' with '322'
c Var 'adj_00001_00003_00001_00000' order represents '1' with '1'
c Var 'adj_00001_00003_00001_00000' order represents '0' with '-322'
c Encoding variable: adj_00001_00003_00001_00001 with domain: bool (representing constraint )
c Var 'adj_00001_00003_00001_00001' direct represents '0' with '-323'
c Var 'adj_00001_00003_00001_00001' direct represents '1' with '323'
c Var 'adj_00001_00003_00001_00001' order represents '1' with '1'
c Var 'adj_00001_00003_00001_00001' order represents '0' with '-323'
c Encoding variable: adj_00001_00004_n00001_n00001 with domain: bool (representing constraint )
c Var 'adj_00001_00004_n00001_n00001' direct represents '0' with '-324'
c Var 'adj_00001_00004_n00001_n00001' direct represents '1' with '324'
c Var 'adj_00001_00004_n00001_n00001' order represents '1' with '1'
c Var 'adj_00001_00004_n00001_n00001' order represents '0' with '-324'
324 -324 0
c Encoding variable: adj_00001_00004_n00001_00000 with domain: bool (representing constraint )
c Var 'adj_00001_00004_n00001_00000' direct represents '0' with '-325'
c Var 'adj_00001_00004_n00001_00000' direct represents '1' with '325'
c Var 'adj_00001_00004_n00001_00000' order represents '1' with '1'
c Var 'adj_00001_00004_n00001_00000' order represents '0' with '-325'
325 -325 0
c Encoding variable: adj_00001_00004_n00001_00001 with domain: bool (representing constraint )
c Var 'adj_00001_00004_n00001_00001' direct represents '0' with '-326'
c Var 'adj_00001_00004_n00001_00001' direct represents '1' with '326'
c Var 'adj_00001_00004_n00001_00001' order represents '1' with '1'
c Var 'adj_00001_00004_n00001_00001' order represents '0' with '-326'
326 -326 0
c Encoding variable: adj_00001_00004_00000_n00001 with domain: bool (representing constraint )
c Var 'adj_00001_00004_00000_n00001' direct represents '0' with '-327'
c Var 'adj_00001_00004_00000_n00001' direct represents '1' with '327'
c Var 'adj_00001_00004_00000_n00001' order represents '1' with '1'
c Var 'adj_00001_00004_00000_n00001' order represents '0' with '-327'
c Encoding variable: adj_00001_00004_00000_00000 with domain: bool (representing constraint )
c Var 'adj_00001_00004_00000_00000' direct represents '0' with '-328'
c Var 'adj_00001_00004_00000_00000' direct represents '1' with '328'
c Var 'adj_00001_00004_00000_00000' order represents '1' with '1'
c Var 'adj_00001_00004_00000_00000' order represents '0' with '-328'
328 -328 0
c Encoding variable: adj_00001_00004_00000_00001 with domain: bool (representing constraint )
c Var 'adj_00001_00004_00000_00001' direct represents '0' with '-329'
c Var 'adj_00001_00004_00000_00001' direct represents '1' with '329'
c Var 'adj_00001_00004_00000_00001' order represents '1' with '1'
c Var 'adj_00001_00004_00000_00001' order represents '0' with '-329'
329 -329 0
c Encoding variable: adj_00001_00004_00001_n00001 with domain: bool (representing constraint )
c Var 'adj_00001_00004_00001_n00001' direct represents '0' with '-330'
c Var 'adj_00001_00004_00001_n00001' direct represents '1' with '330'
c Var 'adj_00001_00004_00001_n00001' order represents '1' with '1'
c Var 'adj_00001_00004_00001_n00001' order represents '0' with '-330'
c Encoding variable: adj_00001_00004_00001_00000 with domain: bool (representing constraint )
c Var 'adj_00001_00004_00001_00000' direct represents '0' with '-331'
c Var 'adj_00001_00004_00001_00000' direct represents '1' with '331'
c Var 'adj_00001_00004_00001_00000' order represents '1' with '1'
c Var 'adj_00001_00004_00001_00000' order represents '0' with '-331'
c Encoding variable: adj_00001_00004_00001_00001 with domain: bool (representing constraint )
c Var 'adj_00001_00004_00001_00001' direct represents '0' with '-332'
c Var 'adj_00001_00004_00001_00001' direct represents '1' with '332'
c Var 'adj_00001_00004_00001_00001' order represents '1' with '1'
c Var 'adj_00001_00004_00001_00001' order represents '0' with '-332'
332 -332 0
c Encoding variable: adj_00002_00000_n00001_n00001 with domain: bool (representing constraint )
c Var 'adj_00002_00000_n00001_n00001' direct represents '0' with '-333'
c Var 'adj_00002_00000_n00001_n00001' direct represents '1' with '333'
c Var 'adj_00002_00000_n00001_n00001' order represents '1' with '1'
c Var 'adj_00002_00000_n00001_n00001' order represents '0' with '-333'
333 -333 0
c Encoding variable: adj_00002_00000_n00001_00000 with domain: bool (representing constraint )
c Var 'adj_00002_00000_n00001_00000' direct represents '0' with '-334'
c Var 'adj_00002_00000_n00001_00000' direct represents '1' with '334'
c Var 'adj_00002_00000_n00001_00000' order represents '1' with '1'
c Var 'adj_00002_00000_n00001_00000' order represents '0' with '-334'
334 -334 0
c Encoding variable: adj_00002_00000_n00001_00001 with domain: bool (representing constraint )
c Var 'adj_00002_00000_n00001_00001' direct represents '0' with '-335'
c Var 'adj_00002_00000_n00001_00001' direct represents '1' with '335'
c Var 'adj_00002_00000_n00001_00001' order represents '1' with '1'
c Var 'adj_00002_00000_n00001_00001' order represents '0' with '-335'
335 -335 0
c Encoding variable: adj_00002_00000_00000_n00001 with domain: bool (representing constraint )
c Var 'adj_00002_00000_00000_n00001' direct represents '0' with '-336'
c Var 'adj_00002_00000_00000_n00001' direct represents '1' with '336'
c Var 'adj_00002_00000_00000_n00001' order represents '1' with '1'
c Var 'adj_00002_00000_00000_n00001' order represents '0' with '-336'
336 -336 0
c Encoding variable: adj_00002_00000_00000_00000 with domain: bool (representing constraint )
c Var 'adj_00002_00000_00000_00000' direct represents '0' with '-337'
c Var 'adj_00002_00000_00000_00000' direct represents '1' with '337'
c Var 'adj_00002_00000_00000_00000' order represents '1' with '1'
c Var 'adj_00002_00000_00000_00000' order represents '0' with '-337'
337 -337 0
c Encoding variable: adj_00002_00000_00000_00001 with domain: bool (representing constraint )
c Var 'adj_00002_00000_00000_00001' direct represents '0' with '-338'
c Var 'adj_00002_00000_00000_00001' direct represents '1' with '338'
c Var 'adj_00002_00000_00000_00001' order represents '1' with '1'
c Var 'adj_00002_00000_00000_00001' order represents '0' with '-338'
338 -338 0
c Encoding variable: adj_00002_00000_00001_n00001 with domain: bool (representing constraint )
c Var 'adj_00002_00000_00001_n00001' direct represents '0' with '-339'
c Var 'adj_00002_00000_00001_n00001' direct represents '1' with '339'
c Var 'adj_00002_00000_00001_n00001' order represents '1' with '1'
c Var 'adj_00002_00000_00001_n00001' order represents '0' with '-339'
339 -339 0
c Encoding variable: adj_00002_00000_00001_00000 with domain: bool (representing constraint )
c Var 'adj_00002_00000_00001_00000' direct represents '0' with '-340'
c Var 'adj_00002_00000_00001_00000' direct represents '1' with '340'
c Var 'adj_00002_00000_00001_00000' order represents '1' with '1'
c Var 'adj_00002_00000_00001_00000' order represents '0' with '-340'
340 -340 0
c Encoding variable: adj_00002_00000_00001_00001 with domain: bool (representing constraint )
c Var 'adj_00002_00000_00001_00001' direct represents '0' with '-341'
c Var 'adj_00002_00000_00001_00001' direct represents '1' with '341'
c Var 'adj_00002_00000_00001_00001' order represents '1' with '1'
c Var 'adj_00002_00000_00001_00001' order represents '0' with '-341'
341 -341 0
c Encoding variable: adj_00002_00001_n00001_n00001 with domain: bool (representing constraint )
c Var 'adj_00002_00001_n00001_n00001' direct represents '0' with '-342'
c Var 'adj_00002_00001_n00001_n00001' direct represents '1' with '342'
c Var 'adj_00002_00001_n00001_n00001' order represents '1' with '1'
c Var 'adj_00002_00001_n00001_n00001' order represents '0' with '-342'
342 -342 0
c Encoding variable: adj_00002_00001_n00001_00000 with domain: bool (representing constraint )
c Var 'adj_00002_00001_n00001_00000' direct represents '0' with '-343'
c Var 'adj_00002_00001_n00001_00000' direct represents '1' with '343'
c Var 'adj_00002_00001_n00001_00000' order represents '1' with '1'
c Var 'adj_00002_00001_n00001_00000' order represents '0' with '-343'
343 -343 0
c Encoding variable: adj_00002_00001_n00001_00001 with domain: bool (representing constraint )
c Var 'adj_00002_00001_n00001_00001' direct represents '0' with '-344'
c Var 'adj_00002_00001_n00001_00001' direct represents '1' with '344'
c Var 'adj_00002_00001_n00001_00001' order represents '1' with '1'
c Var 'adj_00002_00001_n00001_00001' order represents '0' with '-344'
344 -344 0
c Encoding variable: adj_00002_00001_00000_n00001 with domain: bool (representing constraint )
c Var 'adj_00002_00001_00000_n00001' direct represents '0' with '-345'
c Var 'adj_00002_00001_00000_n00001' direct represents '1' with '345'
c Var 'adj_00002_00001_00000_n00001' order represents '1' with '1'
c Var 'adj_00002_00001_00000_n00001' order represents '0' with '-345'
345 -345 0
c Encoding variable: adj_00002_00001_00000_00000 with domain: bool (representing constraint )
c Var 'adj_00002_00001_00000_00000' direct represents '0' with '-346'
c Var 'adj_00002_00001_00000_00000' direct represents '1' with '346'
c Var 'adj_00002_00001_00000_00000' order represents '1' with '1'
c Var 'adj_00002_00001_00000_00000' order represents '0' with '-346'
346 -346 0
c Encoding variable: adj_00002_00001_00000_00001 with domain: bool (representing constraint )
c Var 'adj_00002_00001_00000_00001' direct represents '0' with '-347'
c Var 'adj_00002_00001_00000_00001' direct represents '1' with '347'
c Var 'adj_00002_00001_00000_00001' order represents '1' with '1'
c Var 'adj_00002_00001_00000_00001' order represents '0' with '-347'
347 -347 0
c Encoding variable: adj_00002_00001_00001_n00001 with domain: bool (representing constraint )
c Var 'adj_00002_00001_00001_n00001' direct represents '0' with '-348'
c Var 'adj_00002_00001_00001_n00001' direct represents '1' with '348'
c Var 'adj_00002_00001_00001_n00001' order represents '1' with '1'
c Var 'adj_00002_00001_00001_n00001' order represents '0' with '-348'
348 -348 0
c Encoding variable: adj_00002_00001_00001_00000 with domain: bool (representing constraint )
c Var 'adj_00002_00001_00001_00000' direct represents '0' with '-349'
c Var 'adj_00002_00001_00001_00000' direct represents '1' with '349'
c Var 'adj_00002_00001_00001_00000' order represents '1' with '1'
c Var 'adj_00002_00001_00001_00000' order represents '0' with '-349'
c Encoding variable: adj_00002_00001_00001_00001 with domain: bool (representing constraint )
c Var 'adj_00002_00001_00001_00001' direct represents '0' with '-350'
c Var 'adj_00002_00001_00001_00001' direct represents '1' with '350'
c Var 'adj_00002_00001_00001_00001' order represents '1' with '1'
c Var 'adj_00002_00001_00001_00001' order represents '0' with '-350'
c Encoding variable: adj_00002_00002_n00001_n00001 with domain: bool (representing constraint )
c Var 'adj_00002_00002_n00001_n00001' direct represents '0' with '-351'
c Var 'adj_00002_00002_n00001_n00001' direct represents '1' with '351'
c Var 'adj_00002_00002_n00001_n00001' order represents '1' with '1'
c Var 'adj_00002_00002_n00001_n00001' order represents '0' with '-351'
351 -351 0
c Encoding variable: adj_00002_00002_n00001_00000 with domain: bool (representing constraint )
c Var 'adj_00002_00002_n00001_00000' direct represents '0' with '-352'
c Var 'adj_00002_00002_n00001_00000' direct represents '1' with '352'
c Var 'adj_00002_00002_n00001_00000' order represents '1' with '1'
c Var 'adj_00002_00002_n00001_00000' order represents '0' with '-352'
352 -352 0
c Encoding variable: adj_00002_00002_n00001_00001 with domain: bool (representing constraint )
c Var 'adj_00002_00002_n00001_00001' direct represents '0' with '-353'
c Var 'adj_00002_00002_n00001_00001' direct represents '1' with '353'
c Var 'adj_00002_00002_n00001_00001' order represents '1' with '1'
c Var 'adj_00002_00002_n00001_00001' order represents '0' with '-353'
353 -353 0
c Encoding variable: adj_00002_00002_00000_n00001 with domain: bool (representing constraint )
c Var 'adj_00002_00002_00000_n00001' direct represents '0' with '-354'
c Var 'adj_00002_00002_00000_n00001' direct represents '1' with '354'
c Var 'adj_00002_00002_00000_n00001' order represents '1' with '1'
c Var 'adj_00002_00002_00000_n00001' order represents '0' with '-354'
354 -354 0
c Encoding variable: adj_00002_00002_00000_00000 with domain: bool (representing constraint )
c Var 'adj_00002_00002_00000_00000' direct represents '0' with '-355'
c Var 'adj_00002_00002_00000_00000' direct represents '1' with '355'
c Var 'adj_00002_00002_00000_00000' order represents '1' with '1'
c Var 'adj_00002_00002_00000_00000' order represents '0' with '-355'
355 -355 0
c Encoding variable: adj_00002_00002_00000_00001 with domain: bool (representing constraint )
c Var 'adj_00002_00002_00000_00001' direct represents '0' with '-356'
c Var 'adj_00002_00002_00000_00001' direct represents '1' with '356'
c Var 'adj_00002_00002_00000_00001' order represents '1' with '1'
c Var 'adj_00002_00002_00000_00001' order represents '0' with '-356'
356 -356 0
c Encoding variable: adj_00002_00002_00001_n00001 with domain: bool (representing constraint )
c Var 'adj_00002_00002_00001_n00001' direct represents '0' with '-357'
c Var 'adj_00002_00002_00001_n00001' direct represents '1' with '357'
c Var 'adj_00002_00002_00001_n00001' order represents '1' with '1'
c Var 'adj_00002_00002_00001_n00001' order represents '0' with '-357'
357 -357 0
c Encoding variable: adj_00002_00002_00001_00000 with domain: bool (representing constraint )
c Var 'adj_00002_00002_00001_00000' direct represents '0' with '-358'
c Var 'adj_00002_00002_00001_00000' direct represents '1' with '358'
c Var 'adj_00002_00002_00001_00000' order represents '1' with '1'
c Var 'adj_00002_00002_00001_00000' order represents '0' with '-358'
358 -358 0
c Encoding variable: adj_00002_00002_00001_00001 with domain: bool (representing constraint )
c Var 'adj_00002_00002_00001_00001' direct represents '0' with '-359'
c Var 'adj_00002_00002_00001_00001' direct represents '1' with '359'
c Var 'adj_00002_00002_00001_00001' order represents '1' with '1'
c Var 'adj_00002_00002_00001_00001' order represents '0' with '-359'
359 -359 0
c Encoding variable: adj_00002_00003_n00001_n00001 with domain: bool (representing constraint )
c Var 'adj_00002_00003_n00001_n00001' direct represents '0' with '-360'
c Var 'adj_00002_00003_n00001_n00001' direct represents '1' with '360'
c Var 'adj_00002_00003_n00001_n00001' order represents '1' with '1'
c Var 'adj_00002_00003_n00001_n00001' order represents '0' with '-360'
360 -360 0
c Encoding variable: adj_00002_00003_n00001_00000 with domain: bool (representing constraint )
c Var 'adj_00002_00003_n00001_00000' direct represents '0' with '-361'
c Var 'adj_00002_00003_n00001_00000' direct represents '1' with '361'
c Var 'adj_00002_00003_n00001_00000' order represents '1' with '1'
c Var 'adj_00002_00003_n00001_00000' order represents '0' with '-361'
361 -361 0
c Encoding variable: adj_00002_00003_n00001_00001 with domain: bool (representing constraint )
c Var 'adj_00002_00003_n00001_00001' direct represents '0' with '-362'
c Var 'adj_00002_00003_n00001_00001' direct represents '1' with '362'
c Var 'adj_00002_00003_n00001_00001' order represents '1' with '1'
c Var 'adj_00002_00003_n00001_00001' order represents '0' with '-362'
362 -362 0
c Encoding variable: adj_00002_00003_00000_n00001 with domain: bool (representing constraint )
c Var 'adj_00002_00003_00000_n00001' direct represents '0' with '-363'
c Var 'adj_00002_00003_00000_n00001' direct represents '1' with '363'
c Var 'adj_00002_00003_00000_n00001' order represents '1' with '1'
c Var 'adj_00002_00003_00000_n00001' order represents '0' with '-363'
363 -363 0
c Encoding variable: adj_00002_00003_00000_00000 with domain: bool (representing constraint )
c Var 'adj_00002_00003_00000_00000' direct represents '0' with '-364'
c Var 'adj_00002_00003_00000_00000' direct represents '1' with '364'
c Var 'adj_00002_00003_00000_00000' order represents '1' with '1'
c Var 'adj_00002_00003_00000_00000' order represents '0' with '-364'
364 -364 0
c Encoding variable: adj_00002_00003_00000_00001 with domain: bool (representing constraint )
c Var 'adj_00002_00003_00000_00001' direct represents '0' with '-365'
c Var 'adj_00002_00003_00000_00001' direct represents '1' with '365'
c Var 'adj_00002_00003_00000_00001' order represents '1' with '1'
c Var 'adj_00002_00003_00000_00001' order represents '0' with '-365'
365 -365 0
c Encoding variable: adj_00002_00003_00001_n00001 with domain: bool (representing constraint )
c Var 'adj_00002_00003_00001_n00001' direct represents '0' with '-366'
c Var 'adj_00002_00003_00001_n00001' direct represents '1' with '366'
c Var 'adj_00002_00003_00001_n00001' order represents '1' with '1'
c Var 'adj_00002_00003_00001_n00001' order represents '0' with '-366'
c Encoding variable: adj_00002_00003_00001_00000 with domain: bool (representing constraint )
c Var 'adj_00002_00003_00001_00000' direct represents '0' with '-367'
c Var 'adj_00002_00003_00001_00000' direct represents '1' with '367'
c Var 'adj_00002_00003_00001_00000' order represents '1' with '1'
c Var 'adj_00002_00003_00001_00000' order represents '0' with '-367'
c Encoding variable: adj_00002_00003_00001_00001 with domain: bool (representing constraint )
c Var 'adj_00002_00003_00001_00001' direct represents '0' with '-368'
c Var 'adj_00002_00003_00001_00001' direct represents '1' with '368'
c Var 'adj_00002_00003_00001_00001' order represents '1' with '1'
c Var 'adj_00002_00003_00001_00001' order represents '0' with '-368'
368 -368 0
c Encoding variable: adj_00002_00004_n00001_n00001 with domain: bool (representing constraint )
c Var 'adj_00002_00004_n00001_n00001' direct represents '0' with '-369'
c Var 'adj_00002_00004_n00001_n00001' direct represents '1' with '369'
c Var 'adj_00002_00004_n00001_n00001' order represents '1' with '1'
c Var 'adj_00002_00004_n00001_n00001' order represents '0' with '-369'
369 -369 0
c Encoding variable: adj_00002_00004_n00001_00000 with domain: bool (representing constraint )
c Var 'adj_00002_00004_n00001_00000' direct represents '0' with '-370'
c Var 'adj_00002_00004_n00001_00000' direct represents '1' with '370'
c Var 'adj_00002_00004_n00001_00000' order represents '1' with '1'
c Var 'adj_00002_00004_n00001_00000' order represents '0' with '-370'
370 -370 0
c Encoding variable: adj_00002_00004_n00001_00001 with domain: bool (representing constraint )
c Var 'adj_00002_00004_n00001_00001' direct represents '0' with '-371'
c Var 'adj_00002_00004_n00001_00001' direct represents '1' with '371'
c Var 'adj_00002_00004_n00001_00001' order represents '1' with '1'
c Var 'adj_00002_00004_n00001_00001' order represents '0' with '-371'
371 -371 0
c Encoding variable: adj_00002_00004_00000_n00001 with domain: bool (representing constraint )
c Var 'adj_00002_00004_00000_n00001' direct represents '0' with '-372'
c Var 'adj_00002_00004_00000_n00001' direct represents '1' with '372'
c Var 'adj_00002_00004_00000_n00001' order represents '1' with '1'
c Var 'adj_00002_00004_00000_n00001' order represents '0' with '-372'
c Encoding variable: adj_00002_00004_00000_00000 with domain: bool (representing constraint )
c Var 'adj_00002_00004_00000_00000' direct represents '0' with '-373'
c Var 'adj_00002_00004_00000_00000' direct represents '1' with '373'
c Var 'adj_00002_00004_00000_00000' order represents '1' with '1'
c Var 'adj_00002_00004_00000_00000' order represents '0' with '-373'
373 -373 0
c Encoding variable: adj_00002_00004_00000_00001 with domain: bool (representing constraint )
c Var 'adj_00002_00004_00000_00001' direct represents '0' with '-374'
c Var 'adj_00002_00004_00000_00001' direct represents '1' with '374'
c Var 'adj_00002_00004_00000_00001' order represents '1' with '1'
c Var 'adj_00002_00004_00000_00001' order represents '0' with '-374'
374 -374 0
c Encoding variable: adj_00002_00004_00001_n00001 with domain: bool (representing constraint )
c Var 'adj_00002_00004_00001_n00001' direct represents '0' with '-375'
c Var 'adj_00002_00004_00001_n00001' direct represents '1' with '375'
c Var 'adj_00002_00004_00001_n00001' order represents '1' with '1'
c Var 'adj_00002_00004_00001_n00001' order represents '0' with '-375'
c Encoding variable: adj_00002_00004_00001_00000 with domain: bool (representing constraint )
c Var 'adj_00002_00004_00001_00000' direct represents '0' with '-376'
c Var 'adj_00002_00004_00001_00000' direct represents '1' with '376'
c Var 'adj_00002_00004_00001_00000' order represents '1' with '1'
c Var 'adj_00002_00004_00001_00000' order represents '0' with '-376'
376 -376 0
c Encoding variable: adj_00002_00004_00001_00001 with domain: bool (representing constraint )
c Var 'adj_00002_00004_00001_00001' direct represents '0' with '-377'
c Var 'adj_00002_00004_00001_00001' direct represents '1' with '377'
c Var 'adj_00002_00004_00001_00001' order represents '1' with '1'
c Var 'adj_00002_00004_00001_00001' order represents '0' with '-377'
377 -377 0
c Encoding variable: adj_00003_00000_n00001_n00001 with domain: bool (representing constraint )
c Var 'adj_00003_00000_n00001_n00001' direct represents '0' with '-378'
c Var 'adj_00003_00000_n00001_n00001' direct represents '1' with '378'
c Var 'adj_00003_00000_n00001_n00001' order represents '1' with '1'
c Var 'adj_00003_00000_n00001_n00001' order represents '0' with '-378'
378 -378 0
c Encoding variable: adj_00003_00000_n00001_00000 with domain: bool (representing constraint )
c Var 'adj_00003_00000_n00001_00000' direct represents '0' with '-379'
c Var 'adj_00003_00000_n00001_00000' direct represents '1' with '379'
c Var 'adj_00003_00000_n00001_00000' order represents '1' with '1'
c Var 'adj_00003_00000_n00001_00000' order represents '0' with '-379'
379 -379 0
c Encoding variable: adj_00003_00000_n00001_00001 with domain: bool (representing constraint )
c Var 'adj_00003_00000_n00001_00001' direct represents '0' with '-380'
c Var 'adj_00003_00000_n00001_00001' direct represents '1' with '380'
c Var 'adj_00003_00000_n00001_00001' order represents '1' with '1'
c Var 'adj_00003_00000_n00001_00001' order represents '0' with '-380'
380 -380 0
c Encoding variable: adj_00003_00000_00000_n00001 with domain: bool (representing constraint )
c Var 'adj_00003_00000_00000_n00001' direct represents '0' with '-381'
c Var 'adj_00003_00000_00000_n00001' direct represents '1' with '381'
c Var 'adj_00003_00000_00000_n00001' order represents '1' with '1'
c Var 'adj_00003_00000_00000_n00001' order represents '0' with '-381'
381 -381 0
c Encoding variable: adj_00003_00000_00000_00000 with domain: bool (representing constraint )
c Var 'adj_00003_00000_00000_00000' direct represents '0' with '-382'
c Var 'adj_00003_00000_00000_00000' direct represents '1' with '382'
c Var 'adj_00003_00000_00000_00000' order represents '1' with '1'
c Var 'adj_00003_00000_00000_00000' order represents '0' with '-382'
382 -382 0
c Encoding variable: adj_00003_00000_00000_00001 with domain: bool (representing constraint )
c Var 'adj_00003_00000_00000_00001' direct represents '0' with '-383'
c Var 'adj_00003_00000_00000_00001' direct represents '1' with '383'
c Var 'adj_00003_00000_00000_00001' order represents '1' with '1'
c Var 'adj_00003_00000_00000_00001' order represents '0' with '-383'
383 -383 0
c Encoding variable: adj_00003_00000_00001_n00001 with domain: bool (representing constraint )
c Var 'adj_00003_00000_00001_n00001' direct represents '0' with '-384'
c Var 'adj_00003_00000_00001_n00001' direct represents '1' with '384'
c Var 'adj_00003_00000_00001_n00001' order represents '1' with '1'
c Var 'adj_00003_00000_00001_n00001' order represents '0' with '-384'
384 -384 0
c Encoding variable: adj_00003_00000_00001_00000 with domain: bool (representing constraint )
c Var 'adj_00003_00000_00001_00000' direct represents '0' with '-385'
c Var 'adj_00003_00000_00001_00000' direct represents '1' with '385'
c Var 'adj_00003_00000_00001_00000' order represents '1' with '1'
c Var 'adj_00003_00000_00001_00000' order represents '0' with '-385'
385 -385 0
c Encoding variable: adj_00003_00000_00001_00001 with domain: bool (representing constraint )
c Var 'adj_00003_00000_00001_00001' direct represents '0' with '-386'
c Var 'adj_00003_00000_00001_00001' direct represents '1' with '386'
c Var 'adj_00003_00000_00001_00001' order represents '1' with '1'
c Var 'adj_00003_00000_00001_00001' order represents '0' with '-386'
386 -386 0
c Encoding variable: adj_00003_00001_n00001_n00001 with domain: bool (representing constraint )
c Var 'adj_00003_00001_n00001_n00001' direct represents '0' with '-387'
c Var 'adj_00003_00001_n00001_n00001' direct represents '1' with '387'
c Var 'adj_00003_00001_n00001_n00001' order represents '1' with '1'
c Var 'adj_00003_00001_n00001_n00001' order represents '0' with '-387'
387 -387 0
c Encoding variable: adj_00003_00001_n00001_00000 with domain: bool (representing constraint )
c Var 'adj_00003_00001_n00001_00000' direct represents '0' with '-388'
c Var 'adj_00003_00001_n00001_00000' direct represents '1' with '388'
c Var 'adj_00003_00001_n00001_00000' order represents '1' with '1'
c Var 'adj_00003_00001_n00001_00000' order represents '0' with '-388'
388 -388 0
c Encoding variable: adj_00003_00001_n00001_00001 with domain: bool (representing constraint )
c Var 'adj_00003_00001_n00001_00001' direct represents '0' with '-389'
c Var 'adj_00003_00001_n00001_00001' direct represents '1' with '389'
c Var 'adj_00003_00001_n00001_00001' order represents '1' with '1'
c Var 'adj_00003_00001_n00001_00001' order represents '0' with '-389'
389 -389 0
c Encoding variable: adj_00003_00001_00000_n00001 with domain: bool (representing constraint )
c Var 'adj_00003_00001_00000_n00001' direct represents '0' with '-390'
c Var 'adj_00003_00001_00000_n00001' direct represents '1' with '390'
c Var 'adj_00003_00001_00000_n00001' order represents '1' with '1'
c Var 'adj_00003_00001_00000_n00001' order represents '0' with '-390'
390 -390 0
c Encoding variable: adj_00003_00001_00000_00000 with domain: bool (representing constraint )
c Var 'adj_00003_00001_00000_00000' direct represents '0' with '-391'
c Var 'adj_00003_00001_00000_00000' direct represents '1' with '391'
c Var 'adj_00003_00001_00000_00000' order represents '1' with '1'
c Var 'adj_00003_00001_00000_00000' order represents '0' with '-391'
391 -391 0
c Encoding variable: adj_00003_00001_00000_00001 with domain: bool (representing constraint )
c Var 'adj_00003_00001_00000_00001' direct represents '0' with '-392'
c Var 'adj_00003_00001_00000_00001' direct represents '1' with '392'
c Var 'adj_00003_00001_00000_00001' order represents '1' with '1'
c Var 'adj_00003_00001_00000_00001' order represents '0' with '-392'
392 -392 0
c Encoding variable: adj_00003_00001_00001_n00001 with domain: bool (representing constraint )
c Var 'adj_00003_00001_00001_n00001' direct represents '0' with '-393'
c Var 'adj_00003_00001_00001_n00001' direct represents '1' with '393'
c Var 'adj_00003_00001_00001_n00001' order represents '1' with '1'
c Var 'adj_00003_00001_00001_n00001' order represents '0' with '-393'
c Encoding variable: adj_00003_00001_00001_00000 with domain: bool (representing constraint )
c Var 'adj_00003_00001_00001_00000' direct represents '0' with '-394'
c Var 'adj_00003_00001_00001_00000' direct represents '1' with '394'
c Var 'adj_00003_00001_00001_00000' order represents '1' with '1'
c Var 'adj_00003_00001_00001_00000' order represents '0' with '-394'
c Encoding variable: adj_00003_00001_00001_00001 with domain: bool (representing constraint )
c Var 'adj_00003_00001_00001_00001' direct represents '0' with '-395'
c Var 'adj_00003_00001_00001_00001' direct represents '1' with '395'
c Var 'adj_00003_00001_00001_00001' order represents '1' with '1'
c Var 'adj_00003_00001_00001_00001' order represents '0' with '-395'
c Encoding variable: adj_00003_00002_n00001_n00001 with domain: bool (representing constraint )
c Var 'adj_00003_00002_n00001_n00001' direct represents '0' with '-396'
c Var 'adj_00003_00002_n00001_n00001' direct represents '1' with '396'
c Var 'adj_00003_00002_n00001_n00001' order represents '1' with '1'
c Var 'adj_00003_00002_n00001_n00001' order represents '0' with '-396'
396 -396 0
c Encoding variable: adj_00003_00002_n00001_00000 with domain: bool (representing constraint )
c Var 'adj_00003_00002_n00001_00000' direct represents '0' with '-397'
c Var 'adj_00003_00002_n00001_00000' direct represents '1' with '397'
c Var 'adj_00003_00002_n00001_00000' order represents '1' with '1'
c Var 'adj_00003_00002_n00001_00000' order represents '0' with '-397'
397 -397 0
c Encoding variable: adj_00003_00002_n00001_00001 with domain: bool (representing constraint )
c Var 'adj_00003_00002_n00001_00001' direct represents '0' with '-398'
c Var 'adj_00003_00002_n00001_00001' direct represents '1' with '398'
c Var 'adj_00003_00002_n00001_00001' order represents '1' with '1'
c Var 'adj_00003_00002_n00001_00001' order represents '0' with '-398'
398 -398 0
c Encoding variable: adj_00003_00002_00000_n00001 with domain: bool (representing constraint )
c Var 'adj_00003_00002_00000_n00001' direct represents '0' with '-399'
c Var 'adj_00003_00002_00000_n00001' direct represents '1' with '399'
c Var 'adj_00003_00002_00000_n00001' order represents '1' with '1'
c Var 'adj_00003_00002_00000_n00001' order represents '0' with '-399'
c Encoding variable: adj_00003_00002_00000_00000 with domain: bool (representing constraint )
c Var 'adj_00003_00002_00000_00000' direct represents '0' with '-400'
c Var 'adj_00003_00002_00000_00000' direct represents '1' with '400'
c Var 'adj_00003_00002_00000_00000' order represents '1' with '1'
c Var 'adj_00003_00002_00000_00000' order represents '0' with '-400'
400 -400 0
c Encoding variable: adj_00003_00002_00000_00001 with domain: bool (representing constraint )
c Var 'adj_00003_00002_00000_00001' direct represents '0' with '-401'
c Var 'adj_00003_00002_00000_00001' direct represents '1' with '401'
c Var 'adj_00003_00002_00000_00001' order represents '1' with '1'
c Var 'adj_00003_00002_00000_00001' order represents '0' with '-401'
401 -401 0
c Encoding variable: adj_00003_00002_00001_n00001 with domain: bool (representing constraint )
c Var 'adj_00003_00002_00001_n00001' direct represents '0' with '-402'
c Var 'adj_00003_00002_00001_n00001' direct represents '1' with '402'
c Var 'adj_00003_00002_00001_n00001' order represents '1' with '1'
c Var 'adj_00003_00002_00001_n00001' order represents '0' with '-402'
c Encoding variable: adj_00003_00002_00001_00000 with domain: bool (representing constraint )
c Var 'adj_00003_00002_00001_00000' direct represents '0' with '-403'
c Var 'adj_00003_00002_00001_00000' direct represents '1' with '403'
c Var 'adj_00003_00002_00001_00000' order represents '1' with '1'
c Var 'adj_00003_00002_00001_00000' order represents '0' with '-403'
c Encoding variable: adj_00003_00002_00001_00001 with domain: bool (representing constraint )
c Var 'adj_00003_00002_00001_00001' direct represents '0' with '-404'
c Var 'adj_00003_00002_00001_00001' direct represents '1' with '404'
c Var 'adj_00003_00002_00001_00001' order represents '1' with '1'
c Var 'adj_00003_00002_00001_00001' order represents '0' with '-404'
404 -404 0
c Encoding variable: adj_00003_00003_n00001_n00001 with domain: bool (representing constraint )
c Var 'adj_00003_00003_n00001_n00001' direct represents '0' with '-405'
c Var 'adj_00003_00003_n00001_n00001' direct represents '1' with '405'
c Var 'adj_00003_00003_n00001_n00001' order represents '1' with '1'
c Var 'adj_00003_00003_n00001_n00001' order represents '0' with '-405'
405 -405 0
c Encoding variable: adj_00003_00003_n00001_00000 with domain: bool (representing constraint )
c Var 'adj_00003_00003_n00001_00000' direct represents '0' with '-406'
c Var 'adj_00003_00003_n00001_00000' direct represents '1' with '406'
c Var 'adj_00003_00003_n00001_00000' order represents '1' with '1'
c Var 'adj_00003_00003_n00001_00000' order represents '0' with '-406'
406 -406 0
c Encoding variable: adj_00003_00003_n00001_00001 with domain: bool (representing constraint )
c Var 'adj_00003_00003_n00001_00001' direct represents '0' with '-407'
c Var 'adj_00003_00003_n00001_00001' direct represents '1' with '407'
c Var 'adj_00003_00003_n00001_00001' order represents '1' with '1'
c Var 'adj_00003_00003_n00001_00001' order represents '0' with '-407'
407 -407 0
c Encoding variable: adj_00003_00003_00000_n00001 with domain: bool (representing constraint )
c Var 'adj_00003_00003_00000_n00001' direct represents '0' with '-408'
c Var 'adj_00003_00003_00000_n00001' direct represents '1' with '408'
c Var 'adj_00003_00003_00000_n00001' order represents '1' with '1'
c Var 'adj_00003_00003_00000_n00001' order represents '0' with '-408'
c Encoding variable: adj_00003_00003_00000_00000 with domain: bool (representing constraint )
c Var 'adj_00003_00003_00000_00000' direct represents '0' with '-409'
c Var 'adj_00003_00003_00000_00000' direct represents '1' with '409'
c Var 'adj_00003_00003_00000_00000' order represents '1' with '1'
c Var 'adj_00003_00003_00000_00000' order represents '0' with '-409'
409 -409 0
c Encoding variable: adj_00003_00003_00000_00001 with domain: bool (representing constraint )
c Var 'adj_00003_00003_00000_00001' direct represents '0' with '-410'
c Var 'adj_00003_00003_00000_00001' direct represents '1' with '410'
c Var 'adj_00003_00003_00000_00001' order represents '1' with '1'
c Var 'adj_00003_00003_00000_00001' order represents '0' with '-410'
410 -410 0
c Encoding variable: adj_00003_00003_00001_n00001 with domain: bool (representing constraint )
c Var 'adj_00003_00003_00001_n00001' direct represents '0' with '-411'
c Var 'adj_00003_00003_00001_n00001' direct represents '1' with '411'
c Var 'adj_00003_00003_00001_n00001' order represents '1' with '1'
c Var 'adj_00003_00003_00001_n00001' order represents '0' with '-411'
c Encoding variable: adj_00003_00003_00001_00000 with domain: bool (representing constraint )
c Var 'adj_00003_00003_00001_00000' direct represents '0' with '-412'
c Var 'adj_00003_00003_00001_00000' direct represents '1' with '412'
c Var 'adj_00003_00003_00001_00000' order represents '1' with '1'
c Var 'adj_00003_00003_00001_00000' order represents '0' with '-412'
412 -412 0
c Encoding variable: adj_00003_00003_00001_00001 with domain: bool (representing constraint )
c Var 'adj_00003_00003_00001_00001' direct represents '0' with '-413'
c Var 'adj_00003_00003_00001_00001' direct represents '1' with '413'
c Var 'adj_00003_00003_00001_00001' order represents '1' with '1'
c Var 'adj_00003_00003_00001_00001' order represents '0' with '-413'
c Encoding variable: adj_00003_00004_n00001_n00001 with domain: bool (representing constraint )
c Var 'adj_00003_00004_n00001_n00001' direct represents '0' with '-414'
c Var 'adj_00003_00004_n00001_n00001' direct represents '1' with '414'
c Var 'adj_00003_00004_n00001_n00001' order represents '1' with '1'
c Var 'adj_00003_00004_n00001_n00001' order represents '0' with '-414'
414 -414 0
c Encoding variable: adj_00003_00004_n00001_00000 with domain: bool (representing constraint )
c Var 'adj_00003_00004_n00001_00000' direct represents '0' with '-415'
c Var 'adj_00003_00004_n00001_00000' direct represents '1' with '415'
c Var 'adj_00003_00004_n00001_00000' order represents '1' with '1'
c Var 'adj_00003_00004_n00001_00000' order represents '0' with '-415'
415 -415 0
c Encoding variable: adj_00003_00004_n00001_00001 with domain: bool (representing constraint )
c Var 'adj_00003_00004_n00001_00001' direct represents '0' with '-416'
c Var 'adj_00003_00004_n00001_00001' direct represents '1' with '416'
c Var 'adj_00003_00004_n00001_00001' order represents '1' with '1'
c Var 'adj_00003_00004_n00001_00001' order represents '0' with '-416'
416 -416 0
c Encoding variable: adj_00003_00004_00000_n00001 with domain: bool (representing constraint )
c Var 'adj_00003_00004_00000_n00001' direct represents '0' with '-417'
c Var 'adj_00003_00004_00000_n00001' direct represents '1' with '417'
c Var 'adj_00003_00004_00000_n00001' order represents '1' with '1'
c Var 'adj_00003_00004_00000_n00001' order represents '0' with '-417'
417 -417 0
c Encoding variable: adj_00003_00004_00000_00000 with domain: bool (representing constraint )
c Var 'adj_00003_00004_00000_00000' direct represents '0' with '-418'
c Var 'adj_00003_00004_00000_00000' direct represents '1' with '418'
c Var 'adj_00003_00004_00000_00000' order represents '1' with '1'
c Var 'adj_00003_00004_00000_00000' order represents '0' with '-418'
418 -418 0
c Encoding variable: adj_00003_00004_00000_00001 with domain: bool (representing constraint )
c Var 'adj_00003_00004_00000_00001' direct represents '0' with '-419'
c Var 'adj_00003_00004_00000_00001' direct represents '1' with '419'
c Var 'adj_00003_00004_00000_00001' order represents '1' with '1'
c Var 'adj_00003_00004_00000_00001' order represents '0' with '-419'
419 -419 0
c Encoding variable: adj_00003_00004_00001_n00001 with domain: bool (representing constraint )
c Var 'adj_00003_00004_00001_n00001' direct represents '0' with '-420'
c Var 'adj_00003_00004_00001_n00001' direct represents '1' with '420'
c Var 'adj_00003_00004_00001_n00001' order represents '1' with '1'
c Var 'adj_00003_00004_00001_n00001' order represents '0' with '-420'
420 -420 0
c Encoding variable: adj_00003_00004_00001_00000 with domain: bool (representing constraint )
c Var 'adj_00003_00004_00001_00000' direct represents '0' with '-421'
c Var 'adj_00003_00004_00001_00000' direct represents '1' with '421'
c Var 'adj_00003_00004_00001_00000' order represents '1' with '1'
c Var 'adj_00003_00004_00001_00000' order represents '0' with '-421'
421 -421 0
c Encoding variable: adj_00003_00004_00001_00001 with domain: bool (representing constraint )
c Var 'adj_00003_00004_00001_00001' direct represents '0' with '-422'
c Var 'adj_00003_00004_00001_00001' direct represents '1' with '422'
c Var 'adj_00003_00004_00001_00001' order represents '1' with '1'
c Var 'adj_00003_00004_00001_00001' order represents '0' with '-422'
422 -422 0
c Encoding variable: adj_00004_00000_n00001_n00001 with domain: bool (representing constraint )
c Var 'adj_00004_00000_n00001_n00001' direct represents '0' with '-423'
c Var 'adj_00004_00000_n00001_n00001' direct represents '1' with '423'
c Var 'adj_00004_00000_n00001_n00001' order represents '1' with '1'
c Var 'adj_00004_00000_n00001_n00001' order represents '0' with '-423'
423 -423 0
c Encoding variable: adj_00004_00000_n00001_00000 with domain: bool (representing constraint )
c Var 'adj_00004_00000_n00001_00000' direct represents '0' with '-424'
c Var 'adj_00004_00000_n00001_00000' direct represents '1' with '424'
c Var 'adj_00004_00000_n00001_00000' order represents '1' with '1'
c Var 'adj_00004_00000_n00001_00000' order represents '0' with '-424'
424 -424 0
c Encoding variable: adj_00004_00000_n00001_00001 with domain: bool (representing constraint )
c Var 'adj_00004_00000_n00001_00001' direct represents '0' with '-425'
c Var 'adj_00004_00000_n00001_00001' direct represents '1' with '425'
c Var 'adj_00004_00000_n00001_00001' order represents '1' with '1'
c Var 'adj_00004_00000_n00001_00001' order represents '0' with '-425'
425 -425 0
c Encoding variable: adj_00004_00000_00000_n00001 with domain: bool (representing constraint )
c Var 'adj_00004_00000_00000_n00001' direct represents '0' with '-426'
c Var 'adj_00004_00000_00000_n00001' direct represents '1' with '426'
c Var 'adj_00004_00000_00000_n00001' order represents '1' with '1'
c Var 'adj_00004_00000_00000_n00001' order represents '0' with '-426'
426 -426 0
c Encoding variable: adj_00004_00000_00000_00000 with domain: bool (representing constraint )
c Var 'adj_00004_00000_00000_00000' direct represents '0' with '-427'
c Var 'adj_00004_00000_00000_00000' direct represents '1' with '427'
c Var 'adj_00004_00000_00000_00000' order represents '1' with '1'
c Var 'adj_00004_00000_00000_00000' order represents '0' with '-427'
427 -427 0
c Encoding variable: adj_00004_00000_00000_00001 with domain: bool (representing constraint )
c Var 'adj_00004_00000_00000_00001' direct represents '0' with '-428'
c Var 'adj_00004_00000_00000_00001' direct represents '1' with '428'
c Var 'adj_00004_00000_00000_00001' order represents '1' with '1'
c Var 'adj_00004_00000_00000_00001' order represents '0' with '-428'
428 -428 0
c Encoding variable: adj_00004_00000_00001_n00001 with domain: bool (representing constraint )
c Var 'adj_00004_00000_00001_n00001' direct represents '0' with '-429'
c Var 'adj_00004_00000_00001_n00001' direct represents '1' with '429'
c Var 'adj_00004_00000_00001_n00001' order represents '1' with '1'
c Var 'adj_00004_00000_00001_n00001' order represents '0' with '-429'
429 -429 0
c Encoding variable: adj_00004_00000_00001_00000 with domain: bool (representing constraint )
c Var 'adj_00004_00000_00001_00000' direct represents '0' with '-430'
c Var 'adj_00004_00000_00001_00000' direct represents '1' with '430'
c Var 'adj_00004_00000_00001_00000' order represents '1' with '1'
c Var 'adj_00004_00000_00001_00000' order represents '0' with '-430'
430 -430 0
c Encoding variable: adj_00004_00000_00001_00001 with domain: bool (representing constraint )
c Var 'adj_00004_00000_00001_00001' direct represents '0' with '-431'
c Var 'adj_00004_00000_00001_00001' direct represents '1' with '431'
c Var 'adj_00004_00000_00001_00001' order represents '1' with '1'
c Var 'adj_00004_00000_00001_00001' order represents '0' with '-431'
431 -431 0
c Encoding variable: adj_00004_00001_n00001_n00001 with domain: bool (representing constraint )
c Var 'adj_00004_00001_n00001_n00001' direct represents '0' with '-432'
c Var 'adj_00004_00001_n00001_n00001' direct represents '1' with '432'
c Var 'adj_00004_00001_n00001_n00001' order represents '1' with '1'
c Var 'adj_00004_00001_n00001_n00001' order represents '0' with '-432'
432 -432 0
c Encoding variable: adj_00004_00001_n00001_00000 with domain: bool (representing constraint )
c Var 'adj_00004_00001_n00001_00000' direct represents '0' with '-433'
c Var 'adj_00004_00001_n00001_00000' direct represents '1' with '433'
c Var 'adj_00004_00001_n00001_00000' order represents '1' with '1'
c Var 'adj_00004_00001_n00001_00000' order represents '0' with '-433'
433 -433 0
c Encoding variable: adj_00004_00001_n00001_00001 with domain: bool (representing constraint )
c Var 'adj_00004_00001_n00001_00001' direct represents '0' with '-434'
c Var 'adj_00004_00001_n00001_00001' direct represents '1' with '434'
c Var 'adj_00004_00001_n00001_00001' order represents '1' with '1'
c Var 'adj_00004_00001_n00001_00001' order represents '0' with '-434'
434 -434 0
c Encoding variable: adj_00004_00001_00000_n00001 with domain: bool (representing constraint )
c Var 'adj_00004_00001_00000_n00001' direct represents '0' with '-435'
c Var 'adj_00004_00001_00000_n00001' direct represents '1' with '435'
c Var 'adj_00004_00001_00000_n00001' order represents '1' with '1'
c Var 'adj_00004_00001_00000_n00001' order represents '0' with '-435'
c Encoding variable: adj_00004_00001_00000_00000 with domain: bool (representing constraint )
c Var 'adj_00004_00001_00000_00000' direct represents '0' with '-436'
c Var 'adj_00004_00001_00000_00000' direct represents '1' with '436'
c Var 'adj_00004_00001_00000_00000' order represents '1' with '1'
c Var 'adj_00004_00001_00000_00000' order represents '0' with '-436'
436 -436 0
c Encoding variable: adj_00004_00001_00000_00001 with domain: bool (representing constraint )
c Var 'adj_00004_00001_00000_00001' direct represents '0' with '-437'
c Var 'adj_00004_00001_00000_00001' direct represents '1' with '437'
c Var 'adj_00004_00001_00000_00001' order represents '1' with '1'
c Var 'adj_00004_00001_00000_00001' order represents '0' with '-437'
437 -437 0
c Encoding variable: adj_00004_00001_00001_n00001 with domain: bool (representing constraint )
c Var 'adj_00004_00001_00001_n00001' direct represents '0' with '-438'
c Var 'adj_00004_00001_00001_n00001' direct represents '1' with '438'
c Var 'adj_00004_00001_00001_n00001' order represents '1' with '1'
c Var 'adj_00004_00001_00001_n00001' order represents '0' with '-438'
438 -438 0
c Encoding variable: adj_00004_00001_00001_00000 with domain: bool (representing constraint )
c Var 'adj_00004_00001_00001_00000' direct represents '0' with '-439'
c Var 'adj_00004_00001_00001_00000' direct represents '1' with '439'
c Var 'adj_00004_00001_00001_00000' order represents '1' with '1'
c Var 'adj_00004_00001_00001_00000' order represents '0' with '-439'
439 -439 0
c Encoding variable: adj_00004_00001_00001_00001 with domain: bool (representing constraint )
c Var 'adj_00004_00001_00001_00001' direct represents '0' with '-440'
c Var 'adj_00004_00001_00001_00001' direct represents '1' with '440'
c Var 'adj_00004_00001_00001_00001' order represents '1' with '1'
c Var 'adj_00004_00001_00001_00001' order represents '0' with '-440'
440 -440 0
c Encoding variable: adj_00004_00002_n00001_n00001 with domain: bool (representing constraint )
c Var 'adj_00004_00002_n00001_n00001' direct represents '0' with '-441'
c Var 'adj_00004_00002_n00001_n00001' direct represents '1' with '441'
c Var 'adj_00004_00002_n00001_n00001' order represents '1' with '1'
c Var 'adj_00004_00002_n00001_n00001' order represents '0' with '-441'
441 -441 0
c Encoding variable: adj_00004_00002_n00001_00000 with domain: bool (representing constraint )
c Var 'adj_00004_00002_n00001_00000' direct represents '0' with '-442'
c Var 'adj_00004_00002_n00001_00000' direct represents '1' with '442'
c Var 'adj_00004_00002_n00001_00000' order represents '1' with '1'
c Var 'adj_00004_00002_n00001_00000' order represents '0' with '-442'
442 -442 0
c Encoding variable: adj_00004_00002_n00001_00001 with domain: bool (representing constraint )
c Var 'adj_00004_00002_n00001_00001' direct represents '0' with '-443'
c Var 'adj_00004_00002_n00001_00001' direct represents '1' with '443'
c Var 'adj_00004_00002_n00001_00001' order represents '1' with '1'
c Var 'adj_00004_00002_n00001_00001' order represents '0' with '-443'
443 -443 0
c Encoding variable: adj_00004_00002_00000_n00001 with domain: bool (representing constraint )
c Var 'adj_00004_00002_00000_n00001' direct represents '0' with '-444'
c Var 'adj_00004_00002_00000_n00001' direct represents '1' with '444'
c Var 'adj_00004_00002_00000_n00001' order represents '1' with '1'
c Var 'adj_00004_00002_00000_n00001' order represents '0' with '-444'
c Encoding variable: adj_00004_00002_00000_00000 with domain: bool (representing constraint )
c Var 'adj_00004_00002_00000_00000' direct represents '0' with '-445'
c Var 'adj_00004_00002_00000_00000' direct represents '1' with '445'
c Var 'adj_00004_00002_00000_00000' order represents '1' with '1'
c Var 'adj_00004_00002_00000_00000' order represents '0' with '-445'
445 -445 0
c Encoding variable: adj_00004_00002_00000_00001 with domain: bool (representing constraint )
c Var 'adj_00004_00002_00000_00001' direct represents '0' with '-446'
c Var 'adj_00004_00002_00000_00001' direct represents '1' with '446'
c Var 'adj_00004_00002_00000_00001' order represents '1' with '1'
c Var 'adj_00004_00002_00000_00001' order represents '0' with '-446'
446 -446 0
c Encoding variable: adj_00004_00002_00001_n00001 with domain: bool (representing constraint )
c Var 'adj_00004_00002_00001_n00001' direct represents '0' with '-447'
c Var 'adj_00004_00002_00001_n00001' direct represents '1' with '447'
c Var 'adj_00004_00002_00001_n00001' order represents '1' with '1'
c Var 'adj_00004_00002_00001_n00001' order represents '0' with '-447'
447 -447 0
c Encoding variable: adj_00004_00002_00001_00000 with domain: bool (representing constraint )
c Var 'adj_00004_00002_00001_00000' direct represents '0' with '-448'
c Var 'adj_00004_00002_00001_00000' direct represents '1' with '448'
c Var 'adj_00004_00002_00001_00000' order represents '1' with '1'
c Var 'adj_00004_00002_00001_00000' order represents '0' with '-448'
448 -448 0
c Encoding variable: adj_00004_00002_00001_00001 with domain: bool (representing constraint )
c Var 'adj_00004_00002_00001_00001' direct represents '0' with '-449'
c Var 'adj_00004_00002_00001_00001' direct represents '1' with '449'
c Var 'adj_00004_00002_00001_00001' order represents '1' with '1'
c Var 'adj_00004_00002_00001_00001' order represents '0' with '-449'
449 -449 0
c Encoding variable: adj_00004_00003_n00001_n00001 with domain: bool (representing constraint )
c Var 'adj_00004_00003_n00001_n00001' direct represents '0' with '-450'
c Var 'adj_00004_00003_n00001_n00001' direct represents '1' with '450'
c Var 'adj_00004_00003_n00001_n00001' order represents '1' with '1'
c Var 'adj_00004_00003_n00001_n00001' order represents '0' with '-450'
450 -450 0
c Encoding variable: adj_00004_00003_n00001_00000 with domain: bool (representing constraint )
c Var 'adj_00004_00003_n00001_00000' direct represents '0' with '-451'
c Var 'adj_00004_00003_n00001_00000' direct represents '1' with '451'
c Var 'adj_00004_00003_n00001_00000' order represents '1' with '1'
c Var 'adj_00004_00003_n00001_00000' order represents '0' with '-451'
451 -451 0
c Encoding variable: adj_00004_00003_n00001_00001 with domain: bool (representing constraint )
c Var 'adj_00004_00003_n00001_00001' direct represents '0' with '-452'
c Var 'adj_00004_00003_n00001_00001' direct represents '1' with '452'
c Var 'adj_00004_00003_n00001_00001' order represents '1' with '1'
c Var 'adj_00004_00003_n00001_00001' order represents '0' with '-452'
452 -452 0
c Encoding variable: adj_00004_00003_00000_n00001 with domain: bool (representing constraint )
c Var 'adj_00004_00003_00000_n00001' direct represents '0' with '-453'
c Var 'adj_00004_00003_00000_n00001' direct represents '1' with '453'
c Var 'adj_00004_00003_00000_n00001' order represents '1' with '1'
c Var 'adj_00004_00003_00000_n00001' order represents '0' with '-453'
453 -453 0
c Encoding variable: adj_00004_00003_00000_00000 with domain: bool (representing constraint )
c Var 'adj_00004_00003_00000_00000' direct represents '0' with '-454'
c Var 'adj_00004_00003_00000_00000' direct represents '1' with '454'
c Var 'adj_00004_00003_00000_00000' order represents '1' with '1'
c Var 'adj_00004_00003_00000_00000' order represents '0' with '-454'
454 -454 0
c Encoding variable: adj_00004_00003_00000_00001 with domain: bool (representing constraint )
c Var 'adj_00004_00003_00000_00001' direct represents '0' with '-455'
c Var 'adj_00004_00003_00000_00001' direct represents '1' with '455'
c Var 'adj_00004_00003_00000_00001' order represents '1' with '1'
c Var 'adj_00004_00003_00000_00001' order represents '0' with '-455'
455 -455 0
c Encoding variable: adj_00004_00003_00001_n00001 with domain: bool (representing constraint )
c Var 'adj_00004_00003_00001_n00001' direct represents '0' with '-456'
c Var 'adj_00004_00003_00001_n00001' direct represents '1' with '456'
c Var 'adj_00004_00003_00001_n00001' order represents '1' with '1'
c Var 'adj_00004_00003_00001_n00001' order represents '0' with '-456'
456 -456 0
c Encoding variable: adj_00004_00003_00001_00000 with domain: bool (representing constraint )
c Var 'adj_00004_00003_00001_00000' direct represents '0' with '-457'
c Var 'adj_00004_00003_00001_00000' direct represents '1' with '457'
c Var 'adj_00004_00003_00001_00000' order represents '1' with '1'
c Var 'adj_00004_00003_00001_00000' order represents '0' with '-457'
457 -457 0
c Encoding variable: adj_00004_00003_00001_00001 with domain: bool (representing constraint )
c Var 'adj_00004_00003_00001_00001' direct represents '0' with '-458'
c Var 'adj_00004_00003_00001_00001' direct represents '1' with '458'
c Var 'adj_00004_00003_00001_00001' order represents '1' with '1'
c Var 'adj_00004_00003_00001_00001' order represents '0' with '-458'
458 -458 0
c Encoding variable: adj_00004_00004_n00001_n00001 with domain: bool (representing constraint )
c Var 'adj_00004_00004_n00001_n00001' direct represents '0' with '-459'
c Var 'adj_00004_00004_n00001_n00001' direct represents '1' with '459'
c Var 'adj_00004_00004_n00001_n00001' order represents '1' with '1'
c Var 'adj_00004_00004_n00001_n00001' order represents '0' with '-459'
459 -459 0
c Encoding variable: adj_00004_00004_n00001_00000 with domain: bool (representing constraint )
c Var 'adj_00004_00004_n00001_00000' direct represents '0' with '-460'
c Var 'adj_00004_00004_n00001_00000' direct represents '1' with '460'
c Var 'adj_00004_00004_n00001_00000' order represents '1' with '1'
c Var 'adj_00004_00004_n00001_00000' order represents '0' with '-460'
460 -460 0
c Encoding variable: adj_00004_00004_n00001_00001 with domain: bool (representing constraint )
c Var 'adj_00004_00004_n00001_00001' direct represents '0' with '-461'
c Var 'adj_00004_00004_n00001_00001' direct represents '1' with '461'
c Var 'adj_00004_00004_n00001_00001' order represents '1' with '1'
c Var 'adj_00004_00004_n00001_00001' order represents '0' with '-461'
461 -461 0
c Encoding variable: adj_00004_00004_00000_n00001 with domain: bool (representing constraint )
c Var 'adj_00004_00004_00000_n00001' direct represents '0' with '-462'
c Var 'adj_00004_00004_00000_n00001' direct represents '1' with '462'
c Var 'adj_00004_00004_00000_n00001' order represents '1' with '1'
c Var 'adj_00004_00004_00000_n00001' order represents '0' with '-462'
462 -462 0
c Encoding variable: adj_00004_00004_00000_00000 with domain: bool (representing constraint )
c Var 'adj_00004_00004_00000_00000' direct represents '0' with '-463'
c Var 'adj_00004_00004_00000_00000' direct represents '1' with '463'
c Var 'adj_00004_00004_00000_00000' order represents '1' with '1'
c Var 'adj_00004_00004_00000_00000' order represents '0' with '-463'
463 -463 0
c Encoding variable: adj_00004_00004_00000_00001 with domain: bool (representing constraint )
c Var 'adj_00004_00004_00000_00001' direct represents '0' with '-464'
c Var 'adj_00004_00004_00000_00001' direct represents '1' with '464'
c Var 'adj_00004_00004_00000_00001' order represents '1' with '1'
c Var 'adj_00004_00004_00000_00001' order represents '0' with '-464'
464 -464 0
c Encoding variable: adj_00004_00004_00001_n00001 with domain: bool (representing constraint )
c Var 'adj_00004_00004_00001_n00001' direct represents '0' with '-465'
c Var 'adj_00004_00004_00001_n00001' direct represents '1' with '465'
c Var 'adj_00004_00004_00001_n00001' order represents '1' with '1'
c Var 'adj_00004_00004_00001_n00001' order represents '0' with '-465'
465 -465 0
c Encoding variable: adj_00004_00004_00001_00000 with domain: bool (representing constraint )
c Var 'adj_00004_00004_00001_00000' direct represents '0' with '-466'
c Var 'adj_00004_00004_00001_00000' direct represents '1' with '466'
c Var 'adj_00004_00004_00001_00000' order represents '1' with '1'
c Var 'adj_00004_00004_00001_00000' order represents '0' with '-466'
466 -466 0
c Encoding variable: adj_00004_00004_00001_00001 with domain: bool (representing constraint )
c Var 'adj_00004_00004_00001_00001' direct represents '0' with '-467'
c Var 'adj_00004_00004_00001_00001' direct represents '1' with '467'
c Var 'adj_00004_00004_00001_00001' order represents '1' with '1'
c Var 'adj_00004_00004_00001_00001' order represents '0' with '-467'
467 -467 0
c Encoding variable: rowup_00000 with domain: bool (representing constraint )
c Var 'rowup_00000' direct represents '0' with '-468'
c Var 'rowup_00000' direct represents '1' with '468'
c Var 'rowup_00000' order represents '1' with '1'
c Var 'rowup_00000' order represents '0' with '-468'
c Encoding variable: rowup_00001 with domain: bool (representing constraint )
c Var 'rowup_00001' direct represents '0' with '-469'
c Var 'rowup_00001' direct represents '1' with '469'
c Var 'rowup_00001' order represents '1' with '1'
c Var 'rowup_00001' order represents '0' with '-469'
469 -469 0
c Encoding variable: rowup_00002 with domain: bool (representing constraint )
c Var 'rowup_00002' direct represents '0' with '-470'
c Var 'rowup_00002' direct represents '1' with '470'
c Var 'rowup_00002' order represents '1' with '1'
c Var 'rowup_00002' order represents '0' with '-470'
c Encoding variable: rowup_00003 with domain: bool (representing constraint )
c Var 'rowup_00003' direct represents '0' with '-471'
c Var 'rowup_00003' direct represents '1' with '471'
c Var 'rowup_00003' order represents '1' with '1'
c Var 'rowup_00003' order represents '0' with '-471'
471 -471 0
c Encoding variable: rowup_00004 with domain: bool (representing constraint )
c Var 'rowup_00004' direct represents '0' with '-472'
c Var 'rowup_00004' direct represents '1' with '472'
c Var 'rowup_00004' order represents '1' with '1'
c Var 'rowup_00004' order represents '0' with '-472'
c Encoding variable: rowdown_00000 with domain: bool (representing constraint )
c Var 'rowdown_00000' direct represents '0' with '-473'
c Var 'rowdown_00000' direct represents '1' with '473'
c Var 'rowdown_00000' order represents '1' with '1'
c Var 'rowdown_00000' order represents '0' with '-473'
c Encoding variable: rowdown_00001 with domain: bool (representing constraint )
c Var 'rowdown_00001' direct represents '0' with '-474'
c Var 'rowdown_00001' direct represents '1' with '474'
c Var 'rowdown_00001' order represents '1' with '1'
c Var 'rowdown_00001' order represents '0' with '-474'
c Encoding variable: rowdown_00002 with domain: bool (representing constraint )
c Var 'rowdown_00002' direct represents '0' with '-475'
c Var 'rowdown_00002' direct represents '1' with '475'
c Var 'rowdown_00002' order represents '1' with '1'
c Var 'rowdown_00002' order represents '0' with '-475'
c Encoding variable: rowdown_00003 with domain: bool (representing constraint )
c Var 'rowdown_00003' direct represents '0' with '-476'
c Var 'rowdown_00003' direct represents '1' with '476'
c Var 'rowdown_00003' order represents '1' with '1'
c Var 'rowdown_00003' order represents '0' with '-476'
c Encoding variable: rowdown_00004 with domain: bool (representing constraint )
c Var 'rowdown_00004' direct represents '0' with '-477'
c Var 'rowdown_00004' direct represents '1' with '477'
c Var 'rowdown_00004' order represents '1' with '1'
c Var 'rowdown_00004' order represents '0' with '-477'
c Encoding variable: colup_00000 with domain: bool (representing constraint )
c Var 'colup_00000' direct represents '0' with '-478'
c Var 'colup_00000' direct represents '1' with '478'
c Var 'colup_00000' order represents '1' with '1'
c Var 'colup_00000' order represents '0' with '-478'
c Encoding variable: colup_00001 with domain: bool (representing constraint )
c Var 'colup_00001' direct represents '0' with '-479'
c Var 'colup_00001' direct represents '1' with '479'
c Var 'colup_00001' order represents '1' with '1'
c Var 'colup_00001' order represents '0' with '-479'
c Encoding variable: colup_00002 with domain: bool (representing constraint )
c Var 'colup_00002' direct represents '0' with '-480'
c Var 'colup_00002' direct represents '1' with '480'
c Var 'colup_00002' order represents '1' with '1'
c Var 'colup_00002' order represents '0' with '-480'
c Encoding variable: colup_00003 with domain: bool (representing constraint )
c Var 'colup_00003' direct represents '0' with '-481'
c Var 'colup_00003' direct represents '1' with '481'
c Var 'colup_00003' order represents '1' with '1'
c Var 'colup_00003' order represents '0' with '-481'
481 -481 0
c Encoding variable: colup_00004 with domain: bool (representing constraint )
c Var 'colup_00004' direct represents '0' with '-482'
c Var 'colup_00004' direct represents '1' with '482'
c Var 'colup_00004' order represents '1' with '1'
c Var 'colup_00004' order represents '0' with '-482'
c Encoding variable: coldown_00000 with domain: bool (representing constraint )
c Var 'coldown_00000' direct represents '0' with '-483'
c Var 'coldown_00000' direct represents '1' with '483'
c Var 'coldown_00000' order represents '1' with '1'
c Var 'coldown_00000' order represents '0' with '-483'
483 -483 0
c Encoding variable: coldown_00001 with domain: bool (representing constraint )
c Var 'coldown_00001' direct represents '0' with '-484'
c Var 'coldown_00001' direct represents '1' with '484'
c Var 'coldown_00001' order represents '1' with '1'
c Var 'coldown_00001' order represents '0' with '-484'
c Encoding variable: coldown_00002 with domain: bool (representing constraint )
c Var 'coldown_00002' direct represents '0' with '-485'
c Var 'coldown_00002' direct represents '1' with '485'
c Var 'coldown_00002' order represents '1' with '1'
c Var 'coldown_00002' order represents '0' with '-485'
c Encoding variable: coldown_00003 with domain: bool (representing constraint )
c Var 'coldown_00003' direct represents '0' with '-486'
c Var 'coldown_00003' direct represents '1' with '486'
c Var 'coldown_00003' order represents '1' with '1'
c Var 'coldown_00003' order represents '0' with '-486'
486 -486 0
c Encoding variable: coldown_00004 with domain: bool (representing constraint )
c Var 'coldown_00004' direct represents '0' with '-487'
c Var 'coldown_00004' direct represents '1' with '487'
c Var 'coldown_00004' order represents '1' with '1'
c Var 'coldown_00004' order represents '0' with '-487'
c Encoding variable: treetentup_00001 with domain: bool (representing constraint )
c Var 'treetentup_00001' direct represents '0' with '-488'
c Var 'treetentup_00001' direct represents '1' with '488'
c Var 'treetentup_00001' order represents '1' with '1'
c Var 'treetentup_00001' order represents '0' with '-488'
c Encoding variable: treetentup_00002 with domain: bool (representing constraint )
c Var 'treetentup_00002' direct represents '0' with '-489'
c Var 'treetentup_00002' direct represents '1' with '489'
c Var 'treetentup_00002' order represents '1' with '1'
c Var 'treetentup_00002' order represents '0' with '-489'
c Encoding variable: treetentup_00003 with domain: bool (representing constraint )
c Var 'treetentup_00003' direct represents '0' with '-490'
c Var 'treetentup_00003' direct represents '1' with '490'
c Var 'treetentup_00003' order represents '1' with '1'
c Var 'treetentup_00003' order represents '0' with '-490'
c Encoding variable: treetentup_00004 with domain: bool (representing constraint )
c Var 'treetentup_00004' direct represents '0' with '-491'
c Var 'treetentup_00004' direct represents '1' with '491'
c Var 'treetentup_00004' order represents '1' with '1'
c Var 'treetentup_00004' order represents '0' with '-491'
c Encoding variable: treetentup_00005 with domain: bool (representing constraint )
c Var 'treetentup_00005' direct represents '0' with '-492'
c Var 'treetentup_00005' direct represents '1' with '492'
c Var 'treetentup_00005' order represents '1' with '1'
c Var 'treetentup_00005' order represents '0' with '-492'
c Encoding variable: treetentup_00006 with domain: bool (representing constraint )
c Var 'treetentup_00006' direct represents '0' with '-493'
c Var 'treetentup_00006' direct represents '1' with '493'
c Var 'treetentup_00006' order represents '1' with '1'
c Var 'treetentup_00006' order represents '0' with '-493'
c Encoding variable: treetentup_00007 with domain: bool (representing constraint )
c Var 'treetentup_00007' direct represents '0' with '-494'
c Var 'treetentup_00007' direct represents '1' with '494'
c Var 'treetentup_00007' order represents '1' with '1'
c Var 'treetentup_00007' order represents '0' with '-494'
c Encoding variable: treetentdown_00001 with domain: bool (representing constraint )
c Var 'treetentdown_00001' direct represents '0' with '-495'
c Var 'treetentdown_00001' direct represents '1' with '495'
c Var 'treetentdown_00001' order represents '1' with '1'
c Var 'treetentdown_00001' order represents '0' with '-495'
c Encoding variable: treetentdown_00002 with domain: bool (representing constraint )
c Var 'treetentdown_00002' direct represents '0' with '-496'
c Var 'treetentdown_00002' direct represents '1' with '496'
c Var 'treetentdown_00002' order represents '1' with '1'
c Var 'treetentdown_00002' order represents '0' with '-496'
c Encoding variable: treetentdown_00003 with domain: bool (representing constraint )
c Var 'treetentdown_00003' direct represents '0' with '-497'
c Var 'treetentdown_00003' direct represents '1' with '497'
c Var 'treetentdown_00003' order represents '1' with '1'
c Var 'treetentdown_00003' order represents '0' with '-497'
c Encoding variable: treetentdown_00004 with domain: bool (representing constraint )
c Var 'treetentdown_00004' direct represents '0' with '-498'
c Var 'treetentdown_00004' direct represents '1' with '498'
c Var 'treetentdown_00004' order represents '1' with '1'
c Var 'treetentdown_00004' order represents '0' with '-498'
c Encoding variable: treetentdown_00005 with domain: bool (representing constraint )
c Var 'treetentdown_00005' direct represents '0' with '-499'
c Var 'treetentdown_00005' direct represents '1' with '499'
c Var 'treetentdown_00005' order represents '1' with '1'
c Var 'treetentdown_00005' order represents '0' with '-499'
c Encoding variable: treetentdown_00006 with domain: bool (representing constraint )
c Var 'treetentdown_00006' direct represents '0' with '-500'
c Var 'treetentdown_00006' direct represents '1' with '500'
c Var 'treetentdown_00006' order represents '1' with '1'
c Var 'treetentdown_00006' order represents '0' with '-500'
c Encoding variable: treetentdown_00007 with domain: bool (representing constraint )
c Var 'treetentdown_00007' direct represents '0' with '-501'
c Var 'treetentdown_00007' direct represents '1' with '501'
c Var 'treetentdown_00007' order represents '1' with '1'
c Var 'treetentdown_00007' order represents '0' with '-501'
c Encoding variable: tentneartree_00001 with domain: bool (representing constraint )
c Var 'tentneartree_00001' direct represents '0' with '-502'
c Var 'tentneartree_00001' direct represents '1' with '502'
c Var 'tentneartree_00001' order represents '1' with '1'
c Var 'tentneartree_00001' order represents '0' with '-502'
c Encoding variable: tentneartree_00002 with domain: bool (representing constraint )
c Var 'tentneartree_00002' direct represents '0' with '-503'
c Var 'tentneartree_00002' direct represents '1' with '503'
c Var 'tentneartree_00002' order represents '1' with '1'
c Var 'tentneartree_00002' order represents '0' with '-503'
c Encoding variable: tentneartree_00003 with domain: bool (representing constraint )
c Var 'tentneartree_00003' direct represents '0' with '-504'
c Var 'tentneartree_00003' direct represents '1' with '504'
c Var 'tentneartree_00003' order represents '1' with '1'
c Var 'tentneartree_00003' order represents '0' with '-504'
c Encoding variable: tentneartree_00004 with domain: bool (representing constraint )
c Var 'tentneartree_00004' direct represents '0' with '-505'
c Var 'tentneartree_00004' direct represents '1' with '505'
c Var 'tentneartree_00004' order represents '1' with '1'
c Var 'tentneartree_00004' order represents '0' with '-505'
c Encoding variable: tentneartree_00005 with domain: bool (representing constraint )
c Var 'tentneartree_00005' direct represents '0' with '-506'
c Var 'tentneartree_00005' direct represents '1' with '506'
c Var 'tentneartree_00005' order represents '1' with '1'
c Var 'tentneartree_00005' order represents '0' with '-506'
c Encoding variable: tentneartree_00006 with domain: bool (representing constraint )
c Var 'tentneartree_00006' direct represents '0' with '-507'
c Var 'tentneartree_00006' direct represents '1' with '507'
c Var 'tentneartree_00006' order represents '1' with '1'
c Var 'tentneartree_00006' order represents '0' with '-507'
c Encoding variable: tentneartree_00007 with domain: bool (representing constraint )
c Var 'tentneartree_00007' direct represents '0' with '-508'
c Var 'tentneartree_00007' direct represents '1' with '508'
c Var 'tentneartree_00007' order represents '1' with '1'
c Var 'tentneartree_00007' order represents '0' with '-508'
c Encoding variable: aux0 with domain: bool (representing constraint (1<=((grid_00003_00001=1) + (grid_00003_00002=1) + (grid_00003_00003=1) + (1=grid_00001_00001) + (1=grid_00001_00002) + (1=grid_00001_00003) + (1=grid_00001_00004) + (1=grid_00002_00001) + (1=grid_00002_00003) + (1=grid_00002_00004) + (grid_00004_00000=1) + (grid_00004_00001=1) + (grid_00004_00002=1) + (grid_00004_00004=1) + (grid_00000_00000=1) + (grid_00000_00001=1) + (grid_00000_00002=1) + (grid_00000_00003=1))))
c Var 'aux0' direct represents '0' with '-509'
c Var 'aux0' direct represents '1' with '509'
c Var 'aux0' order represents '1' with '1'
c Var 'aux0' order represents '0' with '-509'
c Encoding variable: aux1 with domain: bool (representing constraint (1<=((grid_00003_00001=2) + (grid_00003_00002=2) + (grid_00003_00003=2) + (2=grid_00001_00001) + (2=grid_00001_00002) + (2=grid_00001_00003) + (2=grid_00001_00004) + (2=grid_00002_00001) + (2=grid_00002_00003) + (2=grid_00002_00004) + (grid_00004_00000=2) + (grid_00004_00001=2) + (grid_00004_00002=2) + (grid_00004_00004=2) + (grid_00000_00000=2) + (grid_00000_00001=2) + (grid_00000_00002=2) + (grid_00000_00003=2))))
c Var 'aux1' direct represents '0' with '-510'
c Var 'aux1' direct represents '1' with '510'
c Var 'aux1' order represents '1' with '1'
c Var 'aux1' order represents '0' with '-510'
c Encoding variable: aux2 with domain: bool (representing constraint (1<=((grid_00003_00001=3) + (grid_00003_00002=3) + (grid_00003_00003=3) + (3=grid_00001_00001) + (3=grid_00001_00002) + (3=grid_00001_00003) + (3=grid_00001_00004) + (3=grid_00002_00001) + (3=grid_00002_00003) + (3=grid_00002_00004) + (grid_00004_00000=3) + (grid_00004_00001=3) + (grid_00004_00002=3) + (grid_00004_00004=3) + (grid_00000_00000=3) + (grid_00000_00001=3) + (grid_00000_00002=3) + (grid_00000_00003=3))))
c Var 'aux2' direct represents '0' with '-511'
c Var 'aux2' direct represents '1' with '511'
c Var 'aux2' order represents '1' with '1'
c Var 'aux2' order represents '0' with '-511'
c Encoding variable: aux3 with domain: bool (representing constraint (1<=((grid_00003_00001=4) + (grid_00003_00002=4) + (grid_00003_00003=4) + (4=grid_00001_00001) + (4=grid_00001_00002) + (4=grid_00001_00003) + (4=grid_00001_00004) + (4=grid_00002_00001) + (4=grid_00002_00003) + (4=grid_00002_00004) + (grid_00004_00000=4) + (grid_00004_00001=4) + (grid_00004_00002=4) + (grid_00004_00004=4) + (grid_00000_00000=4) + (grid_00000_00001=4) + (grid_00000_00002=4) + (grid_00000_00003=4))))
c Var 'aux3' direct represents '0' with '-512'
c Var 'aux3' direct represents '1' with '512'
c Var 'aux3' order represents '1' with '1'
c Var 'aux3' order represents '0' with '-512'
c Encoding variable: aux4 with domain: bool (representing constraint (1<=((grid_00003_00001=5) + (grid_00003_00002=5) + (grid_00003_00003=5) + (5=grid_00001_00001) + (5=grid_00001_00002) + (5=grid_00001_00003) + (5=grid_00001_00004) + (5=grid_00002_00001) + (5=grid_00002_00003) + (5=grid_00002_00004) + (grid_00004_00000=5) + (grid_00004_00001=5) + (grid_00004_00002=5) + (grid_00004_00004=5) + (grid_00000_00000=5) + (grid_00000_00001=5) + (grid_00000_00002=5) + (grid_00000_00003=5))))
c Var 'aux4' direct represents '0' with '-513'
c Var 'aux4' direct represents '1' with '513'
c Var 'aux4' order represents '1' with '1'
c Var 'aux4' order represents '0' with '-513'
c Encoding variable: aux5 with domain: bool (representing constraint (1<=((grid_00003_00001=6) + (grid_00003_00002=6) + (grid_00003_00003=6) + (6=grid_00001_00001) + (6=grid_00001_00002) + (6=grid_00001_00003) + (6=grid_00001_00004) + (6=grid_00002_00001) + (6=grid_00002_00003) + (6=grid_00002_00004) + (grid_00004_00000=6) + (grid_00004_00001=6) + (grid_00004_00002=6) + (grid_00004_00004=6) + (grid_00000_00000=6) + (grid_00000_00001=6) + (grid_00000_00002=6) + (grid_00000_00003=6))))
c Var 'aux5' direct represents '0' with '-514'
c Var 'aux5' direct represents '1' with '514'
c Var 'aux5' order represents '1' with '1'
c Var 'aux5' order represents '0' with '-514'
c Encoding variable: aux6 with domain: bool (representing constraint (1<=((grid_00003_00001=7) + (grid_00003_00002=7) + (grid_00003_00003=7) + (7=grid_00001_00001) + (7=grid_00001_00002) + (7=grid_00001_00003) + (7=grid_00001_00004) + (7=grid_00002_00001) + (7=grid_00002_00003) + (7=grid_00002_00004) + (grid_00004_00000=7) + (grid_00004_00001=7) + (grid_00004_00002=7) + (grid_00004_00004=7) + (grid_00000_00000=7) + (grid_00000_00001=7) + (grid_00000_00002=7) + (grid_00000_00003=7))))
c Var 'aux6' direct represents '0' with '-515'
c Var 'aux6' direct represents '1' with '515'
c Var 'aux6' order represents '1' with '1'
c Var 'aux6' order represents '0' with '-515'
c Encoding variable: aux7 with domain: bool (representing constraint (((grid_00003_00001=1) + (grid_00003_00002=1) + (grid_00003_00003=1) + (1=grid_00001_00001) + (1=grid_00001_00002) + (1=grid_00001_00003) + (1=grid_00001_00004) + (1=grid_00002_00001) + (1=grid_00002_00003) + (1=grid_00002_00004) + (grid_00004_00000=1) + (grid_00004_00001=1) + (grid_00004_00002=1) + (grid_00004_00004=1) + (grid_00000_00000=1) + (grid_00000_00001=1) + (grid_00000_00002=1) + (grid_00000_00003=1))<=1))
c Var 'aux7' direct represents '0' with '-516'
c Var 'aux7' direct represents '1' with '516'
c Var 'aux7' order represents '1' with '1'
c Var 'aux7' order represents '0' with '-516'
c Encoding variable: aux8 with domain: bool (representing constraint (((grid_00003_00001=2) + (grid_00003_00002=2) + (grid_00003_00003=2) + (2=grid_00001_00001) + (2=grid_00001_00002) + (2=grid_00001_00003) + (2=grid_00001_00004) + (2=grid_00002_00001) + (2=grid_00002_00003) + (2=grid_00002_00004) + (grid_00004_00000=2) + (grid_00004_00001=2) + (grid_00004_00002=2) + (grid_00004_00004=2) + (grid_00000_00000=2) + (grid_00000_00001=2) + (grid_00000_00002=2) + (grid_00000_00003=2))<=1))
c Var 'aux8' direct represents '0' with '-517'
c Var 'aux8' direct represents '1' with '517'
c Var 'aux8' order represents '1' with '1'
c Var 'aux8' order represents '0' with '-517'
c Encoding variable: aux9 with domain: bool (representing constraint (((grid_00003_00001=3) + (grid_00003_00002=3) + (grid_00003_00003=3) + (3=grid_00001_00001) + (3=grid_00001_00002) + (3=grid_00001_00003) + (3=grid_00001_00004) + (3=grid_00002_00001) + (3=grid_00002_00003) + (3=grid_00002_00004) + (grid_00004_00000=3) + (grid_00004_00001=3) + (grid_00004_00002=3) + (grid_00004_00004=3) + (grid_00000_00000=3) + (grid_00000_00001=3) + (grid_00000_00002=3) + (grid_00000_00003=3))<=1))
c Var 'aux9' direct represents '0' with '-518'
c Var 'aux9' direct represents '1' with '518'
c Var 'aux9' order represents '1' with '1'
c Var 'aux9' order represents '0' with '-518'
c Encoding variable: aux10 with domain: bool (representing constraint (((grid_00003_00001=4) + (grid_00003_00002=4) + (grid_00003_00003=4) + (4=grid_00001_00001) + (4=grid_00001_00002) + (4=grid_00001_00003) + (4=grid_00001_00004) + (4=grid_00002_00001) + (4=grid_00002_00003) + (4=grid_00002_00004) + (grid_00004_00000=4) + (grid_00004_00001=4) + (grid_00004_00002=4) + (grid_00004_00004=4) + (grid_00000_00000=4) + (grid_00000_00001=4) + (grid_00000_00002=4) + (grid_00000_00003=4))<=1))
c Var 'aux10' direct represents '0' with '-519'
c Var 'aux10' direct represents '1' with '519'
c Var 'aux10' order represents '1' with '1'
c Var 'aux10' order represents '0' with '-519'
c Encoding variable: aux11 with domain: bool (representing constraint (((grid_00003_00001=5) + (grid_00003_00002=5) + (grid_00003_00003=5) + (5=grid_00001_00001) + (5=grid_00001_00002) + (5=grid_00001_00003) + (5=grid_00001_00004) + (5=grid_00002_00001) + (5=grid_00002_00003) + (5=grid_00002_00004) + (grid_00004_00000=5) + (grid_00004_00001=5) + (grid_00004_00002=5) + (grid_00004_00004=5) + (grid_00000_00000=5) + (grid_00000_00001=5) + (grid_00000_00002=5) + (grid_00000_00003=5))<=1))
c Var 'aux11' direct represents '0' with '-520'
c Var 'aux11' direct represents '1' with '520'
c Var 'aux11' order represents '1' with '1'
c Var 'aux11' order represents '0' with '-520'
c Encoding variable: aux12 with domain: bool (representing constraint (((grid_00003_00001=6) + (grid_00003_00002=6) + (grid_00003_00003=6) + (6=grid_00001_00001) + (6=grid_00001_00002) + (6=grid_00001_00003) + (6=grid_00001_00004) + (6=grid_00002_00001) + (6=grid_00002_00003) + (6=grid_00002_00004) + (grid_00004_00000=6) + (grid_00004_00001=6) + (grid_00004_00002=6) + (grid_00004_00004=6) + (grid_00000_00000=6) + (grid_00000_00001=6) + (grid_00000_00002=6) + (grid_00000_00003=6))<=1))
c Var 'aux12' direct represents '0' with '-521'
c Var 'aux12' direct represents '1' with '521'
c Var 'aux12' order represents '1' with '1'
c Var 'aux12' order represents '0' with '-521'
c Encoding variable: aux13 with domain: bool (representing constraint (((grid_00003_00001=7) + (grid_00003_00002=7) + (grid_00003_00003=7) + (7=grid_00001_00001) + (7=grid_00001_00002) + (7=grid_00001_00003) + (7=grid_00001_00004) + (7=grid_00002_00001) + (7=grid_00002_00003) + (7=grid_00002_00004) + (grid_00004_00000=7) + (grid_00004_00001=7) + (grid_00004_00002=7) + (grid_00004_00004=7) + (grid_00000_00000=7) + (grid_00000_00001=7) + (grid_00000_00002=7) + (grid_00000_00003=7))<=1))
c Var 'aux13' direct represents '0' with '-522'
c Var 'aux13' direct represents '1' with '522'
c Var 'aux13' order represents '1' with '1'
c Var 'aux13' order represents '0' with '-522'
c Encoding variable: aux14 with domain: bool (representing constraint (2<=((0<grid_00000_00000) + (0<grid_00000_00001) + (0<grid_00000_00002) + (0<grid_00000_00003))))
c Var 'aux14' direct represents '0' with '-523'
c Var 'aux14' direct represents '1' with '523'
c Var 'aux14' order represents '1' with '1'
c Var 'aux14' order represents '0' with '-523'
c Encoding variable: aux15 with domain: bool (representing constraint (2<=((0<grid_00002_00001) + (0<grid_00002_00003) + (0<grid_00002_00004))))
c Var 'aux15' direct represents '0' with '-524'
c Var 'aux15' direct represents '1' with '524'
c Var 'aux15' order represents '1' with '1'
c Var 'aux15' order represents '0' with '-524'
c Encoding variable: aux16 with domain: bool (representing constraint (3<=((0<grid_00004_00000) + (0<grid_00004_00001) + (0<grid_00004_00002) + (0<grid_00004_00004))))
c Var 'aux16' direct represents '0' with '-525'
c Var 'aux16' direct represents '1' with '525'
c Var 'aux16' order represents '1' with '1'
c Var 'aux16' order represents '0' with '-525'
c Encoding variable: aux17 with domain: bool (representing constraint (((0<grid_00000_00000) + (0<grid_00000_00001) + (0<grid_00000_00002) + (0<grid_00000_00003))<=2))
c Var 'aux17' direct represents '0' with '-526'
c Var 'aux17' direct represents '1' with '526'
c Var 'aux17' order represents '1' with '1'
c Var 'aux17' order represents '0' with '-526'
c Encoding variable: aux18 with domain: bool (representing constraint (((0<grid_00001_00001) + (0<grid_00001_00002) + (0<grid_00001_00003) + (0<grid_00001_00004))<=0))
c Var 'aux18' direct represents '0' with '-527'
c Var 'aux18' direct represents '1' with '527'
c Var 'aux18' order represents '1' with '1'
c Var 'aux18' order represents '0' with '-527'
c Encoding variable: aux19 with domain: bool (representing constraint (((0<grid_00002_00001) + (0<grid_00002_00003) + (0<grid_00002_00004))<=2))
c Var 'aux19' direct represents '0' with '-528'
c Var 'aux19' direct represents '1' with '528'
c Var 'aux19' order represents '1' with '1'
c Var 'aux19' order represents '0' with '-528'
c Encoding variable: aux20 with domain: bool (representing constraint (((0<grid_00003_00001) + (0<grid_00003_00002) + (0<grid_00003_00003))<=0))
c Var 'aux20' direct represents '0' with '-529'
c Var 'aux20' direct represents '1' with '529'
c Var 'aux20' order represents '1' with '1'
c Var 'aux20' order represents '0' with '-529'
c Encoding variable: aux21 with domain: bool (representing constraint (((0<grid_00004_00000) + (0<grid_00004_00001) + (0<grid_00004_00002) + (0<grid_00004_00004))<=3))
c Var 'aux21' direct represents '0' with '-530'
c Var 'aux21' direct represents '1' with '530'
c Var 'aux21' order represents '1' with '1'
c Var 'aux21' order represents '0' with '-530'
c Encoding variable: aux22 with domain: bool (representing constraint (2<=((0<grid_00004_00000) + (0<grid_00000_00000))))
c Var 'aux22' direct represents '0' with '-531'
c Var 'aux22' direct represents '1' with '531'
c Var 'aux22' order represents '1' with '1'
c Var 'aux22' order represents '0' with '-531'
c Encoding variable: aux23 with domain: bool (representing constraint (1<=((0<grid_00002_00001) + (0<grid_00003_00001) + (0<grid_00004_00001) + (0<grid_00000_00001) + (0<grid_00001_00001))))
c Var 'aux23' direct represents '0' with '-532'
c Var 'aux23' direct represents '1' with '532'
c Var 'aux23' order represents '1' with '1'
c Var 'aux23' order represents '0' with '-532'
c Encoding variable: aux24 with domain: bool (representing constraint (1<=((0<grid_00003_00002) + (0<grid_00004_00002) + (0<grid_00000_00002) + (0<grid_00001_00002))))
c Var 'aux24' direct represents '0' with '-533'
c Var 'aux24' direct represents '1' with '533'
c Var 'aux24' order represents '1' with '1'
c Var 'aux24' order represents '0' with '-533'
c Encoding variable: aux25 with domain: bool (representing constraint (1<=((0<grid_00002_00004) + (0<grid_00004_00004) + (0<grid_00001_00004))))
c Var 'aux25' direct represents '0' with '-534'
c Var 'aux25' direct represents '1' with '534'
c Var 'aux25' order represents '1' with '1'
c Var 'aux25' order represents '0' with '-534'
c Encoding variable: aux26 with domain: bool (representing constraint (((0<grid_00002_00001) + (0<grid_00003_00001) + (0<grid_00004_00001) + (0<grid_00000_00001) + (0<grid_00001_00001))<=1))
c Var 'aux26' direct represents '0' with '-535'
c Var 'aux26' direct represents '1' with '535'
c Var 'aux26' order represents '1' with '1'
c Var 'aux26' order represents '0' with '-535'
c Encoding variable: aux27 with domain: bool (representing constraint (((0<grid_00003_00002) + (0<grid_00004_00002) + (0<grid_00000_00002) + (0<grid_00001_00002))<=1))
c Var 'aux27' direct represents '0' with '-536'
c Var 'aux27' direct represents '1' with '536'
c Var 'aux27' order represents '1' with '1'
c Var 'aux27' order represents '0' with '-536'
c Encoding variable: aux28 with domain: bool (representing constraint (((0<grid_00002_00004) + (0<grid_00004_00004) + (0<grid_00001_00004))<=1))
c Var 'aux28' direct represents '0' with '-537'
c Var 'aux28' direct represents '1' with '537'
c Var 'aux28' order represents '1' with '1'
c Var 'aux28' order represents '0' with '-537'
c Encoding variable: aux29 with domain: int(0..2) (representing constraint ((grid_00003_00001=1) + (grid_00000_00003=1)))
c Both direct and order encoding.
c Var 'aux29' order represents '0' with '538'
c Var 'aux29' direct represents '0' with '538'
c Var 'aux29' order represents '1' with '539'
-538 539 0
c Var 'aux29' direct represents '1' with '540'
538 -539 540 0
-540 539 0
-540 -538 0
c Var 'aux29' direct represents '2' with '-539'
538 540 -539 0
c Encoding variable: aux30 with domain: int(0..2) (representing constraint ((grid_00000_00002=1) + (grid_00003_00002=1)))
c Both direct and order encoding.
c Var 'aux30' order represents '0' with '541'
c Var 'aux30' direct represents '0' with '541'
c Var 'aux30' order represents '1' with '542'
-541 542 0
c Var 'aux30' direct represents '1' with '543'
541 -542 543 0
-543 542 0
-543 -541 0
c Var 'aux30' direct represents '2' with '-542'
541 543 -542 0
c Encoding variable: aux31 with domain: int(0..2) (representing constraint ((1=grid_00001_00001) + (1=grid_00002_00001)))
c Both direct and order encoding.
c Var 'aux31' order represents '0' with '544'
c Var 'aux31' direct represents '0' with '544'
c Var 'aux31' order represents '1' with '545'
-544 545 0
c Var 'aux31' direct represents '1' with '546'
544 -545 546 0
-546 545 0
-546 -544 0
c Var 'aux31' direct represents '2' with '-545'
544 546 -545 0
c Encoding variable: aux32 with domain: int(0..2) (representing constraint ((grid_00000_00000=1) + (grid_00000_00001=1)))
c Both direct and order encoding.
c Var 'aux32' order represents '0' with '547'
c Var 'aux32' direct represents '0' with '547'
c Var 'aux32' order represents '1' with '548'
-547 548 0
c Var 'aux32' direct represents '1' with '549'
547 -548 549 0
-549 548 0
-549 -547 0
c Var 'aux32' direct represents '2' with '-548'
547 549 -548 0
c Encoding variable: aux33 with domain: int(0..2) (representing constraint ((grid_00004_00004=1) + (1=grid_00002_00003)))
c Both direct and order encoding.
c Var 'aux33' order represents '0' with '550'
c Var 'aux33' direct represents '0' with '550'
c Var 'aux33' order represents '1' with '551'
-550 551 0
c Var 'aux33' direct represents '1' with '552'
550 -551 552 0
-552 551 0
-552 -550 0
c Var 'aux33' direct represents '2' with '-551'
550 552 -551 0
c Encoding variable: aux34 with domain: int(0..2) (representing constraint ((grid_00004_00002=1) + (1=grid_00001_00002)))
c Both direct and order encoding.
c Var 'aux34' order represents '0' with '553'
c Var 'aux34' direct represents '0' with '553'
c Var 'aux34' order represents '1' with '554'
-553 554 0
c Var 'aux34' direct represents '1' with '555'
553 -554 555 0
-555 554 0
-555 -553 0
c Var 'aux34' direct represents '2' with '-554'
553 555 -554 0
c Encoding variable: aux35 with domain: int(0..2) (representing constraint ((grid_00004_00001=1) + (1=grid_00002_00004)))
c Both direct and order encoding.
c Var 'aux35' order represents '0' with '556'
c Var 'aux35' direct represents '0' with '556'
c Var 'aux35' order represents '1' with '557'
-556 557 0
c Var 'aux35' direct represents '1' with '558'
556 -557 558 0
-558 557 0
-558 -556 0
c Var 'aux35' direct represents '2' with '-557'
556 558 -557 0
c Encoding variable: aux36 with domain: int(0..2) (representing constraint ((grid_00004_00000=1) + (grid_00003_00003=1)))
c Both direct and order encoding.
c Var 'aux36' order represents '0' with '559'
c Var 'aux36' direct represents '0' with '559'
c Var 'aux36' order represents '1' with '560'
-559 560 0
c Var 'aux36' direct represents '1' with '561'
559 -560 561 0
-561 560 0
-561 -559 0
c Var 'aux36' direct represents '2' with '-560'
559 561 -560 0
c Encoding variable: aux37 with domain: int(0..2) (representing constraint ((1=grid_00001_00003) + (1=grid_00001_00004)))
c Both direct and order encoding.
c Var 'aux37' order represents '0' with '562'
c Var 'aux37' direct represents '0' with '562'
c Var 'aux37' order represents '1' with '563'
-562 563 0
c Var 'aux37' direct represents '1' with '564'
562 -563 564 0
-564 563 0
-564 -562 0
c Var 'aux37' direct represents '2' with '-563'
562 564 -563 0
c Encoding variable: aux38 with domain: int(0..4) (representing constraint (aux30 + aux37))
c Both direct and order encoding.
c Var 'aux38' order represents '0' with '565'
c Var 'aux38' direct represents '0' with '565'
c Var 'aux38' order represents '1' with '566'
-565 566 0
c Var 'aux38' direct represents '1' with '567'
565 -566 567 0
-567 566 0
-567 -565 0
c Var 'aux38' order represents '2' with '568'
-566 568 0
c Var 'aux38' direct represents '2' with '569'
566 -568 569 0
-569 568 0
-569 -566 0
c Var 'aux38' order represents '3' with '570'
-568 570 0
c Var 'aux38' direct represents '3' with '571'
568 -570 571 0
-571 570 0
-571 -568 0
c Var 'aux38' direct represents '4' with '-570'
565 567 569 571 -570 0
c Encoding variable: aux39 with domain: int(0..4) (representing constraint (aux29 + aux33))
c Both direct and order encoding.
c Var 'aux39' order represents '0' with '572'
c Var 'aux39' direct represents '0' with '572'
c Var 'aux39' order represents '1' with '573'
-572 573 0
c Var 'aux39' direct represents '1' with '574'
572 -573 574 0
-574 573 0
-574 -572 0
c Var 'aux39' order represents '2' with '575'
-573 575 0
c Var 'aux39' direct represents '2' with '576'
573 -575 576 0
-576 575 0
-576 -573 0
c Var 'aux39' order represents '3' with '577'
-575 577 0
c Var 'aux39' direct represents '3' with '578'
575 -577 578 0
-578 577 0
-578 -575 0
c Var 'aux39' direct represents '4' with '-577'
572 574 576 578 -577 0
c Encoding variable: aux40 with domain: int(0..4) (representing constraint (aux32 + aux31))
c Both direct and order encoding.
c Var 'aux40' order represents '0' with '579'
c Var 'aux40' direct represents '0' with '579'
c Var 'aux40' order represents '1' with '580'
-579 580 0
c Var 'aux40' direct represents '1' with '581'
579 -580 581 0
-581 580 0
-581 -579 0
c Var 'aux40' order represents '2' with '582'
-580 582 0
c Var 'aux40' direct represents '2' with '583'
580 -582 583 0
-583 582 0
-583 -580 0
c Var 'aux40' order represents '3' with '584'
-582 584 0
c Var 'aux40' direct represents '3' with '585'
582 -584 585 0
-585 584 0
-585 -582 0
c Var 'aux40' direct represents '4' with '-584'
579 581 583 585 -584 0
c Encoding variable: aux41 with domain: int(0..4) (representing constraint (aux35 + aux34))
c Both direct and order encoding.
c Var 'aux41' order represents '0' with '586'
c Var 'aux41' direct represents '0' with '586'
c Var 'aux41' order represents '1' with '587'
-586 587 0
c Var 'aux41' direct represents '1' with '588'
586 -587 588 0
-588 587 0
-588 -586 0
c Var 'aux41' order represents '2' with '589'
-587 589 0
c Var 'aux41' direct represents '2' with '590'
587 -589 590 0
-590 589 0
-590 -587 0
c Var 'aux41' order represents '3' with '591'
-589 591 0
c Var 'aux41' direct represents '3' with '592'
589 -591 592 0
-592 591 0
-592 -589 0
c Var 'aux41' direct represents '4' with '-591'
586 588 590 592 -591 0
c Encoding variable: aux42 with domain: int(0..6) (representing constraint (aux36 + aux41))
c Both direct and order encoding.
c Var 'aux42' order represents '0' with '593'
c Var 'aux42' direct represents '0' with '593'
c Var 'aux42' order represents '1' with '594'
-593 594 0
c Var 'aux42' direct represents '1' with '595'
593 -594 595 0
-595 594 0
-595 -593 0
c Var 'aux42' order represents '2' with '596'
-594 596 0
c Var 'aux42' direct represents '2' with '597'
594 -596 597 0
-597 596 0
-597 -594 0
c Var 'aux42' order represents '3' with '598'
-596 598 0
c Var 'aux42' direct represents '3' with '599'
596 -598 599 0
-599 598 0
-599 -596 0
c Var 'aux42' order represents '4' with '600'
-598 600 0
c Var 'aux42' direct represents '4' with '601'
598 -600 601 0
-601 600 0
-601 -598 0
c Var 'aux42' order represents '5' with '602'
-600 602 0
c Var 'aux42' direct represents '5' with '603'
600 -602 603 0
-603 602 0
-603 -600 0
c Var 'aux42' direct represents '6' with '-602'
593 595 597 599 601 603 -602 0
c Encoding variable: aux43 with domain: int(0..8) (representing constraint (aux38 + aux40))
c Both direct and order encoding.
c Var 'aux43' order represents '0' with '604'
c Var 'aux43' direct represents '0' with '604'
c Var 'aux43' order represents '1' with '605'
-604 605 0
c Var 'aux43' direct represents '1' with '606'
604 -605 606 0
-606 605 0
-606 -604 0
c Var 'aux43' order represents '2' with '607'
-605 607 0
c Var 'aux43' direct represents '2' with '608'
605 -607 608 0
-608 607 0
-608 -605 0
c Var 'aux43' order represents '3' with '609'
-607 609 0
c Var 'aux43' direct represents '3' with '610'
607 -609 610 0
-610 609 0
-610 -607 0
c Var 'aux43' order represents '4' with '611'
-609 611 0
c Var 'aux43' direct represents '4' with '612'
609 -611 612 0
-612 611 0
-612 -609 0
c Var 'aux43' order represents '5' with '613'
-611 613 0
c Var 'aux43' direct represents '5' with '614'
611 -613 614 0
-614 613 0
-614 -611 0
c Var 'aux43' order represents '6' with '615'
-613 615 0
c Var 'aux43' direct represents '6' with '616'
613 -615 616 0
-616 615 0
-616 -613 0
c Var 'aux43' order represents '7' with '617'
-615 617 0
c Var 'aux43' direct represents '7' with '618'
615 -617 618 0
-618 617 0
-618 -615 0
c Var 'aux43' direct represents '8' with '-617'
604 606 608 610 612 614 616 618 -617 0
c Encoding variable: aux44 with domain: int(0..2) (representing constraint ((grid_00003_00001=2) + (grid_00000_00003=2)))
c Both direct and order encoding.
c Var 'aux44' order represents '0' with '619'
c Var 'aux44' direct represents '0' with '619'
c Var 'aux44' order represents '1' with '620'
-619 620 0
c Var 'aux44' direct represents '1' with '621'
619 -620 621 0
-621 620 0
-621 -619 0
c Var 'aux44' direct represents '2' with '-620'
619 621 -620 0
c Encoding variable: aux45 with domain: int(0..2) (representing constraint ((grid_00000_00002=2) + (grid_00003_00002=2)))
c Both direct and order encoding.
c Var 'aux45' order represents '0' with '622'
c Var 'aux45' direct represents '0' with '622'
c Var 'aux45' order represents '1' with '623'
-622 623 0
c Var 'aux45' direct represents '1' with '624'
622 -623 624 0
-624 623 0
-624 -622 0
c Var 'aux45' direct represents '2' with '-623'
622 624 -623 0
c Encoding variable: aux46 with domain: int(0..2) (representing constraint ((2=grid_00001_00001) + (2=grid_00002_00001)))
c Both direct and order encoding.
c Var 'aux46' order represents '0' with '625'
c Var 'aux46' direct represents '0' with '625'
c Var 'aux46' order represents '1' with '626'
-625 626 0
c Var 'aux46' direct represents '1' with '627'
625 -626 627 0
-627 626 0
-627 -625 0
c Var 'aux46' direct represents '2' with '-626'
625 627 -626 0
c Encoding variable: aux47 with domain: int(0..2) (representing constraint ((grid_00000_00000=2) + (grid_00000_00001=2)))
c Both direct and order encoding.
c Var 'aux47' order represents '0' with '628'
c Var 'aux47' direct represents '0' with '628'
c Var 'aux47' order represents '1' with '629'
-628 629 0
c Var 'aux47' direct represents '1' with '630'
628 -629 630 0
-630 629 0
-630 -628 0
c Var 'aux47' direct represents '2' with '-629'
628 630 -629 0
c Encoding variable: aux48 with domain: int(0..2) (representing constraint ((grid_00004_00004=2) + (2=grid_00002_00003)))
c Both direct and order encoding.
c Var 'aux48' order represents '0' with '631'
c Var 'aux48' direct represents '0' with '631'
c Var 'aux48' order represents '1' with '632'
-631 632 0
c Var 'aux48' direct represents '1' with '633'
631 -632 633 0
-633 632 0
-633 -631 0
c Var 'aux48' direct represents '2' with '-632'
631 633 -632 0
c Encoding variable: aux49 with domain: int(0..2) (representing constraint ((grid_00004_00002=2) + (2=grid_00001_00002)))
c Both direct and order encoding.
c Var 'aux49' order represents '0' with '634'
c Var 'aux49' direct represents '0' with '634'
c Var 'aux49' order represents '1' with '635'
-634 635 0
c Var 'aux49' direct represents '1' with '636'
634 -635 636 0
-636 635 0
-636 -634 0
c Var 'aux49' direct represents '2' with '-635'
634 636 -635 0
c Encoding variable: aux50 with domain: int(0..2) (representing constraint ((grid_00004_00001=2) + (2=grid_00002_00004)))
c Both direct and order encoding.
c Var 'aux50' order represents '0' with '637'
c Var 'aux50' direct represents '0' with '637'
c Var 'aux50' order represents '1' with '638'
-637 638 0
c Var 'aux50' direct represents '1' with '639'
637 -638 639 0
-639 638 0
-639 -637 0
c Var 'aux50' direct represents '2' with '-638'
637 639 -638 0
c Encoding variable: aux51 with domain: int(0..2) (representing constraint ((grid_00004_00000=2) + (grid_00003_00003=2)))
c Both direct and order encoding.
c Var 'aux51' order represents '0' with '640'
c Var 'aux51' direct represents '0' with '640'
c Var 'aux51' order represents '1' with '641'
-640 641 0
c Var 'aux51' direct represents '1' with '642'
640 -641 642 0
-642 641 0
-642 -640 0
c Var 'aux51' direct represents '2' with '-641'
640 642 -641 0
c Encoding variable: aux52 with domain: int(0..2) (representing constraint ((2=grid_00001_00003) + (2=grid_00001_00004)))
c Both direct and order encoding.
c Var 'aux52' order represents '0' with '643'
c Var 'aux52' direct represents '0' with '643'
c Var 'aux52' order represents '1' with '644'
-643 644 0
c Var 'aux52' direct represents '1' with '645'
643 -644 645 0
-645 644 0
-645 -643 0
c Var 'aux52' direct represents '2' with '-644'
643 645 -644 0
c Encoding variable: aux53 with domain: int(0..4) (representing constraint (aux45 + aux52))
c Both direct and order encoding.
c Var 'aux53' order represents '0' with '646'
c Var 'aux53' direct represents '0' with '646'
c Var 'aux53' order represents '1' with '647'
-646 647 0
c Var 'aux53' direct represents '1' with '648'
646 -647 648 0
-648 647 0
-648 -646 0
c Var 'aux53' order represents '2' with '649'
-647 649 0
c Var 'aux53' direct represents '2' with '650'
647 -649 650 0
-650 649 0
-650 -647 0
c Var 'aux53' order represents '3' with '651'
-649 651 0
c Var 'aux53' direct represents '3' with '652'
649 -651 652 0
-652 651 0
-652 -649 0
c Var 'aux53' direct represents '4' with '-651'
646 648 650 652 -651 0
c Encoding variable: aux54 with domain: int(0..4) (representing constraint (aux44 + aux48))
c Both direct and order encoding.
c Var 'aux54' order represents '0' with '653'
c Var 'aux54' direct represents '0' with '653'
c Var 'aux54' order represents '1' with '654'
-653 654 0
c Var 'aux54' direct represents '1' with '655'
653 -654 655 0
-655 654 0
-655 -653 0
c Var 'aux54' order represents '2' with '656'
-654 656 0
c Var 'aux54' direct represents '2' with '657'
654 -656 657 0
-657 656 0
-657 -654 0
c Var 'aux54' order represents '3' with '658'
-656 658 0
c Var 'aux54' direct represents '3' with '659'
656 -658 659 0
-659 658 0
-659 -656 0
c Var 'aux54' direct represents '4' with '-658'
653 655 657 659 -658 0
c Encoding variable: aux55 with domain: int(0..4) (representing constraint (aux47 + aux46))
c Both direct and order encoding.
c Var 'aux55' order represents '0' with '660'
c Var 'aux55' direct represents '0' with '660'
c Var 'aux55' order represents '1' with '661'
-660 661 0
c Var 'aux55' direct represents '1' with '662'
660 -661 662 0
-662 661 0
-662 -660 0
c Var 'aux55' order represents '2' with '663'
-661 663 0
c Var 'aux55' direct represents '2' with '664'
661 -663 664 0
-664 663 0
-664 -661 0
c Var 'aux55' order represents '3' with '665'
-663 665 0
c Var 'aux55' direct represents '3' with '666'
663 -665 666 0
-666 665 0
-666 -663 0
c Var 'aux55' direct represents '4' with '-665'
660 662 664 666 -665 0
c Encoding variable: aux56 with domain: int(0..4) (representing constraint (aux50 + aux49))
c Both direct and order encoding.
c Var 'aux56' order represents '0' with '667'
c Var 'aux56' direct represents '0' with '667'
c Var 'aux56' order represents '1' with '668'
-667 668 0
c Var 'aux56' direct represents '1' with '669'
667 -668 669 0
-669 668 0
-669 -667 0
c Var 'aux56' order represents '2' with '670'
-668 670 0
c Var 'aux56' direct represents '2' with '671'
668 -670 671 0
-671 670 0
-671 -668 0
c Var 'aux56' order represents '3' with '672'
-670 672 0
c Var 'aux56' direct represents '3' with '673'
670 -672 673 0
-673 672 0
-673 -670 0
c Var 'aux56' direct represents '4' with '-672'
667 669 671 673 -672 0
c Encoding variable: aux57 with domain: int(0..6) (representing constraint (aux51 + aux56))
c Both direct and order encoding.
c Var 'aux57' order represents '0' with '674'
c Var 'aux57' direct represents '0' with '674'
c Var 'aux57' order represents '1' with '675'
-674 675 0
c Var 'aux57' direct represents '1' with '676'
674 -675 676 0
-676 675 0
-676 -674 0
c Var 'aux57' order represents '2' with '677'
-675 677 0
c Var 'aux57' direct represents '2' with '678'
675 -677 678 0
-678 677 0
-678 -675 0
c Var 'aux57' order represents '3' with '679'
-677 679 0
c Var 'aux57' direct represents '3' with '680'
677 -679 680 0
-680 679 0
-680 -677 0
c Var 'aux57' order represents '4' with '681'
-679 681 0
c Var 'aux57' direct represents '4' with '682'
679 -681 682 0
-682 681 0
-682 -679 0
c Var 'aux57' order represents '5' with '683'
-681 683 0
c Var 'aux57' direct represents '5' with '684'
681 -683 684 0
-684 683 0
-684 -681 0
c Var 'aux57' direct represents '6' with '-683'
674 676 678 680 682 684 -683 0
c Encoding variable: aux58 with domain: int(0..8) (representing constraint (aux53 + aux55))
c Both direct and order encoding.
c Var 'aux58' order represents '0' with '685'
c Var 'aux58' direct represents '0' with '685'
c Var 'aux58' order represents '1' with '686'
-685 686 0
c Var 'aux58' direct represents '1' with '687'
685 -686 687 0
-687 686 0
-687 -685 0
c Var 'aux58' order represents '2' with '688'
-686 688 0
c Var 'aux58' direct represents '2' with '689'
686 -688 689 0
-689 688 0
-689 -686 0
c Var 'aux58' order represents '3' with '690'
-688 690 0
c Var 'aux58' direct represents '3' with '691'
688 -690 691 0
-691 690 0
-691 -688 0
c Var 'aux58' order represents '4' with '692'
-690 692 0
c Var 'aux58' direct represents '4' with '693'
690 -692 693 0
-693 692 0
-693 -690 0
c Var 'aux58' order represents '5' with '694'
-692 694 0
c Var 'aux58' direct represents '5' with '695'
692 -694 695 0
-695 694 0
-695 -692 0
c Var 'aux58' order represents '6' with '696'
-694 696 0
c Var 'aux58' direct represents '6' with '697'
694 -696 697 0
-697 696 0
-697 -694 0
c Var 'aux58' order represents '7' with '698'
-696 698 0
c Var 'aux58' direct represents '7' with '699'
696 -698 699 0
-699 698 0
-699 -696 0
c Var 'aux58' direct represents '8' with '-698'
685 687 689 691 693 695 697 699 -698 0
c Encoding variable: aux59 with domain: int(0..2) (representing constraint ((grid_00003_00001=3) + (grid_00000_00003=3)))
c Both direct and order encoding.
c Var 'aux59' order represents '0' with '700'
c Var 'aux59' direct represents '0' with '700'
c Var 'aux59' order represents '1' with '701'
-700 701 0
c Var 'aux59' direct represents '1' with '702'
700 -701 702 0
-702 701 0
-702 -700 0
c Var 'aux59' direct represents '2' with '-701'
700 702 -701 0
c Encoding variable: aux60 with domain: int(0..2) (representing constraint ((grid_00000_00002=3) + (grid_00003_00002=3)))
c Both direct and order encoding.
c Var 'aux60' order represents '0' with '703'
c Var 'aux60' direct represents '0' with '703'
c Var 'aux60' order represents '1' with '704'
-703 704 0
c Var 'aux60' direct represents '1' with '705'
703 -704 705 0
-705 704 0
-705 -703 0
c Var 'aux60' direct represents '2' with '-704'
703 705 -704 0
c Encoding variable: aux61 with domain: int(0..2) (representing constraint ((3=grid_00001_00001) + (3=grid_00002_00001)))
c Both direct and order encoding.
c Var 'aux61' order represents '0' with '706'
c Var 'aux61' direct represents '0' with '706'
c Var 'aux61' order represents '1' with '707'
-706 707 0
c Var 'aux61' direct represents '1' with '708'
706 -707 708 0
-708 707 0
-708 -706 0
c Var 'aux61' direct represents '2' with '-707'
706 708 -707 0
c Encoding variable: aux62 with domain: int(0..2) (representing constraint ((grid_00000_00000=3) + (grid_00000_00001=3)))
c Both direct and order encoding.
c Var 'aux62' order represents '0' with '709'
c Var 'aux62' direct represents '0' with '709'
c Var 'aux62' order represents '1' with '710'
-709 710 0
c Var 'aux62' direct represents '1' with '711'
709 -710 711 0
-711 710 0
-711 -709 0
c Var 'aux62' direct represents '2' with '-710'
709 711 -710 0
c Encoding variable: aux63 with domain: int(0..2) (representing constraint ((grid_00004_00004=3) + (3=grid_00002_00003)))
c Both direct and order encoding.
c Var 'aux63' order represents '0' with '712'
c Var 'aux63' direct represents '0' with '712'
c Var 'aux63' order represents '1' with '713'
-712 713 0
c Var 'aux63' direct represents '1' with '714'
712 -713 714 0
-714 713 0
-714 -712 0
c Var 'aux63' direct represents '2' with '-713'
712 714 -713 0
c Encoding variable: aux64 with domain: int(0..2) (representing constraint ((grid_00004_00002=3) + (3=grid_00001_00002)))
c Both direct and order encoding.
c Var 'aux64' order represents '0' with '715'
c Var 'aux64' direct represents '0' with '715'
c Var 'aux64' order represents '1' with '716'
-715 716 0
c Var 'aux64' direct represents '1' with '717'
715 -716 717 0
-717 716 0
-717 -715 0
c Var 'aux64' direct represents '2' with '-716'
715 717 -716 0
c Encoding variable: aux65 with domain: int(0..2) (representing constraint ((grid_00004_00001=3) + (3=grid_00002_00004)))
c Both direct and order encoding.
c Var 'aux65' order represents '0' with '718'
c Var 'aux65' direct represents '0' with '718'
c Var 'aux65' order represents '1' with '719'
-718 719 0
c Var 'aux65' direct represents '1' with '720'
718 -719 720 0
-720 719 0
-720 -718 0
c Var 'aux65' direct represents '2' with '-719'
718 720 -719 0
c Encoding variable: aux66 with domain: int(0..2) (representing constraint ((grid_00004_00000=3) + (grid_00003_00003=3)))
c Both direct and order encoding.
c Var 'aux66' order represents '0' with '721'
c Var 'aux66' direct represents '0' with '721'
c Var 'aux66' order represents '1' with '722'
-721 722 0
c Var 'aux66' direct represents '1' with '723'
721 -722 723 0
-723 722 0
-723 -721 0
c Var 'aux66' direct represents '2' with '-722'
721 723 -722 0
c Encoding variable: aux67 with domain: int(0..2) (representing constraint ((3=grid_00001_00003) + (3=grid_00001_00004)))
c Both direct and order encoding.
c Var 'aux67' order represents '0' with '724'
c Var 'aux67' direct represents '0' with '724'
c Var 'aux67' order represents '1' with '725'
-724 725 0
c Var 'aux67' direct represents '1' with '726'
724 -725 726 0
-726 725 0
-726 -724 0
c Var 'aux67' direct represents '2' with '-725'
724 726 -725 0
c Encoding variable: aux68 with domain: int(0..4) (representing constraint (aux60 + aux67))
c Both direct and order encoding.
c Var 'aux68' order represents '0' with '727'
c Var 'aux68' direct represents '0' with '727'
c Var 'aux68' order represents '1' with '728'
-727 728 0
c Var 'aux68' direct represents '1' with '729'
727 -728 729 0
-729 728 0
-729 -727 0
c Var 'aux68' order represents '2' with '730'
-728 730 0
c Var 'aux68' direct represents '2' with '731'
728 -730 731 0
-731 730 0
-731 -728 0
c Var 'aux68' order represents '3' with '732'
-730 732 0
c Var 'aux68' direct represents '3' with '733'
730 -732 733 0
-733 732 0
-733 -730 0
c Var 'aux68' direct represents '4' with '-732'
727 729 731 733 -732 0
c Encoding variable: aux69 with domain: int(0..4) (representing constraint (aux59 + aux63))
c Both direct and order encoding.
c Var 'aux69' order represents '0' with '734'
c Var 'aux69' direct represents '0' with '734'
c Var 'aux69' order represents '1' with '735'
-734 735 0
c Var 'aux69' direct represents '1' with '736'
734 -735 736 0
-736 735 0
-736 -734 0
c Var 'aux69' order represents '2' with '737'
-735 737 0
c Var 'aux69' direct represents '2' with '738'
735 -737 738 0
-738 737 0
-738 -735 0
c Var 'aux69' order represents '3' with '739'
-737 739 0
c Var 'aux69' direct represents '3' with '740'
737 -739 740 0
-740 739 0
-740 -737 0
c Var 'aux69' direct represents '4' with '-739'
734 736 738 740 -739 0
c Encoding variable: aux70 with domain: int(0..4) (representing constraint (aux62 + aux61))
c Both direct and order encoding.
c Var 'aux70' order represents '0' with '741'
c Var 'aux70' direct represents '0' with '741'
c Var 'aux70' order represents '1' with '742'
-741 742 0
c Var 'aux70' direct represents '1' with '743'
741 -742 743 0
-743 742 0
-743 -741 0
c Var 'aux70' order represents '2' with '744'
-742 744 0
c Var 'aux70' direct represents '2' with '745'
742 -744 745 0
-745 744 0
-745 -742 0
c Var 'aux70' order represents '3' with '746'
-744 746 0
c Var 'aux70' direct represents '3' with '747'
744 -746 747 0
-747 746 0
-747 -744 0
c Var 'aux70' direct represents '4' with '-746'
741 743 745 747 -746 0
c Encoding variable: aux71 with domain: int(0..4) (representing constraint (aux65 + aux64))
c Both direct and order encoding.
c Var 'aux71' order represents '0' with '748'
c Var 'aux71' direct represents '0' with '748'
c Var 'aux71' order represents '1' with '749'
-748 749 0
c Var 'aux71' direct represents '1' with '750'
748 -749 750 0
-750 749 0
-750 -748 0
c Var 'aux71' order represents '2' with '751'
-749 751 0
c Var 'aux71' direct represents '2' with '752'
749 -751 752 0
-752 751 0
-752 -749 0
c Var 'aux71' order represents '3' with '753'
-751 753 0
c Var 'aux71' direct represents '3' with '754'
751 -753 754 0
-754 753 0
-754 -751 0
c Var 'aux71' direct represents '4' with '-753'
748 750 752 754 -753 0
c Encoding variable: aux72 with domain: int(0..6) (representing constraint (aux66 + aux71))
c Both direct and order encoding.
c Var 'aux72' order represents '0' with '755'
c Var 'aux72' direct represents '0' with '755'
c Var 'aux72' order represents '1' with '756'
-755 756 0
c Var 'aux72' direct represents '1' with '757'
755 -756 757 0
-757 756 0
-757 -755 0
c Var 'aux72' order represents '2' with '758'
-756 758 0
c Var 'aux72' direct represents '2' with '759'
756 -758 759 0
-759 758 0
-759 -756 0
c Var 'aux72' order represents '3' with '760'
-758 760 0
c Var 'aux72' direct represents '3' with '761'
758 -760 761 0
-761 760 0
-761 -758 0
c Var 'aux72' order represents '4' with '762'
-760 762 0
c Var 'aux72' direct represents '4' with '763'
760 -762 763 0
-763 762 0
-763 -760 0
c Var 'aux72' order represents '5' with '764'
-762 764 0
c Var 'aux72' direct represents '5' with '765'
762 -764 765 0
-765 764 0
-765 -762 0
c Var 'aux72' direct represents '6' with '-764'
755 757 759 761 763 765 -764 0
c Encoding variable: aux73 with domain: int(0..8) (representing constraint (aux68 + aux70))
c Both direct and order encoding.
c Var 'aux73' order represents '0' with '766'
c Var 'aux73' direct represents '0' with '766'
c Var 'aux73' order represents '1' with '767'
-766 767 0
c Var 'aux73' direct represents '1' with '768'
766 -767 768 0
-768 767 0
-768 -766 0
c Var 'aux73' order represents '2' with '769'
-767 769 0
c Var 'aux73' direct represents '2' with '770'
767 -769 770 0
-770 769 0
-770 -767 0
c Var 'aux73' order represents '3' with '771'
-769 771 0
c Var 'aux73' direct represents '3' with '772'
769 -771 772 0
-772 771 0
-772 -769 0
c Var 'aux73' order represents '4' with '773'
-771 773 0
c Var 'aux73' direct represents '4' with '774'
771 -773 774 0
-774 773 0
-774 -771 0
c Var 'aux73' order represents '5' with '775'
-773 775 0
c Var 'aux73' direct represents '5' with '776'
773 -775 776 0
-776 775 0
-776 -773 0
c Var 'aux73' order represents '6' with '777'
-775 777 0
c Var 'aux73' direct represents '6' with '778'
775 -777 778 0
-778 777 0
-778 -775 0
c Var 'aux73' order represents '7' with '779'
-777 779 0
c Var 'aux73' direct represents '7' with '780'
777 -779 780 0
-780 779 0
-780 -777 0
c Var 'aux73' direct represents '8' with '-779'
766 768 770 772 774 776 778 780 -779 0
c Encoding variable: aux74 with domain: int(0..2) (representing constraint ((grid_00003_00001=4) + (grid_00000_00003=4)))
c Both direct and order encoding.
c Var 'aux74' order represents '0' with '781'
c Var 'aux74' direct represents '0' with '781'
c Var 'aux74' order represents '1' with '782'
-781 782 0
c Var 'aux74' direct represents '1' with '783'
781 -782 783 0
-783 782 0
-783 -781 0
c Var 'aux74' direct represents '2' with '-782'
781 783 -782 0
c Encoding variable: aux75 with domain: int(0..2) (representing constraint ((grid_00000_00002=4) + (grid_00003_00002=4)))
c Both direct and order encoding.
c Var 'aux75' order represents '0' with '784'
c Var 'aux75' direct represents '0' with '784'
c Var 'aux75' order represents '1' with '785'
-784 785 0
c Var 'aux75' direct represents '1' with '786'
784 -785 786 0
-786 785 0
-786 -784 0
c Var 'aux75' direct represents '2' with '-785'
784 786 -785 0
c Encoding variable: aux76 with domain: int(0..2) (representing constraint ((4=grid_00001_00001) + (4=grid_00002_00001)))
c Both direct and order encoding.
c Var 'aux76' order represents '0' with '787'
c Var 'aux76' direct represents '0' with '787'
c Var 'aux76' order represents '1' with '788'
-787 788 0
c Var 'aux76' direct represents '1' with '789'
787 -788 789 0
-789 788 0
-789 -787 0
c Var 'aux76' direct represents '2' with '-788'
787 789 -788 0
c Encoding variable: aux77 with domain: int(0..2) (representing constraint ((grid_00000_00000=4) + (grid_00000_00001=4)))
c Both direct and order encoding.
c Var 'aux77' order represents '0' with '790'
c Var 'aux77' direct represents '0' with '790'
c Var 'aux77' order represents '1' with '791'
-790 791 0
c Var 'aux77' direct represents '1' with '792'
790 -791 792 0
-792 791 0
-792 -790 0
c Var 'aux77' direct represents '2' with '-791'
790 792 -791 0
c Encoding variable: aux78 with domain: int(0..2) (representing constraint ((grid_00004_00004=4) + (4=grid_00002_00003)))
c Both direct and order encoding.
c Var 'aux78' order represents '0' with '793'
c Var 'aux78' direct represents '0' with '793'
c Var 'aux78' order represents '1' with '794'
-793 794 0
c Var 'aux78' direct represents '1' with '795'
793 -794 795 0
-795 794 0
-795 -793 0
c Var 'aux78' direct represents '2' with '-794'
793 795 -794 0
c Encoding variable: aux79 with domain: int(0..2) (representing constraint ((grid_00004_00002=4) + (4=grid_00001_00002)))
c Both direct and order encoding.
c Var 'aux79' order represents '0' with '796'
c Var 'aux79' direct represents '0' with '796'
c Var 'aux79' order represents '1' with '797'
-796 797 0
c Var 'aux79' direct represents '1' with '798'
796 -797 798 0
-798 797 0
-798 -796 0
c Var 'aux79' direct represents '2' with '-797'
796 798 -797 0
c Encoding variable: aux80 with domain: int(0..2) (representing constraint ((grid_00004_00001=4) + (4=grid_00002_00004)))
c Both direct and order encoding.
c Var 'aux80' order represents '0' with '799'
c Var 'aux80' direct represents '0' with '799'
c Var 'aux80' order represents '1' with '800'
-799 800 0
c Var 'aux80' direct represents '1' with '801'
799 -800 801 0
-801 800 0
-801 -799 0
c Var 'aux80' direct represents '2' with '-800'
799 801 -800 0
c Encoding variable: aux81 with domain: int(0..2) (representing constraint ((grid_00004_00000=4) + (grid_00003_00003=4)))
c Both direct and order encoding.
c Var 'aux81' order represents '0' with '802'
c Var 'aux81' direct represents '0' with '802'
c Var 'aux81' order represents '1' with '803'
-802 803 0
c Var 'aux81' direct represents '1' with '804'
802 -803 804 0
-804 803 0
-804 -802 0
c Var 'aux81' direct represents '2' with '-803'
802 804 -803 0
c Encoding variable: aux82 with domain: int(0..2) (representing constraint ((4=grid_00001_00003) + (4=grid_00001_00004)))
c Both direct and order encoding.
c Var 'aux82' order represents '0' with '805'
c Var 'aux82' direct represents '0' with '805'
c Var 'aux82' order represents '1' with '806'
-805 806 0
c Var 'aux82' direct represents '1' with '807'
805 -806 807 0
-807 806 0
-807 -805 0
c Var 'aux82' direct represents '2' with '-806'
805 807 -806 0
c Encoding variable: aux83 with domain: int(0..4) (representing constraint (aux75 + aux82))
c Both direct and order encoding.
c Var 'aux83' order represents '0' with '808'
c Var 'aux83' direct represents '0' with '808'
c Var 'aux83' order represents '1' with '809'
-808 809 0
c Var 'aux83' direct represents '1' with '810'
808 -809 810 0
-810 809 0
-810 -808 0
c Var 'aux83' order represents '2' with '811'
-809 811 0
c Var 'aux83' direct represents '2' with '812'
809 -811 812 0
-812 811 0
-812 -809 0
c Var 'aux83' order represents '3' with '813'
-811 813 0
c Var 'aux83' direct represents '3' with '814'
811 -813 814 0
-814 813 0
-814 -811 0
c Var 'aux83' direct represents '4' with '-813'
808 810 812 814 -813 0
c Encoding variable: aux84 with domain: int(0..4) (representing constraint (aux74 + aux78))
c Both direct and order encoding.
c Var 'aux84' order represents '0' with '815'
c Var 'aux84' direct represents '0' with '815'
c Var 'aux84' order represents '1' with '816'
-815 816 0
c Var 'aux84' direct represents '1' with '817'
815 -816 817 0
-817 816 0
-817 -815 0
c Var 'aux84' order represents '2' with '818'
-816 818 0
c Var 'aux84' direct represents '2' with '819'
816 -818 819 0
-819 818 0
-819 -816 0
c Var 'aux84' order represents '3' with '820'
-818 820 0
c Var 'aux84' direct represents '3' with '821'
818 -820 821 0
-821 820 0
-821 -818 0
c Var 'aux84' direct represents '4' with '-820'
815 817 819 821 -820 0
c Encoding variable: aux85 with domain: int(0..4) (representing constraint (aux77 + aux76))
c Both direct and order encoding.
c Var 'aux85' order represents '0' with '822'
c Var 'aux85' direct represents '0' with '822'
c Var 'aux85' order represents '1' with '823'
-822 823 0
c Var 'aux85' direct represents '1' with '824'
822 -823 824 0
-824 823 0
-824 -822 0
c Var 'aux85' order represents '2' with '825'
-823 825 0
c Var 'aux85' direct represents '2' with '826'
823 -825 826 0
-826 825 0
-826 -823 0
c Var 'aux85' order represents '3' with '827'
-825 827 0
c Var 'aux85' direct represents '3' with '828'
825 -827 828 0
-828 827 0
-828 -825 0
c Var 'aux85' direct represents '4' with '-827'
822 824 826 828 -827 0
c Encoding variable: aux86 with domain: int(0..4) (representing constraint (aux80 + aux79))
c Both direct and order encoding.
c Var 'aux86' order represents '0' with '829'
c Var 'aux86' direct represents '0' with '829'
c Var 'aux86' order represents '1' with '830'
-829 830 0
c Var 'aux86' direct represents '1' with '831'
829 -830 831 0
-831 830 0
-831 -829 0
c Var 'aux86' order represents '2' with '832'
-830 832 0
c Var 'aux86' direct represents '2' with '833'
830 -832 833 0
-833 832 0
-833 -830 0
c Var 'aux86' order represents '3' with '834'
-832 834 0
c Var 'aux86' direct represents '3' with '835'
832 -834 835 0
-835 834 0
-835 -832 0
c Var 'aux86' direct represents '4' with '-834'
829 831 833 835 -834 0
c Encoding variable: aux87 with domain: int(0..6) (representing constraint (aux81 + aux86))
c Both direct and order encoding.
c Var 'aux87' order represents '0' with '836'
c Var 'aux87' direct represents '0' with '836'
c Var 'aux87' order represents '1' with '837'
-836 837 0
c Var 'aux87' direct represents '1' with '838'
836 -837 838 0
-838 837 0
-838 -836 0
c Var 'aux87' order represents '2' with '839'
-837 839 0
c Var 'aux87' direct represents '2' with '840'
837 -839 840 0
-840 839 0
-840 -837 0
c Var 'aux87' order represents '3' with '841'
-839 841 0
c Var 'aux87' direct represents '3' with '842'
839 -841 842 0
-842 841 0
-842 -839 0
c Var 'aux87' order represents '4' with '843'
-841 843 0
c Var 'aux87' direct represents '4' with '844'
841 -843 844 0
-844 843 0
-844 -841 0
c Var 'aux87' order represents '5' with '845'
-843 845 0
c Var 'aux87' direct represents '5' with '846'
843 -845 846 0
-846 845 0
-846 -843 0
c Var 'aux87' direct represents '6' with '-845'
836 838 840 842 844 846 -845 0
c Encoding variable: aux88 with domain: int(0..8) (representing constraint (aux83 + aux85))
c Both direct and order encoding.
c Var 'aux88' order represents '0' with '847'
c Var 'aux88' direct represents '0' with '847'
c Var 'aux88' order represents '1' with '848'
-847 848 0
c Var 'aux88' direct represents '1' with '849'
847 -848 849 0
-849 848 0
-849 -847 0
c Var 'aux88' order represents '2' with '850'
-848 850 0
c Var 'aux88' direct represents '2' with '851'
848 -850 851 0
-851 850 0
-851 -848 0
c Var 'aux88' order represents '3' with '852'
-850 852 0
c Var 'aux88' direct represents '3' with '853'
850 -852 853 0
-853 852 0
-853 -850 0
c Var 'aux88' order represents '4' with '854'
-852 854 0
c Var 'aux88' direct represents '4' with '855'
852 -854 855 0
-855 854 0
-855 -852 0
c Var 'aux88' order represents '5' with '856'
-854 856 0
c Var 'aux88' direct represents '5' with '857'
854 -856 857 0
-857 856 0
-857 -854 0
c Var 'aux88' order represents '6' with '858'
-856 858 0
c Var 'aux88' direct represents '6' with '859'
856 -858 859 0
-859 858 0
-859 -856 0
c Var 'aux88' order represents '7' with '860'
-858 860 0
c Var 'aux88' direct represents '7' with '861'
858 -860 861 0
-861 860 0
-861 -858 0
c Var 'aux88' direct represents '8' with '-860'
847 849 851 853 855 857 859 861 -860 0
c Encoding variable: aux89 with domain: int(0..2) (representing constraint ((grid_00003_00001=5) + (grid_00000_00003=5)))
c Both direct and order encoding.
c Var 'aux89' order represents '0' with '862'
c Var 'aux89' direct represents '0' with '862'
c Var 'aux89' order represents '1' with '863'
-862 863 0
c Var 'aux89' direct represents '1' with '864'
862 -863 864 0
-864 863 0
-864 -862 0
c Var 'aux89' direct represents '2' with '-863'
862 864 -863 0
c Encoding variable: aux90 with domain: int(0..2) (representing constraint ((grid_00000_00002=5) + (grid_00003_00002=5)))
c Both direct and order encoding.
c Var 'aux90' order represents '0' with '865'
c Var 'aux90' direct represents '0' with '865'
c Var 'aux90' order represents '1' with '866'
-865 866 0
c Var 'aux90' direct represents '1' with '867'
865 -866 867 0
-867 866 0
-867 -865 0
c Var 'aux90' direct represents '2' with '-866'
865 867 -866 0
c Encoding variable: aux91 with domain: int(0..2) (representing constraint ((5=grid_00001_00001) + (5=grid_00002_00001)))
c Both direct and order encoding.
c Var 'aux91' order represents '0' with '868'
c Var 'aux91' direct represents '0' with '868'
c Var 'aux91' order represents '1' with '869'
-868 869 0
c Var 'aux91' direct represents '1' with '870'
868 -869 870 0
-870 869 0
-870 -868 0
c Var 'aux91' direct represents '2' with '-869'
868 870 -869 0
c Encoding variable: aux92 with domain: int(0..2) (representing constraint ((grid_00000_00000=5) + (grid_00000_00001=5)))
c Both direct and order encoding.
c Var 'aux92' order represents '0' with '871'
c Var 'aux92' direct represents '0' with '871'
c Var 'aux92' order represents '1' with '872'
-871 872 0
c Var 'aux92' direct represents '1' with '873'
871 -872 873 0
-873 872 0
-873 -871 0
c Var 'aux92' direct represents '2' with '-872'
871 873 -872 0
c Encoding variable: aux93 with domain: int(0..2) (representing constraint ((grid_00004_00004=5) + (5=grid_00002_00003)))
c Both direct and order encoding.
c Var 'aux93' order represents '0' with '874'
c Var 'aux93' direct represents '0' with '874'
c Var 'aux93' order represents '1' with '875'
-874 875 0
c Var 'aux93' direct represents '1' with '876'
874 -875 876 0
-876 875 0
-876 -874 0
c Var 'aux93' direct represents '2' with '-875'
874 876 -875 0
c Encoding variable: aux94 with domain: int(0..2) (representing constraint ((grid_00004_00002=5) + (5=grid_00001_00002)))
c Both direct and order encoding.
c Var 'aux94' order represents '0' with '877'
c Var 'aux94' direct represents '0' with '877'
c Var 'aux94' order represents '1' with '878'
-877 878 0
c Var 'aux94' direct represents '1' with '879'
877 -878 879 0
-879 878 0
-879 -877 0
c Var 'aux94' direct represents '2' with '-878'
877 879 -878 0
c Encoding variable: aux95 with domain: int(0..2) (representing constraint ((grid_00004_00001=5) + (5=grid_00002_00004)))
c Both direct and order encoding.
c Var 'aux95' order represents '0' with '880'
c Var 'aux95' direct represents '0' with '880'
c Var 'aux95' order represents '1' with '881'
-880 881 0
c Var 'aux95' direct represents '1' with '882'
880 -881 882 0
-882 881 0
-882 -880 0
c Var 'aux95' direct represents '2' with '-881'
880 882 -881 0
c Encoding variable: aux96 with domain: int(0..2) (representing constraint ((grid_00004_00000=5) + (grid_00003_00003=5)))
c Both direct and order encoding.
c Var 'aux96' order represents '0' with '883'
c Var 'aux96' direct represents '0' with '883'
c Var 'aux96' order represents '1' with '884'
-883 884 0
c Var 'aux96' direct represents '1' with '885'
883 -884 885 0
-885 884 0
-885 -883 0
c Var 'aux96' direct represents '2' with '-884'
883 885 -884 0
c Encoding variable: aux97 with domain: int(0..2) (representing constraint ((5=grid_00001_00003) + (5=grid_00001_00004)))
c Both direct and order encoding.
c Var 'aux97' order represents '0' with '886'
c Var 'aux97' direct represents '0' with '886'
c Var 'aux97' order represents '1' with '887'
-886 887 0
c Var 'aux97' direct represents '1' with '888'
886 -887 888 0
-888 887 0
-888 -886 0
c Var 'aux97' direct represents '2' with '-887'
886 888 -887 0
c Encoding variable: aux98 with domain: int(0..4) (representing constraint (aux90 + aux97))
c Both direct and order encoding.
c Var 'aux98' order represents '0' with '889'
c Var 'aux98' direct represents '0' with '889'
c Var 'aux98' order represents '1' with '890'
-889 890 0
c Var 'aux98' direct represents '1' with '891'
889 -890 891 0
-891 890 0
-891 -889 0
c Var 'aux98' order represents '2' with '892'
-890 892 0
c Var 'aux98' direct represents '2' with '893'
890 -892 893 0
-893 892 0
-893 -890 0
c Var 'aux98' order represents '3' with '894'
-892 894 0
c Var 'aux98' direct represents '3' with '895'
892 -894 895 0
-895 894 0
-895 -892 0
c Var 'aux98' direct represents '4' with '-894'
889 891 893 895 -894 0
c Encoding variable: aux99 with domain: int(0..4) (representing constraint (aux89 + aux93))
c Both direct and order encoding.
c Var 'aux99' order represents '0' with '896'
c Var 'aux99' direct represents '0' with '896'
c Var 'aux99' order represents '1' with '897'
-896 897 0
c Var 'aux99' direct represents '1' with '898'
896 -897 898 0
-898 897 0
-898 -896 0
c Var 'aux99' order represents '2' with '899'
-897 899 0
c Var 'aux99' direct represents '2' with '900'
897 -899 900 0
-900 899 0
-900 -897 0
c Var 'aux99' order represents '3' with '901'
-899 901 0
c Var 'aux99' direct represents '3' with '902'
899 -901 902 0
-902 901 0
-902 -899 0
c Var 'aux99' direct represents '4' with '-901'
896 898 900 902 -901 0
c Encoding variable: aux100 with domain: int(0..4) (representing constraint (aux92 + aux91))
c Both direct and order encoding.
c Var 'aux100' order represents '0' with '903'
c Var 'aux100' direct represents '0' with '903'
c Var 'aux100' order represents '1' with '904'
-903 904 0
c Var 'aux100' direct represents '1' with '905'
903 -904 905 0
-905 904 0
-905 -903 0
c Var 'aux100' order represents '2' with '906'
-904 906 0
c Var 'aux100' direct represents '2' with '907'
904 -906 907 0
-907 906 0
-907 -904 0
c Var 'aux100' order represents '3' with '908'
-906 908 0
c Var 'aux100' direct represents '3' with '909'
906 -908 909 0
-909 908 0
-909 -906 0
c Var 'aux100' direct represents '4' with '-908'
903 905 907 909 -908 0
c Encoding variable: aux101 with domain: int(0..4) (representing constraint (aux95 + aux94))
c Both direct and order encoding.
c Var 'aux101' order represents '0' with '910'
c Var 'aux101' direct represents '0' with '910'
c Var 'aux101' order represents '1' with '911'
-910 911 0
c Var 'aux101' direct represents '1' with '912'
910 -911 912 0
-912 911 0
-912 -910 0
c Var 'aux101' order represents '2' with '913'
-911 913 0
c Var 'aux101' direct represents '2' with '914'
911 -913 914 0
-914 913 0
-914 -911 0
c Var 'aux101' order represents '3' with '915'
-913 915 0
c Var 'aux101' direct represents '3' with '916'
913 -915 916 0
-916 915 0
-916 -913 0
c Var 'aux101' direct represents '4' with '-915'
910 912 914 916 -915 0
c Encoding variable: aux102 with domain: int(0..6) (representing constraint (aux96 + aux101))
c Both direct and order encoding.
c Var 'aux102' order represents '0' with '917'
c Var 'aux102' direct represents '0' with '917'
c Var 'aux102' order represents '1' with '918'
-917 918 0
c Var 'aux102' direct represents '1' with '919'
917 -918 919 0
-919 918 0
-919 -917 0
c Var 'aux102' order represents '2' with '920'
-918 920 0
c Var 'aux102' direct represents '2' with '921'
918 -920 921 0
-921 920 0
-921 -918 0
c Var 'aux102' order represents '3' with '922'
-920 922 0
c Var 'aux102' direct represents '3' with '923'
920 -922 923 0
-923 922 0
-923 -920 0
c Var 'aux102' order represents '4' with '924'
-922 924 0
c Var 'aux102' direct represents '4' with '925'
922 -924 925 0
-925 924 0
-925 -922 0
c Var 'aux102' order represents '5' with '926'
-924 926 0
c Var 'aux102' direct represents '5' with '927'
924 -926 927 0
-927 926 0
-927 -924 0
c Var 'aux102' direct represents '6' with '-926'
917 919 921 923 925 927 -926 0
c Encoding variable: aux103 with domain: int(0..8) (representing constraint (aux98 + aux100))
c Both direct and order encoding.
c Var 'aux103' order represents '0' with '928'
c Var 'aux103' direct represents '0' with '928'
c Var 'aux103' order represents '1' with '929'
-928 929 0
c Var 'aux103' direct represents '1' with '930'
928 -929 930 0
-930 929 0
-930 -928 0
c Var 'aux103' order represents '2' with '931'
-929 931 0
c Var 'aux103' direct represents '2' with '932'
929 -931 932 0
-932 931 0
-932 -929 0
c Var 'aux103' order represents '3' with '933'
-931 933 0
c Var 'aux103' direct represents '3' with '934'
931 -933 934 0
-934 933 0
-934 -931 0
c Var 'aux103' order represents '4' with '935'
-933 935 0
c Var 'aux103' direct represents '4' with '936'
933 -935 936 0
-936 935 0
-936 -933 0
c Var 'aux103' order represents '5' with '937'
-935 937 0
c Var 'aux103' direct represents '5' with '938'
935 -937 938 0
-938 937 0
-938 -935 0
c Var 'aux103' order represents '6' with '939'
-937 939 0
c Var 'aux103' direct represents '6' with '940'
937 -939 940 0
-940 939 0
-940 -937 0
c Var 'aux103' order represents '7' with '941'
-939 941 0
c Var 'aux103' direct represents '7' with '942'
939 -941 942 0
-942 941 0
-942 -939 0
c Var 'aux103' direct represents '8' with '-941'
928 930 932 934 936 938 940 942 -941 0
c Encoding variable: aux104 with domain: int(0..2) (representing constraint ((grid_00003_00001=6) + (grid_00000_00003=6)))
c Both direct and order encoding.
c Var 'aux104' order represents '0' with '943'
c Var 'aux104' direct represents '0' with '943'
c Var 'aux104' order represents '1' with '944'
-943 944 0
c Var 'aux104' direct represents '1' with '945'
943 -944 945 0
-945 944 0
-945 -943 0
c Var 'aux104' direct represents '2' with '-944'
943 945 -944 0
c Encoding variable: aux105 with domain: int(0..2) (representing constraint ((grid_00000_00002=6) + (grid_00003_00002=6)))
c Both direct and order encoding.
c Var 'aux105' order represents '0' with '946'
c Var 'aux105' direct represents '0' with '946'
c Var 'aux105' order represents '1' with '947'
-946 947 0
c Var 'aux105' direct represents '1' with '948'
946 -947 948 0
-948 947 0
-948 -946 0
c Var 'aux105' direct represents '2' with '-947'
946 948 -947 0
c Encoding variable: aux106 with domain: int(0..2) (representing constraint ((6=grid_00001_00001) + (6=grid_00002_00001)))
c Both direct and order encoding.
c Var 'aux106' order represents '0' with '949'
c Var 'aux106' direct represents '0' with '949'
c Var 'aux106' order represents '1' with '950'
-949 950 0
c Var 'aux106' direct represents '1' with '951'
949 -950 951 0
-951 950 0
-951 -949 0
c Var 'aux106' direct represents '2' with '-950'
949 951 -950 0
c Encoding variable: aux107 with domain: int(0..2) (representing constraint ((grid_00000_00000=6) + (grid_00000_00001=6)))
c Both direct and order encoding.
c Var 'aux107' order represents '0' with '952'
c Var 'aux107' direct represents '0' with '952'
c Var 'aux107' order represents '1' with '953'
-952 953 0
c Var 'aux107' direct represents '1' with '954'
952 -953 954 0
-954 953 0
-954 -952 0
c Var 'aux107' direct represents '2' with '-953'
952 954 -953 0
c Encoding variable: aux108 with domain: int(0..2) (representing constraint ((grid_00004_00004=6) + (6=grid_00002_00003)))
c Both direct and order encoding.
c Var 'aux108' order represents '0' with '955'
c Var 'aux108' direct represents '0' with '955'
c Var 'aux108' order represents '1' with '956'
-955 956 0
c Var 'aux108' direct represents '1' with '957'
955 -956 957 0
-957 956 0
-957 -955 0
c Var 'aux108' direct represents '2' with '-956'
955 957 -956 0
c Encoding variable: aux109 with domain: int(0..2) (representing constraint ((grid_00004_00002=6) + (6=grid_00001_00002)))
c Both direct and order encoding.
c Var 'aux109' order represents '0' with '958'
c Var 'aux109' direct represents '0' with '958'
c Var 'aux109' order represents '1' with '959'
-958 959 0
c Var 'aux109' direct represents '1' with '960'
958 -959 960 0
-960 959 0
-960 -958 0
c Var 'aux109' direct represents '2' with '-959'
958 960 -959 0
c Encoding variable: aux110 with domain: int(0..2) (representing constraint ((grid_00004_00001=6) + (6=grid_00002_00004)))
c Both direct and order encoding.
c Var 'aux110' order represents '0' with '961'
c Var 'aux110' direct represents '0' with '961'
c Var 'aux110' order represents '1' with '962'
-961 962 0
c Var 'aux110' direct represents '1' with '963'
961 -962 963 0
-963 962 0
-963 -961 0
c Var 'aux110' direct represents '2' with '-962'
961 963 -962 0
c Encoding variable: aux111 with domain: int(0..2) (representing constraint ((grid_00004_00000=6) + (grid_00003_00003=6)))
c Both direct and order encoding.
c Var 'aux111' order represents '0' with '964'
c Var 'aux111' direct represents '0' with '964'
c Var 'aux111' order represents '1' with '965'
-964 965 0
c Var 'aux111' direct represents '1' with '966'
964 -965 966 0
-966 965 0
-966 -964 0
c Var 'aux111' direct represents '2' with '-965'
964 966 -965 0
c Encoding variable: aux112 with domain: int(0..2) (representing constraint ((6=grid_00001_00003) + (6=grid_00001_00004)))
c Both direct and order encoding.
c Var 'aux112' order represents '0' with '967'
c Var 'aux112' direct represents '0' with '967'
c Var 'aux112' order represents '1' with '968'
-967 968 0
c Var 'aux112' direct represents '1' with '969'
967 -968 969 0
-969 968 0
-969 -967 0
c Var 'aux112' direct represents '2' with '-968'
967 969 -968 0
c Encoding variable: aux113 with domain: int(0..4) (representing constraint (aux105 + aux112))
c Both direct and order encoding.
c Var 'aux113' order represents '0' with '970'
c Var 'aux113' direct represents '0' with '970'
c Var 'aux113' order represents '1' with '971'
-970 971 0
c Var 'aux113' direct represents '1' with '972'
970 -971 972 0
-972 971 0
-972 -970 0
c Var 'aux113' order represents '2' with '973'
-971 973 0
c Var 'aux113' direct represents '2' with '974'
971 -973 974 0
-974 973 0
-974 -971 0
c Var 'aux113' order represents '3' with '975'
-973 975 0
c Var 'aux113' direct represents '3' with '976'
973 -975 976 0
-976 975 0
-976 -973 0
c Var 'aux113' direct represents '4' with '-975'
970 972 974 976 -975 0
c Encoding variable: aux114 with domain: int(0..4) (representing constraint (aux104 + aux108))
c Both direct and order encoding.
c Var 'aux114' order represents '0' with '977'
c Var 'aux114' direct represents '0' with '977'
c Var 'aux114' order represents '1' with '978'
-977 978 0
c Var 'aux114' direct represents '1' with '979'
977 -978 979 0
-979 978 0
-979 -977 0
c Var 'aux114' order represents '2' with '980'
-978 980 0
c Var 'aux114' direct represents '2' with '981'
978 -980 981 0
-981 980 0
-981 -978 0
c Var 'aux114' order represents '3' with '982'
-980 982 0
c Var 'aux114' direct represents '3' with '983'
980 -982 983 0
-983 982 0
-983 -980 0
c Var 'aux114' direct represents '4' with '-982'
977 979 981 983 -982 0
c Encoding variable: aux115 with domain: int(0..4) (representing constraint (aux107 + aux106))
c Both direct and order encoding.
c Var 'aux115' order represents '0' with '984'
c Var 'aux115' direct represents '0' with '984'
c Var 'aux115' order represents '1' with '985'
-984 985 0
c Var 'aux115' direct represents '1' with '986'
984 -985 986 0
-986 985 0
-986 -984 0
c Var 'aux115' order represents '2' with '987'
-985 987 0
c Var 'aux115' direct represents '2' with '988'
985 -987 988 0
-988 987 0
-988 -985 0
c Var 'aux115' order represents '3' with '989'
-987 989 0
c Var 'aux115' direct represents '3' with '990'
987 -989 990 0
-990 989 0
-990 -987 0
c Var 'aux115' direct represents '4' with '-989'
984 986 988 990 -989 0
c Encoding variable: aux116 with domain: int(0..4) (representing constraint (aux110 + aux109))
c Both direct and order encoding.
c Var 'aux116' order represents '0' with '991'
c Var 'aux116' direct represents '0' with '991'
c Var 'aux116' order represents '1' with '992'
-991 992 0
c Var 'aux116' direct represents '1' with '993'
991 -992 993 0
-993 992 0
-993 -991 0
c Var 'aux116' order represents '2' with '994'
-992 994 0
c Var 'aux116' direct represents '2' with '995'
992 -994 995 0
-995 994 0
-995 -992 0
c Var 'aux116' order represents '3' with '996'
-994 996 0
c Var 'aux116' direct represents '3' with '997'
994 -996 997 0
-997 996 0
-997 -994 0
c Var 'aux116' direct represents '4' with '-996'
991 993 995 997 -996 0
c Encoding variable: aux117 with domain: int(0..6) (representing constraint (aux111 + aux116))
c Both direct and order encoding.
c Var 'aux117' order represents '0' with '998'
c Var 'aux117' direct represents '0' with '998'
c Var 'aux117' order represents '1' with '999'
-998 999 0
c Var 'aux117' direct represents '1' with '1000'
998 -999 1000 0
-1000 999 0
-1000 -998 0
c Var 'aux117' order represents '2' with '1001'
-999 1001 0
c Var 'aux117' direct represents '2' with '1002'
999 -1001 1002 0
-1002 1001 0
-1002 -999 0
c Var 'aux117' order represents '3' with '1003'
-1001 1003 0
c Var 'aux117' direct represents '3' with '1004'
1001 -1003 1004 0
-1004 1003 0
-1004 -1001 0
c Var 'aux117' order represents '4' with '1005'
-1003 1005 0
c Var 'aux117' direct represents '4' with '1006'
1003 -1005 1006 0
-1006 1005 0
-1006 -1003 0
c Var 'aux117' order represents '5' with '1007'
-1005 1007 0
c Var 'aux117' direct represents '5' with '1008'
1005 -1007 1008 0
-1008 1007 0
-1008 -1005 0
c Var 'aux117' direct represents '6' with '-1007'
998 1000 1002 1004 1006 1008 -1007 0
c Encoding variable: aux118 with domain: int(0..8) (representing constraint (aux113 + aux115))
c Both direct and order encoding.
c Var 'aux118' order represents '0' with '1009'
c Var 'aux118' direct represents '0' with '1009'
c Var 'aux118' order represents '1' with '1010'
-1009 1010 0
c Var 'aux118' direct represents '1' with '1011'
1009 -1010 1011 0
-1011 1010 0
-1011 -1009 0
c Var 'aux118' order represents '2' with '1012'
-1010 1012 0
c Var 'aux118' direct represents '2' with '1013'
1010 -1012 1013 0
-1013 1012 0
-1013 -1010 0
c Var 'aux118' order represents '3' with '1014'
-1012 1014 0
c Var 'aux118' direct represents '3' with '1015'
1012 -1014 1015 0
-1015 1014 0
-1015 -1012 0
c Var 'aux118' order represents '4' with '1016'
-1014 1016 0
c Var 'aux118' direct represents '4' with '1017'
1014 -1016 1017 0
-1017 1016 0
-1017 -1014 0
c Var 'aux118' order represents '5' with '1018'
-1016 1018 0
c Var 'aux118' direct represents '5' with '1019'
1016 -1018 1019 0
-1019 1018 0
-1019 -1016 0
c Var 'aux118' order represents '6' with '1020'
-1018 1020 0
c Var 'aux118' direct represents '6' with '1021'
1018 -1020 1021 0
-1021 1020 0
-1021 -1018 0
c Var 'aux118' order represents '7' with '1022'
-1020 1022 0
c Var 'aux118' direct represents '7' with '1023'
1020 -1022 1023 0
-1023 1022 0
-1023 -1020 0
c Var 'aux118' direct represents '8' with '-1022'
1009 1011 1013 1015 1017 1019 1021 1023 -1022 0
c Encoding variable: aux119 with domain: int(0..2) (representing constraint ((grid_00003_00001=7) + (grid_00000_00003=7)))
c Both direct and order encoding.
c Var 'aux119' order represents '0' with '1024'
c Var 'aux119' direct represents '0' with '1024'
c Var 'aux119' order represents '1' with '1025'
-1024 1025 0
c Var 'aux119' direct represents '1' with '1026'
1024 -1025 1026 0
-1026 1025 0
-1026 -1024 0
c Var 'aux119' direct represents '2' with '-1025'
1024 1026 -1025 0
c Encoding variable: aux120 with domain: int(0..2) (representing constraint ((grid_00000_00002=7) + (grid_00003_00002=7)))
c Both direct and order encoding.
c Var 'aux120' order represents '0' with '1027'
c Var 'aux120' direct represents '0' with '1027'
c Var 'aux120' order represents '1' with '1028'
-1027 1028 0
c Var 'aux120' direct represents '1' with '1029'
1027 -1028 1029 0
-1029 1028 0
-1029 -1027 0
c Var 'aux120' direct represents '2' with '-1028'
1027 1029 -1028 0
c Encoding variable: aux121 with domain: int(0..2) (representing constraint ((7=grid_00001_00001) + (7=grid_00002_00001)))
c Both direct and order encoding.
c Var 'aux121' order represents '0' with '1030'
c Var 'aux121' direct represents '0' with '1030'
c Var 'aux121' order represents '1' with '1031'
-1030 1031 0
c Var 'aux121' direct represents '1' with '1032'
1030 -1031 1032 0
-1032 1031 0
-1032 -1030 0
c Var 'aux121' direct represents '2' with '-1031'
1030 1032 -1031 0
c Encoding variable: aux122 with domain: int(0..2) (representing constraint ((grid_00000_00000=7) + (grid_00000_00001=7)))
c Both direct and order encoding.
c Var 'aux122' order represents '0' with '1033'
c Var 'aux122' direct represents '0' with '1033'
c Var 'aux122' order represents '1' with '1034'
-1033 1034 0
c Var 'aux122' direct represents '1' with '1035'
1033 -1034 1035 0
-1035 1034 0
-1035 -1033 0
c Var 'aux122' direct represents '2' with '-1034'
1033 1035 -1034 0
c Encoding variable: aux123 with domain: int(0..2) (representing constraint ((grid_00004_00004=7) + (7=grid_00002_00003)))
c Both direct and order encoding.
c Var 'aux123' order represents '0' with '1036'
c Var 'aux123' direct represents '0' with '1036'
c Var 'aux123' order represents '1' with '1037'
-1036 1037 0
c Var 'aux123' direct represents '1' with '1038'
1036 -1037 1038 0
-1038 1037 0
-1038 -1036 0
c Var 'aux123' direct represents '2' with '-1037'
1036 1038 -1037 0
c Encoding variable: aux124 with domain: int(0..2) (representing constraint ((grid_00004_00002=7) + (7=grid_00001_00002)))
c Both direct and order encoding.
c Var 'aux124' order represents '0' with '1039'
c Var 'aux124' direct represents '0' with '1039'
c Var 'aux124' order represents '1' with '1040'
-1039 1040 0
c Var 'aux124' direct represents '1' with '1041'
1039 -1040 1041 0
-1041 1040 0
-1041 -1039 0
c Var 'aux124' direct represents '2' with '-1040'
1039 1041 -1040 0
c Encoding variable: aux125 with domain: int(0..2) (representing constraint ((grid_00004_00001=7) + (7=grid_00002_00004)))
c Both direct and order encoding.
c Var 'aux125' order represents '0' with '1042'
c Var 'aux125' direct represents '0' with '1042'
c Var 'aux125' order represents '1' with '1043'
-1042 1043 0
c Var 'aux125' direct represents '1' with '1044'
1042 -1043 1044 0
-1044 1043 0
-1044 -1042 0
c Var 'aux125' direct represents '2' with '-1043'
1042 1044 -1043 0
c Encoding variable: aux126 with domain: int(0..2) (representing constraint ((grid_00004_00000=7) + (grid_00003_00003=7)))
c Both direct and order encoding.
c Var 'aux126' order represents '0' with '1045'
c Var 'aux126' direct represents '0' with '1045'
c Var 'aux126' order represents '1' with '1046'
-1045 1046 0
c Var 'aux126' direct represents '1' with '1047'
1045 -1046 1047 0
-1047 1046 0
-1047 -1045 0
c Var 'aux126' direct represents '2' with '-1046'
1045 1047 -1046 0
c Encoding variable: aux127 with domain: int(0..2) (representing constraint ((7=grid_00001_00003) + (7=grid_00001_00004)))
c Both direct and order encoding.
c Var 'aux127' order represents '0' with '1048'
c Var 'aux127' direct represents '0' with '1048'
c Var 'aux127' order represents '1' with '1049'
-1048 1049 0
c Var 'aux127' direct represents '1' with '1050'
1048 -1049 1050 0
-1050 1049 0
-1050 -1048 0
c Var 'aux127' direct represents '2' with '-1049'
1048 1050 -1049 0
c Encoding variable: aux128 with domain: int(0..4) (representing constraint (aux120 + aux127))
c Both direct and order encoding.
c Var 'aux128' order represents '0' with '1051'
c Var 'aux128' direct represents '0' with '1051'
c Var 'aux128' order represents '1' with '1052'
-1051 1052 0
c Var 'aux128' direct represents '1' with '1053'
1051 -1052 1053 0
-1053 1052 0
-1053 -1051 0
c Var 'aux128' order represents '2' with '1054'
-1052 1054 0
c Var 'aux128' direct represents '2' with '1055'
1052 -1054 1055 0
-1055 1054 0
-1055 -1052 0
c Var 'aux128' order represents '3' with '1056'
-1054 1056 0
c Var 'aux128' direct represents '3' with '1057'
1054 -1056 1057 0
-1057 1056 0
-1057 -1054 0
c Var 'aux128' direct represents '4' with '-1056'
1051 1053 1055 1057 -1056 0
c Encoding variable: aux129 with domain: int(0..4) (representing constraint (aux119 + aux123))
c Both direct and order encoding.
c Var 'aux129' order represents '0' with '1058'
c Var 'aux129' direct represents '0' with '1058'
c Var 'aux129' order represents '1' with '1059'
-1058 1059 0
c Var 'aux129' direct represents '1' with '1060'
1058 -1059 1060 0
-1060 1059 0
-1060 -1058 0
c Var 'aux129' order represents '2' with '1061'
-1059 1061 0
c Var 'aux129' direct represents '2' with '1062'
1059 -1061 1062 0
-1062 1061 0
-1062 -1059 0
c Var 'aux129' order represents '3' with '1063'
-1061 1063 0
c Var 'aux129' direct represents '3' with '1064'
1061 -1063 1064 0
-1064 1063 0
-1064 -1061 0
c Var 'aux129' direct represents '4' with '-1063'
1058 1060 1062 1064 -1063 0
c Encoding variable: aux130 with domain: int(0..4) (representing constraint (aux122 + aux121))
c Both direct and order encoding.
c Var 'aux130' order represents '0' with '1065'
c Var 'aux130' direct represents '0' with '1065'
c Var 'aux130' order represents '1' with '1066'
-1065 1066 0
c Var 'aux130' direct represents '1' with '1067'
1065 -1066 1067 0
-1067 1066 0
-1067 -1065 0
c Var 'aux130' order represents '2' with '1068'
-1066 1068 0
c Var 'aux130' direct represents '2' with '1069'
1066 -1068 1069 0
-1069 1068 0
-1069 -1066 0
c Var 'aux130' order represents '3' with '1070'
-1068 1070 0
c Var 'aux130' direct represents '3' with '1071'
1068 -1070 1071 0
-1071 1070 0
-1071 -1068 0
c Var 'aux130' direct represents '4' with '-1070'
1065 1067 1069 1071 -1070 0
c Encoding variable: aux131 with domain: int(0..4) (representing constraint (aux125 + aux124))
c Both direct and order encoding.
c Var 'aux131' order represents '0' with '1072'
c Var 'aux131' direct represents '0' with '1072'
c Var 'aux131' order represents '1' with '1073'
-1072 1073 0
c Var 'aux131' direct represents '1' with '1074'
1072 -1073 1074 0
-1074 1073 0
-1074 -1072 0
c Var 'aux131' order represents '2' with '1075'
-1073 1075 0
c Var 'aux131' direct represents '2' with '1076'
1073 -1075 1076 0
-1076 1075 0
-1076 -1073 0
c Var 'aux131' order represents '3' with '1077'
-1075 1077 0
c Var 'aux131' direct represents '3' with '1078'
1075 -1077 1078 0
-1078 1077 0
-1078 -1075 0
c Var 'aux131' direct represents '4' with '-1077'
1072 1074 1076 1078 -1077 0
c Encoding variable: aux132 with domain: int(0..6) (representing constraint (aux126 + aux131))
c Both direct and order encoding.
c Var 'aux132' order represents '0' with '1079'
c Var 'aux132' direct represents '0' with '1079'
c Var 'aux132' order represents '1' with '1080'
-1079 1080 0
c Var 'aux132' direct represents '1' with '1081'
1079 -1080 1081 0
-1081 1080 0
-1081 -1079 0
c Var 'aux132' order represents '2' with '1082'
-1080 1082 0
c Var 'aux132' direct represents '2' with '1083'
1080 -1082 1083 0
-1083 1082 0
-1083 -1080 0
c Var 'aux132' order represents '3' with '1084'
-1082 1084 0
c Var 'aux132' direct represents '3' with '1085'
1082 -1084 1085 0
-1085 1084 0
-1085 -1082 0
c Var 'aux132' order represents '4' with '1086'
-1084 1086 0
c Var 'aux132' direct represents '4' with '1087'
1084 -1086 1087 0
-1087 1086 0
-1087 -1084 0
c Var 'aux132' order represents '5' with '1088'
-1086 1088 0
c Var 'aux132' direct represents '5' with '1089'
1086 -1088 1089 0
-1089 1088 0
-1089 -1086 0
c Var 'aux132' direct represents '6' with '-1088'
1079 1081 1083 1085 1087 1089 -1088 0
c Encoding variable: aux133 with domain: int(0..8) (representing constraint (aux128 + aux130))
c Both direct and order encoding.
c Var 'aux133' order represents '0' with '1090'
c Var 'aux133' direct represents '0' with '1090'
c Var 'aux133' order represents '1' with '1091'
-1090 1091 0
c Var 'aux133' direct represents '1' with '1092'
1090 -1091 1092 0
-1092 1091 0
-1092 -1090 0
c Var 'aux133' order represents '2' with '1093'
-1091 1093 0
c Var 'aux133' direct represents '2' with '1094'
1091 -1093 1094 0
-1094 1093 0
-1094 -1091 0
c Var 'aux133' order represents '3' with '1095'
-1093 1095 0
c Var 'aux133' direct represents '3' with '1096'
1093 -1095 1096 0
-1096 1095 0
-1096 -1093 0
c Var 'aux133' order represents '4' with '1097'
-1095 1097 0
c Var 'aux133' direct represents '4' with '1098'
1095 -1097 1098 0
-1098 1097 0
-1098 -1095 0
c Var 'aux133' order represents '5' with '1099'
-1097 1099 0
c Var 'aux133' direct represents '5' with '1100'
1097 -1099 1100 0
-1100 1099 0
-1100 -1097 0
c Var 'aux133' order represents '6' with '1101'
-1099 1101 0
c Var 'aux133' direct represents '6' with '1102'
1099 -1101 1102 0
-1102 1101 0
-1102 -1099 0
c Var 'aux133' order represents '7' with '1103'
-1101 1103 0
c Var 'aux133' direct represents '7' with '1104'
1101 -1103 1104 0
-1104 1103 0
-1104 -1101 0
c Var 'aux133' direct represents '8' with '-1103'
1090 1092 1094 1096 1098 1100 1102 1104 -1103 0
c Encoding variable: aux134 with domain: int(0..2) (representing constraint ((grid_00003_00001=1) + (grid_00000_00003=1)))
c Both direct and order encoding.
c Var 'aux134' order represents '0' with '1105'
c Var 'aux134' direct represents '0' with '1105'
c Var 'aux134' order represents '1' with '1106'
-1105 1106 0
c Var 'aux134' direct represents '1' with '1107'
1105 -1106 1107 0
-1107 1106 0
-1107 -1105 0
c Var 'aux134' direct represents '2' with '-1106'
1105 1107 -1106 0
c Encoding variable: aux135 with domain: int(0..2) (representing constraint ((grid_00000_00002=1) + (grid_00003_00002=1)))
c Both direct and order encoding.
c Var 'aux135' order represents '0' with '1108'
c Var 'aux135' direct represents '0' with '1108'
c Var 'aux135' order represents '1' with '1109'
-1108 1109 0
c Var 'aux135' direct represents '1' with '1110'
1108 -1109 1110 0
-1110 1109 0
-1110 -1108 0
c Var 'aux135' direct represents '2' with '-1109'
1108 1110 -1109 0
c Encoding variable: aux136 with domain: int(0..2) (representing constraint ((1=grid_00001_00001) + (1=grid_00002_00001)))
c Both direct and order encoding.
c Var 'aux136' order represents '0' with '1111'
c Var 'aux136' direct represents '0' with '1111'
c Var 'aux136' order represents '1' with '1112'
-1111 1112 0
c Var 'aux136' direct represents '1' with '1113'
1111 -1112 1113 0
-1113 1112 0
-1113 -1111 0
c Var 'aux136' direct represents '2' with '-1112'
1111 1113 -1112 0
c Encoding variable: aux137 with domain: int(0..2) (representing constraint ((grid_00000_00000=1) + (grid_00000_00001=1)))
c Both direct and order encoding.
c Var 'aux137' order represents '0' with '1114'
c Var 'aux137' direct represents '0' with '1114'
c Var 'aux137' order represents '1' with '1115'
-1114 1115 0
c Var 'aux137' direct represents '1' with '1116'
1114 -1115 1116 0
-1116 1115 0
-1116 -1114 0
c Var 'aux137' direct represents '2' with '-1115'
1114 1116 -1115 0
c Encoding variable: aux138 with domain: int(0..2) (representing constraint ((grid_00004_00004=1) + (1=grid_00002_00003)))
c Both direct and order encoding.
c Var 'aux138' order represents '0' with '1117'
c Var 'aux138' direct represents '0' with '1117'
c Var 'aux138' order represents '1' with '1118'
-1117 1118 0
c Var 'aux138' direct represents '1' with '1119'
1117 -1118 1119 0
-1119 1118 0
-1119 -1117 0
c Var 'aux138' direct represents '2' with '-1118'
1117 1119 -1118 0
c Encoding variable: aux139 with domain: int(0..2) (representing constraint ((grid_00004_00002=1) + (1=grid_00001_00002)))
c Both direct and order encoding.
c Var 'aux139' order represents '0' with '1120'
c Var 'aux139' direct represents '0' with '1120'
c Var 'aux139' order represents '1' with '1121'
-1120 1121 0
c Var 'aux139' direct represents '1' with '1122'
1120 -1121 1122 0
-1122 1121 0
-1122 -1120 0
c Var 'aux139' direct represents '2' with '-1121'
1120 1122 -1121 0
c Encoding variable: aux140 with domain: int(0..2) (representing constraint ((grid_00004_00001=1) + (1=grid_00002_00004)))
c Both direct and order encoding.
c Var 'aux140' order represents '0' with '1123'
c Var 'aux140' direct represents '0' with '1123'
c Var 'aux140' order represents '1' with '1124'
-1123 1124 0
c Var 'aux140' direct represents '1' with '1125'
1123 -1124 1125 0
-1125 1124 0
-1125 -1123 0
c Var 'aux140' direct represents '2' with '-1124'
1123 1125 -1124 0
c Encoding variable: aux141 with domain: int(0..2) (representing constraint ((grid_00004_00000=1) + (grid_00003_00003=1)))
c Both direct and order encoding.
c Var 'aux141' order represents '0' with '1126'
c Var 'aux141' direct represents '0' with '1126'
c Var 'aux141' order represents '1' with '1127'
-1126 1127 0
c Var 'aux141' direct represents '1' with '1128'
1126 -1127 1128 0
-1128 1127 0
-1128 -1126 0
c Var 'aux141' direct represents '2' with '-1127'
1126 1128 -1127 0
c Encoding variable: aux142 with domain: int(0..2) (representing constraint ((1=grid_00001_00003) + (1=grid_00001_00004)))
c Both direct and order encoding.
c Var 'aux142' order represents '0' with '1129'
c Var 'aux142' direct represents '0' with '1129'
c Var 'aux142' order represents '1' with '1130'
-1129 1130 0
c Var 'aux142' direct represents '1' with '1131'
1129 -1130 1131 0
-1131 1130 0
-1131 -1129 0
c Var 'aux142' direct represents '2' with '-1130'
1129 1131 -1130 0
c Encoding variable: aux143 with domain: int(0..4) (representing constraint (aux135 + aux142))
c Both direct and order encoding.
c Var 'aux143' order represents '0' with '1132'
c Var 'aux143' direct represents '0' with '1132'
c Var 'aux143' order represents '1' with '1133'
-1132 1133 0
c Var 'aux143' direct represents '1' with '1134'
1132 -1133 1134 0
-1134 1133 0
-1134 -1132 0
c Var 'aux143' order represents '2' with '1135'
-1133 1135 0
c Var 'aux143' direct represents '2' with '1136'
1133 -1135 1136 0
-1136 1135 0
-1136 -1133 0
c Var 'aux143' order represents '3' with '1137'
-1135 1137 0
c Var 'aux143' direct represents '3' with '1138'
1135 -1137 1138 0
-1138 1137 0
-1138 -1135 0
c Var 'aux143' direct represents '4' with '-1137'
1132 1134 1136 1138 -1137 0
c Encoding variable: aux144 with domain: int(0..4) (representing constraint (aux134 + aux138))
c Both direct and order encoding.
c Var 'aux144' order represents '0' with '1139'
c Var 'aux144' direct represents '0' with '1139'
c Var 'aux144' order represents '1' with '1140'
-1139 1140 0
c Var 'aux144' direct represents '1' with '1141'
1139 -1140 1141 0
-1141 1140 0
-1141 -1139 0
c Var 'aux144' order represents '2' with '1142'
-1140 1142 0
c Var 'aux144' direct represents '2' with '1143'
1140 -1142 1143 0
-1143 1142 0
-1143 -1140 0
c Var 'aux144' order represents '3' with '1144'
-1142 1144 0
c Var 'aux144' direct represents '3' with '1145'
1142 -1144 1145 0
-1145 1144 0
-1145 -1142 0
c Var 'aux144' direct represents '4' with '-1144'
1139 1141 1143 1145 -1144 0
c Encoding variable: aux145 with domain: int(0..4) (representing constraint (aux137 + aux136))
c Both direct and order encoding.
c Var 'aux145' order represents '0' with '1146'
c Var 'aux145' direct represents '0' with '1146'
c Var 'aux145' order represents '1' with '1147'
-1146 1147 0
c Var 'aux145' direct represents '1' with '1148'
1146 -1147 1148 0
-1148 1147 0
-1148 -1146 0
c Var 'aux145' order represents '2' with '1149'
-1147 1149 0
c Var 'aux145' direct represents '2' with '1150'
1147 -1149 1150 0
-1150 1149 0
-1150 -1147 0
c Var 'aux145' order represents '3' with '1151'
-1149 1151 0
c Var 'aux145' direct represents '3' with '1152'
1149 -1151 1152 0
-1152 1151 0
-1152 -1149 0
c Var 'aux145' direct represents '4' with '-1151'
1146 1148 1150 1152 -1151 0
c Encoding variable: aux146 with domain: int(0..4) (representing constraint (aux140 + aux139))
c Both direct and order encoding.
c Var 'aux146' order represents '0' with '1153'
c Var 'aux146' direct represents '0' with '1153'
c Var 'aux146' order represents '1' with '1154'
-1153 1154 0
c Var 'aux146' direct represents '1' with '1155'
1153 -1154 1155 0
-1155 1154 0
-1155 -1153 0
c Var 'aux146' order represents '2' with '1156'
-1154 1156 0
c Var 'aux146' direct represents '2' with '1157'
1154 -1156 1157 0
-1157 1156 0
-1157 -1154 0
c Var 'aux146' order represents '3' with '1158'
-1156 1158 0
c Var 'aux146' direct represents '3' with '1159'
1156 -1158 1159 0
-1159 1158 0
-1159 -1156 0
c Var 'aux146' direct represents '4' with '-1158'
1153 1155 1157 1159 -1158 0
c Encoding variable: aux147 with domain: int(0..6) (representing constraint (aux141 + aux146))
c Both direct and order encoding.
c Var 'aux147' order represents '0' with '1160'
c Var 'aux147' direct represents '0' with '1160'
c Var 'aux147' order represents '1' with '1161'
-1160 1161 0
c Var 'aux147' direct represents '1' with '1162'
1160 -1161 1162 0
-1162 1161 0
-1162 -1160 0
c Var 'aux147' order represents '2' with '1163'
-1161 1163 0
c Var 'aux147' direct represents '2' with '1164'
1161 -1163 1164 0
-1164 1163 0
-1164 -1161 0
c Var 'aux147' order represents '3' with '1165'
-1163 1165 0
c Var 'aux147' direct represents '3' with '1166'
1163 -1165 1166 0
-1166 1165 0
-1166 -1163 0
c Var 'aux147' order represents '4' with '1167'
-1165 1167 0
c Var 'aux147' direct represents '4' with '1168'
1165 -1167 1168 0
-1168 1167 0
-1168 -1165 0
c Var 'aux147' order represents '5' with '1169'
-1167 1169 0
c Var 'aux147' direct represents '5' with '1170'
1167 -1169 1170 0
-1170 1169 0
-1170 -1167 0
c Var 'aux147' direct represents '6' with '-1169'
1160 1162 1164 1166 1168 1170 -1169 0
c Encoding variable: aux148 with domain: int(0..8) (representing constraint (aux143 + aux145))
c Both direct and order encoding.
c Var 'aux148' order represents '0' with '1171'
c Var 'aux148' direct represents '0' with '1171'
c Var 'aux148' order represents '1' with '1172'
-1171 1172 0
c Var 'aux148' direct represents '1' with '1173'
1171 -1172 1173 0
-1173 1172 0
-1173 -1171 0
c Var 'aux148' order represents '2' with '1174'
-1172 1174 0
c Var 'aux148' direct represents '2' with '1175'
1172 -1174 1175 0
-1175 1174 0
-1175 -1172 0
c Var 'aux148' order represents '3' with '1176'
-1174 1176 0
c Var 'aux148' direct represents '3' with '1177'
1174 -1176 1177 0
-1177 1176 0
-1177 -1174 0
c Var 'aux148' order represents '4' with '1178'
-1176 1178 0
c Var 'aux148' direct represents '4' with '1179'
1176 -1178 1179 0
-1179 1178 0
-1179 -1176 0
c Var 'aux148' order represents '5' with '1180'
-1178 1180 0
c Var 'aux148' direct represents '5' with '1181'
1178 -1180 1181 0
-1181 1180 0
-1181 -1178 0
c Var 'aux148' order represents '6' with '1182'
-1180 1182 0
c Var 'aux148' direct represents '6' with '1183'
1180 -1182 1183 0
-1183 1182 0
-1183 -1180 0
c Var 'aux148' order represents '7' with '1184'
-1182 1184 0
c Var 'aux148' direct represents '7' with '1185'
1182 -1184 1185 0
-1185 1184 0
-1185 -1182 0
c Var 'aux148' direct represents '8' with '-1184'
1171 1173 1175 1177 1179 1181 1183 1185 -1184 0
c Encoding variable: aux149 with domain: int(0..2) (representing constraint ((grid_00003_00001=2) + (grid_00000_00003=2)))
c Both direct and order encoding.
c Var 'aux149' order represents '0' with '1186'
c Var 'aux149' direct represents '0' with '1186'
c Var 'aux149' order represents '1' with '1187'
-1186 1187 0
c Var 'aux149' direct represents '1' with '1188'
1186 -1187 1188 0
-1188 1187 0
-1188 -1186 0
c Var 'aux149' direct represents '2' with '-1187'
1186 1188 -1187 0
c Encoding variable: aux150 with domain: int(0..2) (representing constraint ((grid_00000_00002=2) + (grid_00003_00002=2)))
c Both direct and order encoding.
c Var 'aux150' order represents '0' with '1189'
c Var 'aux150' direct represents '0' with '1189'
c Var 'aux150' order represents '1' with '1190'
-1189 1190 0
c Var 'aux150' direct represents '1' with '1191'
1189 -1190 1191 0
-1191 1190 0
-1191 -1189 0
c Var 'aux150' direct represents '2' with '-1190'
1189 1191 -1190 0
c Encoding variable: aux151 with domain: int(0..2) (representing constraint ((2=grid_00001_00001) + (2=grid_00002_00001)))
c Both direct and order encoding.
c Var 'aux151' order represents '0' with '1192'
c Var 'aux151' direct represents '0' with '1192'
c Var 'aux151' order represents '1' with '1193'
-1192 1193 0
c Var 'aux151' direct represents '1' with '1194'
1192 -1193 1194 0
-1194 1193 0
-1194 -1192 0
c Var 'aux151' direct represents '2' with '-1193'
1192 1194 -1193 0
c Encoding variable: aux152 with domain: int(0..2) (representing constraint ((grid_00000_00000=2) + (grid_00000_00001=2)))
c Both direct and order encoding.
c Var 'aux152' order represents '0' with '1195'
c Var 'aux152' direct represents '0' with '1195'
c Var 'aux152' order represents '1' with '1196'
-1195 1196 0
c Var 'aux152' direct represents '1' with '1197'
1195 -1196 1197 0
-1197 1196 0
-1197 -1195 0
c Var 'aux152' direct represents '2' with '-1196'
1195 1197 -1196 0
c Encoding variable: aux153 with domain: int(0..2) (representing constraint ((grid_00004_00004=2) + (2=grid_00002_00003)))
c Both direct and order encoding.
c Var 'aux153' order represents '0' with '1198'
c Var 'aux153' direct represents '0' with '1198'
c Var 'aux153' order represents '1' with '1199'
-1198 1199 0
c Var 'aux153' direct represents '1' with '1200'
1198 -1199 1200 0
-1200 1199 0
-1200 -1198 0
c Var 'aux153' direct represents '2' with '-1199'
1198 1200 -1199 0
c Encoding variable: aux154 with domain: int(0..2) (representing constraint ((grid_00004_00002=2) + (2=grid_00001_00002)))
c Both direct and order encoding.
c Var 'aux154' order represents '0' with '1201'
c Var 'aux154' direct represents '0' with '1201'
c Var 'aux154' order represents '1' with '1202'
-1201 1202 0
c Var 'aux154' direct represents '1' with '1203'
1201 -1202 1203 0
-1203 1202 0
-1203 -1201 0
c Var 'aux154' direct represents '2' with '-1202'
1201 1203 -1202 0
c Encoding variable: aux155 with domain: int(0..2) (representing constraint ((grid_00004_00001=2) + (2=grid_00002_00004)))
c Both direct and order encoding.
c Var 'aux155' order represents '0' with '1204'
c Var 'aux155' direct represents '0' with '1204'
c Var 'aux155' order represents '1' with '1205'
-1204 1205 0
c Var 'aux155' direct represents '1' with '1206'
1204 -1205 1206 0
-1206 1205 0
-1206 -1204 0
c Var 'aux155' direct represents '2' with '-1205'
1204 1206 -1205 0
c Encoding variable: aux156 with domain: int(0..2) (representing constraint ((grid_00004_00000=2) + (grid_00003_00003=2)))
c Both direct and order encoding.
c Var 'aux156' order represents '0' with '1207'
c Var 'aux156' direct represents '0' with '1207'
c Var 'aux156' order represents '1' with '1208'
-1207 1208 0
c Var 'aux156' direct represents '1' with '1209'
1207 -1208 1209 0
-1209 1208 0
-1209 -1207 0
c Var 'aux156' direct represents '2' with '-1208'
1207 1209 -1208 0
c Encoding variable: aux157 with domain: int(0..2) (representing constraint ((2=grid_00001_00003) + (2=grid_00001_00004)))
c Both direct and order encoding.
c Var 'aux157' order represents '0' with '1210'
c Var 'aux157' direct represents '0' with '1210'
c Var 'aux157' order represents '1' with '1211'
-1210 1211 0
c Var 'aux157' direct represents '1' with '1212'
1210 -1211 1212 0
-1212 1211 0
-1212 -1210 0
c Var 'aux157' direct represents '2' with '-1211'
1210 1212 -1211 0
c Encoding variable: aux158 with domain: int(0..4) (representing constraint (aux150 + aux157))
c Both direct and order encoding.
c Var 'aux158' order represents '0' with '1213'
c Var 'aux158' direct represents '0' with '1213'
c Var 'aux158' order represents '1' with '1214'
-1213 1214 0
c Var 'aux158' direct represents '1' with '1215'
1213 -1214 1215 0
-1215 1214 0
-1215 -1213 0
c Var 'aux158' order represents '2' with '1216'
-1214 1216 0
c Var 'aux158' direct represents '2' with '1217'
1214 -1216 1217 0
-1217 1216 0
-1217 -1214 0
c Var 'aux158' order represents '3' with '1218'
-1216 1218 0
c Var 'aux158' direct represents '3' with '1219'
1216 -1218 1219 0
-1219 1218 0
-1219 -1216 0
c Var 'aux158' direct represents '4' with '-1218'
1213 1215 1217 1219 -1218 0
c Encoding variable: aux159 with domain: int(0..4) (representing constraint (aux149 + aux153))
c Both direct and order encoding.
c Var 'aux159' order represents '0' with '1220'
c Var 'aux159' direct represents '0' with '1220'
c Var 'aux159' order represents '1' with '1221'
-1220 1221 0
c Var 'aux159' direct represents '1' with '1222'
1220 -1221 1222 0
-1222 1221 0
-1222 -1220 0
c Var 'aux159' order represents '2' with '1223'
-1221 1223 0
c Var 'aux159' direct represents '2' with '1224'
1221 -1223 1224 0
-1224 1223 0
-1224 -1221 0
c Var 'aux159' order represents '3' with '1225'
-1223 1225 0
c Var 'aux159' direct represents '3' with '1226'
1223 -1225 1226 0
-1226 1225 0
-1226 -1223 0
c Var 'aux159' direct represents '4' with '-1225'
1220 1222 1224 1226 -1225 0
c Encoding variable: aux160 with domain: int(0..4) (representing constraint (aux152 + aux151))
c Both direct and order encoding.
c Var 'aux160' order represents '0' with '1227'
c Var 'aux160' direct represents '0' with '1227'
c Var 'aux160' order represents '1' with '1228'
-1227 1228 0
c Var 'aux160' direct represents '1' with '1229'
1227 -1228 1229 0
-1229 1228 0
-1229 -1227 0
c Var 'aux160' order represents '2' with '1230'
-1228 1230 0
c Var 'aux160' direct represents '2' with '1231'
1228 -1230 1231 0
-1231 1230 0
-1231 -1228 0
c Var 'aux160' order represents '3' with '1232'
-1230 1232 0
c Var 'aux160' direct represents '3' with '1233'
1230 -1232 1233 0
-1233 1232 0
-1233 -1230 0
c Var 'aux160' direct represents '4' with '-1232'
1227 1229 1231 1233 -1232 0
c Encoding variable: aux161 with domain: int(0..4) (representing constraint (aux155 + aux154))
c Both direct and order encoding.
c Var 'aux161' order represents '0' with '1234'
c Var 'aux161' direct represents '0' with '1234'
c Var 'aux161' order represents '1' with '1235'
-1234 1235 0
c Var 'aux161' direct represents '1' with '1236'
1234 -1235 1236 0
-1236 1235 0
-1236 -1234 0
c Var 'aux161' order represents '2' with '1237'
-1235 1237 0
c Var 'aux161' direct represents '2' with '1238'
1235 -1237 1238 0
-1238 1237 0
-1238 -1235 0
c Var 'aux161' order represents '3' with '1239'
-1237 1239 0
c Var 'aux161' direct represents '3' with '1240'
1237 -1239 1240 0
-1240 1239 0
-1240 -1237 0
c Var 'aux161' direct represents '4' with '-1239'
1234 1236 1238 1240 -1239 0
c Encoding variable: aux162 with domain: int(0..6) (representing constraint (aux156 + aux161))
c Both direct and order encoding.
c Var 'aux162' order represents '0' with '1241'
c Var 'aux162' direct represents '0' with '1241'
c Var 'aux162' order represents '1' with '1242'
-1241 1242 0
c Var 'aux162' direct represents '1' with '1243'
1241 -1242 1243 0
-1243 1242 0
-1243 -1241 0
c Var 'aux162' order represents '2' with '1244'
-1242 1244 0
c Var 'aux162' direct represents '2' with '1245'
1242 -1244 1245 0
-1245 1244 0
-1245 -1242 0
c Var 'aux162' order represents '3' with '1246'
-1244 1246 0
c Var 'aux162' direct represents '3' with '1247'
1244 -1246 1247 0
-1247 1246 0
-1247 -1244 0
c Var 'aux162' order represents '4' with '1248'
-1246 1248 0
c Var 'aux162' direct represents '4' with '1249'
1246 -1248 1249 0
-1249 1248 0
-1249 -1246 0
c Var 'aux162' order represents '5' with '1250'
-1248 1250 0
c Var 'aux162' direct represents '5' with '1251'
1248 -1250 1251 0
-1251 1250 0
-1251 -1248 0
c Var 'aux162' direct represents '6' with '-1250'
1241 1243 1245 1247 1249 1251 -1250 0
c Encoding variable: aux163 with domain: int(0..8) (representing constraint (aux158 + aux160))
c Both direct and order encoding.
c Var 'aux163' order represents '0' with '1252'
c Var 'aux163' direct represents '0' with '1252'
c Var 'aux163' order represents '1' with '1253'
-1252 1253 0
c Var 'aux163' direct represents '1' with '1254'
1252 -1253 1254 0
-1254 1253 0
-1254 -1252 0
c Var 'aux163' order represents '2' with '1255'
-1253 1255 0
c Var 'aux163' direct represents '2' with '1256'
1253 -1255 1256 0
-1256 1255 0
-1256 -1253 0
c Var 'aux163' order represents '3' with '1257'
-1255 1257 0
c Var 'aux163' direct represents '3' with '1258'
1255 -1257 1258 0
-1258 1257 0
-1258 -1255 0
c Var 'aux163' order represents '4' with '1259'
-1257 1259 0
c Var 'aux163' direct represents '4' with '1260'
1257 -1259 1260 0
-1260 1259 0
-1260 -1257 0
c Var 'aux163' order represents '5' with '1261'
-1259 1261 0
c Var 'aux163' direct represents '5' with '1262'
1259 -1261 1262 0
-1262 1261 0
-1262 -1259 0
c Var 'aux163' order represents '6' with '1263'
-1261 1263 0
c Var 'aux163' direct represents '6' with '1264'
1261 -1263 1264 0
-1264 1263 0
-1264 -1261 0
c Var 'aux163' order represents '7' with '1265'
-1263 1265 0
c Var 'aux163' direct represents '7' with '1266'
1263 -1265 1266 0
-1266 1265 0
-1266 -1263 0
c Var 'aux163' direct represents '8' with '-1265'
1252 1254 1256 1258 1260 1262 1264 1266 -1265 0
c Encoding variable: aux164 with domain: int(0..2) (representing constraint ((grid_00003_00001=3) + (grid_00000_00003=3)))
c Both direct and order encoding.
c Var 'aux164' order represents '0' with '1267'
c Var 'aux164' direct represents '0' with '1267'
c Var 'aux164' order represents '1' with '1268'
-1267 1268 0
c Var 'aux164' direct represents '1' with '1269'
1267 -1268 1269 0
-1269 1268 0
-1269 -1267 0
c Var 'aux164' direct represents '2' with '-1268'
1267 1269 -1268 0
c Encoding variable: aux165 with domain: int(0..2) (representing constraint ((grid_00000_00002=3) + (grid_00003_00002=3)))
c Both direct and order encoding.
c Var 'aux165' order represents '0' with '1270'
c Var 'aux165' direct represents '0' with '1270'
c Var 'aux165' order represents '1' with '1271'
-1270 1271 0
c Var 'aux165' direct represents '1' with '1272'
1270 -1271 1272 0
-1272 1271 0
-1272 -1270 0
c Var 'aux165' direct represents '2' with '-1271'
1270 1272 -1271 0
c Encoding variable: aux166 with domain: int(0..2) (representing constraint ((3=grid_00001_00001) + (3=grid_00002_00001)))
c Both direct and order encoding.
c Var 'aux166' order represents '0' with '1273'
c Var 'aux166' direct represents '0' with '1273'
c Var 'aux166' order represents '1' with '1274'
-1273 1274 0
c Var 'aux166' direct represents '1' with '1275'
1273 -1274 1275 0
-1275 1274 0
-1275 -1273 0
c Var 'aux166' direct represents '2' with '-1274'
1273 1275 -1274 0
c Encoding variable: aux167 with domain: int(0..2) (representing constraint ((grid_00000_00000=3) + (grid_00000_00001=3)))
c Both direct and order encoding.
c Var 'aux167' order represents '0' with '1276'
c Var 'aux167' direct represents '0' with '1276'
c Var 'aux167' order represents '1' with '1277'
-1276 1277 0
c Var 'aux167' direct represents '1' with '1278'
1276 -1277 1278 0
-1278 1277 0
-1278 -1276 0
c Var 'aux167' direct represents '2' with '-1277'
1276 1278 -1277 0
c Encoding variable: aux168 with domain: int(0..2) (representing constraint ((grid_00004_00004=3) + (3=grid_00002_00003)))
c Both direct and order encoding.
c Var 'aux168' order represents '0' with '1279'
c Var 'aux168' direct represents '0' with '1279'
c Var 'aux168' order represents '1' with '1280'
-1279 1280 0
c Var 'aux168' direct represents '1' with '1281'
1279 -1280 1281 0
-1281 1280 0
-1281 -1279 0
c Var 'aux168' direct represents '2' with '-1280'
1279 1281 -1280 0
c Encoding variable: aux169 with domain: int(0..2) (representing constraint ((grid_00004_00002=3) + (3=grid_00001_00002)))
c Both direct and order encoding.
c Var 'aux169' order represents '0' with '1282'
c Var 'aux169' direct represents '0' with '1282'
c Var 'aux169' order represents '1' with '1283'
-1282 1283 0
c Var 'aux169' direct represents '1' with '1284'
1282 -1283 1284 0
-1284 1283 0
-1284 -1282 0
c Var 'aux169' direct represents '2' with '-1283'
1282 1284 -1283 0
c Encoding variable: aux170 with domain: int(0..2) (representing constraint ((grid_00004_00001=3) + (3=grid_00002_00004)))
c Both direct and order encoding.
c Var 'aux170' order represents '0' with '1285'
c Var 'aux170' direct represents '0' with '1285'
c Var 'aux170' order represents '1' with '1286'
-1285 1286 0
c Var 'aux170' direct represents '1' with '1287'
1285 -1286 1287 0
-1287 1286 0
-1287 -1285 0
c Var 'aux170' direct represents '2' with '-1286'
1285 1287 -1286 0
c Encoding variable: aux171 with domain: int(0..2) (representing constraint ((grid_00004_00000=3) + (grid_00003_00003=3)))
c Both direct and order encoding.
c Var 'aux171' order represents '0' with '1288'
c Var 'aux171' direct represents '0' with '1288'
c Var 'aux171' order represents '1' with '1289'
-1288 1289 0
c Var 'aux171' direct represents '1' with '1290'
1288 -1289 1290 0
-1290 1289 0
-1290 -1288 0
c Var 'aux171' direct represents '2' with '-1289'
1288 1290 -1289 0
c Encoding variable: aux172 with domain: int(0..2) (representing constraint ((3=grid_00001_00003) + (3=grid_00001_00004)))
c Both direct and order encoding.
c Var 'aux172' order represents '0' with '1291'
c Var 'aux172' direct represents '0' with '1291'
c Var 'aux172' order represents '1' with '1292'
-1291 1292 0
c Var 'aux172' direct represents '1' with '1293'
1291 -1292 1293 0
-1293 1292 0
-1293 -1291 0
c Var 'aux172' direct represents '2' with '-1292'
1291 1293 -1292 0
c Encoding variable: aux173 with domain: int(0..4) (representing constraint (aux165 + aux172))
c Both direct and order encoding.
c Var 'aux173' order represents '0' with '1294'
c Var 'aux173' direct represents '0' with '1294'
c Var 'aux173' order represents '1' with '1295'
-1294 1295 0
c Var 'aux173' direct represents '1' with '1296'
1294 -1295 1296 0
-1296 1295 0
-1296 -1294 0
c Var 'aux173' order represents '2' with '1297'
-1295 1297 0
c Var 'aux173' direct represents '2' with '1298'
1295 -1297 1298 0
-1298 1297 0
-1298 -1295 0
c Var 'aux173' order represents '3' with '1299'
-1297 1299 0
c Var 'aux173' direct represents '3' with '1300'
1297 -1299 1300 0
-1300 1299 0
-1300 -1297 0
c Var 'aux173' direct represents '4' with '-1299'
1294 1296 1298 1300 -1299 0
c Encoding variable: aux174 with domain: int(0..4) (representing constraint (aux164 + aux168))
c Both direct and order encoding.
c Var 'aux174' order represents '0' with '1301'
c Var 'aux174' direct represents '0' with '1301'
c Var 'aux174' order represents '1' with '1302'
-1301 1302 0
c Var 'aux174' direct represents '1' with '1303'
1301 -1302 1303 0
-1303 1302 0
-1303 -1301 0
c Var 'aux174' order represents '2' with '1304'
-1302 1304 0
c Var 'aux174' direct represents '2' with '1305'
1302 -1304 1305 0
-1305 1304 0
-1305 -1302 0
c Var 'aux174' order represents '3' with '1306'
-1304 1306 0
c Var 'aux174' direct represents '3' with '1307'
1304 -1306 1307 0
-1307 1306 0
-1307 -1304 0
c Var 'aux174' direct represents '4' with '-1306'
1301 1303 1305 1307 -1306 0
c Encoding variable: aux175 with domain: int(0..4) (representing constraint (aux167 + aux166))
c Both direct and order encoding.
c Var 'aux175' order represents '0' with '1308'
c Var 'aux175' direct represents '0' with '1308'
c Var 'aux175' order represents '1' with '1309'
-1308 1309 0
c Var 'aux175' direct represents '1' with '1310'
1308 -1309 1310 0
-1310 1309 0
-1310 -1308 0
c Var 'aux175' order represents '2' with '1311'
-1309 1311 0
c Var 'aux175' direct represents '2' with '1312'
1309 -1311 1312 0
-1312 1311 0
-1312 -1309 0
c Var 'aux175' order represents '3' with '1313'
-1311 1313 0
c Var 'aux175' direct represents '3' with '1314'
1311 -1313 1314 0
-1314 1313 0
-1314 -1311 0
c Var 'aux175' direct represents '4' with '-1313'
1308 1310 1312 1314 -1313 0
c Encoding variable: aux176 with domain: int(0..4) (representing constraint (aux170 + aux169))
c Both direct and order encoding.
c Var 'aux176' order represents '0' with '1315'
c Var 'aux176' direct represents '0' with '1315'
c Var 'aux176' order represents '1' with '1316'
-1315 1316 0
c Var 'aux176' direct represents '1' with '1317'
1315 -1316 1317 0
-1317 1316 0
-1317 -1315 0
c Var 'aux176' order represents '2' with '1318'
-1316 1318 0
c Var 'aux176' direct represents '2' with '1319'
1316 -1318 1319 0
-1319 1318 0
-1319 -1316 0
c Var 'aux176' order represents '3' with '1320'
-1318 1320 0
c Var 'aux176' direct represents '3' with '1321'
1318 -1320 1321 0
-1321 1320 0
-1321 -1318 0
c Var 'aux176' direct represents '4' with '-1320'
1315 1317 1319 1321 -1320 0
c Encoding variable: aux177 with domain: int(0..6) (representing constraint (aux171 + aux176))
c Both direct and order encoding.
c Var 'aux177' order represents '0' with '1322'
c Var 'aux177' direct represents '0' with '1322'
c Var 'aux177' order represents '1' with '1323'
-1322 1323 0
c Var 'aux177' direct represents '1' with '1324'
1322 -1323 1324 0
-1324 1323 0
-1324 -1322 0
c Var 'aux177' order represents '2' with '1325'
-1323 1325 0
c Var 'aux177' direct represents '2' with '1326'
1323 -1325 1326 0
-1326 1325 0
-1326 -1323 0
c Var 'aux177' order represents '3' with '1327'
-1325 1327 0
c Var 'aux177' direct represents '3' with '1328'
1325 -1327 1328 0
-1328 1327 0
-1328 -1325 0
c Var 'aux177' order represents '4' with '1329'
-1327 1329 0
c Var 'aux177' direct represents '4' with '1330'
1327 -1329 1330 0
-1330 1329 0
-1330 -1327 0
c Var 'aux177' order represents '5' with '1331'
-1329 1331 0
c Var 'aux177' direct represents '5' with '1332'
1329 -1331 1332 0
-1332 1331 0
-1332 -1329 0
c Var 'aux177' direct represents '6' with '-1331'
1322 1324 1326 1328 1330 1332 -1331 0
c Encoding variable: aux178 with domain: int(0..8) (representing constraint (aux173 + aux175))
c Both direct and order encoding.
c Var 'aux178' order represents '0' with '1333'
c Var 'aux178' direct represents '0' with '1333'
c Var 'aux178' order represents '1' with '1334'
-1333 1334 0
c Var 'aux178' direct represents '1' with '1335'
1333 -1334 1335 0
-1335 1334 0
-1335 -1333 0
c Var 'aux178' order represents '2' with '1336'
-1334 1336 0
c Var 'aux178' direct represents '2' with '1337'
1334 -1336 1337 0
-1337 1336 0
-1337 -1334 0
c Var 'aux178' order represents '3' with '1338'
-1336 1338 0
c Var 'aux178' direct represents '3' with '1339'
1336 -1338 1339 0
-1339 1338 0
-1339 -1336 0
c Var 'aux178' order represents '4' with '1340'
-1338 1340 0
c Var 'aux178' direct represents '4' with '1341'
1338 -1340 1341 0
-1341 1340 0
-1341 -1338 0
c Var 'aux178' order represents '5' with '1342'
-1340 1342 0
c Var 'aux178' direct represents '5' with '1343'
1340 -1342 1343 0
-1343 1342 0
-1343 -1340 0
c Var 'aux178' order represents '6' with '1344'
-1342 1344 0
c Var 'aux178' direct represents '6' with '1345'
1342 -1344 1345 0
-1345 1344 0
-1345 -1342 0
c Var 'aux178' order represents '7' with '1346'
-1344 1346 0
c Var 'aux178' direct represents '7' with '1347'
1344 -1346 1347 0
-1347 1346 0
-1347 -1344 0
c Var 'aux178' direct represents '8' with '-1346'
1333 1335 1337 1339 1341 1343 1345 1347 -1346 0
c Encoding variable: aux179 with domain: int(0..2) (representing constraint ((grid_00003_00001=4) + (grid_00000_00003=4)))
c Both direct and order encoding.
c Var 'aux179' order represents '0' with '1348'
c Var 'aux179' direct represents '0' with '1348'
c Var 'aux179' order represents '1' with '1349'
-1348 1349 0
c Var 'aux179' direct represents '1' with '1350'
1348 -1349 1350 0
-1350 1349 0
-1350 -1348 0
c Var 'aux179' direct represents '2' with '-1349'
1348 1350 -1349 0
c Encoding variable: aux180 with domain: int(0..2) (representing constraint ((grid_00000_00002=4) + (grid_00003_00002=4)))
c Both direct and order encoding.
c Var 'aux180' order represents '0' with '1351'
c Var 'aux180' direct represents '0' with '1351'
c Var 'aux180' order represents '1' with '1352'
-1351 1352 0
c Var 'aux180' direct represents '1' with '1353'
1351 -1352 1353 0
-1353 1352 0
-1353 -1351 0
c Var 'aux180' direct represents '2' with '-1352'
1351 1353 -1352 0
c Encoding variable: aux181 with domain: int(0..2) (representing constraint ((4=grid_00001_00001) + (4=grid_00002_00001)))
c Both direct and order encoding.
c Var 'aux181' order represents '0' with '1354'
c Var 'aux181' direct represents '0' with '1354'
c Var 'aux181' order represents '1' with '1355'
-1354 1355 0
c Var 'aux181' direct represents '1' with '1356'
1354 -1355 1356 0
-1356 1355 0
-1356 -1354 0
c Var 'aux181' direct represents '2' with '-1355'
1354 1356 -1355 0
c Encoding variable: aux182 with domain: int(0..2) (representing constraint ((grid_00000_00000=4) + (grid_00000_00001=4)))
c Both direct and order encoding.
c Var 'aux182' order represents '0' with '1357'
c Var 'aux182' direct represents '0' with '1357'
c Var 'aux182' order represents '1' with '1358'
-1357 1358 0
c Var 'aux182' direct represents '1' with '1359'
1357 -1358 1359 0
-1359 1358 0
-1359 -1357 0
c Var 'aux182' direct represents '2' with '-1358'
1357 1359 -1358 0
c Encoding variable: aux183 with domain: int(0..2) (representing constraint ((grid_00004_00004=4) + (4=grid_00002_00003)))
c Both direct and order encoding.
c Var 'aux183' order represents '0' with '1360'
c Var 'aux183' direct represents '0' with '1360'
c Var 'aux183' order represents '1' with '1361'
-1360 1361 0
c Var 'aux183' direct represents '1' with '1362'
1360 -1361 1362 0
-1362 1361 0
-1362 -1360 0
c Var 'aux183' direct represents '2' with '-1361'
1360 1362 -1361 0
c Encoding variable: aux184 with domain: int(0..2) (representing constraint ((grid_00004_00002=4) + (4=grid_00001_00002)))
c Both direct and order encoding.
c Var 'aux184' order represents '0' with '1363'
c Var 'aux184' direct represents '0' with '1363'
c Var 'aux184' order represents '1' with '1364'
-1363 1364 0
c Var 'aux184' direct represents '1' with '1365'
1363 -1364 1365 0
-1365 1364 0
-1365 -1363 0
c Var 'aux184' direct represents '2' with '-1364'
1363 1365 -1364 0
c Encoding variable: aux185 with domain: int(0..2) (representing constraint ((grid_00004_00001=4) + (4=grid_00002_00004)))
c Both direct and order encoding.
c Var 'aux185' order represents '0' with '1366'
c Var 'aux185' direct represents '0' with '1366'
c Var 'aux185' order represents '1' with '1367'
-1366 1367 0
c Var 'aux185' direct represents '1' with '1368'
1366 -1367 1368 0
-1368 1367 0
-1368 -1366 0
c Var 'aux185' direct represents '2' with '-1367'
1366 1368 -1367 0
c Encoding variable: aux186 with domain: int(0..2) (representing constraint ((grid_00004_00000=4) + (grid_00003_00003=4)))
c Both direct and order encoding.
c Var 'aux186' order represents '0' with '1369'
c Var 'aux186' direct represents '0' with '1369'
c Var 'aux186' order represents '1' with '1370'
-1369 1370 0
c Var 'aux186' direct represents '1' with '1371'
1369 -1370 1371 0
-1371 1370 0
-1371 -1369 0
c Var 'aux186' direct represents '2' with '-1370'
1369 1371 -1370 0
c Encoding variable: aux187 with domain: int(0..2) (representing constraint ((4=grid_00001_00003) + (4=grid_00001_00004)))
c Both direct and order encoding.
c Var 'aux187' order represents '0' with '1372'
c Var 'aux187' direct represents '0' with '1372'
c Var 'aux187' order represents '1' with '1373'
-1372 1373 0
c Var 'aux187' direct represents '1' with '1374'
1372 -1373 1374 0
-1374 1373 0
-1374 -1372 0
c Var 'aux187' direct represents '2' with '-1373'
1372 1374 -1373 0
c Encoding variable: aux188 with domain: int(0..4) (representing constraint (aux180 + aux187))
c Both direct and order encoding.
c Var 'aux188' order represents '0' with '1375'
c Var 'aux188' direct represents '0' with '1375'
c Var 'aux188' order represents '1' with '1376'
-1375 1376 0
c Var 'aux188' direct represents '1' with '1377'
1375 -1376 1377 0
-1377 1376 0
-1377 -1375 0
c Var 'aux188' order represents '2' with '1378'
-1376 1378 0
c Var 'aux188' direct represents '2' with '1379'
1376 -1378 1379 0
-1379 1378 0
-1379 -1376 0
c Var 'aux188' order represents '3' with '1380'
-1378 1380 0
c Var 'aux188' direct represents '3' with '1381'
1378 -1380 1381 0
-1381 1380 0
-1381 -1378 0
c Var 'aux188' direct represents '4' with '-1380'
1375 1377 1379 1381 -1380 0
c Encoding variable: aux189 with domain: int(0..4) (representing constraint (aux179 + aux183))
c Both direct and order encoding.
c Var 'aux189' order represents '0' with '1382'
c Var 'aux189' direct represents '0' with '1382'
c Var 'aux189' order represents '1' with '1383'
-1382 1383 0
c Var 'aux189' direct represents '1' with '1384'
1382 -1383 1384 0
-1384 1383 0
-1384 -1382 0
c Var 'aux189' order represents '2' with '1385'
-1383 1385 0
c Var 'aux189' direct represents '2' with '1386'
1383 -1385 1386 0
-1386 1385 0
-1386 -1383 0
c Var 'aux189' order represents '3' with '1387'
-1385 1387 0
c Var 'aux189' direct represents '3' with '1388'
1385 -1387 1388 0
-1388 1387 0
-1388 -1385 0
c Var 'aux189' direct represents '4' with '-1387'
1382 1384 1386 1388 -1387 0
c Encoding variable: aux190 with domain: int(0..4) (representing constraint (aux182 + aux181))
c Both direct and order encoding.
c Var 'aux190' order represents '0' with '1389'
c Var 'aux190' direct represents '0' with '1389'
c Var 'aux190' order represents '1' with '1390'
-1389 1390 0
c Var 'aux190' direct represents '1' with '1391'
1389 -1390 1391 0
-1391 1390 0
-1391 -1389 0
c Var 'aux190' order represents '2' with '1392'
-1390 1392 0
c Var 'aux190' direct represents '2' with '1393'
1390 -1392 1393 0
-1393 1392 0
-1393 -1390 0
c Var 'aux190' order represents '3' with '1394'
-1392 1394 0
c Var 'aux190' direct represents '3' with '1395'
1392 -1394 1395 0
-1395 1394 0
-1395 -1392 0
c Var 'aux190' direct represents '4' with '-1394'
1389 1391 1393 1395 -1394 0
c Encoding variable: aux191 with domain: int(0..4) (representing constraint (aux185 + aux184))
c Both direct and order encoding.
c Var 'aux191' order represents '0' with '1396'
c Var 'aux191' direct represents '0' with '1396'
c Var 'aux191' order represents '1' with '1397'
-1396 1397 0
c Var 'aux191' direct represents '1' with '1398'
1396 -1397 1398 0
-1398 1397 0
-1398 -1396 0
c Var 'aux191' order represents '2' with '1399'
-1397 1399 0
c Var 'aux191' direct represents '2' with '1400'
1397 -1399 1400 0
-1400 1399 0
-1400 -1397 0
c Var 'aux191' order represents '3' with '1401'
-1399 1401 0
c Var 'aux191' direct represents '3' with '1402'
1399 -1401 1402 0
-1402 1401 0
-1402 -1399 0
c Var 'aux191' direct represents '4' with '-1401'
1396 1398 1400 1402 -1401 0
c Encoding variable: aux192 with domain: int(0..6) (representing constraint (aux186 + aux191))
c Both direct and order encoding.
c Var 'aux192' order represents '0' with '1403'
c Var 'aux192' direct represents '0' with '1403'
c Var 'aux192' order represents '1' with '1404'
-1403 1404 0
c Var 'aux192' direct represents '1' with '1405'
1403 -1404 1405 0
-1405 1404 0
-1405 -1403 0
c Var 'aux192' order represents '2' with '1406'
-1404 1406 0
c Var 'aux192' direct represents '2' with '1407'
1404 -1406 1407 0
-1407 1406 0
-1407 -1404 0
c Var 'aux192' order represents '3' with '1408'
-1406 1408 0
c Var 'aux192' direct represents '3' with '1409'
1406 -1408 1409 0
-1409 1408 0
-1409 -1406 0
c Var 'aux192' order represents '4' with '1410'
-1408 1410 0
c Var 'aux192' direct represents '4' with '1411'
1408 -1410 1411 0
-1411 1410 0
-1411 -1408 0
c Var 'aux192' order represents '5' with '1412'
-1410 1412 0
c Var 'aux192' direct represents '5' with '1413'
1410 -1412 1413 0
-1413 1412 0
-1413 -1410 0
c Var 'aux192' direct represents '6' with '-1412'
1403 1405 1407 1409 1411 1413 -1412 0
c Encoding variable: aux193 with domain: int(0..8) (representing constraint (aux188 + aux190))
c Both direct and order encoding.
c Var 'aux193' order represents '0' with '1414'
c Var 'aux193' direct represents '0' with '1414'
c Var 'aux193' order represents '1' with '1415'
-1414 1415 0
c Var 'aux193' direct represents '1' with '1416'
1414 -1415 1416 0
-1416 1415 0
-1416 -1414 0
c Var 'aux193' order represents '2' with '1417'
-1415 1417 0
c Var 'aux193' direct represents '2' with '1418'
1415 -1417 1418 0
-1418 1417 0
-1418 -1415 0
c Var 'aux193' order represents '3' with '1419'
-1417 1419 0
c Var 'aux193' direct represents '3' with '1420'
1417 -1419 1420 0
-1420 1419 0
-1420 -1417 0
c Var 'aux193' order represents '4' with '1421'
-1419 1421 0
c Var 'aux193' direct represents '4' with '1422'
1419 -1421 1422 0
-1422 1421 0
-1422 -1419 0
c Var 'aux193' order represents '5' with '1423'
-1421 1423 0
c Var 'aux193' direct represents '5' with '1424'
1421 -1423 1424 0
-1424 1423 0
-1424 -1421 0
c Var 'aux193' order represents '6' with '1425'
-1423 1425 0
c Var 'aux193' direct represents '6' with '1426'
1423 -1425 1426 0
-1426 1425 0
-1426 -1423 0
c Var 'aux193' order represents '7' with '1427'
-1425 1427 0
c Var 'aux193' direct represents '7' with '1428'
1425 -1427 1428 0
-1428 1427 0
-1428 -1425 0
c Var 'aux193' direct represents '8' with '-1427'
1414 1416 1418 1420 1422 1424 1426 1428 -1427 0
c Encoding variable: aux194 with domain: int(0..2) (representing constraint ((grid_00003_00001=5) + (grid_00000_00003=5)))
c Both direct and order encoding.
c Var 'aux194' order represents '0' with '1429'
c Var 'aux194' direct represents '0' with '1429'
c Var 'aux194' order represents '1' with '1430'
-1429 1430 0
c Var 'aux194' direct represents '1' with '1431'
1429 -1430 1431 0
-1431 1430 0
-1431 -1429 0
c Var 'aux194' direct represents '2' with '-1430'
1429 1431 -1430 0
c Encoding variable: aux195 with domain: int(0..2) (representing constraint ((grid_00000_00002=5) + (grid_00003_00002=5)))
c Both direct and order encoding.
c Var 'aux195' order represents '0' with '1432'
c Var 'aux195' direct represents '0' with '1432'
c Var 'aux195' order represents '1' with '1433'
-1432 1433 0
c Var 'aux195' direct represents '1' with '1434'
1432 -1433 1434 0
-1434 1433 0
-1434 -1432 0
c Var 'aux195' direct represents '2' with '-1433'
1432 1434 -1433 0
c Encoding variable: aux196 with domain: int(0..2) (representing constraint ((5=grid_00001_00001) + (5=grid_00002_00001)))
c Both direct and order encoding.
c Var 'aux196' order represents '0' with '1435'
c Var 'aux196' direct represents '0' with '1435'
c Var 'aux196' order represents '1' with '1436'
-1435 1436 0
c Var 'aux196' direct represents '1' with '1437'
1435 -1436 1437 0
-1437 1436 0
-1437 -1435 0
c Var 'aux196' direct represents '2' with '-1436'
1435 1437 -1436 0
c Encoding variable: aux197 with domain: int(0..2) (representing constraint ((grid_00000_00000=5) + (grid_00000_00001=5)))
c Both direct and order encoding.
c Var 'aux197' order represents '0' with '1438'
c Var 'aux197' direct represents '0' with '1438'
c Var 'aux197' order represents '1' with '1439'
-1438 1439 0
c Var 'aux197' direct represents '1' with '1440'
1438 -1439 1440 0
-1440 1439 0
-1440 -1438 0
c Var 'aux197' direct represents '2' with '-1439'
1438 1440 -1439 0
c Encoding variable: aux198 with domain: int(0..2) (representing constraint ((grid_00004_00004=5) + (5=grid_00002_00003)))
c Both direct and order encoding.
c Var 'aux198' order represents '0' with '1441'
c Var 'aux198' direct represents '0' with '1441'
c Var 'aux198' order represents '1' with '1442'
-1441 1442 0
c Var 'aux198' direct represents '1' with '1443'
1441 -1442 1443 0
-1443 1442 0
-1443 -1441 0
c Var 'aux198' direct represents '2' with '-1442'
1441 1443 -1442 0
c Encoding variable: aux199 with domain: int(0..2) (representing constraint ((grid_00004_00002=5) + (5=grid_00001_00002)))
c Both direct and order encoding.
c Var 'aux199' order represents '0' with '1444'
c Var 'aux199' direct represents '0' with '1444'
c Var 'aux199' order represents '1' with '1445'
-1444 1445 0
c Var 'aux199' direct represents '1' with '1446'
1444 -1445 1446 0
-1446 1445 0
-1446 -1444 0
c Var 'aux199' direct represents '2' with '-1445'
1444 1446 -1445 0
c Encoding variable: aux200 with domain: int(0..2) (representing constraint ((grid_00004_00001=5) + (5=grid_00002_00004)))
c Both direct and order encoding.
c Var 'aux200' order represents '0' with '1447'
c Var 'aux200' direct represents '0' with '1447'
c Var 'aux200' order represents '1' with '1448'
-1447 1448 0
c Var 'aux200' direct represents '1' with '1449'
1447 -1448 1449 0
-1449 1448 0
-1449 -1447 0
c Var 'aux200' direct represents '2' with '-1448'
1447 1449 -1448 0
c Encoding variable: aux201 with domain: int(0..2) (representing constraint ((grid_00004_00000=5) + (grid_00003_00003=5)))
c Both direct and order encoding.
c Var 'aux201' order represents '0' with '1450'
c Var 'aux201' direct represents '0' with '1450'
c Var 'aux201' order represents '1' with '1451'
-1450 1451 0
c Var 'aux201' direct represents '1' with '1452'
1450 -1451 1452 0
-1452 1451 0
-1452 -1450 0
c Var 'aux201' direct represents '2' with '-1451'
1450 1452 -1451 0
c Encoding variable: aux202 with domain: int(0..2) (representing constraint ((5=grid_00001_00003) + (5=grid_00001_00004)))
c Both direct and order encoding.
c Var 'aux202' order represents '0' with '1453'
c Var 'aux202' direct represents '0' with '1453'
c Var 'aux202' order represents '1' with '1454'
-1453 1454 0
c Var 'aux202' direct represents '1' with '1455'
1453 -1454 1455 0
-1455 1454 0
-1455 -1453 0
c Var 'aux202' direct represents '2' with '-1454'
1453 1455 -1454 0
c Encoding variable: aux203 with domain: int(0..4) (representing constraint (aux195 + aux202))
c Both direct and order encoding.
c Var 'aux203' order represents '0' with '1456'
c Var 'aux203' direct represents '0' with '1456'
c Var 'aux203' order represents '1' with '1457'
-1456 1457 0
c Var 'aux203' direct represents '1' with '1458'
1456 -1457 1458 0
-1458 1457 0
-1458 -1456 0
c Var 'aux203' order represents '2' with '1459'
-1457 1459 0
c Var 'aux203' direct represents '2' with '1460'
1457 -1459 1460 0
-1460 1459 0
-1460 -1457 0
c Var 'aux203' order represents '3' with '1461'
-1459 1461 0
c Var 'aux203' direct represents '3' with '1462'
1459 -1461 1462 0
-1462 1461 0
-1462 -1459 0
c Var 'aux203' direct represents '4' with '-1461'
1456 1458 1460 1462 -1461 0
c Encoding variable: aux204 with domain: int(0..4) (representing constraint (aux194 + aux198))
c Both direct and order encoding.
c Var 'aux204' order represents '0' with '1463'
c Var 'aux204' direct represents '0' with '1463'
c Var 'aux204' order represents '1' with '1464'
-1463 1464 0
c Var 'aux204' direct represents '1' with '1465'
1463 -1464 1465 0
-1465 1464 0
-1465 -1463 0
c Var 'aux204' order represents '2' with '1466'
-1464 1466 0
c Var 'aux204' direct represents '2' with '1467'
1464 -1466 1467 0
-1467 1466 0
-1467 -1464 0
c Var 'aux204' order represents '3' with '1468'
-1466 1468 0
c Var 'aux204' direct represents '3' with '1469'
1466 -1468 1469 0
-1469 1468 0
-1469 -1466 0
c Var 'aux204' direct represents '4' with '-1468'
1463 1465 1467 1469 -1468 0
c Encoding variable: aux205 with domain: int(0..4) (representing constraint (aux197 + aux196))
c Both direct and order encoding.
c Var 'aux205' order represents '0' with '1470'
c Var 'aux205' direct represents '0' with '1470'
c Var 'aux205' order represents '1' with '1471'
-1470 1471 0
c Var 'aux205' direct represents '1' with '1472'
1470 -1471 1472 0
-1472 1471 0
-1472 -1470 0
c Var 'aux205' order represents '2' with '1473'
-1471 1473 0
c Var 'aux205' direct represents '2' with '1474'
1471 -1473 1474 0
-1474 1473 0
-1474 -1471 0
c Var 'aux205' order represents '3' with '1475'
-1473 1475 0
c Var 'aux205' direct represents '3' with '1476'
1473 -1475 1476 0
-1476 1475 0
-1476 -1473 0
c Var 'aux205' direct represents '4' with '-1475'
1470 1472 1474 1476 -1475 0
c Encoding variable: aux206 with domain: int(0..4) (representing constraint (aux200 + aux199))
c Both direct and order encoding.
c Var 'aux206' order represents '0' with '1477'
c Var 'aux206' direct represents '0' with '1477'
c Var 'aux206' order represents '1' with '1478'
-1477 1478 0
c Var 'aux206' direct represents '1' with '1479'
1477 -1478 1479 0
-1479 1478 0
-1479 -1477 0
c Var 'aux206' order represents '2' with '1480'
-1478 1480 0
c Var 'aux206' direct represents '2' with '1481'
1478 -1480 1481 0
-1481 1480 0
-1481 -1478 0
c Var 'aux206' order represents '3' with '1482'
-1480 1482 0
c Var 'aux206' direct represents '3' with '1483'
1480 -1482 1483 0
-1483 1482 0
-1483 -1480 0
c Var 'aux206' direct represents '4' with '-1482'
1477 1479 1481 1483 -1482 0
c Encoding variable: aux207 with domain: int(0..6) (representing constraint (aux201 + aux206))
c Both direct and order encoding.
c Var 'aux207' order represents '0' with '1484'
c Var 'aux207' direct represents '0' with '1484'
c Var 'aux207' order represents '1' with '1485'
-1484 1485 0
c Var 'aux207' direct represents '1' with '1486'
1484 -1485 1486 0
-1486 1485 0
-1486 -1484 0
c Var 'aux207' order represents '2' with '1487'
-1485 1487 0
c Var 'aux207' direct represents '2' with '1488'
1485 -1487 1488 0
-1488 1487 0
-1488 -1485 0
c Var 'aux207' order represents '3' with '1489'
-1487 1489 0
c Var 'aux207' direct represents '3' with '1490'
1487 -1489 1490 0
-1490 1489 0
-1490 -1487 0
c Var 'aux207' order represents '4' with '1491'
-1489 1491 0
c Var 'aux207' direct represents '4' with '1492'
1489 -1491 1492 0
-1492 1491 0
-1492 -1489 0
c Var 'aux207' order represents '5' with '1493'
-1491 1493 0
c Var 'aux207' direct represents '5' with '1494'
1491 -1493 1494 0
-1494 1493 0
-1494 -1491 0
c Var 'aux207' direct represents '6' with '-1493'
1484 1486 1488 1490 1492 1494 -1493 0
c Encoding variable: aux208 with domain: int(0..8) (representing constraint (aux203 + aux205))
c Both direct and order encoding.
c Var 'aux208' order represents '0' with '1495'
c Var 'aux208' direct represents '0' with '1495'
c Var 'aux208' order represents '1' with '1496'
-1495 1496 0
c Var 'aux208' direct represents '1' with '1497'
1495 -1496 1497 0
-1497 1496 0
-1497 -1495 0
c Var 'aux208' order represents '2' with '1498'
-1496 1498 0
c Var 'aux208' direct represents '2' with '1499'
1496 -1498 1499 0
-1499 1498 0
-1499 -1496 0
c Var 'aux208' order represents '3' with '1500'
-1498 1500 0
c Var 'aux208' direct represents '3' with '1501'
1498 -1500 1501 0
-1501 1500 0
-1501 -1498 0
c Var 'aux208' order represents '4' with '1502'
-1500 1502 0
c Var 'aux208' direct represents '4' with '1503'
1500 -1502 1503 0
-1503 1502 0
-1503 -1500 0
c Var 'aux208' order represents '5' with '1504'
-1502 1504 0
c Var 'aux208' direct represents '5' with '1505'
1502 -1504 1505 0
-1505 1504 0
-1505 -1502 0
c Var 'aux208' order represents '6' with '1506'
-1504 1506 0
c Var 'aux208' direct represents '6' with '1507'
1504 -1506 1507 0
-1507 1506 0
-1507 -1504 0
c Var 'aux208' order represents '7' with '1508'
-1506 1508 0
c Var 'aux208' direct represents '7' with '1509'
1506 -1508 1509 0
-1509 1508 0
-1509 -1506 0
c Var 'aux208' direct represents '8' with '-1508'
1495 1497 1499 1501 1503 1505 1507 1509 -1508 0
c Encoding variable: aux209 with domain: int(0..2) (representing constraint ((grid_00003_00001=6) + (grid_00000_00003=6)))
c Both direct and order encoding.
c Var 'aux209' order represents '0' with '1510'
c Var 'aux209' direct represents '0' with '1510'
c Var 'aux209' order represents '1' with '1511'
-1510 1511 0
c Var 'aux209' direct represents '1' with '1512'
1510 -1511 1512 0
-1512 1511 0
-1512 -1510 0
c Var 'aux209' direct represents '2' with '-1511'
1510 1512 -1511 0
c Encoding variable: aux210 with domain: int(0..2) (representing constraint ((grid_00000_00002=6) + (grid_00003_00002=6)))
c Both direct and order encoding.
c Var 'aux210' order represents '0' with '1513'
c Var 'aux210' direct represents '0' with '1513'
c Var 'aux210' order represents '1' with '1514'
-1513 1514 0
c Var 'aux210' direct represents '1' with '1515'
1513 -1514 1515 0
-1515 1514 0
-1515 -1513 0
c Var 'aux210' direct represents '2' with '-1514'
1513 1515 -1514 0
c Encoding variable: aux211 with domain: int(0..2) (representing constraint ((6=grid_00001_00001) + (6=grid_00002_00001)))
c Both direct and order encoding.
c Var 'aux211' order represents '0' with '1516'
c Var 'aux211' direct represents '0' with '1516'
c Var 'aux211' order represents '1' with '1517'
-1516 1517 0
c Var 'aux211' direct represents '1' with '1518'
1516 -1517 1518 0
-1518 1517 0
-1518 -1516 0
c Var 'aux211' direct represents '2' with '-1517'
1516 1518 -1517 0
c Encoding variable: aux212 with domain: int(0..2) (representing constraint ((grid_00000_00000=6) + (grid_00000_00001=6)))
c Both direct and order encoding.
c Var 'aux212' order represents '0' with '1519'
c Var 'aux212' direct represents '0' with '1519'
c Var 'aux212' order represents '1' with '1520'
-1519 1520 0
c Var 'aux212' direct represents '1' with '1521'
1519 -1520 1521 0
-1521 1520 0
-1521 -1519 0
c Var 'aux212' direct represents '2' with '-1520'
1519 1521 -1520 0
c Encoding variable: aux213 with domain: int(0..2) (representing constraint ((grid_00004_00004=6) + (6=grid_00002_00003)))
c Both direct and order encoding.
c Var 'aux213' order represents '0' with '1522'
c Var 'aux213' direct represents '0' with '1522'
c Var 'aux213' order represents '1' with '1523'
-1522 1523 0
c Var 'aux213' direct represents '1' with '1524'
1522 -1523 1524 0
-1524 1523 0
-1524 -1522 0
c Var 'aux213' direct represents '2' with '-1523'
1522 1524 -1523 0
c Encoding variable: aux214 with domain: int(0..2) (representing constraint ((grid_00004_00002=6) + (6=grid_00001_00002)))
c Both direct and order encoding.
c Var 'aux214' order represents '0' with '1525'
c Var 'aux214' direct represents '0' with '1525'
c Var 'aux214' order represents '1' with '1526'
-1525 1526 0
c Var 'aux214' direct represents '1' with '1527'
1525 -1526 1527 0
-1527 1526 0
-1527 -1525 0
c Var 'aux214' direct represents '2' with '-1526'
1525 1527 -1526 0
c Encoding variable: aux215 with domain: int(0..2) (representing constraint ((grid_00004_00001=6) + (6=grid_00002_00004)))
c Both direct and order encoding.
c Var 'aux215' order represents '0' with '1528'
c Var 'aux215' direct represents '0' with '1528'
c Var 'aux215' order represents '1' with '1529'
-1528 1529 0
c Var 'aux215' direct represents '1' with '1530'
1528 -1529 1530 0
-1530 1529 0
-1530 -1528 0
c Var 'aux215' direct represents '2' with '-1529'
1528 1530 -1529 0
c Encoding variable: aux216 with domain: int(0..2) (representing constraint ((grid_00004_00000=6) + (grid_00003_00003=6)))
c Both direct and order encoding.
c Var 'aux216' order represents '0' with '1531'
c Var 'aux216' direct represents '0' with '1531'
c Var 'aux216' order represents '1' with '1532'
-1531 1532 0
c Var 'aux216' direct represents '1' with '1533'
1531 -1532 1533 0
-1533 1532 0
-1533 -1531 0
c Var 'aux216' direct represents '2' with '-1532'
1531 1533 -1532 0
c Encoding variable: aux217 with domain: int(0..2) (representing constraint ((6=grid_00001_00003) + (6=grid_00001_00004)))
c Both direct and order encoding.
c Var 'aux217' order represents '0' with '1534'
c Var 'aux217' direct represents '0' with '1534'
c Var 'aux217' order represents '1' with '1535'
-1534 1535 0
c Var 'aux217' direct represents '1' with '1536'
1534 -1535 1536 0
-1536 1535 0
-1536 -1534 0
c Var 'aux217' direct represents '2' with '-1535'
1534 1536 -1535 0
c Encoding variable: aux218 with domain: int(0..4) (representing constraint (aux210 + aux217))
c Both direct and order encoding.
c Var 'aux218' order represents '0' with '1537'
c Var 'aux218' direct represents '0' with '1537'
c Var 'aux218' order represents '1' with '1538'
-1537 1538 0
c Var 'aux218' direct represents '1' with '1539'
1537 -1538 1539 0
-1539 1538 0
-1539 -1537 0
c Var 'aux218' order represents '2' with '1540'
-1538 1540 0
c Var 'aux218' direct represents '2' with '1541'
1538 -1540 1541 0
-1541 1540 0
-1541 -1538 0
c Var 'aux218' order represents '3' with '1542'
-1540 1542 0
c Var 'aux218' direct represents '3' with '1543'
1540 -1542 1543 0
-1543 1542 0
-1543 -1540 0
c Var 'aux218' direct represents '4' with '-1542'
1537 1539 1541 1543 -1542 0
c Encoding variable: aux219 with domain: int(0..4) (representing constraint (aux209 + aux213))
c Both direct and order encoding.
c Var 'aux219' order represents '0' with '1544'
c Var 'aux219' direct represents '0' with '1544'
c Var 'aux219' order represents '1' with '1545'
-1544 1545 0
c Var 'aux219' direct represents '1' with '1546'
1544 -1545 1546 0
-1546 1545 0
-1546 -1544 0
c Var 'aux219' order represents '2' with '1547'
-1545 1547 0
c Var 'aux219' direct represents '2' with '1548'
1545 -1547 1548 0
-1548 1547 0
-1548 -1545 0
c Var 'aux219' order represents '3' with '1549'
-1547 1549 0
c Var 'aux219' direct represents '3' with '1550'
1547 -1549 1550 0
-1550 1549 0
-1550 -1547 0
c Var 'aux219' direct represents '4' with '-1549'
1544 1546 1548 1550 -1549 0
c Encoding variable: aux220 with domain: int(0..4) (representing constraint (aux212 + aux211))
c Both direct and order encoding.
c Var 'aux220' order represents '0' with '1551'
c Var 'aux220' direct represents '0' with '1551'
c Var 'aux220' order represents '1' with '1552'
-1551 1552 0
c Var 'aux220' direct represents '1' with '1553'
1551 -1552 1553 0
-1553 1552 0
-1553 -1551 0
c Var 'aux220' order represents '2' with '1554'
-1552 1554 0
c Var 'aux220' direct represents '2' with '1555'
1552 -1554 1555 0
-1555 1554 0
-1555 -1552 0
c Var 'aux220' order represents '3' with '1556'
-1554 1556 0
c Var 'aux220' direct represents '3' with '1557'
1554 -1556 1557 0
-1557 1556 0
-1557 -1554 0
c Var 'aux220' direct represents '4' with '-1556'
1551 1553 1555 1557 -1556 0
c Encoding variable: aux221 with domain: int(0..4) (representing constraint (aux215 + aux214))
c Both direct and order encoding.
c Var 'aux221' order represents '0' with '1558'
c Var 'aux221' direct represents '0' with '1558'
c Var 'aux221' order represents '1' with '1559'
-1558 1559 0
c Var 'aux221' direct represents '1' with '1560'
1558 -1559 1560 0
-1560 1559 0
-1560 -1558 0
c Var 'aux221' order represents '2' with '1561'
-1559 1561 0
c Var 'aux221' direct represents '2' with '1562'
1559 -1561 1562 0
-1562 1561 0
-1562 -1559 0
c Var 'aux221' order represents '3' with '1563'
-1561 1563 0
c Var 'aux221' direct represents '3' with '1564'
1561 -1563 1564 0
-1564 1563 0
-1564 -1561 0
c Var 'aux221' direct represents '4' with '-1563'
1558 1560 1562 1564 -1563 0
c Encoding variable: aux222 with domain: int(0..6) (representing constraint (aux216 + aux221))
c Both direct and order encoding.
c Var 'aux222' order represents '0' with '1565'
c Var 'aux222' direct represents '0' with '1565'
c Var 'aux222' order represents '1' with '1566'
-1565 1566 0
c Var 'aux222' direct represents '1' with '1567'
1565 -1566 1567 0
-1567 1566 0
-1567 -1565 0
c Var 'aux222' order represents '2' with '1568'
-1566 1568 0
c Var 'aux222' direct represents '2' with '1569'
1566 -1568 1569 0
-1569 1568 0
-1569 -1566 0
c Var 'aux222' order represents '3' with '1570'
-1568 1570 0
c Var 'aux222' direct represents '3' with '1571'
1568 -1570 1571 0
-1571 1570 0
-1571 -1568 0
c Var 'aux222' order represents '4' with '1572'
-1570 1572 0
c Var 'aux222' direct represents '4' with '1573'
1570 -1572 1573 0
-1573 1572 0
-1573 -1570 0
c Var 'aux222' order represents '5' with '1574'
-1572 1574 0
c Var 'aux222' direct represents '5' with '1575'
1572 -1574 1575 0
-1575 1574 0
-1575 -1572 0
c Var 'aux222' direct represents '6' with '-1574'
1565 1567 1569 1571 1573 1575 -1574 0
c Encoding variable: aux223 with domain: int(0..8) (representing constraint (aux218 + aux220))
c Both direct and order encoding.
c Var 'aux223' order represents '0' with '1576'
c Var 'aux223' direct represents '0' with '1576'
c Var 'aux223' order represents '1' with '1577'
-1576 1577 0
c Var 'aux223' direct represents '1' with '1578'
1576 -1577 1578 0
-1578 1577 0
-1578 -1576 0
c Var 'aux223' order represents '2' with '1579'
-1577 1579 0
c Var 'aux223' direct represents '2' with '1580'
1577 -1579 1580 0
-1580 1579 0
-1580 -1577 0
c Var 'aux223' order represents '3' with '1581'
-1579 1581 0
c Var 'aux223' direct represents '3' with '1582'
1579 -1581 1582 0
-1582 1581 0
-1582 -1579 0
c Var 'aux223' order represents '4' with '1583'
-1581 1583 0
c Var 'aux223' direct represents '4' with '1584'
1581 -1583 1584 0
-1584 1583 0
-1584 -1581 0
c Var 'aux223' order represents '5' with '1585'
-1583 1585 0
c Var 'aux223' direct represents '5' with '1586'
1583 -1585 1586 0
-1586 1585 0
-1586 -1583 0
c Var 'aux223' order represents '6' with '1587'
-1585 1587 0
c Var 'aux223' direct represents '6' with '1588'
1585 -1587 1588 0
-1588 1587 0
-1588 -1585 0
c Var 'aux223' order represents '7' with '1589'
-1587 1589 0
c Var 'aux223' direct represents '7' with '1590'
1587 -1589 1590 0
-1590 1589 0
-1590 -1587 0
c Var 'aux223' direct represents '8' with '-1589'
1576 1578 1580 1582 1584 1586 1588 1590 -1589 0
c Encoding variable: aux224 with domain: int(0..2) (representing constraint ((grid_00003_00001=7) + (grid_00000_00003=7)))
c Both direct and order encoding.
c Var 'aux224' order represents '0' with '1591'
c Var 'aux224' direct represents '0' with '1591'
c Var 'aux224' order represents '1' with '1592'
-1591 1592 0
c Var 'aux224' direct represents '1' with '1593'
1591 -1592 1593 0
-1593 1592 0
-1593 -1591 0
c Var 'aux224' direct represents '2' with '-1592'
1591 1593 -1592 0
c Encoding variable: aux225 with domain: int(0..2) (representing constraint ((grid_00000_00002=7) + (grid_00003_00002=7)))
c Both direct and order encoding.
c Var 'aux225' order represents '0' with '1594'
c Var 'aux225' direct represents '0' with '1594'
c Var 'aux225' order represents '1' with '1595'
-1594 1595 0
c Var 'aux225' direct represents '1' with '1596'
1594 -1595 1596 0
-1596 1595 0
-1596 -1594 0
c Var 'aux225' direct represents '2' with '-1595'
1594 1596 -1595 0
c Encoding variable: aux226 with domain: int(0..2) (representing constraint ((7=grid_00001_00001) + (7=grid_00002_00001)))
c Both direct and order encoding.
c Var 'aux226' order represents '0' with '1597'
c Var 'aux226' direct represents '0' with '1597'
c Var 'aux226' order represents '1' with '1598'
-1597 1598 0
c Var 'aux226' direct represents '1' with '1599'
1597 -1598 1599 0
-1599 1598 0
-1599 -1597 0
c Var 'aux226' direct represents '2' with '-1598'
1597 1599 -1598 0
c Encoding variable: aux227 with domain: int(0..2) (representing constraint ((grid_00000_00000=7) + (grid_00000_00001=7)))
c Both direct and order encoding.
c Var 'aux227' order represents '0' with '1600'
c Var 'aux227' direct represents '0' with '1600'
c Var 'aux227' order represents '1' with '1601'
-1600 1601 0
c Var 'aux227' direct represents '1' with '1602'
1600 -1601 1602 0
-1602 1601 0
-1602 -1600 0
c Var 'aux227' direct represents '2' with '-1601'
1600 1602 -1601 0
c Encoding variable: aux228 with domain: int(0..2) (representing constraint ((grid_00004_00004=7) + (7=grid_00002_00003)))
c Both direct and order encoding.
c Var 'aux228' order represents '0' with '1603'
c Var 'aux228' direct represents '0' with '1603'
c Var 'aux228' order represents '1' with '1604'
-1603 1604 0
c Var 'aux228' direct represents '1' with '1605'
1603 -1604 1605 0
-1605 1604 0
-1605 -1603 0
c Var 'aux228' direct represents '2' with '-1604'
1603 1605 -1604 0
c Encoding variable: aux229 with domain: int(0..2) (representing constraint ((grid_00004_00002=7) + (7=grid_00001_00002)))
c Both direct and order encoding.
c Var 'aux229' order represents '0' with '1606'
c Var 'aux229' direct represents '0' with '1606'
c Var 'aux229' order represents '1' with '1607'
-1606 1607 0
c Var 'aux229' direct represents '1' with '1608'
1606 -1607 1608 0
-1608 1607 0
-1608 -1606 0
c Var 'aux229' direct represents '2' with '-1607'
1606 1608 -1607 0
c Encoding variable: aux230 with domain: int(0..2) (representing constraint ((grid_00004_00001=7) + (7=grid_00002_00004)))
c Both direct and order encoding.
c Var 'aux230' order represents '0' with '1609'
c Var 'aux230' direct represents '0' with '1609'
c Var 'aux230' order represents '1' with '1610'
-1609 1610 0
c Var 'aux230' direct represents '1' with '1611'
1609 -1610 1611 0
-1611 1610 0
-1611 -1609 0
c Var 'aux230' direct represents '2' with '-1610'
1609 1611 -1610 0
c Encoding variable: aux231 with domain: int(0..2) (representing constraint ((grid_00004_00000=7) + (grid_00003_00003=7)))
c Both direct and order encoding.
c Var 'aux231' order represents '0' with '1612'
c Var 'aux231' direct represents '0' with '1612'
c Var 'aux231' order represents '1' with '1613'
-1612 1613 0
c Var 'aux231' direct represents '1' with '1614'
1612 -1613 1614 0
-1614 1613 0
-1614 -1612 0
c Var 'aux231' direct represents '2' with '-1613'
1612 1614 -1613 0
c Encoding variable: aux232 with domain: int(0..2) (representing constraint ((7=grid_00001_00003) + (7=grid_00001_00004)))
c Both direct and order encoding.
c Var 'aux232' order represents '0' with '1615'
c Var 'aux232' direct represents '0' with '1615'
c Var 'aux232' order represents '1' with '1616'
-1615 1616 0
c Var 'aux232' direct represents '1' with '1617'
1615 -1616 1617 0
-1617 1616 0
-1617 -1615 0
c Var 'aux232' direct represents '2' with '-1616'
1615 1617 -1616 0
c Encoding variable: aux233 with domain: int(0..4) (representing constraint (aux225 + aux232))
c Both direct and order encoding.
c Var 'aux233' order represents '0' with '1618'
c Var 'aux233' direct represents '0' with '1618'
c Var 'aux233' order represents '1' with '1619'
-1618 1619 0
c Var 'aux233' direct represents '1' with '1620'
1618 -1619 1620 0
-1620 1619 0
-1620 -1618 0
c Var 'aux233' order represents '2' with '1621'
-1619 1621 0
c Var 'aux233' direct represents '2' with '1622'
1619 -1621 1622 0
-1622 1621 0
-1622 -1619 0
c Var 'aux233' order represents '3' with '1623'
-1621 1623 0
c Var 'aux233' direct represents '3' with '1624'
1621 -1623 1624 0
-1624 1623 0
-1624 -1621 0
c Var 'aux233' direct represents '4' with '-1623'
1618 1620 1622 1624 -1623 0
c Encoding variable: aux234 with domain: int(0..4) (representing constraint (aux224 + aux228))
c Both direct and order encoding.
c Var 'aux234' order represents '0' with '1625'
c Var 'aux234' direct represents '0' with '1625'
c Var 'aux234' order represents '1' with '1626'
-1625 1626 0
c Var 'aux234' direct represents '1' with '1627'
1625 -1626 1627 0
-1627 1626 0
-1627 -1625 0
c Var 'aux234' order represents '2' with '1628'
-1626 1628 0
c Var 'aux234' direct represents '2' with '1629'
1626 -1628 1629 0
-1629 1628 0
-1629 -1626 0
c Var 'aux234' order represents '3' with '1630'
-1628 1630 0
c Var 'aux234' direct represents '3' with '1631'
1628 -1630 1631 0
-1631 1630 0
-1631 -1628 0
c Var 'aux234' direct represents '4' with '-1630'
1625 1627 1629 1631 -1630 0
c Encoding variable: aux235 with domain: int(0..4) (representing constraint (aux227 + aux226))
c Both direct and order encoding.
c Var 'aux235' order represents '0' with '1632'
c Var 'aux235' direct represents '0' with '1632'
c Var 'aux235' order represents '1' with '1633'
-1632 1633 0
c Var 'aux235' direct represents '1' with '1634'
1632 -1633 1634 0
-1634 1633 0
-1634 -1632 0
c Var 'aux235' order represents '2' with '1635'
-1633 1635 0
c Var 'aux235' direct represents '2' with '1636'
1633 -1635 1636 0
-1636 1635 0
-1636 -1633 0
c Var 'aux235' order represents '3' with '1637'
-1635 1637 0
c Var 'aux235' direct represents '3' with '1638'
1635 -1637 1638 0
-1638 1637 0
-1638 -1635 0
c Var 'aux235' direct represents '4' with '-1637'
1632 1634 1636 1638 -1637 0
c Encoding variable: aux236 with domain: int(0..4) (representing constraint (aux230 + aux229))
c Both direct and order encoding.
c Var 'aux236' order represents '0' with '1639'
c Var 'aux236' direct represents '0' with '1639'
c Var 'aux236' order represents '1' with '1640'
-1639 1640 0
c Var 'aux236' direct represents '1' with '1641'
1639 -1640 1641 0
-1641 1640 0
-1641 -1639 0
c Var 'aux236' order represents '2' with '1642'
-1640 1642 0
c Var 'aux236' direct represents '2' with '1643'
1640 -1642 1643 0
-1643 1642 0
-1643 -1640 0
c Var 'aux236' order represents '3' with '1644'
-1642 1644 0
c Var 'aux236' direct represents '3' with '1645'
1642 -1644 1645 0
-1645 1644 0
-1645 -1642 0
c Var 'aux236' direct represents '4' with '-1644'
1639 1641 1643 1645 -1644 0
c Encoding variable: aux237 with domain: int(0..6) (representing constraint (aux231 + aux236))
c Both direct and order encoding.
c Var 'aux237' order represents '0' with '1646'
c Var 'aux237' direct represents '0' with '1646'
c Var 'aux237' order represents '1' with '1647'
-1646 1647 0
c Var 'aux237' direct represents '1' with '1648'
1646 -1647 1648 0
-1648 1647 0
-1648 -1646 0
c Var 'aux237' order represents '2' with '1649'
-1647 1649 0
c Var 'aux237' direct represents '2' with '1650'
1647 -1649 1650 0
-1650 1649 0
-1650 -1647 0
c Var 'aux237' order represents '3' with '1651'
-1649 1651 0
c Var 'aux237' direct represents '3' with '1652'
1649 -1651 1652 0
-1652 1651 0
-1652 -1649 0
c Var 'aux237' order represents '4' with '1653'
-1651 1653 0
c Var 'aux237' direct represents '4' with '1654'
1651 -1653 1654 0
-1654 1653 0
-1654 -1651 0
c Var 'aux237' order represents '5' with '1655'
-1653 1655 0
c Var 'aux237' direct represents '5' with '1656'
1653 -1655 1656 0
-1656 1655 0
-1656 -1653 0
c Var 'aux237' direct represents '6' with '-1655'
1646 1648 1650 1652 1654 1656 -1655 0
c Encoding variable: aux238 with domain: int(0..8) (representing constraint (aux233 + aux235))
c Both direct and order encoding.
c Var 'aux238' order represents '0' with '1657'
c Var 'aux238' direct represents '0' with '1657'
c Var 'aux238' order represents '1' with '1658'
-1657 1658 0
c Var 'aux238' direct represents '1' with '1659'
1657 -1658 1659 0
-1659 1658 0
-1659 -1657 0
c Var 'aux238' order represents '2' with '1660'
-1658 1660 0
c Var 'aux238' direct represents '2' with '1661'
1658 -1660 1661 0
-1661 1660 0
-1661 -1658 0
c Var 'aux238' order represents '3' with '1662'
-1660 1662 0
c Var 'aux238' direct represents '3' with '1663'
1660 -1662 1663 0
-1663 1662 0
-1663 -1660 0
c Var 'aux238' order represents '4' with '1664'
-1662 1664 0
c Var 'aux238' direct represents '4' with '1665'
1662 -1664 1665 0
-1665 1664 0
-1665 -1662 0
c Var 'aux238' order represents '5' with '1666'
-1664 1666 0
c Var 'aux238' direct represents '5' with '1667'
1664 -1666 1667 0
-1667 1666 0
-1667 -1664 0
c Var 'aux238' order represents '6' with '1668'
-1666 1668 0
c Var 'aux238' direct represents '6' with '1669'
1666 -1668 1669 0
-1669 1668 0
-1669 -1666 0
c Var 'aux238' order represents '7' with '1670'
-1668 1670 0
c Var 'aux238' direct represents '7' with '1671'
1668 -1670 1671 0
-1671 1670 0
-1671 -1668 0
c Var 'aux238' direct represents '8' with '-1670'
1657 1659 1661 1663 1665 1667 1669 1671 -1670 0
c Encoding variable: aux239 with domain: int(0..2) (representing constraint ((0<grid_00000_00000) + (0<grid_00000_00003)))
c Both direct and order encoding.
c Var 'aux239' order represents '0' with '1672'
c Var 'aux239' direct represents '0' with '1672'
c Var 'aux239' order represents '1' with '1673'
-1672 1673 0
c Var 'aux239' direct represents '1' with '1674'
1672 -1673 1674 0
-1674 1673 0
-1674 -1672 0
c Var 'aux239' direct represents '2' with '-1673'
1672 1674 -1673 0
c Encoding variable: aux240 with domain: int(0..2) (representing constraint ((0<grid_00004_00000) + (0<grid_00004_00004)))
c Both direct and order encoding.
c Var 'aux240' order represents '0' with '1675'
c Var 'aux240' direct represents '0' with '1675'
c Var 'aux240' order represents '1' with '1676'
-1675 1676 0
c Var 'aux240' direct represents '1' with '1677'
1675 -1676 1677 0
-1677 1676 0
-1677 -1675 0
c Var 'aux240' direct represents '2' with '-1676'
1675 1677 -1676 0
c Encoding variable: aux241 with domain: int(0..2) (representing constraint ((0<grid_00000_00000) + (0<grid_00000_00003)))
c Both direct and order encoding.
c Var 'aux241' order represents '0' with '1678'
c Var 'aux241' direct represents '0' with '1678'
c Var 'aux241' order represents '1' with '1679'
-1678 1679 0
c Var 'aux241' direct represents '1' with '1680'
1678 -1679 1680 0
-1680 1679 0
-1680 -1678 0
c Var 'aux241' direct represents '2' with '-1679'
1678 1680 -1679 0
c Encoding variable: aux242 with domain: int(0..2) (representing constraint ((0<grid_00001_00001) + (0<grid_00001_00004)))
c Both direct and order encoding.
c Var 'aux242' order represents '0' with '1681'
c Var 'aux242' direct represents '0' with '1681'
c Var 'aux242' order represents '1' with '1682'
-1681 1682 0
c Var 'aux242' direct represents '1' with '1683'
1681 -1682 1683 0
-1683 1682 0
-1683 -1681 0
c Var 'aux242' direct represents '2' with '-1682'
1681 1683 -1682 0
c Encoding variable: aux243 with domain: int(0..2) (representing constraint ((0<grid_00004_00000) + (0<grid_00004_00004)))
c Both direct and order encoding.
c Var 'aux243' order represents '0' with '1684'
c Var 'aux243' direct represents '0' with '1684'
c Var 'aux243' order represents '1' with '1685'
-1684 1685 0
c Var 'aux243' direct represents '1' with '1686'
1684 -1685 1686 0
-1686 1685 0
-1686 -1684 0
c Var 'aux243' direct represents '2' with '-1685'
1684 1686 -1685 0
c Encoding variable: aux244 with domain: int(0..2) (representing constraint ((0<grid_00002_00001) + (0<grid_00001_00001)))
c Both direct and order encoding.
c Var 'aux244' order represents '0' with '1687'
c Var 'aux244' direct represents '0' with '1687'
c Var 'aux244' order represents '1' with '1688'
-1687 1688 0
c Var 'aux244' direct represents '1' with '1689'
1687 -1688 1689 0
-1689 1688 0
-1689 -1687 0
c Var 'aux244' direct represents '2' with '-1688'
1687 1689 -1688 0
c Encoding variable: aux245 with domain: int(0..2) (representing constraint ((0<grid_00000_00001) + (0<grid_00003_00001)))
c Both direct and order encoding.
c Var 'aux245' order represents '0' with '1690'
c Var 'aux245' direct represents '0' with '1690'
c Var 'aux245' order represents '1' with '1691'
-1690 1691 0
c Var 'aux245' direct represents '1' with '1692'
1690 -1691 1692 0
-1692 1691 0
-1692 -1690 0
c Var 'aux245' direct represents '2' with '-1691'
1690 1692 -1691 0
c Encoding variable: aux246 with domain: int(0..2) (representing constraint ((0<grid_00003_00002) + (0<grid_00001_00002)))
c Both direct and order encoding.
c Var 'aux246' order represents '0' with '1693'
c Var 'aux246' direct represents '0' with '1693'
c Var 'aux246' order represents '1' with '1694'
-1693 1694 0
c Var 'aux246' direct represents '1' with '1695'
1693 -1694 1695 0
-1695 1694 0
-1695 -1693 0
c Var 'aux246' direct represents '2' with '-1694'
1693 1695 -1694 0
c Encoding variable: aux247 with domain: int(0..2) (representing constraint ((0<grid_00002_00001) + (0<grid_00001_00001)))
c Both direct and order encoding.
c Var 'aux247' order represents '0' with '1696'
c Var 'aux247' direct represents '0' with '1696'
c Var 'aux247' order represents '1' with '1697'
-1696 1697 0
c Var 'aux247' direct represents '1' with '1698'
1696 -1697 1698 0
-1698 1697 0
-1698 -1696 0
c Var 'aux247' direct represents '2' with '-1697'
1696 1698 -1697 0
c Encoding variable: aux248 with domain: int(0..2) (representing constraint ((0<grid_00000_00001) + (0<grid_00003_00001)))
c Both direct and order encoding.
c Var 'aux248' order represents '0' with '1699'
c Var 'aux248' direct represents '0' with '1699'
c Var 'aux248' order represents '1' with '1700'
-1699 1700 0
c Var 'aux248' direct represents '1' with '1701'
1699 -1700 1701 0
-1701 1700 0
-1701 -1699 0
c Var 'aux248' direct represents '2' with '-1700'
1699 1701 -1700 0
c Encoding variable: aux249 with domain: int(0..2) (representing constraint ((0<grid_00003_00002) + (0<grid_00001_00002)))
c Both direct and order encoding.
c Var 'aux249' order represents '0' with '1702'
c Var 'aux249' direct represents '0' with '1702'
c Var 'aux249' order represents '1' with '1703'
-1702 1703 0
c Var 'aux249' direct represents '1' with '1704'
1702 -1703 1704 0
-1704 1703 0
-1704 -1702 0
c Var 'aux249' direct represents '2' with '-1703'
1702 1704 -1703 0
c ((1<=(aux39 + aux42 + aux43))=tv=SATLiteral(509))
-509 -572 -593 -604 0
509 604 0
509 593 0
509 594 0
509 596 0
509 598 0
509 600 0
509 602 0
509 572 0
509 572 593 0
509 572 594 0
509 572 596 0
509 572 598 0
509 572 600 0
509 572 602 0
509 573 0
509 573 593 0
509 573 594 0
509 573 596 0
509 573 598 0
509 573 600 0
509 573 602 0
509 575 0
509 575 593 0
509 575 594 0
509 575 596 0
509 575 598 0
509 575 600 0
509 575 602 0
509 577 0
509 577 593 0
509 577 594 0
509 577 596 0
509 577 598 0
509 577 600 0
509 577 602 0
c ((1<=(aux54 + aux57 + aux58))=tv=SATLiteral(510))
-510 -653 -674 -685 0
510 685 0
510 674 0
510 675 0
510 677 0
510 679 0
510 681 0
510 683 0
510 653 0
510 653 674 0
510 653 675 0
510 653 677 0
510 653 679 0
510 653 681 0
510 653 683 0
510 654 0
510 654 674 0
510 654 675 0
510 654 677 0
510 654 679 0
510 654 681 0
510 654 683 0
510 656 0
510 656 674 0
510 656 675 0
510 656 677 0
510 656 679 0
510 656 681 0
510 656 683 0
510 658 0
510 658 674 0
510 658 675 0
510 658 677 0
510 658 679 0
510 658 681 0
510 658 683 0
c ((1<=(aux69 + aux72 + aux73))=tv=SATLiteral(511))
-511 -734 -755 -766 0
511 766 0
511 755 0
511 756 0
511 758 0
511 760 0
511 762 0
511 764 0
511 734 0
511 734 755 0
511 734 756 0
511 734 758 0
511 734 760 0
511 734 762 0
511 734 764 0
511 735 0
511 735 755 0
511 735 756 0
511 735 758 0
511 735 760 0
511 735 762 0
511 735 764 0
511 737 0
511 737 755 0
511 737 756 0
511 737 758 0
511 737 760 0
511 737 762 0
511 737 764 0
511 739 0
511 739 755 0
511 739 756 0
511 739 758 0
511 739 760 0
511 739 762 0
511 739 764 0
c ((1<=(aux84 + aux87 + aux88))=tv=SATLiteral(512))
-512 -815 -836 -847 0
512 847 0
512 836 0
512 837 0
512 839 0
512 841 0
512 843 0
512 845 0
512 815 0
512 815 836 0
512 815 837 0
512 815 839 0
512 815 841 0
512 815 843 0
512 815 845 0
512 816 0
512 816 836 0
512 816 837 0
512 816 839 0
512 816 841 0
512 816 843 0
512 816 845 0
512 818 0
512 818 836 0
512 818 837 0
512 818 839 0
512 818 841 0
512 818 843 0
512 818 845 0
512 820 0
512 820 836 0
512 820 837 0
512 820 839 0
512 820 841 0
512 820 843 0
512 820 845 0
c ((1<=(aux102 + aux103 + aux99))=tv=SATLiteral(513))
-513 -896 -917 -928 0
513 928 0
513 917 0
513 918 0
513 920 0
513 922 0
513 924 0
513 926 0
513 896 0
513 896 917 0
513 896 918 0
513 896 920 0
513 896 922 0
513 896 924 0
513 896 926 0
513 897 0
513 897 917 0
513 897 918 0
513 897 920 0
513 897 922 0
513 897 924 0
513 897 926 0
513 899 0
513 899 917 0
513 899 918 0
513 899 920 0
513 899 922 0
513 899 924 0
513 899 926 0
513 901 0
513 901 917 0
513 901 918 0
513 901 920 0
513 901 922 0
513 901 924 0
513 901 926 0
c ((1<=(aux114 + aux117 + aux118))=tv=SATLiteral(514))
-514 -977 -998 -1009 0
514 1009 0
514 998 0
514 999 0
514 1001 0
514 1003 0
514 1005 0
514 1007 0
514 977 0
514 977 998 0
514 977 999 0
514 977 1001 0
514 977 1003 0
514 977 1005 0
514 977 1007 0
514 978 0
514 978 998 0
514 978 999 0
514 978 1001 0
514 978 1003 0
514 978 1005 0
514 978 1007 0
514 980 0
514 980 998 0
514 980 999 0
514 980 1001 0
514 980 1003 0
514 980 1005 0
514 980 1007 0
514 982 0
514 982 998 0
514 982 999 0
514 982 1001 0
514 982 1003 0
514 982 1005 0
514 982 1007 0
c ((1<=(aux129 + aux132 + aux133))=tv=SATLiteral(515))
-515 -1058 -1079 -1090 0
515 1090 0
515 1079 0
515 1080 0
515 1082 0
515 1084 0
515 1086 0
515 1088 0
515 1058 0
515 1058 1079 0
515 1058 1080 0
515 1058 1082 0
515 1058 1084 0
515 1058 1086 0
515 1058 1088 0
515 1059 0
515 1059 1079 0
515 1059 1080 0
515 1059 1082 0
515 1059 1084 0
515 1059 1086 0
515 1059 1088 0
515 1061 0
515 1061 1079 0
515 1061 1080 0
515 1061 1082 0
515 1061 1084 0
515 1061 1086 0
515 1061 1088 0
515 1063 0
515 1063 1079 0
515 1063 1080 0
515 1063 1082 0
515 1063 1084 0
515 1063 1086 0
515 1063 1088 0
c (((aux144 + aux147 + aux148)<=1)=tv=SATLiteral(516))
-516 1172 0
-516 1160 1171 0
-516 1161 0
-516 1163 0
-516 1165 0
-516 1167 0
-516 1169 0
-516 1139 1171 0
-516 1139 1160 0
-516 1139 1161 0
-516 1139 1163 0
-516 1139 1165 0
-516 1139 1167 0
-516 1139 1169 0
-516 1140 0
-516 1140 1160 0
-516 1140 1161 0
-516 1140 1163 0
-516 1140 1165 0
-516 1140 1167 0
-516 1140 1169 0
-516 1142 0
-516 1142 1160 0
-516 1142 1161 0
-516 1142 1163 0
-516 1142 1165 0
-516 1142 1167 0
-516 1142 1169 0
-516 1144 0
-516 1144 1160 0
-516 1144 1161 0
-516 1144 1163 0
-516 1144 1165 0
-516 1144 1167 0
-516 1144 1169 0
516 -1140 -1160 -1171 0
516 -1139 -1161 -1171 0
516 -1139 -1160 -1172 0
c (((aux159 + aux162 + aux163)<=1)=tv=SATLiteral(517))
-517 1253 0
-517 1241 1252 0
-517 1242 0
-517 1244 0
-517 1246 0
-517 1248 0
-517 1250 0
-517 1220 1252 0
-517 1220 1241 0
-517 1220 1242 0
-517 1220 1244 0
-517 1220 1246 0
-517 1220 1248 0
-517 1220 1250 0
-517 1221 0
-517 1221 1241 0
-517 1221 1242 0
-517 1221 1244 0
-517 1221 1246 0
-517 1221 1248 0
-517 1221 1250 0
-517 1223 0
-517 1223 1241 0
-517 1223 1242 0
-517 1223 1244 0
-517 1223 1246 0
-517 1223 1248 0
-517 1223 1250 0
-517 1225 0
-517 1225 1241 0
-517 1225 1242 0
-517 1225 1244 0
-517 1225 1246 0
-517 1225 1248 0
-517 1225 1250 0
517 -1221 -1241 -1252 0
517 -1220 -1242 -1252 0
517 -1220 -1241 -1253 0
c (((aux174 + aux177 + aux178)<=1)=tv=SATLiteral(518))
-518 1334 0
-518 1322 1333 0
-518 1323 0
-518 1325 0
-518 1327 0
-518 1329 0
-518 1331 0
-518 1301 1333 0
-518 1301 1322 0
-518 1301 1323 0
-518 1301 1325 0
-518 1301 1327 0
-518 1301 1329 0
-518 1301 1331 0
-518 1302 0
-518 1302 1322 0
-518 1302 1323 0
-518 1302 1325 0
-518 1302 1327 0
-518 1302 1329 0
-518 1302 1331 0
-518 1304 0
-518 1304 1322 0
-518 1304 1323 0
-518 1304 1325 0
-518 1304 1327 0
-518 1304 1329 0
-518 1304 1331 0
-518 1306 0
-518 1306 1322 0
-518 1306 1323 0
-518 1306 1325 0
-518 1306 1327 0
-518 1306 1329 0
-518 1306 1331 0
518 -1302 -1322 -1333 0
518 -1301 -1323 -1333 0
518 -1301 -1322 -1334 0
c (((aux189 + aux192 + aux193)<=1)=tv=SATLiteral(519))
-519 1415 0
-519 1403 1414 0
-519 1404 0
-519 1406 0
-519 1408 0
-519 1410 0
-519 1412 0
-519 1382 1414 0
-519 1382 1403 0
-519 1382 1404 0
-519 1382 1406 0
-519 1382 1408 0
-519 1382 1410 0
-519 1382 1412 0
-519 1383 0
-519 1383 1403 0
-519 1383 1404 0
-519 1383 1406 0
-519 1383 1408 0
-519 1383 1410 0
-519 1383 1412 0
-519 1385 0
-519 1385 1403 0
-519 1385 1404 0
-519 1385 1406 0
-519 1385 1408 0
-519 1385 1410 0
-519 1385 1412 0
-519 1387 0
-519 1387 1403 0
-519 1387 1404 0
-519 1387 1406 0
-519 1387 1408 0
-519 1387 1410 0
-519 1387 1412 0
519 -1383 -1403 -1414 0
519 -1382 -1404 -1414 0
519 -1382 -1403 -1415 0
c (((aux204 + aux207 + aux208)<=1)=tv=SATLiteral(520))
-520 1496 0
-520 1484 1495 0
-520 1485 0
-520 1487 0
-520 1489 0
-520 1491 0
-520 1493 0
-520 1463 1495 0
-520 1463 1484 0
-520 1463 1485 0
-520 1463 1487 0
-520 1463 1489 0
-520 1463 1491 0
-520 1463 1493 0
-520 1464 0
-520 1464 1484 0
-520 1464 1485 0
-520 1464 1487 0
-520 1464 1489 0
-520 1464 1491 0
-520 1464 1493 0
-520 1466 0
-520 1466 1484 0
-520 1466 1485 0
-520 1466 1487 0
-520 1466 1489 0
-520 1466 1491 0
-520 1466 1493 0
-520 1468 0
-520 1468 1484 0
-520 1468 1485 0
-520 1468 1487 0
-520 1468 1489 0
-520 1468 1491 0
-520 1468 1493 0
520 -1464 -1484 -1495 0
520 -1463 -1485 -1495 0
520 -1463 -1484 -1496 0
c (((aux219 + aux222 + aux223)<=1)=tv=SATLiteral(521))
-521 1577 0
-521 1565 1576 0
-521 1566 0
-521 1568 0
-521 1570 0
-521 1572 0
-521 1574 0
-521 1544 1576 0
-521 1544 1565 0
-521 1544 1566 0
-521 1544 1568 0
-521 1544 1570 0
-521 1544 1572 0
-521 1544 1574 0
-521 1545 0
-521 1545 1565 0
-521 1545 1566 0
-521 1545 1568 0
-521 1545 1570 0
-521 1545 1572 0
-521 1545 1574 0
-521 1547 0
-521 1547 1565 0
-521 1547 1566 0
-521 1547 1568 0
-521 1547 1570 0
-521 1547 1572 0
-521 1547 1574 0
-521 1549 0
-521 1549 1565 0
-521 1549 1566 0
-521 1549 1568 0
-521 1549 1570 0
-521 1549 1572 0
-521 1549 1574 0
521 -1545 -1565 -1576 0
521 -1544 -1566 -1576 0
521 -1544 -1565 -1577 0
c (((aux234 + aux237 + aux238)<=1)=tv=SATLiteral(522))
-522 1658 0
-522 1646 1657 0
-522 1647 0
-522 1649 0
-522 1651 0
-522 1653 0
-522 1655 0
-522 1625 1657 0
-522 1625 1646 0
-522 1625 1647 0
-522 1625 1649 0
-522 1625 1651 0
-522 1625 1653 0
-522 1625 1655 0
-522 1626 0
-522 1626 1646 0
-522 1626 1647 0
-522 1626 1649 0
-522 1626 1651 0
-522 1626 1653 0
-522 1626 1655 0
-522 1628 0
-522 1628 1646 0
-522 1628 1647 0
-522 1628 1649 0
-522 1628 1651 0
-522 1628 1653 0
-522 1628 1655 0
-522 1630 0
-522 1630 1646 0
-522 1630 1647 0
-522 1630 1649 0
-522 1630 1651 0
-522 1630 1653 0
-522 1630 1655 0
522 -1626 -1646 -1657 0
522 -1625 -1647 -1657 0
522 -1625 -1646 -1658 0
c ((2<=(aux239 + SATLiteral(-15) + SATLiteral(-28)))=tv=SATLiteral(523))
-523 -28 -1672 0
-523 -15 -1672 0
-523 -15 -28 -1673 0
523 1673 0
523 28 1672 0
523 15 1672 0
523 15 28 0
c ((2<=(SATLiteral(-109) + SATLiteral(-123) + SATLiteral(-136)))=tv=SATLiteral(524))
-524 -123 -136 0
-524 -109 -136 0
-524 -109 -123 0
524 123 136 0
524 109 136 0
524 109 123 0
c ((3<=(aux240 + SATLiteral(-203) + SATLiteral(-216)))=tv=SATLiteral(525))
-525 -1675 0
-525 -216 -1676 0
-525 -203 -1676 0
-525 -203 -216 0
525 216 1676 0
525 203 1676 0
525 203 216 1675 0
c (((aux241 + SATLiteral(-15) + SATLiteral(-28))<=2)=tv=SATLiteral(526))
-526 28 1679 0
-526 15 1679 0
-526 15 28 1678 0
526 -1678 0
526 -28 -1679 0
526 -15 -1679 0
526 -15 -28 0
c (((aux242 + SATLiteral(-69) + SATLiteral(-82))<=0)=tv=SATLiteral(527))
-527 1681 0
-527 82 0
-527 69 0
-527 69 82 0
527 -69 -82 -1681 0
c (((SATLiteral(-109) + SATLiteral(-123) + SATLiteral(-136))<=2)=tv=SATLiteral(528))
-528 109 123 136 0
528 -136 0
528 -123 0
528 -109 0
528 -109 -123 0
c (((SATLiteral(-150) + SATLiteral(-163) + SATLiteral(-176))<=0)=tv=SATLiteral(529))
-529 176 0
-529 163 0
-529 150 0
-529 150 163 0
529 -150 -163 -176 0
c (((aux243 + SATLiteral(-203) + SATLiteral(-216))<=3)=tv=SATLiteral(530))
-530 203 216 1685 0
530 -1685 0
530 -216 0
530 -203 0
530 -203 -216 0
c ((2<=(SATLiteral(-190) + SATLiteral(-2)))=tv=SATLiteral(531))
-531 -2 0
-531 -190 0
531 190 2 0
c ((1<=(aux244 + aux245 + SATLiteral(-203)))=tv=SATLiteral(532))
-532 -203 -1687 -1690 0
532 1690 0
532 1687 0
532 1688 0
532 203 0
532 203 1687 0
532 203 1688 0
c ((1<=(aux246 + SATLiteral(-216) + SATLiteral(-28)))=tv=SATLiteral(533))
-533 -216 -28 -1693 0
533 1693 0
533 28 0
533 216 0
533 216 28 0
c ((1<=(SATLiteral(-136) + SATLiteral(-230) + SATLiteral(-95)))=tv=SATLiteral(534))
-534 -136 -230 -95 0
534 95 0
534 230 0
534 136 0
534 136 230 0
c (((aux247 + aux248 + SATLiteral(-203))<=1)=tv=SATLiteral(535))
-535 1700 0
-535 1696 1699 0
-535 1697 0
-535 203 1699 0
-535 203 1696 0
-535 203 1697 0
535 -1696 -1699 0
535 -203 -1697 -1699 0
535 -203 -1696 -1700 0
c (((aux249 + SATLiteral(-216) + SATLiteral(-28))<=1)=tv=SATLiteral(536))
-536 1703 0
-536 28 1702 0
-536 216 1702 0
-536 216 28 0
536 -28 -1702 0
536 -216 -1702 0
536 -216 -28 -1703 0
c (((SATLiteral(-136) + SATLiteral(-230) + SATLiteral(-95))<=1)=tv=SATLiteral(537))
-537 230 95 0
-537 136 95 0
-537 136 230 0
537 -230 -95 0
537 -136 -95 0
537 -136 -230 0
c SATLiteral(54)
54 0
c SATLiteral(55)
55 0
c SATLiteral(229)
229 0
c SATLiteral(108)
108 0
c SATLiteral(122)
122 0
c SATLiteral(149)
149 0
c SATLiteral(189)
189 0
c (SATLiteral(-4) \/ SATLiteral(-502))
-4 -502 0
c (SATLiteral(-6) \/ SATLiteral(-503))
-6 -503 0
c (SATLiteral(-8) \/ SATLiteral(-504))
-8 -504 0
c (SATLiteral(-12) \/ SATLiteral(-506))
-12 -506 0
c (SATLiteral(-14) \/ SATLiteral(-507))
-14 -507 0
c (SATLiteral(13) \/ SATLiteral(-508))
13 -508 0
c (SATLiteral(-17) \/ SATLiteral(-502))
-17 -502 0
c (SATLiteral(-19) \/ SATLiteral(-503))
-19 -503 0
c (SATLiteral(-21) \/ SATLiteral(-504))
-21 -504 0
c (SATLiteral(-23) \/ SATLiteral(-505))
-23 -505 0
c (SATLiteral(-25) \/ SATLiteral(-506))
-25 -506 0
c (SATLiteral(-27) \/ SATLiteral(-507))
-27 -507 0
c (SATLiteral(26) \/ SATLiteral(-508))
26 -508 0
c (SATLiteral(-30) \/ SATLiteral(-502))
-30 -502 0
c (SATLiteral(-32) \/ SATLiteral(-503))
-32 -503 0
c (SATLiteral(-34) \/ SATLiteral(-504))
-34 -504 0
c (SATLiteral(-36) \/ SATLiteral(-505))
-36 -505 0
c (SATLiteral(-38) \/ SATLiteral(-506))
-38 -506 0
c (SATLiteral(-40) \/ SATLiteral(-507))
-40 -507 0
c (SATLiteral(39) \/ SATLiteral(-508))
39 -508 0
c (SATLiteral(-45) \/ SATLiteral(-503))
-45 -503 0
c (SATLiteral(-47) \/ SATLiteral(-504))
-47 -504 0
c (SATLiteral(-49) \/ SATLiteral(-505))
-49 -505 0
c (SATLiteral(-51) \/ SATLiteral(-506))
-51 -506 0
c (SATLiteral(-53) \/ SATLiteral(-507))
-53 -507 0
c (SATLiteral(52) \/ SATLiteral(-508))
52 -508 0
c (SATLiteral(-58) \/ SATLiteral(-502))
-58 -502 0
c (SATLiteral(-60) \/ SATLiteral(-503))
-60 -503 0
c (SATLiteral(-62) \/ SATLiteral(-504))
-62 -504 0
c (SATLiteral(-66) \/ SATLiteral(-506))
-66 -506 0
c (SATLiteral(-68) \/ SATLiteral(-507))
-68 -507 0
c (SATLiteral(67) \/ SATLiteral(-508))
67 -508 0
c (SATLiteral(-71) \/ SATLiteral(-502))
-71 -502 0
c (SATLiteral(-75) \/ SATLiteral(-504))
-75 -504 0
c (SATLiteral(-77) \/ SATLiteral(-505))
-77 -505 0
c (SATLiteral(-79) \/ SATLiteral(-506))
-79 -506 0
c (SATLiteral(-81) \/ SATLiteral(-507))
-81 -507 0
c (SATLiteral(80) \/ SATLiteral(-508))
80 -508 0
c (SATLiteral(-84) \/ SATLiteral(-502))
-84 -502 0
c (SATLiteral(-86) \/ SATLiteral(-503))
-86 -503 0
c (SATLiteral(-88) \/ SATLiteral(-504))
-88 -504 0
c (SATLiteral(-90) \/ SATLiteral(-505))
-90 -505 0
c (SATLiteral(-92) \/ SATLiteral(-506))
-92 -506 0
c (SATLiteral(-94) \/ SATLiteral(-507))
-94 -507 0
c (SATLiteral(93) \/ SATLiteral(-508))
93 -508 0
c (SATLiteral(-99) \/ SATLiteral(-503))
-99 -503 0
c (SATLiteral(-101) \/ SATLiteral(-504))
-101 -504 0
c (SATLiteral(-103) \/ SATLiteral(-505))
-103 -505 0
c (SATLiteral(-105) \/ SATLiteral(-506))
-105 -506 0
c (SATLiteral(-107) \/ SATLiteral(-507))
-107 -507 0
c (SATLiteral(106) \/ SATLiteral(-508))
106 -508 0
c (SATLiteral(-111) \/ SATLiteral(-502))
-111 -502 0
c (SATLiteral(-117) \/ SATLiteral(-505))
-117 -505 0
c (SATLiteral(-119) \/ SATLiteral(-506))
-119 -506 0
c (SATLiteral(-121) \/ SATLiteral(-507))
-121 -507 0
c (SATLiteral(120) \/ SATLiteral(-508))
120 -508 0
c (SATLiteral(-125) \/ SATLiteral(-502))
-125 -502 0
c (SATLiteral(-129) \/ SATLiteral(-504))
-129 -504 0
c (SATLiteral(-131) \/ SATLiteral(-505))
-131 -505 0
c (SATLiteral(-133) \/ SATLiteral(-506))
-133 -506 0
c (SATLiteral(-135) \/ SATLiteral(-507))
-135 -507 0
c (SATLiteral(134) \/ SATLiteral(-508))
134 -508 0
c (SATLiteral(-138) \/ SATLiteral(-502))
-138 -502 0
c (SATLiteral(-140) \/ SATLiteral(-503))
-140 -503 0
c (SATLiteral(-142) \/ SATLiteral(-504))
-142 -504 0
c (SATLiteral(-144) \/ SATLiteral(-505))
-144 -505 0
c (SATLiteral(-146) \/ SATLiteral(-506))
-146 -506 0
c (SATLiteral(-148) \/ SATLiteral(-507))
-148 -507 0
c (SATLiteral(-152) \/ SATLiteral(-502))
-152 -502 0
c (SATLiteral(-154) \/ SATLiteral(-503))
-154 -503 0
c (SATLiteral(-156) \/ SATLiteral(-504))
-156 -504 0
c (SATLiteral(-158) \/ SATLiteral(-505))
-158 -505 0
c (SATLiteral(-162) \/ SATLiteral(-507))
-162 -507 0
c (SATLiteral(161) \/ SATLiteral(-508))
161 -508 0
c (SATLiteral(-165) \/ SATLiteral(-502))
-165 -502 0
c (SATLiteral(-169) \/ SATLiteral(-504))
-169 -504 0
c (SATLiteral(-171) \/ SATLiteral(-505))
-171 -505 0
c (SATLiteral(-173) \/ SATLiteral(-506))
-173 -506 0
c (SATLiteral(-175) \/ SATLiteral(-507))
-175 -507 0
c (SATLiteral(174) \/ SATLiteral(-508))
174 -508 0
c (SATLiteral(-178) \/ SATLiteral(-502))
-178 -502 0
c (SATLiteral(-180) \/ SATLiteral(-503))
-180 -503 0
c (SATLiteral(-182) \/ SATLiteral(-504))
-182 -504 0
c (SATLiteral(-184) \/ SATLiteral(-505))
-184 -505 0
c (SATLiteral(-186) \/ SATLiteral(-506))
-186 -506 0
c (SATLiteral(-192) \/ SATLiteral(-502))
-192 -502 0
c (SATLiteral(-194) \/ SATLiteral(-503))
-194 -503 0
c (SATLiteral(-196) \/ SATLiteral(-504))
-196 -504 0
c (SATLiteral(-198) \/ SATLiteral(-505))
-198 -505 0
c (SATLiteral(-202) \/ SATLiteral(-507))
-202 -507 0
c (SATLiteral(201) \/ SATLiteral(-508))
201 -508 0
c (SATLiteral(-205) \/ SATLiteral(-502))
-205 -502 0
c (SATLiteral(-207) \/ SATLiteral(-503))
-207 -503 0
c (SATLiteral(-209) \/ SATLiteral(-504))
-209 -504 0
c (SATLiteral(-211) \/ SATLiteral(-505))
-211 -505 0
c (SATLiteral(-213) \/ SATLiteral(-506))
-213 -506 0
c (SATLiteral(-215) \/ SATLiteral(-507))
-215 -507 0
c (SATLiteral(214) \/ SATLiteral(-508))
214 -508 0
c (SATLiteral(-218) \/ SATLiteral(-502))
-218 -502 0
c (SATLiteral(-220) \/ SATLiteral(-503))
-220 -503 0
c (SATLiteral(-222) \/ SATLiteral(-504))
-222 -504 0
c (SATLiteral(-224) \/ SATLiteral(-505))
-224 -505 0
c (SATLiteral(-226) \/ SATLiteral(-506))
-226 -506 0
c (SATLiteral(227) \/ SATLiteral(-508))
227 -508 0
c (SATLiteral(-232) \/ SATLiteral(-502))
-232 -502 0
c (SATLiteral(-234) \/ SATLiteral(-503))
-234 -503 0
c (SATLiteral(-236) \/ SATLiteral(-504))
-236 -504 0
c (SATLiteral(-238) \/ SATLiteral(-505))
-238 -505 0
c (SATLiteral(-240) \/ SATLiteral(-506))
-240 -506 0
c (SATLiteral(488) -> SATLiteral(509))
-488 509 0
c (SATLiteral(489) -> SATLiteral(510))
-489 510 0
c (SATLiteral(490) -> SATLiteral(511))
-490 511 0
c (SATLiteral(491) -> SATLiteral(512))
-491 512 0
c (SATLiteral(492) -> SATLiteral(513))
-492 513 0
c (SATLiteral(493) -> SATLiteral(514))
-493 514 0
c (SATLiteral(494) -> SATLiteral(515))
-494 515 0
c (SATLiteral(495) -> SATLiteral(516))
-495 516 0
c (SATLiteral(496) -> SATLiteral(517))
-496 517 0
c (SATLiteral(497) -> SATLiteral(518))
-497 518 0
c (SATLiteral(498) -> SATLiteral(519))
-498 519 0
c (SATLiteral(499) -> SATLiteral(520))
-499 520 0
c (SATLiteral(500) -> SATLiteral(521))
-500 521 0
c (SATLiteral(501) -> SATLiteral(522))
-501 522 0
c (SATLiteral(56) \/ SATLiteral(2) \/ SATLiteral(-251))
56 2 -251 0
c (SATLiteral(-255) \/ SATLiteral(2) \/ SATLiteral(15))
-255 2 15 0
c (SATLiteral(56) \/ SATLiteral(15) \/ SATLiteral(-259))
56 15 -259 0
c (SATLiteral(69) \/ SATLiteral(15) \/ SATLiteral(-260))
69 15 -260 0
c (SATLiteral(-264) \/ SATLiteral(15) \/ SATLiteral(28))
-264 15 28 0
c (SATLiteral(56) \/ SATLiteral(-267) \/ SATLiteral(28))
56 -267 28 0
c (SATLiteral(69) \/ SATLiteral(28) \/ SATLiteral(-268))
69 28 -268 0
c (SATLiteral(82) \/ SATLiteral(28) \/ SATLiteral(-269))
82 28 -269 0
c (SATLiteral(-273) \/ SATLiteral(28) \/ SATLiteral(41))
-273 28 41 0
c (SATLiteral(69) \/ SATLiteral(-276) \/ SATLiteral(41))
69 -276 41 0
c (SATLiteral(82) \/ SATLiteral(-277) \/ SATLiteral(41))
82 -277 41 0
c (SATLiteral(95) \/ SATLiteral(-278) \/ SATLiteral(41))
95 -278 41 0
c (SATLiteral(56) \/ SATLiteral(109) \/ SATLiteral(-304))
56 109 -304 0
c (SATLiteral(56) \/ SATLiteral(69) \/ SATLiteral(-309))
56 69 -309 0
c (SATLiteral(69) \/ SATLiteral(109) \/ SATLiteral(-312))
69 109 -312 0
c (SATLiteral(69) \/ SATLiteral(-314) \/ SATLiteral(123))
69 -314 123 0
c (SATLiteral(-318) \/ SATLiteral(69) \/ SATLiteral(82))
-318 69 82 0
c (SATLiteral(82) \/ SATLiteral(-322) \/ SATLiteral(123))
82 -322 123 0
c (SATLiteral(82) \/ SATLiteral(-323) \/ SATLiteral(136))
82 -323 136 0
c (SATLiteral(82) \/ SATLiteral(95) \/ SATLiteral(-327))
82 95 -327 0
c (SATLiteral(95) \/ SATLiteral(-330) \/ SATLiteral(123))
95 -330 123 0
c (SATLiteral(95) \/ SATLiteral(-331) \/ SATLiteral(136))
95 -331 136 0
c (SATLiteral(-349) \/ SATLiteral(109) \/ SATLiteral(150))
-349 109 150 0
c (SATLiteral(-350) \/ SATLiteral(109) \/ SATLiteral(163))
-350 109 163 0
c (SATLiteral(-366) \/ SATLiteral(123) \/ SATLiteral(163))
-366 123 163 0
c (SATLiteral(-367) \/ SATLiteral(123) \/ SATLiteral(176))
-367 123 176 0
c (SATLiteral(123) \/ SATLiteral(136) \/ SATLiteral(-372))
123 136 -372 0
c (SATLiteral(-375) \/ SATLiteral(136) \/ SATLiteral(176))
-375 136 176 0
c (SATLiteral(190) \/ SATLiteral(-393) \/ SATLiteral(150))
190 -393 150 0
c (SATLiteral(-394) \/ SATLiteral(203) \/ SATLiteral(150))
-394 203 150 0
c (SATLiteral(-395) \/ SATLiteral(216) \/ SATLiteral(150))
-395 216 150 0
c (SATLiteral(150) \/ SATLiteral(163) \/ SATLiteral(-399))
150 163 -399 0
c (SATLiteral(203) \/ SATLiteral(-402) \/ SATLiteral(163))
203 -402 163 0
c (SATLiteral(-403) \/ SATLiteral(216) \/ SATLiteral(163))
-403 216 163 0
c (SATLiteral(-408) \/ SATLiteral(163) \/ SATLiteral(176))
-408 163 176 0
c (SATLiteral(-411) \/ SATLiteral(216) \/ SATLiteral(176))
-411 216 176 0
c (SATLiteral(-413) \/ SATLiteral(230) \/ SATLiteral(176))
-413 230 176 0
c (SATLiteral(-435) \/ SATLiteral(190) \/ SATLiteral(203))
-435 190 203 0
c (SATLiteral(203) \/ SATLiteral(216) \/ SATLiteral(-444))
203 216 -444 0
c (SATLiteral(468) -> SATLiteral(523))
-468 523 0
c (SATLiteral(470) -> SATLiteral(524))
-470 524 0
c (SATLiteral(472) -> SATLiteral(525))
-472 525 0
c (SATLiteral(473) -> SATLiteral(526))
-473 526 0
c (SATLiteral(474) -> SATLiteral(527))
-474 527 0
c (SATLiteral(475) -> SATLiteral(528))
-475 528 0
c (SATLiteral(476) -> SATLiteral(529))
-476 529 0
c (SATLiteral(477) -> SATLiteral(530))
-477 530 0
c (SATLiteral(478) -> SATLiteral(531))
-478 531 0
c (SATLiteral(479) -> SATLiteral(532))
-479 532 0
c (SATLiteral(480) -> SATLiteral(533))
-480 533 0
c (SATLiteral(482) -> SATLiteral(534))
-482 534 0
c (SATLiteral(484) -> SATLiteral(535))
-484 535 0
c (SATLiteral(485) -> SATLiteral(536))
-485 536 0
c (SATLiteral(487) -> SATLiteral(537))
-487 537 0
c (( - aux239 + SATLiteral(-2) + SATLiteral(-41))<=0)
41 -1672 0
2 -1672 0
2 41 -1673 0
c (0<=( - aux239 + SATLiteral(-2) + SATLiteral(-41)))
-41 1673 0
-2 1673 0
-2 -41 1672 0
c (( - aux240 + SATLiteral(-190) + SATLiteral(-230))<=0)
230 -1675 0
190 -1675 0
190 230 -1676 0
c (0<=( - aux240 + SATLiteral(-190) + SATLiteral(-230)))
-230 1676 0
-190 1676 0
-190 -230 1675 0
c (( - aux241 + SATLiteral(-2) + SATLiteral(-41))<=0)
41 -1678 0
2 -1678 0
2 41 -1679 0
c (0<=( - aux241 + SATLiteral(-2) + SATLiteral(-41)))
-41 1679 0
-2 1679 0
-2 -41 1678 0
c (( - aux242 + SATLiteral(-56) + SATLiteral(-95))<=0)
95 -1681 0
56 -1681 0
56 95 -1682 0
c (0<=( - aux242 + SATLiteral(-56) + SATLiteral(-95)))
-95 1682 0
-56 1682 0
-56 -95 1681 0
c (( - aux243 + SATLiteral(-190) + SATLiteral(-230))<=0)
230 -1684 0
190 -1684 0
190 230 -1685 0
c (0<=( - aux243 + SATLiteral(-190) + SATLiteral(-230)))
-230 1685 0
-190 1685 0
-190 -230 1684 0
c (( - aux246 + SATLiteral(-163) + SATLiteral(-69))<=0)
69 -1693 0
163 -1693 0
163 69 -1694 0
c (0<=( - aux246 + SATLiteral(-163) + SATLiteral(-69)))
-69 1694 0
-163 1694 0
-163 -69 1693 0
c (( - aux249 + SATLiteral(-163) + SATLiteral(-69))<=0)
69 -1702 0
163 -1702 0
163 69 -1703 0
c (0<=( - aux249 + SATLiteral(-163) + SATLiteral(-69)))
-69 1703 0
-163 1703 0
-163 -69 1702 0
c ((SATLiteral(152) - aux29 + SATLiteral(43))<=0)
-43 -538 0
-152 -538 0
-152 -43 -539 0
c (0<=(SATLiteral(152) - aux29 + SATLiteral(43)))
43 539 0
152 539 0
152 43 538 0
c ((SATLiteral(165) - aux30 + SATLiteral(30))<=0)
-30 -541 0
-165 -541 0
-165 -30 -542 0
c (0<=(SATLiteral(165) - aux30 + SATLiteral(30)))
30 542 0
165 542 0
165 30 541 0
c ((SATLiteral(58) + SATLiteral(111) - aux31)<=0)
-111 -544 0
-58 -544 0
-58 -111 -545 0
c (0<=(SATLiteral(58) + SATLiteral(111) - aux31))
111 545 0
58 545 0
58 111 544 0
c (( - aux32 + SATLiteral(4) + SATLiteral(17))<=0)
-17 -547 0
-4 -547 0
-4 -17 -548 0
c (0<=( - aux32 + SATLiteral(4) + SATLiteral(17)))
17 548 0
4 548 0
4 17 547 0
c ((SATLiteral(125) - aux33 + SATLiteral(232))<=0)
-232 -550 0
-125 -550 0
-125 -232 -551 0
c (0<=(SATLiteral(125) - aux33 + SATLiteral(232)))
232 551 0
125 551 0
125 232 550 0
c ((SATLiteral(71) - aux34 + SATLiteral(218))<=0)
-218 -553 0
-71 -553 0
-71 -218 -554 0
c (0<=(SATLiteral(71) - aux34 + SATLiteral(218)))
218 554 0
71 554 0
71 218 553 0
c ((SATLiteral(138) - aux35 + SATLiteral(205))<=0)
-205 -556 0
-138 -556 0
-138 -205 -557 0
c (0<=(SATLiteral(138) - aux35 + SATLiteral(205)))
205 557 0
138 557 0
138 205 556 0
c ((SATLiteral(178) - aux36 + SATLiteral(192))<=0)
-192 -559 0
-178 -559 0
-178 -192 -560 0
c (0<=(SATLiteral(178) - aux36 + SATLiteral(192)))
192 560 0
178 560 0
178 192 559 0
c ((SATLiteral(84) + SATLiteral(97) - aux37)<=0)
-97 -562 0
-84 -562 0
-84 -97 -563 0
c (0<=(SATLiteral(84) + SATLiteral(97) - aux37))
97 563 0
84 563 0
84 97 562 0
c ((aux30 + aux37 - aux38)<=0)
562 -565 0
563 -566 0
541 -565 0
541 562 -566 0
541 563 -568 0
542 -566 0
542 562 -568 0
542 563 -570 0
c (0<=(aux30 + aux37 - aux38))
-563 570 0
-562 568 0
-542 570 0
-542 -563 568 0
-542 -562 566 0
-541 568 0
-541 -563 566 0
-541 -562 565 0
c ((aux29 + aux33 - aux39)<=0)
550 -572 0
551 -573 0
538 -572 0
538 550 -573 0
538 551 -575 0
539 -573 0
539 550 -575 0
539 551 -577 0
c (0<=(aux29 + aux33 - aux39))
-551 577 0
-550 575 0
-539 577 0
-539 -551 575 0
-539 -550 573 0
-538 575 0
-538 -551 573 0
-538 -550 572 0
c ((aux31 + aux32 - aux40)<=0)
547 -579 0
548 -580 0
544 -579 0
544 547 -580 0
544 548 -582 0
545 -580 0
545 547 -582 0
545 548 -584 0
c (0<=(aux31 + aux32 - aux40))
-548 584 0
-547 582 0
-545 584 0
-545 -548 582 0
-545 -547 580 0
-544 582 0
-544 -548 580 0
-544 -547 579 0
c ((aux34 + aux35 - aux41)<=0)
556 -586 0
557 -587 0
553 -586 0
553 556 -587 0
553 557 -589 0
554 -587 0
554 556 -589 0
554 557 -591 0
c (0<=(aux34 + aux35 - aux41))
-557 591 0
-556 589 0
-554 591 0
-554 -557 589 0
-554 -556 587 0
-553 589 0
-553 -557 587 0
-553 -556 586 0
c ((aux36 + aux41 - aux42)<=0)
586 -593 0
587 -594 0
589 -596 0
591 -598 0
559 -593 0
559 586 -594 0
559 587 -596 0
559 589 -598 0
559 591 -600 0
560 -594 0
560 586 -596 0
560 587 -598 0
560 589 -600 0
560 591 -602 0
c (0<=(aux36 + aux41 - aux42))
-591 602 0
-589 600 0
-587 598 0
-586 596 0
-560 602 0
-560 -591 600 0
-560 -589 598 0
-560 -587 596 0
-560 -586 594 0
-559 600 0
-559 -591 598 0
-559 -589 596 0
-559 -587 594 0
-559 -586 593 0
c ((aux38 + aux40 - aux43)<=0)
579 -604 0
580 -605 0
582 -607 0
584 -609 0
565 -604 0
565 579 -605 0
565 580 -607 0
565 582 -609 0
565 584 -611 0
566 -605 0
566 579 -607 0
566 580 -609 0
566 582 -611 0
566 584 -613 0
568 -607 0
568 579 -609 0
568 580 -611 0
568 582 -613 0
568 584 -615 0
570 -609 0
570 579 -611 0
570 580 -613 0
570 582 -615 0
570 584 -617 0
c (0<=(aux38 + aux40 - aux43))
-584 617 0
-582 615 0
-580 613 0
-579 611 0
-570 617 0
-570 -584 615 0
-570 -582 613 0
-570 -580 611 0
-570 -579 609 0
-568 615 0
-568 -584 613 0
-568 -582 611 0
-568 -580 609 0
-568 -579 607 0
-566 613 0
-566 -584 611 0
-566 -582 609 0
-566 -580 607 0
-566 -579 605 0
-565 611 0
-565 -584 609 0
-565 -582 607 0
-565 -580 605 0
-565 -579 604 0
c ((SATLiteral(154) - aux44 + SATLiteral(45))<=0)
-45 -619 0
-154 -619 0
-154 -45 -620 0
c (0<=(SATLiteral(154) - aux44 + SATLiteral(45)))
45 620 0
154 620 0
154 45 619 0
c ((SATLiteral(167) - aux45 + SATLiteral(32))<=0)
-32 -622 0
-167 -622 0
-167 -32 -623 0
c (0<=(SATLiteral(167) - aux45 + SATLiteral(32)))
32 623 0
167 623 0
167 32 622 0
c ((SATLiteral(60) + SATLiteral(113) - aux46)<=0)
-113 -625 0
-60 -625 0
-60 -113 -626 0
c (0<=(SATLiteral(60) + SATLiteral(113) - aux46))
113 626 0
60 626 0
60 113 625 0
c (( - aux47 + SATLiteral(6) + SATLiteral(19))<=0)
-19 -628 0
-6 -628 0
-6 -19 -629 0
c (0<=( - aux47 + SATLiteral(6) + SATLiteral(19)))
19 629 0
6 629 0
6 19 628 0
c ((SATLiteral(127) - aux48 + SATLiteral(234))<=0)
-234 -631 0
-127 -631 0
-127 -234 -632 0
c (0<=(SATLiteral(127) - aux48 + SATLiteral(234)))
234 632 0
127 632 0
127 234 631 0
c ((SATLiteral(73) - aux49 + SATLiteral(220))<=0)
-220 -634 0
-73 -634 0
-73 -220 -635 0
c (0<=(SATLiteral(73) - aux49 + SATLiteral(220)))
220 635 0
73 635 0
73 220 634 0
c ((SATLiteral(140) - aux50 + SATLiteral(207))<=0)
-207 -637 0
-140 -637 0
-140 -207 -638 0
c (0<=(SATLiteral(140) - aux50 + SATLiteral(207)))
207 638 0
140 638 0
140 207 637 0
c ((SATLiteral(180) - aux51 + SATLiteral(194))<=0)
-194 -640 0
-180 -640 0
-180 -194 -641 0
c (0<=(SATLiteral(180) - aux51 + SATLiteral(194)))
194 641 0
180 641 0
180 194 640 0
c ((SATLiteral(86) + SATLiteral(99) - aux52)<=0)
-99 -643 0
-86 -643 0
-86 -99 -644 0
c (0<=(SATLiteral(86) + SATLiteral(99) - aux52))
99 644 0
86 644 0
86 99 643 0
c ((aux45 + aux52 - aux53)<=0)
643 -646 0
644 -647 0
622 -646 0
622 643 -647 0
622 644 -649 0
623 -647 0
623 643 -649 0
623 644 -651 0
c (0<=(aux45 + aux52 - aux53))
-644 651 0
-643 649 0
-623 651 0
-623 -644 649 0
-623 -643 647 0
-622 649 0
-622 -644 647 0
-622 -643 646 0
c ((aux44 + aux48 - aux54)<=0)
631 -653 0
632 -654 0
619 -653 0
619 631 -654 0
619 632 -656 0
620 -654 0
620 631 -656 0
620 632 -658 0
c (0<=(aux44 + aux48 - aux54))
-632 658 0
-631 656 0
-620 658 0
-620 -632 656 0
-620 -631 654 0
-619 656 0
-619 -632 654 0
-619 -631 653 0
c ((aux46 + aux47 - aux55)<=0)
628 -660 0
629 -661 0
625 -660 0
625 628 -661 0
625 629 -663 0
626 -661 0
626 628 -663 0
626 629 -665 0
c (0<=(aux46 + aux47 - aux55))
-629 665 0
-628 663 0
-626 665 0
-626 -629 663 0
-626 -628 661 0
-625 663 0
-625 -629 661 0
-625 -628 660 0
c ((aux49 + aux50 - aux56)<=0)
637 -667 0
638 -668 0
634 -667 0
634 637 -668 0
634 638 -670 0
635 -668 0
635 637 -670 0
635 638 -672 0
c (0<=(aux49 + aux50 - aux56))
-638 672 0
-637 670 0
-635 672 0
-635 -638 670 0
-635 -637 668 0
-634 670 0
-634 -638 668 0
-634 -637 667 0
c ((aux51 + aux56 - aux57)<=0)
667 -674 0
668 -675 0
670 -677 0
672 -679 0
640 -674 0
640 667 -675 0
640 668 -677 0
640 670 -679 0
640 672 -681 0
641 -675 0
641 667 -677 0
641 668 -679 0
641 670 -681 0
641 672 -683 0
c (0<=(aux51 + aux56 - aux57))
-672 683 0
-670 681 0
-668 679 0
-667 677 0
-641 683 0
-641 -672 681 0
-641 -670 679 0
-641 -668 677 0
-641 -667 675 0
-640 681 0
-640 -672 679 0
-640 -670 677 0
-640 -668 675 0
-640 -667 674 0
c ((aux53 + aux55 - aux58)<=0)
660 -685 0
661 -686 0
663 -688 0
665 -690 0
646 -685 0
646 660 -686 0
646 661 -688 0
646 663 -690 0
646 665 -692 0
647 -686 0
647 660 -688 0
647 661 -690 0
647 663 -692 0
647 665 -694 0
649 -688 0
649 660 -690 0
649 661 -692 0
649 663 -694 0
649 665 -696 0
651 -690 0
651 660 -692 0
651 661 -694 0
651 663 -696 0
651 665 -698 0
c (0<=(aux53 + aux55 - aux58))
-665 698 0
-663 696 0
-661 694 0
-660 692 0
-651 698 0
-651 -665 696 0
-651 -663 694 0
-651 -661 692 0
-651 -660 690 0
-649 696 0
-649 -665 694 0
-649 -663 692 0
-649 -661 690 0
-649 -660 688 0
-647 694 0
-647 -665 692 0
-647 -663 690 0
-647 -661 688 0
-647 -660 686 0
-646 692 0
-646 -665 690 0
-646 -663 688 0
-646 -661 686 0
-646 -660 685 0
c ((SATLiteral(156) - aux59 + SATLiteral(47))<=0)
-47 -700 0
-156 -700 0
-156 -47 -701 0
c (0<=(SATLiteral(156) - aux59 + SATLiteral(47)))
47 701 0
156 701 0
156 47 700 0
c ((SATLiteral(169) - aux60 + SATLiteral(34))<=0)
-34 -703 0
-169 -703 0
-169 -34 -704 0
c (0<=(SATLiteral(169) - aux60 + SATLiteral(34)))
34 704 0
169 704 0
169 34 703 0
c ((SATLiteral(62) + SATLiteral(115) - aux61)<=0)
-115 -706 0
-62 -706 0
-62 -115 -707 0
c (0<=(SATLiteral(62) + SATLiteral(115) - aux61))
115 707 0
62 707 0
62 115 706 0
c (( - aux62 + SATLiteral(8) + SATLiteral(21))<=0)
-21 -709 0
-8 -709 0
-8 -21 -710 0
c (0<=( - aux62 + SATLiteral(8) + SATLiteral(21)))
21 710 0
8 710 0
8 21 709 0
c ((SATLiteral(129) - aux63 + SATLiteral(236))<=0)
-236 -712 0
-129 -712 0
-129 -236 -713 0
c (0<=(SATLiteral(129) - aux63 + SATLiteral(236)))
236 713 0
129 713 0
129 236 712 0
c ((SATLiteral(75) - aux64 + SATLiteral(222))<=0)
-222 -715 0
-75 -715 0
-75 -222 -716 0
c (0<=(SATLiteral(75) - aux64 + SATLiteral(222)))
222 716 0
75 716 0
75 222 715 0
c ((SATLiteral(142) - aux65 + SATLiteral(209))<=0)
-209 -718 0
-142 -718 0
-142 -209 -719 0
c (0<=(SATLiteral(142) - aux65 + SATLiteral(209)))
209 719 0
142 719 0
142 209 718 0
c ((SATLiteral(182) - aux66 + SATLiteral(196))<=0)
-196 -721 0
-182 -721 0
-182 -196 -722 0
c (0<=(SATLiteral(182) - aux66 + SATLiteral(196)))
196 722 0
182 722 0
182 196 721 0
c ((SATLiteral(88) + SATLiteral(101) - aux67)<=0)
-101 -724 0
-88 -724 0
-88 -101 -725 0
c (0<=(SATLiteral(88) + SATLiteral(101) - aux67))
101 725 0
88 725 0
88 101 724 0
c ((aux60 + aux67 - aux68)<=0)
724 -727 0
725 -728 0
703 -727 0
703 724 -728 0
703 725 -730 0
704 -728 0
704 724 -730 0
704 725 -732 0
c (0<=(aux60 + aux67 - aux68))
-725 732 0
-724 730 0
-704 732 0
-704 -725 730 0
-704 -724 728 0
-703 730 0
-703 -725 728 0
-703 -724 727 0
c ((aux59 + aux63 - aux69)<=0)
712 -734 0
713 -735 0
700 -734 0
700 712 -735 0
700 713 -737 0
701 -735 0
701 712 -737 0
701 713 -739 0
c (0<=(aux59 + aux63 - aux69))
-713 739 0
-712 737 0
-701 739 0
-701 -713 737 0
-701 -712 735 0
-700 737 0
-700 -713 735 0
-700 -712 734 0
c ((aux61 + aux62 - aux70)<=0)
709 -741 0
710 -742 0
706 -741 0
706 709 -742 0
706 710 -744 0
707 -742 0
707 709 -744 0
707 710 -746 0
c (0<=(aux61 + aux62 - aux70))
-710 746 0
-709 744 0
-707 746 0
-707 -710 744 0
-707 -709 742 0
-706 744 0
-706 -710 742 0
-706 -709 741 0
c ((aux64 + aux65 - aux71)<=0)
718 -748 0
719 -749 0
715 -748 0
715 718 -749 0
715 719 -751 0
716 -749 0
716 718 -751 0
716 719 -753 0
c (0<=(aux64 + aux65 - aux71))
-719 753 0
-718 751 0
-716 753 0
-716 -719 751 0
-716 -718 749 0
-715 751 0
-715 -719 749 0
-715 -718 748 0
c ((aux66 + aux71 - aux72)<=0)
748 -755 0
749 -756 0
751 -758 0
753 -760 0
721 -755 0
721 748 -756 0
721 749 -758 0
721 751 -760 0
721 753 -762 0
722 -756 0
722 748 -758 0
722 749 -760 0
722 751 -762 0
722 753 -764 0
c (0<=(aux66 + aux71 - aux72))
-753 764 0
-751 762 0
-749 760 0
-748 758 0
-722 764 0
-722 -753 762 0
-722 -751 760 0
-722 -749 758 0
-722 -748 756 0
-721 762 0
-721 -753 760 0
-721 -751 758 0
-721 -749 756 0
-721 -748 755 0
c ((aux68 + aux70 - aux73)<=0)
741 -766 0
742 -767 0
744 -769 0
746 -771 0
727 -766 0
727 741 -767 0
727 742 -769 0
727 744 -771 0
727 746 -773 0
728 -767 0
728 741 -769 0
728 742 -771 0
728 744 -773 0
728 746 -775 0
730 -769 0
730 741 -771 0
730 742 -773 0
730 744 -775 0
730 746 -777 0
732 -771 0
732 741 -773 0
732 742 -775 0
732 744 -777 0
732 746 -779 0
c (0<=(aux68 + aux70 - aux73))
-746 779 0
-744 777 0
-742 775 0
-741 773 0
-732 779 0
-732 -746 777 0
-732 -744 775 0
-732 -742 773 0
-732 -741 771 0
-730 777 0
-730 -746 775 0
-730 -744 773 0
-730 -742 771 0
-730 -741 769 0
-728 775 0
-728 -746 773 0
-728 -744 771 0
-728 -742 769 0
-728 -741 767 0
-727 773 0
-727 -746 771 0
-727 -744 769 0
-727 -742 767 0
-727 -741 766 0
c ((SATLiteral(158) - aux74 + SATLiteral(49))<=0)
-49 -781 0
-158 -781 0
-158 -49 -782 0
c (0<=(SATLiteral(158) - aux74 + SATLiteral(49)))
49 782 0
158 782 0
158 49 781 0
c ((SATLiteral(171) - aux75 + SATLiteral(36))<=0)
-36 -784 0
-171 -784 0
-171 -36 -785 0
c (0<=(SATLiteral(171) - aux75 + SATLiteral(36)))
36 785 0
171 785 0
171 36 784 0
c ((SATLiteral(64) + SATLiteral(117) - aux76)<=0)
-117 -787 0
-64 -787 0
-64 -117 -788 0
c (0<=(SATLiteral(64) + SATLiteral(117) - aux76))
117 788 0
64 788 0
64 117 787 0
c (( - aux77 + SATLiteral(10) + SATLiteral(23))<=0)
-23 -790 0
-10 -790 0
-10 -23 -791 0
c (0<=( - aux77 + SATLiteral(10) + SATLiteral(23)))
23 791 0
10 791 0
10 23 790 0
c ((SATLiteral(131) - aux78 + SATLiteral(238))<=0)
-238 -793 0
-131 -793 0
-131 -238 -794 0
c (0<=(SATLiteral(131) - aux78 + SATLiteral(238)))
238 794 0
131 794 0
131 238 793 0
c ((SATLiteral(77) - aux79 + SATLiteral(224))<=0)
-224 -796 0
-77 -796 0
-77 -224 -797 0
c (0<=(SATLiteral(77) - aux79 + SATLiteral(224)))
224 797 0
77 797 0
77 224 796 0
c ((SATLiteral(144) - aux80 + SATLiteral(211))<=0)
-211 -799 0
-144 -799 0
-144 -211 -800 0
c (0<=(SATLiteral(144) - aux80 + SATLiteral(211)))
211 800 0
144 800 0
144 211 799 0
c ((SATLiteral(184) - aux81 + SATLiteral(198))<=0)
-198 -802 0
-184 -802 0
-184 -198 -803 0
c (0<=(SATLiteral(184) - aux81 + SATLiteral(198)))
198 803 0
184 803 0
184 198 802 0
c ((SATLiteral(90) + SATLiteral(103) - aux82)<=0)
-103 -805 0
-90 -805 0
-90 -103 -806 0
c (0<=(SATLiteral(90) + SATLiteral(103) - aux82))
103 806 0
90 806 0
90 103 805 0
c ((aux75 + aux82 - aux83)<=0)
805 -808 0
806 -809 0
784 -808 0
784 805 -809 0
784 806 -811 0
785 -809 0
785 805 -811 0
785 806 -813 0
c (0<=(aux75 + aux82 - aux83))
-806 813 0
-805 811 0
-785 813 0
-785 -806 811 0
-785 -805 809 0
-784 811 0
-784 -806 809 0
-784 -805 808 0
c ((aux74 + aux78 - aux84)<=0)
793 -815 0
794 -816 0
781 -815 0
781 793 -816 0
781 794 -818 0
782 -816 0
782 793 -818 0
782 794 -820 0
c (0<=(aux74 + aux78 - aux84))
-794 820 0
-793 818 0
-782 820 0
-782 -794 818 0
-782 -793 816 0
-781 818 0
-781 -794 816 0
-781 -793 815 0
c ((aux76 + aux77 - aux85)<=0)
790 -822 0
791 -823 0
787 -822 0
787 790 -823 0
787 791 -825 0
788 -823 0
788 790 -825 0
788 791 -827 0
c (0<=(aux76 + aux77 - aux85))
-791 827 0
-790 825 0
-788 827 0
-788 -791 825 0
-788 -790 823 0
-787 825 0
-787 -791 823 0
-787 -790 822 0
c ((aux79 + aux80 - aux86)<=0)
799 -829 0
800 -830 0
796 -829 0
796 799 -830 0
796 800 -832 0
797 -830 0
797 799 -832 0
797 800 -834 0
c (0<=(aux79 + aux80 - aux86))
-800 834 0
-799 832 0
-797 834 0
-797 -800 832 0
-797 -799 830 0
-796 832 0
-796 -800 830 0
-796 -799 829 0
c ((aux81 + aux86 - aux87)<=0)
829 -836 0
830 -837 0
832 -839 0
834 -841 0
802 -836 0
802 829 -837 0
802 830 -839 0
802 832 -841 0
802 834 -843 0
803 -837 0
803 829 -839 0
803 830 -841 0
803 832 -843 0
803 834 -845 0
c (0<=(aux81 + aux86 - aux87))
-834 845 0
-832 843 0
-830 841 0
-829 839 0
-803 845 0
-803 -834 843 0
-803 -832 841 0
-803 -830 839 0
-803 -829 837 0
-802 843 0
-802 -834 841 0
-802 -832 839 0
-802 -830 837 0
-802 -829 836 0
c ((aux83 + aux85 - aux88)<=0)
822 -847 0
823 -848 0
825 -850 0
827 -852 0
808 -847 0
808 822 -848 0
808 823 -850 0
808 825 -852 0
808 827 -854 0
809 -848 0
809 822 -850 0
809 823 -852 0
809 825 -854 0
809 827 -856 0
811 -850 0
811 822 -852 0
811 823 -854 0
811 825 -856 0
811 827 -858 0
813 -852 0
813 822 -854 0
813 823 -856 0
813 825 -858 0
813 827 -860 0
c (0<=(aux83 + aux85 - aux88))
-827 860 0
-825 858 0
-823 856 0
-822 854 0
-813 860 0
-813 -827 858 0
-813 -825 856 0
-813 -823 854 0
-813 -822 852 0
-811 858 0
-811 -827 856 0
-811 -825 854 0
-811 -823 852 0
-811 -822 850 0
-809 856 0
-809 -827 854 0
-809 -825 852 0
-809 -823 850 0
-809 -822 848 0
-808 854 0
-808 -827 852 0
-808 -825 850 0
-808 -823 848 0
-808 -822 847 0
c ((SATLiteral(160) - aux89 + SATLiteral(51))<=0)
-51 -862 0
-160 -862 0
-160 -51 -863 0
c (0<=(SATLiteral(160) - aux89 + SATLiteral(51)))
51 863 0
160 863 0
160 51 862 0
c ((SATLiteral(173) - aux90 + SATLiteral(38))<=0)
-38 -865 0
-173 -865 0
-173 -38 -866 0
c (0<=(SATLiteral(173) - aux90 + SATLiteral(38)))
38 866 0
173 866 0
173 38 865 0
c ((SATLiteral(66) + SATLiteral(119) - aux91)<=0)
-119 -868 0
-66 -868 0
-66 -119 -869 0
c (0<=(SATLiteral(66) + SATLiteral(119) - aux91))
119 869 0
66 869 0
66 119 868 0
c (( - aux92 + SATLiteral(12) + SATLiteral(25))<=0)
-25 -871 0
-12 -871 0
-12 -25 -872 0
c (0<=( - aux92 + SATLiteral(12) + SATLiteral(25)))
25 872 0
12 872 0
12 25 871 0
c ((SATLiteral(133) - aux93 + SATLiteral(240))<=0)
-240 -874 0
-133 -874 0
-133 -240 -875 0
c (0<=(SATLiteral(133) - aux93 + SATLiteral(240)))
240 875 0
133 875 0
133 240 874 0
c ((SATLiteral(79) - aux94 + SATLiteral(226))<=0)
-226 -877 0
-79 -877 0
-79 -226 -878 0
c (0<=(SATLiteral(79) - aux94 + SATLiteral(226)))
226 878 0
79 878 0
79 226 877 0
c ((SATLiteral(146) - aux95 + SATLiteral(213))<=0)
-213 -880 0
-146 -880 0
-146 -213 -881 0
c (0<=(SATLiteral(146) - aux95 + SATLiteral(213)))
213 881 0
146 881 0
146 213 880 0
c ((SATLiteral(186) - aux96 + SATLiteral(200))<=0)
-200 -883 0
-186 -883 0
-186 -200 -884 0
c (0<=(SATLiteral(186) - aux96 + SATLiteral(200)))
200 884 0
186 884 0
186 200 883 0
c ((SATLiteral(92) + SATLiteral(105) - aux97)<=0)
-105 -886 0
-92 -886 0
-92 -105 -887 0
c (0<=(SATLiteral(92) + SATLiteral(105) - aux97))
105 887 0
92 887 0
92 105 886 0
c ((aux90 + aux97 - aux98)<=0)
886 -889 0
887 -890 0
865 -889 0
865 886 -890 0
865 887 -892 0
866 -890 0
866 886 -892 0
866 887 -894 0
c (0<=(aux90 + aux97 - aux98))
-887 894 0
-886 892 0
-866 894 0
-866 -887 892 0
-866 -886 890 0
-865 892 0
-865 -887 890 0
-865 -886 889 0
c ((aux89 + aux93 - aux99)<=0)
874 -896 0
875 -897 0
862 -896 0
862 874 -897 0
862 875 -899 0
863 -897 0
863 874 -899 0
863 875 -901 0
c (0<=(aux89 + aux93 - aux99))
-875 901 0
-874 899 0
-863 901 0
-863 -875 899 0
-863 -874 897 0
-862 899 0
-862 -875 897 0
-862 -874 896 0
c (( - aux100 + aux91 + aux92)<=0)
871 -903 0
872 -904 0
868 -903 0
868 871 -904 0
868 872 -906 0
869 -904 0
869 871 -906 0
869 872 -908 0
c (0<=( - aux100 + aux91 + aux92))
-872 908 0
-871 906 0
-869 908 0
-869 -872 906 0
-869 -871 904 0
-868 906 0
-868 -872 904 0
-868 -871 903 0
c (( - aux101 + aux94 + aux95)<=0)
880 -910 0
881 -911 0
877 -910 0
877 880 -911 0
877 881 -913 0
878 -911 0
878 880 -913 0
878 881 -915 0
c (0<=( - aux101 + aux94 + aux95))
-881 915 0
-880 913 0
-878 915 0
-878 -881 913 0
-878 -880 911 0
-877 913 0
-877 -881 911 0
-877 -880 910 0
c ((aux101 - aux102 + aux96)<=0)
910 -917 0
911 -918 0
913 -920 0
915 -922 0
883 -917 0
883 910 -918 0
883 911 -920 0
883 913 -922 0
883 915 -924 0
884 -918 0
884 910 -920 0
884 911 -922 0
884 913 -924 0
884 915 -926 0
c (0<=(aux101 - aux102 + aux96))
-915 926 0
-913 924 0
-911 922 0
-910 920 0
-884 926 0
-884 -915 924 0
-884 -913 922 0
-884 -911 920 0
-884 -910 918 0
-883 924 0
-883 -915 922 0
-883 -913 920 0
-883 -911 918 0
-883 -910 917 0
c ((aux100 - aux103 + aux98)<=0)
889 -928 0
890 -929 0
892 -931 0
894 -933 0
903 -928 0
903 889 -929 0
903 890 -931 0
903 892 -933 0
903 894 -935 0
904 -929 0
904 889 -931 0
904 890 -933 0
904 892 -935 0
904 894 -937 0
906 -931 0
906 889 -933 0
906 890 -935 0
906 892 -937 0
906 894 -939 0
908 -933 0
908 889 -935 0
908 890 -937 0
908 892 -939 0
908 894 -941 0
c (0<=(aux100 - aux103 + aux98))
-894 941 0
-892 939 0
-890 937 0
-889 935 0
-908 941 0
-908 -894 939 0
-908 -892 937 0
-908 -890 935 0
-908 -889 933 0
-906 939 0
-906 -894 937 0
-906 -892 935 0
-906 -890 933 0
-906 -889 931 0
-904 937 0
-904 -894 935 0
-904 -892 933 0
-904 -890 931 0
-904 -889 929 0
-903 935 0
-903 -894 933 0
-903 -892 931 0
-903 -890 929 0
-903 -889 928 0
c ((SATLiteral(162) - aux104 + SATLiteral(53))<=0)
-53 -943 0
-162 -943 0
-162 -53 -944 0
c (0<=(SATLiteral(162) - aux104 + SATLiteral(53)))
53 944 0
162 944 0
162 53 943 0
c ((SATLiteral(175) - aux105 + SATLiteral(40))<=0)
-40 -946 0
-175 -946 0
-175 -40 -947 0
c (0<=(SATLiteral(175) - aux105 + SATLiteral(40)))
40 947 0
175 947 0
175 40 946 0
c (( - aux106 + SATLiteral(68) + SATLiteral(121))<=0)
-121 -949 0
-68 -949 0
-68 -121 -950 0
c (0<=( - aux106 + SATLiteral(68) + SATLiteral(121)))
121 950 0
68 950 0
68 121 949 0
c (( - aux107 + SATLiteral(14) + SATLiteral(27))<=0)
-27 -952 0
-14 -952 0
-14 -27 -953 0
c (0<=( - aux107 + SATLiteral(14) + SATLiteral(27)))
27 953 0
14 953 0
14 27 952 0
c (( - aux108 + SATLiteral(135) + SATLiteral(242))<=0)
-242 -955 0
-135 -955 0
-135 -242 -956 0
c (0<=( - aux108 + SATLiteral(135) + SATLiteral(242)))
242 956 0
135 956 0
135 242 955 0
c (( - aux109 + SATLiteral(81) + SATLiteral(228))<=0)
-228 -958 0
-81 -958 0
-81 -228 -959 0
c (0<=( - aux109 + SATLiteral(81) + SATLiteral(228)))
228 959 0
81 959 0
81 228 958 0
c (( - aux110 + SATLiteral(148) + SATLiteral(215))<=0)
-215 -961 0
-148 -961 0
-148 -215 -962 0
c (0<=( - aux110 + SATLiteral(148) + SATLiteral(215)))
215 962 0
148 962 0
148 215 961 0
c ((SATLiteral(188) - aux111 + SATLiteral(202))<=0)
-202 -964 0
-188 -964 0
-188 -202 -965 0
c (0<=(SATLiteral(188) - aux111 + SATLiteral(202)))
202 965 0
188 965 0
188 202 964 0
c (( - aux112 + SATLiteral(94) + SATLiteral(107))<=0)
-107 -967 0
-94 -967 0
-94 -107 -968 0
c (0<=( - aux112 + SATLiteral(94) + SATLiteral(107)))
107 968 0
94 968 0
94 107 967 0
c ((aux105 + aux112 - aux113)<=0)
967 -970 0
968 -971 0
946 -970 0
946 967 -971 0
946 968 -973 0
947 -971 0
947 967 -973 0
947 968 -975 0
c (0<=(aux105 + aux112 - aux113))
-968 975 0
-967 973 0
-947 975 0
-947 -968 973 0
-947 -967 971 0
-946 973 0
-946 -968 971 0
-946 -967 970 0
c ((aux104 + aux108 - aux114)<=0)
955 -977 0
956 -978 0
943 -977 0
943 955 -978 0
943 956 -980 0
944 -978 0
944 955 -980 0
944 956 -982 0
c (0<=(aux104 + aux108 - aux114))
-956 982 0
-955 980 0
-944 982 0
-944 -956 980 0
-944 -955 978 0
-943 980 0
-943 -956 978 0
-943 -955 977 0
c ((aux106 + aux107 - aux115)<=0)
952 -984 0
953 -985 0
949 -984 0
949 952 -985 0
949 953 -987 0
950 -985 0
950 952 -987 0
950 953 -989 0
c (0<=(aux106 + aux107 - aux115))
-953 989 0
-952 987 0
-950 989 0
-950 -953 987 0
-950 -952 985 0
-949 987 0
-949 -953 985 0
-949 -952 984 0
c ((aux109 + aux110 - aux116)<=0)
961 -991 0
962 -992 0
958 -991 0
958 961 -992 0
958 962 -994 0
959 -992 0
959 961 -994 0
959 962 -996 0
c (0<=(aux109 + aux110 - aux116))
-962 996 0
-961 994 0
-959 996 0
-959 -962 994 0
-959 -961 992 0
-958 994 0
-958 -962 992 0
-958 -961 991 0
c ((aux111 + aux116 - aux117)<=0)
991 -998 0
992 -999 0
994 -1001 0
996 -1003 0
964 -998 0
964 991 -999 0
964 992 -1001 0
964 994 -1003 0
964 996 -1005 0
965 -999 0
965 991 -1001 0
965 992 -1003 0
965 994 -1005 0
965 996 -1007 0
c (0<=(aux111 + aux116 - aux117))
-996 1007 0
-994 1005 0
-992 1003 0
-991 1001 0
-965 1007 0
-965 -996 1005 0
-965 -994 1003 0
-965 -992 1001 0
-965 -991 999 0
-964 1005 0
-964 -996 1003 0
-964 -994 1001 0
-964 -992 999 0
-964 -991 998 0
c ((aux113 + aux115 - aux118)<=0)
984 -1009 0
985 -1010 0
987 -1012 0
989 -1014 0
970 -1009 0
970 984 -1010 0
970 985 -1012 0
970 987 -1014 0
970 989 -1016 0
971 -1010 0
971 984 -1012 0
971 985 -1014 0
971 987 -1016 0
971 989 -1018 0
973 -1012 0
973 984 -1014 0
973 985 -1016 0
973 987 -1018 0
973 989 -1020 0
975 -1014 0
975 984 -1016 0
975 985 -1018 0
975 987 -1020 0
975 989 -1022 0
c (0<=(aux113 + aux115 - aux118))
-989 1022 0
-987 1020 0
-985 1018 0
-984 1016 0
-975 1022 0
-975 -989 1020 0
-975 -987 1018 0
-975 -985 1016 0
-975 -984 1014 0
-973 1020 0
-973 -989 1018 0
-973 -987 1016 0
-973 -985 1014 0
-973 -984 1012 0
-971 1018 0
-971 -989 1016 0
-971 -987 1014 0
-971 -985 1012 0
-971 -984 1010 0
-970 1016 0
-970 -989 1014 0
-970 -987 1012 0
-970 -985 1010 0
-970 -984 1009 0
c ((SATLiteral(-161) - aux119 + SATLiteral(-52))<=0)
52 -1024 0
161 -1024 0
161 52 -1025 0
c (0<=(SATLiteral(-161) - aux119 + SATLiteral(-52)))
-52 1025 0
-161 1025 0
-161 -52 1024 0
c ((SATLiteral(-174) - aux120 + SATLiteral(-39))<=0)
39 -1027 0
174 -1027 0
174 39 -1028 0
c (0<=(SATLiteral(-174) - aux120 + SATLiteral(-39)))
-39 1028 0
-174 1028 0
-174 -39 1027 0
c (( - aux121 + SATLiteral(-67) + SATLiteral(-120))<=0)
120 -1030 0
67 -1030 0
67 120 -1031 0
c (0<=( - aux121 + SATLiteral(-67) + SATLiteral(-120)))
-120 1031 0
-67 1031 0
-67 -120 1030 0
c (( - aux122 + SATLiteral(-13) + SATLiteral(-26))<=0)
26 -1033 0
13 -1033 0
13 26 -1034 0
c (0<=( - aux122 + SATLiteral(-13) + SATLiteral(-26)))
-26 1034 0
-13 1034 0
-13 -26 1033 0
c (( - aux123 + SATLiteral(-134) + SATLiteral(-241))<=0)
241 -1036 0
134 -1036 0
134 241 -1037 0
c (0<=( - aux123 + SATLiteral(-134) + SATLiteral(-241)))
-241 1037 0
-134 1037 0
-134 -241 1036 0
c (( - aux124 + SATLiteral(-80) + SATLiteral(-227))<=0)
227 -1039 0
80 -1039 0
80 227 -1040 0
c (0<=( - aux124 + SATLiteral(-80) + SATLiteral(-227)))
-227 1040 0
-80 1040 0
-80 -227 1039 0
c (( - aux125 + SATLiteral(-147) + SATLiteral(-214))<=0)
214 -1042 0
147 -1042 0
147 214 -1043 0
c (0<=( - aux125 + SATLiteral(-147) + SATLiteral(-214)))
-214 1043 0
-147 1043 0
-147 -214 1042 0
c ((SATLiteral(-187) - aux126 + SATLiteral(-201))<=0)
201 -1045 0
187 -1045 0
187 201 -1046 0
c (0<=(SATLiteral(-187) - aux126 + SATLiteral(-201)))
-201 1046 0
-187 1046 0
-187 -201 1045 0
c (( - aux127 + SATLiteral(-93) + SATLiteral(-106))<=0)
106 -1048 0
93 -1048 0
93 106 -1049 0
c (0<=( - aux127 + SATLiteral(-93) + SATLiteral(-106)))
-106 1049 0
-93 1049 0
-93 -106 1048 0
c ((aux120 + aux127 - aux128)<=0)
1048 -1051 0
1049 -1052 0
1027 -1051 0
1027 1048 -1052 0
1027 1049 -1054 0
1028 -1052 0
1028 1048 -1054 0
1028 1049 -1056 0
c (0<=(aux120 + aux127 - aux128))
-1049 1056 0
-1048 1054 0
-1028 1056 0
-1028 -1049 1054 0
-1028 -1048 1052 0
-1027 1054 0
-1027 -1049 1052 0
-1027 -1048 1051 0
c ((aux119 + aux123 - aux129)<=0)
1036 -1058 0
1037 -1059 0
1024 -1058 0
1024 1036 -1059 0
1024 1037 -1061 0
1025 -1059 0
1025 1036 -1061 0
1025 1037 -1063 0
c (0<=(aux119 + aux123 - aux129))
-1037 1063 0
-1036 1061 0
-1025 1063 0
-1025 -1037 1061 0
-1025 -1036 1059 0
-1024 1061 0
-1024 -1037 1059 0
-1024 -1036 1058 0
c ((aux121 + aux122 - aux130)<=0)
1033 -1065 0
1034 -1066 0
1030 -1065 0
1030 1033 -1066 0
1030 1034 -1068 0
1031 -1066 0
1031 1033 -1068 0
1031 1034 -1070 0
c (0<=(aux121 + aux122 - aux130))
-1034 1070 0
-1033 1068 0
-1031 1070 0
-1031 -1034 1068 0
-1031 -1033 1066 0
-1030 1068 0
-1030 -1034 1066 0
-1030 -1033 1065 0
c ((aux124 + aux125 - aux131)<=0)
1042 -1072 0
1043 -1073 0
1039 -1072 0
1039 1042 -1073 0
1039 1043 -1075 0
1040 -1073 0
1040 1042 -1075 0
1040 1043 -1077 0
c (0<=(aux124 + aux125 - aux131))
-1043 1077 0
-1042 1075 0
-1040 1077 0
-1040 -1043 1075 0
-1040 -1042 1073 0
-1039 1075 0
-1039 -1043 1073 0
-1039 -1042 1072 0
c ((aux126 + aux131 - aux132)<=0)
1072 -1079 0
1073 -1080 0
1075 -1082 0
1077 -1084 0
1045 -1079 0
1045 1072 -1080 0
1045 1073 -1082 0
1045 1075 -1084 0
1045 1077 -1086 0
1046 -1080 0
1046 1072 -1082 0
1046 1073 -1084 0
1046 1075 -1086 0
1046 1077 -1088 0
c (0<=(aux126 + aux131 - aux132))
-1077 1088 0
-1075 1086 0
-1073 1084 0
-1072 1082 0
-1046 1088 0
-1046 -1077 1086 0
-1046 -1075 1084 0
-1046 -1073 1082 0
-1046 -1072 1080 0
-1045 1086 0
-1045 -1077 1084 0
-1045 -1075 1082 0
-1045 -1073 1080 0
-1045 -1072 1079 0
c ((aux128 + aux130 - aux133)<=0)
1065 -1090 0
1066 -1091 0
1068 -1093 0
1070 -1095 0
1051 -1090 0
1051 1065 -1091 0
1051 1066 -1093 0
1051 1068 -1095 0
1051 1070 -1097 0
1052 -1091 0
1052 1065 -1093 0
1052 1066 -1095 0
1052 1068 -1097 0
1052 1070 -1099 0
1054 -1093 0
1054 1065 -1095 0
1054 1066 -1097 0
1054 1068 -1099 0
1054 1070 -1101 0
1056 -1095 0
1056 1065 -1097 0
1056 1066 -1099 0
1056 1068 -1101 0
1056 1070 -1103 0
c (0<=(aux128 + aux130 - aux133))
-1070 1103 0
-1068 1101 0
-1066 1099 0
-1065 1097 0
-1056 1103 0
-1056 -1070 1101 0
-1056 -1068 1099 0
-1056 -1066 1097 0
-1056 -1065 1095 0
-1054 1101 0
-1054 -1070 1099 0
-1054 -1068 1097 0
-1054 -1066 1095 0
-1054 -1065 1093 0
-1052 1099 0
-1052 -1070 1097 0
-1052 -1068 1095 0
-1052 -1066 1093 0
-1052 -1065 1091 0
-1051 1097 0
-1051 -1070 1095 0
-1051 -1068 1093 0
-1051 -1066 1091 0
-1051 -1065 1090 0
c ((SATLiteral(152) - aux134 + SATLiteral(43))<=0)
-43 -1105 0
-152 -1105 0
-152 -43 -1106 0
c (0<=(SATLiteral(152) - aux134 + SATLiteral(43)))
43 1106 0
152 1106 0
152 43 1105 0
c ((SATLiteral(165) - aux135 + SATLiteral(30))<=0)
-30 -1108 0
-165 -1108 0
-165 -30 -1109 0
c (0<=(SATLiteral(165) - aux135 + SATLiteral(30)))
30 1109 0
165 1109 0
165 30 1108 0
c (( - aux136 + SATLiteral(58) + SATLiteral(111))<=0)
-111 -1111 0
-58 -1111 0
-58 -111 -1112 0
c (0<=( - aux136 + SATLiteral(58) + SATLiteral(111)))
111 1112 0
58 1112 0
58 111 1111 0
c (( - aux137 + SATLiteral(4) + SATLiteral(17))<=0)
-17 -1114 0
-4 -1114 0
-4 -17 -1115 0
c (0<=( - aux137 + SATLiteral(4) + SATLiteral(17)))
17 1115 0
4 1115 0
4 17 1114 0
c (( - aux138 + SATLiteral(125) + SATLiteral(232))<=0)
-232 -1117 0
-125 -1117 0
-125 -232 -1118 0
c (0<=( - aux138 + SATLiteral(125) + SATLiteral(232)))
232 1118 0
125 1118 0
125 232 1117 0
c (( - aux139 + SATLiteral(71) + SATLiteral(218))<=0)
-218 -1120 0
-71 -1120 0
-71 -218 -1121 0
c (0<=( - aux139 + SATLiteral(71) + SATLiteral(218)))
218 1121 0
71 1121 0
71 218 1120 0
c (( - aux140 + SATLiteral(138) + SATLiteral(205))<=0)
-205 -1123 0
-138 -1123 0
-138 -205 -1124 0
c (0<=( - aux140 + SATLiteral(138) + SATLiteral(205)))
205 1124 0
138 1124 0
138 205 1123 0
c ((SATLiteral(178) - aux141 + SATLiteral(192))<=0)
-192 -1126 0
-178 -1126 0
-178 -192 -1127 0
c (0<=(SATLiteral(178) - aux141 + SATLiteral(192)))
192 1127 0
178 1127 0
178 192 1126 0
c (( - aux142 + SATLiteral(84) + SATLiteral(97))<=0)
-97 -1129 0
-84 -1129 0
-84 -97 -1130 0
c (0<=( - aux142 + SATLiteral(84) + SATLiteral(97)))
97 1130 0
84 1130 0
84 97 1129 0
c ((aux135 + aux142 - aux143)<=0)
1129 -1132 0
1130 -1133 0
1108 -1132 0
1108 1129 -1133 0
1108 1130 -1135 0
1109 -1133 0
1109 1129 -1135 0
1109 1130 -1137 0
c (0<=(aux135 + aux142 - aux143))
-1130 1137 0
-1129 1135 0
-1109 1137 0
-1109 -1130 1135 0
-1109 -1129 1133 0
-1108 1135 0
-1108 -1130 1133 0
-1108 -1129 1132 0
c ((aux134 + aux138 - aux144)<=0)
1117 -1139 0
1118 -1140 0
1105 -1139 0
1105 1117 -1140 0
1105 1118 -1142 0
1106 -1140 0
1106 1117 -1142 0
1106 1118 -1144 0
c (0<=(aux134 + aux138 - aux144))
-1118 1144 0
-1117 1142 0
-1106 1144 0
-1106 -1118 1142 0
-1106 -1117 1140 0
-1105 1142 0
-1105 -1118 1140 0
-1105 -1117 1139 0
c ((aux136 + aux137 - aux145)<=0)
1114 -1146 0
1115 -1147 0
1111 -1146 0
1111 1114 -1147 0
1111 1115 -1149 0
1112 -1147 0
1112 1114 -1149 0
1112 1115 -1151 0
c (0<=(aux136 + aux137 - aux145))
-1115 1151 0
-1114 1149 0
-1112 1151 0
-1112 -1115 1149 0
-1112 -1114 1147 0
-1111 1149 0
-1111 -1115 1147 0
-1111 -1114 1146 0
c ((aux139 + aux140 - aux146)<=0)
1123 -1153 0
1124 -1154 0
1120 -1153 0
1120 1123 -1154 0
1120 1124 -1156 0
1121 -1154 0
1121 1123 -1156 0
1121 1124 -1158 0
c (0<=(aux139 + aux140 - aux146))
-1124 1158 0
-1123 1156 0
-1121 1158 0
-1121 -1124 1156 0
-1121 -1123 1154 0
-1120 1156 0
-1120 -1124 1154 0
-1120 -1123 1153 0
c ((aux141 + aux146 - aux147)<=0)
1153 -1160 0
1154 -1161 0
1156 -1163 0
1158 -1165 0
1126 -1160 0
1126 1153 -1161 0
1126 1154 -1163 0
1126 1156 -1165 0
1126 1158 -1167 0
1127 -1161 0
1127 1153 -1163 0
1127 1154 -1165 0
1127 1156 -1167 0
1127 1158 -1169 0
c (0<=(aux141 + aux146 - aux147))
-1158 1169 0
-1156 1167 0
-1154 1165 0
-1153 1163 0
-1127 1169 0
-1127 -1158 1167 0
-1127 -1156 1165 0
-1127 -1154 1163 0
-1127 -1153 1161 0
-1126 1167 0
-1126 -1158 1165 0
-1126 -1156 1163 0
-1126 -1154 1161 0
-1126 -1153 1160 0
c ((aux143 + aux145 - aux148)<=0)
1146 -1171 0
1147 -1172 0
1149 -1174 0
1151 -1176 0
1132 -1171 0
1132 1146 -1172 0
1132 1147 -1174 0
1132 1149 -1176 0
1132 1151 -1178 0
1133 -1172 0
1133 1146 -1174 0
1133 1147 -1176 0
1133 1149 -1178 0
1133 1151 -1180 0
1135 -1174 0
1135 1146 -1176 0
1135 1147 -1178 0
1135 1149 -1180 0
1135 1151 -1182 0
1137 -1176 0
1137 1146 -1178 0
1137 1147 -1180 0
1137 1149 -1182 0
1137 1151 -1184 0
c (0<=(aux143 + aux145 - aux148))
-1151 1184 0
-1149 1182 0
-1147 1180 0
-1146 1178 0
-1137 1184 0
-1137 -1151 1182 0
-1137 -1149 1180 0
-1137 -1147 1178 0
-1137 -1146 1176 0
-1135 1182 0
-1135 -1151 1180 0
-1135 -1149 1178 0
-1135 -1147 1176 0
-1135 -1146 1174 0
-1133 1180 0
-1133 -1151 1178 0
-1133 -1149 1176 0
-1133 -1147 1174 0
-1133 -1146 1172 0
-1132 1178 0
-1132 -1151 1176 0
-1132 -1149 1174 0
-1132 -1147 1172 0
-1132 -1146 1171 0
c ((SATLiteral(154) - aux149 + SATLiteral(45))<=0)
-45 -1186 0
-154 -1186 0
-154 -45 -1187 0
c (0<=(SATLiteral(154) - aux149 + SATLiteral(45)))
45 1187 0
154 1187 0
154 45 1186 0
c ((SATLiteral(167) - aux150 + SATLiteral(32))<=0)
-32 -1189 0
-167 -1189 0
-167 -32 -1190 0
c (0<=(SATLiteral(167) - aux150 + SATLiteral(32)))
32 1190 0
167 1190 0
167 32 1189 0
c (( - aux151 + SATLiteral(60) + SATLiteral(113))<=0)
-113 -1192 0
-60 -1192 0
-60 -113 -1193 0
c (0<=( - aux151 + SATLiteral(60) + SATLiteral(113)))
113 1193 0
60 1193 0
60 113 1192 0
c (( - aux152 + SATLiteral(6) + SATLiteral(19))<=0)
-19 -1195 0
-6 -1195 0
-6 -19 -1196 0
c (0<=( - aux152 + SATLiteral(6) + SATLiteral(19)))
19 1196 0
6 1196 0
6 19 1195 0
c (( - aux153 + SATLiteral(127) + SATLiteral(234))<=0)
-234 -1198 0
-127 -1198 0
-127 -234 -1199 0
c (0<=( - aux153 + SATLiteral(127) + SATLiteral(234)))
234 1199 0
127 1199 0
127 234 1198 0
c (( - aux154 + SATLiteral(73) + SATLiteral(220))<=0)
-220 -1201 0
-73 -1201 0
-73 -220 -1202 0
c (0<=( - aux154 + SATLiteral(73) + SATLiteral(220)))
220 1202 0
73 1202 0
73 220 1201 0
c (( - aux155 + SATLiteral(140) + SATLiteral(207))<=0)
-207 -1204 0
-140 -1204 0
-140 -207 -1205 0
c (0<=( - aux155 + SATLiteral(140) + SATLiteral(207)))
207 1205 0
140 1205 0
140 207 1204 0
c ((SATLiteral(180) - aux156 + SATLiteral(194))<=0)
-194 -1207 0
-180 -1207 0
-180 -194 -1208 0
c (0<=(SATLiteral(180) - aux156 + SATLiteral(194)))
194 1208 0
180 1208 0
180 194 1207 0
c (( - aux157 + SATLiteral(86) + SATLiteral(99))<=0)
-99 -1210 0
-86 -1210 0
-86 -99 -1211 0
c (0<=( - aux157 + SATLiteral(86) + SATLiteral(99)))
99 1211 0
86 1211 0
86 99 1210 0
c ((aux150 + aux157 - aux158)<=0)
1210 -1213 0
1211 -1214 0
1189 -1213 0
1189 1210 -1214 0
1189 1211 -1216 0
1190 -1214 0
1190 1210 -1216 0
1190 1211 -1218 0
c (0<=(aux150 + aux157 - aux158))
-1211 1218 0
-1210 1216 0
-1190 1218 0
-1190 -1211 1216 0
-1190 -1210 1214 0
-1189 1216 0
-1189 -1211 1214 0
-1189 -1210 1213 0
c ((aux149 + aux153 - aux159)<=0)
1198 -1220 0
1199 -1221 0
1186 -1220 0
1186 1198 -1221 0
1186 1199 -1223 0
1187 -1221 0
1187 1198 -1223 0
1187 1199 -1225 0
c (0<=(aux149 + aux153 - aux159))
-1199 1225 0
-1198 1223 0
-1187 1225 0
-1187 -1199 1223 0
-1187 -1198 1221 0
-1186 1223 0
-1186 -1199 1221 0
-1186 -1198 1220 0
c ((aux151 + aux152 - aux160)<=0)
1195 -1227 0
1196 -1228 0
1192 -1227 0
1192 1195 -1228 0
1192 1196 -1230 0
1193 -1228 0
1193 1195 -1230 0
1193 1196 -1232 0
c (0<=(aux151 + aux152 - aux160))
-1196 1232 0
-1195 1230 0
-1193 1232 0
-1193 -1196 1230 0
-1193 -1195 1228 0
-1192 1230 0
-1192 -1196 1228 0
-1192 -1195 1227 0
c ((aux154 + aux155 - aux161)<=0)
1204 -1234 0
1205 -1235 0
1201 -1234 0
1201 1204 -1235 0
1201 1205 -1237 0
1202 -1235 0
1202 1204 -1237 0
1202 1205 -1239 0
c (0<=(aux154 + aux155 - aux161))
-1205 1239 0
-1204 1237 0
-1202 1239 0
-1202 -1205 1237 0
-1202 -1204 1235 0
-1201 1237 0
-1201 -1205 1235 0
-1201 -1204 1234 0
c ((aux156 + aux161 - aux162)<=0)
1234 -1241 0
1235 -1242 0
1237 -1244 0
1239 -1246 0
1207 -1241 0
1207 1234 -1242 0
1207 1235 -1244 0
1207 1237 -1246 0
1207 1239 -1248 0
1208 -1242 0
1208 1234 -1244 0
1208 1235 -1246 0
1208 1237 -1248 0
1208 1239 -1250 0
c (0<=(aux156 + aux161 - aux162))
-1239 1250 0
-1237 1248 0
-1235 1246 0
-1234 1244 0
-1208 1250 0
-1208 -1239 1248 0
-1208 -1237 1246 0
-1208 -1235 1244 0
-1208 -1234 1242 0
-1207 1248 0
-1207 -1239 1246 0
-1207 -1237 1244 0
-1207 -1235 1242 0
-1207 -1234 1241 0
c ((aux158 + aux160 - aux163)<=0)
1227 -1252 0
1228 -1253 0
1230 -1255 0
1232 -1257 0
1213 -1252 0
1213 1227 -1253 0
1213 1228 -1255 0
1213 1230 -1257 0
1213 1232 -1259 0
1214 -1253 0
1214 1227 -1255 0
1214 1228 -1257 0
1214 1230 -1259 0
1214 1232 -1261 0
1216 -1255 0
1216 1227 -1257 0
1216 1228 -1259 0
1216 1230 -1261 0
1216 1232 -1263 0
1218 -1257 0
1218 1227 -1259 0
1218 1228 -1261 0
1218 1230 -1263 0
1218 1232 -1265 0
c (0<=(aux158 + aux160 - aux163))
-1232 1265 0
-1230 1263 0
-1228 1261 0
-1227 1259 0
-1218 1265 0
-1218 -1232 1263 0
-1218 -1230 1261 0
-1218 -1228 1259 0
-1218 -1227 1257 0
-1216 1263 0
-1216 -1232 1261 0
-1216 -1230 1259 0
-1216 -1228 1257 0
-1216 -1227 1255 0
-1214 1261 0
-1214 -1232 1259 0
-1214 -1230 1257 0
-1214 -1228 1255 0
-1214 -1227 1253 0
-1213 1259 0
-1213 -1232 1257 0
-1213 -1230 1255 0
-1213 -1228 1253 0
-1213 -1227 1252 0
c ((SATLiteral(156) - aux164 + SATLiteral(47))<=0)
-47 -1267 0
-156 -1267 0
-156 -47 -1268 0
c (0<=(SATLiteral(156) - aux164 + SATLiteral(47)))
47 1268 0
156 1268 0
156 47 1267 0
c ((SATLiteral(169) - aux165 + SATLiteral(34))<=0)
-34 -1270 0
-169 -1270 0
-169 -34 -1271 0
c (0<=(SATLiteral(169) - aux165 + SATLiteral(34)))
34 1271 0
169 1271 0
169 34 1270 0
c (( - aux166 + SATLiteral(62) + SATLiteral(115))<=0)
-115 -1273 0
-62 -1273 0
-62 -115 -1274 0
c (0<=( - aux166 + SATLiteral(62) + SATLiteral(115)))
115 1274 0
62 1274 0
62 115 1273 0
c (( - aux167 + SATLiteral(8) + SATLiteral(21))<=0)
-21 -1276 0
-8 -1276 0
-8 -21 -1277 0
c (0<=( - aux167 + SATLiteral(8) + SATLiteral(21)))
21 1277 0
8 1277 0
8 21 1276 0
c (( - aux168 + SATLiteral(129) + SATLiteral(236))<=0)
-236 -1279 0
-129 -1279 0
-129 -236 -1280 0
c (0<=( - aux168 + SATLiteral(129) + SATLiteral(236)))
236 1280 0
129 1280 0
129 236 1279 0
c (( - aux169 + SATLiteral(75) + SATLiteral(222))<=0)
-222 -1282 0
-75 -1282 0
-75 -222 -1283 0
c (0<=( - aux169 + SATLiteral(75) + SATLiteral(222)))
222 1283 0
75 1283 0
75 222 1282 0
c (( - aux170 + SATLiteral(142) + SATLiteral(209))<=0)
-209 -1285 0
-142 -1285 0
-142 -209 -1286 0
c (0<=( - aux170 + SATLiteral(142) + SATLiteral(209)))
209 1286 0
142 1286 0
142 209 1285 0
c ((SATLiteral(182) - aux171 + SATLiteral(196))<=0)
-196 -1288 0
-182 -1288 0
-182 -196 -1289 0
c (0<=(SATLiteral(182) - aux171 + SATLiteral(196)))
196 1289 0
182 1289 0
182 196 1288 0
c (( - aux172 + SATLiteral(88) + SATLiteral(101))<=0)
-101 -1291 0
-88 -1291 0
-88 -101 -1292 0
c (0<=( - aux172 + SATLiteral(88) + SATLiteral(101)))
101 1292 0
88 1292 0
88 101 1291 0
c ((aux165 + aux172 - aux173)<=0)
1291 -1294 0
1292 -1295 0
1270 -1294 0
1270 1291 -1295 0
1270 1292 -1297 0
1271 -1295 0
1271 1291 -1297 0
1271 1292 -1299 0
c (0<=(aux165 + aux172 - aux173))
-1292 1299 0
-1291 1297 0
-1271 1299 0
-1271 -1292 1297 0
-1271 -1291 1295 0
-1270 1297 0
-1270 -1292 1295 0
-1270 -1291 1294 0
c ((aux164 + aux168 - aux174)<=0)
1279 -1301 0
1280 -1302 0
1267 -1301 0
1267 1279 -1302 0
1267 1280 -1304 0
1268 -1302 0
1268 1279 -1304 0
1268 1280 -1306 0
c (0<=(aux164 + aux168 - aux174))
-1280 1306 0
-1279 1304 0
-1268 1306 0
-1268 -1280 1304 0
-1268 -1279 1302 0
-1267 1304 0
-1267 -1280 1302 0
-1267 -1279 1301 0
c ((aux166 + aux167 - aux175)<=0)
1276 -1308 0
1277 -1309 0
1273 -1308 0
1273 1276 -1309 0
1273 1277 -1311 0
1274 -1309 0
1274 1276 -1311 0
1274 1277 -1313 0
c (0<=(aux166 + aux167 - aux175))
-1277 1313 0
-1276 1311 0
-1274 1313 0
-1274 -1277 1311 0
-1274 -1276 1309 0
-1273 1311 0
-1273 -1277 1309 0
-1273 -1276 1308 0
c ((aux169 + aux170 - aux176)<=0)
1285 -1315 0
1286 -1316 0
1282 -1315 0
1282 1285 -1316 0
1282 1286 -1318 0
1283 -1316 0
1283 1285 -1318 0
1283 1286 -1320 0
c (0<=(aux169 + aux170 - aux176))
-1286 1320 0
-1285 1318 0
-1283 1320 0
-1283 -1286 1318 0
-1283 -1285 1316 0
-1282 1318 0
-1282 -1286 1316 0
-1282 -1285 1315 0
c ((aux171 + aux176 - aux177)<=0)
1315 -1322 0
1316 -1323 0
1318 -1325 0
1320 -1327 0
1288 -1322 0
1288 1315 -1323 0
1288 1316 -1325 0
1288 1318 -1327 0
1288 1320 -1329 0
1289 -1323 0
1289 1315 -1325 0
1289 1316 -1327 0
1289 1318 -1329 0
1289 1320 -1331 0
c (0<=(aux171 + aux176 - aux177))
-1320 1331 0
-1318 1329 0
-1316 1327 0
-1315 1325 0
-1289 1331 0
-1289 -1320 1329 0
-1289 -1318 1327 0
-1289 -1316 1325 0
-1289 -1315 1323 0
-1288 1329 0
-1288 -1320 1327 0
-1288 -1318 1325 0
-1288 -1316 1323 0
-1288 -1315 1322 0
c ((aux173 + aux175 - aux178)<=0)
1308 -1333 0
1309 -1334 0
1311 -1336 0
1313 -1338 0
1294 -1333 0
1294 1308 -1334 0
1294 1309 -1336 0
1294 1311 -1338 0
1294 1313 -1340 0
1295 -1334 0
1295 1308 -1336 0
1295 1309 -1338 0
1295 1311 -1340 0
1295 1313 -1342 0
1297 -1336 0
1297 1308 -1338 0
1297 1309 -1340 0
1297 1311 -1342 0
1297 1313 -1344 0
1299 -1338 0
1299 1308 -1340 0
1299 1309 -1342 0
1299 1311 -1344 0
1299 1313 -1346 0
c (0<=(aux173 + aux175 - aux178))
-1313 1346 0
-1311 1344 0
-1309 1342 0
-1308 1340 0
-1299 1346 0
-1299 -1313 1344 0
-1299 -1311 1342 0
-1299 -1309 1340 0
-1299 -1308 1338 0
-1297 1344 0
-1297 -1313 1342 0
-1297 -1311 1340 0
-1297 -1309 1338 0
-1297 -1308 1336 0
-1295 1342 0
-1295 -1313 1340 0
-1295 -1311 1338 0
-1295 -1309 1336 0
-1295 -1308 1334 0
-1294 1340 0
-1294 -1313 1338 0
-1294 -1311 1336 0
-1294 -1309 1334 0
-1294 -1308 1333 0
c ((SATLiteral(158) - aux179 + SATLiteral(49))<=0)
-49 -1348 0
-158 -1348 0
-158 -49 -1349 0
c (0<=(SATLiteral(158) - aux179 + SATLiteral(49)))
49 1349 0
158 1349 0
158 49 1348 0
c ((SATLiteral(171) - aux180 + SATLiteral(36))<=0)
-36 -1351 0
-171 -1351 0
-171 -36 -1352 0
c (0<=(SATLiteral(171) - aux180 + SATLiteral(36)))
36 1352 0
171 1352 0
171 36 1351 0
c (( - aux181 + SATLiteral(64) + SATLiteral(117))<=0)
-117 -1354 0
-64 -1354 0
-64 -117 -1355 0
c (0<=( - aux181 + SATLiteral(64) + SATLiteral(117)))
117 1355 0
64 1355 0
64 117 1354 0
c (( - aux182 + SATLiteral(10) + SATLiteral(23))<=0)
-23 -1357 0
-10 -1357 0
-10 -23 -1358 0
c (0<=( - aux182 + SATLiteral(10) + SATLiteral(23)))
23 1358 0
10 1358 0
10 23 1357 0
c (( - aux183 + SATLiteral(131) + SATLiteral(238))<=0)
-238 -1360 0
-131 -1360 0
-131 -238 -1361 0
c (0<=( - aux183 + SATLiteral(131) + SATLiteral(238)))
238 1361 0
131 1361 0
131 238 1360 0
c (( - aux184 + SATLiteral(77) + SATLiteral(224))<=0)
-224 -1363 0
-77 -1363 0
-77 -224 -1364 0
c (0<=( - aux184 + SATLiteral(77) + SATLiteral(224)))
224 1364 0
77 1364 0
77 224 1363 0
c (( - aux185 + SATLiteral(144) + SATLiteral(211))<=0)
-211 -1366 0
-144 -1366 0
-144 -211 -1367 0
c (0<=( - aux185 + SATLiteral(144) + SATLiteral(211)))
211 1367 0
144 1367 0
144 211 1366 0
c ((SATLiteral(184) - aux186 + SATLiteral(198))<=0)
-198 -1369 0
-184 -1369 0
-184 -198 -1370 0
c (0<=(SATLiteral(184) - aux186 + SATLiteral(198)))
198 1370 0
184 1370 0
184 198 1369 0
c (( - aux187 + SATLiteral(90) + SATLiteral(103))<=0)
-103 -1372 0
-90 -1372 0
-90 -103 -1373 0
c (0<=( - aux187 + SATLiteral(90) + SATLiteral(103)))
103 1373 0
90 1373 0
90 103 1372 0
c ((aux180 + aux187 - aux188)<=0)
1372 -1375 0
1373 -1376 0
1351 -1375 0
1351 1372 -1376 0
1351 1373 -1378 0
1352 -1376 0
1352 1372 -1378 0
1352 1373 -1380 0
c (0<=(aux180 + aux187 - aux188))
-1373 1380 0
-1372 1378 0
-1352 1380 0
-1352 -1373 1378 0
-1352 -1372 1376 0
-1351 1378 0
-1351 -1373 1376 0
-1351 -1372 1375 0
c ((aux179 + aux183 - aux189)<=0)
1360 -1382 0
1361 -1383 0
1348 -1382 0
1348 1360 -1383 0
1348 1361 -1385 0
1349 -1383 0
1349 1360 -1385 0
1349 1361 -1387 0
c (0<=(aux179 + aux183 - aux189))
-1361 1387 0
-1360 1385 0
-1349 1387 0
-1349 -1361 1385 0
-1349 -1360 1383 0
-1348 1385 0
-1348 -1361 1383 0
-1348 -1360 1382 0
c ((aux181 + aux182 - aux190)<=0)
1357 -1389 0
1358 -1390 0
1354 -1389 0
1354 1357 -1390 0
1354 1358 -1392 0
1355 -1390 0
1355 1357 -1392 0
1355 1358 -1394 0
c (0<=(aux181 + aux182 - aux190))
-1358 1394 0
-1357 1392 0
-1355 1394 0
-1355 -1358 1392 0
-1355 -1357 1390 0
-1354 1392 0
-1354 -1358 1390 0
-1354 -1357 1389 0
c ((aux184 + aux185 - aux191)<=0)
1366 -1396 0
1367 -1397 0
1363 -1396 0
1363 1366 -1397 0
1363 1367 -1399 0
1364 -1397 0
1364 1366 -1399 0
1364 1367 -1401 0
c (0<=(aux184 + aux185 - aux191))
-1367 1401 0
-1366 1399 0
-1364 1401 0
-1364 -1367 1399 0
-1364 -1366 1397 0
-1363 1399 0
-1363 -1367 1397 0
-1363 -1366 1396 0
c ((aux186 + aux191 - aux192)<=0)
1396 -1403 0
1397 -1404 0
1399 -1406 0
1401 -1408 0
1369 -1403 0
1369 1396 -1404 0
1369 1397 -1406 0
1369 1399 -1408 0
1369 1401 -1410 0
1370 -1404 0
1370 1396 -1406 0
1370 1397 -1408 0
1370 1399 -1410 0
1370 1401 -1412 0
c (0<=(aux186 + aux191 - aux192))
-1401 1412 0
-1399 1410 0
-1397 1408 0
-1396 1406 0
-1370 1412 0
-1370 -1401 1410 0
-1370 -1399 1408 0
-1370 -1397 1406 0
-1370 -1396 1404 0
-1369 1410 0
-1369 -1401 1408 0
-1369 -1399 1406 0
-1369 -1397 1404 0
-1369 -1396 1403 0
c ((aux188 + aux190 - aux193)<=0)
1389 -1414 0
1390 -1415 0
1392 -1417 0
1394 -1419 0
1375 -1414 0
1375 1389 -1415 0
1375 1390 -1417 0
1375 1392 -1419 0
1375 1394 -1421 0
1376 -1415 0
1376 1389 -1417 0
1376 1390 -1419 0
1376 1392 -1421 0
1376 1394 -1423 0
1378 -1417 0
1378 1389 -1419 0
1378 1390 -1421 0
1378 1392 -1423 0
1378 1394 -1425 0
1380 -1419 0
1380 1389 -1421 0
1380 1390 -1423 0
1380 1392 -1425 0
1380 1394 -1427 0
c (0<=(aux188 + aux190 - aux193))
-1394 1427 0
-1392 1425 0
-1390 1423 0
-1389 1421 0
-1380 1427 0
-1380 -1394 1425 0
-1380 -1392 1423 0
-1380 -1390 1421 0
-1380 -1389 1419 0
-1378 1425 0
-1378 -1394 1423 0
-1378 -1392 1421 0
-1378 -1390 1419 0
-1378 -1389 1417 0
-1376 1423 0
-1376 -1394 1421 0
-1376 -1392 1419 0
-1376 -1390 1417 0
-1376 -1389 1415 0
-1375 1421 0
-1375 -1394 1419 0
-1375 -1392 1417 0
-1375 -1390 1415 0
-1375 -1389 1414 0
c ((SATLiteral(160) - aux194 + SATLiteral(51))<=0)
-51 -1429 0
-160 -1429 0
-160 -51 -1430 0
c (0<=(SATLiteral(160) - aux194 + SATLiteral(51)))
51 1430 0
160 1430 0
160 51 1429 0
c ((SATLiteral(173) - aux195 + SATLiteral(38))<=0)
-38 -1432 0
-173 -1432 0
-173 -38 -1433 0
c (0<=(SATLiteral(173) - aux195 + SATLiteral(38)))
38 1433 0
173 1433 0
173 38 1432 0
c (( - aux196 + SATLiteral(66) + SATLiteral(119))<=0)
-119 -1435 0
-66 -1435 0
-66 -119 -1436 0
c (0<=( - aux196 + SATLiteral(66) + SATLiteral(119)))
119 1436 0
66 1436 0
66 119 1435 0
c (( - aux197 + SATLiteral(12) + SATLiteral(25))<=0)
-25 -1438 0
-12 -1438 0
-12 -25 -1439 0
c (0<=( - aux197 + SATLiteral(12) + SATLiteral(25)))
25 1439 0
12 1439 0
12 25 1438 0
c (( - aux198 + SATLiteral(133) + SATLiteral(240))<=0)
-240 -1441 0
-133 -1441 0
-133 -240 -1442 0
c (0<=( - aux198 + SATLiteral(133) + SATLiteral(240)))
240 1442 0
133 1442 0
133 240 1441 0
c (( - aux199 + SATLiteral(79) + SATLiteral(226))<=0)
-226 -1444 0
-79 -1444 0
-79 -226 -1445 0
c (0<=( - aux199 + SATLiteral(79) + SATLiteral(226)))
226 1445 0
79 1445 0
79 226 1444 0
c (( - aux200 + SATLiteral(146) + SATLiteral(213))<=0)
-213 -1447 0
-146 -1447 0
-146 -213 -1448 0
c (0<=( - aux200 + SATLiteral(146) + SATLiteral(213)))
213 1448 0
146 1448 0
146 213 1447 0
c ((SATLiteral(186) - aux201 + SATLiteral(200))<=0)
-200 -1450 0
-186 -1450 0
-186 -200 -1451 0
c (0<=(SATLiteral(186) - aux201 + SATLiteral(200)))
200 1451 0
186 1451 0
186 200 1450 0
c (( - aux202 + SATLiteral(92) + SATLiteral(105))<=0)
-105 -1453 0
-92 -1453 0
-92 -105 -1454 0
c (0<=( - aux202 + SATLiteral(92) + SATLiteral(105)))
105 1454 0
92 1454 0
92 105 1453 0
c ((aux195 + aux202 - aux203)<=0)
1453 -1456 0
1454 -1457 0
1432 -1456 0
1432 1453 -1457 0
1432 1454 -1459 0
1433 -1457 0
1433 1453 -1459 0
1433 1454 -1461 0
c (0<=(aux195 + aux202 - aux203))
-1454 1461 0
-1453 1459 0
-1433 1461 0
-1433 -1454 1459 0
-1433 -1453 1457 0
-1432 1459 0
-1432 -1454 1457 0
-1432 -1453 1456 0
c ((aux194 + aux198 - aux204)<=0)
1441 -1463 0
1442 -1464 0
1429 -1463 0
1429 1441 -1464 0
1429 1442 -1466 0
1430 -1464 0
1430 1441 -1466 0
1430 1442 -1468 0
c (0<=(aux194 + aux198 - aux204))
-1442 1468 0
-1441 1466 0
-1430 1468 0
-1430 -1442 1466 0
-1430 -1441 1464 0
-1429 1466 0
-1429 -1442 1464 0
-1429 -1441 1463 0
c ((aux196 + aux197 - aux205)<=0)
1438 -1470 0
1439 -1471 0
1435 -1470 0
1435 1438 -1471 0
1435 1439 -1473 0
1436 -1471 0
1436 1438 -1473 0
1436 1439 -1475 0
c (0<=(aux196 + aux197 - aux205))
-1439 1475 0
-1438 1473 0
-1436 1475 0
-1436 -1439 1473 0
-1436 -1438 1471 0
-1435 1473 0
-1435 -1439 1471 0
-1435 -1438 1470 0
c ((aux199 + aux200 - aux206)<=0)
1447 -1477 0
1448 -1478 0
1444 -1477 0
1444 1447 -1478 0
1444 1448 -1480 0
1445 -1478 0
1445 1447 -1480 0
1445 1448 -1482 0
c (0<=(aux199 + aux200 - aux206))
-1448 1482 0
-1447 1480 0
-1445 1482 0
-1445 -1448 1480 0
-1445 -1447 1478 0
-1444 1480 0
-1444 -1448 1478 0
-1444 -1447 1477 0
c ((aux201 + aux206 - aux207)<=0)
1477 -1484 0
1478 -1485 0
1480 -1487 0
1482 -1489 0
1450 -1484 0
1450 1477 -1485 0
1450 1478 -1487 0
1450 1480 -1489 0
1450 1482 -1491 0
1451 -1485 0
1451 1477 -1487 0
1451 1478 -1489 0
1451 1480 -1491 0
1451 1482 -1493 0
c (0<=(aux201 + aux206 - aux207))
-1482 1493 0
-1480 1491 0
-1478 1489 0
-1477 1487 0
-1451 1493 0
-1451 -1482 1491 0
-1451 -1480 1489 0
-1451 -1478 1487 0
-1451 -1477 1485 0
-1450 1491 0
-1450 -1482 1489 0
-1450 -1480 1487 0
-1450 -1478 1485 0
-1450 -1477 1484 0
c ((aux203 + aux205 - aux208)<=0)
1470 -1495 0
1471 -1496 0
1473 -1498 0
1475 -1500 0
1456 -1495 0
1456 1470 -1496 0
1456 1471 -1498 0
1456 1473 -1500 0
1456 1475 -1502 0
1457 -1496 0
1457 1470 -1498 0
1457 1471 -1500 0
1457 1473 -1502 0
1457 1475 -1504 0
1459 -1498 0
1459 1470 -1500 0
1459 1471 -1502 0
1459 1473 -1504 0
1459 1475 -1506 0
1461 -1500 0
1461 1470 -1502 0
1461 1471 -1504 0
1461 1473 -1506 0
1461 1475 -1508 0
c (0<=(aux203 + aux205 - aux208))
-1475 1508 0
-1473 1506 0
-1471 1504 0
-1470 1502 0
-1461 1508 0
-1461 -1475 1506 0
-1461 -1473 1504 0
-1461 -1471 1502 0
-1461 -1470 1500 0
-1459 1506 0
-1459 -1475 1504 0
-1459 -1473 1502 0
-1459 -1471 1500 0
-1459 -1470 1498 0
-1457 1504 0
-1457 -1475 1502 0
-1457 -1473 1500 0
-1457 -1471 1498 0
-1457 -1470 1496 0
-1456 1502 0
-1456 -1475 1500 0
-1456 -1473 1498 0
-1456 -1471 1496 0
-1456 -1470 1495 0
c ((SATLiteral(162) - aux209 + SATLiteral(53))<=0)
-53 -1510 0
-162 -1510 0
-162 -53 -1511 0
c (0<=(SATLiteral(162) - aux209 + SATLiteral(53)))
53 1511 0
162 1511 0
162 53 1510 0
c ((SATLiteral(175) - aux210 + SATLiteral(40))<=0)
-40 -1513 0
-175 -1513 0
-175 -40 -1514 0
c (0<=(SATLiteral(175) - aux210 + SATLiteral(40)))
40 1514 0
175 1514 0
175 40 1513 0
c (( - aux211 + SATLiteral(68) + SATLiteral(121))<=0)
-121 -1516 0
-68 -1516 0
-68 -121 -1517 0
c (0<=( - aux211 + SATLiteral(68) + SATLiteral(121)))
121 1517 0
68 1517 0
68 121 1516 0
c (( - aux212 + SATLiteral(14) + SATLiteral(27))<=0)
-27 -1519 0
-14 -1519 0
-14 -27 -1520 0
c (0<=( - aux212 + SATLiteral(14) + SATLiteral(27)))
27 1520 0
14 1520 0
14 27 1519 0
c (( - aux213 + SATLiteral(135) + SATLiteral(242))<=0)
-242 -1522 0
-135 -1522 0
-135 -242 -1523 0
c (0<=( - aux213 + SATLiteral(135) + SATLiteral(242)))
242 1523 0
135 1523 0
135 242 1522 0
c (( - aux214 + SATLiteral(81) + SATLiteral(228))<=0)
-228 -1525 0
-81 -1525 0
-81 -228 -1526 0
c (0<=( - aux214 + SATLiteral(81) + SATLiteral(228)))
228 1526 0
81 1526 0
81 228 1525 0
c (( - aux215 + SATLiteral(148) + SATLiteral(215))<=0)
-215 -1528 0
-148 -1528 0
-148 -215 -1529 0
c (0<=( - aux215 + SATLiteral(148) + SATLiteral(215)))
215 1529 0
148 1529 0
148 215 1528 0
c ((SATLiteral(188) - aux216 + SATLiteral(202))<=0)
-202 -1531 0
-188 -1531 0
-188 -202 -1532 0
c (0<=(SATLiteral(188) - aux216 + SATLiteral(202)))
202 1532 0
188 1532 0
188 202 1531 0
c (( - aux217 + SATLiteral(94) + SATLiteral(107))<=0)
-107 -1534 0
-94 -1534 0
-94 -107 -1535 0
c (0<=( - aux217 + SATLiteral(94) + SATLiteral(107)))
107 1535 0
94 1535 0
94 107 1534 0
c ((aux210 + aux217 - aux218)<=0)
1534 -1537 0
1535 -1538 0
1513 -1537 0
1513 1534 -1538 0
1513 1535 -1540 0
1514 -1538 0
1514 1534 -1540 0
1514 1535 -1542 0
c (0<=(aux210 + aux217 - aux218))
-1535 1542 0
-1534 1540 0
-1514 1542 0
-1514 -1535 1540 0
-1514 -1534 1538 0
-1513 1540 0
-1513 -1535 1538 0
-1513 -1534 1537 0
c ((aux209 + aux213 - aux219)<=0)
1522 -1544 0
1523 -1545 0
1510 -1544 0
1510 1522 -1545 0
1510 1523 -1547 0
1511 -1545 0
1511 1522 -1547 0
1511 1523 -1549 0
c (0<=(aux209 + aux213 - aux219))
-1523 1549 0
-1522 1547 0
-1511 1549 0
-1511 -1523 1547 0
-1511 -1522 1545 0
-1510 1547 0
-1510 -1523 1545 0
-1510 -1522 1544 0
c ((aux211 + aux212 - aux220)<=0)
1519 -1551 0
1520 -1552 0
1516 -1551 0
1516 1519 -1552 0
1516 1520 -1554 0
1517 -1552 0
1517 1519 -1554 0
1517 1520 -1556 0
c (0<=(aux211 + aux212 - aux220))
-1520 1556 0
-1519 1554 0
-1517 1556 0
-1517 -1520 1554 0
-1517 -1519 1552 0
-1516 1554 0
-1516 -1520 1552 0
-1516 -1519 1551 0
c ((aux214 + aux215 - aux221)<=0)
1528 -1558 0
1529 -1559 0
1525 -1558 0
1525 1528 -1559 0
1525 1529 -1561 0
1526 -1559 0
1526 1528 -1561 0
1526 1529 -1563 0
c (0<=(aux214 + aux215 - aux221))
-1529 1563 0
-1528 1561 0
-1526 1563 0
-1526 -1529 1561 0
-1526 -1528 1559 0
-1525 1561 0
-1525 -1529 1559 0
-1525 -1528 1558 0
c ((aux216 + aux221 - aux222)<=0)
1558 -1565 0
1559 -1566 0
1561 -1568 0
1563 -1570 0
1531 -1565 0
1531 1558 -1566 0
1531 1559 -1568 0
1531 1561 -1570 0
1531 1563 -1572 0
1532 -1566 0
1532 1558 -1568 0
1532 1559 -1570 0
1532 1561 -1572 0
1532 1563 -1574 0
c (0<=(aux216 + aux221 - aux222))
-1563 1574 0
-1561 1572 0
-1559 1570 0
-1558 1568 0
-1532 1574 0
-1532 -1563 1572 0
-1532 -1561 1570 0
-1532 -1559 1568 0
-1532 -1558 1566 0
-1531 1572 0
-1531 -1563 1570 0
-1531 -1561 1568 0
-1531 -1559 1566 0
-1531 -1558 1565 0
c ((aux218 + aux220 - aux223)<=0)
1551 -1576 0
1552 -1577 0
1554 -1579 0
1556 -1581 0
1537 -1576 0
1537 1551 -1577 0
1537 1552 -1579 0
1537 1554 -1581 0
1537 1556 -1583 0
1538 -1577 0
1538 1551 -1579 0
1538 1552 -1581 0
1538 1554 -1583 0
1538 1556 -1585 0
1540 -1579 0
1540 1551 -1581 0
1540 1552 -1583 0
1540 1554 -1585 0
1540 1556 -1587 0
1542 -1581 0
1542 1551 -1583 0
1542 1552 -1585 0
1542 1554 -1587 0
1542 1556 -1589 0
c (0<=(aux218 + aux220 - aux223))
-1556 1589 0
-1554 1587 0
-1552 1585 0
-1551 1583 0
-1542 1589 0
-1542 -1556 1587 0
-1542 -1554 1585 0
-1542 -1552 1583 0
-1542 -1551 1581 0
-1540 1587 0
-1540 -1556 1585 0
-1540 -1554 1583 0
-1540 -1552 1581 0
-1540 -1551 1579 0
-1538 1585 0
-1538 -1556 1583 0
-1538 -1554 1581 0
-1538 -1552 1579 0
-1538 -1551 1577 0
-1537 1583 0
-1537 -1556 1581 0
-1537 -1554 1579 0
-1537 -1552 1577 0
-1537 -1551 1576 0
c ((SATLiteral(-161) - aux224 + SATLiteral(-52))<=0)
52 -1591 0
161 -1591 0
161 52 -1592 0
c (0<=(SATLiteral(-161) - aux224 + SATLiteral(-52)))
-52 1592 0
-161 1592 0
-161 -52 1591 0
c ((SATLiteral(-174) - aux225 + SATLiteral(-39))<=0)
39 -1594 0
174 -1594 0
174 39 -1595 0
c (0<=(SATLiteral(-174) - aux225 + SATLiteral(-39)))
-39 1595 0
-174 1595 0
-174 -39 1594 0
c (( - aux226 + SATLiteral(-67) + SATLiteral(-120))<=0)
120 -1597 0
67 -1597 0
67 120 -1598 0
c (0<=( - aux226 + SATLiteral(-67) + SATLiteral(-120)))
-120 1598 0
-67 1598 0
-67 -120 1597 0
c (( - aux227 + SATLiteral(-13) + SATLiteral(-26))<=0)
26 -1600 0
13 -1600 0
13 26 -1601 0
c (0<=( - aux227 + SATLiteral(-13) + SATLiteral(-26)))
-26 1601 0
-13 1601 0
-13 -26 1600 0
c (( - aux228 + SATLiteral(-134) + SATLiteral(-241))<=0)
241 -1603 0
134 -1603 0
134 241 -1604 0
c (0<=( - aux228 + SATLiteral(-134) + SATLiteral(-241)))
-241 1604 0
-134 1604 0
-134 -241 1603 0
c (( - aux229 + SATLiteral(-80) + SATLiteral(-227))<=0)
227 -1606 0
80 -1606 0
80 227 -1607 0
c (0<=( - aux229 + SATLiteral(-80) + SATLiteral(-227)))
-227 1607 0
-80 1607 0
-80 -227 1606 0
c (( - aux230 + SATLiteral(-147) + SATLiteral(-214))<=0)
214 -1609 0
147 -1609 0
147 214 -1610 0
c (0<=( - aux230 + SATLiteral(-147) + SATLiteral(-214)))
-214 1610 0
-147 1610 0
-147 -214 1609 0
c ((SATLiteral(-187) - aux231 + SATLiteral(-201))<=0)
201 -1612 0
187 -1612 0
187 201 -1613 0
c (0<=(SATLiteral(-187) - aux231 + SATLiteral(-201)))
-201 1613 0
-187 1613 0
-187 -201 1612 0
c (( - aux232 + SATLiteral(-93) + SATLiteral(-106))<=0)
106 -1615 0
93 -1615 0
93 106 -1616 0
c (0<=( - aux232 + SATLiteral(-93) + SATLiteral(-106)))
-106 1616 0
-93 1616 0
-93 -106 1615 0
c ((aux225 + aux232 - aux233)<=0)
1615 -1618 0
1616 -1619 0
1594 -1618 0
1594 1615 -1619 0
1594 1616 -1621 0
1595 -1619 0
1595 1615 -1621 0
1595 1616 -1623 0
c (0<=(aux225 + aux232 - aux233))
-1616 1623 0
-1615 1621 0
-1595 1623 0
-1595 -1616 1621 0
-1595 -1615 1619 0
-1594 1621 0
-1594 -1616 1619 0
-1594 -1615 1618 0
c ((aux224 + aux228 - aux234)<=0)
1603 -1625 0
1604 -1626 0
1591 -1625 0
1591 1603 -1626 0
1591 1604 -1628 0
1592 -1626 0
1592 1603 -1628 0
1592 1604 -1630 0
c (0<=(aux224 + aux228 - aux234))
-1604 1630 0
-1603 1628 0
-1592 1630 0
-1592 -1604 1628 0
-1592 -1603 1626 0
-1591 1628 0
-1591 -1604 1626 0
-1591 -1603 1625 0
c ((aux226 + aux227 - aux235)<=0)
1600 -1632 0
1601 -1633 0
1597 -1632 0
1597 1600 -1633 0
1597 1601 -1635 0
1598 -1633 0
1598 1600 -1635 0
1598 1601 -1637 0
c (0<=(aux226 + aux227 - aux235))
-1601 1637 0
-1600 1635 0
-1598 1637 0
-1598 -1601 1635 0
-1598 -1600 1633 0
-1597 1635 0
-1597 -1601 1633 0
-1597 -1600 1632 0
c ((aux229 + aux230 - aux236)<=0)
1609 -1639 0
1610 -1640 0
1606 -1639 0
1606 1609 -1640 0
1606 1610 -1642 0
1607 -1640 0
1607 1609 -1642 0
1607 1610 -1644 0
c (0<=(aux229 + aux230 - aux236))
-1610 1644 0
-1609 1642 0
-1607 1644 0
-1607 -1610 1642 0
-1607 -1609 1640 0
-1606 1642 0
-1606 -1610 1640 0
-1606 -1609 1639 0
c ((aux231 + aux236 - aux237)<=0)
1639 -1646 0
1640 -1647 0
1642 -1649 0
1644 -1651 0
1612 -1646 0
1612 1639 -1647 0
1612 1640 -1649 0
1612 1642 -1651 0
1612 1644 -1653 0
1613 -1647 0
1613 1639 -1649 0
1613 1640 -1651 0
1613 1642 -1653 0
1613 1644 -1655 0
c (0<=(aux231 + aux236 - aux237))
-1644 1655 0
-1642 1653 0
-1640 1651 0
-1639 1649 0
-1613 1655 0
-1613 -1644 1653 0
-1613 -1642 1651 0
-1613 -1640 1649 0
-1613 -1639 1647 0
-1612 1653 0
-1612 -1644 1651 0
-1612 -1642 1649 0
-1612 -1640 1647 0
-1612 -1639 1646 0
c ((aux233 + aux235 - aux238)<=0)
1632 -1657 0
1633 -1658 0
1635 -1660 0
1637 -1662 0
1618 -1657 0
1618 1632 -1658 0
1618 1633 -1660 0
1618 1635 -1662 0
1618 1637 -1664 0
1619 -1658 0
1619 1632 -1660 0
1619 1633 -1662 0
1619 1635 -1664 0
1619 1637 -1666 0
1621 -1660 0
1621 1632 -1662 0
1621 1633 -1664 0
1621 1635 -1666 0
1621 1637 -1668 0
1623 -1662 0
1623 1632 -1664 0
1623 1633 -1666 0
1623 1635 -1668 0
1623 1637 -1670 0
c (0<=(aux233 + aux235 - aux238))
-1637 1670 0
-1635 1668 0
-1633 1666 0
-1632 1664 0
-1623 1670 0
-1623 -1637 1668 0
-1623 -1635 1666 0
-1623 -1633 1664 0
-1623 -1632 1662 0
-1621 1668 0
-1621 -1637 1666 0
-1621 -1635 1664 0
-1621 -1633 1662 0
-1621 -1632 1660 0
-1619 1666 0
-1619 -1637 1664 0
-1619 -1635 1662 0
-1619 -1633 1660 0
-1619 -1632 1658 0
-1618 1664 0
-1618 -1637 1662 0
-1618 -1635 1660 0
-1618 -1633 1658 0
-1618 -1632 1657 0
c ((SATLiteral(-109) - aux244 + SATLiteral(-56))<=0)
56 -1687 0
109 -1687 0
109 56 -1688 0
c (0<=(SATLiteral(-109) - aux244 + SATLiteral(-56)))
-56 1688 0
-109 1688 0
-109 -56 1687 0
c (( - aux245 + SATLiteral(-150) + SATLiteral(-15))<=0)
15 -1690 0
150 -1690 0
150 15 -1691 0
c (0<=( - aux245 + SATLiteral(-150) + SATLiteral(-15)))
-15 1691 0
-150 1691 0
-150 -15 1690 0
c ((SATLiteral(-109) - aux247 + SATLiteral(-56))<=0)
56 -1696 0
109 -1696 0
109 56 -1697 0
c (0<=(SATLiteral(-109) - aux247 + SATLiteral(-56)))
-56 1697 0
-109 1697 0
-109 -56 1696 0
c (( - aux248 + SATLiteral(-150) + SATLiteral(-15))<=0)
15 -1699 0
150 -1699 0
150 15 -1700 0
c (0<=( - aux248 + SATLiteral(-150) + SATLiteral(-15)))
-15 1700 0
-150 1700 0
-150 -15 1699 0
