p cnf 1485 5589                                                                                     

1 0
c Encoding variable: grid_00000_00000 with domain: int(0..5) (representing constraint )
c Both direct and order encoding.
c Var 'grid_00000_00000' order represents '0' with '2'
c Var 'grid_00000_00000' direct represents '0' with '2'
c Var 'grid_00000_00000' order represents '1' with '3'
-2 3 0
c Var 'grid_00000_00000' direct represents '1' with '4'
2 -3 4 0
-4 3 0
-4 -2 0
c Var 'grid_00000_00000' order represents '2' with '5'
-3 5 0
c Var 'grid_00000_00000' direct represents '2' with '6'
3 -5 6 0
-6 5 0
-6 -3 0
c Var 'grid_00000_00000' order represents '3' with '7'
-5 7 0
c Var 'grid_00000_00000' direct represents '3' with '8'
5 -7 8 0
-8 7 0
-8 -5 0
c Var 'grid_00000_00000' order represents '4' with '9'
-7 9 0
c Var 'grid_00000_00000' direct represents '4' with '10'
7 -9 10 0
-10 9 0
-10 -7 0
c Var 'grid_00000_00000' direct represents '5' with '-9'
2 4 6 8 10 -9 0
c Encoding variable: grid_00000_00001 with domain: int(0..5) (representing constraint )
c Both direct and order encoding.
c Var 'grid_00000_00001' order represents '0' with '11'
c Var 'grid_00000_00001' direct represents '0' with '11'
c Var 'grid_00000_00001' order represents '1' with '12'
-11 12 0
c Var 'grid_00000_00001' direct represents '1' with '13'
11 -12 13 0
-13 12 0
-13 -11 0
c Var 'grid_00000_00001' order represents '2' with '14'
-12 14 0
c Var 'grid_00000_00001' direct represents '2' with '15'
12 -14 15 0
-15 14 0
-15 -12 0
c Var 'grid_00000_00001' order represents '3' with '16'
-14 16 0
c Var 'grid_00000_00001' direct represents '3' with '17'
14 -16 17 0
-17 16 0
-17 -14 0
c Var 'grid_00000_00001' order represents '4' with '18'
-16 18 0
c Var 'grid_00000_00001' direct represents '4' with '19'
16 -18 19 0
-19 18 0
-19 -16 0
c Var 'grid_00000_00001' direct represents '5' with '-18'
11 13 15 17 19 -18 0
c Encoding variable: grid_00000_00002 with domain: int(0..5) (representing constraint )
c Both direct and order encoding.
c Var 'grid_00000_00002' order represents '0' with '20'
c Var 'grid_00000_00002' direct represents '0' with '20'
c Var 'grid_00000_00002' order represents '1' with '21'
-20 21 0
c Var 'grid_00000_00002' direct represents '1' with '22'
20 -21 22 0
-22 21 0
-22 -20 0
c Var 'grid_00000_00002' order represents '2' with '23'
-21 23 0
c Var 'grid_00000_00002' direct represents '2' with '24'
21 -23 24 0
-24 23 0
-24 -21 0
c Var 'grid_00000_00002' order represents '3' with '25'
-23 25 0
c Var 'grid_00000_00002' direct represents '3' with '26'
23 -25 26 0
-26 25 0
-26 -23 0
c Var 'grid_00000_00002' order represents '4' with '27'
-25 27 0
c Var 'grid_00000_00002' direct represents '4' with '28'
25 -27 28 0
-28 27 0
-28 -25 0
c Var 'grid_00000_00002' direct represents '5' with '-27'
20 22 24 26 28 -27 0
c Encoding variable: grid_00000_00003 with domain: int(0..5) (representing constraint )
c Both direct and order encoding.
c Var 'grid_00000_00003' order represents '0' with '29'
c Var 'grid_00000_00003' direct represents '0' with '29'
c Var 'grid_00000_00003' order represents '1' with '30'
-29 30 0
c Var 'grid_00000_00003' direct represents '1' with '31'
29 -30 31 0
-31 30 0
-31 -29 0
c Var 'grid_00000_00003' order represents '2' with '32'
-30 32 0
c Var 'grid_00000_00003' direct represents '2' with '33'
30 -32 33 0
-33 32 0
-33 -30 0
c Var 'grid_00000_00003' order represents '3' with '34'
-32 34 0
c Var 'grid_00000_00003' direct represents '3' with '35'
32 -34 35 0
-35 34 0
-35 -32 0
c Var 'grid_00000_00003' order represents '4' with '36'
-34 36 0
c Var 'grid_00000_00003' direct represents '4' with '37'
34 -36 37 0
-37 36 0
-37 -34 0
c Var 'grid_00000_00003' direct represents '5' with '-36'
29 31 33 35 37 -36 0
c Encoding variable: grid_00000_00004 with domain: int(0..5) (representing constraint )
c Both direct and order encoding.
c Var 'grid_00000_00004' order represents '0' with '38'
c Var 'grid_00000_00004' direct represents '0' with '38'
c Var 'grid_00000_00004' order represents '1' with '39'
-38 39 0
c Var 'grid_00000_00004' direct represents '1' with '40'
38 -39 40 0
-40 39 0
-40 -38 0
c Var 'grid_00000_00004' order represents '2' with '41'
-39 41 0
c Var 'grid_00000_00004' direct represents '2' with '42'
39 -41 42 0
-42 41 0
-42 -39 0
c Var 'grid_00000_00004' order represents '3' with '43'
-41 43 0
c Var 'grid_00000_00004' direct represents '3' with '44'
41 -43 44 0
-44 43 0
-44 -41 0
c Var 'grid_00000_00004' order represents '4' with '45'
-43 45 0
c Var 'grid_00000_00004' direct represents '4' with '46'
43 -45 46 0
-46 45 0
-46 -43 0
c Var 'grid_00000_00004' direct represents '5' with '-45'
38 40 42 44 46 -45 0
c Encoding variable: grid_00001_00000 with domain: int(0..5) (representing constraint )
c Both direct and order encoding.
c Var 'grid_00001_00000' order represents '0' with '47'
c Var 'grid_00001_00000' direct represents '0' with '47'
c Var 'grid_00001_00000' order represents '1' with '48'
-47 48 0
c Var 'grid_00001_00000' direct represents '1' with '49'
47 -48 49 0
-49 48 0
-49 -47 0
c Var 'grid_00001_00000' order represents '2' with '50'
-48 50 0
c Var 'grid_00001_00000' direct represents '2' with '51'
48 -50 51 0
-51 50 0
-51 -48 0
c Var 'grid_00001_00000' order represents '3' with '52'
-50 52 0
c Var 'grid_00001_00000' direct represents '3' with '53'
50 -52 53 0
-53 52 0
-53 -50 0
c Var 'grid_00001_00000' order represents '4' with '54'
-52 54 0
c Var 'grid_00001_00000' direct represents '4' with '55'
52 -54 55 0
-55 54 0
-55 -52 0
c Var 'grid_00001_00000' direct represents '5' with '-54'
47 49 51 53 55 -54 0
c Encoding variable: grid_00001_00001 with domain: int(0..5) (representing constraint )
c Both direct and order encoding.
c Var 'grid_00001_00001' order represents '0' with '56'
c Var 'grid_00001_00001' direct represents '0' with '56'
c Var 'grid_00001_00001' order represents '1' with '57'
-56 57 0
c Var 'grid_00001_00001' direct represents '1' with '58'
56 -57 58 0
-58 57 0
-58 -56 0
c Var 'grid_00001_00001' order represents '2' with '59'
-57 59 0
c Var 'grid_00001_00001' direct represents '2' with '60'
57 -59 60 0
-60 59 0
-60 -57 0
c Var 'grid_00001_00001' order represents '3' with '61'
-59 61 0
c Var 'grid_00001_00001' direct represents '3' with '62'
59 -61 62 0
-62 61 0
-62 -59 0
c Var 'grid_00001_00001' order represents '4' with '63'
-61 63 0
c Var 'grid_00001_00001' direct represents '4' with '64'
61 -63 64 0
-64 63 0
-64 -61 0
c Var 'grid_00001_00001' direct represents '5' with '-63'
56 58 60 62 64 -63 0
c Encoding variable: grid_00001_00002 with domain: int(0..5) (representing constraint )
c Both direct and order encoding.
c Var 'grid_00001_00002' order represents '0' with '65'
c Var 'grid_00001_00002' direct represents '0' with '65'
c Var 'grid_00001_00002' order represents '1' with '66'
-65 66 0
c Var 'grid_00001_00002' direct represents '1' with '67'
65 -66 67 0
-67 66 0
-67 -65 0
c Var 'grid_00001_00002' order represents '2' with '68'
-66 68 0
c Var 'grid_00001_00002' direct represents '2' with '69'
66 -68 69 0
-69 68 0
-69 -66 0
c Var 'grid_00001_00002' order represents '3' with '70'
-68 70 0
c Var 'grid_00001_00002' direct represents '3' with '71'
68 -70 71 0
-71 70 0
-71 -68 0
c Var 'grid_00001_00002' order represents '4' with '72'
-70 72 0
c Var 'grid_00001_00002' direct represents '4' with '73'
70 -72 73 0
-73 72 0
-73 -70 0
c Var 'grid_00001_00002' direct represents '5' with '-72'
65 67 69 71 73 -72 0
c Encoding variable: grid_00001_00003 with domain: int(0..5) (representing constraint )
c Both direct and order encoding.
c Var 'grid_00001_00003' order represents '0' with '74'
c Var 'grid_00001_00003' direct represents '0' with '74'
c Var 'grid_00001_00003' order represents '1' with '75'
-74 75 0
c Var 'grid_00001_00003' direct represents '1' with '76'
74 -75 76 0
-76 75 0
-76 -74 0
c Var 'grid_00001_00003' order represents '2' with '77'
-75 77 0
c Var 'grid_00001_00003' direct represents '2' with '78'
75 -77 78 0
-78 77 0
-78 -75 0
c Var 'grid_00001_00003' order represents '3' with '79'
-77 79 0
c Var 'grid_00001_00003' direct represents '3' with '80'
77 -79 80 0
-80 79 0
-80 -77 0
c Var 'grid_00001_00003' order represents '4' with '81'
-79 81 0
c Var 'grid_00001_00003' direct represents '4' with '82'
79 -81 82 0
-82 81 0
-82 -79 0
c Var 'grid_00001_00003' direct represents '5' with '-81'
74 76 78 80 82 -81 0
c Encoding variable: grid_00001_00004 with domain: int(-4) (representing constraint )
c Var 'grid_00001_00004' direct represents '-4' with '83'
83 0
c Encoding variable: grid_00002_00000 with domain: int(-1) (representing constraint )
c Var 'grid_00002_00000' direct represents '-1' with '84'
84 0
c Encoding variable: grid_00002_00001 with domain: int(0..5) (representing constraint )
c Both direct and order encoding.
c Var 'grid_00002_00001' order represents '0' with '85'
c Var 'grid_00002_00001' direct represents '0' with '85'
c Var 'grid_00002_00001' order represents '1' with '86'
-85 86 0
c Var 'grid_00002_00001' direct represents '1' with '87'
85 -86 87 0
-87 86 0
-87 -85 0
c Var 'grid_00002_00001' order represents '2' with '88'
-86 88 0
c Var 'grid_00002_00001' direct represents '2' with '89'
86 -88 89 0
-89 88 0
-89 -86 0
c Var 'grid_00002_00001' order represents '3' with '90'
-88 90 0
c Var 'grid_00002_00001' direct represents '3' with '91'
88 -90 91 0
-91 90 0
-91 -88 0
c Var 'grid_00002_00001' order represents '4' with '92'
-90 92 0
c Var 'grid_00002_00001' direct represents '4' with '93'
90 -92 93 0
-93 92 0
-93 -90 0
c Var 'grid_00002_00001' direct represents '5' with '-92'
85 87 89 91 93 -92 0
c Encoding variable: grid_00002_00002 with domain: int(-2) (representing constraint )
c Var 'grid_00002_00002' direct represents '-2' with '94'
94 0
c Encoding variable: grid_00002_00003 with domain: int(-3) (representing constraint )
c Var 'grid_00002_00003' direct represents '-3' with '95'
95 0
c Encoding variable: grid_00002_00004 with domain: int(0..5) (representing constraint )
c Both direct and order encoding.
c Var 'grid_00002_00004' order represents '0' with '96'
c Var 'grid_00002_00004' direct represents '0' with '96'
c Var 'grid_00002_00004' order represents '1' with '97'
-96 97 0
c Var 'grid_00002_00004' direct represents '1' with '98'
96 -97 98 0
-98 97 0
-98 -96 0
c Var 'grid_00002_00004' order represents '2' with '99'
-97 99 0
c Var 'grid_00002_00004' direct represents '2' with '100'
97 -99 100 0
-100 99 0
-100 -97 0
c Var 'grid_00002_00004' order represents '3' with '101'
-99 101 0
c Var 'grid_00002_00004' direct represents '3' with '102'
99 -101 102 0
-102 101 0
-102 -99 0
c Var 'grid_00002_00004' order represents '4' with '103'
-101 103 0
c Var 'grid_00002_00004' direct represents '4' with '104'
101 -103 104 0
-104 103 0
-104 -101 0
c Var 'grid_00002_00004' direct represents '5' with '-103'
96 98 100 102 104 -103 0
c Encoding variable: grid_00003_00000 with domain: int(0..5) (representing constraint )
c Both direct and order encoding.
c Var 'grid_00003_00000' order represents '0' with '105'
c Var 'grid_00003_00000' direct represents '0' with '105'
c Var 'grid_00003_00000' order represents '1' with '106'
-105 106 0
c Var 'grid_00003_00000' direct represents '1' with '107'
105 -106 107 0
-107 106 0
-107 -105 0
c Var 'grid_00003_00000' order represents '2' with '108'
-106 108 0
c Var 'grid_00003_00000' direct represents '2' with '109'
106 -108 109 0
-109 108 0
-109 -106 0
c Var 'grid_00003_00000' order represents '3' with '110'
-108 110 0
c Var 'grid_00003_00000' direct represents '3' with '111'
108 -110 111 0
-111 110 0
-111 -108 0
c Var 'grid_00003_00000' order represents '4' with '112'
-110 112 0
c Var 'grid_00003_00000' direct represents '4' with '113'
110 -112 113 0
-113 112 0
-113 -110 0
c Var 'grid_00003_00000' direct represents '5' with '-112'
105 107 109 111 113 -112 0
c Encoding variable: grid_00003_00001 with domain: int(0..5) (representing constraint )
c Both direct and order encoding.
c Var 'grid_00003_00001' order represents '0' with '114'
c Var 'grid_00003_00001' direct represents '0' with '114'
c Var 'grid_00003_00001' order represents '1' with '115'
-114 115 0
c Var 'grid_00003_00001' direct represents '1' with '116'
114 -115 116 0
-116 115 0
-116 -114 0
c Var 'grid_00003_00001' order represents '2' with '117'
-115 117 0
c Var 'grid_00003_00001' direct represents '2' with '118'
115 -117 118 0
-118 117 0
-118 -115 0
c Var 'grid_00003_00001' order represents '3' with '119'
-117 119 0
c Var 'grid_00003_00001' direct represents '3' with '120'
117 -119 120 0
-120 119 0
-120 -117 0
c Var 'grid_00003_00001' order represents '4' with '121'
-119 121 0
c Var 'grid_00003_00001' direct represents '4' with '122'
119 -121 122 0
-122 121 0
-122 -119 0
c Var 'grid_00003_00001' direct represents '5' with '-121'
114 116 118 120 122 -121 0
c Encoding variable: grid_00003_00002 with domain: int(0..5) (representing constraint )
c Both direct and order encoding.
c Var 'grid_00003_00002' order represents '0' with '123'
c Var 'grid_00003_00002' direct represents '0' with '123'
c Var 'grid_00003_00002' order represents '1' with '124'
-123 124 0
c Var 'grid_00003_00002' direct represents '1' with '125'
123 -124 125 0
-125 124 0
-125 -123 0
c Var 'grid_00003_00002' order represents '2' with '126'
-124 126 0
c Var 'grid_00003_00002' direct represents '2' with '127'
124 -126 127 0
-127 126 0
-127 -124 0
c Var 'grid_00003_00002' order represents '3' with '128'
-126 128 0
c Var 'grid_00003_00002' direct represents '3' with '129'
126 -128 129 0
-129 128 0
-129 -126 0
c Var 'grid_00003_00002' order represents '4' with '130'
-128 130 0
c Var 'grid_00003_00002' direct represents '4' with '131'
128 -130 131 0
-131 130 0
-131 -128 0
c Var 'grid_00003_00002' direct represents '5' with '-130'
123 125 127 129 131 -130 0
c Encoding variable: grid_00003_00003 with domain: int(0..5) (representing constraint )
c Both direct and order encoding.
c Var 'grid_00003_00003' order represents '0' with '132'
c Var 'grid_00003_00003' direct represents '0' with '132'
c Var 'grid_00003_00003' order represents '1' with '133'
-132 133 0
c Var 'grid_00003_00003' direct represents '1' with '134'
132 -133 134 0
-134 133 0
-134 -132 0
c Var 'grid_00003_00003' order represents '2' with '135'
-133 135 0
c Var 'grid_00003_00003' direct represents '2' with '136'
133 -135 136 0
-136 135 0
-136 -133 0
c Var 'grid_00003_00003' order represents '3' with '137'
-135 137 0
c Var 'grid_00003_00003' direct represents '3' with '138'
135 -137 138 0
-138 137 0
-138 -135 0
c Var 'grid_00003_00003' order represents '4' with '139'
-137 139 0
c Var 'grid_00003_00003' direct represents '4' with '140'
137 -139 140 0
-140 139 0
-140 -137 0
c Var 'grid_00003_00003' direct represents '5' with '-139'
132 134 136 138 140 -139 0
c Encoding variable: grid_00003_00004 with domain: int(0..5) (representing constraint )
c Both direct and order encoding.
c Var 'grid_00003_00004' order represents '0' with '141'
c Var 'grid_00003_00004' direct represents '0' with '141'
c Var 'grid_00003_00004' order represents '1' with '142'
-141 142 0
c Var 'grid_00003_00004' direct represents '1' with '143'
141 -142 143 0
-143 142 0
-143 -141 0
c Var 'grid_00003_00004' order represents '2' with '144'
-142 144 0
c Var 'grid_00003_00004' direct represents '2' with '145'
142 -144 145 0
-145 144 0
-145 -142 0
c Var 'grid_00003_00004' order represents '3' with '146'
-144 146 0
c Var 'grid_00003_00004' direct represents '3' with '147'
144 -146 147 0
-147 146 0
-147 -144 0
c Var 'grid_00003_00004' order represents '4' with '148'
-146 148 0
c Var 'grid_00003_00004' direct represents '4' with '149'
146 -148 149 0
-149 148 0
-149 -146 0
c Var 'grid_00003_00004' direct represents '5' with '-148'
141 143 145 147 149 -148 0
c Encoding variable: grid_00004_00000 with domain: int(0..5) (representing constraint )
c Both direct and order encoding.
c Var 'grid_00004_00000' order represents '0' with '150'
c Var 'grid_00004_00000' direct represents '0' with '150'
c Var 'grid_00004_00000' order represents '1' with '151'
-150 151 0
c Var 'grid_00004_00000' direct represents '1' with '152'
150 -151 152 0
-152 151 0
-152 -150 0
c Var 'grid_00004_00000' order represents '2' with '153'
-151 153 0
c Var 'grid_00004_00000' direct represents '2' with '154'
151 -153 154 0
-154 153 0
-154 -151 0
c Var 'grid_00004_00000' order represents '3' with '155'
-153 155 0
c Var 'grid_00004_00000' direct represents '3' with '156'
153 -155 156 0
-156 155 0
-156 -153 0
c Var 'grid_00004_00000' order represents '4' with '157'
-155 157 0
c Var 'grid_00004_00000' direct represents '4' with '158'
155 -157 158 0
-158 157 0
-158 -155 0
c Var 'grid_00004_00000' direct represents '5' with '-157'
150 152 154 156 158 -157 0
c Encoding variable: grid_00004_00001 with domain: int(0..5) (representing constraint )
c Both direct and order encoding.
c Var 'grid_00004_00001' order represents '0' with '159'
c Var 'grid_00004_00001' direct represents '0' with '159'
c Var 'grid_00004_00001' order represents '1' with '160'
-159 160 0
c Var 'grid_00004_00001' direct represents '1' with '161'
159 -160 161 0
-161 160 0
-161 -159 0
c Var 'grid_00004_00001' order represents '2' with '162'
-160 162 0
c Var 'grid_00004_00001' direct represents '2' with '163'
160 -162 163 0
-163 162 0
-163 -160 0
c Var 'grid_00004_00001' order represents '3' with '164'
-162 164 0
c Var 'grid_00004_00001' direct represents '3' with '165'
162 -164 165 0
-165 164 0
-165 -162 0
c Var 'grid_00004_00001' order represents '4' with '166'
-164 166 0
c Var 'grid_00004_00001' direct represents '4' with '167'
164 -166 167 0
-167 166 0
-167 -164 0
c Var 'grid_00004_00001' direct represents '5' with '-166'
159 161 163 165 167 -166 0
c Encoding variable: grid_00004_00002 with domain: int(-5) (representing constraint )
c Var 'grid_00004_00002' direct represents '-5' with '168'
168 0
c Encoding variable: grid_00004_00003 with domain: int(0..5) (representing constraint )
c Both direct and order encoding.
c Var 'grid_00004_00003' order represents '0' with '169'
c Var 'grid_00004_00003' direct represents '0' with '169'
c Var 'grid_00004_00003' order represents '1' with '170'
-169 170 0
c Var 'grid_00004_00003' direct represents '1' with '171'
169 -170 171 0
-171 170 0
-171 -169 0
c Var 'grid_00004_00003' order represents '2' with '172'
-170 172 0
c Var 'grid_00004_00003' direct represents '2' with '173'
170 -172 173 0
-173 172 0
-173 -170 0
c Var 'grid_00004_00003' order represents '3' with '174'
-172 174 0
c Var 'grid_00004_00003' direct represents '3' with '175'
172 -174 175 0
-175 174 0
-175 -172 0
c Var 'grid_00004_00003' order represents '4' with '176'
-174 176 0
c Var 'grid_00004_00003' direct represents '4' with '177'
174 -176 177 0
-177 176 0
-177 -174 0
c Var 'grid_00004_00003' direct represents '5' with '-176'
169 171 173 175 177 -176 0
c Encoding variable: grid_00004_00004 with domain: int(0..5) (representing constraint )
c Both direct and order encoding.
c Var 'grid_00004_00004' order represents '0' with '178'
c Var 'grid_00004_00004' direct represents '0' with '178'
c Var 'grid_00004_00004' order represents '1' with '179'
-178 179 0
c Var 'grid_00004_00004' direct represents '1' with '180'
178 -179 180 0
-180 179 0
-180 -178 0
c Var 'grid_00004_00004' order represents '2' with '181'
-179 181 0
c Var 'grid_00004_00004' direct represents '2' with '182'
179 -181 182 0
-182 181 0
-182 -179 0
c Var 'grid_00004_00004' order represents '3' with '183'
-181 183 0
c Var 'grid_00004_00004' direct represents '3' with '184'
181 -183 184 0
-184 183 0
-184 -181 0
c Var 'grid_00004_00004' order represents '4' with '185'
-183 185 0
c Var 'grid_00004_00004' direct represents '4' with '186'
183 -185 186 0
-186 185 0
-186 -183 0
c Var 'grid_00004_00004' direct represents '5' with '-185'
178 180 182 184 186 -185 0
c Encoding variable: adj_00000_00000_n00001_n00001 with domain: bool (representing constraint )
c Var 'adj_00000_00000_n00001_n00001' direct represents '0' with '-187'
c Var 'adj_00000_00000_n00001_n00001' direct represents '1' with '187'
c Var 'adj_00000_00000_n00001_n00001' order represents '1' with '1'
c Var 'adj_00000_00000_n00001_n00001' order represents '0' with '-187'
187 -187 0
c Encoding variable: adj_00000_00000_n00001_00000 with domain: bool (representing constraint )
c Var 'adj_00000_00000_n00001_00000' direct represents '0' with '-188'
c Var 'adj_00000_00000_n00001_00000' direct represents '1' with '188'
c Var 'adj_00000_00000_n00001_00000' order represents '1' with '1'
c Var 'adj_00000_00000_n00001_00000' order represents '0' with '-188'
188 -188 0
c Encoding variable: adj_00000_00000_n00001_00001 with domain: bool (representing constraint )
c Var 'adj_00000_00000_n00001_00001' direct represents '0' with '-189'
c Var 'adj_00000_00000_n00001_00001' direct represents '1' with '189'
c Var 'adj_00000_00000_n00001_00001' order represents '1' with '1'
c Var 'adj_00000_00000_n00001_00001' order represents '0' with '-189'
189 -189 0
c Encoding variable: adj_00000_00000_00000_n00001 with domain: bool (representing constraint )
c Var 'adj_00000_00000_00000_n00001' direct represents '0' with '-190'
c Var 'adj_00000_00000_00000_n00001' direct represents '1' with '190'
c Var 'adj_00000_00000_00000_n00001' order represents '1' with '1'
c Var 'adj_00000_00000_00000_n00001' order represents '0' with '-190'
190 -190 0
c Encoding variable: adj_00000_00000_00000_00000 with domain: bool (representing constraint )
c Var 'adj_00000_00000_00000_00000' direct represents '0' with '-191'
c Var 'adj_00000_00000_00000_00000' direct represents '1' with '191'
c Var 'adj_00000_00000_00000_00000' order represents '1' with '1'
c Var 'adj_00000_00000_00000_00000' order represents '0' with '-191'
191 -191 0
c Encoding variable: adj_00000_00000_00000_00001 with domain: bool (representing constraint )
c Var 'adj_00000_00000_00000_00001' direct represents '0' with '-192'
c Var 'adj_00000_00000_00000_00001' direct represents '1' with '192'
c Var 'adj_00000_00000_00000_00001' order represents '1' with '1'
c Var 'adj_00000_00000_00000_00001' order represents '0' with '-192'
192 -192 0
c Encoding variable: adj_00000_00000_00001_n00001 with domain: bool (representing constraint )
c Var 'adj_00000_00000_00001_n00001' direct represents '0' with '-193'
c Var 'adj_00000_00000_00001_n00001' direct represents '1' with '193'
c Var 'adj_00000_00000_00001_n00001' order represents '1' with '1'
c Var 'adj_00000_00000_00001_n00001' order represents '0' with '-193'
193 -193 0
c Encoding variable: adj_00000_00000_00001_00000 with domain: bool (representing constraint )
c Var 'adj_00000_00000_00001_00000' direct represents '0' with '-194'
c Var 'adj_00000_00000_00001_00000' direct represents '1' with '194'
c Var 'adj_00000_00000_00001_00000' order represents '1' with '1'
c Var 'adj_00000_00000_00001_00000' order represents '0' with '-194'
c Encoding variable: adj_00000_00000_00001_00001 with domain: bool (representing constraint )
c Var 'adj_00000_00000_00001_00001' direct represents '0' with '-195'
c Var 'adj_00000_00000_00001_00001' direct represents '1' with '195'
c Var 'adj_00000_00000_00001_00001' order represents '1' with '1'
c Var 'adj_00000_00000_00001_00001' order represents '0' with '-195'
c Encoding variable: adj_00000_00001_n00001_n00001 with domain: bool (representing constraint )
c Var 'adj_00000_00001_n00001_n00001' direct represents '0' with '-196'
c Var 'adj_00000_00001_n00001_n00001' direct represents '1' with '196'
c Var 'adj_00000_00001_n00001_n00001' order represents '1' with '1'
c Var 'adj_00000_00001_n00001_n00001' order represents '0' with '-196'
196 -196 0
c Encoding variable: adj_00000_00001_n00001_00000 with domain: bool (representing constraint )
c Var 'adj_00000_00001_n00001_00000' direct represents '0' with '-197'
c Var 'adj_00000_00001_n00001_00000' direct represents '1' with '197'
c Var 'adj_00000_00001_n00001_00000' order represents '1' with '1'
c Var 'adj_00000_00001_n00001_00000' order represents '0' with '-197'
197 -197 0
c Encoding variable: adj_00000_00001_n00001_00001 with domain: bool (representing constraint )
c Var 'adj_00000_00001_n00001_00001' direct represents '0' with '-198'
c Var 'adj_00000_00001_n00001_00001' direct represents '1' with '198'
c Var 'adj_00000_00001_n00001_00001' order represents '1' with '1'
c Var 'adj_00000_00001_n00001_00001' order represents '0' with '-198'
198 -198 0
c Encoding variable: adj_00000_00001_00000_n00001 with domain: bool (representing constraint )
c Var 'adj_00000_00001_00000_n00001' direct represents '0' with '-199'
c Var 'adj_00000_00001_00000_n00001' direct represents '1' with '199'
c Var 'adj_00000_00001_00000_n00001' order represents '1' with '1'
c Var 'adj_00000_00001_00000_n00001' order represents '0' with '-199'
c Encoding variable: adj_00000_00001_00000_00000 with domain: bool (representing constraint )
c Var 'adj_00000_00001_00000_00000' direct represents '0' with '-200'
c Var 'adj_00000_00001_00000_00000' direct represents '1' with '200'
c Var 'adj_00000_00001_00000_00000' order represents '1' with '1'
c Var 'adj_00000_00001_00000_00000' order represents '0' with '-200'
200 -200 0
c Encoding variable: adj_00000_00001_00000_00001 with domain: bool (representing constraint )
c Var 'adj_00000_00001_00000_00001' direct represents '0' with '-201'
c Var 'adj_00000_00001_00000_00001' direct represents '1' with '201'
c Var 'adj_00000_00001_00000_00001' order represents '1' with '1'
c Var 'adj_00000_00001_00000_00001' order represents '0' with '-201'
201 -201 0
c Encoding variable: adj_00000_00001_00001_n00001 with domain: bool (representing constraint )
c Var 'adj_00000_00001_00001_n00001' direct represents '0' with '-202'
c Var 'adj_00000_00001_00001_n00001' direct represents '1' with '202'
c Var 'adj_00000_00001_00001_n00001' order represents '1' with '1'
c Var 'adj_00000_00001_00001_n00001' order represents '0' with '-202'
c Encoding variable: adj_00000_00001_00001_00000 with domain: bool (representing constraint )
c Var 'adj_00000_00001_00001_00000' direct represents '0' with '-203'
c Var 'adj_00000_00001_00001_00000' direct represents '1' with '203'
c Var 'adj_00000_00001_00001_00000' order represents '1' with '1'
c Var 'adj_00000_00001_00001_00000' order represents '0' with '-203'
c Encoding variable: adj_00000_00001_00001_00001 with domain: bool (representing constraint )
c Var 'adj_00000_00001_00001_00001' direct represents '0' with '-204'
c Var 'adj_00000_00001_00001_00001' direct represents '1' with '204'
c Var 'adj_00000_00001_00001_00001' order represents '1' with '1'
c Var 'adj_00000_00001_00001_00001' order represents '0' with '-204'
c Encoding variable: adj_00000_00002_n00001_n00001 with domain: bool (representing constraint )
c Var 'adj_00000_00002_n00001_n00001' direct represents '0' with '-205'
c Var 'adj_00000_00002_n00001_n00001' direct represents '1' with '205'
c Var 'adj_00000_00002_n00001_n00001' order represents '1' with '1'
c Var 'adj_00000_00002_n00001_n00001' order represents '0' with '-205'
205 -205 0
c Encoding variable: adj_00000_00002_n00001_00000 with domain: bool (representing constraint )
c Var 'adj_00000_00002_n00001_00000' direct represents '0' with '-206'
c Var 'adj_00000_00002_n00001_00000' direct represents '1' with '206'
c Var 'adj_00000_00002_n00001_00000' order represents '1' with '1'
c Var 'adj_00000_00002_n00001_00000' order represents '0' with '-206'
206 -206 0
c Encoding variable: adj_00000_00002_n00001_00001 with domain: bool (representing constraint )
c Var 'adj_00000_00002_n00001_00001' direct represents '0' with '-207'
c Var 'adj_00000_00002_n00001_00001' direct represents '1' with '207'
c Var 'adj_00000_00002_n00001_00001' order represents '1' with '1'
c Var 'adj_00000_00002_n00001_00001' order represents '0' with '-207'
207 -207 0
c Encoding variable: adj_00000_00002_00000_n00001 with domain: bool (representing constraint )
c Var 'adj_00000_00002_00000_n00001' direct represents '0' with '-208'
c Var 'adj_00000_00002_00000_n00001' direct represents '1' with '208'
c Var 'adj_00000_00002_00000_n00001' order represents '1' with '1'
c Var 'adj_00000_00002_00000_n00001' order represents '0' with '-208'
c Encoding variable: adj_00000_00002_00000_00000 with domain: bool (representing constraint )
c Var 'adj_00000_00002_00000_00000' direct represents '0' with '-209'
c Var 'adj_00000_00002_00000_00000' direct represents '1' with '209'
c Var 'adj_00000_00002_00000_00000' order represents '1' with '1'
c Var 'adj_00000_00002_00000_00000' order represents '0' with '-209'
209 -209 0
c Encoding variable: adj_00000_00002_00000_00001 with domain: bool (representing constraint )
c Var 'adj_00000_00002_00000_00001' direct represents '0' with '-210'
c Var 'adj_00000_00002_00000_00001' direct represents '1' with '210'
c Var 'adj_00000_00002_00000_00001' order represents '1' with '1'
c Var 'adj_00000_00002_00000_00001' order represents '0' with '-210'
210 -210 0
c Encoding variable: adj_00000_00002_00001_n00001 with domain: bool (representing constraint )
c Var 'adj_00000_00002_00001_n00001' direct represents '0' with '-211'
c Var 'adj_00000_00002_00001_n00001' direct represents '1' with '211'
c Var 'adj_00000_00002_00001_n00001' order represents '1' with '1'
c Var 'adj_00000_00002_00001_n00001' order represents '0' with '-211'
c Encoding variable: adj_00000_00002_00001_00000 with domain: bool (representing constraint )
c Var 'adj_00000_00002_00001_00000' direct represents '0' with '-212'
c Var 'adj_00000_00002_00001_00000' direct represents '1' with '212'
c Var 'adj_00000_00002_00001_00000' order represents '1' with '1'
c Var 'adj_00000_00002_00001_00000' order represents '0' with '-212'
c Encoding variable: adj_00000_00002_00001_00001 with domain: bool (representing constraint )
c Var 'adj_00000_00002_00001_00001' direct represents '0' with '-213'
c Var 'adj_00000_00002_00001_00001' direct represents '1' with '213'
c Var 'adj_00000_00002_00001_00001' order represents '1' with '1'
c Var 'adj_00000_00002_00001_00001' order represents '0' with '-213'
c Encoding variable: adj_00000_00003_n00001_n00001 with domain: bool (representing constraint )
c Var 'adj_00000_00003_n00001_n00001' direct represents '0' with '-214'
c Var 'adj_00000_00003_n00001_n00001' direct represents '1' with '214'
c Var 'adj_00000_00003_n00001_n00001' order represents '1' with '1'
c Var 'adj_00000_00003_n00001_n00001' order represents '0' with '-214'
214 -214 0
c Encoding variable: adj_00000_00003_n00001_00000 with domain: bool (representing constraint )
c Var 'adj_00000_00003_n00001_00000' direct represents '0' with '-215'
c Var 'adj_00000_00003_n00001_00000' direct represents '1' with '215'
c Var 'adj_00000_00003_n00001_00000' order represents '1' with '1'
c Var 'adj_00000_00003_n00001_00000' order represents '0' with '-215'
215 -215 0
c Encoding variable: adj_00000_00003_n00001_00001 with domain: bool (representing constraint )
c Var 'adj_00000_00003_n00001_00001' direct represents '0' with '-216'
c Var 'adj_00000_00003_n00001_00001' direct represents '1' with '216'
c Var 'adj_00000_00003_n00001_00001' order represents '1' with '1'
c Var 'adj_00000_00003_n00001_00001' order represents '0' with '-216'
216 -216 0
c Encoding variable: adj_00000_00003_00000_n00001 with domain: bool (representing constraint )
c Var 'adj_00000_00003_00000_n00001' direct represents '0' with '-217'
c Var 'adj_00000_00003_00000_n00001' direct represents '1' with '217'
c Var 'adj_00000_00003_00000_n00001' order represents '1' with '1'
c Var 'adj_00000_00003_00000_n00001' order represents '0' with '-217'
c Encoding variable: adj_00000_00003_00000_00000 with domain: bool (representing constraint )
c Var 'adj_00000_00003_00000_00000' direct represents '0' with '-218'
c Var 'adj_00000_00003_00000_00000' direct represents '1' with '218'
c Var 'adj_00000_00003_00000_00000' order represents '1' with '1'
c Var 'adj_00000_00003_00000_00000' order represents '0' with '-218'
218 -218 0
c Encoding variable: adj_00000_00003_00000_00001 with domain: bool (representing constraint )
c Var 'adj_00000_00003_00000_00001' direct represents '0' with '-219'
c Var 'adj_00000_00003_00000_00001' direct represents '1' with '219'
c Var 'adj_00000_00003_00000_00001' order represents '1' with '1'
c Var 'adj_00000_00003_00000_00001' order represents '0' with '-219'
219 -219 0
c Encoding variable: adj_00000_00003_00001_n00001 with domain: bool (representing constraint )
c Var 'adj_00000_00003_00001_n00001' direct represents '0' with '-220'
c Var 'adj_00000_00003_00001_n00001' direct represents '1' with '220'
c Var 'adj_00000_00003_00001_n00001' order represents '1' with '1'
c Var 'adj_00000_00003_00001_n00001' order represents '0' with '-220'
c Encoding variable: adj_00000_00003_00001_00000 with domain: bool (representing constraint )
c Var 'adj_00000_00003_00001_00000' direct represents '0' with '-221'
c Var 'adj_00000_00003_00001_00000' direct represents '1' with '221'
c Var 'adj_00000_00003_00001_00000' order represents '1' with '1'
c Var 'adj_00000_00003_00001_00000' order represents '0' with '-221'
c Encoding variable: adj_00000_00003_00001_00001 with domain: bool (representing constraint )
c Var 'adj_00000_00003_00001_00001' direct represents '0' with '-222'
c Var 'adj_00000_00003_00001_00001' direct represents '1' with '222'
c Var 'adj_00000_00003_00001_00001' order represents '1' with '1'
c Var 'adj_00000_00003_00001_00001' order represents '0' with '-222'
222 -222 0
c Encoding variable: adj_00000_00004_n00001_n00001 with domain: bool (representing constraint )
c Var 'adj_00000_00004_n00001_n00001' direct represents '0' with '-223'
c Var 'adj_00000_00004_n00001_n00001' direct represents '1' with '223'
c Var 'adj_00000_00004_n00001_n00001' order represents '1' with '1'
c Var 'adj_00000_00004_n00001_n00001' order represents '0' with '-223'
223 -223 0
c Encoding variable: adj_00000_00004_n00001_00000 with domain: bool (representing constraint )
c Var 'adj_00000_00004_n00001_00000' direct represents '0' with '-224'
c Var 'adj_00000_00004_n00001_00000' direct represents '1' with '224'
c Var 'adj_00000_00004_n00001_00000' order represents '1' with '1'
c Var 'adj_00000_00004_n00001_00000' order represents '0' with '-224'
224 -224 0
c Encoding variable: adj_00000_00004_n00001_00001 with domain: bool (representing constraint )
c Var 'adj_00000_00004_n00001_00001' direct represents '0' with '-225'
c Var 'adj_00000_00004_n00001_00001' direct represents '1' with '225'
c Var 'adj_00000_00004_n00001_00001' order represents '1' with '1'
c Var 'adj_00000_00004_n00001_00001' order represents '0' with '-225'
225 -225 0
c Encoding variable: adj_00000_00004_00000_n00001 with domain: bool (representing constraint )
c Var 'adj_00000_00004_00000_n00001' direct represents '0' with '-226'
c Var 'adj_00000_00004_00000_n00001' direct represents '1' with '226'
c Var 'adj_00000_00004_00000_n00001' order represents '1' with '1'
c Var 'adj_00000_00004_00000_n00001' order represents '0' with '-226'
c Encoding variable: adj_00000_00004_00000_00000 with domain: bool (representing constraint )
c Var 'adj_00000_00004_00000_00000' direct represents '0' with '-227'
c Var 'adj_00000_00004_00000_00000' direct represents '1' with '227'
c Var 'adj_00000_00004_00000_00000' order represents '1' with '1'
c Var 'adj_00000_00004_00000_00000' order represents '0' with '-227'
227 -227 0
c Encoding variable: adj_00000_00004_00000_00001 with domain: bool (representing constraint )
c Var 'adj_00000_00004_00000_00001' direct represents '0' with '-228'
c Var 'adj_00000_00004_00000_00001' direct represents '1' with '228'
c Var 'adj_00000_00004_00000_00001' order represents '1' with '1'
c Var 'adj_00000_00004_00000_00001' order represents '0' with '-228'
228 -228 0
c Encoding variable: adj_00000_00004_00001_n00001 with domain: bool (representing constraint )
c Var 'adj_00000_00004_00001_n00001' direct represents '0' with '-229'
c Var 'adj_00000_00004_00001_n00001' direct represents '1' with '229'
c Var 'adj_00000_00004_00001_n00001' order represents '1' with '1'
c Var 'adj_00000_00004_00001_n00001' order represents '0' with '-229'
c Encoding variable: adj_00000_00004_00001_00000 with domain: bool (representing constraint )
c Var 'adj_00000_00004_00001_00000' direct represents '0' with '-230'
c Var 'adj_00000_00004_00001_00000' direct represents '1' with '230'
c Var 'adj_00000_00004_00001_00000' order represents '1' with '1'
c Var 'adj_00000_00004_00001_00000' order represents '0' with '-230'
230 -230 0
c Encoding variable: adj_00000_00004_00001_00001 with domain: bool (representing constraint )
c Var 'adj_00000_00004_00001_00001' direct represents '0' with '-231'
c Var 'adj_00000_00004_00001_00001' direct represents '1' with '231'
c Var 'adj_00000_00004_00001_00001' order represents '1' with '1'
c Var 'adj_00000_00004_00001_00001' order represents '0' with '-231'
231 -231 0
c Encoding variable: adj_00001_00000_n00001_n00001 with domain: bool (representing constraint )
c Var 'adj_00001_00000_n00001_n00001' direct represents '0' with '-232'
c Var 'adj_00001_00000_n00001_n00001' direct represents '1' with '232'
c Var 'adj_00001_00000_n00001_n00001' order represents '1' with '1'
c Var 'adj_00001_00000_n00001_n00001' order represents '0' with '-232'
232 -232 0
c Encoding variable: adj_00001_00000_n00001_00000 with domain: bool (representing constraint )
c Var 'adj_00001_00000_n00001_00000' direct represents '0' with '-233'
c Var 'adj_00001_00000_n00001_00000' direct represents '1' with '233'
c Var 'adj_00001_00000_n00001_00000' order represents '1' with '1'
c Var 'adj_00001_00000_n00001_00000' order represents '0' with '-233'
233 -233 0
c Encoding variable: adj_00001_00000_n00001_00001 with domain: bool (representing constraint )
c Var 'adj_00001_00000_n00001_00001' direct represents '0' with '-234'
c Var 'adj_00001_00000_n00001_00001' direct represents '1' with '234'
c Var 'adj_00001_00000_n00001_00001' order represents '1' with '1'
c Var 'adj_00001_00000_n00001_00001' order represents '0' with '-234'
234 -234 0
c Encoding variable: adj_00001_00000_00000_n00001 with domain: bool (representing constraint )
c Var 'adj_00001_00000_00000_n00001' direct represents '0' with '-235'
c Var 'adj_00001_00000_00000_n00001' direct represents '1' with '235'
c Var 'adj_00001_00000_00000_n00001' order represents '1' with '1'
c Var 'adj_00001_00000_00000_n00001' order represents '0' with '-235'
235 -235 0
c Encoding variable: adj_00001_00000_00000_00000 with domain: bool (representing constraint )
c Var 'adj_00001_00000_00000_00000' direct represents '0' with '-236'
c Var 'adj_00001_00000_00000_00000' direct represents '1' with '236'
c Var 'adj_00001_00000_00000_00000' order represents '1' with '1'
c Var 'adj_00001_00000_00000_00000' order represents '0' with '-236'
236 -236 0
c Encoding variable: adj_00001_00000_00000_00001 with domain: bool (representing constraint )
c Var 'adj_00001_00000_00000_00001' direct represents '0' with '-237'
c Var 'adj_00001_00000_00000_00001' direct represents '1' with '237'
c Var 'adj_00001_00000_00000_00001' order represents '1' with '1'
c Var 'adj_00001_00000_00000_00001' order represents '0' with '-237'
237 -237 0
c Encoding variable: adj_00001_00000_00001_n00001 with domain: bool (representing constraint )
c Var 'adj_00001_00000_00001_n00001' direct represents '0' with '-238'
c Var 'adj_00001_00000_00001_n00001' direct represents '1' with '238'
c Var 'adj_00001_00000_00001_n00001' order represents '1' with '1'
c Var 'adj_00001_00000_00001_n00001' order represents '0' with '-238'
238 -238 0
c Encoding variable: adj_00001_00000_00001_00000 with domain: bool (representing constraint )
c Var 'adj_00001_00000_00001_00000' direct represents '0' with '-239'
c Var 'adj_00001_00000_00001_00000' direct represents '1' with '239'
c Var 'adj_00001_00000_00001_00000' order represents '1' with '1'
c Var 'adj_00001_00000_00001_00000' order represents '0' with '-239'
239 -239 0
c Encoding variable: adj_00001_00000_00001_00001 with domain: bool (representing constraint )
c Var 'adj_00001_00000_00001_00001' direct represents '0' with '-240'
c Var 'adj_00001_00000_00001_00001' direct represents '1' with '240'
c Var 'adj_00001_00000_00001_00001' order represents '1' with '1'
c Var 'adj_00001_00000_00001_00001' order represents '0' with '-240'
c Encoding variable: adj_00001_00001_n00001_n00001 with domain: bool (representing constraint )
c Var 'adj_00001_00001_n00001_n00001' direct represents '0' with '-241'
c Var 'adj_00001_00001_n00001_n00001' direct represents '1' with '241'
c Var 'adj_00001_00001_n00001_n00001' order represents '1' with '1'
c Var 'adj_00001_00001_n00001_n00001' order represents '0' with '-241'
241 -241 0
c Encoding variable: adj_00001_00001_n00001_00000 with domain: bool (representing constraint )
c Var 'adj_00001_00001_n00001_00000' direct represents '0' with '-242'
c Var 'adj_00001_00001_n00001_00000' direct represents '1' with '242'
c Var 'adj_00001_00001_n00001_00000' order represents '1' with '1'
c Var 'adj_00001_00001_n00001_00000' order represents '0' with '-242'
242 -242 0
c Encoding variable: adj_00001_00001_n00001_00001 with domain: bool (representing constraint )
c Var 'adj_00001_00001_n00001_00001' direct represents '0' with '-243'
c Var 'adj_00001_00001_n00001_00001' direct represents '1' with '243'
c Var 'adj_00001_00001_n00001_00001' order represents '1' with '1'
c Var 'adj_00001_00001_n00001_00001' order represents '0' with '-243'
243 -243 0
c Encoding variable: adj_00001_00001_00000_n00001 with domain: bool (representing constraint )
c Var 'adj_00001_00001_00000_n00001' direct represents '0' with '-244'
c Var 'adj_00001_00001_00000_n00001' direct represents '1' with '244'
c Var 'adj_00001_00001_00000_n00001' order represents '1' with '1'
c Var 'adj_00001_00001_00000_n00001' order represents '0' with '-244'
c Encoding variable: adj_00001_00001_00000_00000 with domain: bool (representing constraint )
c Var 'adj_00001_00001_00000_00000' direct represents '0' with '-245'
c Var 'adj_00001_00001_00000_00000' direct represents '1' with '245'
c Var 'adj_00001_00001_00000_00000' order represents '1' with '1'
c Var 'adj_00001_00001_00000_00000' order represents '0' with '-245'
245 -245 0
c Encoding variable: adj_00001_00001_00000_00001 with domain: bool (representing constraint )
c Var 'adj_00001_00001_00000_00001' direct represents '0' with '-246'
c Var 'adj_00001_00001_00000_00001' direct represents '1' with '246'
c Var 'adj_00001_00001_00000_00001' order represents '1' with '1'
c Var 'adj_00001_00001_00000_00001' order represents '0' with '-246'
246 -246 0
c Encoding variable: adj_00001_00001_00001_n00001 with domain: bool (representing constraint )
c Var 'adj_00001_00001_00001_n00001' direct represents '0' with '-247'
c Var 'adj_00001_00001_00001_n00001' direct represents '1' with '247'
c Var 'adj_00001_00001_00001_n00001' order represents '1' with '1'
c Var 'adj_00001_00001_00001_n00001' order represents '0' with '-247'
247 -247 0
c Encoding variable: adj_00001_00001_00001_00000 with domain: bool (representing constraint )
c Var 'adj_00001_00001_00001_00000' direct represents '0' with '-248'
c Var 'adj_00001_00001_00001_00000' direct represents '1' with '248'
c Var 'adj_00001_00001_00001_00000' order represents '1' with '1'
c Var 'adj_00001_00001_00001_00000' order represents '0' with '-248'
c Encoding variable: adj_00001_00001_00001_00001 with domain: bool (representing constraint )
c Var 'adj_00001_00001_00001_00001' direct represents '0' with '-249'
c Var 'adj_00001_00001_00001_00001' direct represents '1' with '249'
c Var 'adj_00001_00001_00001_00001' order represents '1' with '1'
c Var 'adj_00001_00001_00001_00001' order represents '0' with '-249'
249 -249 0
c Encoding variable: adj_00001_00002_n00001_n00001 with domain: bool (representing constraint )
c Var 'adj_00001_00002_n00001_n00001' direct represents '0' with '-250'
c Var 'adj_00001_00002_n00001_n00001' direct represents '1' with '250'
c Var 'adj_00001_00002_n00001_n00001' order represents '1' with '1'
c Var 'adj_00001_00002_n00001_n00001' order represents '0' with '-250'
250 -250 0
c Encoding variable: adj_00001_00002_n00001_00000 with domain: bool (representing constraint )
c Var 'adj_00001_00002_n00001_00000' direct represents '0' with '-251'
c Var 'adj_00001_00002_n00001_00000' direct represents '1' with '251'
c Var 'adj_00001_00002_n00001_00000' order represents '1' with '1'
c Var 'adj_00001_00002_n00001_00000' order represents '0' with '-251'
251 -251 0
c Encoding variable: adj_00001_00002_n00001_00001 with domain: bool (representing constraint )
c Var 'adj_00001_00002_n00001_00001' direct represents '0' with '-252'
c Var 'adj_00001_00002_n00001_00001' direct represents '1' with '252'
c Var 'adj_00001_00002_n00001_00001' order represents '1' with '1'
c Var 'adj_00001_00002_n00001_00001' order represents '0' with '-252'
252 -252 0
c Encoding variable: adj_00001_00002_00000_n00001 with domain: bool (representing constraint )
c Var 'adj_00001_00002_00000_n00001' direct represents '0' with '-253'
c Var 'adj_00001_00002_00000_n00001' direct represents '1' with '253'
c Var 'adj_00001_00002_00000_n00001' order represents '1' with '1'
c Var 'adj_00001_00002_00000_n00001' order represents '0' with '-253'
c Encoding variable: adj_00001_00002_00000_00000 with domain: bool (representing constraint )
c Var 'adj_00001_00002_00000_00000' direct represents '0' with '-254'
c Var 'adj_00001_00002_00000_00000' direct represents '1' with '254'
c Var 'adj_00001_00002_00000_00000' order represents '1' with '1'
c Var 'adj_00001_00002_00000_00000' order represents '0' with '-254'
254 -254 0
c Encoding variable: adj_00001_00002_00000_00001 with domain: bool (representing constraint )
c Var 'adj_00001_00002_00000_00001' direct represents '0' with '-255'
c Var 'adj_00001_00002_00000_00001' direct represents '1' with '255'
c Var 'adj_00001_00002_00000_00001' order represents '1' with '1'
c Var 'adj_00001_00002_00000_00001' order represents '0' with '-255'
255 -255 0
c Encoding variable: adj_00001_00002_00001_n00001 with domain: bool (representing constraint )
c Var 'adj_00001_00002_00001_n00001' direct represents '0' with '-256'
c Var 'adj_00001_00002_00001_n00001' direct represents '1' with '256'
c Var 'adj_00001_00002_00001_n00001' order represents '1' with '1'
c Var 'adj_00001_00002_00001_n00001' order represents '0' with '-256'
c Encoding variable: adj_00001_00002_00001_00000 with domain: bool (representing constraint )
c Var 'adj_00001_00002_00001_00000' direct represents '0' with '-257'
c Var 'adj_00001_00002_00001_00000' direct represents '1' with '257'
c Var 'adj_00001_00002_00001_00000' order represents '1' with '1'
c Var 'adj_00001_00002_00001_00000' order represents '0' with '-257'
257 -257 0
c Encoding variable: adj_00001_00002_00001_00001 with domain: bool (representing constraint )
c Var 'adj_00001_00002_00001_00001' direct represents '0' with '-258'
c Var 'adj_00001_00002_00001_00001' direct represents '1' with '258'
c Var 'adj_00001_00002_00001_00001' order represents '1' with '1'
c Var 'adj_00001_00002_00001_00001' order represents '0' with '-258'
258 -258 0
c Encoding variable: adj_00001_00003_n00001_n00001 with domain: bool (representing constraint )
c Var 'adj_00001_00003_n00001_n00001' direct represents '0' with '-259'
c Var 'adj_00001_00003_n00001_n00001' direct represents '1' with '259'
c Var 'adj_00001_00003_n00001_n00001' order represents '1' with '1'
c Var 'adj_00001_00003_n00001_n00001' order represents '0' with '-259'
259 -259 0
c Encoding variable: adj_00001_00003_n00001_00000 with domain: bool (representing constraint )
c Var 'adj_00001_00003_n00001_00000' direct represents '0' with '-260'
c Var 'adj_00001_00003_n00001_00000' direct represents '1' with '260'
c Var 'adj_00001_00003_n00001_00000' order represents '1' with '1'
c Var 'adj_00001_00003_n00001_00000' order represents '0' with '-260'
260 -260 0
c Encoding variable: adj_00001_00003_n00001_00001 with domain: bool (representing constraint )
c Var 'adj_00001_00003_n00001_00001' direct represents '0' with '-261'
c Var 'adj_00001_00003_n00001_00001' direct represents '1' with '261'
c Var 'adj_00001_00003_n00001_00001' order represents '1' with '1'
c Var 'adj_00001_00003_n00001_00001' order represents '0' with '-261'
261 -261 0
c Encoding variable: adj_00001_00003_00000_n00001 with domain: bool (representing constraint )
c Var 'adj_00001_00003_00000_n00001' direct represents '0' with '-262'
c Var 'adj_00001_00003_00000_n00001' direct represents '1' with '262'
c Var 'adj_00001_00003_00000_n00001' order represents '1' with '1'
c Var 'adj_00001_00003_00000_n00001' order represents '0' with '-262'
c Encoding variable: adj_00001_00003_00000_00000 with domain: bool (representing constraint )
c Var 'adj_00001_00003_00000_00000' direct represents '0' with '-263'
c Var 'adj_00001_00003_00000_00000' direct represents '1' with '263'
c Var 'adj_00001_00003_00000_00000' order represents '1' with '1'
c Var 'adj_00001_00003_00000_00000' order represents '0' with '-263'
263 -263 0
c Encoding variable: adj_00001_00003_00000_00001 with domain: bool (representing constraint )
c Var 'adj_00001_00003_00000_00001' direct represents '0' with '-264'
c Var 'adj_00001_00003_00000_00001' direct represents '1' with '264'
c Var 'adj_00001_00003_00000_00001' order represents '1' with '1'
c Var 'adj_00001_00003_00000_00001' order represents '0' with '-264'
264 -264 0
c Encoding variable: adj_00001_00003_00001_n00001 with domain: bool (representing constraint )
c Var 'adj_00001_00003_00001_n00001' direct represents '0' with '-265'
c Var 'adj_00001_00003_00001_n00001' direct represents '1' with '265'
c Var 'adj_00001_00003_00001_n00001' order represents '1' with '1'
c Var 'adj_00001_00003_00001_n00001' order represents '0' with '-265'
265 -265 0
c Encoding variable: adj_00001_00003_00001_00000 with domain: bool (representing constraint )
c Var 'adj_00001_00003_00001_00000' direct represents '0' with '-266'
c Var 'adj_00001_00003_00001_00000' direct represents '1' with '266'
c Var 'adj_00001_00003_00001_00000' order represents '1' with '1'
c Var 'adj_00001_00003_00001_00000' order represents '0' with '-266'
266 -266 0
c Encoding variable: adj_00001_00003_00001_00001 with domain: bool (representing constraint )
c Var 'adj_00001_00003_00001_00001' direct represents '0' with '-267'
c Var 'adj_00001_00003_00001_00001' direct represents '1' with '267'
c Var 'adj_00001_00003_00001_00001' order represents '1' with '1'
c Var 'adj_00001_00003_00001_00001' order represents '0' with '-267'
c Encoding variable: adj_00001_00004_n00001_n00001 with domain: bool (representing constraint )
c Var 'adj_00001_00004_n00001_n00001' direct represents '0' with '-268'
c Var 'adj_00001_00004_n00001_n00001' direct represents '1' with '268'
c Var 'adj_00001_00004_n00001_n00001' order represents '1' with '1'
c Var 'adj_00001_00004_n00001_n00001' order represents '0' with '-268'
268 -268 0
c Encoding variable: adj_00001_00004_n00001_00000 with domain: bool (representing constraint )
c Var 'adj_00001_00004_n00001_00000' direct represents '0' with '-269'
c Var 'adj_00001_00004_n00001_00000' direct represents '1' with '269'
c Var 'adj_00001_00004_n00001_00000' order represents '1' with '1'
c Var 'adj_00001_00004_n00001_00000' order represents '0' with '-269'
269 -269 0
c Encoding variable: adj_00001_00004_n00001_00001 with domain: bool (representing constraint )
c Var 'adj_00001_00004_n00001_00001' direct represents '0' with '-270'
c Var 'adj_00001_00004_n00001_00001' direct represents '1' with '270'
c Var 'adj_00001_00004_n00001_00001' order represents '1' with '1'
c Var 'adj_00001_00004_n00001_00001' order represents '0' with '-270'
270 -270 0
c Encoding variable: adj_00001_00004_00000_n00001 with domain: bool (representing constraint )
c Var 'adj_00001_00004_00000_n00001' direct represents '0' with '-271'
c Var 'adj_00001_00004_00000_n00001' direct represents '1' with '271'
c Var 'adj_00001_00004_00000_n00001' order represents '1' with '1'
c Var 'adj_00001_00004_00000_n00001' order represents '0' with '-271'
271 -271 0
c Encoding variable: adj_00001_00004_00000_00000 with domain: bool (representing constraint )
c Var 'adj_00001_00004_00000_00000' direct represents '0' with '-272'
c Var 'adj_00001_00004_00000_00000' direct represents '1' with '272'
c Var 'adj_00001_00004_00000_00000' order represents '1' with '1'
c Var 'adj_00001_00004_00000_00000' order represents '0' with '-272'
272 -272 0
c Encoding variable: adj_00001_00004_00000_00001 with domain: bool (representing constraint )
c Var 'adj_00001_00004_00000_00001' direct represents '0' with '-273'
c Var 'adj_00001_00004_00000_00001' direct represents '1' with '273'
c Var 'adj_00001_00004_00000_00001' order represents '1' with '1'
c Var 'adj_00001_00004_00000_00001' order represents '0' with '-273'
273 -273 0
c Encoding variable: adj_00001_00004_00001_n00001 with domain: bool (representing constraint )
c Var 'adj_00001_00004_00001_n00001' direct represents '0' with '-274'
c Var 'adj_00001_00004_00001_n00001' direct represents '1' with '274'
c Var 'adj_00001_00004_00001_n00001' order represents '1' with '1'
c Var 'adj_00001_00004_00001_n00001' order represents '0' with '-274'
274 -274 0
c Encoding variable: adj_00001_00004_00001_00000 with domain: bool (representing constraint )
c Var 'adj_00001_00004_00001_00000' direct represents '0' with '-275'
c Var 'adj_00001_00004_00001_00000' direct represents '1' with '275'
c Var 'adj_00001_00004_00001_00000' order represents '1' with '1'
c Var 'adj_00001_00004_00001_00000' order represents '0' with '-275'
275 -275 0
c Encoding variable: adj_00001_00004_00001_00001 with domain: bool (representing constraint )
c Var 'adj_00001_00004_00001_00001' direct represents '0' with '-276'
c Var 'adj_00001_00004_00001_00001' direct represents '1' with '276'
c Var 'adj_00001_00004_00001_00001' order represents '1' with '1'
c Var 'adj_00001_00004_00001_00001' order represents '0' with '-276'
276 -276 0
c Encoding variable: adj_00002_00000_n00001_n00001 with domain: bool (representing constraint )
c Var 'adj_00002_00000_n00001_n00001' direct represents '0' with '-277'
c Var 'adj_00002_00000_n00001_n00001' direct represents '1' with '277'
c Var 'adj_00002_00000_n00001_n00001' order represents '1' with '1'
c Var 'adj_00002_00000_n00001_n00001' order represents '0' with '-277'
277 -277 0
c Encoding variable: adj_00002_00000_n00001_00000 with domain: bool (representing constraint )
c Var 'adj_00002_00000_n00001_00000' direct represents '0' with '-278'
c Var 'adj_00002_00000_n00001_00000' direct represents '1' with '278'
c Var 'adj_00002_00000_n00001_00000' order represents '1' with '1'
c Var 'adj_00002_00000_n00001_00000' order represents '0' with '-278'
278 -278 0
c Encoding variable: adj_00002_00000_n00001_00001 with domain: bool (representing constraint )
c Var 'adj_00002_00000_n00001_00001' direct represents '0' with '-279'
c Var 'adj_00002_00000_n00001_00001' direct represents '1' with '279'
c Var 'adj_00002_00000_n00001_00001' order represents '1' with '1'
c Var 'adj_00002_00000_n00001_00001' order represents '0' with '-279'
279 -279 0
c Encoding variable: adj_00002_00000_00000_n00001 with domain: bool (representing constraint )
c Var 'adj_00002_00000_00000_n00001' direct represents '0' with '-280'
c Var 'adj_00002_00000_00000_n00001' direct represents '1' with '280'
c Var 'adj_00002_00000_00000_n00001' order represents '1' with '1'
c Var 'adj_00002_00000_00000_n00001' order represents '0' with '-280'
280 -280 0
c Encoding variable: adj_00002_00000_00000_00000 with domain: bool (representing constraint )
c Var 'adj_00002_00000_00000_00000' direct represents '0' with '-281'
c Var 'adj_00002_00000_00000_00000' direct represents '1' with '281'
c Var 'adj_00002_00000_00000_00000' order represents '1' with '1'
c Var 'adj_00002_00000_00000_00000' order represents '0' with '-281'
281 -281 0
c Encoding variable: adj_00002_00000_00000_00001 with domain: bool (representing constraint )
c Var 'adj_00002_00000_00000_00001' direct represents '0' with '-282'
c Var 'adj_00002_00000_00000_00001' direct represents '1' with '282'
c Var 'adj_00002_00000_00000_00001' order represents '1' with '1'
c Var 'adj_00002_00000_00000_00001' order represents '0' with '-282'
282 -282 0
c Encoding variable: adj_00002_00000_00001_n00001 with domain: bool (representing constraint )
c Var 'adj_00002_00000_00001_n00001' direct represents '0' with '-283'
c Var 'adj_00002_00000_00001_n00001' direct represents '1' with '283'
c Var 'adj_00002_00000_00001_n00001' order represents '1' with '1'
c Var 'adj_00002_00000_00001_n00001' order represents '0' with '-283'
283 -283 0
c Encoding variable: adj_00002_00000_00001_00000 with domain: bool (representing constraint )
c Var 'adj_00002_00000_00001_00000' direct represents '0' with '-284'
c Var 'adj_00002_00000_00001_00000' direct represents '1' with '284'
c Var 'adj_00002_00000_00001_00000' order represents '1' with '1'
c Var 'adj_00002_00000_00001_00000' order represents '0' with '-284'
284 -284 0
c Encoding variable: adj_00002_00000_00001_00001 with domain: bool (representing constraint )
c Var 'adj_00002_00000_00001_00001' direct represents '0' with '-285'
c Var 'adj_00002_00000_00001_00001' direct represents '1' with '285'
c Var 'adj_00002_00000_00001_00001' order represents '1' with '1'
c Var 'adj_00002_00000_00001_00001' order represents '0' with '-285'
285 -285 0
c Encoding variable: adj_00002_00001_n00001_n00001 with domain: bool (representing constraint )
c Var 'adj_00002_00001_n00001_n00001' direct represents '0' with '-286'
c Var 'adj_00002_00001_n00001_n00001' direct represents '1' with '286'
c Var 'adj_00002_00001_n00001_n00001' order represents '1' with '1'
c Var 'adj_00002_00001_n00001_n00001' order represents '0' with '-286'
286 -286 0
c Encoding variable: adj_00002_00001_n00001_00000 with domain: bool (representing constraint )
c Var 'adj_00002_00001_n00001_00000' direct represents '0' with '-287'
c Var 'adj_00002_00001_n00001_00000' direct represents '1' with '287'
c Var 'adj_00002_00001_n00001_00000' order represents '1' with '1'
c Var 'adj_00002_00001_n00001_00000' order represents '0' with '-287'
287 -287 0
c Encoding variable: adj_00002_00001_n00001_00001 with domain: bool (representing constraint )
c Var 'adj_00002_00001_n00001_00001' direct represents '0' with '-288'
c Var 'adj_00002_00001_n00001_00001' direct represents '1' with '288'
c Var 'adj_00002_00001_n00001_00001' order represents '1' with '1'
c Var 'adj_00002_00001_n00001_00001' order represents '0' with '-288'
288 -288 0
c Encoding variable: adj_00002_00001_00000_n00001 with domain: bool (representing constraint )
c Var 'adj_00002_00001_00000_n00001' direct represents '0' with '-289'
c Var 'adj_00002_00001_00000_n00001' direct represents '1' with '289'
c Var 'adj_00002_00001_00000_n00001' order represents '1' with '1'
c Var 'adj_00002_00001_00000_n00001' order represents '0' with '-289'
289 -289 0
c Encoding variable: adj_00002_00001_00000_00000 with domain: bool (representing constraint )
c Var 'adj_00002_00001_00000_00000' direct represents '0' with '-290'
c Var 'adj_00002_00001_00000_00000' direct represents '1' with '290'
c Var 'adj_00002_00001_00000_00000' order represents '1' with '1'
c Var 'adj_00002_00001_00000_00000' order represents '0' with '-290'
290 -290 0
c Encoding variable: adj_00002_00001_00000_00001 with domain: bool (representing constraint )
c Var 'adj_00002_00001_00000_00001' direct represents '0' with '-291'
c Var 'adj_00002_00001_00000_00001' direct represents '1' with '291'
c Var 'adj_00002_00001_00000_00001' order represents '1' with '1'
c Var 'adj_00002_00001_00000_00001' order represents '0' with '-291'
291 -291 0
c Encoding variable: adj_00002_00001_00001_n00001 with domain: bool (representing constraint )
c Var 'adj_00002_00001_00001_n00001' direct represents '0' with '-292'
c Var 'adj_00002_00001_00001_n00001' direct represents '1' with '292'
c Var 'adj_00002_00001_00001_n00001' order represents '1' with '1'
c Var 'adj_00002_00001_00001_n00001' order represents '0' with '-292'
c Encoding variable: adj_00002_00001_00001_00000 with domain: bool (representing constraint )
c Var 'adj_00002_00001_00001_00000' direct represents '0' with '-293'
c Var 'adj_00002_00001_00001_00000' direct represents '1' with '293'
c Var 'adj_00002_00001_00001_00000' order represents '1' with '1'
c Var 'adj_00002_00001_00001_00000' order represents '0' with '-293'
c Encoding variable: adj_00002_00001_00001_00001 with domain: bool (representing constraint )
c Var 'adj_00002_00001_00001_00001' direct represents '0' with '-294'
c Var 'adj_00002_00001_00001_00001' direct represents '1' with '294'
c Var 'adj_00002_00001_00001_00001' order represents '1' with '1'
c Var 'adj_00002_00001_00001_00001' order represents '0' with '-294'
c Encoding variable: adj_00002_00002_n00001_n00001 with domain: bool (representing constraint )
c Var 'adj_00002_00002_n00001_n00001' direct represents '0' with '-295'
c Var 'adj_00002_00002_n00001_n00001' direct represents '1' with '295'
c Var 'adj_00002_00002_n00001_n00001' order represents '1' with '1'
c Var 'adj_00002_00002_n00001_n00001' order represents '0' with '-295'
295 -295 0
c Encoding variable: adj_00002_00002_n00001_00000 with domain: bool (representing constraint )
c Var 'adj_00002_00002_n00001_00000' direct represents '0' with '-296'
c Var 'adj_00002_00002_n00001_00000' direct represents '1' with '296'
c Var 'adj_00002_00002_n00001_00000' order represents '1' with '1'
c Var 'adj_00002_00002_n00001_00000' order represents '0' with '-296'
296 -296 0
c Encoding variable: adj_00002_00002_n00001_00001 with domain: bool (representing constraint )
c Var 'adj_00002_00002_n00001_00001' direct represents '0' with '-297'
c Var 'adj_00002_00002_n00001_00001' direct represents '1' with '297'
c Var 'adj_00002_00002_n00001_00001' order represents '1' with '1'
c Var 'adj_00002_00002_n00001_00001' order represents '0' with '-297'
297 -297 0
c Encoding variable: adj_00002_00002_00000_n00001 with domain: bool (representing constraint )
c Var 'adj_00002_00002_00000_n00001' direct represents '0' with '-298'
c Var 'adj_00002_00002_00000_n00001' direct represents '1' with '298'
c Var 'adj_00002_00002_00000_n00001' order represents '1' with '1'
c Var 'adj_00002_00002_00000_n00001' order represents '0' with '-298'
298 -298 0
c Encoding variable: adj_00002_00002_00000_00000 with domain: bool (representing constraint )
c Var 'adj_00002_00002_00000_00000' direct represents '0' with '-299'
c Var 'adj_00002_00002_00000_00000' direct represents '1' with '299'
c Var 'adj_00002_00002_00000_00000' order represents '1' with '1'
c Var 'adj_00002_00002_00000_00000' order represents '0' with '-299'
299 -299 0
c Encoding variable: adj_00002_00002_00000_00001 with domain: bool (representing constraint )
c Var 'adj_00002_00002_00000_00001' direct represents '0' with '-300'
c Var 'adj_00002_00002_00000_00001' direct represents '1' with '300'
c Var 'adj_00002_00002_00000_00001' order represents '1' with '1'
c Var 'adj_00002_00002_00000_00001' order represents '0' with '-300'
300 -300 0
c Encoding variable: adj_00002_00002_00001_n00001 with domain: bool (representing constraint )
c Var 'adj_00002_00002_00001_n00001' direct represents '0' with '-301'
c Var 'adj_00002_00002_00001_n00001' direct represents '1' with '301'
c Var 'adj_00002_00002_00001_n00001' order represents '1' with '1'
c Var 'adj_00002_00002_00001_n00001' order represents '0' with '-301'
301 -301 0
c Encoding variable: adj_00002_00002_00001_00000 with domain: bool (representing constraint )
c Var 'adj_00002_00002_00001_00000' direct represents '0' with '-302'
c Var 'adj_00002_00002_00001_00000' direct represents '1' with '302'
c Var 'adj_00002_00002_00001_00000' order represents '1' with '1'
c Var 'adj_00002_00002_00001_00000' order represents '0' with '-302'
302 -302 0
c Encoding variable: adj_00002_00002_00001_00001 with domain: bool (representing constraint )
c Var 'adj_00002_00002_00001_00001' direct represents '0' with '-303'
c Var 'adj_00002_00002_00001_00001' direct represents '1' with '303'
c Var 'adj_00002_00002_00001_00001' order represents '1' with '1'
c Var 'adj_00002_00002_00001_00001' order represents '0' with '-303'
303 -303 0
c Encoding variable: adj_00002_00003_n00001_n00001 with domain: bool (representing constraint )
c Var 'adj_00002_00003_n00001_n00001' direct represents '0' with '-304'
c Var 'adj_00002_00003_n00001_n00001' direct represents '1' with '304'
c Var 'adj_00002_00003_n00001_n00001' order represents '1' with '1'
c Var 'adj_00002_00003_n00001_n00001' order represents '0' with '-304'
304 -304 0
c Encoding variable: adj_00002_00003_n00001_00000 with domain: bool (representing constraint )
c Var 'adj_00002_00003_n00001_00000' direct represents '0' with '-305'
c Var 'adj_00002_00003_n00001_00000' direct represents '1' with '305'
c Var 'adj_00002_00003_n00001_00000' order represents '1' with '1'
c Var 'adj_00002_00003_n00001_00000' order represents '0' with '-305'
305 -305 0
c Encoding variable: adj_00002_00003_n00001_00001 with domain: bool (representing constraint )
c Var 'adj_00002_00003_n00001_00001' direct represents '0' with '-306'
c Var 'adj_00002_00003_n00001_00001' direct represents '1' with '306'
c Var 'adj_00002_00003_n00001_00001' order represents '1' with '1'
c Var 'adj_00002_00003_n00001_00001' order represents '0' with '-306'
306 -306 0
c Encoding variable: adj_00002_00003_00000_n00001 with domain: bool (representing constraint )
c Var 'adj_00002_00003_00000_n00001' direct represents '0' with '-307'
c Var 'adj_00002_00003_00000_n00001' direct represents '1' with '307'
c Var 'adj_00002_00003_00000_n00001' order represents '1' with '1'
c Var 'adj_00002_00003_00000_n00001' order represents '0' with '-307'
307 -307 0
c Encoding variable: adj_00002_00003_00000_00000 with domain: bool (representing constraint )
c Var 'adj_00002_00003_00000_00000' direct represents '0' with '-308'
c Var 'adj_00002_00003_00000_00000' direct represents '1' with '308'
c Var 'adj_00002_00003_00000_00000' order represents '1' with '1'
c Var 'adj_00002_00003_00000_00000' order represents '0' with '-308'
308 -308 0
c Encoding variable: adj_00002_00003_00000_00001 with domain: bool (representing constraint )
c Var 'adj_00002_00003_00000_00001' direct represents '0' with '-309'
c Var 'adj_00002_00003_00000_00001' direct represents '1' with '309'
c Var 'adj_00002_00003_00000_00001' order represents '1' with '1'
c Var 'adj_00002_00003_00000_00001' order represents '0' with '-309'
309 -309 0
c Encoding variable: adj_00002_00003_00001_n00001 with domain: bool (representing constraint )
c Var 'adj_00002_00003_00001_n00001' direct represents '0' with '-310'
c Var 'adj_00002_00003_00001_n00001' direct represents '1' with '310'
c Var 'adj_00002_00003_00001_n00001' order represents '1' with '1'
c Var 'adj_00002_00003_00001_n00001' order represents '0' with '-310'
310 -310 0
c Encoding variable: adj_00002_00003_00001_00000 with domain: bool (representing constraint )
c Var 'adj_00002_00003_00001_00000' direct represents '0' with '-311'
c Var 'adj_00002_00003_00001_00000' direct represents '1' with '311'
c Var 'adj_00002_00003_00001_00000' order represents '1' with '1'
c Var 'adj_00002_00003_00001_00000' order represents '0' with '-311'
311 -311 0
c Encoding variable: adj_00002_00003_00001_00001 with domain: bool (representing constraint )
c Var 'adj_00002_00003_00001_00001' direct represents '0' with '-312'
c Var 'adj_00002_00003_00001_00001' direct represents '1' with '312'
c Var 'adj_00002_00003_00001_00001' order represents '1' with '1'
c Var 'adj_00002_00003_00001_00001' order represents '0' with '-312'
312 -312 0
c Encoding variable: adj_00002_00004_n00001_n00001 with domain: bool (representing constraint )
c Var 'adj_00002_00004_n00001_n00001' direct represents '0' with '-313'
c Var 'adj_00002_00004_n00001_n00001' direct represents '1' with '313'
c Var 'adj_00002_00004_n00001_n00001' order represents '1' with '1'
c Var 'adj_00002_00004_n00001_n00001' order represents '0' with '-313'
313 -313 0
c Encoding variable: adj_00002_00004_n00001_00000 with domain: bool (representing constraint )
c Var 'adj_00002_00004_n00001_00000' direct represents '0' with '-314'
c Var 'adj_00002_00004_n00001_00000' direct represents '1' with '314'
c Var 'adj_00002_00004_n00001_00000' order represents '1' with '1'
c Var 'adj_00002_00004_n00001_00000' order represents '0' with '-314'
314 -314 0
c Encoding variable: adj_00002_00004_n00001_00001 with domain: bool (representing constraint )
c Var 'adj_00002_00004_n00001_00001' direct represents '0' with '-315'
c Var 'adj_00002_00004_n00001_00001' direct represents '1' with '315'
c Var 'adj_00002_00004_n00001_00001' order represents '1' with '1'
c Var 'adj_00002_00004_n00001_00001' order represents '0' with '-315'
315 -315 0
c Encoding variable: adj_00002_00004_00000_n00001 with domain: bool (representing constraint )
c Var 'adj_00002_00004_00000_n00001' direct represents '0' with '-316'
c Var 'adj_00002_00004_00000_n00001' direct represents '1' with '316'
c Var 'adj_00002_00004_00000_n00001' order represents '1' with '1'
c Var 'adj_00002_00004_00000_n00001' order represents '0' with '-316'
316 -316 0
c Encoding variable: adj_00002_00004_00000_00000 with domain: bool (representing constraint )
c Var 'adj_00002_00004_00000_00000' direct represents '0' with '-317'
c Var 'adj_00002_00004_00000_00000' direct represents '1' with '317'
c Var 'adj_00002_00004_00000_00000' order represents '1' with '1'
c Var 'adj_00002_00004_00000_00000' order represents '0' with '-317'
317 -317 0
c Encoding variable: adj_00002_00004_00000_00001 with domain: bool (representing constraint )
c Var 'adj_00002_00004_00000_00001' direct represents '0' with '-318'
c Var 'adj_00002_00004_00000_00001' direct represents '1' with '318'
c Var 'adj_00002_00004_00000_00001' order represents '1' with '1'
c Var 'adj_00002_00004_00000_00001' order represents '0' with '-318'
318 -318 0
c Encoding variable: adj_00002_00004_00001_n00001 with domain: bool (representing constraint )
c Var 'adj_00002_00004_00001_n00001' direct represents '0' with '-319'
c Var 'adj_00002_00004_00001_n00001' direct represents '1' with '319'
c Var 'adj_00002_00004_00001_n00001' order represents '1' with '1'
c Var 'adj_00002_00004_00001_n00001' order represents '0' with '-319'
c Encoding variable: adj_00002_00004_00001_00000 with domain: bool (representing constraint )
c Var 'adj_00002_00004_00001_00000' direct represents '0' with '-320'
c Var 'adj_00002_00004_00001_00000' direct represents '1' with '320'
c Var 'adj_00002_00004_00001_00000' order represents '1' with '1'
c Var 'adj_00002_00004_00001_00000' order represents '0' with '-320'
c Encoding variable: adj_00002_00004_00001_00001 with domain: bool (representing constraint )
c Var 'adj_00002_00004_00001_00001' direct represents '0' with '-321'
c Var 'adj_00002_00004_00001_00001' direct represents '1' with '321'
c Var 'adj_00002_00004_00001_00001' order represents '1' with '1'
c Var 'adj_00002_00004_00001_00001' order represents '0' with '-321'
321 -321 0
c Encoding variable: adj_00003_00000_n00001_n00001 with domain: bool (representing constraint )
c Var 'adj_00003_00000_n00001_n00001' direct represents '0' with '-322'
c Var 'adj_00003_00000_n00001_n00001' direct represents '1' with '322'
c Var 'adj_00003_00000_n00001_n00001' order represents '1' with '1'
c Var 'adj_00003_00000_n00001_n00001' order represents '0' with '-322'
322 -322 0
c Encoding variable: adj_00003_00000_n00001_00000 with domain: bool (representing constraint )
c Var 'adj_00003_00000_n00001_00000' direct represents '0' with '-323'
c Var 'adj_00003_00000_n00001_00000' direct represents '1' with '323'
c Var 'adj_00003_00000_n00001_00000' order represents '1' with '1'
c Var 'adj_00003_00000_n00001_00000' order represents '0' with '-323'
323 -323 0
c Encoding variable: adj_00003_00000_n00001_00001 with domain: bool (representing constraint )
c Var 'adj_00003_00000_n00001_00001' direct represents '0' with '-324'
c Var 'adj_00003_00000_n00001_00001' direct represents '1' with '324'
c Var 'adj_00003_00000_n00001_00001' order represents '1' with '1'
c Var 'adj_00003_00000_n00001_00001' order represents '0' with '-324'
324 -324 0
c Encoding variable: adj_00003_00000_00000_n00001 with domain: bool (representing constraint )
c Var 'adj_00003_00000_00000_n00001' direct represents '0' with '-325'
c Var 'adj_00003_00000_00000_n00001' direct represents '1' with '325'
c Var 'adj_00003_00000_00000_n00001' order represents '1' with '1'
c Var 'adj_00003_00000_00000_n00001' order represents '0' with '-325'
325 -325 0
c Encoding variable: adj_00003_00000_00000_00000 with domain: bool (representing constraint )
c Var 'adj_00003_00000_00000_00000' direct represents '0' with '-326'
c Var 'adj_00003_00000_00000_00000' direct represents '1' with '326'
c Var 'adj_00003_00000_00000_00000' order represents '1' with '1'
c Var 'adj_00003_00000_00000_00000' order represents '0' with '-326'
326 -326 0
c Encoding variable: adj_00003_00000_00000_00001 with domain: bool (representing constraint )
c Var 'adj_00003_00000_00000_00001' direct represents '0' with '-327'
c Var 'adj_00003_00000_00000_00001' direct represents '1' with '327'
c Var 'adj_00003_00000_00000_00001' order represents '1' with '1'
c Var 'adj_00003_00000_00000_00001' order represents '0' with '-327'
327 -327 0
c Encoding variable: adj_00003_00000_00001_n00001 with domain: bool (representing constraint )
c Var 'adj_00003_00000_00001_n00001' direct represents '0' with '-328'
c Var 'adj_00003_00000_00001_n00001' direct represents '1' with '328'
c Var 'adj_00003_00000_00001_n00001' order represents '1' with '1'
c Var 'adj_00003_00000_00001_n00001' order represents '0' with '-328'
328 -328 0
c Encoding variable: adj_00003_00000_00001_00000 with domain: bool (representing constraint )
c Var 'adj_00003_00000_00001_00000' direct represents '0' with '-329'
c Var 'adj_00003_00000_00001_00000' direct represents '1' with '329'
c Var 'adj_00003_00000_00001_00000' order represents '1' with '1'
c Var 'adj_00003_00000_00001_00000' order represents '0' with '-329'
c Encoding variable: adj_00003_00000_00001_00001 with domain: bool (representing constraint )
c Var 'adj_00003_00000_00001_00001' direct represents '0' with '-330'
c Var 'adj_00003_00000_00001_00001' direct represents '1' with '330'
c Var 'adj_00003_00000_00001_00001' order represents '1' with '1'
c Var 'adj_00003_00000_00001_00001' order represents '0' with '-330'
c Encoding variable: adj_00003_00001_n00001_n00001 with domain: bool (representing constraint )
c Var 'adj_00003_00001_n00001_n00001' direct represents '0' with '-331'
c Var 'adj_00003_00001_n00001_n00001' direct represents '1' with '331'
c Var 'adj_00003_00001_n00001_n00001' order represents '1' with '1'
c Var 'adj_00003_00001_n00001_n00001' order represents '0' with '-331'
331 -331 0
c Encoding variable: adj_00003_00001_n00001_00000 with domain: bool (representing constraint )
c Var 'adj_00003_00001_n00001_00000' direct represents '0' with '-332'
c Var 'adj_00003_00001_n00001_00000' direct represents '1' with '332'
c Var 'adj_00003_00001_n00001_00000' order represents '1' with '1'
c Var 'adj_00003_00001_n00001_00000' order represents '0' with '-332'
332 -332 0
c Encoding variable: adj_00003_00001_n00001_00001 with domain: bool (representing constraint )
c Var 'adj_00003_00001_n00001_00001' direct represents '0' with '-333'
c Var 'adj_00003_00001_n00001_00001' direct represents '1' with '333'
c Var 'adj_00003_00001_n00001_00001' order represents '1' with '1'
c Var 'adj_00003_00001_n00001_00001' order represents '0' with '-333'
333 -333 0
c Encoding variable: adj_00003_00001_00000_n00001 with domain: bool (representing constraint )
c Var 'adj_00003_00001_00000_n00001' direct represents '0' with '-334'
c Var 'adj_00003_00001_00000_n00001' direct represents '1' with '334'
c Var 'adj_00003_00001_00000_n00001' order represents '1' with '1'
c Var 'adj_00003_00001_00000_n00001' order represents '0' with '-334'
c Encoding variable: adj_00003_00001_00000_00000 with domain: bool (representing constraint )
c Var 'adj_00003_00001_00000_00000' direct represents '0' with '-335'
c Var 'adj_00003_00001_00000_00000' direct represents '1' with '335'
c Var 'adj_00003_00001_00000_00000' order represents '1' with '1'
c Var 'adj_00003_00001_00000_00000' order represents '0' with '-335'
335 -335 0
c Encoding variable: adj_00003_00001_00000_00001 with domain: bool (representing constraint )
c Var 'adj_00003_00001_00000_00001' direct represents '0' with '-336'
c Var 'adj_00003_00001_00000_00001' direct represents '1' with '336'
c Var 'adj_00003_00001_00000_00001' order represents '1' with '1'
c Var 'adj_00003_00001_00000_00001' order represents '0' with '-336'
336 -336 0
c Encoding variable: adj_00003_00001_00001_n00001 with domain: bool (representing constraint )
c Var 'adj_00003_00001_00001_n00001' direct represents '0' with '-337'
c Var 'adj_00003_00001_00001_n00001' direct represents '1' with '337'
c Var 'adj_00003_00001_00001_n00001' order represents '1' with '1'
c Var 'adj_00003_00001_00001_n00001' order represents '0' with '-337'
c Encoding variable: adj_00003_00001_00001_00000 with domain: bool (representing constraint )
c Var 'adj_00003_00001_00001_00000' direct represents '0' with '-338'
c Var 'adj_00003_00001_00001_00000' direct represents '1' with '338'
c Var 'adj_00003_00001_00001_00000' order represents '1' with '1'
c Var 'adj_00003_00001_00001_00000' order represents '0' with '-338'
c Encoding variable: adj_00003_00001_00001_00001 with domain: bool (representing constraint )
c Var 'adj_00003_00001_00001_00001' direct represents '0' with '-339'
c Var 'adj_00003_00001_00001_00001' direct represents '1' with '339'
c Var 'adj_00003_00001_00001_00001' order represents '1' with '1'
c Var 'adj_00003_00001_00001_00001' order represents '0' with '-339'
339 -339 0
c Encoding variable: adj_00003_00002_n00001_n00001 with domain: bool (representing constraint )
c Var 'adj_00003_00002_n00001_n00001' direct represents '0' with '-340'
c Var 'adj_00003_00002_n00001_n00001' direct represents '1' with '340'
c Var 'adj_00003_00002_n00001_n00001' order represents '1' with '1'
c Var 'adj_00003_00002_n00001_n00001' order represents '0' with '-340'
340 -340 0
c Encoding variable: adj_00003_00002_n00001_00000 with domain: bool (representing constraint )
c Var 'adj_00003_00002_n00001_00000' direct represents '0' with '-341'
c Var 'adj_00003_00002_n00001_00000' direct represents '1' with '341'
c Var 'adj_00003_00002_n00001_00000' order represents '1' with '1'
c Var 'adj_00003_00002_n00001_00000' order represents '0' with '-341'
341 -341 0
c Encoding variable: adj_00003_00002_n00001_00001 with domain: bool (representing constraint )
c Var 'adj_00003_00002_n00001_00001' direct represents '0' with '-342'
c Var 'adj_00003_00002_n00001_00001' direct represents '1' with '342'
c Var 'adj_00003_00002_n00001_00001' order represents '1' with '1'
c Var 'adj_00003_00002_n00001_00001' order represents '0' with '-342'
342 -342 0
c Encoding variable: adj_00003_00002_00000_n00001 with domain: bool (representing constraint )
c Var 'adj_00003_00002_00000_n00001' direct represents '0' with '-343'
c Var 'adj_00003_00002_00000_n00001' direct represents '1' with '343'
c Var 'adj_00003_00002_00000_n00001' order represents '1' with '1'
c Var 'adj_00003_00002_00000_n00001' order represents '0' with '-343'
c Encoding variable: adj_00003_00002_00000_00000 with domain: bool (representing constraint )
c Var 'adj_00003_00002_00000_00000' direct represents '0' with '-344'
c Var 'adj_00003_00002_00000_00000' direct represents '1' with '344'
c Var 'adj_00003_00002_00000_00000' order represents '1' with '1'
c Var 'adj_00003_00002_00000_00000' order represents '0' with '-344'
344 -344 0
c Encoding variable: adj_00003_00002_00000_00001 with domain: bool (representing constraint )
c Var 'adj_00003_00002_00000_00001' direct represents '0' with '-345'
c Var 'adj_00003_00002_00000_00001' direct represents '1' with '345'
c Var 'adj_00003_00002_00000_00001' order represents '1' with '1'
c Var 'adj_00003_00002_00000_00001' order represents '0' with '-345'
345 -345 0
c Encoding variable: adj_00003_00002_00001_n00001 with domain: bool (representing constraint )
c Var 'adj_00003_00002_00001_n00001' direct represents '0' with '-346'
c Var 'adj_00003_00002_00001_n00001' direct represents '1' with '346'
c Var 'adj_00003_00002_00001_n00001' order represents '1' with '1'
c Var 'adj_00003_00002_00001_n00001' order represents '0' with '-346'
c Encoding variable: adj_00003_00002_00001_00000 with domain: bool (representing constraint )
c Var 'adj_00003_00002_00001_00000' direct represents '0' with '-347'
c Var 'adj_00003_00002_00001_00000' direct represents '1' with '347'
c Var 'adj_00003_00002_00001_00000' order represents '1' with '1'
c Var 'adj_00003_00002_00001_00000' order represents '0' with '-347'
347 -347 0
c Encoding variable: adj_00003_00002_00001_00001 with domain: bool (representing constraint )
c Var 'adj_00003_00002_00001_00001' direct represents '0' with '-348'
c Var 'adj_00003_00002_00001_00001' direct represents '1' with '348'
c Var 'adj_00003_00002_00001_00001' order represents '1' with '1'
c Var 'adj_00003_00002_00001_00001' order represents '0' with '-348'
c Encoding variable: adj_00003_00003_n00001_n00001 with domain: bool (representing constraint )
c Var 'adj_00003_00003_n00001_n00001' direct represents '0' with '-349'
c Var 'adj_00003_00003_n00001_n00001' direct represents '1' with '349'
c Var 'adj_00003_00003_n00001_n00001' order represents '1' with '1'
c Var 'adj_00003_00003_n00001_n00001' order represents '0' with '-349'
349 -349 0
c Encoding variable: adj_00003_00003_n00001_00000 with domain: bool (representing constraint )
c Var 'adj_00003_00003_n00001_00000' direct represents '0' with '-350'
c Var 'adj_00003_00003_n00001_00000' direct represents '1' with '350'
c Var 'adj_00003_00003_n00001_00000' order represents '1' with '1'
c Var 'adj_00003_00003_n00001_00000' order represents '0' with '-350'
350 -350 0
c Encoding variable: adj_00003_00003_n00001_00001 with domain: bool (representing constraint )
c Var 'adj_00003_00003_n00001_00001' direct represents '0' with '-351'
c Var 'adj_00003_00003_n00001_00001' direct represents '1' with '351'
c Var 'adj_00003_00003_n00001_00001' order represents '1' with '1'
c Var 'adj_00003_00003_n00001_00001' order represents '0' with '-351'
351 -351 0
c Encoding variable: adj_00003_00003_00000_n00001 with domain: bool (representing constraint )
c Var 'adj_00003_00003_00000_n00001' direct represents '0' with '-352'
c Var 'adj_00003_00003_00000_n00001' direct represents '1' with '352'
c Var 'adj_00003_00003_00000_n00001' order represents '1' with '1'
c Var 'adj_00003_00003_00000_n00001' order represents '0' with '-352'
c Encoding variable: adj_00003_00003_00000_00000 with domain: bool (representing constraint )
c Var 'adj_00003_00003_00000_00000' direct represents '0' with '-353'
c Var 'adj_00003_00003_00000_00000' direct represents '1' with '353'
c Var 'adj_00003_00003_00000_00000' order represents '1' with '1'
c Var 'adj_00003_00003_00000_00000' order represents '0' with '-353'
353 -353 0
c Encoding variable: adj_00003_00003_00000_00001 with domain: bool (representing constraint )
c Var 'adj_00003_00003_00000_00001' direct represents '0' with '-354'
c Var 'adj_00003_00003_00000_00001' direct represents '1' with '354'
c Var 'adj_00003_00003_00000_00001' order represents '1' with '1'
c Var 'adj_00003_00003_00000_00001' order represents '0' with '-354'
354 -354 0
c Encoding variable: adj_00003_00003_00001_n00001 with domain: bool (representing constraint )
c Var 'adj_00003_00003_00001_n00001' direct represents '0' with '-355'
c Var 'adj_00003_00003_00001_n00001' direct represents '1' with '355'
c Var 'adj_00003_00003_00001_n00001' order represents '1' with '1'
c Var 'adj_00003_00003_00001_n00001' order represents '0' with '-355'
355 -355 0
c Encoding variable: adj_00003_00003_00001_00000 with domain: bool (representing constraint )
c Var 'adj_00003_00003_00001_00000' direct represents '0' with '-356'
c Var 'adj_00003_00003_00001_00000' direct represents '1' with '356'
c Var 'adj_00003_00003_00001_00000' order represents '1' with '1'
c Var 'adj_00003_00003_00001_00000' order represents '0' with '-356'
c Encoding variable: adj_00003_00003_00001_00001 with domain: bool (representing constraint )
c Var 'adj_00003_00003_00001_00001' direct represents '0' with '-357'
c Var 'adj_00003_00003_00001_00001' direct represents '1' with '357'
c Var 'adj_00003_00003_00001_00001' order represents '1' with '1'
c Var 'adj_00003_00003_00001_00001' order represents '0' with '-357'
c Encoding variable: adj_00003_00004_n00001_n00001 with domain: bool (representing constraint )
c Var 'adj_00003_00004_n00001_n00001' direct represents '0' with '-358'
c Var 'adj_00003_00004_n00001_n00001' direct represents '1' with '358'
c Var 'adj_00003_00004_n00001_n00001' order represents '1' with '1'
c Var 'adj_00003_00004_n00001_n00001' order represents '0' with '-358'
358 -358 0
c Encoding variable: adj_00003_00004_n00001_00000 with domain: bool (representing constraint )
c Var 'adj_00003_00004_n00001_00000' direct represents '0' with '-359'
c Var 'adj_00003_00004_n00001_00000' direct represents '1' with '359'
c Var 'adj_00003_00004_n00001_00000' order represents '1' with '1'
c Var 'adj_00003_00004_n00001_00000' order represents '0' with '-359'
359 -359 0
c Encoding variable: adj_00003_00004_n00001_00001 with domain: bool (representing constraint )
c Var 'adj_00003_00004_n00001_00001' direct represents '0' with '-360'
c Var 'adj_00003_00004_n00001_00001' direct represents '1' with '360'
c Var 'adj_00003_00004_n00001_00001' order represents '1' with '1'
c Var 'adj_00003_00004_n00001_00001' order represents '0' with '-360'
360 -360 0
c Encoding variable: adj_00003_00004_00000_n00001 with domain: bool (representing constraint )
c Var 'adj_00003_00004_00000_n00001' direct represents '0' with '-361'
c Var 'adj_00003_00004_00000_n00001' direct represents '1' with '361'
c Var 'adj_00003_00004_00000_n00001' order represents '1' with '1'
c Var 'adj_00003_00004_00000_n00001' order represents '0' with '-361'
c Encoding variable: adj_00003_00004_00000_00000 with domain: bool (representing constraint )
c Var 'adj_00003_00004_00000_00000' direct represents '0' with '-362'
c Var 'adj_00003_00004_00000_00000' direct represents '1' with '362'
c Var 'adj_00003_00004_00000_00000' order represents '1' with '1'
c Var 'adj_00003_00004_00000_00000' order represents '0' with '-362'
362 -362 0
c Encoding variable: adj_00003_00004_00000_00001 with domain: bool (representing constraint )
c Var 'adj_00003_00004_00000_00001' direct represents '0' with '-363'
c Var 'adj_00003_00004_00000_00001' direct represents '1' with '363'
c Var 'adj_00003_00004_00000_00001' order represents '1' with '1'
c Var 'adj_00003_00004_00000_00001' order represents '0' with '-363'
363 -363 0
c Encoding variable: adj_00003_00004_00001_n00001 with domain: bool (representing constraint )
c Var 'adj_00003_00004_00001_n00001' direct represents '0' with '-364'
c Var 'adj_00003_00004_00001_n00001' direct represents '1' with '364'
c Var 'adj_00003_00004_00001_n00001' order represents '1' with '1'
c Var 'adj_00003_00004_00001_n00001' order represents '0' with '-364'
c Encoding variable: adj_00003_00004_00001_00000 with domain: bool (representing constraint )
c Var 'adj_00003_00004_00001_00000' direct represents '0' with '-365'
c Var 'adj_00003_00004_00001_00000' direct represents '1' with '365'
c Var 'adj_00003_00004_00001_00000' order represents '1' with '1'
c Var 'adj_00003_00004_00001_00000' order represents '0' with '-365'
c Encoding variable: adj_00003_00004_00001_00001 with domain: bool (representing constraint )
c Var 'adj_00003_00004_00001_00001' direct represents '0' with '-366'
c Var 'adj_00003_00004_00001_00001' direct represents '1' with '366'
c Var 'adj_00003_00004_00001_00001' order represents '1' with '1'
c Var 'adj_00003_00004_00001_00001' order represents '0' with '-366'
366 -366 0
c Encoding variable: adj_00004_00000_n00001_n00001 with domain: bool (representing constraint )
c Var 'adj_00004_00000_n00001_n00001' direct represents '0' with '-367'
c Var 'adj_00004_00000_n00001_n00001' direct represents '1' with '367'
c Var 'adj_00004_00000_n00001_n00001' order represents '1' with '1'
c Var 'adj_00004_00000_n00001_n00001' order represents '0' with '-367'
367 -367 0
c Encoding variable: adj_00004_00000_n00001_00000 with domain: bool (representing constraint )
c Var 'adj_00004_00000_n00001_00000' direct represents '0' with '-368'
c Var 'adj_00004_00000_n00001_00000' direct represents '1' with '368'
c Var 'adj_00004_00000_n00001_00000' order represents '1' with '1'
c Var 'adj_00004_00000_n00001_00000' order represents '0' with '-368'
368 -368 0
c Encoding variable: adj_00004_00000_n00001_00001 with domain: bool (representing constraint )
c Var 'adj_00004_00000_n00001_00001' direct represents '0' with '-369'
c Var 'adj_00004_00000_n00001_00001' direct represents '1' with '369'
c Var 'adj_00004_00000_n00001_00001' order represents '1' with '1'
c Var 'adj_00004_00000_n00001_00001' order represents '0' with '-369'
369 -369 0
c Encoding variable: adj_00004_00000_00000_n00001 with domain: bool (representing constraint )
c Var 'adj_00004_00000_00000_n00001' direct represents '0' with '-370'
c Var 'adj_00004_00000_00000_n00001' direct represents '1' with '370'
c Var 'adj_00004_00000_00000_n00001' order represents '1' with '1'
c Var 'adj_00004_00000_00000_n00001' order represents '0' with '-370'
370 -370 0
c Encoding variable: adj_00004_00000_00000_00000 with domain: bool (representing constraint )
c Var 'adj_00004_00000_00000_00000' direct represents '0' with '-371'
c Var 'adj_00004_00000_00000_00000' direct represents '1' with '371'
c Var 'adj_00004_00000_00000_00000' order represents '1' with '1'
c Var 'adj_00004_00000_00000_00000' order represents '0' with '-371'
371 -371 0
c Encoding variable: adj_00004_00000_00000_00001 with domain: bool (representing constraint )
c Var 'adj_00004_00000_00000_00001' direct represents '0' with '-372'
c Var 'adj_00004_00000_00000_00001' direct represents '1' with '372'
c Var 'adj_00004_00000_00000_00001' order represents '1' with '1'
c Var 'adj_00004_00000_00000_00001' order represents '0' with '-372'
372 -372 0
c Encoding variable: adj_00004_00000_00001_n00001 with domain: bool (representing constraint )
c Var 'adj_00004_00000_00001_n00001' direct represents '0' with '-373'
c Var 'adj_00004_00000_00001_n00001' direct represents '1' with '373'
c Var 'adj_00004_00000_00001_n00001' order represents '1' with '1'
c Var 'adj_00004_00000_00001_n00001' order represents '0' with '-373'
373 -373 0
c Encoding variable: adj_00004_00000_00001_00000 with domain: bool (representing constraint )
c Var 'adj_00004_00000_00001_00000' direct represents '0' with '-374'
c Var 'adj_00004_00000_00001_00000' direct represents '1' with '374'
c Var 'adj_00004_00000_00001_00000' order represents '1' with '1'
c Var 'adj_00004_00000_00001_00000' order represents '0' with '-374'
374 -374 0
c Encoding variable: adj_00004_00000_00001_00001 with domain: bool (representing constraint )
c Var 'adj_00004_00000_00001_00001' direct represents '0' with '-375'
c Var 'adj_00004_00000_00001_00001' direct represents '1' with '375'
c Var 'adj_00004_00000_00001_00001' order represents '1' with '1'
c Var 'adj_00004_00000_00001_00001' order represents '0' with '-375'
375 -375 0
c Encoding variable: adj_00004_00001_n00001_n00001 with domain: bool (representing constraint )
c Var 'adj_00004_00001_n00001_n00001' direct represents '0' with '-376'
c Var 'adj_00004_00001_n00001_n00001' direct represents '1' with '376'
c Var 'adj_00004_00001_n00001_n00001' order represents '1' with '1'
c Var 'adj_00004_00001_n00001_n00001' order represents '0' with '-376'
376 -376 0
c Encoding variable: adj_00004_00001_n00001_00000 with domain: bool (representing constraint )
c Var 'adj_00004_00001_n00001_00000' direct represents '0' with '-377'
c Var 'adj_00004_00001_n00001_00000' direct represents '1' with '377'
c Var 'adj_00004_00001_n00001_00000' order represents '1' with '1'
c Var 'adj_00004_00001_n00001_00000' order represents '0' with '-377'
377 -377 0
c Encoding variable: adj_00004_00001_n00001_00001 with domain: bool (representing constraint )
c Var 'adj_00004_00001_n00001_00001' direct represents '0' with '-378'
c Var 'adj_00004_00001_n00001_00001' direct represents '1' with '378'
c Var 'adj_00004_00001_n00001_00001' order represents '1' with '1'
c Var 'adj_00004_00001_n00001_00001' order represents '0' with '-378'
378 -378 0
c Encoding variable: adj_00004_00001_00000_n00001 with domain: bool (representing constraint )
c Var 'adj_00004_00001_00000_n00001' direct represents '0' with '-379'
c Var 'adj_00004_00001_00000_n00001' direct represents '1' with '379'
c Var 'adj_00004_00001_00000_n00001' order represents '1' with '1'
c Var 'adj_00004_00001_00000_n00001' order represents '0' with '-379'
c Encoding variable: adj_00004_00001_00000_00000 with domain: bool (representing constraint )
c Var 'adj_00004_00001_00000_00000' direct represents '0' with '-380'
c Var 'adj_00004_00001_00000_00000' direct represents '1' with '380'
c Var 'adj_00004_00001_00000_00000' order represents '1' with '1'
c Var 'adj_00004_00001_00000_00000' order represents '0' with '-380'
380 -380 0
c Encoding variable: adj_00004_00001_00000_00001 with domain: bool (representing constraint )
c Var 'adj_00004_00001_00000_00001' direct represents '0' with '-381'
c Var 'adj_00004_00001_00000_00001' direct represents '1' with '381'
c Var 'adj_00004_00001_00000_00001' order represents '1' with '1'
c Var 'adj_00004_00001_00000_00001' order represents '0' with '-381'
381 -381 0
c Encoding variable: adj_00004_00001_00001_n00001 with domain: bool (representing constraint )
c Var 'adj_00004_00001_00001_n00001' direct represents '0' with '-382'
c Var 'adj_00004_00001_00001_n00001' direct represents '1' with '382'
c Var 'adj_00004_00001_00001_n00001' order represents '1' with '1'
c Var 'adj_00004_00001_00001_n00001' order represents '0' with '-382'
382 -382 0
c Encoding variable: adj_00004_00001_00001_00000 with domain: bool (representing constraint )
c Var 'adj_00004_00001_00001_00000' direct represents '0' with '-383'
c Var 'adj_00004_00001_00001_00000' direct represents '1' with '383'
c Var 'adj_00004_00001_00001_00000' order represents '1' with '1'
c Var 'adj_00004_00001_00001_00000' order represents '0' with '-383'
383 -383 0
c Encoding variable: adj_00004_00001_00001_00001 with domain: bool (representing constraint )
c Var 'adj_00004_00001_00001_00001' direct represents '0' with '-384'
c Var 'adj_00004_00001_00001_00001' direct represents '1' with '384'
c Var 'adj_00004_00001_00001_00001' order represents '1' with '1'
c Var 'adj_00004_00001_00001_00001' order represents '0' with '-384'
384 -384 0
c Encoding variable: adj_00004_00002_n00001_n00001 with domain: bool (representing constraint )
c Var 'adj_00004_00002_n00001_n00001' direct represents '0' with '-385'
c Var 'adj_00004_00002_n00001_n00001' direct represents '1' with '385'
c Var 'adj_00004_00002_n00001_n00001' order represents '1' with '1'
c Var 'adj_00004_00002_n00001_n00001' order represents '0' with '-385'
385 -385 0
c Encoding variable: adj_00004_00002_n00001_00000 with domain: bool (representing constraint )
c Var 'adj_00004_00002_n00001_00000' direct represents '0' with '-386'
c Var 'adj_00004_00002_n00001_00000' direct represents '1' with '386'
c Var 'adj_00004_00002_n00001_00000' order represents '1' with '1'
c Var 'adj_00004_00002_n00001_00000' order represents '0' with '-386'
386 -386 0
c Encoding variable: adj_00004_00002_n00001_00001 with domain: bool (representing constraint )
c Var 'adj_00004_00002_n00001_00001' direct represents '0' with '-387'
c Var 'adj_00004_00002_n00001_00001' direct represents '1' with '387'
c Var 'adj_00004_00002_n00001_00001' order represents '1' with '1'
c Var 'adj_00004_00002_n00001_00001' order represents '0' with '-387'
387 -387 0
c Encoding variable: adj_00004_00002_00000_n00001 with domain: bool (representing constraint )
c Var 'adj_00004_00002_00000_n00001' direct represents '0' with '-388'
c Var 'adj_00004_00002_00000_n00001' direct represents '1' with '388'
c Var 'adj_00004_00002_00000_n00001' order represents '1' with '1'
c Var 'adj_00004_00002_00000_n00001' order represents '0' with '-388'
388 -388 0
c Encoding variable: adj_00004_00002_00000_00000 with domain: bool (representing constraint )
c Var 'adj_00004_00002_00000_00000' direct represents '0' with '-389'
c Var 'adj_00004_00002_00000_00000' direct represents '1' with '389'
c Var 'adj_00004_00002_00000_00000' order represents '1' with '1'
c Var 'adj_00004_00002_00000_00000' order represents '0' with '-389'
389 -389 0
c Encoding variable: adj_00004_00002_00000_00001 with domain: bool (representing constraint )
c Var 'adj_00004_00002_00000_00001' direct represents '0' with '-390'
c Var 'adj_00004_00002_00000_00001' direct represents '1' with '390'
c Var 'adj_00004_00002_00000_00001' order represents '1' with '1'
c Var 'adj_00004_00002_00000_00001' order represents '0' with '-390'
390 -390 0
c Encoding variable: adj_00004_00002_00001_n00001 with domain: bool (representing constraint )
c Var 'adj_00004_00002_00001_n00001' direct represents '0' with '-391'
c Var 'adj_00004_00002_00001_n00001' direct represents '1' with '391'
c Var 'adj_00004_00002_00001_n00001' order represents '1' with '1'
c Var 'adj_00004_00002_00001_n00001' order represents '0' with '-391'
391 -391 0
c Encoding variable: adj_00004_00002_00001_00000 with domain: bool (representing constraint )
c Var 'adj_00004_00002_00001_00000' direct represents '0' with '-392'
c Var 'adj_00004_00002_00001_00000' direct represents '1' with '392'
c Var 'adj_00004_00002_00001_00000' order represents '1' with '1'
c Var 'adj_00004_00002_00001_00000' order represents '0' with '-392'
392 -392 0
c Encoding variable: adj_00004_00002_00001_00001 with domain: bool (representing constraint )
c Var 'adj_00004_00002_00001_00001' direct represents '0' with '-393'
c Var 'adj_00004_00002_00001_00001' direct represents '1' with '393'
c Var 'adj_00004_00002_00001_00001' order represents '1' with '1'
c Var 'adj_00004_00002_00001_00001' order represents '0' with '-393'
393 -393 0
c Encoding variable: adj_00004_00003_n00001_n00001 with domain: bool (representing constraint )
c Var 'adj_00004_00003_n00001_n00001' direct represents '0' with '-394'
c Var 'adj_00004_00003_n00001_n00001' direct represents '1' with '394'
c Var 'adj_00004_00003_n00001_n00001' order represents '1' with '1'
c Var 'adj_00004_00003_n00001_n00001' order represents '0' with '-394'
394 -394 0
c Encoding variable: adj_00004_00003_n00001_00000 with domain: bool (representing constraint )
c Var 'adj_00004_00003_n00001_00000' direct represents '0' with '-395'
c Var 'adj_00004_00003_n00001_00000' direct represents '1' with '395'
c Var 'adj_00004_00003_n00001_00000' order represents '1' with '1'
c Var 'adj_00004_00003_n00001_00000' order represents '0' with '-395'
395 -395 0
c Encoding variable: adj_00004_00003_n00001_00001 with domain: bool (representing constraint )
c Var 'adj_00004_00003_n00001_00001' direct represents '0' with '-396'
c Var 'adj_00004_00003_n00001_00001' direct represents '1' with '396'
c Var 'adj_00004_00003_n00001_00001' order represents '1' with '1'
c Var 'adj_00004_00003_n00001_00001' order represents '0' with '-396'
396 -396 0
c Encoding variable: adj_00004_00003_00000_n00001 with domain: bool (representing constraint )
c Var 'adj_00004_00003_00000_n00001' direct represents '0' with '-397'
c Var 'adj_00004_00003_00000_n00001' direct represents '1' with '397'
c Var 'adj_00004_00003_00000_n00001' order represents '1' with '1'
c Var 'adj_00004_00003_00000_n00001' order represents '0' with '-397'
397 -397 0
c Encoding variable: adj_00004_00003_00000_00000 with domain: bool (representing constraint )
c Var 'adj_00004_00003_00000_00000' direct represents '0' with '-398'
c Var 'adj_00004_00003_00000_00000' direct represents '1' with '398'
c Var 'adj_00004_00003_00000_00000' order represents '1' with '1'
c Var 'adj_00004_00003_00000_00000' order represents '0' with '-398'
398 -398 0
c Encoding variable: adj_00004_00003_00000_00001 with domain: bool (representing constraint )
c Var 'adj_00004_00003_00000_00001' direct represents '0' with '-399'
c Var 'adj_00004_00003_00000_00001' direct represents '1' with '399'
c Var 'adj_00004_00003_00000_00001' order represents '1' with '1'
c Var 'adj_00004_00003_00000_00001' order represents '0' with '-399'
399 -399 0
c Encoding variable: adj_00004_00003_00001_n00001 with domain: bool (representing constraint )
c Var 'adj_00004_00003_00001_n00001' direct represents '0' with '-400'
c Var 'adj_00004_00003_00001_n00001' direct represents '1' with '400'
c Var 'adj_00004_00003_00001_n00001' order represents '1' with '1'
c Var 'adj_00004_00003_00001_n00001' order represents '0' with '-400'
400 -400 0
c Encoding variable: adj_00004_00003_00001_00000 with domain: bool (representing constraint )
c Var 'adj_00004_00003_00001_00000' direct represents '0' with '-401'
c Var 'adj_00004_00003_00001_00000' direct represents '1' with '401'
c Var 'adj_00004_00003_00001_00000' order represents '1' with '1'
c Var 'adj_00004_00003_00001_00000' order represents '0' with '-401'
401 -401 0
c Encoding variable: adj_00004_00003_00001_00001 with domain: bool (representing constraint )
c Var 'adj_00004_00003_00001_00001' direct represents '0' with '-402'
c Var 'adj_00004_00003_00001_00001' direct represents '1' with '402'
c Var 'adj_00004_00003_00001_00001' order represents '1' with '1'
c Var 'adj_00004_00003_00001_00001' order represents '0' with '-402'
402 -402 0
c Encoding variable: adj_00004_00004_n00001_n00001 with domain: bool (representing constraint )
c Var 'adj_00004_00004_n00001_n00001' direct represents '0' with '-403'
c Var 'adj_00004_00004_n00001_n00001' direct represents '1' with '403'
c Var 'adj_00004_00004_n00001_n00001' order represents '1' with '1'
c Var 'adj_00004_00004_n00001_n00001' order represents '0' with '-403'
403 -403 0
c Encoding variable: adj_00004_00004_n00001_00000 with domain: bool (representing constraint )
c Var 'adj_00004_00004_n00001_00000' direct represents '0' with '-404'
c Var 'adj_00004_00004_n00001_00000' direct represents '1' with '404'
c Var 'adj_00004_00004_n00001_00000' order represents '1' with '1'
c Var 'adj_00004_00004_n00001_00000' order represents '0' with '-404'
404 -404 0
c Encoding variable: adj_00004_00004_n00001_00001 with domain: bool (representing constraint )
c Var 'adj_00004_00004_n00001_00001' direct represents '0' with '-405'
c Var 'adj_00004_00004_n00001_00001' direct represents '1' with '405'
c Var 'adj_00004_00004_n00001_00001' order represents '1' with '1'
c Var 'adj_00004_00004_n00001_00001' order represents '0' with '-405'
405 -405 0
c Encoding variable: adj_00004_00004_00000_n00001 with domain: bool (representing constraint )
c Var 'adj_00004_00004_00000_n00001' direct represents '0' with '-406'
c Var 'adj_00004_00004_00000_n00001' direct represents '1' with '406'
c Var 'adj_00004_00004_00000_n00001' order represents '1' with '1'
c Var 'adj_00004_00004_00000_n00001' order represents '0' with '-406'
c Encoding variable: adj_00004_00004_00000_00000 with domain: bool (representing constraint )
c Var 'adj_00004_00004_00000_00000' direct represents '0' with '-407'
c Var 'adj_00004_00004_00000_00000' direct represents '1' with '407'
c Var 'adj_00004_00004_00000_00000' order represents '1' with '1'
c Var 'adj_00004_00004_00000_00000' order represents '0' with '-407'
407 -407 0
c Encoding variable: adj_00004_00004_00000_00001 with domain: bool (representing constraint )
c Var 'adj_00004_00004_00000_00001' direct represents '0' with '-408'
c Var 'adj_00004_00004_00000_00001' direct represents '1' with '408'
c Var 'adj_00004_00004_00000_00001' order represents '1' with '1'
c Var 'adj_00004_00004_00000_00001' order represents '0' with '-408'
408 -408 0
c Encoding variable: adj_00004_00004_00001_n00001 with domain: bool (representing constraint )
c Var 'adj_00004_00004_00001_n00001' direct represents '0' with '-409'
c Var 'adj_00004_00004_00001_n00001' direct represents '1' with '409'
c Var 'adj_00004_00004_00001_n00001' order represents '1' with '1'
c Var 'adj_00004_00004_00001_n00001' order represents '0' with '-409'
409 -409 0
c Encoding variable: adj_00004_00004_00001_00000 with domain: bool (representing constraint )
c Var 'adj_00004_00004_00001_00000' direct represents '0' with '-410'
c Var 'adj_00004_00004_00001_00000' direct represents '1' with '410'
c Var 'adj_00004_00004_00001_00000' order represents '1' with '1'
c Var 'adj_00004_00004_00001_00000' order represents '0' with '-410'
410 -410 0
c Encoding variable: adj_00004_00004_00001_00001 with domain: bool (representing constraint )
c Var 'adj_00004_00004_00001_00001' direct represents '0' with '-411'
c Var 'adj_00004_00004_00001_00001' direct represents '1' with '411'
c Var 'adj_00004_00004_00001_00001' order represents '1' with '1'
c Var 'adj_00004_00004_00001_00001' order represents '0' with '-411'
411 -411 0
c Encoding variable: rowup_00000 with domain: bool (representing constraint )
c Var 'rowup_00000' direct represents '0' with '-412'
c Var 'rowup_00000' direct represents '1' with '412'
c Var 'rowup_00000' order represents '1' with '1'
c Var 'rowup_00000' order represents '0' with '-412'
c Encoding variable: rowup_00001 with domain: bool (representing constraint )
c Var 'rowup_00001' direct represents '0' with '-413'
c Var 'rowup_00001' direct represents '1' with '413'
c Var 'rowup_00001' order represents '1' with '1'
c Var 'rowup_00001' order represents '0' with '-413'
c Encoding variable: rowup_00002 with domain: bool (representing constraint )
c Var 'rowup_00002' direct represents '0' with '-414'
c Var 'rowup_00002' direct represents '1' with '414'
c Var 'rowup_00002' order represents '1' with '1'
c Var 'rowup_00002' order represents '0' with '-414'
c Encoding variable: rowup_00003 with domain: bool (representing constraint )
c Var 'rowup_00003' direct represents '0' with '-415'
c Var 'rowup_00003' direct represents '1' with '415'
c Var 'rowup_00003' order represents '1' with '1'
c Var 'rowup_00003' order represents '0' with '-415'
c Encoding variable: rowup_00004 with domain: bool (representing constraint )
c Var 'rowup_00004' direct represents '0' with '-416'
c Var 'rowup_00004' direct represents '1' with '416'
c Var 'rowup_00004' order represents '1' with '1'
c Var 'rowup_00004' order represents '0' with '-416'
c Encoding variable: rowdown_00000 with domain: bool (representing constraint )
c Var 'rowdown_00000' direct represents '0' with '-417'
c Var 'rowdown_00000' direct represents '1' with '417'
c Var 'rowdown_00000' order represents '1' with '1'
c Var 'rowdown_00000' order represents '0' with '-417'
c Encoding variable: rowdown_00001 with domain: bool (representing constraint )
c Var 'rowdown_00001' direct represents '0' with '-418'
c Var 'rowdown_00001' direct represents '1' with '418'
c Var 'rowdown_00001' order represents '1' with '1'
c Var 'rowdown_00001' order represents '0' with '-418'
c Encoding variable: rowdown_00002 with domain: bool (representing constraint )
c Var 'rowdown_00002' direct represents '0' with '-419'
c Var 'rowdown_00002' direct represents '1' with '419'
c Var 'rowdown_00002' order represents '1' with '1'
c Var 'rowdown_00002' order represents '0' with '-419'
c Encoding variable: rowdown_00003 with domain: bool (representing constraint )
c Var 'rowdown_00003' direct represents '0' with '-420'
c Var 'rowdown_00003' direct represents '1' with '420'
c Var 'rowdown_00003' order represents '1' with '1'
c Var 'rowdown_00003' order represents '0' with '-420'
c Encoding variable: rowdown_00004 with domain: bool (representing constraint )
c Var 'rowdown_00004' direct represents '0' with '-421'
c Var 'rowdown_00004' direct represents '1' with '421'
c Var 'rowdown_00004' order represents '1' with '1'
c Var 'rowdown_00004' order represents '0' with '-421'
c Encoding variable: colup_00000 with domain: bool (representing constraint )
c Var 'colup_00000' direct represents '0' with '-422'
c Var 'colup_00000' direct represents '1' with '422'
c Var 'colup_00000' order represents '1' with '1'
c Var 'colup_00000' order represents '0' with '-422'
c Encoding variable: colup_00001 with domain: bool (representing constraint )
c Var 'colup_00001' direct represents '0' with '-423'
c Var 'colup_00001' direct represents '1' with '423'
c Var 'colup_00001' order represents '1' with '1'
c Var 'colup_00001' order represents '0' with '-423'
423 -423 0
c Encoding variable: colup_00002 with domain: bool (representing constraint )
c Var 'colup_00002' direct represents '0' with '-424'
c Var 'colup_00002' direct represents '1' with '424'
c Var 'colup_00002' order represents '1' with '1'
c Var 'colup_00002' order represents '0' with '-424'
c Encoding variable: colup_00003 with domain: bool (representing constraint )
c Var 'colup_00003' direct represents '0' with '-425'
c Var 'colup_00003' direct represents '1' with '425'
c Var 'colup_00003' order represents '1' with '1'
c Var 'colup_00003' order represents '0' with '-425'
c Encoding variable: colup_00004 with domain: bool (representing constraint )
c Var 'colup_00004' direct represents '0' with '-426'
c Var 'colup_00004' direct represents '1' with '426'
c Var 'colup_00004' order represents '1' with '1'
c Var 'colup_00004' order represents '0' with '-426'
c Encoding variable: coldown_00000 with domain: bool (representing constraint )
c Var 'coldown_00000' direct represents '0' with '-427'
c Var 'coldown_00000' direct represents '1' with '427'
c Var 'coldown_00000' order represents '1' with '1'
c Var 'coldown_00000' order represents '0' with '-427'
c Encoding variable: coldown_00001 with domain: bool (representing constraint )
c Var 'coldown_00001' direct represents '0' with '-428'
c Var 'coldown_00001' direct represents '1' with '428'
c Var 'coldown_00001' order represents '1' with '1'
c Var 'coldown_00001' order represents '0' with '-428'
c Encoding variable: coldown_00002 with domain: bool (representing constraint )
c Var 'coldown_00002' direct represents '0' with '-429'
c Var 'coldown_00002' direct represents '1' with '429'
c Var 'coldown_00002' order represents '1' with '1'
c Var 'coldown_00002' order represents '0' with '-429'
c Encoding variable: coldown_00003 with domain: bool (representing constraint )
c Var 'coldown_00003' direct represents '0' with '-430'
c Var 'coldown_00003' direct represents '1' with '430'
c Var 'coldown_00003' order represents '1' with '1'
c Var 'coldown_00003' order represents '0' with '-430'
c Encoding variable: coldown_00004 with domain: bool (representing constraint )
c Var 'coldown_00004' direct represents '0' with '-431'
c Var 'coldown_00004' direct represents '1' with '431'
c Var 'coldown_00004' order represents '1' with '1'
c Var 'coldown_00004' order represents '0' with '-431'
c Encoding variable: treetentup_00001 with domain: bool (representing constraint )
c Var 'treetentup_00001' direct represents '0' with '-432'
c Var 'treetentup_00001' direct represents '1' with '432'
c Var 'treetentup_00001' order represents '1' with '1'
c Var 'treetentup_00001' order represents '0' with '-432'
c Encoding variable: treetentup_00002 with domain: bool (representing constraint )
c Var 'treetentup_00002' direct represents '0' with '-433'
c Var 'treetentup_00002' direct represents '1' with '433'
c Var 'treetentup_00002' order represents '1' with '1'
c Var 'treetentup_00002' order represents '0' with '-433'
c Encoding variable: treetentup_00003 with domain: bool (representing constraint )
c Var 'treetentup_00003' direct represents '0' with '-434'
c Var 'treetentup_00003' direct represents '1' with '434'
c Var 'treetentup_00003' order represents '1' with '1'
c Var 'treetentup_00003' order represents '0' with '-434'
c Encoding variable: treetentup_00004 with domain: bool (representing constraint )
c Var 'treetentup_00004' direct represents '0' with '-435'
c Var 'treetentup_00004' direct represents '1' with '435'
c Var 'treetentup_00004' order represents '1' with '1'
c Var 'treetentup_00004' order represents '0' with '-435'
c Encoding variable: treetentup_00005 with domain: bool (representing constraint )
c Var 'treetentup_00005' direct represents '0' with '-436'
c Var 'treetentup_00005' direct represents '1' with '436'
c Var 'treetentup_00005' order represents '1' with '1'
c Var 'treetentup_00005' order represents '0' with '-436'
c Encoding variable: treetentdown_00001 with domain: bool (representing constraint )
c Var 'treetentdown_00001' direct represents '0' with '-437'
c Var 'treetentdown_00001' direct represents '1' with '437'
c Var 'treetentdown_00001' order represents '1' with '1'
c Var 'treetentdown_00001' order represents '0' with '-437'
c Encoding variable: treetentdown_00002 with domain: bool (representing constraint )
c Var 'treetentdown_00002' direct represents '0' with '-438'
c Var 'treetentdown_00002' direct represents '1' with '438'
c Var 'treetentdown_00002' order represents '1' with '1'
c Var 'treetentdown_00002' order represents '0' with '-438'
c Encoding variable: treetentdown_00003 with domain: bool (representing constraint )
c Var 'treetentdown_00003' direct represents '0' with '-439'
c Var 'treetentdown_00003' direct represents '1' with '439'
c Var 'treetentdown_00003' order represents '1' with '1'
c Var 'treetentdown_00003' order represents '0' with '-439'
c Encoding variable: treetentdown_00004 with domain: bool (representing constraint )
c Var 'treetentdown_00004' direct represents '0' with '-440'
c Var 'treetentdown_00004' direct represents '1' with '440'
c Var 'treetentdown_00004' order represents '1' with '1'
c Var 'treetentdown_00004' order represents '0' with '-440'
c Encoding variable: treetentdown_00005 with domain: bool (representing constraint )
c Var 'treetentdown_00005' direct represents '0' with '-441'
c Var 'treetentdown_00005' direct represents '1' with '441'
c Var 'treetentdown_00005' order represents '1' with '1'
c Var 'treetentdown_00005' order represents '0' with '-441'
c Encoding variable: tentneartree_00001 with domain: bool (representing constraint )
c Var 'tentneartree_00001' direct represents '0' with '-442'
c Var 'tentneartree_00001' direct represents '1' with '442'
c Var 'tentneartree_00001' order represents '1' with '1'
c Var 'tentneartree_00001' order represents '0' with '-442'
c Encoding variable: tentneartree_00002 with domain: bool (representing constraint )
c Var 'tentneartree_00002' direct represents '0' with '-443'
c Var 'tentneartree_00002' direct represents '1' with '443'
c Var 'tentneartree_00002' order represents '1' with '1'
c Var 'tentneartree_00002' order represents '0' with '-443'
c Encoding variable: tentneartree_00003 with domain: bool (representing constraint )
c Var 'tentneartree_00003' direct represents '0' with '-444'
c Var 'tentneartree_00003' direct represents '1' with '444'
c Var 'tentneartree_00003' order represents '1' with '1'
c Var 'tentneartree_00003' order represents '0' with '-444'
c Encoding variable: tentneartree_00004 with domain: bool (representing constraint )
c Var 'tentneartree_00004' direct represents '0' with '-445'
c Var 'tentneartree_00004' direct represents '1' with '445'
c Var 'tentneartree_00004' order represents '1' with '1'
c Var 'tentneartree_00004' order represents '0' with '-445'
c Encoding variable: tentneartree_00005 with domain: bool (representing constraint )
c Var 'tentneartree_00005' direct represents '0' with '-446'
c Var 'tentneartree_00005' direct represents '1' with '446'
c Var 'tentneartree_00005' order represents '1' with '1'
c Var 'tentneartree_00005' order represents '0' with '-446'
c Encoding variable: aux0 with domain: bool (representing constraint (1<=((grid_00003_00000=1) + (grid_00003_00001=1) + (grid_00003_00002=1) + (grid_00003_00003=1) + (grid_00003_00004=1) + (1=grid_00001_00000) + (1=grid_00001_00001) + (1=grid_00001_00002) + (1=grid_00001_00003) + (1=grid_00002_00001) + (1=grid_00002_00004) + (grid_00004_00000=1) + (grid_00004_00001=1) + (grid_00004_00003=1) + (grid_00004_00004=1) + (grid_00000_00000=1) + (grid_00000_00001=1) + (grid_00000_00002=1) + (grid_00000_00003=1) + (grid_00000_00004=1))))
c Var 'aux0' direct represents '0' with '-447'
c Var 'aux0' direct represents '1' with '447'
c Var 'aux0' order represents '1' with '1'
c Var 'aux0' order represents '0' with '-447'
c Encoding variable: aux1 with domain: bool (representing constraint (1<=((grid_00003_00000=2) + (grid_00003_00001=2) + (grid_00003_00002=2) + (grid_00003_00003=2) + (grid_00003_00004=2) + (2=grid_00001_00000) + (2=grid_00001_00001) + (2=grid_00001_00002) + (2=grid_00001_00003) + (2=grid_00002_00001) + (2=grid_00002_00004) + (grid_00004_00000=2) + (grid_00004_00001=2) + (grid_00004_00003=2) + (grid_00004_00004=2) + (grid_00000_00000=2) + (grid_00000_00001=2) + (grid_00000_00002=2) + (grid_00000_00003=2) + (grid_00000_00004=2))))
c Var 'aux1' direct represents '0' with '-448'
c Var 'aux1' direct represents '1' with '448'
c Var 'aux1' order represents '1' with '1'
c Var 'aux1' order represents '0' with '-448'
c Encoding variable: aux2 with domain: bool (representing constraint (1<=((grid_00003_00000=3) + (grid_00003_00001=3) + (grid_00003_00002=3) + (grid_00003_00003=3) + (grid_00003_00004=3) + (3=grid_00001_00000) + (3=grid_00001_00001) + (3=grid_00001_00002) + (3=grid_00001_00003) + (3=grid_00002_00001) + (3=grid_00002_00004) + (grid_00004_00000=3) + (grid_00004_00001=3) + (grid_00004_00003=3) + (grid_00004_00004=3) + (grid_00000_00000=3) + (grid_00000_00001=3) + (grid_00000_00002=3) + (grid_00000_00003=3) + (grid_00000_00004=3))))
c Var 'aux2' direct represents '0' with '-449'
c Var 'aux2' direct represents '1' with '449'
c Var 'aux2' order represents '1' with '1'
c Var 'aux2' order represents '0' with '-449'
c Encoding variable: aux3 with domain: bool (representing constraint (1<=((grid_00003_00000=4) + (grid_00003_00001=4) + (grid_00003_00002=4) + (grid_00003_00003=4) + (grid_00003_00004=4) + (4=grid_00001_00000) + (4=grid_00001_00001) + (4=grid_00001_00002) + (4=grid_00001_00003) + (4=grid_00002_00001) + (4=grid_00002_00004) + (grid_00004_00000=4) + (grid_00004_00001=4) + (grid_00004_00003=4) + (grid_00004_00004=4) + (grid_00000_00000=4) + (grid_00000_00001=4) + (grid_00000_00002=4) + (grid_00000_00003=4) + (grid_00000_00004=4))))
c Var 'aux3' direct represents '0' with '-450'
c Var 'aux3' direct represents '1' with '450'
c Var 'aux3' order represents '1' with '1'
c Var 'aux3' order represents '0' with '-450'
c Encoding variable: aux4 with domain: bool (representing constraint (1<=((grid_00003_00000=5) + (grid_00003_00001=5) + (grid_00003_00002=5) + (grid_00003_00003=5) + (grid_00003_00004=5) + (5=grid_00001_00000) + (5=grid_00001_00001) + (5=grid_00001_00002) + (5=grid_00001_00003) + (5=grid_00002_00001) + (5=grid_00002_00004) + (grid_00004_00000=5) + (grid_00004_00001=5) + (grid_00004_00003=5) + (grid_00004_00004=5) + (grid_00000_00000=5) + (grid_00000_00001=5) + (grid_00000_00002=5) + (grid_00000_00003=5) + (grid_00000_00004=5))))
c Var 'aux4' direct represents '0' with '-451'
c Var 'aux4' direct represents '1' with '451'
c Var 'aux4' order represents '1' with '1'
c Var 'aux4' order represents '0' with '-451'
c Encoding variable: aux5 with domain: bool (representing constraint (((grid_00003_00000=1) + (grid_00003_00001=1) + (grid_00003_00002=1) + (grid_00003_00003=1) + (grid_00003_00004=1) + (1=grid_00001_00000) + (1=grid_00001_00001) + (1=grid_00001_00002) + (1=grid_00001_00003) + (1=grid_00002_00001) + (1=grid_00002_00004) + (grid_00004_00000=1) + (grid_00004_00001=1) + (grid_00004_00003=1) + (grid_00004_00004=1) + (grid_00000_00000=1) + (grid_00000_00001=1) + (grid_00000_00002=1) + (grid_00000_00003=1) + (grid_00000_00004=1))<=1))
c Var 'aux5' direct represents '0' with '-452'
c Var 'aux5' direct represents '1' with '452'
c Var 'aux5' order represents '1' with '1'
c Var 'aux5' order represents '0' with '-452'
c Encoding variable: aux6 with domain: bool (representing constraint (((grid_00003_00000=2) + (grid_00003_00001=2) + (grid_00003_00002=2) + (grid_00003_00003=2) + (grid_00003_00004=2) + (2=grid_00001_00000) + (2=grid_00001_00001) + (2=grid_00001_00002) + (2=grid_00001_00003) + (2=grid_00002_00001) + (2=grid_00002_00004) + (grid_00004_00000=2) + (grid_00004_00001=2) + (grid_00004_00003=2) + (grid_00004_00004=2) + (grid_00000_00000=2) + (grid_00000_00001=2) + (grid_00000_00002=2) + (grid_00000_00003=2) + (grid_00000_00004=2))<=1))
c Var 'aux6' direct represents '0' with '-453'
c Var 'aux6' direct represents '1' with '453'
c Var 'aux6' order represents '1' with '1'
c Var 'aux6' order represents '0' with '-453'
c Encoding variable: aux7 with domain: bool (representing constraint (((grid_00003_00000=3) + (grid_00003_00001=3) + (grid_00003_00002=3) + (grid_00003_00003=3) + (grid_00003_00004=3) + (3=grid_00001_00000) + (3=grid_00001_00001) + (3=grid_00001_00002) + (3=grid_00001_00003) + (3=grid_00002_00001) + (3=grid_00002_00004) + (grid_00004_00000=3) + (grid_00004_00001=3) + (grid_00004_00003=3) + (grid_00004_00004=3) + (grid_00000_00000=3) + (grid_00000_00001=3) + (grid_00000_00002=3) + (grid_00000_00003=3) + (grid_00000_00004=3))<=1))
c Var 'aux7' direct represents '0' with '-454'
c Var 'aux7' direct represents '1' with '454'
c Var 'aux7' order represents '1' with '1'
c Var 'aux7' order represents '0' with '-454'
c Encoding variable: aux8 with domain: bool (representing constraint (((grid_00003_00000=4) + (grid_00003_00001=4) + (grid_00003_00002=4) + (grid_00003_00003=4) + (grid_00003_00004=4) + (4=grid_00001_00000) + (4=grid_00001_00001) + (4=grid_00001_00002) + (4=grid_00001_00003) + (4=grid_00002_00001) + (4=grid_00002_00004) + (grid_00004_00000=4) + (grid_00004_00001=4) + (grid_00004_00003=4) + (grid_00004_00004=4) + (grid_00000_00000=4) + (grid_00000_00001=4) + (grid_00000_00002=4) + (grid_00000_00003=4) + (grid_00000_00004=4))<=1))
c Var 'aux8' direct represents '0' with '-455'
c Var 'aux8' direct represents '1' with '455'
c Var 'aux8' order represents '1' with '1'
c Var 'aux8' order represents '0' with '-455'
c Encoding variable: aux9 with domain: bool (representing constraint (((grid_00003_00000=5) + (grid_00003_00001=5) + (grid_00003_00002=5) + (grid_00003_00003=5) + (grid_00003_00004=5) + (5=grid_00001_00000) + (5=grid_00001_00001) + (5=grid_00001_00002) + (5=grid_00001_00003) + (5=grid_00002_00001) + (5=grid_00002_00004) + (grid_00004_00000=5) + (grid_00004_00001=5) + (grid_00004_00003=5) + (grid_00004_00004=5) + (grid_00000_00000=5) + (grid_00000_00001=5) + (grid_00000_00002=5) + (grid_00000_00003=5) + (grid_00000_00004=5))<=1))
c Var 'aux9' direct represents '0' with '-456'
c Var 'aux9' direct represents '1' with '456'
c Var 'aux9' order represents '1' with '1'
c Var 'aux9' order represents '0' with '-456'
c Encoding variable: aux10 with domain: bool (representing constraint (1<=((0<grid_00000_00000) + (0<grid_00000_00001) + (0<grid_00000_00002) + (0<grid_00000_00003) + (0<grid_00000_00004))))
c Var 'aux10' direct represents '0' with '-457'
c Var 'aux10' direct represents '1' with '457'
c Var 'aux10' order represents '1' with '1'
c Var 'aux10' order represents '0' with '-457'
c Encoding variable: aux11 with domain: bool (representing constraint (1<=((0<grid_00001_00000) + (0<grid_00001_00001) + (0<grid_00001_00002) + (0<grid_00001_00003))))
c Var 'aux11' direct represents '0' with '-458'
c Var 'aux11' direct represents '1' with '458'
c Var 'aux11' order represents '1' with '1'
c Var 'aux11' order represents '0' with '-458'
c Encoding variable: aux12 with domain: bool (representing constraint (1<=((0<grid_00002_00001) + (0<grid_00002_00004))))
c Var 'aux12' direct represents '0' with '-459'
c Var 'aux12' direct represents '1' with '459'
c Var 'aux12' order represents '1' with '1'
c Var 'aux12' order represents '0' with '-459'
c Encoding variable: aux13 with domain: bool (representing constraint (1<=((0<grid_00003_00000) + (0<grid_00003_00001) + (0<grid_00003_00002) + (0<grid_00003_00003) + (0<grid_00003_00004))))
c Var 'aux13' direct represents '0' with '-460'
c Var 'aux13' direct represents '1' with '460'
c Var 'aux13' order represents '1' with '1'
c Var 'aux13' order represents '0' with '-460'
c Encoding variable: aux14 with domain: bool (representing constraint (1<=((0<grid_00004_00000) + (0<grid_00004_00001) + (0<grid_00004_00003) + (0<grid_00004_00004))))
c Var 'aux14' direct represents '0' with '-461'
c Var 'aux14' direct represents '1' with '461'
c Var 'aux14' order represents '1' with '1'
c Var 'aux14' order represents '0' with '-461'
c Encoding variable: aux15 with domain: bool (representing constraint (((0<grid_00000_00000) + (0<grid_00000_00001) + (0<grid_00000_00002) + (0<grid_00000_00003) + (0<grid_00000_00004))<=1))
c Var 'aux15' direct represents '0' with '-462'
c Var 'aux15' direct represents '1' with '462'
c Var 'aux15' order represents '1' with '1'
c Var 'aux15' order represents '0' with '-462'
c Encoding variable: aux16 with domain: bool (representing constraint (((0<grid_00001_00000) + (0<grid_00001_00001) + (0<grid_00001_00002) + (0<grid_00001_00003))<=1))
c Var 'aux16' direct represents '0' with '-463'
c Var 'aux16' direct represents '1' with '463'
c Var 'aux16' order represents '1' with '1'
c Var 'aux16' order represents '0' with '-463'
c Encoding variable: aux17 with domain: bool (representing constraint (((0<grid_00002_00001) + (0<grid_00002_00004))<=1))
c Var 'aux17' direct represents '0' with '-464'
c Var 'aux17' direct represents '1' with '464'
c Var 'aux17' order represents '1' with '1'
c Var 'aux17' order represents '0' with '-464'
c Encoding variable: aux18 with domain: bool (representing constraint (((0<grid_00003_00000) + (0<grid_00003_00001) + (0<grid_00003_00002) + (0<grid_00003_00003) + (0<grid_00003_00004))<=1))
c Var 'aux18' direct represents '0' with '-465'
c Var 'aux18' direct represents '1' with '465'
c Var 'aux18' order represents '1' with '1'
c Var 'aux18' order represents '0' with '-465'
c Encoding variable: aux19 with domain: bool (representing constraint (((0<grid_00004_00000) + (0<grid_00004_00001) + (0<grid_00004_00003) + (0<grid_00004_00004))<=1))
c Var 'aux19' direct represents '0' with '-466'
c Var 'aux19' direct represents '1' with '466'
c Var 'aux19' order represents '1' with '1'
c Var 'aux19' order represents '0' with '-466'
c Encoding variable: aux20 with domain: bool (representing constraint (1<=((0<grid_00003_00000) + (0<grid_00004_00000) + (0<grid_00000_00000) + (0<grid_00001_00000))))
c Var 'aux20' direct represents '0' with '-467'
c Var 'aux20' direct represents '1' with '467'
c Var 'aux20' order represents '1' with '1'
c Var 'aux20' order represents '0' with '-467'
c Encoding variable: aux21 with domain: bool (representing constraint (1<=((0<grid_00003_00002) + (0<grid_00000_00002) + (0<grid_00001_00002))))
c Var 'aux21' direct represents '0' with '-468'
c Var 'aux21' direct represents '1' with '468'
c Var 'aux21' order represents '1' with '1'
c Var 'aux21' order represents '0' with '-468'
c Encoding variable: aux22 with domain: bool (representing constraint (1<=((0<grid_00003_00003) + (0<grid_00004_00003) + (0<grid_00000_00003) + (0<grid_00001_00003))))
c Var 'aux22' direct represents '0' with '-469'
c Var 'aux22' direct represents '1' with '469'
c Var 'aux22' order represents '1' with '1'
c Var 'aux22' order represents '0' with '-469'
c Encoding variable: aux23 with domain: bool (representing constraint (2<=((0<grid_00002_00004) + (0<grid_00003_00004) + (0<grid_00004_00004) + (0<grid_00000_00004))))
c Var 'aux23' direct represents '0' with '-470'
c Var 'aux23' direct represents '1' with '470'
c Var 'aux23' order represents '1' with '1'
c Var 'aux23' order represents '0' with '-470'
c Encoding variable: aux24 with domain: bool (representing constraint (((0<grid_00003_00000) + (0<grid_00004_00000) + (0<grid_00000_00000) + (0<grid_00001_00000))<=1))
c Var 'aux24' direct represents '0' with '-471'
c Var 'aux24' direct represents '1' with '471'
c Var 'aux24' order represents '1' with '1'
c Var 'aux24' order represents '0' with '-471'
c Encoding variable: aux25 with domain: bool (representing constraint (((0<grid_00002_00001) + (0<grid_00003_00001) + (0<grid_00004_00001) + (0<grid_00000_00001) + (0<grid_00001_00001))<=0))
c Var 'aux25' direct represents '0' with '-472'
c Var 'aux25' direct represents '1' with '472'
c Var 'aux25' order represents '1' with '1'
c Var 'aux25' order represents '0' with '-472'
c Encoding variable: aux26 with domain: bool (representing constraint (((0<grid_00003_00002) + (0<grid_00000_00002) + (0<grid_00001_00002))<=1))
c Var 'aux26' direct represents '0' with '-473'
c Var 'aux26' direct represents '1' with '473'
c Var 'aux26' order represents '1' with '1'
c Var 'aux26' order represents '0' with '-473'
c Encoding variable: aux27 with domain: bool (representing constraint (((0<grid_00003_00003) + (0<grid_00004_00003) + (0<grid_00000_00003) + (0<grid_00001_00003))<=1))
c Var 'aux27' direct represents '0' with '-474'
c Var 'aux27' direct represents '1' with '474'
c Var 'aux27' order represents '1' with '1'
c Var 'aux27' order represents '0' with '-474'
c Encoding variable: aux28 with domain: bool (representing constraint (((0<grid_00002_00004) + (0<grid_00003_00004) + (0<grid_00004_00004) + (0<grid_00000_00004))<=2))
c Var 'aux28' direct represents '0' with '-475'
c Var 'aux28' direct represents '1' with '475'
c Var 'aux28' order represents '1' with '1'
c Var 'aux28' order represents '0' with '-475'
c Encoding variable: aux29 with domain: int(0..2) (representing constraint ((grid_00003_00000=1) + (grid_00000_00004=1)))
c Both direct and order encoding.
c Var 'aux29' order represents '0' with '476'
c Var 'aux29' direct represents '0' with '476'
c Var 'aux29' order represents '1' with '477'
-476 477 0
c Var 'aux29' direct represents '1' with '478'
476 -477 478 0
-478 477 0
-478 -476 0
c Var 'aux29' direct represents '2' with '-477'
476 478 -477 0
c Encoding variable: aux30 with domain: int(0..2) (representing constraint ((grid_00000_00003=1) + (grid_00003_00001=1)))
c Both direct and order encoding.
c Var 'aux30' order represents '0' with '479'
c Var 'aux30' direct represents '0' with '479'
c Var 'aux30' order represents '1' with '480'
-479 480 0
c Var 'aux30' direct represents '1' with '481'
479 -480 481 0
-481 480 0
-481 -479 0
c Var 'aux30' direct represents '2' with '-480'
479 481 -480 0
c Encoding variable: aux31 with domain: int(0..2) (representing constraint ((grid_00000_00002=1) + (grid_00003_00003=1)))
c Both direct and order encoding.
c Var 'aux31' order represents '0' with '482'
c Var 'aux31' direct represents '0' with '482'
c Var 'aux31' order represents '1' with '483'
-482 483 0
c Var 'aux31' direct represents '1' with '484'
482 -483 484 0
-484 483 0
-484 -482 0
c Var 'aux31' direct represents '2' with '-483'
482 484 -483 0
c Encoding variable: aux32 with domain: int(0..2) (representing constraint ((1=grid_00001_00002) + (grid_00000_00000=1)))
c Both direct and order encoding.
c Var 'aux32' order represents '0' with '485'
c Var 'aux32' direct represents '0' with '485'
c Var 'aux32' order represents '1' with '486'
-485 486 0
c Var 'aux32' direct represents '1' with '487'
485 -486 487 0
-487 486 0
-487 -485 0
c Var 'aux32' direct represents '2' with '-486'
485 487 -486 0
c Encoding variable: aux33 with domain: int(0..2) (representing constraint ((grid_00000_00001=1) + (1=grid_00001_00003)))
c Both direct and order encoding.
c Var 'aux33' order represents '0' with '488'
c Var 'aux33' direct represents '0' with '488'
c Var 'aux33' order represents '1' with '489'
-488 489 0
c Var 'aux33' direct represents '1' with '490'
488 -489 490 0
-490 489 0
-490 -488 0
c Var 'aux33' direct represents '2' with '-489'
488 490 -489 0
c Encoding variable: aux34 with domain: int(0..2) (representing constraint ((grid_00004_00004=1) + (grid_00003_00004=1)))
c Both direct and order encoding.
c Var 'aux34' order represents '0' with '491'
c Var 'aux34' direct represents '0' with '491'
c Var 'aux34' order represents '1' with '492'
-491 492 0
c Var 'aux34' direct represents '1' with '493'
491 -492 493 0
-493 492 0
-493 -491 0
c Var 'aux34' direct represents '2' with '-492'
491 493 -492 0
c Encoding variable: aux35 with domain: int(0..2) (representing constraint ((grid_00004_00003=1) + (1=grid_00002_00001)))
c Both direct and order encoding.
c Var 'aux35' order represents '0' with '494'
c Var 'aux35' direct represents '0' with '494'
c Var 'aux35' order represents '1' with '495'
-494 495 0
c Var 'aux35' direct represents '1' with '496'
494 -495 496 0
-496 495 0
-496 -494 0
c Var 'aux35' direct represents '2' with '-495'
494 496 -495 0
c Encoding variable: aux36 with domain: int(0..2) (representing constraint ((grid_00004_00001=1) + (1=grid_00002_00004)))
c Both direct and order encoding.
c Var 'aux36' order represents '0' with '497'
c Var 'aux36' direct represents '0' with '497'
c Var 'aux36' order represents '1' with '498'
-497 498 0
c Var 'aux36' direct represents '1' with '499'
497 -498 499 0
-499 498 0
-499 -497 0
c Var 'aux36' direct represents '2' with '-498'
497 499 -498 0
c Encoding variable: aux37 with domain: int(0..2) (representing constraint ((grid_00004_00000=1) + (grid_00003_00002=1)))
c Both direct and order encoding.
c Var 'aux37' order represents '0' with '500'
c Var 'aux37' direct represents '0' with '500'
c Var 'aux37' order represents '1' with '501'
-500 501 0
c Var 'aux37' direct represents '1' with '502'
500 -501 502 0
-502 501 0
-502 -500 0
c Var 'aux37' direct represents '2' with '-501'
500 502 -501 0
c Encoding variable: aux38 with domain: int(0..2) (representing constraint ((1=grid_00001_00000) + (1=grid_00001_00001)))
c Both direct and order encoding.
c Var 'aux38' order represents '0' with '503'
c Var 'aux38' direct represents '0' with '503'
c Var 'aux38' order represents '1' with '504'
-503 504 0
c Var 'aux38' direct represents '1' with '505'
503 -504 505 0
-505 504 0
-505 -503 0
c Var 'aux38' direct represents '2' with '-504'
503 505 -504 0
c Encoding variable: aux39 with domain: int(0..4) (representing constraint (aux32 + aux38))
c Both direct and order encoding.
c Var 'aux39' order represents '0' with '506'
c Var 'aux39' direct represents '0' with '506'
c Var 'aux39' order represents '1' with '507'
-506 507 0
c Var 'aux39' direct represents '1' with '508'
506 -507 508 0
-508 507 0
-508 -506 0
c Var 'aux39' order represents '2' with '509'
-507 509 0
c Var 'aux39' direct represents '2' with '510'
507 -509 510 0
-510 509 0
-510 -507 0
c Var 'aux39' order represents '3' with '511'
-509 511 0
c Var 'aux39' direct represents '3' with '512'
509 -511 512 0
-512 511 0
-512 -509 0
c Var 'aux39' direct represents '4' with '-511'
506 508 510 512 -511 0
c Encoding variable: aux40 with domain: int(0..4) (representing constraint (aux31 + aux35))
c Both direct and order encoding.
c Var 'aux40' order represents '0' with '513'
c Var 'aux40' direct represents '0' with '513'
c Var 'aux40' order represents '1' with '514'
-513 514 0
c Var 'aux40' direct represents '1' with '515'
513 -514 515 0
-515 514 0
-515 -513 0
c Var 'aux40' order represents '2' with '516'
-514 516 0
c Var 'aux40' direct represents '2' with '517'
514 -516 517 0
-517 516 0
-517 -514 0
c Var 'aux40' order represents '3' with '518'
-516 518 0
c Var 'aux40' direct represents '3' with '519'
516 -518 519 0
-519 518 0
-519 -516 0
c Var 'aux40' direct represents '4' with '-518'
513 515 517 519 -518 0
c Encoding variable: aux41 with domain: int(0..4) (representing constraint (aux29 + aux30))
c Both direct and order encoding.
c Var 'aux41' order represents '0' with '520'
c Var 'aux41' direct represents '0' with '520'
c Var 'aux41' order represents '1' with '521'
-520 521 0
c Var 'aux41' direct represents '1' with '522'
520 -521 522 0
-522 521 0
-522 -520 0
c Var 'aux41' order represents '2' with '523'
-521 523 0
c Var 'aux41' direct represents '2' with '524'
521 -523 524 0
-524 523 0
-524 -521 0
c Var 'aux41' order represents '3' with '525'
-523 525 0
c Var 'aux41' direct represents '3' with '526'
523 -525 526 0
-526 525 0
-526 -523 0
c Var 'aux41' direct represents '4' with '-525'
520 522 524 526 -525 0
c Encoding variable: aux42 with domain: int(0..4) (representing constraint (aux33 + aux34))
c Both direct and order encoding.
c Var 'aux42' order represents '0' with '527'
c Var 'aux42' direct represents '0' with '527'
c Var 'aux42' order represents '1' with '528'
-527 528 0
c Var 'aux42' direct represents '1' with '529'
527 -528 529 0
-529 528 0
-529 -527 0
c Var 'aux42' order represents '2' with '530'
-528 530 0
c Var 'aux42' direct represents '2' with '531'
528 -530 531 0
-531 530 0
-531 -528 0
c Var 'aux42' order represents '3' with '532'
-530 532 0
c Var 'aux42' direct represents '3' with '533'
530 -532 533 0
-533 532 0
-533 -530 0
c Var 'aux42' direct represents '4' with '-532'
527 529 531 533 -532 0
c Encoding variable: aux43 with domain: int(0..4) (representing constraint (aux36 + aux37))
c Both direct and order encoding.
c Var 'aux43' order represents '0' with '534'
c Var 'aux43' direct represents '0' with '534'
c Var 'aux43' order represents '1' with '535'
-534 535 0
c Var 'aux43' direct represents '1' with '536'
534 -535 536 0
-536 535 0
-536 -534 0
c Var 'aux43' order represents '2' with '537'
-535 537 0
c Var 'aux43' direct represents '2' with '538'
535 -537 538 0
-538 537 0
-538 -535 0
c Var 'aux43' order represents '3' with '539'
-537 539 0
c Var 'aux43' direct represents '3' with '540'
537 -539 540 0
-540 539 0
-540 -537 0
c Var 'aux43' direct represents '4' with '-539'
534 536 538 540 -539 0
c Encoding variable: aux44 with domain: int(0..8) (representing constraint (aux40 + aux43))
c Both direct and order encoding.
c Var 'aux44' order represents '0' with '541'
c Var 'aux44' direct represents '0' with '541'
c Var 'aux44' order represents '1' with '542'
-541 542 0
c Var 'aux44' direct represents '1' with '543'
541 -542 543 0
-543 542 0
-543 -541 0
c Var 'aux44' order represents '2' with '544'
-542 544 0
c Var 'aux44' direct represents '2' with '545'
542 -544 545 0
-545 544 0
-545 -542 0
c Var 'aux44' order represents '3' with '546'
-544 546 0
c Var 'aux44' direct represents '3' with '547'
544 -546 547 0
-547 546 0
-547 -544 0
c Var 'aux44' order represents '4' with '548'
-546 548 0
c Var 'aux44' direct represents '4' with '549'
546 -548 549 0
-549 548 0
-549 -546 0
c Var 'aux44' order represents '5' with '550'
-548 550 0
c Var 'aux44' direct represents '5' with '551'
548 -550 551 0
-551 550 0
-551 -548 0
c Var 'aux44' order represents '6' with '552'
-550 552 0
c Var 'aux44' direct represents '6' with '553'
550 -552 553 0
-553 552 0
-553 -550 0
c Var 'aux44' order represents '7' with '554'
-552 554 0
c Var 'aux44' direct represents '7' with '555'
552 -554 555 0
-555 554 0
-555 -552 0
c Var 'aux44' direct represents '8' with '-554'
541 543 545 547 549 551 553 555 -554 0
c Encoding variable: aux45 with domain: int(0..8) (representing constraint (aux39 + aux41))
c Both direct and order encoding.
c Var 'aux45' order represents '0' with '556'
c Var 'aux45' direct represents '0' with '556'
c Var 'aux45' order represents '1' with '557'
-556 557 0
c Var 'aux45' direct represents '1' with '558'
556 -557 558 0
-558 557 0
-558 -556 0
c Var 'aux45' order represents '2' with '559'
-557 559 0
c Var 'aux45' direct represents '2' with '560'
557 -559 560 0
-560 559 0
-560 -557 0
c Var 'aux45' order represents '3' with '561'
-559 561 0
c Var 'aux45' direct represents '3' with '562'
559 -561 562 0
-562 561 0
-562 -559 0
c Var 'aux45' order represents '4' with '563'
-561 563 0
c Var 'aux45' direct represents '4' with '564'
561 -563 564 0
-564 563 0
-564 -561 0
c Var 'aux45' order represents '5' with '565'
-563 565 0
c Var 'aux45' direct represents '5' with '566'
563 -565 566 0
-566 565 0
-566 -563 0
c Var 'aux45' order represents '6' with '567'
-565 567 0
c Var 'aux45' direct represents '6' with '568'
565 -567 568 0
-568 567 0
-568 -565 0
c Var 'aux45' order represents '7' with '569'
-567 569 0
c Var 'aux45' direct represents '7' with '570'
567 -569 570 0
-570 569 0
-570 -567 0
c Var 'aux45' direct represents '8' with '-569'
556 558 560 562 564 566 568 570 -569 0
c Encoding variable: aux46 with domain: int(0..2) (representing constraint ((grid_00003_00000=2) + (grid_00000_00004=2)))
c Both direct and order encoding.
c Var 'aux46' order represents '0' with '571'
c Var 'aux46' direct represents '0' with '571'
c Var 'aux46' order represents '1' with '572'
-571 572 0
c Var 'aux46' direct represents '1' with '573'
571 -572 573 0
-573 572 0
-573 -571 0
c Var 'aux46' direct represents '2' with '-572'
571 573 -572 0
c Encoding variable: aux47 with domain: int(0..2) (representing constraint ((grid_00000_00003=2) + (grid_00003_00001=2)))
c Both direct and order encoding.
c Var 'aux47' order represents '0' with '574'
c Var 'aux47' direct represents '0' with '574'
c Var 'aux47' order represents '1' with '575'
-574 575 0
c Var 'aux47' direct represents '1' with '576'
574 -575 576 0
-576 575 0
-576 -574 0
c Var 'aux47' direct represents '2' with '-575'
574 576 -575 0
c Encoding variable: aux48 with domain: int(0..2) (representing constraint ((grid_00000_00002=2) + (grid_00003_00003=2)))
c Both direct and order encoding.
c Var 'aux48' order represents '0' with '577'
c Var 'aux48' direct represents '0' with '577'
c Var 'aux48' order represents '1' with '578'
-577 578 0
c Var 'aux48' direct represents '1' with '579'
577 -578 579 0
-579 578 0
-579 -577 0
c Var 'aux48' direct represents '2' with '-578'
577 579 -578 0
c Encoding variable: aux49 with domain: int(0..2) (representing constraint ((2=grid_00001_00002) + (grid_00000_00000=2)))
c Both direct and order encoding.
c Var 'aux49' order represents '0' with '580'
c Var 'aux49' direct represents '0' with '580'
c Var 'aux49' order represents '1' with '581'
-580 581 0
c Var 'aux49' direct represents '1' with '582'
580 -581 582 0
-582 581 0
-582 -580 0
c Var 'aux49' direct represents '2' with '-581'
580 582 -581 0
c Encoding variable: aux50 with domain: int(0..2) (representing constraint ((grid_00000_00001=2) + (2=grid_00001_00003)))
c Both direct and order encoding.
c Var 'aux50' order represents '0' with '583'
c Var 'aux50' direct represents '0' with '583'
c Var 'aux50' order represents '1' with '584'
-583 584 0
c Var 'aux50' direct represents '1' with '585'
583 -584 585 0
-585 584 0
-585 -583 0
c Var 'aux50' direct represents '2' with '-584'
583 585 -584 0
c Encoding variable: aux51 with domain: int(0..2) (representing constraint ((grid_00004_00004=2) + (grid_00003_00004=2)))
c Both direct and order encoding.
c Var 'aux51' order represents '0' with '586'
c Var 'aux51' direct represents '0' with '586'
c Var 'aux51' order represents '1' with '587'
-586 587 0
c Var 'aux51' direct represents '1' with '588'
586 -587 588 0
-588 587 0
-588 -586 0
c Var 'aux51' direct represents '2' with '-587'
586 588 -587 0
c Encoding variable: aux52 with domain: int(0..2) (representing constraint ((grid_00004_00003=2) + (2=grid_00002_00001)))
c Both direct and order encoding.
c Var 'aux52' order represents '0' with '589'
c Var 'aux52' direct represents '0' with '589'
c Var 'aux52' order represents '1' with '590'
-589 590 0
c Var 'aux52' direct represents '1' with '591'
589 -590 591 0
-591 590 0
-591 -589 0
c Var 'aux52' direct represents '2' with '-590'
589 591 -590 0
c Encoding variable: aux53 with domain: int(0..2) (representing constraint ((grid_00004_00001=2) + (2=grid_00002_00004)))
c Both direct and order encoding.
c Var 'aux53' order represents '0' with '592'
c Var 'aux53' direct represents '0' with '592'
c Var 'aux53' order represents '1' with '593'
-592 593 0
c Var 'aux53' direct represents '1' with '594'
592 -593 594 0
-594 593 0
-594 -592 0
c Var 'aux53' direct represents '2' with '-593'
592 594 -593 0
c Encoding variable: aux54 with domain: int(0..2) (representing constraint ((grid_00004_00000=2) + (grid_00003_00002=2)))
c Both direct and order encoding.
c Var 'aux54' order represents '0' with '595'
c Var 'aux54' direct represents '0' with '595'
c Var 'aux54' order represents '1' with '596'
-595 596 0
c Var 'aux54' direct represents '1' with '597'
595 -596 597 0
-597 596 0
-597 -595 0
c Var 'aux54' direct represents '2' with '-596'
595 597 -596 0
c Encoding variable: aux55 with domain: int(0..2) (representing constraint ((2=grid_00001_00000) + (2=grid_00001_00001)))
c Both direct and order encoding.
c Var 'aux55' order represents '0' with '598'
c Var 'aux55' direct represents '0' with '598'
c Var 'aux55' order represents '1' with '599'
-598 599 0
c Var 'aux55' direct represents '1' with '600'
598 -599 600 0
-600 599 0
-600 -598 0
c Var 'aux55' direct represents '2' with '-599'
598 600 -599 0
c Encoding variable: aux56 with domain: int(0..4) (representing constraint (aux49 + aux55))
c Both direct and order encoding.
c Var 'aux56' order represents '0' with '601'
c Var 'aux56' direct represents '0' with '601'
c Var 'aux56' order represents '1' with '602'
-601 602 0
c Var 'aux56' direct represents '1' with '603'
601 -602 603 0
-603 602 0
-603 -601 0
c Var 'aux56' order represents '2' with '604'
-602 604 0
c Var 'aux56' direct represents '2' with '605'
602 -604 605 0
-605 604 0
-605 -602 0
c Var 'aux56' order represents '3' with '606'
-604 606 0
c Var 'aux56' direct represents '3' with '607'
604 -606 607 0
-607 606 0
-607 -604 0
c Var 'aux56' direct represents '4' with '-606'
601 603 605 607 -606 0
c Encoding variable: aux57 with domain: int(0..4) (representing constraint (aux48 + aux52))
c Both direct and order encoding.
c Var 'aux57' order represents '0' with '608'
c Var 'aux57' direct represents '0' with '608'
c Var 'aux57' order represents '1' with '609'
-608 609 0
c Var 'aux57' direct represents '1' with '610'
608 -609 610 0
-610 609 0
-610 -608 0
c Var 'aux57' order represents '2' with '611'
-609 611 0
c Var 'aux57' direct represents '2' with '612'
609 -611 612 0
-612 611 0
-612 -609 0
c Var 'aux57' order represents '3' with '613'
-611 613 0
c Var 'aux57' direct represents '3' with '614'
611 -613 614 0
-614 613 0
-614 -611 0
c Var 'aux57' direct represents '4' with '-613'
608 610 612 614 -613 0
c Encoding variable: aux58 with domain: int(0..4) (representing constraint (aux46 + aux47))
c Both direct and order encoding.
c Var 'aux58' order represents '0' with '615'
c Var 'aux58' direct represents '0' with '615'
c Var 'aux58' order represents '1' with '616'
-615 616 0
c Var 'aux58' direct represents '1' with '617'
615 -616 617 0
-617 616 0
-617 -615 0
c Var 'aux58' order represents '2' with '618'
-616 618 0
c Var 'aux58' direct represents '2' with '619'
616 -618 619 0
-619 618 0
-619 -616 0
c Var 'aux58' order represents '3' with '620'
-618 620 0
c Var 'aux58' direct represents '3' with '621'
618 -620 621 0
-621 620 0
-621 -618 0
c Var 'aux58' direct represents '4' with '-620'
615 617 619 621 -620 0
c Encoding variable: aux59 with domain: int(0..4) (representing constraint (aux50 + aux51))
c Both direct and order encoding.
c Var 'aux59' order represents '0' with '622'
c Var 'aux59' direct represents '0' with '622'
c Var 'aux59' order represents '1' with '623'
-622 623 0
c Var 'aux59' direct represents '1' with '624'
622 -623 624 0
-624 623 0
-624 -622 0
c Var 'aux59' order represents '2' with '625'
-623 625 0
c Var 'aux59' direct represents '2' with '626'
623 -625 626 0
-626 625 0
-626 -623 0
c Var 'aux59' order represents '3' with '627'
-625 627 0
c Var 'aux59' direct represents '3' with '628'
625 -627 628 0
-628 627 0
-628 -625 0
c Var 'aux59' direct represents '4' with '-627'
622 624 626 628 -627 0
c Encoding variable: aux60 with domain: int(0..4) (representing constraint (aux53 + aux54))
c Both direct and order encoding.
c Var 'aux60' order represents '0' with '629'
c Var 'aux60' direct represents '0' with '629'
c Var 'aux60' order represents '1' with '630'
-629 630 0
c Var 'aux60' direct represents '1' with '631'
629 -630 631 0
-631 630 0
-631 -629 0
c Var 'aux60' order represents '2' with '632'
-630 632 0
c Var 'aux60' direct represents '2' with '633'
630 -632 633 0
-633 632 0
-633 -630 0
c Var 'aux60' order represents '3' with '634'
-632 634 0
c Var 'aux60' direct represents '3' with '635'
632 -634 635 0
-635 634 0
-635 -632 0
c Var 'aux60' direct represents '4' with '-634'
629 631 633 635 -634 0
c Encoding variable: aux61 with domain: int(0..8) (representing constraint (aux57 + aux60))
c Both direct and order encoding.
c Var 'aux61' order represents '0' with '636'
c Var 'aux61' direct represents '0' with '636'
c Var 'aux61' order represents '1' with '637'
-636 637 0
c Var 'aux61' direct represents '1' with '638'
636 -637 638 0
-638 637 0
-638 -636 0
c Var 'aux61' order represents '2' with '639'
-637 639 0
c Var 'aux61' direct represents '2' with '640'
637 -639 640 0
-640 639 0
-640 -637 0
c Var 'aux61' order represents '3' with '641'
-639 641 0
c Var 'aux61' direct represents '3' with '642'
639 -641 642 0
-642 641 0
-642 -639 0
c Var 'aux61' order represents '4' with '643'
-641 643 0
c Var 'aux61' direct represents '4' with '644'
641 -643 644 0
-644 643 0
-644 -641 0
c Var 'aux61' order represents '5' with '645'
-643 645 0
c Var 'aux61' direct represents '5' with '646'
643 -645 646 0
-646 645 0
-646 -643 0
c Var 'aux61' order represents '6' with '647'
-645 647 0
c Var 'aux61' direct represents '6' with '648'
645 -647 648 0
-648 647 0
-648 -645 0
c Var 'aux61' order represents '7' with '649'
-647 649 0
c Var 'aux61' direct represents '7' with '650'
647 -649 650 0
-650 649 0
-650 -647 0
c Var 'aux61' direct represents '8' with '-649'
636 638 640 642 644 646 648 650 -649 0
c Encoding variable: aux62 with domain: int(0..8) (representing constraint (aux56 + aux58))
c Both direct and order encoding.
c Var 'aux62' order represents '0' with '651'
c Var 'aux62' direct represents '0' with '651'
c Var 'aux62' order represents '1' with '652'
-651 652 0
c Var 'aux62' direct represents '1' with '653'
651 -652 653 0
-653 652 0
-653 -651 0
c Var 'aux62' order represents '2' with '654'
-652 654 0
c Var 'aux62' direct represents '2' with '655'
652 -654 655 0
-655 654 0
-655 -652 0
c Var 'aux62' order represents '3' with '656'
-654 656 0
c Var 'aux62' direct represents '3' with '657'
654 -656 657 0
-657 656 0
-657 -654 0
c Var 'aux62' order represents '4' with '658'
-656 658 0
c Var 'aux62' direct represents '4' with '659'
656 -658 659 0
-659 658 0
-659 -656 0
c Var 'aux62' order represents '5' with '660'
-658 660 0
c Var 'aux62' direct represents '5' with '661'
658 -660 661 0
-661 660 0
-661 -658 0
c Var 'aux62' order represents '6' with '662'
-660 662 0
c Var 'aux62' direct represents '6' with '663'
660 -662 663 0
-663 662 0
-663 -660 0
c Var 'aux62' order represents '7' with '664'
-662 664 0
c Var 'aux62' direct represents '7' with '665'
662 -664 665 0
-665 664 0
-665 -662 0
c Var 'aux62' direct represents '8' with '-664'
651 653 655 657 659 661 663 665 -664 0
c Encoding variable: aux63 with domain: int(0..2) (representing constraint ((grid_00003_00000=3) + (grid_00000_00004=3)))
c Both direct and order encoding.
c Var 'aux63' order represents '0' with '666'
c Var 'aux63' direct represents '0' with '666'
c Var 'aux63' order represents '1' with '667'
-666 667 0
c Var 'aux63' direct represents '1' with '668'
666 -667 668 0
-668 667 0
-668 -666 0
c Var 'aux63' direct represents '2' with '-667'
666 668 -667 0
c Encoding variable: aux64 with domain: int(0..2) (representing constraint ((grid_00000_00003=3) + (grid_00003_00001=3)))
c Both direct and order encoding.
c Var 'aux64' order represents '0' with '669'
c Var 'aux64' direct represents '0' with '669'
c Var 'aux64' order represents '1' with '670'
-669 670 0
c Var 'aux64' direct represents '1' with '671'
669 -670 671 0
-671 670 0
-671 -669 0
c Var 'aux64' direct represents '2' with '-670'
669 671 -670 0
c Encoding variable: aux65 with domain: int(0..2) (representing constraint ((grid_00000_00002=3) + (grid_00003_00003=3)))
c Both direct and order encoding.
c Var 'aux65' order represents '0' with '672'
c Var 'aux65' direct represents '0' with '672'
c Var 'aux65' order represents '1' with '673'
-672 673 0
c Var 'aux65' direct represents '1' with '674'
672 -673 674 0
-674 673 0
-674 -672 0
c Var 'aux65' direct represents '2' with '-673'
672 674 -673 0
c Encoding variable: aux66 with domain: int(0..2) (representing constraint ((3=grid_00001_00002) + (grid_00000_00000=3)))
c Both direct and order encoding.
c Var 'aux66' order represents '0' with '675'
c Var 'aux66' direct represents '0' with '675'
c Var 'aux66' order represents '1' with '676'
-675 676 0
c Var 'aux66' direct represents '1' with '677'
675 -676 677 0
-677 676 0
-677 -675 0
c Var 'aux66' direct represents '2' with '-676'
675 677 -676 0
c Encoding variable: aux67 with domain: int(0..2) (representing constraint ((grid_00000_00001=3) + (3=grid_00001_00003)))
c Both direct and order encoding.
c Var 'aux67' order represents '0' with '678'
c Var 'aux67' direct represents '0' with '678'
c Var 'aux67' order represents '1' with '679'
-678 679 0
c Var 'aux67' direct represents '1' with '680'
678 -679 680 0
-680 679 0
-680 -678 0
c Var 'aux67' direct represents '2' with '-679'
678 680 -679 0
c Encoding variable: aux68 with domain: int(0..2) (representing constraint ((grid_00004_00004=3) + (grid_00003_00004=3)))
c Both direct and order encoding.
c Var 'aux68' order represents '0' with '681'
c Var 'aux68' direct represents '0' with '681'
c Var 'aux68' order represents '1' with '682'
-681 682 0
c Var 'aux68' direct represents '1' with '683'
681 -682 683 0
-683 682 0
-683 -681 0
c Var 'aux68' direct represents '2' with '-682'
681 683 -682 0
c Encoding variable: aux69 with domain: int(0..2) (representing constraint ((grid_00004_00003=3) + (3=grid_00002_00001)))
c Both direct and order encoding.
c Var 'aux69' order represents '0' with '684'
c Var 'aux69' direct represents '0' with '684'
c Var 'aux69' order represents '1' with '685'
-684 685 0
c Var 'aux69' direct represents '1' with '686'
684 -685 686 0
-686 685 0
-686 -684 0
c Var 'aux69' direct represents '2' with '-685'
684 686 -685 0
c Encoding variable: aux70 with domain: int(0..2) (representing constraint ((grid_00004_00001=3) + (3=grid_00002_00004)))
c Both direct and order encoding.
c Var 'aux70' order represents '0' with '687'
c Var 'aux70' direct represents '0' with '687'
c Var 'aux70' order represents '1' with '688'
-687 688 0
c Var 'aux70' direct represents '1' with '689'
687 -688 689 0
-689 688 0
-689 -687 0
c Var 'aux70' direct represents '2' with '-688'
687 689 -688 0
c Encoding variable: aux71 with domain: int(0..2) (representing constraint ((grid_00004_00000=3) + (grid_00003_00002=3)))
c Both direct and order encoding.
c Var 'aux71' order represents '0' with '690'
c Var 'aux71' direct represents '0' with '690'
c Var 'aux71' order represents '1' with '691'
-690 691 0
c Var 'aux71' direct represents '1' with '692'
690 -691 692 0
-692 691 0
-692 -690 0
c Var 'aux71' direct represents '2' with '-691'
690 692 -691 0
c Encoding variable: aux72 with domain: int(0..2) (representing constraint ((3=grid_00001_00000) + (3=grid_00001_00001)))
c Both direct and order encoding.
c Var 'aux72' order represents '0' with '693'
c Var 'aux72' direct represents '0' with '693'
c Var 'aux72' order represents '1' with '694'
-693 694 0
c Var 'aux72' direct represents '1' with '695'
693 -694 695 0
-695 694 0
-695 -693 0
c Var 'aux72' direct represents '2' with '-694'
693 695 -694 0
c Encoding variable: aux73 with domain: int(0..4) (representing constraint (aux66 + aux72))
c Both direct and order encoding.
c Var 'aux73' order represents '0' with '696'
c Var 'aux73' direct represents '0' with '696'
c Var 'aux73' order represents '1' with '697'
-696 697 0
c Var 'aux73' direct represents '1' with '698'
696 -697 698 0
-698 697 0
-698 -696 0
c Var 'aux73' order represents '2' with '699'
-697 699 0
c Var 'aux73' direct represents '2' with '700'
697 -699 700 0
-700 699 0
-700 -697 0
c Var 'aux73' order represents '3' with '701'
-699 701 0
c Var 'aux73' direct represents '3' with '702'
699 -701 702 0
-702 701 0
-702 -699 0
c Var 'aux73' direct represents '4' with '-701'
696 698 700 702 -701 0
c Encoding variable: aux74 with domain: int(0..4) (representing constraint (aux65 + aux69))
c Both direct and order encoding.
c Var 'aux74' order represents '0' with '703'
c Var 'aux74' direct represents '0' with '703'
c Var 'aux74' order represents '1' with '704'
-703 704 0
c Var 'aux74' direct represents '1' with '705'
703 -704 705 0
-705 704 0
-705 -703 0
c Var 'aux74' order represents '2' with '706'
-704 706 0
c Var 'aux74' direct represents '2' with '707'
704 -706 707 0
-707 706 0
-707 -704 0
c Var 'aux74' order represents '3' with '708'
-706 708 0
c Var 'aux74' direct represents '3' with '709'
706 -708 709 0
-709 708 0
-709 -706 0
c Var 'aux74' direct represents '4' with '-708'
703 705 707 709 -708 0
c Encoding variable: aux75 with domain: int(0..4) (representing constraint (aux63 + aux64))
c Both direct and order encoding.
c Var 'aux75' order represents '0' with '710'
c Var 'aux75' direct represents '0' with '710'
c Var 'aux75' order represents '1' with '711'
-710 711 0
c Var 'aux75' direct represents '1' with '712'
710 -711 712 0
-712 711 0
-712 -710 0
c Var 'aux75' order represents '2' with '713'
-711 713 0
c Var 'aux75' direct represents '2' with '714'
711 -713 714 0
-714 713 0
-714 -711 0
c Var 'aux75' order represents '3' with '715'
-713 715 0
c Var 'aux75' direct represents '3' with '716'
713 -715 716 0
-716 715 0
-716 -713 0
c Var 'aux75' direct represents '4' with '-715'
710 712 714 716 -715 0
c Encoding variable: aux76 with domain: int(0..4) (representing constraint (aux67 + aux68))
c Both direct and order encoding.
c Var 'aux76' order represents '0' with '717'
c Var 'aux76' direct represents '0' with '717'
c Var 'aux76' order represents '1' with '718'
-717 718 0
c Var 'aux76' direct represents '1' with '719'
717 -718 719 0
-719 718 0
-719 -717 0
c Var 'aux76' order represents '2' with '720'
-718 720 0
c Var 'aux76' direct represents '2' with '721'
718 -720 721 0
-721 720 0
-721 -718 0
c Var 'aux76' order represents '3' with '722'
-720 722 0
c Var 'aux76' direct represents '3' with '723'
720 -722 723 0
-723 722 0
-723 -720 0
c Var 'aux76' direct represents '4' with '-722'
717 719 721 723 -722 0
c Encoding variable: aux77 with domain: int(0..4) (representing constraint (aux70 + aux71))
c Both direct and order encoding.
c Var 'aux77' order represents '0' with '724'
c Var 'aux77' direct represents '0' with '724'
c Var 'aux77' order represents '1' with '725'
-724 725 0
c Var 'aux77' direct represents '1' with '726'
724 -725 726 0
-726 725 0
-726 -724 0
c Var 'aux77' order represents '2' with '727'
-725 727 0
c Var 'aux77' direct represents '2' with '728'
725 -727 728 0
-728 727 0
-728 -725 0
c Var 'aux77' order represents '3' with '729'
-727 729 0
c Var 'aux77' direct represents '3' with '730'
727 -729 730 0
-730 729 0
-730 -727 0
c Var 'aux77' direct represents '4' with '-729'
724 726 728 730 -729 0
c Encoding variable: aux78 with domain: int(0..8) (representing constraint (aux74 + aux77))
c Both direct and order encoding.
c Var 'aux78' order represents '0' with '731'
c Var 'aux78' direct represents '0' with '731'
c Var 'aux78' order represents '1' with '732'
-731 732 0
c Var 'aux78' direct represents '1' with '733'
731 -732 733 0
-733 732 0
-733 -731 0
c Var 'aux78' order represents '2' with '734'
-732 734 0
c Var 'aux78' direct represents '2' with '735'
732 -734 735 0
-735 734 0
-735 -732 0
c Var 'aux78' order represents '3' with '736'
-734 736 0
c Var 'aux78' direct represents '3' with '737'
734 -736 737 0
-737 736 0
-737 -734 0
c Var 'aux78' order represents '4' with '738'
-736 738 0
c Var 'aux78' direct represents '4' with '739'
736 -738 739 0
-739 738 0
-739 -736 0
c Var 'aux78' order represents '5' with '740'
-738 740 0
c Var 'aux78' direct represents '5' with '741'
738 -740 741 0
-741 740 0
-741 -738 0
c Var 'aux78' order represents '6' with '742'
-740 742 0
c Var 'aux78' direct represents '6' with '743'
740 -742 743 0
-743 742 0
-743 -740 0
c Var 'aux78' order represents '7' with '744'
-742 744 0
c Var 'aux78' direct represents '7' with '745'
742 -744 745 0
-745 744 0
-745 -742 0
c Var 'aux78' direct represents '8' with '-744'
731 733 735 737 739 741 743 745 -744 0
c Encoding variable: aux79 with domain: int(0..8) (representing constraint (aux73 + aux75))
c Both direct and order encoding.
c Var 'aux79' order represents '0' with '746'
c Var 'aux79' direct represents '0' with '746'
c Var 'aux79' order represents '1' with '747'
-746 747 0
c Var 'aux79' direct represents '1' with '748'
746 -747 748 0
-748 747 0
-748 -746 0
c Var 'aux79' order represents '2' with '749'
-747 749 0
c Var 'aux79' direct represents '2' with '750'
747 -749 750 0
-750 749 0
-750 -747 0
c Var 'aux79' order represents '3' with '751'
-749 751 0
c Var 'aux79' direct represents '3' with '752'
749 -751 752 0
-752 751 0
-752 -749 0
c Var 'aux79' order represents '4' with '753'
-751 753 0
c Var 'aux79' direct represents '4' with '754'
751 -753 754 0
-754 753 0
-754 -751 0
c Var 'aux79' order represents '5' with '755'
-753 755 0
c Var 'aux79' direct represents '5' with '756'
753 -755 756 0
-756 755 0
-756 -753 0
c Var 'aux79' order represents '6' with '757'
-755 757 0
c Var 'aux79' direct represents '6' with '758'
755 -757 758 0
-758 757 0
-758 -755 0
c Var 'aux79' order represents '7' with '759'
-757 759 0
c Var 'aux79' direct represents '7' with '760'
757 -759 760 0
-760 759 0
-760 -757 0
c Var 'aux79' direct represents '8' with '-759'
746 748 750 752 754 756 758 760 -759 0
c Encoding variable: aux80 with domain: int(0..2) (representing constraint ((grid_00003_00000=4) + (grid_00000_00004=4)))
c Both direct and order encoding.
c Var 'aux80' order represents '0' with '761'
c Var 'aux80' direct represents '0' with '761'
c Var 'aux80' order represents '1' with '762'
-761 762 0
c Var 'aux80' direct represents '1' with '763'
761 -762 763 0
-763 762 0
-763 -761 0
c Var 'aux80' direct represents '2' with '-762'
761 763 -762 0
c Encoding variable: aux81 with domain: int(0..2) (representing constraint ((grid_00000_00003=4) + (grid_00003_00001=4)))
c Both direct and order encoding.
c Var 'aux81' order represents '0' with '764'
c Var 'aux81' direct represents '0' with '764'
c Var 'aux81' order represents '1' with '765'
-764 765 0
c Var 'aux81' direct represents '1' with '766'
764 -765 766 0
-766 765 0
-766 -764 0
c Var 'aux81' direct represents '2' with '-765'
764 766 -765 0
c Encoding variable: aux82 with domain: int(0..2) (representing constraint ((grid_00000_00002=4) + (grid_00003_00003=4)))
c Both direct and order encoding.
c Var 'aux82' order represents '0' with '767'
c Var 'aux82' direct represents '0' with '767'
c Var 'aux82' order represents '1' with '768'
-767 768 0
c Var 'aux82' direct represents '1' with '769'
767 -768 769 0
-769 768 0
-769 -767 0
c Var 'aux82' direct represents '2' with '-768'
767 769 -768 0
c Encoding variable: aux83 with domain: int(0..2) (representing constraint ((4=grid_00001_00002) + (grid_00000_00000=4)))
c Both direct and order encoding.
c Var 'aux83' order represents '0' with '770'
c Var 'aux83' direct represents '0' with '770'
c Var 'aux83' order represents '1' with '771'
-770 771 0
c Var 'aux83' direct represents '1' with '772'
770 -771 772 0
-772 771 0
-772 -770 0
c Var 'aux83' direct represents '2' with '-771'
770 772 -771 0
c Encoding variable: aux84 with domain: int(0..2) (representing constraint ((grid_00000_00001=4) + (4=grid_00001_00003)))
c Both direct and order encoding.
c Var 'aux84' order represents '0' with '773'
c Var 'aux84' direct represents '0' with '773'
c Var 'aux84' order represents '1' with '774'
-773 774 0
c Var 'aux84' direct represents '1' with '775'
773 -774 775 0
-775 774 0
-775 -773 0
c Var 'aux84' direct represents '2' with '-774'
773 775 -774 0
c Encoding variable: aux85 with domain: int(0..2) (representing constraint ((grid_00004_00004=4) + (grid_00003_00004=4)))
c Both direct and order encoding.
c Var 'aux85' order represents '0' with '776'
c Var 'aux85' direct represents '0' with '776'
c Var 'aux85' order represents '1' with '777'
-776 777 0
c Var 'aux85' direct represents '1' with '778'
776 -777 778 0
-778 777 0
-778 -776 0
c Var 'aux85' direct represents '2' with '-777'
776 778 -777 0
c Encoding variable: aux86 with domain: int(0..2) (representing constraint ((grid_00004_00003=4) + (4=grid_00002_00001)))
c Both direct and order encoding.
c Var 'aux86' order represents '0' with '779'
c Var 'aux86' direct represents '0' with '779'
c Var 'aux86' order represents '1' with '780'
-779 780 0
c Var 'aux86' direct represents '1' with '781'
779 -780 781 0
-781 780 0
-781 -779 0
c Var 'aux86' direct represents '2' with '-780'
779 781 -780 0
c Encoding variable: aux87 with domain: int(0..2) (representing constraint ((grid_00004_00001=4) + (4=grid_00002_00004)))
c Both direct and order encoding.
c Var 'aux87' order represents '0' with '782'
c Var 'aux87' direct represents '0' with '782'
c Var 'aux87' order represents '1' with '783'
-782 783 0
c Var 'aux87' direct represents '1' with '784'
782 -783 784 0
-784 783 0
-784 -782 0
c Var 'aux87' direct represents '2' with '-783'
782 784 -783 0
c Encoding variable: aux88 with domain: int(0..2) (representing constraint ((grid_00004_00000=4) + (grid_00003_00002=4)))
c Both direct and order encoding.
c Var 'aux88' order represents '0' with '785'
c Var 'aux88' direct represents '0' with '785'
c Var 'aux88' order represents '1' with '786'
-785 786 0
c Var 'aux88' direct represents '1' with '787'
785 -786 787 0
-787 786 0
-787 -785 0
c Var 'aux88' direct represents '2' with '-786'
785 787 -786 0
c Encoding variable: aux89 with domain: int(0..2) (representing constraint ((4=grid_00001_00000) + (4=grid_00001_00001)))
c Both direct and order encoding.
c Var 'aux89' order represents '0' with '788'
c Var 'aux89' direct represents '0' with '788'
c Var 'aux89' order represents '1' with '789'
-788 789 0
c Var 'aux89' direct represents '1' with '790'
788 -789 790 0
-790 789 0
-790 -788 0
c Var 'aux89' direct represents '2' with '-789'
788 790 -789 0
c Encoding variable: aux90 with domain: int(0..4) (representing constraint (aux83 + aux89))
c Both direct and order encoding.
c Var 'aux90' order represents '0' with '791'
c Var 'aux90' direct represents '0' with '791'
c Var 'aux90' order represents '1' with '792'
-791 792 0
c Var 'aux90' direct represents '1' with '793'
791 -792 793 0
-793 792 0
-793 -791 0
c Var 'aux90' order represents '2' with '794'
-792 794 0
c Var 'aux90' direct represents '2' with '795'
792 -794 795 0
-795 794 0
-795 -792 0
c Var 'aux90' order represents '3' with '796'
-794 796 0
c Var 'aux90' direct represents '3' with '797'
794 -796 797 0
-797 796 0
-797 -794 0
c Var 'aux90' direct represents '4' with '-796'
791 793 795 797 -796 0
c Encoding variable: aux91 with domain: int(0..4) (representing constraint (aux82 + aux86))
c Both direct and order encoding.
c Var 'aux91' order represents '0' with '798'
c Var 'aux91' direct represents '0' with '798'
c Var 'aux91' order represents '1' with '799'
-798 799 0
c Var 'aux91' direct represents '1' with '800'
798 -799 800 0
-800 799 0
-800 -798 0
c Var 'aux91' order represents '2' with '801'
-799 801 0
c Var 'aux91' direct represents '2' with '802'
799 -801 802 0
-802 801 0
-802 -799 0
c Var 'aux91' order represents '3' with '803'
-801 803 0
c Var 'aux91' direct represents '3' with '804'
801 -803 804 0
-804 803 0
-804 -801 0
c Var 'aux91' direct represents '4' with '-803'
798 800 802 804 -803 0
c Encoding variable: aux92 with domain: int(0..4) (representing constraint (aux80 + aux81))
c Both direct and order encoding.
c Var 'aux92' order represents '0' with '805'
c Var 'aux92' direct represents '0' with '805'
c Var 'aux92' order represents '1' with '806'
-805 806 0
c Var 'aux92' direct represents '1' with '807'
805 -806 807 0
-807 806 0
-807 -805 0
c Var 'aux92' order represents '2' with '808'
-806 808 0
c Var 'aux92' direct represents '2' with '809'
806 -808 809 0
-809 808 0
-809 -806 0
c Var 'aux92' order represents '3' with '810'
-808 810 0
c Var 'aux92' direct represents '3' with '811'
808 -810 811 0
-811 810 0
-811 -808 0
c Var 'aux92' direct represents '4' with '-810'
805 807 809 811 -810 0
c Encoding variable: aux93 with domain: int(0..4) (representing constraint (aux84 + aux85))
c Both direct and order encoding.
c Var 'aux93' order represents '0' with '812'
c Var 'aux93' direct represents '0' with '812'
c Var 'aux93' order represents '1' with '813'
-812 813 0
c Var 'aux93' direct represents '1' with '814'
812 -813 814 0
-814 813 0
-814 -812 0
c Var 'aux93' order represents '2' with '815'
-813 815 0
c Var 'aux93' direct represents '2' with '816'
813 -815 816 0
-816 815 0
-816 -813 0
c Var 'aux93' order represents '3' with '817'
-815 817 0
c Var 'aux93' direct represents '3' with '818'
815 -817 818 0
-818 817 0
-818 -815 0
c Var 'aux93' direct represents '4' with '-817'
812 814 816 818 -817 0
c Encoding variable: aux94 with domain: int(0..4) (representing constraint (aux87 + aux88))
c Both direct and order encoding.
c Var 'aux94' order represents '0' with '819'
c Var 'aux94' direct represents '0' with '819'
c Var 'aux94' order represents '1' with '820'
-819 820 0
c Var 'aux94' direct represents '1' with '821'
819 -820 821 0
-821 820 0
-821 -819 0
c Var 'aux94' order represents '2' with '822'
-820 822 0
c Var 'aux94' direct represents '2' with '823'
820 -822 823 0
-823 822 0
-823 -820 0
c Var 'aux94' order represents '3' with '824'
-822 824 0
c Var 'aux94' direct represents '3' with '825'
822 -824 825 0
-825 824 0
-825 -822 0
c Var 'aux94' direct represents '4' with '-824'
819 821 823 825 -824 0
c Encoding variable: aux95 with domain: int(0..8) (representing constraint (aux91 + aux94))
c Both direct and order encoding.
c Var 'aux95' order represents '0' with '826'
c Var 'aux95' direct represents '0' with '826'
c Var 'aux95' order represents '1' with '827'
-826 827 0
c Var 'aux95' direct represents '1' with '828'
826 -827 828 0
-828 827 0
-828 -826 0
c Var 'aux95' order represents '2' with '829'
-827 829 0
c Var 'aux95' direct represents '2' with '830'
827 -829 830 0
-830 829 0
-830 -827 0
c Var 'aux95' order represents '3' with '831'
-829 831 0
c Var 'aux95' direct represents '3' with '832'
829 -831 832 0
-832 831 0
-832 -829 0
c Var 'aux95' order represents '4' with '833'
-831 833 0
c Var 'aux95' direct represents '4' with '834'
831 -833 834 0
-834 833 0
-834 -831 0
c Var 'aux95' order represents '5' with '835'
-833 835 0
c Var 'aux95' direct represents '5' with '836'
833 -835 836 0
-836 835 0
-836 -833 0
c Var 'aux95' order represents '6' with '837'
-835 837 0
c Var 'aux95' direct represents '6' with '838'
835 -837 838 0
-838 837 0
-838 -835 0
c Var 'aux95' order represents '7' with '839'
-837 839 0
c Var 'aux95' direct represents '7' with '840'
837 -839 840 0
-840 839 0
-840 -837 0
c Var 'aux95' direct represents '8' with '-839'
826 828 830 832 834 836 838 840 -839 0
c Encoding variable: aux96 with domain: int(0..8) (representing constraint (aux90 + aux92))
c Both direct and order encoding.
c Var 'aux96' order represents '0' with '841'
c Var 'aux96' direct represents '0' with '841'
c Var 'aux96' order represents '1' with '842'
-841 842 0
c Var 'aux96' direct represents '1' with '843'
841 -842 843 0
-843 842 0
-843 -841 0
c Var 'aux96' order represents '2' with '844'
-842 844 0
c Var 'aux96' direct represents '2' with '845'
842 -844 845 0
-845 844 0
-845 -842 0
c Var 'aux96' order represents '3' with '846'
-844 846 0
c Var 'aux96' direct represents '3' with '847'
844 -846 847 0
-847 846 0
-847 -844 0
c Var 'aux96' order represents '4' with '848'
-846 848 0
c Var 'aux96' direct represents '4' with '849'
846 -848 849 0
-849 848 0
-849 -846 0
c Var 'aux96' order represents '5' with '850'
-848 850 0
c Var 'aux96' direct represents '5' with '851'
848 -850 851 0
-851 850 0
-851 -848 0
c Var 'aux96' order represents '6' with '852'
-850 852 0
c Var 'aux96' direct represents '6' with '853'
850 -852 853 0
-853 852 0
-853 -850 0
c Var 'aux96' order represents '7' with '854'
-852 854 0
c Var 'aux96' direct represents '7' with '855'
852 -854 855 0
-855 854 0
-855 -852 0
c Var 'aux96' direct represents '8' with '-854'
841 843 845 847 849 851 853 855 -854 0
c Encoding variable: aux97 with domain: int(0..2) (representing constraint ((grid_00003_00000=5) + (grid_00000_00004=5)))
c Both direct and order encoding.
c Var 'aux97' order represents '0' with '856'
c Var 'aux97' direct represents '0' with '856'
c Var 'aux97' order represents '1' with '857'
-856 857 0
c Var 'aux97' direct represents '1' with '858'
856 -857 858 0
-858 857 0
-858 -856 0
c Var 'aux97' direct represents '2' with '-857'
856 858 -857 0
c Encoding variable: aux98 with domain: int(0..2) (representing constraint ((grid_00000_00003=5) + (grid_00003_00001=5)))
c Both direct and order encoding.
c Var 'aux98' order represents '0' with '859'
c Var 'aux98' direct represents '0' with '859'
c Var 'aux98' order represents '1' with '860'
-859 860 0
c Var 'aux98' direct represents '1' with '861'
859 -860 861 0
-861 860 0
-861 -859 0
c Var 'aux98' direct represents '2' with '-860'
859 861 -860 0
c Encoding variable: aux99 with domain: int(0..2) (representing constraint ((grid_00000_00002=5) + (grid_00003_00003=5)))
c Both direct and order encoding.
c Var 'aux99' order represents '0' with '862'
c Var 'aux99' direct represents '0' with '862'
c Var 'aux99' order represents '1' with '863'
-862 863 0
c Var 'aux99' direct represents '1' with '864'
862 -863 864 0
-864 863 0
-864 -862 0
c Var 'aux99' direct represents '2' with '-863'
862 864 -863 0
c Encoding variable: aux100 with domain: int(0..2) (representing constraint ((5=grid_00001_00002) + (grid_00000_00000=5)))
c Both direct and order encoding.
c Var 'aux100' order represents '0' with '865'
c Var 'aux100' direct represents '0' with '865'
c Var 'aux100' order represents '1' with '866'
-865 866 0
c Var 'aux100' direct represents '1' with '867'
865 -866 867 0
-867 866 0
-867 -865 0
c Var 'aux100' direct represents '2' with '-866'
865 867 -866 0
c Encoding variable: aux101 with domain: int(0..2) (representing constraint ((grid_00000_00001=5) + (5=grid_00001_00003)))
c Both direct and order encoding.
c Var 'aux101' order represents '0' with '868'
c Var 'aux101' direct represents '0' with '868'
c Var 'aux101' order represents '1' with '869'
-868 869 0
c Var 'aux101' direct represents '1' with '870'
868 -869 870 0
-870 869 0
-870 -868 0
c Var 'aux101' direct represents '2' with '-869'
868 870 -869 0
c Encoding variable: aux102 with domain: int(0..2) (representing constraint ((grid_00004_00004=5) + (grid_00003_00004=5)))
c Both direct and order encoding.
c Var 'aux102' order represents '0' with '871'
c Var 'aux102' direct represents '0' with '871'
c Var 'aux102' order represents '1' with '872'
-871 872 0
c Var 'aux102' direct represents '1' with '873'
871 -872 873 0
-873 872 0
-873 -871 0
c Var 'aux102' direct represents '2' with '-872'
871 873 -872 0
c Encoding variable: aux103 with domain: int(0..2) (representing constraint ((grid_00004_00003=5) + (5=grid_00002_00001)))
c Both direct and order encoding.
c Var 'aux103' order represents '0' with '874'
c Var 'aux103' direct represents '0' with '874'
c Var 'aux103' order represents '1' with '875'
-874 875 0
c Var 'aux103' direct represents '1' with '876'
874 -875 876 0
-876 875 0
-876 -874 0
c Var 'aux103' direct represents '2' with '-875'
874 876 -875 0
c Encoding variable: aux104 with domain: int(0..2) (representing constraint ((grid_00004_00001=5) + (5=grid_00002_00004)))
c Both direct and order encoding.
c Var 'aux104' order represents '0' with '877'
c Var 'aux104' direct represents '0' with '877'
c Var 'aux104' order represents '1' with '878'
-877 878 0
c Var 'aux104' direct represents '1' with '879'
877 -878 879 0
-879 878 0
-879 -877 0
c Var 'aux104' direct represents '2' with '-878'
877 879 -878 0
c Encoding variable: aux105 with domain: int(0..2) (representing constraint ((grid_00004_00000=5) + (grid_00003_00002=5)))
c Both direct and order encoding.
c Var 'aux105' order represents '0' with '880'
c Var 'aux105' direct represents '0' with '880'
c Var 'aux105' order represents '1' with '881'
-880 881 0
c Var 'aux105' direct represents '1' with '882'
880 -881 882 0
-882 881 0
-882 -880 0
c Var 'aux105' direct represents '2' with '-881'
880 882 -881 0
c Encoding variable: aux106 with domain: int(0..2) (representing constraint ((5=grid_00001_00000) + (5=grid_00001_00001)))
c Both direct and order encoding.
c Var 'aux106' order represents '0' with '883'
c Var 'aux106' direct represents '0' with '883'
c Var 'aux106' order represents '1' with '884'
-883 884 0
c Var 'aux106' direct represents '1' with '885'
883 -884 885 0
-885 884 0
-885 -883 0
c Var 'aux106' direct represents '2' with '-884'
883 885 -884 0
c Encoding variable: aux107 with domain: int(0..4) (representing constraint (aux100 + aux106))
c Both direct and order encoding.
c Var 'aux107' order represents '0' with '886'
c Var 'aux107' direct represents '0' with '886'
c Var 'aux107' order represents '1' with '887'
-886 887 0
c Var 'aux107' direct represents '1' with '888'
886 -887 888 0
-888 887 0
-888 -886 0
c Var 'aux107' order represents '2' with '889'
-887 889 0
c Var 'aux107' direct represents '2' with '890'
887 -889 890 0
-890 889 0
-890 -887 0
c Var 'aux107' order represents '3' with '891'
-889 891 0
c Var 'aux107' direct represents '3' with '892'
889 -891 892 0
-892 891 0
-892 -889 0
c Var 'aux107' direct represents '4' with '-891'
886 888 890 892 -891 0
c Encoding variable: aux108 with domain: int(0..4) (representing constraint (aux99 + aux103))
c Both direct and order encoding.
c Var 'aux108' order represents '0' with '893'
c Var 'aux108' direct represents '0' with '893'
c Var 'aux108' order represents '1' with '894'
-893 894 0
c Var 'aux108' direct represents '1' with '895'
893 -894 895 0
-895 894 0
-895 -893 0
c Var 'aux108' order represents '2' with '896'
-894 896 0
c Var 'aux108' direct represents '2' with '897'
894 -896 897 0
-897 896 0
-897 -894 0
c Var 'aux108' order represents '3' with '898'
-896 898 0
c Var 'aux108' direct represents '3' with '899'
896 -898 899 0
-899 898 0
-899 -896 0
c Var 'aux108' direct represents '4' with '-898'
893 895 897 899 -898 0
c Encoding variable: aux109 with domain: int(0..4) (representing constraint (aux97 + aux98))
c Both direct and order encoding.
c Var 'aux109' order represents '0' with '900'
c Var 'aux109' direct represents '0' with '900'
c Var 'aux109' order represents '1' with '901'
-900 901 0
c Var 'aux109' direct represents '1' with '902'
900 -901 902 0
-902 901 0
-902 -900 0
c Var 'aux109' order represents '2' with '903'
-901 903 0
c Var 'aux109' direct represents '2' with '904'
901 -903 904 0
-904 903 0
-904 -901 0
c Var 'aux109' order represents '3' with '905'
-903 905 0
c Var 'aux109' direct represents '3' with '906'
903 -905 906 0
-906 905 0
-906 -903 0
c Var 'aux109' direct represents '4' with '-905'
900 902 904 906 -905 0
c Encoding variable: aux110 with domain: int(0..4) (representing constraint (aux101 + aux102))
c Both direct and order encoding.
c Var 'aux110' order represents '0' with '907'
c Var 'aux110' direct represents '0' with '907'
c Var 'aux110' order represents '1' with '908'
-907 908 0
c Var 'aux110' direct represents '1' with '909'
907 -908 909 0
-909 908 0
-909 -907 0
c Var 'aux110' order represents '2' with '910'
-908 910 0
c Var 'aux110' direct represents '2' with '911'
908 -910 911 0
-911 910 0
-911 -908 0
c Var 'aux110' order represents '3' with '912'
-910 912 0
c Var 'aux110' direct represents '3' with '913'
910 -912 913 0
-913 912 0
-913 -910 0
c Var 'aux110' direct represents '4' with '-912'
907 909 911 913 -912 0
c Encoding variable: aux111 with domain: int(0..4) (representing constraint (aux104 + aux105))
c Both direct and order encoding.
c Var 'aux111' order represents '0' with '914'
c Var 'aux111' direct represents '0' with '914'
c Var 'aux111' order represents '1' with '915'
-914 915 0
c Var 'aux111' direct represents '1' with '916'
914 -915 916 0
-916 915 0
-916 -914 0
c Var 'aux111' order represents '2' with '917'
-915 917 0
c Var 'aux111' direct represents '2' with '918'
915 -917 918 0
-918 917 0
-918 -915 0
c Var 'aux111' order represents '3' with '919'
-917 919 0
c Var 'aux111' direct represents '3' with '920'
917 -919 920 0
-920 919 0
-920 -917 0
c Var 'aux111' direct represents '4' with '-919'
914 916 918 920 -919 0
c Encoding variable: aux112 with domain: int(0..8) (representing constraint (aux108 + aux111))
c Both direct and order encoding.
c Var 'aux112' order represents '0' with '921'
c Var 'aux112' direct represents '0' with '921'
c Var 'aux112' order represents '1' with '922'
-921 922 0
c Var 'aux112' direct represents '1' with '923'
921 -922 923 0
-923 922 0
-923 -921 0
c Var 'aux112' order represents '2' with '924'
-922 924 0
c Var 'aux112' direct represents '2' with '925'
922 -924 925 0
-925 924 0
-925 -922 0
c Var 'aux112' order represents '3' with '926'
-924 926 0
c Var 'aux112' direct represents '3' with '927'
924 -926 927 0
-927 926 0
-927 -924 0
c Var 'aux112' order represents '4' with '928'
-926 928 0
c Var 'aux112' direct represents '4' with '929'
926 -928 929 0
-929 928 0
-929 -926 0
c Var 'aux112' order represents '5' with '930'
-928 930 0
c Var 'aux112' direct represents '5' with '931'
928 -930 931 0
-931 930 0
-931 -928 0
c Var 'aux112' order represents '6' with '932'
-930 932 0
c Var 'aux112' direct represents '6' with '933'
930 -932 933 0
-933 932 0
-933 -930 0
c Var 'aux112' order represents '7' with '934'
-932 934 0
c Var 'aux112' direct represents '7' with '935'
932 -934 935 0
-935 934 0
-935 -932 0
c Var 'aux112' direct represents '8' with '-934'
921 923 925 927 929 931 933 935 -934 0
c Encoding variable: aux113 with domain: int(0..8) (representing constraint (aux107 + aux109))
c Both direct and order encoding.
c Var 'aux113' order represents '0' with '936'
c Var 'aux113' direct represents '0' with '936'
c Var 'aux113' order represents '1' with '937'
-936 937 0
c Var 'aux113' direct represents '1' with '938'
936 -937 938 0
-938 937 0
-938 -936 0
c Var 'aux113' order represents '2' with '939'
-937 939 0
c Var 'aux113' direct represents '2' with '940'
937 -939 940 0
-940 939 0
-940 -937 0
c Var 'aux113' order represents '3' with '941'
-939 941 0
c Var 'aux113' direct represents '3' with '942'
939 -941 942 0
-942 941 0
-942 -939 0
c Var 'aux113' order represents '4' with '943'
-941 943 0
c Var 'aux113' direct represents '4' with '944'
941 -943 944 0
-944 943 0
-944 -941 0
c Var 'aux113' order represents '5' with '945'
-943 945 0
c Var 'aux113' direct represents '5' with '946'
943 -945 946 0
-946 945 0
-946 -943 0
c Var 'aux113' order represents '6' with '947'
-945 947 0
c Var 'aux113' direct represents '6' with '948'
945 -947 948 0
-948 947 0
-948 -945 0
c Var 'aux113' order represents '7' with '949'
-947 949 0
c Var 'aux113' direct represents '7' with '950'
947 -949 950 0
-950 949 0
-950 -947 0
c Var 'aux113' direct represents '8' with '-949'
936 938 940 942 944 946 948 950 -949 0
c Encoding variable: aux114 with domain: int(0..2) (representing constraint ((grid_00003_00000=1) + (grid_00000_00004=1)))
c Both direct and order encoding.
c Var 'aux114' order represents '0' with '951'
c Var 'aux114' direct represents '0' with '951'
c Var 'aux114' order represents '1' with '952'
-951 952 0
c Var 'aux114' direct represents '1' with '953'
951 -952 953 0
-953 952 0
-953 -951 0
c Var 'aux114' direct represents '2' with '-952'
951 953 -952 0
c Encoding variable: aux115 with domain: int(0..2) (representing constraint ((grid_00000_00003=1) + (grid_00003_00001=1)))
c Both direct and order encoding.
c Var 'aux115' order represents '0' with '954'
c Var 'aux115' direct represents '0' with '954'
c Var 'aux115' order represents '1' with '955'
-954 955 0
c Var 'aux115' direct represents '1' with '956'
954 -955 956 0
-956 955 0
-956 -954 0
c Var 'aux115' direct represents '2' with '-955'
954 956 -955 0
c Encoding variable: aux116 with domain: int(0..2) (representing constraint ((grid_00000_00002=1) + (grid_00003_00003=1)))
c Both direct and order encoding.
c Var 'aux116' order represents '0' with '957'
c Var 'aux116' direct represents '0' with '957'
c Var 'aux116' order represents '1' with '958'
-957 958 0
c Var 'aux116' direct represents '1' with '959'
957 -958 959 0
-959 958 0
-959 -957 0
c Var 'aux116' direct represents '2' with '-958'
957 959 -958 0
c Encoding variable: aux117 with domain: int(0..2) (representing constraint ((1=grid_00001_00002) + (grid_00000_00000=1)))
c Both direct and order encoding.
c Var 'aux117' order represents '0' with '960'
c Var 'aux117' direct represents '0' with '960'
c Var 'aux117' order represents '1' with '961'
-960 961 0
c Var 'aux117' direct represents '1' with '962'
960 -961 962 0
-962 961 0
-962 -960 0
c Var 'aux117' direct represents '2' with '-961'
960 962 -961 0
c Encoding variable: aux118 with domain: int(0..2) (representing constraint ((grid_00000_00001=1) + (1=grid_00001_00003)))
c Both direct and order encoding.
c Var 'aux118' order represents '0' with '963'
c Var 'aux118' direct represents '0' with '963'
c Var 'aux118' order represents '1' with '964'
-963 964 0
c Var 'aux118' direct represents '1' with '965'
963 -964 965 0
-965 964 0
-965 -963 0
c Var 'aux118' direct represents '2' with '-964'
963 965 -964 0
c Encoding variable: aux119 with domain: int(0..2) (representing constraint ((grid_00004_00004=1) + (grid_00003_00004=1)))
c Both direct and order encoding.
c Var 'aux119' order represents '0' with '966'
c Var 'aux119' direct represents '0' with '966'
c Var 'aux119' order represents '1' with '967'
-966 967 0
c Var 'aux119' direct represents '1' with '968'
966 -967 968 0
-968 967 0
-968 -966 0
c Var 'aux119' direct represents '2' with '-967'
966 968 -967 0
c Encoding variable: aux120 with domain: int(0..2) (representing constraint ((grid_00004_00003=1) + (1=grid_00002_00001)))
c Both direct and order encoding.
c Var 'aux120' order represents '0' with '969'
c Var 'aux120' direct represents '0' with '969'
c Var 'aux120' order represents '1' with '970'
-969 970 0
c Var 'aux120' direct represents '1' with '971'
969 -970 971 0
-971 970 0
-971 -969 0
c Var 'aux120' direct represents '2' with '-970'
969 971 -970 0
c Encoding variable: aux121 with domain: int(0..2) (representing constraint ((grid_00004_00001=1) + (1=grid_00002_00004)))
c Both direct and order encoding.
c Var 'aux121' order represents '0' with '972'
c Var 'aux121' direct represents '0' with '972'
c Var 'aux121' order represents '1' with '973'
-972 973 0
c Var 'aux121' direct represents '1' with '974'
972 -973 974 0
-974 973 0
-974 -972 0
c Var 'aux121' direct represents '2' with '-973'
972 974 -973 0
c Encoding variable: aux122 with domain: int(0..2) (representing constraint ((grid_00004_00000=1) + (grid_00003_00002=1)))
c Both direct and order encoding.
c Var 'aux122' order represents '0' with '975'
c Var 'aux122' direct represents '0' with '975'
c Var 'aux122' order represents '1' with '976'
-975 976 0
c Var 'aux122' direct represents '1' with '977'
975 -976 977 0
-977 976 0
-977 -975 0
c Var 'aux122' direct represents '2' with '-976'
975 977 -976 0
c Encoding variable: aux123 with domain: int(0..2) (representing constraint ((1=grid_00001_00000) + (1=grid_00001_00001)))
c Both direct and order encoding.
c Var 'aux123' order represents '0' with '978'
c Var 'aux123' direct represents '0' with '978'
c Var 'aux123' order represents '1' with '979'
-978 979 0
c Var 'aux123' direct represents '1' with '980'
978 -979 980 0
-980 979 0
-980 -978 0
c Var 'aux123' direct represents '2' with '-979'
978 980 -979 0
c Encoding variable: aux124 with domain: int(0..4) (representing constraint (aux117 + aux123))
c Both direct and order encoding.
c Var 'aux124' order represents '0' with '981'
c Var 'aux124' direct represents '0' with '981'
c Var 'aux124' order represents '1' with '982'
-981 982 0
c Var 'aux124' direct represents '1' with '983'
981 -982 983 0
-983 982 0
-983 -981 0
c Var 'aux124' order represents '2' with '984'
-982 984 0
c Var 'aux124' direct represents '2' with '985'
982 -984 985 0
-985 984 0
-985 -982 0
c Var 'aux124' order represents '3' with '986'
-984 986 0
c Var 'aux124' direct represents '3' with '987'
984 -986 987 0
-987 986 0
-987 -984 0
c Var 'aux124' direct represents '4' with '-986'
981 983 985 987 -986 0
c Encoding variable: aux125 with domain: int(0..4) (representing constraint (aux116 + aux120))
c Both direct and order encoding.
c Var 'aux125' order represents '0' with '988'
c Var 'aux125' direct represents '0' with '988'
c Var 'aux125' order represents '1' with '989'
-988 989 0
c Var 'aux125' direct represents '1' with '990'
988 -989 990 0
-990 989 0
-990 -988 0
c Var 'aux125' order represents '2' with '991'
-989 991 0
c Var 'aux125' direct represents '2' with '992'
989 -991 992 0
-992 991 0
-992 -989 0
c Var 'aux125' order represents '3' with '993'
-991 993 0
c Var 'aux125' direct represents '3' with '994'
991 -993 994 0
-994 993 0
-994 -991 0
c Var 'aux125' direct represents '4' with '-993'
988 990 992 994 -993 0
c Encoding variable: aux126 with domain: int(0..4) (representing constraint (aux114 + aux115))
c Both direct and order encoding.
c Var 'aux126' order represents '0' with '995'
c Var 'aux126' direct represents '0' with '995'
c Var 'aux126' order represents '1' with '996'
-995 996 0
c Var 'aux126' direct represents '1' with '997'
995 -996 997 0
-997 996 0
-997 -995 0
c Var 'aux126' order represents '2' with '998'
-996 998 0
c Var 'aux126' direct represents '2' with '999'
996 -998 999 0
-999 998 0
-999 -996 0
c Var 'aux126' order represents '3' with '1000'
-998 1000 0
c Var 'aux126' direct represents '3' with '1001'
998 -1000 1001 0
-1001 1000 0
-1001 -998 0
c Var 'aux126' direct represents '4' with '-1000'
995 997 999 1001 -1000 0
c Encoding variable: aux127 with domain: int(0..4) (representing constraint (aux118 + aux119))
c Both direct and order encoding.
c Var 'aux127' order represents '0' with '1002'
c Var 'aux127' direct represents '0' with '1002'
c Var 'aux127' order represents '1' with '1003'
-1002 1003 0
c Var 'aux127' direct represents '1' with '1004'
1002 -1003 1004 0
-1004 1003 0
-1004 -1002 0
c Var 'aux127' order represents '2' with '1005'
-1003 1005 0
c Var 'aux127' direct represents '2' with '1006'
1003 -1005 1006 0
-1006 1005 0
-1006 -1003 0
c Var 'aux127' order represents '3' with '1007'
-1005 1007 0
c Var 'aux127' direct represents '3' with '1008'
1005 -1007 1008 0
-1008 1007 0
-1008 -1005 0
c Var 'aux127' direct represents '4' with '-1007'
1002 1004 1006 1008 -1007 0
c Encoding variable: aux128 with domain: int(0..4) (representing constraint (aux121 + aux122))
c Both direct and order encoding.
c Var 'aux128' order represents '0' with '1009'
c Var 'aux128' direct represents '0' with '1009'
c Var 'aux128' order represents '1' with '1010'
-1009 1010 0
c Var 'aux128' direct represents '1' with '1011'
1009 -1010 1011 0
-1011 1010 0
-1011 -1009 0
c Var 'aux128' order represents '2' with '1012'
-1010 1012 0
c Var 'aux128' direct represents '2' with '1013'
1010 -1012 1013 0
-1013 1012 0
-1013 -1010 0
c Var 'aux128' order represents '3' with '1014'
-1012 1014 0
c Var 'aux128' direct represents '3' with '1015'
1012 -1014 1015 0
-1015 1014 0
-1015 -1012 0
c Var 'aux128' direct represents '4' with '-1014'
1009 1011 1013 1015 -1014 0
c Encoding variable: aux129 with domain: int(0..8) (representing constraint (aux125 + aux128))
c Both direct and order encoding.
c Var 'aux129' order represents '0' with '1016'
c Var 'aux129' direct represents '0' with '1016'
c Var 'aux129' order represents '1' with '1017'
-1016 1017 0
c Var 'aux129' direct represents '1' with '1018'
1016 -1017 1018 0
-1018 1017 0
-1018 -1016 0
c Var 'aux129' order represents '2' with '1019'
-1017 1019 0
c Var 'aux129' direct represents '2' with '1020'
1017 -1019 1020 0
-1020 1019 0
-1020 -1017 0
c Var 'aux129' order represents '3' with '1021'
-1019 1021 0
c Var 'aux129' direct represents '3' with '1022'
1019 -1021 1022 0
-1022 1021 0
-1022 -1019 0
c Var 'aux129' order represents '4' with '1023'
-1021 1023 0
c Var 'aux129' direct represents '4' with '1024'
1021 -1023 1024 0
-1024 1023 0
-1024 -1021 0
c Var 'aux129' order represents '5' with '1025'
-1023 1025 0
c Var 'aux129' direct represents '5' with '1026'
1023 -1025 1026 0
-1026 1025 0
-1026 -1023 0
c Var 'aux129' order represents '6' with '1027'
-1025 1027 0
c Var 'aux129' direct represents '6' with '1028'
1025 -1027 1028 0
-1028 1027 0
-1028 -1025 0
c Var 'aux129' order represents '7' with '1029'
-1027 1029 0
c Var 'aux129' direct represents '7' with '1030'
1027 -1029 1030 0
-1030 1029 0
-1030 -1027 0
c Var 'aux129' direct represents '8' with '-1029'
1016 1018 1020 1022 1024 1026 1028 1030 -1029 0
c Encoding variable: aux130 with domain: int(0..8) (representing constraint (aux124 + aux126))
c Both direct and order encoding.
c Var 'aux130' order represents '0' with '1031'
c Var 'aux130' direct represents '0' with '1031'
c Var 'aux130' order represents '1' with '1032'
-1031 1032 0
c Var 'aux130' direct represents '1' with '1033'
1031 -1032 1033 0
-1033 1032 0
-1033 -1031 0
c Var 'aux130' order represents '2' with '1034'
-1032 1034 0
c Var 'aux130' direct represents '2' with '1035'
1032 -1034 1035 0
-1035 1034 0
-1035 -1032 0
c Var 'aux130' order represents '3' with '1036'
-1034 1036 0
c Var 'aux130' direct represents '3' with '1037'
1034 -1036 1037 0
-1037 1036 0
-1037 -1034 0
c Var 'aux130' order represents '4' with '1038'
-1036 1038 0
c Var 'aux130' direct represents '4' with '1039'
1036 -1038 1039 0
-1039 1038 0
-1039 -1036 0
c Var 'aux130' order represents '5' with '1040'
-1038 1040 0
c Var 'aux130' direct represents '5' with '1041'
1038 -1040 1041 0
-1041 1040 0
-1041 -1038 0
c Var 'aux130' order represents '6' with '1042'
-1040 1042 0
c Var 'aux130' direct represents '6' with '1043'
1040 -1042 1043 0
-1043 1042 0
-1043 -1040 0
c Var 'aux130' order represents '7' with '1044'
-1042 1044 0
c Var 'aux130' direct represents '7' with '1045'
1042 -1044 1045 0
-1045 1044 0
-1045 -1042 0
c Var 'aux130' direct represents '8' with '-1044'
1031 1033 1035 1037 1039 1041 1043 1045 -1044 0
c Encoding variable: aux131 with domain: int(0..2) (representing constraint ((grid_00003_00000=2) + (grid_00000_00004=2)))
c Both direct and order encoding.
c Var 'aux131' order represents '0' with '1046'
c Var 'aux131' direct represents '0' with '1046'
c Var 'aux131' order represents '1' with '1047'
-1046 1047 0
c Var 'aux131' direct represents '1' with '1048'
1046 -1047 1048 0
-1048 1047 0
-1048 -1046 0
c Var 'aux131' direct represents '2' with '-1047'
1046 1048 -1047 0
c Encoding variable: aux132 with domain: int(0..2) (representing constraint ((grid_00000_00003=2) + (grid_00003_00001=2)))
c Both direct and order encoding.
c Var 'aux132' order represents '0' with '1049'
c Var 'aux132' direct represents '0' with '1049'
c Var 'aux132' order represents '1' with '1050'
-1049 1050 0
c Var 'aux132' direct represents '1' with '1051'
1049 -1050 1051 0
-1051 1050 0
-1051 -1049 0
c Var 'aux132' direct represents '2' with '-1050'
1049 1051 -1050 0
c Encoding variable: aux133 with domain: int(0..2) (representing constraint ((grid_00000_00002=2) + (grid_00003_00003=2)))
c Both direct and order encoding.
c Var 'aux133' order represents '0' with '1052'
c Var 'aux133' direct represents '0' with '1052'
c Var 'aux133' order represents '1' with '1053'
-1052 1053 0
c Var 'aux133' direct represents '1' with '1054'
1052 -1053 1054 0
-1054 1053 0
-1054 -1052 0
c Var 'aux133' direct represents '2' with '-1053'
1052 1054 -1053 0
c Encoding variable: aux134 with domain: int(0..2) (representing constraint ((2=grid_00001_00002) + (grid_00000_00000=2)))
c Both direct and order encoding.
c Var 'aux134' order represents '0' with '1055'
c Var 'aux134' direct represents '0' with '1055'
c Var 'aux134' order represents '1' with '1056'
-1055 1056 0
c Var 'aux134' direct represents '1' with '1057'
1055 -1056 1057 0
-1057 1056 0
-1057 -1055 0
c Var 'aux134' direct represents '2' with '-1056'
1055 1057 -1056 0
c Encoding variable: aux135 with domain: int(0..2) (representing constraint ((grid_00000_00001=2) + (2=grid_00001_00003)))
c Both direct and order encoding.
c Var 'aux135' order represents '0' with '1058'
c Var 'aux135' direct represents '0' with '1058'
c Var 'aux135' order represents '1' with '1059'
-1058 1059 0
c Var 'aux135' direct represents '1' with '1060'
1058 -1059 1060 0
-1060 1059 0
-1060 -1058 0
c Var 'aux135' direct represents '2' with '-1059'
1058 1060 -1059 0
c Encoding variable: aux136 with domain: int(0..2) (representing constraint ((grid_00004_00004=2) + (grid_00003_00004=2)))
c Both direct and order encoding.
c Var 'aux136' order represents '0' with '1061'
c Var 'aux136' direct represents '0' with '1061'
c Var 'aux136' order represents '1' with '1062'
-1061 1062 0
c Var 'aux136' direct represents '1' with '1063'
1061 -1062 1063 0
-1063 1062 0
-1063 -1061 0
c Var 'aux136' direct represents '2' with '-1062'
1061 1063 -1062 0
c Encoding variable: aux137 with domain: int(0..2) (representing constraint ((grid_00004_00003=2) + (2=grid_00002_00001)))
c Both direct and order encoding.
c Var 'aux137' order represents '0' with '1064'
c Var 'aux137' direct represents '0' with '1064'
c Var 'aux137' order represents '1' with '1065'
-1064 1065 0
c Var 'aux137' direct represents '1' with '1066'
1064 -1065 1066 0
-1066 1065 0
-1066 -1064 0
c Var 'aux137' direct represents '2' with '-1065'
1064 1066 -1065 0
c Encoding variable: aux138 with domain: int(0..2) (representing constraint ((grid_00004_00001=2) + (2=grid_00002_00004)))
c Both direct and order encoding.
c Var 'aux138' order represents '0' with '1067'
c Var 'aux138' direct represents '0' with '1067'
c Var 'aux138' order represents '1' with '1068'
-1067 1068 0
c Var 'aux138' direct represents '1' with '1069'
1067 -1068 1069 0
-1069 1068 0
-1069 -1067 0
c Var 'aux138' direct represents '2' with '-1068'
1067 1069 -1068 0
c Encoding variable: aux139 with domain: int(0..2) (representing constraint ((grid_00004_00000=2) + (grid_00003_00002=2)))
c Both direct and order encoding.
c Var 'aux139' order represents '0' with '1070'
c Var 'aux139' direct represents '0' with '1070'
c Var 'aux139' order represents '1' with '1071'
-1070 1071 0
c Var 'aux139' direct represents '1' with '1072'
1070 -1071 1072 0
-1072 1071 0
-1072 -1070 0
c Var 'aux139' direct represents '2' with '-1071'
1070 1072 -1071 0
c Encoding variable: aux140 with domain: int(0..2) (representing constraint ((2=grid_00001_00000) + (2=grid_00001_00001)))
c Both direct and order encoding.
c Var 'aux140' order represents '0' with '1073'
c Var 'aux140' direct represents '0' with '1073'
c Var 'aux140' order represents '1' with '1074'
-1073 1074 0
c Var 'aux140' direct represents '1' with '1075'
1073 -1074 1075 0
-1075 1074 0
-1075 -1073 0
c Var 'aux140' direct represents '2' with '-1074'
1073 1075 -1074 0
c Encoding variable: aux141 with domain: int(0..4) (representing constraint (aux134 + aux140))
c Both direct and order encoding.
c Var 'aux141' order represents '0' with '1076'
c Var 'aux141' direct represents '0' with '1076'
c Var 'aux141' order represents '1' with '1077'
-1076 1077 0
c Var 'aux141' direct represents '1' with '1078'
1076 -1077 1078 0
-1078 1077 0
-1078 -1076 0
c Var 'aux141' order represents '2' with '1079'
-1077 1079 0
c Var 'aux141' direct represents '2' with '1080'
1077 -1079 1080 0
-1080 1079 0
-1080 -1077 0
c Var 'aux141' order represents '3' with '1081'
-1079 1081 0
c Var 'aux141' direct represents '3' with '1082'
1079 -1081 1082 0
-1082 1081 0
-1082 -1079 0
c Var 'aux141' direct represents '4' with '-1081'
1076 1078 1080 1082 -1081 0
c Encoding variable: aux142 with domain: int(0..4) (representing constraint (aux133 + aux137))
c Both direct and order encoding.
c Var 'aux142' order represents '0' with '1083'
c Var 'aux142' direct represents '0' with '1083'
c Var 'aux142' order represents '1' with '1084'
-1083 1084 0
c Var 'aux142' direct represents '1' with '1085'
1083 -1084 1085 0
-1085 1084 0
-1085 -1083 0
c Var 'aux142' order represents '2' with '1086'
-1084 1086 0
c Var 'aux142' direct represents '2' with '1087'
1084 -1086 1087 0
-1087 1086 0
-1087 -1084 0
c Var 'aux142' order represents '3' with '1088'
-1086 1088 0
c Var 'aux142' direct represents '3' with '1089'
1086 -1088 1089 0
-1089 1088 0
-1089 -1086 0
c Var 'aux142' direct represents '4' with '-1088'
1083 1085 1087 1089 -1088 0
c Encoding variable: aux143 with domain: int(0..4) (representing constraint (aux131 + aux132))
c Both direct and order encoding.
c Var 'aux143' order represents '0' with '1090'
c Var 'aux143' direct represents '0' with '1090'
c Var 'aux143' order represents '1' with '1091'
-1090 1091 0
c Var 'aux143' direct represents '1' with '1092'
1090 -1091 1092 0
-1092 1091 0
-1092 -1090 0
c Var 'aux143' order represents '2' with '1093'
-1091 1093 0
c Var 'aux143' direct represents '2' with '1094'
1091 -1093 1094 0
-1094 1093 0
-1094 -1091 0
c Var 'aux143' order represents '3' with '1095'
-1093 1095 0
c Var 'aux143' direct represents '3' with '1096'
1093 -1095 1096 0
-1096 1095 0
-1096 -1093 0
c Var 'aux143' direct represents '4' with '-1095'
1090 1092 1094 1096 -1095 0
c Encoding variable: aux144 with domain: int(0..4) (representing constraint (aux135 + aux136))
c Both direct and order encoding.
c Var 'aux144' order represents '0' with '1097'
c Var 'aux144' direct represents '0' with '1097'
c Var 'aux144' order represents '1' with '1098'
-1097 1098 0
c Var 'aux144' direct represents '1' with '1099'
1097 -1098 1099 0
-1099 1098 0
-1099 -1097 0
c Var 'aux144' order represents '2' with '1100'
-1098 1100 0
c Var 'aux144' direct represents '2' with '1101'
1098 -1100 1101 0
-1101 1100 0
-1101 -1098 0
c Var 'aux144' order represents '3' with '1102'
-1100 1102 0
c Var 'aux144' direct represents '3' with '1103'
1100 -1102 1103 0
-1103 1102 0
-1103 -1100 0
c Var 'aux144' direct represents '4' with '-1102'
1097 1099 1101 1103 -1102 0
c Encoding variable: aux145 with domain: int(0..4) (representing constraint (aux138 + aux139))
c Both direct and order encoding.
c Var 'aux145' order represents '0' with '1104'
c Var 'aux145' direct represents '0' with '1104'
c Var 'aux145' order represents '1' with '1105'
-1104 1105 0
c Var 'aux145' direct represents '1' with '1106'
1104 -1105 1106 0
-1106 1105 0
-1106 -1104 0
c Var 'aux145' order represents '2' with '1107'
-1105 1107 0
c Var 'aux145' direct represents '2' with '1108'
1105 -1107 1108 0
-1108 1107 0
-1108 -1105 0
c Var 'aux145' order represents '3' with '1109'
-1107 1109 0
c Var 'aux145' direct represents '3' with '1110'
1107 -1109 1110 0
-1110 1109 0
-1110 -1107 0
c Var 'aux145' direct represents '4' with '-1109'
1104 1106 1108 1110 -1109 0
c Encoding variable: aux146 with domain: int(0..8) (representing constraint (aux142 + aux145))
c Both direct and order encoding.
c Var 'aux146' order represents '0' with '1111'
c Var 'aux146' direct represents '0' with '1111'
c Var 'aux146' order represents '1' with '1112'
-1111 1112 0
c Var 'aux146' direct represents '1' with '1113'
1111 -1112 1113 0
-1113 1112 0
-1113 -1111 0
c Var 'aux146' order represents '2' with '1114'
-1112 1114 0
c Var 'aux146' direct represents '2' with '1115'
1112 -1114 1115 0
-1115 1114 0
-1115 -1112 0
c Var 'aux146' order represents '3' with '1116'
-1114 1116 0
c Var 'aux146' direct represents '3' with '1117'
1114 -1116 1117 0
-1117 1116 0
-1117 -1114 0
c Var 'aux146' order represents '4' with '1118'
-1116 1118 0
c Var 'aux146' direct represents '4' with '1119'
1116 -1118 1119 0
-1119 1118 0
-1119 -1116 0
c Var 'aux146' order represents '5' with '1120'
-1118 1120 0
c Var 'aux146' direct represents '5' with '1121'
1118 -1120 1121 0
-1121 1120 0
-1121 -1118 0
c Var 'aux146' order represents '6' with '1122'
-1120 1122 0
c Var 'aux146' direct represents '6' with '1123'
1120 -1122 1123 0
-1123 1122 0
-1123 -1120 0
c Var 'aux146' order represents '7' with '1124'
-1122 1124 0
c Var 'aux146' direct represents '7' with '1125'
1122 -1124 1125 0
-1125 1124 0
-1125 -1122 0
c Var 'aux146' direct represents '8' with '-1124'
1111 1113 1115 1117 1119 1121 1123 1125 -1124 0
c Encoding variable: aux147 with domain: int(0..8) (representing constraint (aux141 + aux143))
c Both direct and order encoding.
c Var 'aux147' order represents '0' with '1126'
c Var 'aux147' direct represents '0' with '1126'
c Var 'aux147' order represents '1' with '1127'
-1126 1127 0
c Var 'aux147' direct represents '1' with '1128'
1126 -1127 1128 0
-1128 1127 0
-1128 -1126 0
c Var 'aux147' order represents '2' with '1129'
-1127 1129 0
c Var 'aux147' direct represents '2' with '1130'
1127 -1129 1130 0
-1130 1129 0
-1130 -1127 0
c Var 'aux147' order represents '3' with '1131'
-1129 1131 0
c Var 'aux147' direct represents '3' with '1132'
1129 -1131 1132 0
-1132 1131 0
-1132 -1129 0
c Var 'aux147' order represents '4' with '1133'
-1131 1133 0
c Var 'aux147' direct represents '4' with '1134'
1131 -1133 1134 0
-1134 1133 0
-1134 -1131 0
c Var 'aux147' order represents '5' with '1135'
-1133 1135 0
c Var 'aux147' direct represents '5' with '1136'
1133 -1135 1136 0
-1136 1135 0
-1136 -1133 0
c Var 'aux147' order represents '6' with '1137'
-1135 1137 0
c Var 'aux147' direct represents '6' with '1138'
1135 -1137 1138 0
-1138 1137 0
-1138 -1135 0
c Var 'aux147' order represents '7' with '1139'
-1137 1139 0
c Var 'aux147' direct represents '7' with '1140'
1137 -1139 1140 0
-1140 1139 0
-1140 -1137 0
c Var 'aux147' direct represents '8' with '-1139'
1126 1128 1130 1132 1134 1136 1138 1140 -1139 0
c Encoding variable: aux148 with domain: int(0..2) (representing constraint ((grid_00003_00000=3) + (grid_00000_00004=3)))
c Both direct and order encoding.
c Var 'aux148' order represents '0' with '1141'
c Var 'aux148' direct represents '0' with '1141'
c Var 'aux148' order represents '1' with '1142'
-1141 1142 0
c Var 'aux148' direct represents '1' with '1143'
1141 -1142 1143 0
-1143 1142 0
-1143 -1141 0
c Var 'aux148' direct represents '2' with '-1142'
1141 1143 -1142 0
c Encoding variable: aux149 with domain: int(0..2) (representing constraint ((grid_00000_00003=3) + (grid_00003_00001=3)))
c Both direct and order encoding.
c Var 'aux149' order represents '0' with '1144'
c Var 'aux149' direct represents '0' with '1144'
c Var 'aux149' order represents '1' with '1145'
-1144 1145 0
c Var 'aux149' direct represents '1' with '1146'
1144 -1145 1146 0
-1146 1145 0
-1146 -1144 0
c Var 'aux149' direct represents '2' with '-1145'
1144 1146 -1145 0
c Encoding variable: aux150 with domain: int(0..2) (representing constraint ((grid_00000_00002=3) + (grid_00003_00003=3)))
c Both direct and order encoding.
c Var 'aux150' order represents '0' with '1147'
c Var 'aux150' direct represents '0' with '1147'
c Var 'aux150' order represents '1' with '1148'
-1147 1148 0
c Var 'aux150' direct represents '1' with '1149'
1147 -1148 1149 0
-1149 1148 0
-1149 -1147 0
c Var 'aux150' direct represents '2' with '-1148'
1147 1149 -1148 0
c Encoding variable: aux151 with domain: int(0..2) (representing constraint ((3=grid_00001_00002) + (grid_00000_00000=3)))
c Both direct and order encoding.
c Var 'aux151' order represents '0' with '1150'
c Var 'aux151' direct represents '0' with '1150'
c Var 'aux151' order represents '1' with '1151'
-1150 1151 0
c Var 'aux151' direct represents '1' with '1152'
1150 -1151 1152 0
-1152 1151 0
-1152 -1150 0
c Var 'aux151' direct represents '2' with '-1151'
1150 1152 -1151 0
c Encoding variable: aux152 with domain: int(0..2) (representing constraint ((grid_00000_00001=3) + (3=grid_00001_00003)))
c Both direct and order encoding.
c Var 'aux152' order represents '0' with '1153'
c Var 'aux152' direct represents '0' with '1153'
c Var 'aux152' order represents '1' with '1154'
-1153 1154 0
c Var 'aux152' direct represents '1' with '1155'
1153 -1154 1155 0
-1155 1154 0
-1155 -1153 0
c Var 'aux152' direct represents '2' with '-1154'
1153 1155 -1154 0
c Encoding variable: aux153 with domain: int(0..2) (representing constraint ((grid_00004_00004=3) + (grid_00003_00004=3)))
c Both direct and order encoding.
c Var 'aux153' order represents '0' with '1156'
c Var 'aux153' direct represents '0' with '1156'
c Var 'aux153' order represents '1' with '1157'
-1156 1157 0
c Var 'aux153' direct represents '1' with '1158'
1156 -1157 1158 0
-1158 1157 0
-1158 -1156 0
c Var 'aux153' direct represents '2' with '-1157'
1156 1158 -1157 0
c Encoding variable: aux154 with domain: int(0..2) (representing constraint ((grid_00004_00003=3) + (3=grid_00002_00001)))
c Both direct and order encoding.
c Var 'aux154' order represents '0' with '1159'
c Var 'aux154' direct represents '0' with '1159'
c Var 'aux154' order represents '1' with '1160'
-1159 1160 0
c Var 'aux154' direct represents '1' with '1161'
1159 -1160 1161 0
-1161 1160 0
-1161 -1159 0
c Var 'aux154' direct represents '2' with '-1160'
1159 1161 -1160 0
c Encoding variable: aux155 with domain: int(0..2) (representing constraint ((grid_00004_00001=3) + (3=grid_00002_00004)))
c Both direct and order encoding.
c Var 'aux155' order represents '0' with '1162'
c Var 'aux155' direct represents '0' with '1162'
c Var 'aux155' order represents '1' with '1163'
-1162 1163 0
c Var 'aux155' direct represents '1' with '1164'
1162 -1163 1164 0
-1164 1163 0
-1164 -1162 0
c Var 'aux155' direct represents '2' with '-1163'
1162 1164 -1163 0
c Encoding variable: aux156 with domain: int(0..2) (representing constraint ((grid_00004_00000=3) + (grid_00003_00002=3)))
c Both direct and order encoding.
c Var 'aux156' order represents '0' with '1165'
c Var 'aux156' direct represents '0' with '1165'
c Var 'aux156' order represents '1' with '1166'
-1165 1166 0
c Var 'aux156' direct represents '1' with '1167'
1165 -1166 1167 0
-1167 1166 0
-1167 -1165 0
c Var 'aux156' direct represents '2' with '-1166'
1165 1167 -1166 0
c Encoding variable: aux157 with domain: int(0..2) (representing constraint ((3=grid_00001_00000) + (3=grid_00001_00001)))
c Both direct and order encoding.
c Var 'aux157' order represents '0' with '1168'
c Var 'aux157' direct represents '0' with '1168'
c Var 'aux157' order represents '1' with '1169'
-1168 1169 0
c Var 'aux157' direct represents '1' with '1170'
1168 -1169 1170 0
-1170 1169 0
-1170 -1168 0
c Var 'aux157' direct represents '2' with '-1169'
1168 1170 -1169 0
c Encoding variable: aux158 with domain: int(0..4) (representing constraint (aux151 + aux157))
c Both direct and order encoding.
c Var 'aux158' order represents '0' with '1171'
c Var 'aux158' direct represents '0' with '1171'
c Var 'aux158' order represents '1' with '1172'
-1171 1172 0
c Var 'aux158' direct represents '1' with '1173'
1171 -1172 1173 0
-1173 1172 0
-1173 -1171 0
c Var 'aux158' order represents '2' with '1174'
-1172 1174 0
c Var 'aux158' direct represents '2' with '1175'
1172 -1174 1175 0
-1175 1174 0
-1175 -1172 0
c Var 'aux158' order represents '3' with '1176'
-1174 1176 0
c Var 'aux158' direct represents '3' with '1177'
1174 -1176 1177 0
-1177 1176 0
-1177 -1174 0
c Var 'aux158' direct represents '4' with '-1176'
1171 1173 1175 1177 -1176 0
c Encoding variable: aux159 with domain: int(0..4) (representing constraint (aux150 + aux154))
c Both direct and order encoding.
c Var 'aux159' order represents '0' with '1178'
c Var 'aux159' direct represents '0' with '1178'
c Var 'aux159' order represents '1' with '1179'
-1178 1179 0
c Var 'aux159' direct represents '1' with '1180'
1178 -1179 1180 0
-1180 1179 0
-1180 -1178 0
c Var 'aux159' order represents '2' with '1181'
-1179 1181 0
c Var 'aux159' direct represents '2' with '1182'
1179 -1181 1182 0
-1182 1181 0
-1182 -1179 0
c Var 'aux159' order represents '3' with '1183'
-1181 1183 0
c Var 'aux159' direct represents '3' with '1184'
1181 -1183 1184 0
-1184 1183 0
-1184 -1181 0
c Var 'aux159' direct represents '4' with '-1183'
1178 1180 1182 1184 -1183 0
c Encoding variable: aux160 with domain: int(0..4) (representing constraint (aux148 + aux149))
c Both direct and order encoding.
c Var 'aux160' order represents '0' with '1185'
c Var 'aux160' direct represents '0' with '1185'
c Var 'aux160' order represents '1' with '1186'
-1185 1186 0
c Var 'aux160' direct represents '1' with '1187'
1185 -1186 1187 0
-1187 1186 0
-1187 -1185 0
c Var 'aux160' order represents '2' with '1188'
-1186 1188 0
c Var 'aux160' direct represents '2' with '1189'
1186 -1188 1189 0
-1189 1188 0
-1189 -1186 0
c Var 'aux160' order represents '3' with '1190'
-1188 1190 0
c Var 'aux160' direct represents '3' with '1191'
1188 -1190 1191 0
-1191 1190 0
-1191 -1188 0
c Var 'aux160' direct represents '4' with '-1190'
1185 1187 1189 1191 -1190 0
c Encoding variable: aux161 with domain: int(0..4) (representing constraint (aux152 + aux153))
c Both direct and order encoding.
c Var 'aux161' order represents '0' with '1192'
c Var 'aux161' direct represents '0' with '1192'
c Var 'aux161' order represents '1' with '1193'
-1192 1193 0
c Var 'aux161' direct represents '1' with '1194'
1192 -1193 1194 0
-1194 1193 0
-1194 -1192 0
c Var 'aux161' order represents '2' with '1195'
-1193 1195 0
c Var 'aux161' direct represents '2' with '1196'
1193 -1195 1196 0
-1196 1195 0
-1196 -1193 0
c Var 'aux161' order represents '3' with '1197'
-1195 1197 0
c Var 'aux161' direct represents '3' with '1198'
1195 -1197 1198 0
-1198 1197 0
-1198 -1195 0
c Var 'aux161' direct represents '4' with '-1197'
1192 1194 1196 1198 -1197 0
c Encoding variable: aux162 with domain: int(0..4) (representing constraint (aux155 + aux156))
c Both direct and order encoding.
c Var 'aux162' order represents '0' with '1199'
c Var 'aux162' direct represents '0' with '1199'
c Var 'aux162' order represents '1' with '1200'
-1199 1200 0
c Var 'aux162' direct represents '1' with '1201'
1199 -1200 1201 0
-1201 1200 0
-1201 -1199 0
c Var 'aux162' order represents '2' with '1202'
-1200 1202 0
c Var 'aux162' direct represents '2' with '1203'
1200 -1202 1203 0
-1203 1202 0
-1203 -1200 0
c Var 'aux162' order represents '3' with '1204'
-1202 1204 0
c Var 'aux162' direct represents '3' with '1205'
1202 -1204 1205 0
-1205 1204 0
-1205 -1202 0
c Var 'aux162' direct represents '4' with '-1204'
1199 1201 1203 1205 -1204 0
c Encoding variable: aux163 with domain: int(0..8) (representing constraint (aux159 + aux162))
c Both direct and order encoding.
c Var 'aux163' order represents '0' with '1206'
c Var 'aux163' direct represents '0' with '1206'
c Var 'aux163' order represents '1' with '1207'
-1206 1207 0
c Var 'aux163' direct represents '1' with '1208'
1206 -1207 1208 0
-1208 1207 0
-1208 -1206 0
c Var 'aux163' order represents '2' with '1209'
-1207 1209 0
c Var 'aux163' direct represents '2' with '1210'
1207 -1209 1210 0
-1210 1209 0
-1210 -1207 0
c Var 'aux163' order represents '3' with '1211'
-1209 1211 0
c Var 'aux163' direct represents '3' with '1212'
1209 -1211 1212 0
-1212 1211 0
-1212 -1209 0
c Var 'aux163' order represents '4' with '1213'
-1211 1213 0
c Var 'aux163' direct represents '4' with '1214'
1211 -1213 1214 0
-1214 1213 0
-1214 -1211 0
c Var 'aux163' order represents '5' with '1215'
-1213 1215 0
c Var 'aux163' direct represents '5' with '1216'
1213 -1215 1216 0
-1216 1215 0
-1216 -1213 0
c Var 'aux163' order represents '6' with '1217'
-1215 1217 0
c Var 'aux163' direct represents '6' with '1218'
1215 -1217 1218 0
-1218 1217 0
-1218 -1215 0
c Var 'aux163' order represents '7' with '1219'
-1217 1219 0
c Var 'aux163' direct represents '7' with '1220'
1217 -1219 1220 0
-1220 1219 0
-1220 -1217 0
c Var 'aux163' direct represents '8' with '-1219'
1206 1208 1210 1212 1214 1216 1218 1220 -1219 0
c Encoding variable: aux164 with domain: int(0..8) (representing constraint (aux158 + aux160))
c Both direct and order encoding.
c Var 'aux164' order represents '0' with '1221'
c Var 'aux164' direct represents '0' with '1221'
c Var 'aux164' order represents '1' with '1222'
-1221 1222 0
c Var 'aux164' direct represents '1' with '1223'
1221 -1222 1223 0
-1223 1222 0
-1223 -1221 0
c Var 'aux164' order represents '2' with '1224'
-1222 1224 0
c Var 'aux164' direct represents '2' with '1225'
1222 -1224 1225 0
-1225 1224 0
-1225 -1222 0
c Var 'aux164' order represents '3' with '1226'
-1224 1226 0
c Var 'aux164' direct represents '3' with '1227'
1224 -1226 1227 0
-1227 1226 0
-1227 -1224 0
c Var 'aux164' order represents '4' with '1228'
-1226 1228 0
c Var 'aux164' direct represents '4' with '1229'
1226 -1228 1229 0
-1229 1228 0
-1229 -1226 0
c Var 'aux164' order represents '5' with '1230'
-1228 1230 0
c Var 'aux164' direct represents '5' with '1231'
1228 -1230 1231 0
-1231 1230 0
-1231 -1228 0
c Var 'aux164' order represents '6' with '1232'
-1230 1232 0
c Var 'aux164' direct represents '6' with '1233'
1230 -1232 1233 0
-1233 1232 0
-1233 -1230 0
c Var 'aux164' order represents '7' with '1234'
-1232 1234 0
c Var 'aux164' direct represents '7' with '1235'
1232 -1234 1235 0
-1235 1234 0
-1235 -1232 0
c Var 'aux164' direct represents '8' with '-1234'
1221 1223 1225 1227 1229 1231 1233 1235 -1234 0
c Encoding variable: aux165 with domain: int(0..2) (representing constraint ((grid_00003_00000=4) + (grid_00000_00004=4)))
c Both direct and order encoding.
c Var 'aux165' order represents '0' with '1236'
c Var 'aux165' direct represents '0' with '1236'
c Var 'aux165' order represents '1' with '1237'
-1236 1237 0
c Var 'aux165' direct represents '1' with '1238'
1236 -1237 1238 0
-1238 1237 0
-1238 -1236 0
c Var 'aux165' direct represents '2' with '-1237'
1236 1238 -1237 0
c Encoding variable: aux166 with domain: int(0..2) (representing constraint ((grid_00000_00003=4) + (grid_00003_00001=4)))
c Both direct and order encoding.
c Var 'aux166' order represents '0' with '1239'
c Var 'aux166' direct represents '0' with '1239'
c Var 'aux166' order represents '1' with '1240'
-1239 1240 0
c Var 'aux166' direct represents '1' with '1241'
1239 -1240 1241 0
-1241 1240 0
-1241 -1239 0
c Var 'aux166' direct represents '2' with '-1240'
1239 1241 -1240 0
c Encoding variable: aux167 with domain: int(0..2) (representing constraint ((grid_00000_00002=4) + (grid_00003_00003=4)))
c Both direct and order encoding.
c Var 'aux167' order represents '0' with '1242'
c Var 'aux167' direct represents '0' with '1242'
c Var 'aux167' order represents '1' with '1243'
-1242 1243 0
c Var 'aux167' direct represents '1' with '1244'
1242 -1243 1244 0
-1244 1243 0
-1244 -1242 0
c Var 'aux167' direct represents '2' with '-1243'
1242 1244 -1243 0
c Encoding variable: aux168 with domain: int(0..2) (representing constraint ((4=grid_00001_00002) + (grid_00000_00000=4)))
c Both direct and order encoding.
c Var 'aux168' order represents '0' with '1245'
c Var 'aux168' direct represents '0' with '1245'
c Var 'aux168' order represents '1' with '1246'
-1245 1246 0
c Var 'aux168' direct represents '1' with '1247'
1245 -1246 1247 0
-1247 1246 0
-1247 -1245 0
c Var 'aux168' direct represents '2' with '-1246'
1245 1247 -1246 0
c Encoding variable: aux169 with domain: int(0..2) (representing constraint ((grid_00000_00001=4) + (4=grid_00001_00003)))
c Both direct and order encoding.
c Var 'aux169' order represents '0' with '1248'
c Var 'aux169' direct represents '0' with '1248'
c Var 'aux169' order represents '1' with '1249'
-1248 1249 0
c Var 'aux169' direct represents '1' with '1250'
1248 -1249 1250 0
-1250 1249 0
-1250 -1248 0
c Var 'aux169' direct represents '2' with '-1249'
1248 1250 -1249 0
c Encoding variable: aux170 with domain: int(0..2) (representing constraint ((grid_00004_00004=4) + (grid_00003_00004=4)))
c Both direct and order encoding.
c Var 'aux170' order represents '0' with '1251'
c Var 'aux170' direct represents '0' with '1251'
c Var 'aux170' order represents '1' with '1252'
-1251 1252 0
c Var 'aux170' direct represents '1' with '1253'
1251 -1252 1253 0
-1253 1252 0
-1253 -1251 0
c Var 'aux170' direct represents '2' with '-1252'
1251 1253 -1252 0
c Encoding variable: aux171 with domain: int(0..2) (representing constraint ((grid_00004_00003=4) + (4=grid_00002_00001)))
c Both direct and order encoding.
c Var 'aux171' order represents '0' with '1254'
c Var 'aux171' direct represents '0' with '1254'
c Var 'aux171' order represents '1' with '1255'
-1254 1255 0
c Var 'aux171' direct represents '1' with '1256'
1254 -1255 1256 0
-1256 1255 0
-1256 -1254 0
c Var 'aux171' direct represents '2' with '-1255'
1254 1256 -1255 0
c Encoding variable: aux172 with domain: int(0..2) (representing constraint ((grid_00004_00001=4) + (4=grid_00002_00004)))
c Both direct and order encoding.
c Var 'aux172' order represents '0' with '1257'
c Var 'aux172' direct represents '0' with '1257'
c Var 'aux172' order represents '1' with '1258'
-1257 1258 0
c Var 'aux172' direct represents '1' with '1259'
1257 -1258 1259 0
-1259 1258 0
-1259 -1257 0
c Var 'aux172' direct represents '2' with '-1258'
1257 1259 -1258 0
c Encoding variable: aux173 with domain: int(0..2) (representing constraint ((grid_00004_00000=4) + (grid_00003_00002=4)))
c Both direct and order encoding.
c Var 'aux173' order represents '0' with '1260'
c Var 'aux173' direct represents '0' with '1260'
c Var 'aux173' order represents '1' with '1261'
-1260 1261 0
c Var 'aux173' direct represents '1' with '1262'
1260 -1261 1262 0
-1262 1261 0
-1262 -1260 0
c Var 'aux173' direct represents '2' with '-1261'
1260 1262 -1261 0
c Encoding variable: aux174 with domain: int(0..2) (representing constraint ((4=grid_00001_00000) + (4=grid_00001_00001)))
c Both direct and order encoding.
c Var 'aux174' order represents '0' with '1263'
c Var 'aux174' direct represents '0' with '1263'
c Var 'aux174' order represents '1' with '1264'
-1263 1264 0
c Var 'aux174' direct represents '1' with '1265'
1263 -1264 1265 0
-1265 1264 0
-1265 -1263 0
c Var 'aux174' direct represents '2' with '-1264'
1263 1265 -1264 0
c Encoding variable: aux175 with domain: int(0..4) (representing constraint (aux168 + aux174))
c Both direct and order encoding.
c Var 'aux175' order represents '0' with '1266'
c Var 'aux175' direct represents '0' with '1266'
c Var 'aux175' order represents '1' with '1267'
-1266 1267 0
c Var 'aux175' direct represents '1' with '1268'
1266 -1267 1268 0
-1268 1267 0
-1268 -1266 0
c Var 'aux175' order represents '2' with '1269'
-1267 1269 0
c Var 'aux175' direct represents '2' with '1270'
1267 -1269 1270 0
-1270 1269 0
-1270 -1267 0
c Var 'aux175' order represents '3' with '1271'
-1269 1271 0
c Var 'aux175' direct represents '3' with '1272'
1269 -1271 1272 0
-1272 1271 0
-1272 -1269 0
c Var 'aux175' direct represents '4' with '-1271'
1266 1268 1270 1272 -1271 0
c Encoding variable: aux176 with domain: int(0..4) (representing constraint (aux167 + aux171))
c Both direct and order encoding.
c Var 'aux176' order represents '0' with '1273'
c Var 'aux176' direct represents '0' with '1273'
c Var 'aux176' order represents '1' with '1274'
-1273 1274 0
c Var 'aux176' direct represents '1' with '1275'
1273 -1274 1275 0
-1275 1274 0
-1275 -1273 0
c Var 'aux176' order represents '2' with '1276'
-1274 1276 0
c Var 'aux176' direct represents '2' with '1277'
1274 -1276 1277 0
-1277 1276 0
-1277 -1274 0
c Var 'aux176' order represents '3' with '1278'
-1276 1278 0
c Var 'aux176' direct represents '3' with '1279'
1276 -1278 1279 0
-1279 1278 0
-1279 -1276 0
c Var 'aux176' direct represents '4' with '-1278'
1273 1275 1277 1279 -1278 0
c Encoding variable: aux177 with domain: int(0..4) (representing constraint (aux165 + aux166))
c Both direct and order encoding.
c Var 'aux177' order represents '0' with '1280'
c Var 'aux177' direct represents '0' with '1280'
c Var 'aux177' order represents '1' with '1281'
-1280 1281 0
c Var 'aux177' direct represents '1' with '1282'
1280 -1281 1282 0
-1282 1281 0
-1282 -1280 0
c Var 'aux177' order represents '2' with '1283'
-1281 1283 0
c Var 'aux177' direct represents '2' with '1284'
1281 -1283 1284 0
-1284 1283 0
-1284 -1281 0
c Var 'aux177' order represents '3' with '1285'
-1283 1285 0
c Var 'aux177' direct represents '3' with '1286'
1283 -1285 1286 0
-1286 1285 0
-1286 -1283 0
c Var 'aux177' direct represents '4' with '-1285'
1280 1282 1284 1286 -1285 0
c Encoding variable: aux178 with domain: int(0..4) (representing constraint (aux169 + aux170))
c Both direct and order encoding.
c Var 'aux178' order represents '0' with '1287'
c Var 'aux178' direct represents '0' with '1287'
c Var 'aux178' order represents '1' with '1288'
-1287 1288 0
c Var 'aux178' direct represents '1' with '1289'
1287 -1288 1289 0
-1289 1288 0
-1289 -1287 0
c Var 'aux178' order represents '2' with '1290'
-1288 1290 0
c Var 'aux178' direct represents '2' with '1291'
1288 -1290 1291 0
-1291 1290 0
-1291 -1288 0
c Var 'aux178' order represents '3' with '1292'
-1290 1292 0
c Var 'aux178' direct represents '3' with '1293'
1290 -1292 1293 0
-1293 1292 0
-1293 -1290 0
c Var 'aux178' direct represents '4' with '-1292'
1287 1289 1291 1293 -1292 0
c Encoding variable: aux179 with domain: int(0..4) (representing constraint (aux172 + aux173))
c Both direct and order encoding.
c Var 'aux179' order represents '0' with '1294'
c Var 'aux179' direct represents '0' with '1294'
c Var 'aux179' order represents '1' with '1295'
-1294 1295 0
c Var 'aux179' direct represents '1' with '1296'
1294 -1295 1296 0
-1296 1295 0
-1296 -1294 0
c Var 'aux179' order represents '2' with '1297'
-1295 1297 0
c Var 'aux179' direct represents '2' with '1298'
1295 -1297 1298 0
-1298 1297 0
-1298 -1295 0
c Var 'aux179' order represents '3' with '1299'
-1297 1299 0
c Var 'aux179' direct represents '3' with '1300'
1297 -1299 1300 0
-1300 1299 0
-1300 -1297 0
c Var 'aux179' direct represents '4' with '-1299'
1294 1296 1298 1300 -1299 0
c Encoding variable: aux180 with domain: int(0..8) (representing constraint (aux176 + aux179))
c Both direct and order encoding.
c Var 'aux180' order represents '0' with '1301'
c Var 'aux180' direct represents '0' with '1301'
c Var 'aux180' order represents '1' with '1302'
-1301 1302 0
c Var 'aux180' direct represents '1' with '1303'
1301 -1302 1303 0
-1303 1302 0
-1303 -1301 0
c Var 'aux180' order represents '2' with '1304'
-1302 1304 0
c Var 'aux180' direct represents '2' with '1305'
1302 -1304 1305 0
-1305 1304 0
-1305 -1302 0
c Var 'aux180' order represents '3' with '1306'
-1304 1306 0
c Var 'aux180' direct represents '3' with '1307'
1304 -1306 1307 0
-1307 1306 0
-1307 -1304 0
c Var 'aux180' order represents '4' with '1308'
-1306 1308 0
c Var 'aux180' direct represents '4' with '1309'
1306 -1308 1309 0
-1309 1308 0
-1309 -1306 0
c Var 'aux180' order represents '5' with '1310'
-1308 1310 0
c Var 'aux180' direct represents '5' with '1311'
1308 -1310 1311 0
-1311 1310 0
-1311 -1308 0
c Var 'aux180' order represents '6' with '1312'
-1310 1312 0
c Var 'aux180' direct represents '6' with '1313'
1310 -1312 1313 0
-1313 1312 0
-1313 -1310 0
c Var 'aux180' order represents '7' with '1314'
-1312 1314 0
c Var 'aux180' direct represents '7' with '1315'
1312 -1314 1315 0
-1315 1314 0
-1315 -1312 0
c Var 'aux180' direct represents '8' with '-1314'
1301 1303 1305 1307 1309 1311 1313 1315 -1314 0
c Encoding variable: aux181 with domain: int(0..8) (representing constraint (aux175 + aux177))
c Both direct and order encoding.
c Var 'aux181' order represents '0' with '1316'
c Var 'aux181' direct represents '0' with '1316'
c Var 'aux181' order represents '1' with '1317'
-1316 1317 0
c Var 'aux181' direct represents '1' with '1318'
1316 -1317 1318 0
-1318 1317 0
-1318 -1316 0
c Var 'aux181' order represents '2' with '1319'
-1317 1319 0
c Var 'aux181' direct represents '2' with '1320'
1317 -1319 1320 0
-1320 1319 0
-1320 -1317 0
c Var 'aux181' order represents '3' with '1321'
-1319 1321 0
c Var 'aux181' direct represents '3' with '1322'
1319 -1321 1322 0
-1322 1321 0
-1322 -1319 0
c Var 'aux181' order represents '4' with '1323'
-1321 1323 0
c Var 'aux181' direct represents '4' with '1324'
1321 -1323 1324 0
-1324 1323 0
-1324 -1321 0
c Var 'aux181' order represents '5' with '1325'
-1323 1325 0
c Var 'aux181' direct represents '5' with '1326'
1323 -1325 1326 0
-1326 1325 0
-1326 -1323 0
c Var 'aux181' order represents '6' with '1327'
-1325 1327 0
c Var 'aux181' direct represents '6' with '1328'
1325 -1327 1328 0
-1328 1327 0
-1328 -1325 0
c Var 'aux181' order represents '7' with '1329'
-1327 1329 0
c Var 'aux181' direct represents '7' with '1330'
1327 -1329 1330 0
-1330 1329 0
-1330 -1327 0
c Var 'aux181' direct represents '8' with '-1329'
1316 1318 1320 1322 1324 1326 1328 1330 -1329 0
c Encoding variable: aux182 with domain: int(0..2) (representing constraint ((grid_00003_00000=5) + (grid_00000_00004=5)))
c Both direct and order encoding.
c Var 'aux182' order represents '0' with '1331'
c Var 'aux182' direct represents '0' with '1331'
c Var 'aux182' order represents '1' with '1332'
-1331 1332 0
c Var 'aux182' direct represents '1' with '1333'
1331 -1332 1333 0
-1333 1332 0
-1333 -1331 0
c Var 'aux182' direct represents '2' with '-1332'
1331 1333 -1332 0
c Encoding variable: aux183 with domain: int(0..2) (representing constraint ((grid_00000_00003=5) + (grid_00003_00001=5)))
c Both direct and order encoding.
c Var 'aux183' order represents '0' with '1334'
c Var 'aux183' direct represents '0' with '1334'
c Var 'aux183' order represents '1' with '1335'
-1334 1335 0
c Var 'aux183' direct represents '1' with '1336'
1334 -1335 1336 0
-1336 1335 0
-1336 -1334 0
c Var 'aux183' direct represents '2' with '-1335'
1334 1336 -1335 0
c Encoding variable: aux184 with domain: int(0..2) (representing constraint ((grid_00000_00002=5) + (grid_00003_00003=5)))
c Both direct and order encoding.
c Var 'aux184' order represents '0' with '1337'
c Var 'aux184' direct represents '0' with '1337'
c Var 'aux184' order represents '1' with '1338'
-1337 1338 0
c Var 'aux184' direct represents '1' with '1339'
1337 -1338 1339 0
-1339 1338 0
-1339 -1337 0
c Var 'aux184' direct represents '2' with '-1338'
1337 1339 -1338 0
c Encoding variable: aux185 with domain: int(0..2) (representing constraint ((5=grid_00001_00002) + (grid_00000_00000=5)))
c Both direct and order encoding.
c Var 'aux185' order represents '0' with '1340'
c Var 'aux185' direct represents '0' with '1340'
c Var 'aux185' order represents '1' with '1341'
-1340 1341 0
c Var 'aux185' direct represents '1' with '1342'
1340 -1341 1342 0
-1342 1341 0
-1342 -1340 0
c Var 'aux185' direct represents '2' with '-1341'
1340 1342 -1341 0
c Encoding variable: aux186 with domain: int(0..2) (representing constraint ((grid_00000_00001=5) + (5=grid_00001_00003)))
c Both direct and order encoding.
c Var 'aux186' order represents '0' with '1343'
c Var 'aux186' direct represents '0' with '1343'
c Var 'aux186' order represents '1' with '1344'
-1343 1344 0
c Var 'aux186' direct represents '1' with '1345'
1343 -1344 1345 0
-1345 1344 0
-1345 -1343 0
c Var 'aux186' direct represents '2' with '-1344'
1343 1345 -1344 0
c Encoding variable: aux187 with domain: int(0..2) (representing constraint ((grid_00004_00004=5) + (grid_00003_00004=5)))
c Both direct and order encoding.
c Var 'aux187' order represents '0' with '1346'
c Var 'aux187' direct represents '0' with '1346'
c Var 'aux187' order represents '1' with '1347'
-1346 1347 0
c Var 'aux187' direct represents '1' with '1348'
1346 -1347 1348 0
-1348 1347 0
-1348 -1346 0
c Var 'aux187' direct represents '2' with '-1347'
1346 1348 -1347 0
c Encoding variable: aux188 with domain: int(0..2) (representing constraint ((grid_00004_00003=5) + (5=grid_00002_00001)))
c Both direct and order encoding.
c Var 'aux188' order represents '0' with '1349'
c Var 'aux188' direct represents '0' with '1349'
c Var 'aux188' order represents '1' with '1350'
-1349 1350 0
c Var 'aux188' direct represents '1' with '1351'
1349 -1350 1351 0
-1351 1350 0
-1351 -1349 0
c Var 'aux188' direct represents '2' with '-1350'
1349 1351 -1350 0
c Encoding variable: aux189 with domain: int(0..2) (representing constraint ((grid_00004_00001=5) + (5=grid_00002_00004)))
c Both direct and order encoding.
c Var 'aux189' order represents '0' with '1352'
c Var 'aux189' direct represents '0' with '1352'
c Var 'aux189' order represents '1' with '1353'
-1352 1353 0
c Var 'aux189' direct represents '1' with '1354'
1352 -1353 1354 0
-1354 1353 0
-1354 -1352 0
c Var 'aux189' direct represents '2' with '-1353'
1352 1354 -1353 0
c Encoding variable: aux190 with domain: int(0..2) (representing constraint ((grid_00004_00000=5) + (grid_00003_00002=5)))
c Both direct and order encoding.
c Var 'aux190' order represents '0' with '1355'
c Var 'aux190' direct represents '0' with '1355'
c Var 'aux190' order represents '1' with '1356'
-1355 1356 0
c Var 'aux190' direct represents '1' with '1357'
1355 -1356 1357 0
-1357 1356 0
-1357 -1355 0
c Var 'aux190' direct represents '2' with '-1356'
1355 1357 -1356 0
c Encoding variable: aux191 with domain: int(0..2) (representing constraint ((5=grid_00001_00000) + (5=grid_00001_00001)))
c Both direct and order encoding.
c Var 'aux191' order represents '0' with '1358'
c Var 'aux191' direct represents '0' with '1358'
c Var 'aux191' order represents '1' with '1359'
-1358 1359 0
c Var 'aux191' direct represents '1' with '1360'
1358 -1359 1360 0
-1360 1359 0
-1360 -1358 0
c Var 'aux191' direct represents '2' with '-1359'
1358 1360 -1359 0
c Encoding variable: aux192 with domain: int(0..4) (representing constraint (aux185 + aux191))
c Both direct and order encoding.
c Var 'aux192' order represents '0' with '1361'
c Var 'aux192' direct represents '0' with '1361'
c Var 'aux192' order represents '1' with '1362'
-1361 1362 0
c Var 'aux192' direct represents '1' with '1363'
1361 -1362 1363 0
-1363 1362 0
-1363 -1361 0
c Var 'aux192' order represents '2' with '1364'
-1362 1364 0
c Var 'aux192' direct represents '2' with '1365'
1362 -1364 1365 0
-1365 1364 0
-1365 -1362 0
c Var 'aux192' order represents '3' with '1366'
-1364 1366 0
c Var 'aux192' direct represents '3' with '1367'
1364 -1366 1367 0
-1367 1366 0
-1367 -1364 0
c Var 'aux192' direct represents '4' with '-1366'
1361 1363 1365 1367 -1366 0
c Encoding variable: aux193 with domain: int(0..4) (representing constraint (aux184 + aux188))
c Both direct and order encoding.
c Var 'aux193' order represents '0' with '1368'
c Var 'aux193' direct represents '0' with '1368'
c Var 'aux193' order represents '1' with '1369'
-1368 1369 0
c Var 'aux193' direct represents '1' with '1370'
1368 -1369 1370 0
-1370 1369 0
-1370 -1368 0
c Var 'aux193' order represents '2' with '1371'
-1369 1371 0
c Var 'aux193' direct represents '2' with '1372'
1369 -1371 1372 0
-1372 1371 0
-1372 -1369 0
c Var 'aux193' order represents '3' with '1373'
-1371 1373 0
c Var 'aux193' direct represents '3' with '1374'
1371 -1373 1374 0
-1374 1373 0
-1374 -1371 0
c Var 'aux193' direct represents '4' with '-1373'
1368 1370 1372 1374 -1373 0
c Encoding variable: aux194 with domain: int(0..4) (representing constraint (aux182 + aux183))
c Both direct and order encoding.
c Var 'aux194' order represents '0' with '1375'
c Var 'aux194' direct represents '0' with '1375'
c Var 'aux194' order represents '1' with '1376'
-1375 1376 0
c Var 'aux194' direct represents '1' with '1377'
1375 -1376 1377 0
-1377 1376 0
-1377 -1375 0
c Var 'aux194' order represents '2' with '1378'
-1376 1378 0
c Var 'aux194' direct represents '2' with '1379'
1376 -1378 1379 0
-1379 1378 0
-1379 -1376 0
c Var 'aux194' order represents '3' with '1380'
-1378 1380 0
c Var 'aux194' direct represents '3' with '1381'
1378 -1380 1381 0
-1381 1380 0
-1381 -1378 0
c Var 'aux194' direct represents '4' with '-1380'
1375 1377 1379 1381 -1380 0
c Encoding variable: aux195 with domain: int(0..4) (representing constraint (aux186 + aux187))
c Both direct and order encoding.
c Var 'aux195' order represents '0' with '1382'
c Var 'aux195' direct represents '0' with '1382'
c Var 'aux195' order represents '1' with '1383'
-1382 1383 0
c Var 'aux195' direct represents '1' with '1384'
1382 -1383 1384 0
-1384 1383 0
-1384 -1382 0
c Var 'aux195' order represents '2' with '1385'
-1383 1385 0
c Var 'aux195' direct represents '2' with '1386'
1383 -1385 1386 0
-1386 1385 0
-1386 -1383 0
c Var 'aux195' order represents '3' with '1387'
-1385 1387 0
c Var 'aux195' direct represents '3' with '1388'
1385 -1387 1388 0
-1388 1387 0
-1388 -1385 0
c Var 'aux195' direct represents '4' with '-1387'
1382 1384 1386 1388 -1387 0
c Encoding variable: aux196 with domain: int(0..4) (representing constraint (aux189 + aux190))
c Both direct and order encoding.
c Var 'aux196' order represents '0' with '1389'
c Var 'aux196' direct represents '0' with '1389'
c Var 'aux196' order represents '1' with '1390'
-1389 1390 0
c Var 'aux196' direct represents '1' with '1391'
1389 -1390 1391 0
-1391 1390 0
-1391 -1389 0
c Var 'aux196' order represents '2' with '1392'
-1390 1392 0
c Var 'aux196' direct represents '2' with '1393'
1390 -1392 1393 0
-1393 1392 0
-1393 -1390 0
c Var 'aux196' order represents '3' with '1394'
-1392 1394 0
c Var 'aux196' direct represents '3' with '1395'
1392 -1394 1395 0
-1395 1394 0
-1395 -1392 0
c Var 'aux196' direct represents '4' with '-1394'
1389 1391 1393 1395 -1394 0
c Encoding variable: aux197 with domain: int(0..8) (representing constraint (aux193 + aux196))
c Both direct and order encoding.
c Var 'aux197' order represents '0' with '1396'
c Var 'aux197' direct represents '0' with '1396'
c Var 'aux197' order represents '1' with '1397'
-1396 1397 0
c Var 'aux197' direct represents '1' with '1398'
1396 -1397 1398 0
-1398 1397 0
-1398 -1396 0
c Var 'aux197' order represents '2' with '1399'
-1397 1399 0
c Var 'aux197' direct represents '2' with '1400'
1397 -1399 1400 0
-1400 1399 0
-1400 -1397 0
c Var 'aux197' order represents '3' with '1401'
-1399 1401 0
c Var 'aux197' direct represents '3' with '1402'
1399 -1401 1402 0
-1402 1401 0
-1402 -1399 0
c Var 'aux197' order represents '4' with '1403'
-1401 1403 0
c Var 'aux197' direct represents '4' with '1404'
1401 -1403 1404 0
-1404 1403 0
-1404 -1401 0
c Var 'aux197' order represents '5' with '1405'
-1403 1405 0
c Var 'aux197' direct represents '5' with '1406'
1403 -1405 1406 0
-1406 1405 0
-1406 -1403 0
c Var 'aux197' order represents '6' with '1407'
-1405 1407 0
c Var 'aux197' direct represents '6' with '1408'
1405 -1407 1408 0
-1408 1407 0
-1408 -1405 0
c Var 'aux197' order represents '7' with '1409'
-1407 1409 0
c Var 'aux197' direct represents '7' with '1410'
1407 -1409 1410 0
-1410 1409 0
-1410 -1407 0
c Var 'aux197' direct represents '8' with '-1409'
1396 1398 1400 1402 1404 1406 1408 1410 -1409 0
c Encoding variable: aux198 with domain: int(0..8) (representing constraint (aux192 + aux194))
c Both direct and order encoding.
c Var 'aux198' order represents '0' with '1411'
c Var 'aux198' direct represents '0' with '1411'
c Var 'aux198' order represents '1' with '1412'
-1411 1412 0
c Var 'aux198' direct represents '1' with '1413'
1411 -1412 1413 0
-1413 1412 0
-1413 -1411 0
c Var 'aux198' order represents '2' with '1414'
-1412 1414 0
c Var 'aux198' direct represents '2' with '1415'
1412 -1414 1415 0
-1415 1414 0
-1415 -1412 0
c Var 'aux198' order represents '3' with '1416'
-1414 1416 0
c Var 'aux198' direct represents '3' with '1417'
1414 -1416 1417 0
-1417 1416 0
-1417 -1414 0
c Var 'aux198' order represents '4' with '1418'
-1416 1418 0
c Var 'aux198' direct represents '4' with '1419'
1416 -1418 1419 0
-1419 1418 0
-1419 -1416 0
c Var 'aux198' order represents '5' with '1420'
-1418 1420 0
c Var 'aux198' direct represents '5' with '1421'
1418 -1420 1421 0
-1421 1420 0
-1421 -1418 0
c Var 'aux198' order represents '6' with '1422'
-1420 1422 0
c Var 'aux198' direct represents '6' with '1423'
1420 -1422 1423 0
-1423 1422 0
-1423 -1420 0
c Var 'aux198' order represents '7' with '1424'
-1422 1424 0
c Var 'aux198' direct represents '7' with '1425'
1422 -1424 1425 0
-1425 1424 0
-1425 -1422 0
c Var 'aux198' direct represents '8' with '-1424'
1411 1413 1415 1417 1419 1421 1423 1425 -1424 0
c Encoding variable: aux199 with domain: int(0..2) (representing constraint ((0<grid_00000_00000) + (0<grid_00000_00004)))
c Both direct and order encoding.
c Var 'aux199' order represents '0' with '1426'
c Var 'aux199' direct represents '0' with '1426'
c Var 'aux199' order represents '1' with '1427'
-1426 1427 0
c Var 'aux199' direct represents '1' with '1428'
1426 -1427 1428 0
-1428 1427 0
-1428 -1426 0
c Var 'aux199' direct represents '2' with '-1427'
1426 1428 -1427 0
c Encoding variable: aux200 with domain: int(0..2) (representing constraint ((0<grid_00000_00003) + (0<grid_00000_00001)))
c Both direct and order encoding.
c Var 'aux200' order represents '0' with '1429'
c Var 'aux200' direct represents '0' with '1429'
c Var 'aux200' order represents '1' with '1430'
-1429 1430 0
c Var 'aux200' direct represents '1' with '1431'
1429 -1430 1431 0
-1431 1430 0
-1431 -1429 0
c Var 'aux200' direct represents '2' with '-1430'
1429 1431 -1430 0
c Encoding variable: aux201 with domain: int(0..2) (representing constraint ((0<grid_00001_00000) + (0<grid_00001_00003)))
c Both direct and order encoding.
c Var 'aux201' order represents '0' with '1432'
c Var 'aux201' direct represents '0' with '1432'
c Var 'aux201' order represents '1' with '1433'
-1432 1433 0
c Var 'aux201' direct represents '1' with '1434'
1432 -1433 1434 0
-1434 1433 0
-1434 -1432 0
c Var 'aux201' direct represents '2' with '-1433'
1432 1434 -1433 0
c Encoding variable: aux202 with domain: int(0..2) (representing constraint ((0<grid_00003_00000) + (0<grid_00003_00004)))
c Both direct and order encoding.
c Var 'aux202' order represents '0' with '1435'
c Var 'aux202' direct represents '0' with '1435'
c Var 'aux202' order represents '1' with '1436'
-1435 1436 0
c Var 'aux202' direct represents '1' with '1437'
1435 -1436 1437 0
-1437 1436 0
-1437 -1435 0
c Var 'aux202' direct represents '2' with '-1436'
1435 1437 -1436 0
c Encoding variable: aux203 with domain: int(0..2) (representing constraint ((0<grid_00003_00003) + (0<grid_00003_00001)))
c Both direct and order encoding.
c Var 'aux203' order represents '0' with '1438'
c Var 'aux203' direct represents '0' with '1438'
c Var 'aux203' order represents '1' with '1439'
-1438 1439 0
c Var 'aux203' direct represents '1' with '1440'
1438 -1439 1440 0
-1440 1439 0
-1440 -1438 0
c Var 'aux203' direct represents '2' with '-1439'
1438 1440 -1439 0
c Encoding variable: aux204 with domain: int(0..2) (representing constraint ((0<grid_00004_00000) + (0<grid_00004_00004)))
c Both direct and order encoding.
c Var 'aux204' order represents '0' with '1441'
c Var 'aux204' direct represents '0' with '1441'
c Var 'aux204' order represents '1' with '1442'
-1441 1442 0
c Var 'aux204' direct represents '1' with '1443'
1441 -1442 1443 0
-1443 1442 0
-1443 -1441 0
c Var 'aux204' direct represents '2' with '-1442'
1441 1443 -1442 0
c Encoding variable: aux205 with domain: int(0..2) (representing constraint ((0<grid_00000_00000) + (0<grid_00000_00004)))
c Both direct and order encoding.
c Var 'aux205' order represents '0' with '1444'
c Var 'aux205' direct represents '0' with '1444'
c Var 'aux205' order represents '1' with '1445'
-1444 1445 0
c Var 'aux205' direct represents '1' with '1446'
1444 -1445 1446 0
-1446 1445 0
-1446 -1444 0
c Var 'aux205' direct represents '2' with '-1445'
1444 1446 -1445 0
c Encoding variable: aux206 with domain: int(0..2) (representing constraint ((0<grid_00000_00003) + (0<grid_00000_00001)))
c Both direct and order encoding.
c Var 'aux206' order represents '0' with '1447'
c Var 'aux206' direct represents '0' with '1447'
c Var 'aux206' order represents '1' with '1448'
-1447 1448 0
c Var 'aux206' direct represents '1' with '1449'
1447 -1448 1449 0
-1449 1448 0
-1449 -1447 0
c Var 'aux206' direct represents '2' with '-1448'
1447 1449 -1448 0
c Encoding variable: aux207 with domain: int(0..2) (representing constraint ((0<grid_00001_00000) + (0<grid_00001_00003)))
c Both direct and order encoding.
c Var 'aux207' order represents '0' with '1450'
c Var 'aux207' direct represents '0' with '1450'
c Var 'aux207' order represents '1' with '1451'
-1450 1451 0
c Var 'aux207' direct represents '1' with '1452'
1450 -1451 1452 0
-1452 1451 0
-1452 -1450 0
c Var 'aux207' direct represents '2' with '-1451'
1450 1452 -1451 0
c Encoding variable: aux208 with domain: int(0..2) (representing constraint ((0<grid_00003_00000) + (0<grid_00003_00004)))
c Both direct and order encoding.
c Var 'aux208' order represents '0' with '1453'
c Var 'aux208' direct represents '0' with '1453'
c Var 'aux208' order represents '1' with '1454'
-1453 1454 0
c Var 'aux208' direct represents '1' with '1455'
1453 -1454 1455 0
-1455 1454 0
-1455 -1453 0
c Var 'aux208' direct represents '2' with '-1454'
1453 1455 -1454 0
c Encoding variable: aux209 with domain: int(0..2) (representing constraint ((0<grid_00003_00003) + (0<grid_00003_00001)))
c Both direct and order encoding.
c Var 'aux209' order represents '0' with '1456'
c Var 'aux209' direct represents '0' with '1456'
c Var 'aux209' order represents '1' with '1457'
-1456 1457 0
c Var 'aux209' direct represents '1' with '1458'
1456 -1457 1458 0
-1458 1457 0
-1458 -1456 0
c Var 'aux209' direct represents '2' with '-1457'
1456 1458 -1457 0
c Encoding variable: aux210 with domain: int(0..2) (representing constraint ((0<grid_00004_00000) + (0<grid_00004_00004)))
c Both direct and order encoding.
c Var 'aux210' order represents '0' with '1459'
c Var 'aux210' direct represents '0' with '1459'
c Var 'aux210' order represents '1' with '1460'
-1459 1460 0
c Var 'aux210' direct represents '1' with '1461'
1459 -1460 1461 0
-1461 1460 0
-1461 -1459 0
c Var 'aux210' direct represents '2' with '-1460'
1459 1461 -1460 0
c Encoding variable: aux211 with domain: int(0..2) (representing constraint ((0<grid_00003_00000) + (0<grid_00001_00000)))
c Both direct and order encoding.
c Var 'aux211' order represents '0' with '1462'
c Var 'aux211' direct represents '0' with '1462'
c Var 'aux211' order represents '1' with '1463'
-1462 1463 0
c Var 'aux211' direct represents '1' with '1464'
1462 -1463 1464 0
-1464 1463 0
-1464 -1462 0
c Var 'aux211' direct represents '2' with '-1463'
1462 1464 -1463 0
c Encoding variable: aux212 with domain: int(0..2) (representing constraint ((0<grid_00003_00003) + (0<grid_00001_00003)))
c Both direct and order encoding.
c Var 'aux212' order represents '0' with '1465'
c Var 'aux212' direct represents '0' with '1465'
c Var 'aux212' order represents '1' with '1466'
-1465 1466 0
c Var 'aux212' direct represents '1' with '1467'
1465 -1466 1467 0
-1467 1466 0
-1467 -1465 0
c Var 'aux212' direct represents '2' with '-1466'
1465 1467 -1466 0
c Encoding variable: aux213 with domain: int(0..2) (representing constraint ((0<grid_00002_00004) + (0<grid_00000_00004)))
c Both direct and order encoding.
c Var 'aux213' order represents '0' with '1468'
c Var 'aux213' direct represents '0' with '1468'
c Var 'aux213' order represents '1' with '1469'
-1468 1469 0
c Var 'aux213' direct represents '1' with '1470'
1468 -1469 1470 0
-1470 1469 0
-1470 -1468 0
c Var 'aux213' direct represents '2' with '-1469'
1468 1470 -1469 0
c Encoding variable: aux214 with domain: int(0..2) (representing constraint ((0<grid_00003_00000) + (0<grid_00001_00000)))
c Both direct and order encoding.
c Var 'aux214' order represents '0' with '1471'
c Var 'aux214' direct represents '0' with '1471'
c Var 'aux214' order represents '1' with '1472'
-1471 1472 0
c Var 'aux214' direct represents '1' with '1473'
1471 -1472 1473 0
-1473 1472 0
-1473 -1471 0
c Var 'aux214' direct represents '2' with '-1472'
1471 1473 -1472 0
c Encoding variable: aux215 with domain: int(0..2) (representing constraint ((0<grid_00002_00001) + (0<grid_00001_00001)))
c Both direct and order encoding.
c Var 'aux215' order represents '0' with '1474'
c Var 'aux215' direct represents '0' with '1474'
c Var 'aux215' order represents '1' with '1475'
-1474 1475 0
c Var 'aux215' direct represents '1' with '1476'
1474 -1475 1476 0
-1476 1475 0
-1476 -1474 0
c Var 'aux215' direct represents '2' with '-1475'
1474 1476 -1475 0
c Encoding variable: aux216 with domain: int(0..2) (representing constraint ((0<grid_00000_00001) + (0<grid_00003_00001)))
c Both direct and order encoding.
c Var 'aux216' order represents '0' with '1477'
c Var 'aux216' direct represents '0' with '1477'
c Var 'aux216' order represents '1' with '1478'
-1477 1478 0
c Var 'aux216' direct represents '1' with '1479'
1477 -1478 1479 0
-1479 1478 0
-1479 -1477 0
c Var 'aux216' direct represents '2' with '-1478'
1477 1479 -1478 0
c Encoding variable: aux217 with domain: int(0..2) (representing constraint ((0<grid_00003_00003) + (0<grid_00001_00003)))
c Both direct and order encoding.
c Var 'aux217' order represents '0' with '1480'
c Var 'aux217' direct represents '0' with '1480'
c Var 'aux217' order represents '1' with '1481'
-1480 1481 0
c Var 'aux217' direct represents '1' with '1482'
1480 -1481 1482 0
-1482 1481 0
-1482 -1480 0
c Var 'aux217' direct represents '2' with '-1481'
1480 1482 -1481 0
c Encoding variable: aux218 with domain: int(0..2) (representing constraint ((0<grid_00002_00004) + (0<grid_00000_00004)))
c Both direct and order encoding.
c Var 'aux218' order represents '0' with '1483'
c Var 'aux218' direct represents '0' with '1483'
c Var 'aux218' order represents '1' with '1484'
-1483 1484 0
c Var 'aux218' direct represents '1' with '1485'
1483 -1484 1485 0
-1485 1484 0
-1485 -1483 0
c Var 'aux218' direct represents '2' with '-1484'
1483 1485 -1484 0
c ((1<=(aux42 + aux44 + aux45))=tv=SATLiteral(447))
-447 -527 -541 -556 0
447 556 0
447 541 0
447 542 0
447 544 0
447 546 0
447 548 0
447 550 0
447 552 0
447 554 0
447 527 0
447 527 541 0
447 527 542 0
447 527 544 0
447 527 546 0
447 527 548 0
447 527 550 0
447 527 552 0
447 527 554 0
447 528 0
447 528 541 0
447 528 542 0
447 528 544 0
447 528 546 0
447 528 548 0
447 528 550 0
447 528 552 0
447 528 554 0
447 530 0
447 530 541 0
447 530 542 0
447 530 544 0
447 530 546 0
447 530 548 0
447 530 550 0
447 530 552 0
447 530 554 0
447 532 0
447 532 541 0
447 532 542 0
447 532 544 0
447 532 546 0
447 532 548 0
447 532 550 0
447 532 552 0
447 532 554 0
c ((1<=(aux59 + aux61 + aux62))=tv=SATLiteral(448))
-448 -622 -636 -651 0
448 651 0
448 636 0
448 637 0
448 639 0
448 641 0
448 643 0
448 645 0
448 647 0
448 649 0
448 622 0
448 622 636 0
448 622 637 0
448 622 639 0
448 622 641 0
448 622 643 0
448 622 645 0
448 622 647 0
448 622 649 0
448 623 0
448 623 636 0
448 623 637 0
448 623 639 0
448 623 641 0
448 623 643 0
448 623 645 0
448 623 647 0
448 623 649 0
448 625 0
448 625 636 0
448 625 637 0
448 625 639 0
448 625 641 0
448 625 643 0
448 625 645 0
448 625 647 0
448 625 649 0
448 627 0
448 627 636 0
448 627 637 0
448 627 639 0
448 627 641 0
448 627 643 0
448 627 645 0
448 627 647 0
448 627 649 0
c ((1<=(aux76 + aux78 + aux79))=tv=SATLiteral(449))
-449 -717 -731 -746 0
449 746 0
449 731 0
449 732 0
449 734 0
449 736 0
449 738 0
449 740 0
449 742 0
449 744 0
449 717 0
449 717 731 0
449 717 732 0
449 717 734 0
449 717 736 0
449 717 738 0
449 717 740 0
449 717 742 0
449 717 744 0
449 718 0
449 718 731 0
449 718 732 0
449 718 734 0
449 718 736 0
449 718 738 0
449 718 740 0
449 718 742 0
449 718 744 0
449 720 0
449 720 731 0
449 720 732 0
449 720 734 0
449 720 736 0
449 720 738 0
449 720 740 0
449 720 742 0
449 720 744 0
449 722 0
449 722 731 0
449 722 732 0
449 722 734 0
449 722 736 0
449 722 738 0
449 722 740 0
449 722 742 0
449 722 744 0
c ((1<=(aux93 + aux95 + aux96))=tv=SATLiteral(450))
-450 -812 -826 -841 0
450 841 0
450 826 0
450 827 0
450 829 0
450 831 0
450 833 0
450 835 0
450 837 0
450 839 0
450 812 0
450 812 826 0
450 812 827 0
450 812 829 0
450 812 831 0
450 812 833 0
450 812 835 0
450 812 837 0
450 812 839 0
450 813 0
450 813 826 0
450 813 827 0
450 813 829 0
450 813 831 0
450 813 833 0
450 813 835 0
450 813 837 0
450 813 839 0
450 815 0
450 815 826 0
450 815 827 0
450 815 829 0
450 815 831 0
450 815 833 0
450 815 835 0
450 815 837 0
450 815 839 0
450 817 0
450 817 826 0
450 817 827 0
450 817 829 0
450 817 831 0
450 817 833 0
450 817 835 0
450 817 837 0
450 817 839 0
c ((1<=(aux110 + aux112 + aux113))=tv=SATLiteral(451))
-451 -907 -921 -936 0
451 936 0
451 921 0
451 922 0
451 924 0
451 926 0
451 928 0
451 930 0
451 932 0
451 934 0
451 907 0
451 907 921 0
451 907 922 0
451 907 924 0
451 907 926 0
451 907 928 0
451 907 930 0
451 907 932 0
451 907 934 0
451 908 0
451 908 921 0
451 908 922 0
451 908 924 0
451 908 926 0
451 908 928 0
451 908 930 0
451 908 932 0
451 908 934 0
451 910 0
451 910 921 0
451 910 922 0
451 910 924 0
451 910 926 0
451 910 928 0
451 910 930 0
451 910 932 0
451 910 934 0
451 912 0
451 912 921 0
451 912 922 0
451 912 924 0
451 912 926 0
451 912 928 0
451 912 930 0
451 912 932 0
451 912 934 0
c (((aux127 + aux129 + aux130)<=1)=tv=SATLiteral(452))
-452 1032 0
-452 1016 1031 0
-452 1017 0
-452 1019 0
-452 1021 0
-452 1023 0
-452 1025 0
-452 1027 0
-452 1029 0
-452 1002 1031 0
-452 1002 1016 0
-452 1002 1017 0
-452 1002 1019 0
-452 1002 1021 0
-452 1002 1023 0
-452 1002 1025 0
-452 1002 1027 0
-452 1002 1029 0
-452 1003 0
-452 1003 1016 0
-452 1003 1017 0
-452 1003 1019 0
-452 1003 1021 0
-452 1003 1023 0
-452 1003 1025 0
-452 1003 1027 0
-452 1003 1029 0
-452 1005 0
-452 1005 1016 0
-452 1005 1017 0
-452 1005 1019 0
-452 1005 1021 0
-452 1005 1023 0
-452 1005 1025 0
-452 1005 1027 0
-452 1005 1029 0
-452 1007 0
-452 1007 1016 0
-452 1007 1017 0
-452 1007 1019 0
-452 1007 1021 0
-452 1007 1023 0
-452 1007 1025 0
-452 1007 1027 0
-452 1007 1029 0
452 -1003 -1016 -1031 0
452 -1002 -1017 -1031 0
452 -1002 -1016 -1032 0
c (((aux144 + aux146 + aux147)<=1)=tv=SATLiteral(453))
-453 1127 0
-453 1111 1126 0
-453 1112 0
-453 1114 0
-453 1116 0
-453 1118 0
-453 1120 0
-453 1122 0
-453 1124 0
-453 1097 1126 0
-453 1097 1111 0
-453 1097 1112 0
-453 1097 1114 0
-453 1097 1116 0
-453 1097 1118 0
-453 1097 1120 0
-453 1097 1122 0
-453 1097 1124 0
-453 1098 0
-453 1098 1111 0
-453 1098 1112 0
-453 1098 1114 0
-453 1098 1116 0
-453 1098 1118 0
-453 1098 1120 0
-453 1098 1122 0
-453 1098 1124 0
-453 1100 0
-453 1100 1111 0
-453 1100 1112 0
-453 1100 1114 0
-453 1100 1116 0
-453 1100 1118 0
-453 1100 1120 0
-453 1100 1122 0
-453 1100 1124 0
-453 1102 0
-453 1102 1111 0
-453 1102 1112 0
-453 1102 1114 0
-453 1102 1116 0
-453 1102 1118 0
-453 1102 1120 0
-453 1102 1122 0
-453 1102 1124 0
453 -1098 -1111 -1126 0
453 -1097 -1112 -1126 0
453 -1097 -1111 -1127 0
c (((aux161 + aux163 + aux164)<=1)=tv=SATLiteral(454))
-454 1222 0
-454 1206 1221 0
-454 1207 0
-454 1209 0
-454 1211 0
-454 1213 0
-454 1215 0
-454 1217 0
-454 1219 0
-454 1192 1221 0
-454 1192 1206 0
-454 1192 1207 0
-454 1192 1209 0
-454 1192 1211 0
-454 1192 1213 0
-454 1192 1215 0
-454 1192 1217 0
-454 1192 1219 0
-454 1193 0
-454 1193 1206 0
-454 1193 1207 0
-454 1193 1209 0
-454 1193 1211 0
-454 1193 1213 0
-454 1193 1215 0
-454 1193 1217 0
-454 1193 1219 0
-454 1195 0
-454 1195 1206 0
-454 1195 1207 0
-454 1195 1209 0
-454 1195 1211 0
-454 1195 1213 0
-454 1195 1215 0
-454 1195 1217 0
-454 1195 1219 0
-454 1197 0
-454 1197 1206 0
-454 1197 1207 0
-454 1197 1209 0
-454 1197 1211 0
-454 1197 1213 0
-454 1197 1215 0
-454 1197 1217 0
-454 1197 1219 0
454 -1193 -1206 -1221 0
454 -1192 -1207 -1221 0
454 -1192 -1206 -1222 0
c (((aux178 + aux180 + aux181)<=1)=tv=SATLiteral(455))
-455 1317 0
-455 1301 1316 0
-455 1302 0
-455 1304 0
-455 1306 0
-455 1308 0
-455 1310 0
-455 1312 0
-455 1314 0
-455 1287 1316 0
-455 1287 1301 0
-455 1287 1302 0
-455 1287 1304 0
-455 1287 1306 0
-455 1287 1308 0
-455 1287 1310 0
-455 1287 1312 0
-455 1287 1314 0
-455 1288 0
-455 1288 1301 0
-455 1288 1302 0
-455 1288 1304 0
-455 1288 1306 0
-455 1288 1308 0
-455 1288 1310 0
-455 1288 1312 0
-455 1288 1314 0
-455 1290 0
-455 1290 1301 0
-455 1290 1302 0
-455 1290 1304 0
-455 1290 1306 0
-455 1290 1308 0
-455 1290 1310 0
-455 1290 1312 0
-455 1290 1314 0
-455 1292 0
-455 1292 1301 0
-455 1292 1302 0
-455 1292 1304 0
-455 1292 1306 0
-455 1292 1308 0
-455 1292 1310 0
-455 1292 1312 0
-455 1292 1314 0
455 -1288 -1301 -1316 0
455 -1287 -1302 -1316 0
455 -1287 -1301 -1317 0
c (((aux195 + aux197 + aux198)<=1)=tv=SATLiteral(456))
-456 1412 0
-456 1396 1411 0
-456 1397 0
-456 1399 0
-456 1401 0
-456 1403 0
-456 1405 0
-456 1407 0
-456 1409 0
-456 1382 1411 0
-456 1382 1396 0
-456 1382 1397 0
-456 1382 1399 0
-456 1382 1401 0
-456 1382 1403 0
-456 1382 1405 0
-456 1382 1407 0
-456 1382 1409 0
-456 1383 0
-456 1383 1396 0
-456 1383 1397 0
-456 1383 1399 0
-456 1383 1401 0
-456 1383 1403 0
-456 1383 1405 0
-456 1383 1407 0
-456 1383 1409 0
-456 1385 0
-456 1385 1396 0
-456 1385 1397 0
-456 1385 1399 0
-456 1385 1401 0
-456 1385 1403 0
-456 1385 1405 0
-456 1385 1407 0
-456 1385 1409 0
-456 1387 0
-456 1387 1396 0
-456 1387 1397 0
-456 1387 1399 0
-456 1387 1401 0
-456 1387 1403 0
-456 1387 1405 0
-456 1387 1407 0
-456 1387 1409 0
456 -1383 -1396 -1411 0
456 -1382 -1397 -1411 0
456 -1382 -1396 -1412 0
c ((1<=(aux199 + aux200 + SATLiteral(-20)))=tv=SATLiteral(457))
-457 -20 -1426 -1429 0
457 1429 0
457 1426 0
457 1427 0
457 20 0
457 20 1426 0
457 20 1427 0
c ((1<=(aux201 + SATLiteral(-56) + SATLiteral(-65)))=tv=SATLiteral(458))
-458 -56 -65 -1432 0
458 1432 0
458 65 0
458 56 0
458 56 65 0
c ((1<=(SATLiteral(-85) + SATLiteral(-96)))=tv=SATLiteral(459))
-459 -85 -96 0
459 96 0
459 85 0
c ((1<=(aux202 + aux203 + SATLiteral(-123)))=tv=SATLiteral(460))
-460 -123 -1435 -1438 0
460 1438 0
460 1435 0
460 1436 0
460 123 0
460 123 1435 0
460 123 1436 0
c ((1<=(aux204 + SATLiteral(-159) + SATLiteral(-169)))=tv=SATLiteral(461))
-461 -159 -169 -1441 0
461 1441 0
461 169 0
461 159 0
461 159 169 0
c (((aux205 + aux206 + SATLiteral(-20))<=1)=tv=SATLiteral(462))
-462 1448 0
-462 1444 1447 0
-462 1445 0
-462 20 1447 0
-462 20 1444 0
-462 20 1445 0
462 -1444 -1447 0
462 -20 -1445 -1447 0
462 -20 -1444 -1448 0
c (((aux207 + SATLiteral(-56) + SATLiteral(-65))<=1)=tv=SATLiteral(463))
-463 1451 0
-463 65 1450 0
-463 56 1450 0
-463 56 65 0
463 -65 -1450 0
463 -56 -1450 0
463 -56 -65 -1451 0
c (((SATLiteral(-85) + SATLiteral(-96))<=1)=tv=SATLiteral(464))
-464 85 96 0
464 -96 0
464 -85 0
c (((aux208 + aux209 + SATLiteral(-123))<=1)=tv=SATLiteral(465))
-465 1457 0
-465 1453 1456 0
-465 1454 0
-465 123 1456 0
-465 123 1453 0
-465 123 1454 0
465 -1453 -1456 0
465 -123 -1454 -1456 0
465 -123 -1453 -1457 0
c (((aux210 + SATLiteral(-159) + SATLiteral(-169))<=1)=tv=SATLiteral(466))
-466 1460 0
-466 169 1459 0
-466 159 1459 0
-466 159 169 0
466 -169 -1459 0
466 -159 -1459 0
466 -159 -169 -1460 0
c ((1<=(aux211 + SATLiteral(-150) + SATLiteral(-2)))=tv=SATLiteral(467))
-467 -150 -2 -1462 0
467 1462 0
467 2 0
467 150 0
467 150 2 0
c ((1<=(SATLiteral(-123) + SATLiteral(-20) + SATLiteral(-65)))=tv=SATLiteral(468))
-468 -123 -20 -65 0
468 65 0
468 20 0
468 123 0
468 123 20 0
c ((1<=(aux212 + SATLiteral(-169) + SATLiteral(-29)))=tv=SATLiteral(469))
-469 -169 -29 -1465 0
469 1465 0
469 29 0
469 169 0
469 169 29 0
c ((2<=(aux213 + SATLiteral(-141) + SATLiteral(-178)))=tv=SATLiteral(470))
-470 -178 -1468 0
-470 -141 -1468 0
-470 -141 -178 -1469 0
470 1469 0
470 178 1468 0
470 141 1468 0
470 141 178 0
c (((aux214 + SATLiteral(-150) + SATLiteral(-2))<=1)=tv=SATLiteral(471))
-471 1472 0
-471 2 1471 0
-471 150 1471 0
-471 150 2 0
471 -2 -1471 0
471 -150 -1471 0
471 -150 -2 -1472 0
c (((aux215 + aux216 + SATLiteral(-159))<=0)=tv=SATLiteral(472))
-472 1477 0
-472 1474 0
-472 1475 0
-472 159 0
-472 159 1474 0
-472 159 1475 0
472 -159 -1474 -1477 0
c (((SATLiteral(-123) + SATLiteral(-20) + SATLiteral(-65))<=1)=tv=SATLiteral(473))
-473 20 65 0
-473 123 65 0
-473 123 20 0
473 -20 -65 0
473 -123 -65 0
473 -123 -20 0
c (((aux217 + SATLiteral(-169) + SATLiteral(-29))<=1)=tv=SATLiteral(474))
-474 1481 0
-474 29 1480 0
-474 169 1480 0
-474 169 29 0
474 -29 -1480 0
474 -169 -1480 0
474 -169 -29 -1481 0
c (((aux218 + SATLiteral(-141) + SATLiteral(-178))<=2)=tv=SATLiteral(475))
-475 178 1484 0
-475 141 1484 0
-475 141 178 1483 0
475 -1483 0
475 -178 -1484 0
475 -141 -1484 0
475 -141 -178 0
c SATLiteral(83)
83 0
c SATLiteral(168)
168 0
c SATLiteral(84)
84 0
c SATLiteral(94)
94 0
c SATLiteral(95)
95 0
c (SATLiteral(-4) \/ SATLiteral(-442))
-4 -442 0
c (SATLiteral(-6) \/ SATLiteral(-443))
-6 -443 0
c (SATLiteral(-8) \/ SATLiteral(-444))
-8 -444 0
c (SATLiteral(-10) \/ SATLiteral(-445))
-10 -445 0
c (SATLiteral(9) \/ SATLiteral(-446))
9 -446 0
c (SATLiteral(-13) \/ SATLiteral(-442))
-13 -442 0
c (SATLiteral(-15) \/ SATLiteral(-443))
-15 -443 0
c (SATLiteral(-17) \/ SATLiteral(-444))
-17 -444 0
c (SATLiteral(-19) \/ SATLiteral(-445))
-19 -445 0
c (SATLiteral(18) \/ SATLiteral(-446))
18 -446 0
c (SATLiteral(-22) \/ SATLiteral(-442))
-22 -442 0
c (SATLiteral(-24) \/ SATLiteral(-443))
-24 -443 0
c (SATLiteral(-26) \/ SATLiteral(-444))
-26 -444 0
c (SATLiteral(-28) \/ SATLiteral(-445))
-28 -445 0
c (SATLiteral(27) \/ SATLiteral(-446))
27 -446 0
c (SATLiteral(-31) \/ SATLiteral(-442))
-31 -442 0
c (SATLiteral(-33) \/ SATLiteral(-443))
-33 -443 0
c (SATLiteral(-35) \/ SATLiteral(-444))
-35 -444 0
c (SATLiteral(-37) \/ SATLiteral(-445))
-37 -445 0
c (SATLiteral(36) \/ SATLiteral(-446))
36 -446 0
c (SATLiteral(-40) \/ SATLiteral(-442))
-40 -442 0
c (SATLiteral(-42) \/ SATLiteral(-443))
-42 -443 0
c (SATLiteral(-44) \/ SATLiteral(-444))
-44 -444 0
c (SATLiteral(45) \/ SATLiteral(-446))
45 -446 0
c (SATLiteral(-51) \/ SATLiteral(-443))
-51 -443 0
c (SATLiteral(-53) \/ SATLiteral(-444))
-53 -444 0
c (SATLiteral(-55) \/ SATLiteral(-445))
-55 -445 0
c (SATLiteral(54) \/ SATLiteral(-446))
54 -446 0
c (SATLiteral(-58) \/ SATLiteral(-442))
-58 -442 0
c (SATLiteral(-60) \/ SATLiteral(-443))
-60 -443 0
c (SATLiteral(-62) \/ SATLiteral(-444))
-62 -444 0
c (SATLiteral(-64) \/ SATLiteral(-445))
-64 -445 0
c (SATLiteral(63) \/ SATLiteral(-446))
63 -446 0
c (SATLiteral(-67) \/ SATLiteral(-442))
-67 -442 0
c (SATLiteral(-71) \/ SATLiteral(-444))
-71 -444 0
c (SATLiteral(-73) \/ SATLiteral(-445))
-73 -445 0
c (SATLiteral(72) \/ SATLiteral(-446))
72 -446 0
c (SATLiteral(-76) \/ SATLiteral(-442))
-76 -442 0
c (SATLiteral(-78) \/ SATLiteral(-443))
-78 -443 0
c (SATLiteral(81) \/ SATLiteral(-446))
81 -446 0
c (SATLiteral(-91) \/ SATLiteral(-444))
-91 -444 0
c (SATLiteral(-93) \/ SATLiteral(-445))
-93 -445 0
c (SATLiteral(92) \/ SATLiteral(-446))
92 -446 0
c (SATLiteral(-98) \/ SATLiteral(-442))
-98 -442 0
c (SATLiteral(-100) \/ SATLiteral(-443))
-100 -443 0
c (SATLiteral(103) \/ SATLiteral(-446))
103 -446 0
c (SATLiteral(-109) \/ SATLiteral(-443))
-109 -443 0
c (SATLiteral(-111) \/ SATLiteral(-444))
-111 -444 0
c (SATLiteral(-113) \/ SATLiteral(-445))
-113 -445 0
c (SATLiteral(112) \/ SATLiteral(-446))
112 -446 0
c (SATLiteral(-116) \/ SATLiteral(-442))
-116 -442 0
c (SATLiteral(-118) \/ SATLiteral(-443))
-118 -443 0
c (SATLiteral(-120) \/ SATLiteral(-444))
-120 -444 0
c (SATLiteral(-122) \/ SATLiteral(-445))
-122 -445 0
c (SATLiteral(121) \/ SATLiteral(-446))
121 -446 0
c (SATLiteral(-125) \/ SATLiteral(-442))
-125 -442 0
c (SATLiteral(-129) \/ SATLiteral(-444))
-129 -444 0
c (SATLiteral(-131) \/ SATLiteral(-445))
-131 -445 0
c (SATLiteral(-134) \/ SATLiteral(-442))
-134 -442 0
c (SATLiteral(-136) \/ SATLiteral(-443))
-136 -443 0
c (SATLiteral(-140) \/ SATLiteral(-445))
-140 -445 0
c (SATLiteral(139) \/ SATLiteral(-446))
139 -446 0
c (SATLiteral(-143) \/ SATLiteral(-442))
-143 -442 0
c (SATLiteral(-145) \/ SATLiteral(-443))
-145 -443 0
c (SATLiteral(-147) \/ SATLiteral(-444))
-147 -444 0
c (SATLiteral(-149) \/ SATLiteral(-445))
-149 -445 0
c (SATLiteral(148) \/ SATLiteral(-446))
148 -446 0
c (SATLiteral(-152) \/ SATLiteral(-442))
-152 -442 0
c (SATLiteral(-154) \/ SATLiteral(-443))
-154 -443 0
c (SATLiteral(-156) \/ SATLiteral(-444))
-156 -444 0
c (SATLiteral(-158) \/ SATLiteral(-445))
-158 -445 0
c (SATLiteral(157) \/ SATLiteral(-446))
157 -446 0
c (SATLiteral(-161) \/ SATLiteral(-442))
-161 -442 0
c (SATLiteral(-163) \/ SATLiteral(-443))
-163 -443 0
c (SATLiteral(-165) \/ SATLiteral(-444))
-165 -444 0
c (SATLiteral(-167) \/ SATLiteral(-445))
-167 -445 0
c (SATLiteral(-171) \/ SATLiteral(-442))
-171 -442 0
c (SATLiteral(-173) \/ SATLiteral(-443))
-173 -443 0
c (SATLiteral(-175) \/ SATLiteral(-444))
-175 -444 0
c (SATLiteral(-177) \/ SATLiteral(-445))
-177 -445 0
c (SATLiteral(-180) \/ SATLiteral(-442))
-180 -442 0
c (SATLiteral(-182) \/ SATLiteral(-443))
-182 -443 0
c (SATLiteral(-184) \/ SATLiteral(-444))
-184 -444 0
c (SATLiteral(-186) \/ SATLiteral(-445))
-186 -445 0
c (SATLiteral(185) \/ SATLiteral(-446))
185 -446 0
c (SATLiteral(432) -> SATLiteral(447))
-432 447 0
c (SATLiteral(433) -> SATLiteral(448))
-433 448 0
c (SATLiteral(434) -> SATLiteral(449))
-434 449 0
c (SATLiteral(435) -> SATLiteral(450))
-435 450 0
c (SATLiteral(436) -> SATLiteral(451))
-436 451 0
c (SATLiteral(437) -> SATLiteral(452))
-437 452 0
c (SATLiteral(438) -> SATLiteral(453))
-438 453 0
c (SATLiteral(439) -> SATLiteral(454))
-439 454 0
c (SATLiteral(440) -> SATLiteral(455))
-440 455 0
c (SATLiteral(441) -> SATLiteral(456))
-441 456 0
c (SATLiteral(47) \/ SATLiteral(2) \/ SATLiteral(-194))
47 2 -194 0
c (SATLiteral(56) \/ SATLiteral(2) \/ SATLiteral(-195))
56 2 -195 0
c (SATLiteral(-199) \/ SATLiteral(2) \/ SATLiteral(11))
-199 2 11 0
c (SATLiteral(47) \/ SATLiteral(11) \/ SATLiteral(-202))
47 11 -202 0
c (SATLiteral(56) \/ SATLiteral(11) \/ SATLiteral(-203))
56 11 -203 0
c (SATLiteral(65) \/ SATLiteral(11) \/ SATLiteral(-204))
65 11 -204 0
c (SATLiteral(-208) \/ SATLiteral(11) \/ SATLiteral(20))
-208 11 20 0
c (SATLiteral(56) \/ SATLiteral(-211) \/ SATLiteral(20))
56 -211 20 0
c (SATLiteral(65) \/ SATLiteral(20) \/ SATLiteral(-212))
65 20 -212 0
c (SATLiteral(74) \/ SATLiteral(20) \/ SATLiteral(-213))
74 20 -213 0
c (SATLiteral(-217) \/ SATLiteral(20) \/ SATLiteral(29))
-217 20 29 0
c (SATLiteral(65) \/ SATLiteral(-220) \/ SATLiteral(29))
65 -220 29 0
c (SATLiteral(74) \/ SATLiteral(-221) \/ SATLiteral(29))
74 -221 29 0
c (SATLiteral(-226) \/ SATLiteral(29) \/ SATLiteral(38))
-226 29 38 0
c (SATLiteral(74) \/ SATLiteral(-229) \/ SATLiteral(38))
74 -229 38 0
c (SATLiteral(47) \/ SATLiteral(85) \/ SATLiteral(-240))
47 85 -240 0
c (SATLiteral(47) \/ SATLiteral(56) \/ SATLiteral(-244))
47 56 -244 0
c (SATLiteral(56) \/ SATLiteral(85) \/ SATLiteral(-248))
56 85 -248 0
c (SATLiteral(56) \/ SATLiteral(65) \/ SATLiteral(-253))
56 65 -253 0
c (SATLiteral(65) \/ SATLiteral(85) \/ SATLiteral(-256))
65 85 -256 0
c (SATLiteral(-262) \/ SATLiteral(65) \/ SATLiteral(74))
-262 65 74 0
c (SATLiteral(74) \/ SATLiteral(-267) \/ SATLiteral(96))
74 -267 96 0
c (SATLiteral(85) \/ SATLiteral(-292) \/ SATLiteral(105))
85 -292 105 0
c (SATLiteral(-293) \/ SATLiteral(85) \/ SATLiteral(114))
-293 85 114 0
c (SATLiteral(-294) \/ SATLiteral(85) \/ SATLiteral(123))
-294 85 123 0
c (SATLiteral(-319) \/ SATLiteral(96) \/ SATLiteral(132))
-319 96 132 0
c (SATLiteral(-320) \/ SATLiteral(96) \/ SATLiteral(141))
-320 96 141 0
c (SATLiteral(-329) \/ SATLiteral(150) \/ SATLiteral(105))
-329 150 105 0
c (SATLiteral(-330) \/ SATLiteral(159) \/ SATLiteral(105))
-330 159 105 0
c (SATLiteral(-334) \/ SATLiteral(105) \/ SATLiteral(114))
-334 105 114 0
c (SATLiteral(150) \/ SATLiteral(-337) \/ SATLiteral(114))
150 -337 114 0
c (SATLiteral(-338) \/ SATLiteral(159) \/ SATLiteral(114))
-338 159 114 0
c (SATLiteral(114) \/ SATLiteral(123) \/ SATLiteral(-343))
114 123 -343 0
c (SATLiteral(159) \/ SATLiteral(-346) \/ SATLiteral(123))
159 -346 123 0
c (SATLiteral(-348) \/ SATLiteral(169) \/ SATLiteral(123))
-348 169 123 0
c (SATLiteral(-352) \/ SATLiteral(123) \/ SATLiteral(132))
-352 123 132 0
c (SATLiteral(-356) \/ SATLiteral(169) \/ SATLiteral(132))
-356 169 132 0
c (SATLiteral(-357) \/ SATLiteral(178) \/ SATLiteral(132))
-357 178 132 0
c (SATLiteral(-361) \/ SATLiteral(132) \/ SATLiteral(141))
-361 132 141 0
c (SATLiteral(-364) \/ SATLiteral(169) \/ SATLiteral(141))
-364 169 141 0
c (SATLiteral(178) \/ SATLiteral(141) \/ SATLiteral(-365))
178 141 -365 0
c (SATLiteral(-379) \/ SATLiteral(150) \/ SATLiteral(159))
-379 150 159 0
c (SATLiteral(169) \/ SATLiteral(178) \/ SATLiteral(-406))
169 178 -406 0
c (SATLiteral(412) -> SATLiteral(457))
-412 457 0
c (SATLiteral(413) -> SATLiteral(458))
-413 458 0
c (SATLiteral(414) -> SATLiteral(459))
-414 459 0
c (SATLiteral(415) -> SATLiteral(460))
-415 460 0
c (SATLiteral(416) -> SATLiteral(461))
-416 461 0
c (SATLiteral(417) -> SATLiteral(462))
-417 462 0
c (SATLiteral(418) -> SATLiteral(463))
-418 463 0
c (SATLiteral(419) -> SATLiteral(464))
-419 464 0
c (SATLiteral(420) -> SATLiteral(465))
-420 465 0
c (SATLiteral(421) -> SATLiteral(466))
-421 466 0
c (SATLiteral(422) -> SATLiteral(467))
-422 467 0
c (SATLiteral(424) -> SATLiteral(468))
-424 468 0
c (SATLiteral(425) -> SATLiteral(469))
-425 469 0
c (SATLiteral(426) -> SATLiteral(470))
-426 470 0
c (SATLiteral(427) -> SATLiteral(471))
-427 471 0
c (SATLiteral(428) -> SATLiteral(472))
-428 472 0
c (SATLiteral(429) -> SATLiteral(473))
-429 473 0
c (SATLiteral(430) -> SATLiteral(474))
-430 474 0
c (SATLiteral(431) -> SATLiteral(475))
-431 475 0
c (( - aux201 + SATLiteral(-47) + SATLiteral(-74))<=0)
74 -1432 0
47 -1432 0
47 74 -1433 0
c (0<=( - aux201 + SATLiteral(-47) + SATLiteral(-74)))
-74 1433 0
-47 1433 0
-47 -74 1432 0
c (( - aux204 + SATLiteral(-150) + SATLiteral(-178))<=0)
178 -1441 0
150 -1441 0
150 178 -1442 0
c (0<=( - aux204 + SATLiteral(-150) + SATLiteral(-178)))
-178 1442 0
-150 1442 0
-150 -178 1441 0
c (( - aux207 + SATLiteral(-47) + SATLiteral(-74))<=0)
74 -1450 0
47 -1450 0
47 74 -1451 0
c (0<=( - aux207 + SATLiteral(-47) + SATLiteral(-74)))
-74 1451 0
-47 1451 0
-47 -74 1450 0
c (( - aux210 + SATLiteral(-150) + SATLiteral(-178))<=0)
178 -1459 0
150 -1459 0
150 178 -1460 0
c (0<=( - aux210 + SATLiteral(-150) + SATLiteral(-178)))
-178 1460 0
-150 1460 0
-150 -178 1459 0
c (( - aux211 + SATLiteral(-105) + SATLiteral(-47))<=0)
47 -1462 0
105 -1462 0
105 47 -1463 0
c (0<=( - aux211 + SATLiteral(-105) + SATLiteral(-47)))
-47 1463 0
-105 1463 0
-105 -47 1462 0
c (( - aux212 + SATLiteral(-132) + SATLiteral(-74))<=0)
74 -1465 0
132 -1465 0
132 74 -1466 0
c (0<=( - aux212 + SATLiteral(-132) + SATLiteral(-74)))
-74 1466 0
-132 1466 0
-132 -74 1465 0
c ((SATLiteral(-96) - aux213 + SATLiteral(-38))<=0)
38 -1468 0
96 -1468 0
96 38 -1469 0
c (0<=(SATLiteral(-96) - aux213 + SATLiteral(-38)))
-38 1469 0
-96 1469 0
-96 -38 1468 0
c (( - aux214 + SATLiteral(-105) + SATLiteral(-47))<=0)
47 -1471 0
105 -1471 0
105 47 -1472 0
c (0<=( - aux214 + SATLiteral(-105) + SATLiteral(-47)))
-47 1472 0
-105 1472 0
-105 -47 1471 0
c (( - aux217 + SATLiteral(-132) + SATLiteral(-74))<=0)
74 -1480 0
132 -1480 0
132 74 -1481 0
c (0<=( - aux217 + SATLiteral(-132) + SATLiteral(-74)))
-74 1481 0
-132 1481 0
-132 -74 1480 0
c ((SATLiteral(-96) - aux218 + SATLiteral(-38))<=0)
38 -1483 0
96 -1483 0
96 38 -1484 0
c (0<=(SATLiteral(-96) - aux218 + SATLiteral(-38)))
-38 1484 0
-96 1484 0
-96 -38 1483 0
c ((SATLiteral(107) - aux29 + SATLiteral(40))<=0)
-40 -476 0
-107 -476 0
-107 -40 -477 0
c (0<=(SATLiteral(107) - aux29 + SATLiteral(40)))
40 477 0
107 477 0
107 40 476 0
c ((SATLiteral(116) - aux30 + SATLiteral(31))<=0)
-31 -479 0
-116 -479 0
-116 -31 -480 0
c (0<=(SATLiteral(116) - aux30 + SATLiteral(31)))
31 480 0
116 480 0
116 31 479 0
c ((SATLiteral(134) - aux31 + SATLiteral(22))<=0)
-22 -482 0
-134 -482 0
-134 -22 -483 0
c (0<=(SATLiteral(134) - aux31 + SATLiteral(22)))
22 483 0
134 483 0
134 22 482 0
c ((SATLiteral(67) - aux32 + SATLiteral(4))<=0)
-4 -485 0
-67 -485 0
-67 -4 -486 0
c (0<=(SATLiteral(67) - aux32 + SATLiteral(4)))
4 486 0
67 486 0
67 4 485 0
c ((SATLiteral(76) - aux33 + SATLiteral(13))<=0)
-13 -488 0
-76 -488 0
-76 -13 -489 0
c (0<=(SATLiteral(76) - aux33 + SATLiteral(13)))
13 489 0
76 489 0
76 13 488 0
c ((SATLiteral(143) - aux34 + SATLiteral(180))<=0)
-180 -491 0
-143 -491 0
-143 -180 -492 0
c (0<=(SATLiteral(143) - aux34 + SATLiteral(180)))
180 492 0
143 492 0
143 180 491 0
c ((SATLiteral(87) - aux35 + SATLiteral(171))<=0)
-171 -494 0
-87 -494 0
-87 -171 -495 0
c (0<=(SATLiteral(87) - aux35 + SATLiteral(171)))
171 495 0
87 495 0
87 171 494 0
c ((SATLiteral(98) - aux36 + SATLiteral(161))<=0)
-161 -497 0
-98 -497 0
-98 -161 -498 0
c (0<=(SATLiteral(98) - aux36 + SATLiteral(161)))
161 498 0
98 498 0
98 161 497 0
c ((SATLiteral(125) - aux37 + SATLiteral(152))<=0)
-152 -500 0
-125 -500 0
-125 -152 -501 0
c (0<=(SATLiteral(125) - aux37 + SATLiteral(152)))
152 501 0
125 501 0
125 152 500 0
c ((SATLiteral(49) + SATLiteral(58) - aux38)<=0)
-58 -503 0
-49 -503 0
-49 -58 -504 0
c (0<=(SATLiteral(49) + SATLiteral(58) - aux38))
58 504 0
49 504 0
49 58 503 0
c ((aux32 + aux38 - aux39)<=0)
503 -506 0
504 -507 0
485 -506 0
485 503 -507 0
485 504 -509 0
486 -507 0
486 503 -509 0
486 504 -511 0
c (0<=(aux32 + aux38 - aux39))
-504 511 0
-503 509 0
-486 511 0
-486 -504 509 0
-486 -503 507 0
-485 509 0
-485 -504 507 0
-485 -503 506 0
c ((aux31 + aux35 - aux40)<=0)
494 -513 0
495 -514 0
482 -513 0
482 494 -514 0
482 495 -516 0
483 -514 0
483 494 -516 0
483 495 -518 0
c (0<=(aux31 + aux35 - aux40))
-495 518 0
-494 516 0
-483 518 0
-483 -495 516 0
-483 -494 514 0
-482 516 0
-482 -495 514 0
-482 -494 513 0
c ((aux29 + aux30 - aux41)<=0)
479 -520 0
480 -521 0
476 -520 0
476 479 -521 0
476 480 -523 0
477 -521 0
477 479 -523 0
477 480 -525 0
c (0<=(aux29 + aux30 - aux41))
-480 525 0
-479 523 0
-477 525 0
-477 -480 523 0
-477 -479 521 0
-476 523 0
-476 -480 521 0
-476 -479 520 0
c ((aux33 + aux34 - aux42)<=0)
491 -527 0
492 -528 0
488 -527 0
488 491 -528 0
488 492 -530 0
489 -528 0
489 491 -530 0
489 492 -532 0
c (0<=(aux33 + aux34 - aux42))
-492 532 0
-491 530 0
-489 532 0
-489 -492 530 0
-489 -491 528 0
-488 530 0
-488 -492 528 0
-488 -491 527 0
c ((aux36 + aux37 - aux43)<=0)
500 -534 0
501 -535 0
497 -534 0
497 500 -535 0
497 501 -537 0
498 -535 0
498 500 -537 0
498 501 -539 0
c (0<=(aux36 + aux37 - aux43))
-501 539 0
-500 537 0
-498 539 0
-498 -501 537 0
-498 -500 535 0
-497 537 0
-497 -501 535 0
-497 -500 534 0
c ((aux40 + aux43 - aux44)<=0)
534 -541 0
535 -542 0
537 -544 0
539 -546 0
513 -541 0
513 534 -542 0
513 535 -544 0
513 537 -546 0
513 539 -548 0
514 -542 0
514 534 -544 0
514 535 -546 0
514 537 -548 0
514 539 -550 0
516 -544 0
516 534 -546 0
516 535 -548 0
516 537 -550 0
516 539 -552 0
518 -546 0
518 534 -548 0
518 535 -550 0
518 537 -552 0
518 539 -554 0
c (0<=(aux40 + aux43 - aux44))
-539 554 0
-537 552 0
-535 550 0
-534 548 0
-518 554 0
-518 -539 552 0
-518 -537 550 0
-518 -535 548 0
-518 -534 546 0
-516 552 0
-516 -539 550 0
-516 -537 548 0
-516 -535 546 0
-516 -534 544 0
-514 550 0
-514 -539 548 0
-514 -537 546 0
-514 -535 544 0
-514 -534 542 0
-513 548 0
-513 -539 546 0
-513 -537 544 0
-513 -535 542 0
-513 -534 541 0
c ((aux39 + aux41 - aux45)<=0)
520 -556 0
521 -557 0
523 -559 0
525 -561 0
506 -556 0
506 520 -557 0
506 521 -559 0
506 523 -561 0
506 525 -563 0
507 -557 0
507 520 -559 0
507 521 -561 0
507 523 -563 0
507 525 -565 0
509 -559 0
509 520 -561 0
509 521 -563 0
509 523 -565 0
509 525 -567 0
511 -561 0
511 520 -563 0
511 521 -565 0
511 523 -567 0
511 525 -569 0
c (0<=(aux39 + aux41 - aux45))
-525 569 0
-523 567 0
-521 565 0
-520 563 0
-511 569 0
-511 -525 567 0
-511 -523 565 0
-511 -521 563 0
-511 -520 561 0
-509 567 0
-509 -525 565 0
-509 -523 563 0
-509 -521 561 0
-509 -520 559 0
-507 565 0
-507 -525 563 0
-507 -523 561 0
-507 -521 559 0
-507 -520 557 0
-506 563 0
-506 -525 561 0
-506 -523 559 0
-506 -521 557 0
-506 -520 556 0
c ((SATLiteral(109) - aux46 + SATLiteral(42))<=0)
-42 -571 0
-109 -571 0
-109 -42 -572 0
c (0<=(SATLiteral(109) - aux46 + SATLiteral(42)))
42 572 0
109 572 0
109 42 571 0
c ((SATLiteral(118) - aux47 + SATLiteral(33))<=0)
-33 -574 0
-118 -574 0
-118 -33 -575 0
c (0<=(SATLiteral(118) - aux47 + SATLiteral(33)))
33 575 0
118 575 0
118 33 574 0
c ((SATLiteral(136) - aux48 + SATLiteral(24))<=0)
-24 -577 0
-136 -577 0
-136 -24 -578 0
c (0<=(SATLiteral(136) - aux48 + SATLiteral(24)))
24 578 0
136 578 0
136 24 577 0
c ((SATLiteral(69) - aux49 + SATLiteral(6))<=0)
-6 -580 0
-69 -580 0
-69 -6 -581 0
c (0<=(SATLiteral(69) - aux49 + SATLiteral(6)))
6 581 0
69 581 0
69 6 580 0
c ((SATLiteral(78) - aux50 + SATLiteral(15))<=0)
-15 -583 0
-78 -583 0
-78 -15 -584 0
c (0<=(SATLiteral(78) - aux50 + SATLiteral(15)))
15 584 0
78 584 0
78 15 583 0
c ((SATLiteral(145) - aux51 + SATLiteral(182))<=0)
-182 -586 0
-145 -586 0
-145 -182 -587 0
c (0<=(SATLiteral(145) - aux51 + SATLiteral(182)))
182 587 0
145 587 0
145 182 586 0
c ((SATLiteral(89) - aux52 + SATLiteral(173))<=0)
-173 -589 0
-89 -589 0
-89 -173 -590 0
c (0<=(SATLiteral(89) - aux52 + SATLiteral(173)))
173 590 0
89 590 0
89 173 589 0
c ((SATLiteral(100) - aux53 + SATLiteral(163))<=0)
-163 -592 0
-100 -592 0
-100 -163 -593 0
c (0<=(SATLiteral(100) - aux53 + SATLiteral(163)))
163 593 0
100 593 0
100 163 592 0
c ((SATLiteral(127) - aux54 + SATLiteral(154))<=0)
-154 -595 0
-127 -595 0
-127 -154 -596 0
c (0<=(SATLiteral(127) - aux54 + SATLiteral(154)))
154 596 0
127 596 0
127 154 595 0
c ((SATLiteral(51) + SATLiteral(60) - aux55)<=0)
-60 -598 0
-51 -598 0
-51 -60 -599 0
c (0<=(SATLiteral(51) + SATLiteral(60) - aux55))
60 599 0
51 599 0
51 60 598 0
c ((aux49 + aux55 - aux56)<=0)
598 -601 0
599 -602 0
580 -601 0
580 598 -602 0
580 599 -604 0
581 -602 0
581 598 -604 0
581 599 -606 0
c (0<=(aux49 + aux55 - aux56))
-599 606 0
-598 604 0
-581 606 0
-581 -599 604 0
-581 -598 602 0
-580 604 0
-580 -599 602 0
-580 -598 601 0
c ((aux48 + aux52 - aux57)<=0)
589 -608 0
590 -609 0
577 -608 0
577 589 -609 0
577 590 -611 0
578 -609 0
578 589 -611 0
578 590 -613 0
c (0<=(aux48 + aux52 - aux57))
-590 613 0
-589 611 0
-578 613 0
-578 -590 611 0
-578 -589 609 0
-577 611 0
-577 -590 609 0
-577 -589 608 0
c ((aux46 + aux47 - aux58)<=0)
574 -615 0
575 -616 0
571 -615 0
571 574 -616 0
571 575 -618 0
572 -616 0
572 574 -618 0
572 575 -620 0
c (0<=(aux46 + aux47 - aux58))
-575 620 0
-574 618 0
-572 620 0
-572 -575 618 0
-572 -574 616 0
-571 618 0
-571 -575 616 0
-571 -574 615 0
c ((aux50 + aux51 - aux59)<=0)
586 -622 0
587 -623 0
583 -622 0
583 586 -623 0
583 587 -625 0
584 -623 0
584 586 -625 0
584 587 -627 0
c (0<=(aux50 + aux51 - aux59))
-587 627 0
-586 625 0
-584 627 0
-584 -587 625 0
-584 -586 623 0
-583 625 0
-583 -587 623 0
-583 -586 622 0
c ((aux53 + aux54 - aux60)<=0)
595 -629 0
596 -630 0
592 -629 0
592 595 -630 0
592 596 -632 0
593 -630 0
593 595 -632 0
593 596 -634 0
c (0<=(aux53 + aux54 - aux60))
-596 634 0
-595 632 0
-593 634 0
-593 -596 632 0
-593 -595 630 0
-592 632 0
-592 -596 630 0
-592 -595 629 0
c ((aux57 + aux60 - aux61)<=0)
629 -636 0
630 -637 0
632 -639 0
634 -641 0
608 -636 0
608 629 -637 0
608 630 -639 0
608 632 -641 0
608 634 -643 0
609 -637 0
609 629 -639 0
609 630 -641 0
609 632 -643 0
609 634 -645 0
611 -639 0
611 629 -641 0
611 630 -643 0
611 632 -645 0
611 634 -647 0
613 -641 0
613 629 -643 0
613 630 -645 0
613 632 -647 0
613 634 -649 0
c (0<=(aux57 + aux60 - aux61))
-634 649 0
-632 647 0
-630 645 0
-629 643 0
-613 649 0
-613 -634 647 0
-613 -632 645 0
-613 -630 643 0
-613 -629 641 0
-611 647 0
-611 -634 645 0
-611 -632 643 0
-611 -630 641 0
-611 -629 639 0
-609 645 0
-609 -634 643 0
-609 -632 641 0
-609 -630 639 0
-609 -629 637 0
-608 643 0
-608 -634 641 0
-608 -632 639 0
-608 -630 637 0
-608 -629 636 0
c ((aux56 + aux58 - aux62)<=0)
615 -651 0
616 -652 0
618 -654 0
620 -656 0
601 -651 0
601 615 -652 0
601 616 -654 0
601 618 -656 0
601 620 -658 0
602 -652 0
602 615 -654 0
602 616 -656 0
602 618 -658 0
602 620 -660 0
604 -654 0
604 615 -656 0
604 616 -658 0
604 618 -660 0
604 620 -662 0
606 -656 0
606 615 -658 0
606 616 -660 0
606 618 -662 0
606 620 -664 0
c (0<=(aux56 + aux58 - aux62))
-620 664 0
-618 662 0
-616 660 0
-615 658 0
-606 664 0
-606 -620 662 0
-606 -618 660 0
-606 -616 658 0
-606 -615 656 0
-604 662 0
-604 -620 660 0
-604 -618 658 0
-604 -616 656 0
-604 -615 654 0
-602 660 0
-602 -620 658 0
-602 -618 656 0
-602 -616 654 0
-602 -615 652 0
-601 658 0
-601 -620 656 0
-601 -618 654 0
-601 -616 652 0
-601 -615 651 0
c ((SATLiteral(111) - aux63 + SATLiteral(44))<=0)
-44 -666 0
-111 -666 0
-111 -44 -667 0
c (0<=(SATLiteral(111) - aux63 + SATLiteral(44)))
44 667 0
111 667 0
111 44 666 0
c ((SATLiteral(120) - aux64 + SATLiteral(35))<=0)
-35 -669 0
-120 -669 0
-120 -35 -670 0
c (0<=(SATLiteral(120) - aux64 + SATLiteral(35)))
35 670 0
120 670 0
120 35 669 0
c ((SATLiteral(138) - aux65 + SATLiteral(26))<=0)
-26 -672 0
-138 -672 0
-138 -26 -673 0
c (0<=(SATLiteral(138) - aux65 + SATLiteral(26)))
26 673 0
138 673 0
138 26 672 0
c ((SATLiteral(71) - aux66 + SATLiteral(8))<=0)
-8 -675 0
-71 -675 0
-71 -8 -676 0
c (0<=(SATLiteral(71) - aux66 + SATLiteral(8)))
8 676 0
71 676 0
71 8 675 0
c ((SATLiteral(80) - aux67 + SATLiteral(17))<=0)
-17 -678 0
-80 -678 0
-80 -17 -679 0
c (0<=(SATLiteral(80) - aux67 + SATLiteral(17)))
17 679 0
80 679 0
80 17 678 0
c ((SATLiteral(147) - aux68 + SATLiteral(184))<=0)
-184 -681 0
-147 -681 0
-147 -184 -682 0
c (0<=(SATLiteral(147) - aux68 + SATLiteral(184)))
184 682 0
147 682 0
147 184 681 0
c ((SATLiteral(91) - aux69 + SATLiteral(175))<=0)
-175 -684 0
-91 -684 0
-91 -175 -685 0
c (0<=(SATLiteral(91) - aux69 + SATLiteral(175)))
175 685 0
91 685 0
91 175 684 0
c ((SATLiteral(102) - aux70 + SATLiteral(165))<=0)
-165 -687 0
-102 -687 0
-102 -165 -688 0
c (0<=(SATLiteral(102) - aux70 + SATLiteral(165)))
165 688 0
102 688 0
102 165 687 0
c ((SATLiteral(129) - aux71 + SATLiteral(156))<=0)
-156 -690 0
-129 -690 0
-129 -156 -691 0
c (0<=(SATLiteral(129) - aux71 + SATLiteral(156)))
156 691 0
129 691 0
129 156 690 0
c ((SATLiteral(53) + SATLiteral(62) - aux72)<=0)
-62 -693 0
-53 -693 0
-53 -62 -694 0
c (0<=(SATLiteral(53) + SATLiteral(62) - aux72))
62 694 0
53 694 0
53 62 693 0
c ((aux66 + aux72 - aux73)<=0)
693 -696 0
694 -697 0
675 -696 0
675 693 -697 0
675 694 -699 0
676 -697 0
676 693 -699 0
676 694 -701 0
c (0<=(aux66 + aux72 - aux73))
-694 701 0
-693 699 0
-676 701 0
-676 -694 699 0
-676 -693 697 0
-675 699 0
-675 -694 697 0
-675 -693 696 0
c ((aux65 + aux69 - aux74)<=0)
684 -703 0
685 -704 0
672 -703 0
672 684 -704 0
672 685 -706 0
673 -704 0
673 684 -706 0
673 685 -708 0
c (0<=(aux65 + aux69 - aux74))
-685 708 0
-684 706 0
-673 708 0
-673 -685 706 0
-673 -684 704 0
-672 706 0
-672 -685 704 0
-672 -684 703 0
c ((aux63 + aux64 - aux75)<=0)
669 -710 0
670 -711 0
666 -710 0
666 669 -711 0
666 670 -713 0
667 -711 0
667 669 -713 0
667 670 -715 0
c (0<=(aux63 + aux64 - aux75))
-670 715 0
-669 713 0
-667 715 0
-667 -670 713 0
-667 -669 711 0
-666 713 0
-666 -670 711 0
-666 -669 710 0
c ((aux67 + aux68 - aux76)<=0)
681 -717 0
682 -718 0
678 -717 0
678 681 -718 0
678 682 -720 0
679 -718 0
679 681 -720 0
679 682 -722 0
c (0<=(aux67 + aux68 - aux76))
-682 722 0
-681 720 0
-679 722 0
-679 -682 720 0
-679 -681 718 0
-678 720 0
-678 -682 718 0
-678 -681 717 0
c ((aux70 + aux71 - aux77)<=0)
690 -724 0
691 -725 0
687 -724 0
687 690 -725 0
687 691 -727 0
688 -725 0
688 690 -727 0
688 691 -729 0
c (0<=(aux70 + aux71 - aux77))
-691 729 0
-690 727 0
-688 729 0
-688 -691 727 0
-688 -690 725 0
-687 727 0
-687 -691 725 0
-687 -690 724 0
c ((aux74 + aux77 - aux78)<=0)
724 -731 0
725 -732 0
727 -734 0
729 -736 0
703 -731 0
703 724 -732 0
703 725 -734 0
703 727 -736 0
703 729 -738 0
704 -732 0
704 724 -734 0
704 725 -736 0
704 727 -738 0
704 729 -740 0
706 -734 0
706 724 -736 0
706 725 -738 0
706 727 -740 0
706 729 -742 0
708 -736 0
708 724 -738 0
708 725 -740 0
708 727 -742 0
708 729 -744 0
c (0<=(aux74 + aux77 - aux78))
-729 744 0
-727 742 0
-725 740 0
-724 738 0
-708 744 0
-708 -729 742 0
-708 -727 740 0
-708 -725 738 0
-708 -724 736 0
-706 742 0
-706 -729 740 0
-706 -727 738 0
-706 -725 736 0
-706 -724 734 0
-704 740 0
-704 -729 738 0
-704 -727 736 0
-704 -725 734 0
-704 -724 732 0
-703 738 0
-703 -729 736 0
-703 -727 734 0
-703 -725 732 0
-703 -724 731 0
c ((aux73 + aux75 - aux79)<=0)
710 -746 0
711 -747 0
713 -749 0
715 -751 0
696 -746 0
696 710 -747 0
696 711 -749 0
696 713 -751 0
696 715 -753 0
697 -747 0
697 710 -749 0
697 711 -751 0
697 713 -753 0
697 715 -755 0
699 -749 0
699 710 -751 0
699 711 -753 0
699 713 -755 0
699 715 -757 0
701 -751 0
701 710 -753 0
701 711 -755 0
701 713 -757 0
701 715 -759 0
c (0<=(aux73 + aux75 - aux79))
-715 759 0
-713 757 0
-711 755 0
-710 753 0
-701 759 0
-701 -715 757 0
-701 -713 755 0
-701 -711 753 0
-701 -710 751 0
-699 757 0
-699 -715 755 0
-699 -713 753 0
-699 -711 751 0
-699 -710 749 0
-697 755 0
-697 -715 753 0
-697 -713 751 0
-697 -711 749 0
-697 -710 747 0
-696 753 0
-696 -715 751 0
-696 -713 749 0
-696 -711 747 0
-696 -710 746 0
c ((SATLiteral(113) - aux80 + SATLiteral(46))<=0)
-46 -761 0
-113 -761 0
-113 -46 -762 0
c (0<=(SATLiteral(113) - aux80 + SATLiteral(46)))
46 762 0
113 762 0
113 46 761 0
c ((SATLiteral(122) - aux81 + SATLiteral(37))<=0)
-37 -764 0
-122 -764 0
-122 -37 -765 0
c (0<=(SATLiteral(122) - aux81 + SATLiteral(37)))
37 765 0
122 765 0
122 37 764 0
c ((SATLiteral(140) - aux82 + SATLiteral(28))<=0)
-28 -767 0
-140 -767 0
-140 -28 -768 0
c (0<=(SATLiteral(140) - aux82 + SATLiteral(28)))
28 768 0
140 768 0
140 28 767 0
c ((SATLiteral(73) - aux83 + SATLiteral(10))<=0)
-10 -770 0
-73 -770 0
-73 -10 -771 0
c (0<=(SATLiteral(73) - aux83 + SATLiteral(10)))
10 771 0
73 771 0
73 10 770 0
c ((SATLiteral(82) - aux84 + SATLiteral(19))<=0)
-19 -773 0
-82 -773 0
-82 -19 -774 0
c (0<=(SATLiteral(82) - aux84 + SATLiteral(19)))
19 774 0
82 774 0
82 19 773 0
c ((SATLiteral(149) - aux85 + SATLiteral(186))<=0)
-186 -776 0
-149 -776 0
-149 -186 -777 0
c (0<=(SATLiteral(149) - aux85 + SATLiteral(186)))
186 777 0
149 777 0
149 186 776 0
c ((SATLiteral(93) - aux86 + SATLiteral(177))<=0)
-177 -779 0
-93 -779 0
-93 -177 -780 0
c (0<=(SATLiteral(93) - aux86 + SATLiteral(177)))
177 780 0
93 780 0
93 177 779 0
c ((SATLiteral(104) - aux87 + SATLiteral(167))<=0)
-167 -782 0
-104 -782 0
-104 -167 -783 0
c (0<=(SATLiteral(104) - aux87 + SATLiteral(167)))
167 783 0
104 783 0
104 167 782 0
c ((SATLiteral(131) - aux88 + SATLiteral(158))<=0)
-158 -785 0
-131 -785 0
-131 -158 -786 0
c (0<=(SATLiteral(131) - aux88 + SATLiteral(158)))
158 786 0
131 786 0
131 158 785 0
c ((SATLiteral(55) + SATLiteral(64) - aux89)<=0)
-64 -788 0
-55 -788 0
-55 -64 -789 0
c (0<=(SATLiteral(55) + SATLiteral(64) - aux89))
64 789 0
55 789 0
55 64 788 0
c ((aux83 + aux89 - aux90)<=0)
788 -791 0
789 -792 0
770 -791 0
770 788 -792 0
770 789 -794 0
771 -792 0
771 788 -794 0
771 789 -796 0
c (0<=(aux83 + aux89 - aux90))
-789 796 0
-788 794 0
-771 796 0
-771 -789 794 0
-771 -788 792 0
-770 794 0
-770 -789 792 0
-770 -788 791 0
c ((aux82 + aux86 - aux91)<=0)
779 -798 0
780 -799 0
767 -798 0
767 779 -799 0
767 780 -801 0
768 -799 0
768 779 -801 0
768 780 -803 0
c (0<=(aux82 + aux86 - aux91))
-780 803 0
-779 801 0
-768 803 0
-768 -780 801 0
-768 -779 799 0
-767 801 0
-767 -780 799 0
-767 -779 798 0
c ((aux80 + aux81 - aux92)<=0)
764 -805 0
765 -806 0
761 -805 0
761 764 -806 0
761 765 -808 0
762 -806 0
762 764 -808 0
762 765 -810 0
c (0<=(aux80 + aux81 - aux92))
-765 810 0
-764 808 0
-762 810 0
-762 -765 808 0
-762 -764 806 0
-761 808 0
-761 -765 806 0
-761 -764 805 0
c ((aux84 + aux85 - aux93)<=0)
776 -812 0
777 -813 0
773 -812 0
773 776 -813 0
773 777 -815 0
774 -813 0
774 776 -815 0
774 777 -817 0
c (0<=(aux84 + aux85 - aux93))
-777 817 0
-776 815 0
-774 817 0
-774 -777 815 0
-774 -776 813 0
-773 815 0
-773 -777 813 0
-773 -776 812 0
c ((aux87 + aux88 - aux94)<=0)
785 -819 0
786 -820 0
782 -819 0
782 785 -820 0
782 786 -822 0
783 -820 0
783 785 -822 0
783 786 -824 0
c (0<=(aux87 + aux88 - aux94))
-786 824 0
-785 822 0
-783 824 0
-783 -786 822 0
-783 -785 820 0
-782 822 0
-782 -786 820 0
-782 -785 819 0
c ((aux91 + aux94 - aux95)<=0)
819 -826 0
820 -827 0
822 -829 0
824 -831 0
798 -826 0
798 819 -827 0
798 820 -829 0
798 822 -831 0
798 824 -833 0
799 -827 0
799 819 -829 0
799 820 -831 0
799 822 -833 0
799 824 -835 0
801 -829 0
801 819 -831 0
801 820 -833 0
801 822 -835 0
801 824 -837 0
803 -831 0
803 819 -833 0
803 820 -835 0
803 822 -837 0
803 824 -839 0
c (0<=(aux91 + aux94 - aux95))
-824 839 0
-822 837 0
-820 835 0
-819 833 0
-803 839 0
-803 -824 837 0
-803 -822 835 0
-803 -820 833 0
-803 -819 831 0
-801 837 0
-801 -824 835 0
-801 -822 833 0
-801 -820 831 0
-801 -819 829 0
-799 835 0
-799 -824 833 0
-799 -822 831 0
-799 -820 829 0
-799 -819 827 0
-798 833 0
-798 -824 831 0
-798 -822 829 0
-798 -820 827 0
-798 -819 826 0
c ((aux90 + aux92 - aux96)<=0)
805 -841 0
806 -842 0
808 -844 0
810 -846 0
791 -841 0
791 805 -842 0
791 806 -844 0
791 808 -846 0
791 810 -848 0
792 -842 0
792 805 -844 0
792 806 -846 0
792 808 -848 0
792 810 -850 0
794 -844 0
794 805 -846 0
794 806 -848 0
794 808 -850 0
794 810 -852 0
796 -846 0
796 805 -848 0
796 806 -850 0
796 808 -852 0
796 810 -854 0
c (0<=(aux90 + aux92 - aux96))
-810 854 0
-808 852 0
-806 850 0
-805 848 0
-796 854 0
-796 -810 852 0
-796 -808 850 0
-796 -806 848 0
-796 -805 846 0
-794 852 0
-794 -810 850 0
-794 -808 848 0
-794 -806 846 0
-794 -805 844 0
-792 850 0
-792 -810 848 0
-792 -808 846 0
-792 -806 844 0
-792 -805 842 0
-791 848 0
-791 -810 846 0
-791 -808 844 0
-791 -806 842 0
-791 -805 841 0
c ((SATLiteral(-112) - aux97 + SATLiteral(-45))<=0)
45 -856 0
112 -856 0
112 45 -857 0
c (0<=(SATLiteral(-112) - aux97 + SATLiteral(-45)))
-45 857 0
-112 857 0
-112 -45 856 0
c ((SATLiteral(-121) - aux98 + SATLiteral(-36))<=0)
36 -859 0
121 -859 0
121 36 -860 0
c (0<=(SATLiteral(-121) - aux98 + SATLiteral(-36)))
-36 860 0
-121 860 0
-121 -36 859 0
c ((SATLiteral(-139) - aux99 + SATLiteral(-27))<=0)
27 -862 0
139 -862 0
139 27 -863 0
c (0<=(SATLiteral(-139) - aux99 + SATLiteral(-27)))
-27 863 0
-139 863 0
-139 -27 862 0
c (( - aux100 + SATLiteral(-72) + SATLiteral(-9))<=0)
9 -865 0
72 -865 0
72 9 -866 0
c (0<=( - aux100 + SATLiteral(-72) + SATLiteral(-9)))
-9 866 0
-72 866 0
-72 -9 865 0
c (( - aux101 + SATLiteral(-81) + SATLiteral(-18))<=0)
18 -868 0
81 -868 0
81 18 -869 0
c (0<=( - aux101 + SATLiteral(-81) + SATLiteral(-18)))
-18 869 0
-81 869 0
-81 -18 868 0
c ((SATLiteral(-148) - aux102 + SATLiteral(-185))<=0)
185 -871 0
148 -871 0
148 185 -872 0
c (0<=(SATLiteral(-148) - aux102 + SATLiteral(-185)))
-185 872 0
-148 872 0
-148 -185 871 0
c (( - aux103 + SATLiteral(-92) + SATLiteral(-176))<=0)
176 -874 0
92 -874 0
92 176 -875 0
c (0<=( - aux103 + SATLiteral(-92) + SATLiteral(-176)))
-176 875 0
-92 875 0
-92 -176 874 0
c (( - aux104 + SATLiteral(-103) + SATLiteral(-166))<=0)
166 -877 0
103 -877 0
103 166 -878 0
c (0<=( - aux104 + SATLiteral(-103) + SATLiteral(-166)))
-166 878 0
-103 878 0
-103 -166 877 0
c ((SATLiteral(-130) - aux105 + SATLiteral(-157))<=0)
157 -880 0
130 -880 0
130 157 -881 0
c (0<=(SATLiteral(-130) - aux105 + SATLiteral(-157)))
-157 881 0
-130 881 0
-130 -157 880 0
c (( - aux106 + SATLiteral(-54) + SATLiteral(-63))<=0)
63 -883 0
54 -883 0
54 63 -884 0
c (0<=( - aux106 + SATLiteral(-54) + SATLiteral(-63)))
-63 884 0
-54 884 0
-54 -63 883 0
c ((aux100 + aux106 - aux107)<=0)
883 -886 0
884 -887 0
865 -886 0
865 883 -887 0
865 884 -889 0
866 -887 0
866 883 -889 0
866 884 -891 0
c (0<=(aux100 + aux106 - aux107))
-884 891 0
-883 889 0
-866 891 0
-866 -884 889 0
-866 -883 887 0
-865 889 0
-865 -884 887 0
-865 -883 886 0
c ((aux103 - aux108 + aux99)<=0)
862 -893 0
863 -894 0
874 -893 0
874 862 -894 0
874 863 -896 0
875 -894 0
875 862 -896 0
875 863 -898 0
c (0<=(aux103 - aux108 + aux99))
-863 898 0
-862 896 0
-875 898 0
-875 -863 896 0
-875 -862 894 0
-874 896 0
-874 -863 894 0
-874 -862 893 0
c (( - aux109 + aux97 + aux98)<=0)
859 -900 0
860 -901 0
856 -900 0
856 859 -901 0
856 860 -903 0
857 -901 0
857 859 -903 0
857 860 -905 0
c (0<=( - aux109 + aux97 + aux98))
-860 905 0
-859 903 0
-857 905 0
-857 -860 903 0
-857 -859 901 0
-856 903 0
-856 -860 901 0
-856 -859 900 0
c ((aux101 + aux102 - aux110)<=0)
871 -907 0
872 -908 0
868 -907 0
868 871 -908 0
868 872 -910 0
869 -908 0
869 871 -910 0
869 872 -912 0
c (0<=(aux101 + aux102 - aux110))
-872 912 0
-871 910 0
-869 912 0
-869 -872 910 0
-869 -871 908 0
-868 910 0
-868 -872 908 0
-868 -871 907 0
c ((aux104 + aux105 - aux111)<=0)
880 -914 0
881 -915 0
877 -914 0
877 880 -915 0
877 881 -917 0
878 -915 0
878 880 -917 0
878 881 -919 0
c (0<=(aux104 + aux105 - aux111))
-881 919 0
-880 917 0
-878 919 0
-878 -881 917 0
-878 -880 915 0
-877 917 0
-877 -881 915 0
-877 -880 914 0
c ((aux108 + aux111 - aux112)<=0)
914 -921 0
915 -922 0
917 -924 0
919 -926 0
893 -921 0
893 914 -922 0
893 915 -924 0
893 917 -926 0
893 919 -928 0
894 -922 0
894 914 -924 0
894 915 -926 0
894 917 -928 0
894 919 -930 0
896 -924 0
896 914 -926 0
896 915 -928 0
896 917 -930 0
896 919 -932 0
898 -926 0
898 914 -928 0
898 915 -930 0
898 917 -932 0
898 919 -934 0
c (0<=(aux108 + aux111 - aux112))
-919 934 0
-917 932 0
-915 930 0
-914 928 0
-898 934 0
-898 -919 932 0
-898 -917 930 0
-898 -915 928 0
-898 -914 926 0
-896 932 0
-896 -919 930 0
-896 -917 928 0
-896 -915 926 0
-896 -914 924 0
-894 930 0
-894 -919 928 0
-894 -917 926 0
-894 -915 924 0
-894 -914 922 0
-893 928 0
-893 -919 926 0
-893 -917 924 0
-893 -915 922 0
-893 -914 921 0
c ((aux107 + aux109 - aux113)<=0)
900 -936 0
901 -937 0
903 -939 0
905 -941 0
886 -936 0
886 900 -937 0
886 901 -939 0
886 903 -941 0
886 905 -943 0
887 -937 0
887 900 -939 0
887 901 -941 0
887 903 -943 0
887 905 -945 0
889 -939 0
889 900 -941 0
889 901 -943 0
889 903 -945 0
889 905 -947 0
891 -941 0
891 900 -943 0
891 901 -945 0
891 903 -947 0
891 905 -949 0
c (0<=(aux107 + aux109 - aux113))
-905 949 0
-903 947 0
-901 945 0
-900 943 0
-891 949 0
-891 -905 947 0
-891 -903 945 0
-891 -901 943 0
-891 -900 941 0
-889 947 0
-889 -905 945 0
-889 -903 943 0
-889 -901 941 0
-889 -900 939 0
-887 945 0
-887 -905 943 0
-887 -903 941 0
-887 -901 939 0
-887 -900 937 0
-886 943 0
-886 -905 941 0
-886 -903 939 0
-886 -901 937 0
-886 -900 936 0
c ((SATLiteral(107) - aux114 + SATLiteral(40))<=0)
-40 -951 0
-107 -951 0
-107 -40 -952 0
c (0<=(SATLiteral(107) - aux114 + SATLiteral(40)))
40 952 0
107 952 0
107 40 951 0
c ((SATLiteral(116) - aux115 + SATLiteral(31))<=0)
-31 -954 0
-116 -954 0
-116 -31 -955 0
c (0<=(SATLiteral(116) - aux115 + SATLiteral(31)))
31 955 0
116 955 0
116 31 954 0
c ((SATLiteral(134) - aux116 + SATLiteral(22))<=0)
-22 -957 0
-134 -957 0
-134 -22 -958 0
c (0<=(SATLiteral(134) - aux116 + SATLiteral(22)))
22 958 0
134 958 0
134 22 957 0
c (( - aux117 + SATLiteral(67) + SATLiteral(4))<=0)
-4 -960 0
-67 -960 0
-67 -4 -961 0
c (0<=( - aux117 + SATLiteral(67) + SATLiteral(4)))
4 961 0
67 961 0
67 4 960 0
c (( - aux118 + SATLiteral(76) + SATLiteral(13))<=0)
-13 -963 0
-76 -963 0
-76 -13 -964 0
c (0<=( - aux118 + SATLiteral(76) + SATLiteral(13)))
13 964 0
76 964 0
76 13 963 0
c ((SATLiteral(143) - aux119 + SATLiteral(180))<=0)
-180 -966 0
-143 -966 0
-143 -180 -967 0
c (0<=(SATLiteral(143) - aux119 + SATLiteral(180)))
180 967 0
143 967 0
143 180 966 0
c (( - aux120 + SATLiteral(87) + SATLiteral(171))<=0)
-171 -969 0
-87 -969 0
-87 -171 -970 0
c (0<=( - aux120 + SATLiteral(87) + SATLiteral(171)))
171 970 0
87 970 0
87 171 969 0
c (( - aux121 + SATLiteral(98) + SATLiteral(161))<=0)
-161 -972 0
-98 -972 0
-98 -161 -973 0
c (0<=( - aux121 + SATLiteral(98) + SATLiteral(161)))
161 973 0
98 973 0
98 161 972 0
c ((SATLiteral(125) - aux122 + SATLiteral(152))<=0)
-152 -975 0
-125 -975 0
-125 -152 -976 0
c (0<=(SATLiteral(125) - aux122 + SATLiteral(152)))
152 976 0
125 976 0
125 152 975 0
c (( - aux123 + SATLiteral(49) + SATLiteral(58))<=0)
-58 -978 0
-49 -978 0
-49 -58 -979 0
c (0<=( - aux123 + SATLiteral(49) + SATLiteral(58)))
58 979 0
49 979 0
49 58 978 0
c ((aux117 + aux123 - aux124)<=0)
978 -981 0
979 -982 0
960 -981 0
960 978 -982 0
960 979 -984 0
961 -982 0
961 978 -984 0
961 979 -986 0
c (0<=(aux117 + aux123 - aux124))
-979 986 0
-978 984 0
-961 986 0
-961 -979 984 0
-961 -978 982 0
-960 984 0
-960 -979 982 0
-960 -978 981 0
c ((aux116 + aux120 - aux125)<=0)
969 -988 0
970 -989 0
957 -988 0
957 969 -989 0
957 970 -991 0
958 -989 0
958 969 -991 0
958 970 -993 0
c (0<=(aux116 + aux120 - aux125))
-970 993 0
-969 991 0
-958 993 0
-958 -970 991 0
-958 -969 989 0
-957 991 0
-957 -970 989 0
-957 -969 988 0
c ((aux114 + aux115 - aux126)<=0)
954 -995 0
955 -996 0
951 -995 0
951 954 -996 0
951 955 -998 0
952 -996 0
952 954 -998 0
952 955 -1000 0
c (0<=(aux114 + aux115 - aux126))
-955 1000 0
-954 998 0
-952 1000 0
-952 -955 998 0
-952 -954 996 0
-951 998 0
-951 -955 996 0
-951 -954 995 0
c ((aux118 + aux119 - aux127)<=0)
966 -1002 0
967 -1003 0
963 -1002 0
963 966 -1003 0
963 967 -1005 0
964 -1003 0
964 966 -1005 0
964 967 -1007 0
c (0<=(aux118 + aux119 - aux127))
-967 1007 0
-966 1005 0
-964 1007 0
-964 -967 1005 0
-964 -966 1003 0
-963 1005 0
-963 -967 1003 0
-963 -966 1002 0
c ((aux121 + aux122 - aux128)<=0)
975 -1009 0
976 -1010 0
972 -1009 0
972 975 -1010 0
972 976 -1012 0
973 -1010 0
973 975 -1012 0
973 976 -1014 0
c (0<=(aux121 + aux122 - aux128))
-976 1014 0
-975 1012 0
-973 1014 0
-973 -976 1012 0
-973 -975 1010 0
-972 1012 0
-972 -976 1010 0
-972 -975 1009 0
c ((aux125 + aux128 - aux129)<=0)
1009 -1016 0
1010 -1017 0
1012 -1019 0
1014 -1021 0
988 -1016 0
988 1009 -1017 0
988 1010 -1019 0
988 1012 -1021 0
988 1014 -1023 0
989 -1017 0
989 1009 -1019 0
989 1010 -1021 0
989 1012 -1023 0
989 1014 -1025 0
991 -1019 0
991 1009 -1021 0
991 1010 -1023 0
991 1012 -1025 0
991 1014 -1027 0
993 -1021 0
993 1009 -1023 0
993 1010 -1025 0
993 1012 -1027 0
993 1014 -1029 0
c (0<=(aux125 + aux128 - aux129))
-1014 1029 0
-1012 1027 0
-1010 1025 0
-1009 1023 0
-993 1029 0
-993 -1014 1027 0
-993 -1012 1025 0
-993 -1010 1023 0
-993 -1009 1021 0
-991 1027 0
-991 -1014 1025 0
-991 -1012 1023 0
-991 -1010 1021 0
-991 -1009 1019 0
-989 1025 0
-989 -1014 1023 0
-989 -1012 1021 0
-989 -1010 1019 0
-989 -1009 1017 0
-988 1023 0
-988 -1014 1021 0
-988 -1012 1019 0
-988 -1010 1017 0
-988 -1009 1016 0
c ((aux124 + aux126 - aux130)<=0)
995 -1031 0
996 -1032 0
998 -1034 0
1000 -1036 0
981 -1031 0
981 995 -1032 0
981 996 -1034 0
981 998 -1036 0
981 1000 -1038 0
982 -1032 0
982 995 -1034 0
982 996 -1036 0
982 998 -1038 0
982 1000 -1040 0
984 -1034 0
984 995 -1036 0
984 996 -1038 0
984 998 -1040 0
984 1000 -1042 0
986 -1036 0
986 995 -1038 0
986 996 -1040 0
986 998 -1042 0
986 1000 -1044 0
c (0<=(aux124 + aux126 - aux130))
-1000 1044 0
-998 1042 0
-996 1040 0
-995 1038 0
-986 1044 0
-986 -1000 1042 0
-986 -998 1040 0
-986 -996 1038 0
-986 -995 1036 0
-984 1042 0
-984 -1000 1040 0
-984 -998 1038 0
-984 -996 1036 0
-984 -995 1034 0
-982 1040 0
-982 -1000 1038 0
-982 -998 1036 0
-982 -996 1034 0
-982 -995 1032 0
-981 1038 0
-981 -1000 1036 0
-981 -998 1034 0
-981 -996 1032 0
-981 -995 1031 0
c ((SATLiteral(109) - aux131 + SATLiteral(42))<=0)
-42 -1046 0
-109 -1046 0
-109 -42 -1047 0
c (0<=(SATLiteral(109) - aux131 + SATLiteral(42)))
42 1047 0
109 1047 0
109 42 1046 0
c ((SATLiteral(118) - aux132 + SATLiteral(33))<=0)
-33 -1049 0
-118 -1049 0
-118 -33 -1050 0
c (0<=(SATLiteral(118) - aux132 + SATLiteral(33)))
33 1050 0
118 1050 0
118 33 1049 0
c ((SATLiteral(136) - aux133 + SATLiteral(24))<=0)
-24 -1052 0
-136 -1052 0
-136 -24 -1053 0
c (0<=(SATLiteral(136) - aux133 + SATLiteral(24)))
24 1053 0
136 1053 0
136 24 1052 0
c (( - aux134 + SATLiteral(69) + SATLiteral(6))<=0)
-6 -1055 0
-69 -1055 0
-69 -6 -1056 0
c (0<=( - aux134 + SATLiteral(69) + SATLiteral(6)))
6 1056 0
69 1056 0
69 6 1055 0
c (( - aux135 + SATLiteral(78) + SATLiteral(15))<=0)
-15 -1058 0
-78 -1058 0
-78 -15 -1059 0
c (0<=( - aux135 + SATLiteral(78) + SATLiteral(15)))
15 1059 0
78 1059 0
78 15 1058 0
c ((SATLiteral(145) - aux136 + SATLiteral(182))<=0)
-182 -1061 0
-145 -1061 0
-145 -182 -1062 0
c (0<=(SATLiteral(145) - aux136 + SATLiteral(182)))
182 1062 0
145 1062 0
145 182 1061 0
c (( - aux137 + SATLiteral(89) + SATLiteral(173))<=0)
-173 -1064 0
-89 -1064 0
-89 -173 -1065 0
c (0<=( - aux137 + SATLiteral(89) + SATLiteral(173)))
173 1065 0
89 1065 0
89 173 1064 0
c (( - aux138 + SATLiteral(100) + SATLiteral(163))<=0)
-163 -1067 0
-100 -1067 0
-100 -163 -1068 0
c (0<=( - aux138 + SATLiteral(100) + SATLiteral(163)))
163 1068 0
100 1068 0
100 163 1067 0
c ((SATLiteral(127) - aux139 + SATLiteral(154))<=0)
-154 -1070 0
-127 -1070 0
-127 -154 -1071 0
c (0<=(SATLiteral(127) - aux139 + SATLiteral(154)))
154 1071 0
127 1071 0
127 154 1070 0
c (( - aux140 + SATLiteral(51) + SATLiteral(60))<=0)
-60 -1073 0
-51 -1073 0
-51 -60 -1074 0
c (0<=( - aux140 + SATLiteral(51) + SATLiteral(60)))
60 1074 0
51 1074 0
51 60 1073 0
c ((aux134 + aux140 - aux141)<=0)
1073 -1076 0
1074 -1077 0
1055 -1076 0
1055 1073 -1077 0
1055 1074 -1079 0
1056 -1077 0
1056 1073 -1079 0
1056 1074 -1081 0
c (0<=(aux134 + aux140 - aux141))
-1074 1081 0
-1073 1079 0
-1056 1081 0
-1056 -1074 1079 0
-1056 -1073 1077 0
-1055 1079 0
-1055 -1074 1077 0
-1055 -1073 1076 0
c ((aux133 + aux137 - aux142)<=0)
1064 -1083 0
1065 -1084 0
1052 -1083 0
1052 1064 -1084 0
1052 1065 -1086 0
1053 -1084 0
1053 1064 -1086 0
1053 1065 -1088 0
c (0<=(aux133 + aux137 - aux142))
-1065 1088 0
-1064 1086 0
-1053 1088 0
-1053 -1065 1086 0
-1053 -1064 1084 0
-1052 1086 0
-1052 -1065 1084 0
-1052 -1064 1083 0
c ((aux131 + aux132 - aux143)<=0)
1049 -1090 0
1050 -1091 0
1046 -1090 0
1046 1049 -1091 0
1046 1050 -1093 0
1047 -1091 0
1047 1049 -1093 0
1047 1050 -1095 0
c (0<=(aux131 + aux132 - aux143))
-1050 1095 0
-1049 1093 0
-1047 1095 0
-1047 -1050 1093 0
-1047 -1049 1091 0
-1046 1093 0
-1046 -1050 1091 0
-1046 -1049 1090 0
c ((aux135 + aux136 - aux144)<=0)
1061 -1097 0
1062 -1098 0
1058 -1097 0
1058 1061 -1098 0
1058 1062 -1100 0
1059 -1098 0
1059 1061 -1100 0
1059 1062 -1102 0
c (0<=(aux135 + aux136 - aux144))
-1062 1102 0
-1061 1100 0
-1059 1102 0
-1059 -1062 1100 0
-1059 -1061 1098 0
-1058 1100 0
-1058 -1062 1098 0
-1058 -1061 1097 0
c ((aux138 + aux139 - aux145)<=0)
1070 -1104 0
1071 -1105 0
1067 -1104 0
1067 1070 -1105 0
1067 1071 -1107 0
1068 -1105 0
1068 1070 -1107 0
1068 1071 -1109 0
c (0<=(aux138 + aux139 - aux145))
-1071 1109 0
-1070 1107 0
-1068 1109 0
-1068 -1071 1107 0
-1068 -1070 1105 0
-1067 1107 0
-1067 -1071 1105 0
-1067 -1070 1104 0
c ((aux142 + aux145 - aux146)<=0)
1104 -1111 0
1105 -1112 0
1107 -1114 0
1109 -1116 0
1083 -1111 0
1083 1104 -1112 0
1083 1105 -1114 0
1083 1107 -1116 0
1083 1109 -1118 0
1084 -1112 0
1084 1104 -1114 0
1084 1105 -1116 0
1084 1107 -1118 0
1084 1109 -1120 0
1086 -1114 0
1086 1104 -1116 0
1086 1105 -1118 0
1086 1107 -1120 0
1086 1109 -1122 0
1088 -1116 0
1088 1104 -1118 0
1088 1105 -1120 0
1088 1107 -1122 0
1088 1109 -1124 0
c (0<=(aux142 + aux145 - aux146))
-1109 1124 0
-1107 1122 0
-1105 1120 0
-1104 1118 0
-1088 1124 0
-1088 -1109 1122 0
-1088 -1107 1120 0
-1088 -1105 1118 0
-1088 -1104 1116 0
-1086 1122 0
-1086 -1109 1120 0
-1086 -1107 1118 0
-1086 -1105 1116 0
-1086 -1104 1114 0
-1084 1120 0
-1084 -1109 1118 0
-1084 -1107 1116 0
-1084 -1105 1114 0
-1084 -1104 1112 0
-1083 1118 0
-1083 -1109 1116 0
-1083 -1107 1114 0
-1083 -1105 1112 0
-1083 -1104 1111 0
c ((aux141 + aux143 - aux147)<=0)
1090 -1126 0
1091 -1127 0
1093 -1129 0
1095 -1131 0
1076 -1126 0
1076 1090 -1127 0
1076 1091 -1129 0
1076 1093 -1131 0
1076 1095 -1133 0
1077 -1127 0
1077 1090 -1129 0
1077 1091 -1131 0
1077 1093 -1133 0
1077 1095 -1135 0
1079 -1129 0
1079 1090 -1131 0
1079 1091 -1133 0
1079 1093 -1135 0
1079 1095 -1137 0
1081 -1131 0
1081 1090 -1133 0
1081 1091 -1135 0
1081 1093 -1137 0
1081 1095 -1139 0
c (0<=(aux141 + aux143 - aux147))
-1095 1139 0
-1093 1137 0
-1091 1135 0
-1090 1133 0
-1081 1139 0
-1081 -1095 1137 0
-1081 -1093 1135 0
-1081 -1091 1133 0
-1081 -1090 1131 0
-1079 1137 0
-1079 -1095 1135 0
-1079 -1093 1133 0
-1079 -1091 1131 0
-1079 -1090 1129 0
-1077 1135 0
-1077 -1095 1133 0
-1077 -1093 1131 0
-1077 -1091 1129 0
-1077 -1090 1127 0
-1076 1133 0
-1076 -1095 1131 0
-1076 -1093 1129 0
-1076 -1091 1127 0
-1076 -1090 1126 0
c ((SATLiteral(111) - aux148 + SATLiteral(44))<=0)
-44 -1141 0
-111 -1141 0
-111 -44 -1142 0
c (0<=(SATLiteral(111) - aux148 + SATLiteral(44)))
44 1142 0
111 1142 0
111 44 1141 0
c ((SATLiteral(120) - aux149 + SATLiteral(35))<=0)
-35 -1144 0
-120 -1144 0
-120 -35 -1145 0
c (0<=(SATLiteral(120) - aux149 + SATLiteral(35)))
35 1145 0
120 1145 0
120 35 1144 0
c ((SATLiteral(138) - aux150 + SATLiteral(26))<=0)
-26 -1147 0
-138 -1147 0
-138 -26 -1148 0
c (0<=(SATLiteral(138) - aux150 + SATLiteral(26)))
26 1148 0
138 1148 0
138 26 1147 0
c (( - aux151 + SATLiteral(71) + SATLiteral(8))<=0)
-8 -1150 0
-71 -1150 0
-71 -8 -1151 0
c (0<=( - aux151 + SATLiteral(71) + SATLiteral(8)))
8 1151 0
71 1151 0
71 8 1150 0
c (( - aux152 + SATLiteral(80) + SATLiteral(17))<=0)
-17 -1153 0
-80 -1153 0
-80 -17 -1154 0
c (0<=( - aux152 + SATLiteral(80) + SATLiteral(17)))
17 1154 0
80 1154 0
80 17 1153 0
c ((SATLiteral(147) - aux153 + SATLiteral(184))<=0)
-184 -1156 0
-147 -1156 0
-147 -184 -1157 0
c (0<=(SATLiteral(147) - aux153 + SATLiteral(184)))
184 1157 0
147 1157 0
147 184 1156 0
c (( - aux154 + SATLiteral(91) + SATLiteral(175))<=0)
-175 -1159 0
-91 -1159 0
-91 -175 -1160 0
c (0<=( - aux154 + SATLiteral(91) + SATLiteral(175)))
175 1160 0
91 1160 0
91 175 1159 0
c (( - aux155 + SATLiteral(102) + SATLiteral(165))<=0)
-165 -1162 0
-102 -1162 0
-102 -165 -1163 0
c (0<=( - aux155 + SATLiteral(102) + SATLiteral(165)))
165 1163 0
102 1163 0
102 165 1162 0
c ((SATLiteral(129) - aux156 + SATLiteral(156))<=0)
-156 -1165 0
-129 -1165 0
-129 -156 -1166 0
c (0<=(SATLiteral(129) - aux156 + SATLiteral(156)))
156 1166 0
129 1166 0
129 156 1165 0
c (( - aux157 + SATLiteral(53) + SATLiteral(62))<=0)
-62 -1168 0
-53 -1168 0
-53 -62 -1169 0
c (0<=( - aux157 + SATLiteral(53) + SATLiteral(62)))
62 1169 0
53 1169 0
53 62 1168 0
c ((aux151 + aux157 - aux158)<=0)
1168 -1171 0
1169 -1172 0
1150 -1171 0
1150 1168 -1172 0
1150 1169 -1174 0
1151 -1172 0
1151 1168 -1174 0
1151 1169 -1176 0
c (0<=(aux151 + aux157 - aux158))
-1169 1176 0
-1168 1174 0
-1151 1176 0
-1151 -1169 1174 0
-1151 -1168 1172 0
-1150 1174 0
-1150 -1169 1172 0
-1150 -1168 1171 0
c ((aux150 + aux154 - aux159)<=0)
1159 -1178 0
1160 -1179 0
1147 -1178 0
1147 1159 -1179 0
1147 1160 -1181 0
1148 -1179 0
1148 1159 -1181 0
1148 1160 -1183 0
c (0<=(aux150 + aux154 - aux159))
-1160 1183 0
-1159 1181 0
-1148 1183 0
-1148 -1160 1181 0
-1148 -1159 1179 0
-1147 1181 0
-1147 -1160 1179 0
-1147 -1159 1178 0
c ((aux148 + aux149 - aux160)<=0)
1144 -1185 0
1145 -1186 0
1141 -1185 0
1141 1144 -1186 0
1141 1145 -1188 0
1142 -1186 0
1142 1144 -1188 0
1142 1145 -1190 0
c (0<=(aux148 + aux149 - aux160))
-1145 1190 0
-1144 1188 0
-1142 1190 0
-1142 -1145 1188 0
-1142 -1144 1186 0
-1141 1188 0
-1141 -1145 1186 0
-1141 -1144 1185 0
c ((aux152 + aux153 - aux161)<=0)
1156 -1192 0
1157 -1193 0
1153 -1192 0
1153 1156 -1193 0
1153 1157 -1195 0
1154 -1193 0
1154 1156 -1195 0
1154 1157 -1197 0
c (0<=(aux152 + aux153 - aux161))
-1157 1197 0
-1156 1195 0
-1154 1197 0
-1154 -1157 1195 0
-1154 -1156 1193 0
-1153 1195 0
-1153 -1157 1193 0
-1153 -1156 1192 0
c ((aux155 + aux156 - aux162)<=0)
1165 -1199 0
1166 -1200 0
1162 -1199 0
1162 1165 -1200 0
1162 1166 -1202 0
1163 -1200 0
1163 1165 -1202 0
1163 1166 -1204 0
c (0<=(aux155 + aux156 - aux162))
-1166 1204 0
-1165 1202 0
-1163 1204 0
-1163 -1166 1202 0
-1163 -1165 1200 0
-1162 1202 0
-1162 -1166 1200 0
-1162 -1165 1199 0
c ((aux159 + aux162 - aux163)<=0)
1199 -1206 0
1200 -1207 0
1202 -1209 0
1204 -1211 0
1178 -1206 0
1178 1199 -1207 0
1178 1200 -1209 0
1178 1202 -1211 0
1178 1204 -1213 0
1179 -1207 0
1179 1199 -1209 0
1179 1200 -1211 0
1179 1202 -1213 0
1179 1204 -1215 0
1181 -1209 0
1181 1199 -1211 0
1181 1200 -1213 0
1181 1202 -1215 0
1181 1204 -1217 0
1183 -1211 0
1183 1199 -1213 0
1183 1200 -1215 0
1183 1202 -1217 0
1183 1204 -1219 0
c (0<=(aux159 + aux162 - aux163))
-1204 1219 0
-1202 1217 0
-1200 1215 0
-1199 1213 0
-1183 1219 0
-1183 -1204 1217 0
-1183 -1202 1215 0
-1183 -1200 1213 0
-1183 -1199 1211 0
-1181 1217 0
-1181 -1204 1215 0
-1181 -1202 1213 0
-1181 -1200 1211 0
-1181 -1199 1209 0
-1179 1215 0
-1179 -1204 1213 0
-1179 -1202 1211 0
-1179 -1200 1209 0
-1179 -1199 1207 0
-1178 1213 0
-1178 -1204 1211 0
-1178 -1202 1209 0
-1178 -1200 1207 0
-1178 -1199 1206 0
c ((aux158 + aux160 - aux164)<=0)
1185 -1221 0
1186 -1222 0
1188 -1224 0
1190 -1226 0
1171 -1221 0
1171 1185 -1222 0
1171 1186 -1224 0
1171 1188 -1226 0
1171 1190 -1228 0
1172 -1222 0
1172 1185 -1224 0
1172 1186 -1226 0
1172 1188 -1228 0
1172 1190 -1230 0
1174 -1224 0
1174 1185 -1226 0
1174 1186 -1228 0
1174 1188 -1230 0
1174 1190 -1232 0
1176 -1226 0
1176 1185 -1228 0
1176 1186 -1230 0
1176 1188 -1232 0
1176 1190 -1234 0
c (0<=(aux158 + aux160 - aux164))
-1190 1234 0
-1188 1232 0
-1186 1230 0
-1185 1228 0
-1176 1234 0
-1176 -1190 1232 0
-1176 -1188 1230 0
-1176 -1186 1228 0
-1176 -1185 1226 0
-1174 1232 0
-1174 -1190 1230 0
-1174 -1188 1228 0
-1174 -1186 1226 0
-1174 -1185 1224 0
-1172 1230 0
-1172 -1190 1228 0
-1172 -1188 1226 0
-1172 -1186 1224 0
-1172 -1185 1222 0
-1171 1228 0
-1171 -1190 1226 0
-1171 -1188 1224 0
-1171 -1186 1222 0
-1171 -1185 1221 0
c ((SATLiteral(113) - aux165 + SATLiteral(46))<=0)
-46 -1236 0
-113 -1236 0
-113 -46 -1237 0
c (0<=(SATLiteral(113) - aux165 + SATLiteral(46)))
46 1237 0
113 1237 0
113 46 1236 0
c ((SATLiteral(122) - aux166 + SATLiteral(37))<=0)
-37 -1239 0
-122 -1239 0
-122 -37 -1240 0
c (0<=(SATLiteral(122) - aux166 + SATLiteral(37)))
37 1240 0
122 1240 0
122 37 1239 0
c ((SATLiteral(140) - aux167 + SATLiteral(28))<=0)
-28 -1242 0
-140 -1242 0
-140 -28 -1243 0
c (0<=(SATLiteral(140) - aux167 + SATLiteral(28)))
28 1243 0
140 1243 0
140 28 1242 0
c (( - aux168 + SATLiteral(73) + SATLiteral(10))<=0)
-10 -1245 0
-73 -1245 0
-73 -10 -1246 0
c (0<=( - aux168 + SATLiteral(73) + SATLiteral(10)))
10 1246 0
73 1246 0
73 10 1245 0
c (( - aux169 + SATLiteral(82) + SATLiteral(19))<=0)
-19 -1248 0
-82 -1248 0
-82 -19 -1249 0
c (0<=( - aux169 + SATLiteral(82) + SATLiteral(19)))
19 1249 0
82 1249 0
82 19 1248 0
c ((SATLiteral(149) - aux170 + SATLiteral(186))<=0)
-186 -1251 0
-149 -1251 0
-149 -186 -1252 0
c (0<=(SATLiteral(149) - aux170 + SATLiteral(186)))
186 1252 0
149 1252 0
149 186 1251 0
c (( - aux171 + SATLiteral(93) + SATLiteral(177))<=0)
-177 -1254 0
-93 -1254 0
-93 -177 -1255 0
c (0<=( - aux171 + SATLiteral(93) + SATLiteral(177)))
177 1255 0
93 1255 0
93 177 1254 0
c (( - aux172 + SATLiteral(104) + SATLiteral(167))<=0)
-167 -1257 0
-104 -1257 0
-104 -167 -1258 0
c (0<=( - aux172 + SATLiteral(104) + SATLiteral(167)))
167 1258 0
104 1258 0
104 167 1257 0
c ((SATLiteral(131) - aux173 + SATLiteral(158))<=0)
-158 -1260 0
-131 -1260 0
-131 -158 -1261 0
c (0<=(SATLiteral(131) - aux173 + SATLiteral(158)))
158 1261 0
131 1261 0
131 158 1260 0
c (( - aux174 + SATLiteral(55) + SATLiteral(64))<=0)
-64 -1263 0
-55 -1263 0
-55 -64 -1264 0
c (0<=( - aux174 + SATLiteral(55) + SATLiteral(64)))
64 1264 0
55 1264 0
55 64 1263 0
c ((aux168 + aux174 - aux175)<=0)
1263 -1266 0
1264 -1267 0
1245 -1266 0
1245 1263 -1267 0
1245 1264 -1269 0
1246 -1267 0
1246 1263 -1269 0
1246 1264 -1271 0
c (0<=(aux168 + aux174 - aux175))
-1264 1271 0
-1263 1269 0
-1246 1271 0
-1246 -1264 1269 0
-1246 -1263 1267 0
-1245 1269 0
-1245 -1264 1267 0
-1245 -1263 1266 0
c ((aux167 + aux171 - aux176)<=0)
1254 -1273 0
1255 -1274 0
1242 -1273 0
1242 1254 -1274 0
1242 1255 -1276 0
1243 -1274 0
1243 1254 -1276 0
1243 1255 -1278 0
c (0<=(aux167 + aux171 - aux176))
-1255 1278 0
-1254 1276 0
-1243 1278 0
-1243 -1255 1276 0
-1243 -1254 1274 0
-1242 1276 0
-1242 -1255 1274 0
-1242 -1254 1273 0
c ((aux165 + aux166 - aux177)<=0)
1239 -1280 0
1240 -1281 0
1236 -1280 0
1236 1239 -1281 0
1236 1240 -1283 0
1237 -1281 0
1237 1239 -1283 0
1237 1240 -1285 0
c (0<=(aux165 + aux166 - aux177))
-1240 1285 0
-1239 1283 0
-1237 1285 0
-1237 -1240 1283 0
-1237 -1239 1281 0
-1236 1283 0
-1236 -1240 1281 0
-1236 -1239 1280 0
c ((aux169 + aux170 - aux178)<=0)
1251 -1287 0
1252 -1288 0
1248 -1287 0
1248 1251 -1288 0
1248 1252 -1290 0
1249 -1288 0
1249 1251 -1290 0
1249 1252 -1292 0
c (0<=(aux169 + aux170 - aux178))
-1252 1292 0
-1251 1290 0
-1249 1292 0
-1249 -1252 1290 0
-1249 -1251 1288 0
-1248 1290 0
-1248 -1252 1288 0
-1248 -1251 1287 0
c ((aux172 + aux173 - aux179)<=0)
1260 -1294 0
1261 -1295 0
1257 -1294 0
1257 1260 -1295 0
1257 1261 -1297 0
1258 -1295 0
1258 1260 -1297 0
1258 1261 -1299 0
c (0<=(aux172 + aux173 - aux179))
-1261 1299 0
-1260 1297 0
-1258 1299 0
-1258 -1261 1297 0
-1258 -1260 1295 0
-1257 1297 0
-1257 -1261 1295 0
-1257 -1260 1294 0
c ((aux176 + aux179 - aux180)<=0)
1294 -1301 0
1295 -1302 0
1297 -1304 0
1299 -1306 0
1273 -1301 0
1273 1294 -1302 0
1273 1295 -1304 0
1273 1297 -1306 0
1273 1299 -1308 0
1274 -1302 0
1274 1294 -1304 0
1274 1295 -1306 0
1274 1297 -1308 0
1274 1299 -1310 0
1276 -1304 0
1276 1294 -1306 0
1276 1295 -1308 0
1276 1297 -1310 0
1276 1299 -1312 0
1278 -1306 0
1278 1294 -1308 0
1278 1295 -1310 0
1278 1297 -1312 0
1278 1299 -1314 0
c (0<=(aux176 + aux179 - aux180))
-1299 1314 0
-1297 1312 0
-1295 1310 0
-1294 1308 0
-1278 1314 0
-1278 -1299 1312 0
-1278 -1297 1310 0
-1278 -1295 1308 0
-1278 -1294 1306 0
-1276 1312 0
-1276 -1299 1310 0
-1276 -1297 1308 0
-1276 -1295 1306 0
-1276 -1294 1304 0
-1274 1310 0
-1274 -1299 1308 0
-1274 -1297 1306 0
-1274 -1295 1304 0
-1274 -1294 1302 0
-1273 1308 0
-1273 -1299 1306 0
-1273 -1297 1304 0
-1273 -1295 1302 0
-1273 -1294 1301 0
c ((aux175 + aux177 - aux181)<=0)
1280 -1316 0
1281 -1317 0
1283 -1319 0
1285 -1321 0
1266 -1316 0
1266 1280 -1317 0
1266 1281 -1319 0
1266 1283 -1321 0
1266 1285 -1323 0
1267 -1317 0
1267 1280 -1319 0
1267 1281 -1321 0
1267 1283 -1323 0
1267 1285 -1325 0
1269 -1319 0
1269 1280 -1321 0
1269 1281 -1323 0
1269 1283 -1325 0
1269 1285 -1327 0
1271 -1321 0
1271 1280 -1323 0
1271 1281 -1325 0
1271 1283 -1327 0
1271 1285 -1329 0
c (0<=(aux175 + aux177 - aux181))
-1285 1329 0
-1283 1327 0
-1281 1325 0
-1280 1323 0
-1271 1329 0
-1271 -1285 1327 0
-1271 -1283 1325 0
-1271 -1281 1323 0
-1271 -1280 1321 0
-1269 1327 0
-1269 -1285 1325 0
-1269 -1283 1323 0
-1269 -1281 1321 0
-1269 -1280 1319 0
-1267 1325 0
-1267 -1285 1323 0
-1267 -1283 1321 0
-1267 -1281 1319 0
-1267 -1280 1317 0
-1266 1323 0
-1266 -1285 1321 0
-1266 -1283 1319 0
-1266 -1281 1317 0
-1266 -1280 1316 0
c ((SATLiteral(-112) - aux182 + SATLiteral(-45))<=0)
45 -1331 0
112 -1331 0
112 45 -1332 0
c (0<=(SATLiteral(-112) - aux182 + SATLiteral(-45)))
-45 1332 0
-112 1332 0
-112 -45 1331 0
c ((SATLiteral(-121) - aux183 + SATLiteral(-36))<=0)
36 -1334 0
121 -1334 0
121 36 -1335 0
c (0<=(SATLiteral(-121) - aux183 + SATLiteral(-36)))
-36 1335 0
-121 1335 0
-121 -36 1334 0
c ((SATLiteral(-139) - aux184 + SATLiteral(-27))<=0)
27 -1337 0
139 -1337 0
139 27 -1338 0
c (0<=(SATLiteral(-139) - aux184 + SATLiteral(-27)))
-27 1338 0
-139 1338 0
-139 -27 1337 0
c (( - aux185 + SATLiteral(-72) + SATLiteral(-9))<=0)
9 -1340 0
72 -1340 0
72 9 -1341 0
c (0<=( - aux185 + SATLiteral(-72) + SATLiteral(-9)))
-9 1341 0
-72 1341 0
-72 -9 1340 0
c (( - aux186 + SATLiteral(-81) + SATLiteral(-18))<=0)
18 -1343 0
81 -1343 0
81 18 -1344 0
c (0<=( - aux186 + SATLiteral(-81) + SATLiteral(-18)))
-18 1344 0
-81 1344 0
-81 -18 1343 0
c ((SATLiteral(-148) - aux187 + SATLiteral(-185))<=0)
185 -1346 0
148 -1346 0
148 185 -1347 0
c (0<=(SATLiteral(-148) - aux187 + SATLiteral(-185)))
-185 1347 0
-148 1347 0
-148 -185 1346 0
c (( - aux188 + SATLiteral(-92) + SATLiteral(-176))<=0)
176 -1349 0
92 -1349 0
92 176 -1350 0
c (0<=( - aux188 + SATLiteral(-92) + SATLiteral(-176)))
-176 1350 0
-92 1350 0
-92 -176 1349 0
c (( - aux189 + SATLiteral(-103) + SATLiteral(-166))<=0)
166 -1352 0
103 -1352 0
103 166 -1353 0
c (0<=( - aux189 + SATLiteral(-103) + SATLiteral(-166)))
-166 1353 0
-103 1353 0
-103 -166 1352 0
c ((SATLiteral(-130) - aux190 + SATLiteral(-157))<=0)
157 -1355 0
130 -1355 0
130 157 -1356 0
c (0<=(SATLiteral(-130) - aux190 + SATLiteral(-157)))
-157 1356 0
-130 1356 0
-130 -157 1355 0
c (( - aux191 + SATLiteral(-54) + SATLiteral(-63))<=0)
63 -1358 0
54 -1358 0
54 63 -1359 0
c (0<=( - aux191 + SATLiteral(-54) + SATLiteral(-63)))
-63 1359 0
-54 1359 0
-54 -63 1358 0
c ((aux185 + aux191 - aux192)<=0)
1358 -1361 0
1359 -1362 0
1340 -1361 0
1340 1358 -1362 0
1340 1359 -1364 0
1341 -1362 0
1341 1358 -1364 0
1341 1359 -1366 0
c (0<=(aux185 + aux191 - aux192))
-1359 1366 0
-1358 1364 0
-1341 1366 0
-1341 -1359 1364 0
-1341 -1358 1362 0
-1340 1364 0
-1340 -1359 1362 0
-1340 -1358 1361 0
c ((aux184 + aux188 - aux193)<=0)
1349 -1368 0
1350 -1369 0
1337 -1368 0
1337 1349 -1369 0
1337 1350 -1371 0
1338 -1369 0
1338 1349 -1371 0
1338 1350 -1373 0
c (0<=(aux184 + aux188 - aux193))
-1350 1373 0
-1349 1371 0
-1338 1373 0
-1338 -1350 1371 0
-1338 -1349 1369 0
-1337 1371 0
-1337 -1350 1369 0
-1337 -1349 1368 0
c ((aux182 + aux183 - aux194)<=0)
1334 -1375 0
1335 -1376 0
1331 -1375 0
1331 1334 -1376 0
1331 1335 -1378 0
1332 -1376 0
1332 1334 -1378 0
1332 1335 -1380 0
c (0<=(aux182 + aux183 - aux194))
-1335 1380 0
-1334 1378 0
-1332 1380 0
-1332 -1335 1378 0
-1332 -1334 1376 0
-1331 1378 0
-1331 -1335 1376 0
-1331 -1334 1375 0
c ((aux186 + aux187 - aux195)<=0)
1346 -1382 0
1347 -1383 0
1343 -1382 0
1343 1346 -1383 0
1343 1347 -1385 0
1344 -1383 0
1344 1346 -1385 0
1344 1347 -1387 0
c (0<=(aux186 + aux187 - aux195))
-1347 1387 0
-1346 1385 0
-1344 1387 0
-1344 -1347 1385 0
-1344 -1346 1383 0
-1343 1385 0
-1343 -1347 1383 0
-1343 -1346 1382 0
c ((aux189 + aux190 - aux196)<=0)
1355 -1389 0
1356 -1390 0
1352 -1389 0
1352 1355 -1390 0
1352 1356 -1392 0
1353 -1390 0
1353 1355 -1392 0
1353 1356 -1394 0
c (0<=(aux189 + aux190 - aux196))
-1356 1394 0
-1355 1392 0
-1353 1394 0
-1353 -1356 1392 0
-1353 -1355 1390 0
-1352 1392 0
-1352 -1356 1390 0
-1352 -1355 1389 0
c ((aux193 + aux196 - aux197)<=0)
1389 -1396 0
1390 -1397 0
1392 -1399 0
1394 -1401 0
1368 -1396 0
1368 1389 -1397 0
1368 1390 -1399 0
1368 1392 -1401 0
1368 1394 -1403 0
1369 -1397 0
1369 1389 -1399 0
1369 1390 -1401 0
1369 1392 -1403 0
1369 1394 -1405 0
1371 -1399 0
1371 1389 -1401 0
1371 1390 -1403 0
1371 1392 -1405 0
1371 1394 -1407 0
1373 -1401 0
1373 1389 -1403 0
1373 1390 -1405 0
1373 1392 -1407 0
1373 1394 -1409 0
c (0<=(aux193 + aux196 - aux197))
-1394 1409 0
-1392 1407 0
-1390 1405 0
-1389 1403 0
-1373 1409 0
-1373 -1394 1407 0
-1373 -1392 1405 0
-1373 -1390 1403 0
-1373 -1389 1401 0
-1371 1407 0
-1371 -1394 1405 0
-1371 -1392 1403 0
-1371 -1390 1401 0
-1371 -1389 1399 0
-1369 1405 0
-1369 -1394 1403 0
-1369 -1392 1401 0
-1369 -1390 1399 0
-1369 -1389 1397 0
-1368 1403 0
-1368 -1394 1401 0
-1368 -1392 1399 0
-1368 -1390 1397 0
-1368 -1389 1396 0
c ((aux192 + aux194 - aux198)<=0)
1375 -1411 0
1376 -1412 0
1378 -1414 0
1380 -1416 0
1361 -1411 0
1361 1375 -1412 0
1361 1376 -1414 0
1361 1378 -1416 0
1361 1380 -1418 0
1362 -1412 0
1362 1375 -1414 0
1362 1376 -1416 0
1362 1378 -1418 0
1362 1380 -1420 0
1364 -1414 0
1364 1375 -1416 0
1364 1376 -1418 0
1364 1378 -1420 0
1364 1380 -1422 0
1366 -1416 0
1366 1375 -1418 0
1366 1376 -1420 0
1366 1378 -1422 0
1366 1380 -1424 0
c (0<=(aux192 + aux194 - aux198))
-1380 1424 0
-1378 1422 0
-1376 1420 0
-1375 1418 0
-1366 1424 0
-1366 -1380 1422 0
-1366 -1378 1420 0
-1366 -1376 1418 0
-1366 -1375 1416 0
-1364 1422 0
-1364 -1380 1420 0
-1364 -1378 1418 0
-1364 -1376 1416 0
-1364 -1375 1414 0
-1362 1420 0
-1362 -1380 1418 0
-1362 -1378 1416 0
-1362 -1376 1414 0
-1362 -1375 1412 0
-1361 1418 0
-1361 -1380 1416 0
-1361 -1378 1414 0
-1361 -1376 1412 0
-1361 -1375 1411 0
c (( - aux199 + SATLiteral(-2) + SATLiteral(-38))<=0)
38 -1426 0
2 -1426 0
2 38 -1427 0
c (0<=( - aux199 + SATLiteral(-2) + SATLiteral(-38)))
-38 1427 0
-2 1427 0
-2 -38 1426 0
c (( - aux200 + SATLiteral(-11) + SATLiteral(-29))<=0)
29 -1429 0
11 -1429 0
11 29 -1430 0
c (0<=( - aux200 + SATLiteral(-11) + SATLiteral(-29)))
-29 1430 0
-11 1430 0
-11 -29 1429 0
c (( - aux202 + SATLiteral(-105) + SATLiteral(-141))<=0)
141 -1435 0
105 -1435 0
105 141 -1436 0
c (0<=( - aux202 + SATLiteral(-105) + SATLiteral(-141)))
-141 1436 0
-105 1436 0
-105 -141 1435 0
c (( - aux203 + SATLiteral(-114) + SATLiteral(-132))<=0)
132 -1438 0
114 -1438 0
114 132 -1439 0
c (0<=( - aux203 + SATLiteral(-114) + SATLiteral(-132)))
-132 1439 0
-114 1439 0
-114 -132 1438 0
c (( - aux205 + SATLiteral(-2) + SATLiteral(-38))<=0)
38 -1444 0
2 -1444 0
2 38 -1445 0
c (0<=( - aux205 + SATLiteral(-2) + SATLiteral(-38)))
-38 1445 0
-2 1445 0
-2 -38 1444 0
c (( - aux206 + SATLiteral(-11) + SATLiteral(-29))<=0)
29 -1447 0
11 -1447 0
11 29 -1448 0
c (0<=( - aux206 + SATLiteral(-11) + SATLiteral(-29)))
-29 1448 0
-11 1448 0
-11 -29 1447 0
c (( - aux208 + SATLiteral(-105) + SATLiteral(-141))<=0)
141 -1453 0
105 -1453 0
105 141 -1454 0
c (0<=( - aux208 + SATLiteral(-105) + SATLiteral(-141)))
-141 1454 0
-105 1454 0
-105 -141 1453 0
c (( - aux209 + SATLiteral(-114) + SATLiteral(-132))<=0)
132 -1456 0
114 -1456 0
114 132 -1457 0
c (0<=( - aux209 + SATLiteral(-114) + SATLiteral(-132)))
-132 1457 0
-114 1457 0
-114 -132 1456 0
c ((SATLiteral(-85) - aux215 + SATLiteral(-56))<=0)
56 -1474 0
85 -1474 0
85 56 -1475 0
c (0<=(SATLiteral(-85) - aux215 + SATLiteral(-56)))
-56 1475 0
-85 1475 0
-85 -56 1474 0
c (( - aux216 + SATLiteral(-114) + SATLiteral(-11))<=0)
11 -1477 0
114 -1477 0
114 11 -1478 0
c (0<=( - aux216 + SATLiteral(-114) + SATLiteral(-11)))
-11 1478 0
-114 1478 0
-114 -11 1477 0
