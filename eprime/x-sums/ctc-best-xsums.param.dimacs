p cnf 5784 28103                                                                                    

1 0
c Encoding variable: field_00001_00001 with domain: int(5..9) (representing constraint )
c Direct encoding.
c Var 'field_00001_00001' direct represents '5' with '2'
c Var 'field_00001_00001' direct represents '6' with '3'
c Var 'field_00001_00001' direct represents '7' with '4'
c Var 'field_00001_00001' direct represents '8' with '5'
c Var 'field_00001_00001' direct represents '9' with '6'
2 3 4 5 6 0
-2 -3 0
-2 -4 0
-2 -5 0
-2 -6 0
-3 -4 0
-3 -5 0
-3 -6 0
-4 -5 0
-4 -6 0
-5 -6 0
c Encoding variable: field_00001_00002 with domain: int(5..7) (representing constraint )
c Direct encoding.
c Var 'field_00001_00002' direct represents '5' with '7'
c Var 'field_00001_00002' direct represents '6' with '8'
c Var 'field_00001_00002' direct represents '7' with '9'
7 8 9 0
-7 -8 0
-7 -9 0
-8 -9 0
c Encoding variable: field_00001_00003 with domain: int(5..9) (representing constraint )
c Direct encoding.
c Var 'field_00001_00003' direct represents '5' with '10'
c Var 'field_00001_00003' direct represents '6' with '11'
c Var 'field_00001_00003' direct represents '7' with '12'
c Var 'field_00001_00003' direct represents '8' with '13'
c Var 'field_00001_00003' direct represents '9' with '14'
10 11 12 13 14 0
-10 -11 0
-10 -12 0
-10 -13 0
-10 -14 0
-11 -12 0
-11 -13 0
-11 -14 0
-12 -13 0
-12 -14 0
-13 -14 0
c Encoding variable: field_00001_00004 with domain: int(2) (representing constraint )
c Var 'field_00001_00004' direct represents '2' with '15'
15 0
c Encoding variable: field_00001_00005 with domain: int(1,4..8) (representing constraint )
c Direct encoding.
c Var 'field_00001_00005' direct represents '1' with '16'
c Var 'field_00001_00005' direct represents '4' with '17'
c Var 'field_00001_00005' direct represents '5' with '18'
c Var 'field_00001_00005' direct represents '6' with '19'
c Var 'field_00001_00005' direct represents '7' with '20'
c Var 'field_00001_00005' direct represents '8' with '21'
16 17 18 19 20 21 0
-16 -17 0
-16 -18 0
-16 -19 0
-16 -20 0
-16 -21 0
-17 -18 0
-17 -19 0
-17 -20 0
-17 -21 0
-18 -19 0
-18 -20 0
-18 -21 0
-19 -20 0
-19 -21 0
-20 -21 0
c Encoding variable: field_00001_00006 with domain: int(4..6) (representing constraint )
c Direct encoding.
c Var 'field_00001_00006' direct represents '4' with '22'
c Var 'field_00001_00006' direct represents '5' with '23'
c Var 'field_00001_00006' direct represents '6' with '24'
22 23 24 0
-22 -23 0
-22 -24 0
-23 -24 0
c Encoding variable: field_00001_00007 with domain: int(3) (representing constraint )
c Var 'field_00001_00007' direct represents '3' with '25'
25 0
c Encoding variable: field_00001_00008 with domain: int(1,4..5,7,9) (representing constraint )
c Direct encoding.
c Var 'field_00001_00008' direct represents '1' with '26'
c Var 'field_00001_00008' direct represents '4' with '27'
c Var 'field_00001_00008' direct represents '5' with '28'
c Var 'field_00001_00008' direct represents '7' with '29'
c Var 'field_00001_00008' direct represents '9' with '30'
26 27 28 29 30 0
-26 -27 0
-26 -28 0
-26 -29 0
-26 -30 0
-27 -28 0
-27 -29 0
-27 -30 0
-28 -29 0
-28 -30 0
-29 -30 0
c Encoding variable: field_00001_00009 with domain: int(1,4..5,7..9) (representing constraint )
c Direct encoding.
c Var 'field_00001_00009' direct represents '1' with '31'
c Var 'field_00001_00009' direct represents '4' with '32'
c Var 'field_00001_00009' direct represents '5' with '33'
c Var 'field_00001_00009' direct represents '7' with '34'
c Var 'field_00001_00009' direct represents '8' with '35'
c Var 'field_00001_00009' direct represents '9' with '36'
31 32 33 34 35 36 0
-31 -32 0
-31 -33 0
-31 -34 0
-31 -35 0
-31 -36 0
-32 -33 0
-32 -34 0
-32 -35 0
-32 -36 0
-33 -34 0
-33 -35 0
-33 -36 0
-34 -35 0
-34 -36 0
-35 -36 0
c Encoding variable: field_00002_00001 with domain: int(3) (representing constraint )
c Var 'field_00002_00001' direct represents '3' with '37'
37 0
c Encoding variable: field_00002_00002 with domain: int(1,4) (representing constraint )
c Var 'field_00002_00002' direct represents '1' with '-38'
c Var 'field_00002_00002' direct represents '4' with '38'
c Var 'field_00002_00002' order represents '4' with '1'
c Var 'field_00002_00002' order represents '1' with '-38'
c Encoding variable: field_00002_00003 with domain: int(1,4) (representing constraint )
c Var 'field_00002_00003' direct represents '1' with '-39'
c Var 'field_00002_00003' direct represents '4' with '39'
c Var 'field_00002_00003' order represents '4' with '1'
c Var 'field_00002_00003' order represents '1' with '-39'
c Encoding variable: field_00002_00004 with domain: int(9) (representing constraint )
c Var 'field_00002_00004' direct represents '9' with '40'
40 0
c Encoding variable: field_00002_00005 with domain: int(5,7..8) (representing constraint )
c Direct encoding.
c Var 'field_00002_00005' direct represents '5' with '41'
c Var 'field_00002_00005' direct represents '7' with '42'
c Var 'field_00002_00005' direct represents '8' with '43'
41 42 43 0
-41 -42 0
-41 -43 0
-42 -43 0
c Encoding variable: field_00002_00006 with domain: int(5,7..8) (representing constraint )
c Direct encoding.
c Var 'field_00002_00006' direct represents '5' with '44'
c Var 'field_00002_00006' direct represents '7' with '45'
c Var 'field_00002_00006' direct represents '8' with '46'
44 45 46 0
-44 -45 0
-44 -46 0
-45 -46 0
c Encoding variable: field_00002_00007 with domain: int(5,7..8) (representing constraint )
c Direct encoding.
c Var 'field_00002_00007' direct represents '5' with '47'
c Var 'field_00002_00007' direct represents '7' with '48'
c Var 'field_00002_00007' direct represents '8' with '49'
47 48 49 0
-47 -48 0
-47 -49 0
-48 -49 0
c Encoding variable: field_00002_00008 with domain: int(6) (representing constraint )
c Var 'field_00002_00008' direct represents '6' with '50'
50 0
c Encoding variable: field_00002_00009 with domain: int(2) (representing constraint )
c Var 'field_00002_00009' direct represents '2' with '51'
51 0
c Encoding variable: field_00003_00001 with domain: int(2,5..9) (representing constraint )
c Direct encoding.
c Var 'field_00003_00001' direct represents '2' with '52'
c Var 'field_00003_00001' direct represents '5' with '53'
c Var 'field_00003_00001' direct represents '6' with '54'
c Var 'field_00003_00001' direct represents '7' with '55'
c Var 'field_00003_00001' direct represents '8' with '56'
c Var 'field_00003_00001' direct represents '9' with '57'
52 53 54 55 56 57 0
-52 -53 0
-52 -54 0
-52 -55 0
-52 -56 0
-52 -57 0
-53 -54 0
-53 -55 0
-53 -56 0
-53 -57 0
-54 -55 0
-54 -56 0
-54 -57 0
-55 -56 0
-55 -57 0
-56 -57 0
c Encoding variable: field_00003_00002 with domain: int(2,5..9) (representing constraint )
c Direct encoding.
c Var 'field_00003_00002' direct represents '2' with '58'
c Var 'field_00003_00002' direct represents '5' with '59'
c Var 'field_00003_00002' direct represents '6' with '60'
c Var 'field_00003_00002' direct represents '7' with '61'
c Var 'field_00003_00002' direct represents '8' with '62'
c Var 'field_00003_00002' direct represents '9' with '63'
58 59 60 61 62 63 0
-58 -59 0
-58 -60 0
-58 -61 0
-58 -62 0
-58 -63 0
-59 -60 0
-59 -61 0
-59 -62 0
-59 -63 0
-60 -61 0
-60 -62 0
-60 -63 0
-61 -62 0
-61 -63 0
-62 -63 0
c Encoding variable: field_00003_00003 with domain: int(2,5..9) (representing constraint )
c Direct encoding.
c Var 'field_00003_00003' direct represents '2' with '64'
c Var 'field_00003_00003' direct represents '5' with '65'
c Var 'field_00003_00003' direct represents '6' with '66'
c Var 'field_00003_00003' direct represents '7' with '67'
c Var 'field_00003_00003' direct represents '8' with '68'
c Var 'field_00003_00003' direct represents '9' with '69'
64 65 66 67 68 69 0
-64 -65 0
-64 -66 0
-64 -67 0
-64 -68 0
-64 -69 0
-65 -66 0
-65 -67 0
-65 -68 0
-65 -69 0
-66 -67 0
-66 -68 0
-66 -69 0
-67 -68 0
-67 -69 0
-68 -69 0
c Encoding variable: field_00003_00004 with domain: int(4,6..8) (representing constraint )
c Direct encoding.
c Var 'field_00003_00004' direct represents '4' with '70'
c Var 'field_00003_00004' direct represents '6' with '71'
c Var 'field_00003_00004' direct represents '7' with '72'
c Var 'field_00003_00004' direct represents '8' with '73'
70 71 72 73 0
-70 -71 0
-70 -72 0
-70 -73 0
-71 -72 0
-71 -73 0
-72 -73 0
c Encoding variable: field_00003_00005 with domain: int(1,3..8) (representing constraint )
c Direct encoding.
c Var 'field_00003_00005' direct represents '1' with '74'
c Var 'field_00003_00005' direct represents '3' with '75'
c Var 'field_00003_00005' direct represents '4' with '76'
c Var 'field_00003_00005' direct represents '5' with '77'
c Var 'field_00003_00005' direct represents '6' with '78'
c Var 'field_00003_00005' direct represents '7' with '79'
c Var 'field_00003_00005' direct represents '8' with '80'
74 75 76 77 78 79 80 0
-74 81 0
-74 84 0
-75 82 0
-75 84 0
-76 83 0
-76 84 0
-77 81 0
-77 85 0
-78 82 0
-78 85 0
-79 83 0
-79 85 0
-80 81 0
-80 86 0
-81 -82 0
-81 -83 0
-82 -83 0
-84 -85 0
-84 -86 0
-85 -86 0
c Encoding variable: field_00003_00006 with domain: int(1,3..8) (representing constraint )
c Direct encoding.
c Var 'field_00003_00006' direct represents '1' with '87'
c Var 'field_00003_00006' direct represents '3' with '88'
c Var 'field_00003_00006' direct represents '4' with '89'
c Var 'field_00003_00006' direct represents '5' with '90'
c Var 'field_00003_00006' direct represents '6' with '91'
c Var 'field_00003_00006' direct represents '7' with '92'
c Var 'field_00003_00006' direct represents '8' with '93'
87 88 89 90 91 92 93 0
-87 94 0
-87 97 0
-88 95 0
-88 97 0
-89 96 0
-89 97 0
-90 94 0
-90 98 0
-91 95 0
-91 98 0
-92 96 0
-92 98 0
-93 94 0
-93 99 0
-94 -95 0
-94 -96 0
-95 -96 0
-97 -98 0
-97 -99 0
-98 -99 0
c Encoding variable: field_00003_00007 with domain: int(5,7..8) (representing constraint )
c Direct encoding.
c Var 'field_00003_00007' direct represents '5' with '100'
c Var 'field_00003_00007' direct represents '7' with '101'
c Var 'field_00003_00007' direct represents '8' with '102'
100 101 102 0
-100 -101 0
-100 -102 0
-101 -102 0
c Encoding variable: field_00003_00008 with domain: int(1,4..5,7,9) (representing constraint )
c Direct encoding.
c Var 'field_00003_00008' direct represents '1' with '103'
c Var 'field_00003_00008' direct represents '4' with '104'
c Var 'field_00003_00008' direct represents '5' with '105'
c Var 'field_00003_00008' direct represents '7' with '106'
c Var 'field_00003_00008' direct represents '9' with '107'
103 104 105 106 107 0
-103 -104 0
-103 -105 0
-103 -106 0
-103 -107 0
-104 -105 0
-104 -106 0
-104 -107 0
-105 -106 0
-105 -107 0
-106 -107 0
c Encoding variable: field_00003_00009 with domain: int(1,4..5,7..9) (representing constraint )
c Direct encoding.
c Var 'field_00003_00009' direct represents '1' with '108'
c Var 'field_00003_00009' direct represents '4' with '109'
c Var 'field_00003_00009' direct represents '5' with '110'
c Var 'field_00003_00009' direct represents '7' with '111'
c Var 'field_00003_00009' direct represents '8' with '112'
c Var 'field_00003_00009' direct represents '9' with '113'
108 109 110 111 112 113 0
-108 -109 0
-108 -110 0
-108 -111 0
-108 -112 0
-108 -113 0
-109 -110 0
-109 -111 0
-109 -112 0
-109 -113 0
-110 -111 0
-110 -112 0
-110 -113 0
-111 -112 0
-111 -113 0
-112 -113 0
c Encoding variable: field_00004_00001 with domain: int(4) (representing constraint )
c Var 'field_00004_00001' direct represents '4' with '114'
114 0
c Encoding variable: field_00004_00002 with domain: int(1..2,7) (representing constraint )
c Direct encoding.
c Var 'field_00004_00002' direct represents '1' with '115'
c Var 'field_00004_00002' direct represents '2' with '116'
c Var 'field_00004_00002' direct represents '7' with '117'
115 116 117 0
-115 -116 0
-115 -117 0
-116 -117 0
c Encoding variable: field_00004_00003 with domain: int(1..2,7) (representing constraint )
c Direct encoding.
c Var 'field_00004_00003' direct represents '1' with '118'
c Var 'field_00004_00003' direct represents '2' with '119'
c Var 'field_00004_00003' direct represents '7' with '120'
118 119 120 0
-118 -119 0
-118 -120 0
-119 -120 0
c Encoding variable: field_00004_00004 with domain: int(5) (representing constraint )
c Var 'field_00004_00004' direct represents '5' with '121'
121 0
c Encoding variable: field_00004_00005 with domain: int(2,7,9) (representing constraint )
c Direct encoding.
c Var 'field_00004_00005' direct represents '2' with '122'
c Var 'field_00004_00005' direct represents '7' with '123'
c Var 'field_00004_00005' direct represents '9' with '124'
122 123 124 0
-122 -123 0
-122 -124 0
-123 -124 0
c Encoding variable: field_00004_00006 with domain: int(2,7,9) (representing constraint )
c Direct encoding.
c Var 'field_00004_00006' direct represents '2' with '125'
c Var 'field_00004_00006' direct represents '7' with '126'
c Var 'field_00004_00006' direct represents '9' with '127'
125 126 127 0
-125 -126 0
-125 -127 0
-126 -127 0
c Encoding variable: field_00004_00007 with domain: int(6) (representing constraint )
c Var 'field_00004_00007' direct represents '6' with '128'
128 0
c Encoding variable: field_00004_00008 with domain: int(8) (representing constraint )
c Var 'field_00004_00008' direct represents '8' with '129'
129 0
c Encoding variable: field_00004_00009 with domain: int(3) (representing constraint )
c Var 'field_00004_00009' direct represents '3' with '130'
130 0
c Encoding variable: field_00005_00001 with domain: int(2,5..9) (representing constraint )
c Direct encoding.
c Var 'field_00005_00001' direct represents '2' with '131'
c Var 'field_00005_00001' direct represents '5' with '132'
c Var 'field_00005_00001' direct represents '6' with '133'
c Var 'field_00005_00001' direct represents '7' with '134'
c Var 'field_00005_00001' direct represents '8' with '135'
c Var 'field_00005_00001' direct represents '9' with '136'
131 132 133 134 135 136 0
-131 -132 0
-131 -133 0
-131 -134 0
-131 -135 0
-131 -136 0
-132 -133 0
-132 -134 0
-132 -135 0
-132 -136 0
-133 -134 0
-133 -135 0
-133 -136 0
-134 -135 0
-134 -136 0
-135 -136 0
c Encoding variable: field_00005_00002 with domain: int(2..3,5..9) (representing constraint )
c Direct encoding.
c Var 'field_00005_00002' direct represents '2' with '137'
c Var 'field_00005_00002' direct represents '3' with '138'
c Var 'field_00005_00002' direct represents '5' with '139'
c Var 'field_00005_00002' direct represents '6' with '140'
c Var 'field_00005_00002' direct represents '7' with '141'
c Var 'field_00005_00002' direct represents '8' with '142'
c Var 'field_00005_00002' direct represents '9' with '143'
137 138 139 140 141 142 143 0
-137 144 0
-137 147 0
-138 145 0
-138 147 0
-139 146 0
-139 147 0
-140 144 0
-140 148 0
-141 145 0
-141 148 0
-142 146 0
-142 148 0
-143 144 0
-143 149 0
-144 -145 0
-144 -146 0
-145 -146 0
-147 -148 0
-147 -149 0
-148 -149 0
c Encoding variable: field_00005_00003 with domain: int(2..3,5..9) (representing constraint )
c Direct encoding.
c Var 'field_00005_00003' direct represents '2' with '150'
c Var 'field_00005_00003' direct represents '3' with '151'
c Var 'field_00005_00003' direct represents '5' with '152'
c Var 'field_00005_00003' direct represents '6' with '153'
c Var 'field_00005_00003' direct represents '7' with '154'
c Var 'field_00005_00003' direct represents '8' with '155'
c Var 'field_00005_00003' direct represents '9' with '156'
150 151 152 153 154 155 156 0
-150 157 0
-150 160 0
-151 158 0
-151 160 0
-152 159 0
-152 160 0
-153 157 0
-153 161 0
-154 158 0
-154 161 0
-155 159 0
-155 161 0
-156 157 0
-156 162 0
-157 -158 0
-157 -159 0
-158 -159 0
-160 -161 0
-160 -162 0
-161 -162 0
c Encoding variable: field_00005_00004 with domain: int(4,6..8) (representing constraint )
c Direct encoding.
c Var 'field_00005_00004' direct represents '4' with '163'
c Var 'field_00005_00004' direct represents '6' with '164'
c Var 'field_00005_00004' direct represents '7' with '165'
c Var 'field_00005_00004' direct represents '8' with '166'
163 164 165 166 0
-163 -164 0
-163 -165 0
-163 -166 0
-164 -165 0
-164 -166 0
-165 -166 0
c Encoding variable: field_00005_00005 with domain: int(1..4,6..8) (representing constraint )
c Direct encoding.
c Var 'field_00005_00005' direct represents '1' with '167'
c Var 'field_00005_00005' direct represents '2' with '168'
c Var 'field_00005_00005' direct represents '3' with '169'
c Var 'field_00005_00005' direct represents '4' with '170'
c Var 'field_00005_00005' direct represents '6' with '171'
c Var 'field_00005_00005' direct represents '7' with '172'
c Var 'field_00005_00005' direct represents '8' with '173'
167 168 169 170 171 172 173 0
-167 174 0
-167 177 0
-168 175 0
-168 177 0
-169 176 0
-169 177 0
-170 174 0
-170 178 0
-171 175 0
-171 178 0
-172 176 0
-172 178 0
-173 174 0
-173 179 0
-174 -175 0
-174 -176 0
-175 -176 0
-177 -178 0
-177 -179 0
-178 -179 0
c Encoding variable: field_00005_00006 with domain: int(1..4,6..8) (representing constraint )
c Direct encoding.
c Var 'field_00005_00006' direct represents '1' with '180'
c Var 'field_00005_00006' direct represents '2' with '181'
c Var 'field_00005_00006' direct represents '3' with '182'
c Var 'field_00005_00006' direct represents '4' with '183'
c Var 'field_00005_00006' direct represents '6' with '184'
c Var 'field_00005_00006' direct represents '7' with '185'
c Var 'field_00005_00006' direct represents '8' with '186'
180 181 182 183 184 185 186 0
-180 187 0
-180 190 0
-181 188 0
-181 190 0
-182 189 0
-182 190 0
-183 187 0
-183 191 0
-184 188 0
-184 191 0
-185 189 0
-185 191 0
-186 187 0
-186 192 0
-187 -188 0
-187 -189 0
-188 -189 0
-190 -191 0
-190 -192 0
-191 -192 0
c Encoding variable: field_00005_00007 with domain: int(2,5,7,9) (representing constraint )
c Direct encoding.
c Var 'field_00005_00007' direct represents '2' with '193'
c Var 'field_00005_00007' direct represents '5' with '194'
c Var 'field_00005_00007' direct represents '7' with '195'
c Var 'field_00005_00007' direct represents '9' with '196'
193 194 195 196 0
-193 -194 0
-193 -195 0
-193 -196 0
-194 -195 0
-194 -196 0
-195 -196 0
c Encoding variable: field_00005_00008 with domain: int(1..2,4..5,7,9) (representing constraint )
c Direct encoding.
c Var 'field_00005_00008' direct represents '1' with '197'
c Var 'field_00005_00008' direct represents '2' with '198'
c Var 'field_00005_00008' direct represents '4' with '199'
c Var 'field_00005_00008' direct represents '5' with '200'
c Var 'field_00005_00008' direct represents '7' with '201'
c Var 'field_00005_00008' direct represents '9' with '202'
197 198 199 200 201 202 0
-197 -198 0
-197 -199 0
-197 -200 0
-197 -201 0
-197 -202 0
-198 -199 0
-198 -200 0
-198 -201 0
-198 -202 0
-199 -200 0
-199 -201 0
-199 -202 0
-200 -201 0
-200 -202 0
-201 -202 0
c Encoding variable: field_00005_00009 with domain: int(1,4..5,7,9) (representing constraint )
c Direct encoding.
c Var 'field_00005_00009' direct represents '1' with '203'
c Var 'field_00005_00009' direct represents '4' with '204'
c Var 'field_00005_00009' direct represents '5' with '205'
c Var 'field_00005_00009' direct represents '7' with '206'
c Var 'field_00005_00009' direct represents '9' with '207'
203 204 205 206 207 0
-203 -204 0
-203 -205 0
-203 -206 0
-203 -207 0
-204 -205 0
-204 -206 0
-204 -207 0
-205 -206 0
-205 -207 0
-206 -207 0
c Encoding variable: field_00006_00001 with domain: int(5..8) (representing constraint )
c Direct encoding.
c Var 'field_00006_00001' direct represents '5' with '208'
c Var 'field_00006_00001' direct represents '6' with '209'
c Var 'field_00006_00001' direct represents '7' with '210'
c Var 'field_00006_00001' direct represents '8' with '211'
208 209 210 211 0
-208 -209 0
-208 -210 0
-208 -211 0
-209 -210 0
-209 -211 0
-210 -211 0
c Encoding variable: field_00006_00002 with domain: int(2..3,5..9) (representing constraint )
c Direct encoding.
c Var 'field_00006_00002' direct represents '2' with '212'
c Var 'field_00006_00002' direct represents '3' with '213'
c Var 'field_00006_00002' direct represents '5' with '214'
c Var 'field_00006_00002' direct represents '6' with '215'
c Var 'field_00006_00002' direct represents '7' with '216'
c Var 'field_00006_00002' direct represents '8' with '217'
c Var 'field_00006_00002' direct represents '9' with '218'
212 213 214 215 216 217 218 0
-212 219 0
-212 222 0
-213 220 0
-213 222 0
-214 221 0
-214 222 0
-215 219 0
-215 223 0
-216 220 0
-216 223 0
-217 221 0
-217 223 0
-218 219 0
-218 224 0
-219 -220 0
-219 -221 0
-220 -221 0
-222 -223 0
-222 -224 0
-223 -224 0
c Encoding variable: field_00006_00003 with domain: int(2..3,5..9) (representing constraint )
c Direct encoding.
c Var 'field_00006_00003' direct represents '2' with '225'
c Var 'field_00006_00003' direct represents '3' with '226'
c Var 'field_00006_00003' direct represents '5' with '227'
c Var 'field_00006_00003' direct represents '6' with '228'
c Var 'field_00006_00003' direct represents '7' with '229'
c Var 'field_00006_00003' direct represents '8' with '230'
c Var 'field_00006_00003' direct represents '9' with '231'
225 226 227 228 229 230 231 0
-225 232 0
-225 235 0
-226 233 0
-226 235 0
-227 234 0
-227 235 0
-228 232 0
-228 236 0
-229 233 0
-229 236 0
-230 234 0
-230 236 0
-231 232 0
-231 237 0
-232 -233 0
-232 -234 0
-233 -234 0
-235 -236 0
-235 -237 0
-236 -237 0
c Encoding variable: field_00006_00004 with domain: int(4,6..8) (representing constraint )
c Direct encoding.
c Var 'field_00006_00004' direct represents '4' with '238'
c Var 'field_00006_00004' direct represents '6' with '239'
c Var 'field_00006_00004' direct represents '7' with '240'
c Var 'field_00006_00004' direct represents '8' with '241'
238 239 240 241 0
-238 -239 0
-238 -240 0
-238 -241 0
-239 -240 0
-239 -241 0
-240 -241 0
c Encoding variable: field_00006_00005 with domain: int(1..4,6..8) (representing constraint )
c Direct encoding.
c Var 'field_00006_00005' direct represents '1' with '242'
c Var 'field_00006_00005' direct represents '2' with '243'
c Var 'field_00006_00005' direct represents '3' with '244'
c Var 'field_00006_00005' direct represents '4' with '245'
c Var 'field_00006_00005' direct represents '6' with '246'
c Var 'field_00006_00005' direct represents '7' with '247'
c Var 'field_00006_00005' direct represents '8' with '248'
242 243 244 245 246 247 248 0
-242 249 0
-242 252 0
-243 250 0
-243 252 0
-244 251 0
-244 252 0
-245 249 0
-245 253 0
-246 250 0
-246 253 0
-247 251 0
-247 253 0
-248 249 0
-248 254 0
-249 -250 0
-249 -251 0
-250 -251 0
-252 -253 0
-252 -254 0
-253 -254 0
c Encoding variable: field_00006_00006 with domain: int(1..4,6..8) (representing constraint )
c Direct encoding.
c Var 'field_00006_00006' direct represents '1' with '255'
c Var 'field_00006_00006' direct represents '2' with '256'
c Var 'field_00006_00006' direct represents '3' with '257'
c Var 'field_00006_00006' direct represents '4' with '258'
c Var 'field_00006_00006' direct represents '6' with '259'
c Var 'field_00006_00006' direct represents '7' with '260'
c Var 'field_00006_00006' direct represents '8' with '261'
255 256 257 258 259 260 261 0
-255 262 0
-255 265 0
-256 263 0
-256 265 0
-257 264 0
-257 265 0
-258 262 0
-258 266 0
-259 263 0
-259 266 0
-260 264 0
-260 266 0
-261 262 0
-261 267 0
-262 -263 0
-262 -264 0
-263 -264 0
-265 -266 0
-265 -267 0
-266 -267 0
c Encoding variable: field_00006_00007 with domain: int(1..2,5,7,9) (representing constraint )
c Direct encoding.
c Var 'field_00006_00007' direct represents '1' with '268'
c Var 'field_00006_00007' direct represents '2' with '269'
c Var 'field_00006_00007' direct represents '5' with '270'
c Var 'field_00006_00007' direct represents '7' with '271'
c Var 'field_00006_00007' direct represents '9' with '272'
268 269 270 271 272 0
-268 -269 0
-268 -270 0
-268 -271 0
-268 -272 0
-269 -270 0
-269 -271 0
-269 -272 0
-270 -271 0
-270 -272 0
-271 -272 0
c Encoding variable: field_00006_00008 with domain: int(1..2,4..5,7,9) (representing constraint )
c Direct encoding.
c Var 'field_00006_00008' direct represents '1' with '273'
c Var 'field_00006_00008' direct represents '2' with '274'
c Var 'field_00006_00008' direct represents '4' with '275'
c Var 'field_00006_00008' direct represents '5' with '276'
c Var 'field_00006_00008' direct represents '7' with '277'
c Var 'field_00006_00008' direct represents '9' with '278'
273 274 275 276 277 278 0
-273 -274 0
-273 -275 0
-273 -276 0
-273 -277 0
-273 -278 0
-274 -275 0
-274 -276 0
-274 -277 0
-274 -278 0
-275 -276 0
-275 -277 0
-275 -278 0
-276 -277 0
-276 -278 0
-277 -278 0
c Encoding variable: field_00006_00009 with domain: int(5,7) (representing constraint )
c Var 'field_00006_00009' direct represents '5' with '-279'
c Var 'field_00006_00009' direct represents '7' with '279'
c Var 'field_00006_00009' order represents '7' with '1'
c Var 'field_00006_00009' order represents '5' with '-279'
c Encoding variable: field_00007_00001 with domain: int(1..2,5..9) (representing constraint )
c Direct encoding.
c Var 'field_00007_00001' direct represents '1' with '280'
c Var 'field_00007_00001' direct represents '2' with '281'
c Var 'field_00007_00001' direct represents '5' with '282'
c Var 'field_00007_00001' direct represents '6' with '283'
c Var 'field_00007_00001' direct represents '7' with '284'
c Var 'field_00007_00001' direct represents '8' with '285'
c Var 'field_00007_00001' direct represents '9' with '286'
280 281 282 283 284 285 286 0
-280 287 0
-280 290 0
-281 288 0
-281 290 0
-282 289 0
-282 290 0
-283 287 0
-283 291 0
-284 288 0
-284 291 0
-285 289 0
-285 291 0
-286 287 0
-286 292 0
-287 -288 0
-287 -289 0
-288 -289 0
-290 -291 0
-290 -292 0
-291 -292 0
c Encoding variable: field_00007_00002 with domain: int(2..9) (representing constraint )
c Direct encoding.
c Var 'field_00007_00002' direct represents '2' with '293'
c Var 'field_00007_00002' direct represents '3' with '294'
c Var 'field_00007_00002' direct represents '4' with '295'
c Var 'field_00007_00002' direct represents '5' with '296'
c Var 'field_00007_00002' direct represents '6' with '297'
c Var 'field_00007_00002' direct represents '7' with '298'
c Var 'field_00007_00002' direct represents '8' with '299'
c Var 'field_00007_00002' direct represents '9' with '300'
293 294 295 296 297 298 299 300 0
-293 301 0
-293 304 0
-294 302 0
-294 304 0
-295 303 0
-295 304 0
-296 301 0
-296 305 0
-297 302 0
-297 305 0
-298 303 0
-298 305 0
-299 301 0
-299 306 0
-300 302 0
-300 306 0
-301 -302 0
-301 -303 0
-302 -303 0
-304 -305 0
-304 -306 0
-305 -306 0
c Encoding variable: field_00007_00003 with domain: int(2..9) (representing constraint )
c Direct encoding.
c Var 'field_00007_00003' direct represents '2' with '307'
c Var 'field_00007_00003' direct represents '3' with '308'
c Var 'field_00007_00003' direct represents '4' with '309'
c Var 'field_00007_00003' direct represents '5' with '310'
c Var 'field_00007_00003' direct represents '6' with '311'
c Var 'field_00007_00003' direct represents '7' with '312'
c Var 'field_00007_00003' direct represents '8' with '313'
c Var 'field_00007_00003' direct represents '9' with '314'
307 308 309 310 311 312 313 314 0
-307 315 0
-307 318 0
-308 316 0
-308 318 0
-309 317 0
-309 318 0
-310 315 0
-310 319 0
-311 316 0
-311 319 0
-312 317 0
-312 319 0
-313 315 0
-313 320 0
-314 316 0
-314 320 0
-315 -316 0
-315 -317 0
-316 -317 0
-318 -319 0
-318 -320 0
-319 -320 0
c Encoding variable: field_00007_00004 with domain: int(1,4,6..7) (representing constraint )
c Direct encoding.
c Var 'field_00007_00004' direct represents '1' with '321'
c Var 'field_00007_00004' direct represents '4' with '322'
c Var 'field_00007_00004' direct represents '6' with '323'
c Var 'field_00007_00004' direct represents '7' with '324'
321 322 323 324 0
-321 -322 0
-321 -323 0
-321 -324 0
-322 -323 0
-322 -324 0
-323 -324 0
c Encoding variable: field_00007_00005 with domain: int(2,4..9) (representing constraint )
c Direct encoding.
c Var 'field_00007_00005' direct represents '2' with '325'
c Var 'field_00007_00005' direct represents '4' with '326'
c Var 'field_00007_00005' direct represents '5' with '327'
c Var 'field_00007_00005' direct represents '6' with '328'
c Var 'field_00007_00005' direct represents '7' with '329'
c Var 'field_00007_00005' direct represents '8' with '330'
c Var 'field_00007_00005' direct represents '9' with '331'
325 326 327 328 329 330 331 0
-325 332 0
-325 335 0
-326 333 0
-326 335 0
-327 334 0
-327 335 0
-328 332 0
-328 336 0
-329 333 0
-329 336 0
-330 334 0
-330 336 0
-331 332 0
-331 337 0
-332 -333 0
-332 -334 0
-333 -334 0
-335 -336 0
-335 -337 0
-336 -337 0
c Encoding variable: field_00007_00006 with domain: int(2,4..9) (representing constraint )
c Direct encoding.
c Var 'field_00007_00006' direct represents '2' with '338'
c Var 'field_00007_00006' direct represents '4' with '339'
c Var 'field_00007_00006' direct represents '5' with '340'
c Var 'field_00007_00006' direct represents '6' with '341'
c Var 'field_00007_00006' direct represents '7' with '342'
c Var 'field_00007_00006' direct represents '8' with '343'
c Var 'field_00007_00006' direct represents '9' with '344'
338 339 340 341 342 343 344 0
-338 345 0
-338 348 0
-339 346 0
-339 348 0
-340 347 0
-340 348 0
-341 345 0
-341 349 0
-342 346 0
-342 349 0
-343 347 0
-343 349 0
-344 345 0
-344 350 0
-345 -346 0
-345 -347 0
-346 -347 0
-348 -349 0
-348 -350 0
-349 -350 0
c Encoding variable: field_00007_00007 with domain: int(1..2,5,7..9) (representing constraint )
c Direct encoding.
c Var 'field_00007_00007' direct represents '1' with '351'
c Var 'field_00007_00007' direct represents '2' with '352'
c Var 'field_00007_00007' direct represents '5' with '353'
c Var 'field_00007_00007' direct represents '7' with '354'
c Var 'field_00007_00007' direct represents '8' with '355'
c Var 'field_00007_00007' direct represents '9' with '356'
351 352 353 354 355 356 0
-351 -352 0
-351 -353 0
-351 -354 0
-351 -355 0
-351 -356 0
-352 -353 0
-352 -354 0
-352 -355 0
-352 -356 0
-353 -354 0
-353 -355 0
-353 -356 0
-354 -355 0
-354 -356 0
-355 -356 0
c Encoding variable: field_00007_00008 with domain: int(1..3,5,7,9) (representing constraint )
c Direct encoding.
c Var 'field_00007_00008' direct represents '1' with '357'
c Var 'field_00007_00008' direct represents '2' with '358'
c Var 'field_00007_00008' direct represents '3' with '359'
c Var 'field_00007_00008' direct represents '5' with '360'
c Var 'field_00007_00008' direct represents '7' with '361'
c Var 'field_00007_00008' direct represents '9' with '362'
357 358 359 360 361 362 0
-357 -358 0
-357 -359 0
-357 -360 0
-357 -361 0
-357 -362 0
-358 -359 0
-358 -360 0
-358 -361 0
-358 -362 0
-359 -360 0
-359 -361 0
-359 -362 0
-360 -361 0
-360 -362 0
-361 -362 0
c Encoding variable: field_00007_00009 with domain: int(1,5..9) (representing constraint )
c Direct encoding.
c Var 'field_00007_00009' direct represents '1' with '363'
c Var 'field_00007_00009' direct represents '5' with '364'
c Var 'field_00007_00009' direct represents '6' with '365'
c Var 'field_00007_00009' direct represents '7' with '366'
c Var 'field_00007_00009' direct represents '8' with '367'
c Var 'field_00007_00009' direct represents '9' with '368'
363 364 365 366 367 368 0
-363 -364 0
-363 -365 0
-363 -366 0
-363 -367 0
-363 -368 0
-364 -365 0
-364 -366 0
-364 -367 0
-364 -368 0
-365 -366 0
-365 -367 0
-365 -368 0
-366 -367 0
-366 -368 0
-367 -368 0
c Encoding variable: field_00008_00001 with domain: int(5..8) (representing constraint )
c Direct encoding.
c Var 'field_00008_00001' direct represents '5' with '369'
c Var 'field_00008_00001' direct represents '6' with '370'
c Var 'field_00008_00001' direct represents '7' with '371'
c Var 'field_00008_00001' direct represents '8' with '372'
369 370 371 372 0
-369 -370 0
-369 -371 0
-369 -372 0
-370 -371 0
-370 -372 0
-371 -372 0
c Encoding variable: field_00008_00002 with domain: int(2..9) (representing constraint )
c Direct encoding.
c Var 'field_00008_00002' direct represents '2' with '373'
c Var 'field_00008_00002' direct represents '3' with '374'
c Var 'field_00008_00002' direct represents '4' with '375'
c Var 'field_00008_00002' direct represents '5' with '376'
c Var 'field_00008_00002' direct represents '6' with '377'
c Var 'field_00008_00002' direct represents '7' with '378'
c Var 'field_00008_00002' direct represents '8' with '379'
c Var 'field_00008_00002' direct represents '9' with '380'
373 374 375 376 377 378 379 380 0
-373 381 0
-373 384 0
-374 382 0
-374 384 0
-375 383 0
-375 384 0
-376 381 0
-376 385 0
-377 382 0
-377 385 0
-378 383 0
-378 385 0
-379 381 0
-379 386 0
-380 382 0
-380 386 0
-381 -382 0
-381 -383 0
-382 -383 0
-384 -385 0
-384 -386 0
-385 -386 0
c Encoding variable: field_00008_00003 with domain: int(2..9) (representing constraint )
c Direct encoding.
c Var 'field_00008_00003' direct represents '2' with '387'
c Var 'field_00008_00003' direct represents '3' with '388'
c Var 'field_00008_00003' direct represents '4' with '389'
c Var 'field_00008_00003' direct represents '5' with '390'
c Var 'field_00008_00003' direct represents '6' with '391'
c Var 'field_00008_00003' direct represents '7' with '392'
c Var 'field_00008_00003' direct represents '8' with '393'
c Var 'field_00008_00003' direct represents '9' with '394'
387 388 389 390 391 392 393 394 0
-387 395 0
-387 398 0
-388 396 0
-388 398 0
-389 397 0
-389 398 0
-390 395 0
-390 399 0
-391 396 0
-391 399 0
-392 397 0
-392 399 0
-393 395 0
-393 400 0
-394 396 0
-394 400 0
-395 -396 0
-395 -397 0
-396 -397 0
-398 -399 0
-398 -400 0
-399 -400 0
c Encoding variable: field_00008_00004 with domain: int(1,4,6..7) (representing constraint )
c Direct encoding.
c Var 'field_00008_00004' direct represents '1' with '401'
c Var 'field_00008_00004' direct represents '4' with '402'
c Var 'field_00008_00004' direct represents '6' with '403'
c Var 'field_00008_00004' direct represents '7' with '404'
401 402 403 404 0
-401 -402 0
-401 -403 0
-401 -404 0
-402 -403 0
-402 -404 0
-403 -404 0
c Encoding variable: field_00008_00005 with domain: int(2,4..9) (representing constraint )
c Direct encoding.
c Var 'field_00008_00005' direct represents '2' with '405'
c Var 'field_00008_00005' direct represents '4' with '406'
c Var 'field_00008_00005' direct represents '5' with '407'
c Var 'field_00008_00005' direct represents '6' with '408'
c Var 'field_00008_00005' direct represents '7' with '409'
c Var 'field_00008_00005' direct represents '8' with '410'
c Var 'field_00008_00005' direct represents '9' with '411'
405 406 407 408 409 410 411 0
-405 412 0
-405 415 0
-406 413 0
-406 415 0
-407 414 0
-407 415 0
-408 412 0
-408 416 0
-409 413 0
-409 416 0
-410 414 0
-410 416 0
-411 412 0
-411 417 0
-412 -413 0
-412 -414 0
-413 -414 0
-415 -416 0
-415 -417 0
-416 -417 0
c Encoding variable: field_00008_00006 with domain: int(2,4..9) (representing constraint )
c Direct encoding.
c Var 'field_00008_00006' direct represents '2' with '418'
c Var 'field_00008_00006' direct represents '4' with '419'
c Var 'field_00008_00006' direct represents '5' with '420'
c Var 'field_00008_00006' direct represents '6' with '421'
c Var 'field_00008_00006' direct represents '7' with '422'
c Var 'field_00008_00006' direct represents '8' with '423'
c Var 'field_00008_00006' direct represents '9' with '424'
418 419 420 421 422 423 424 0
-418 425 0
-418 428 0
-419 426 0
-419 428 0
-420 427 0
-420 428 0
-421 425 0
-421 429 0
-422 426 0
-422 429 0
-423 427 0
-423 429 0
-424 425 0
-424 430 0
-425 -426 0
-425 -427 0
-426 -427 0
-428 -429 0
-428 -430 0
-429 -430 0
c Encoding variable: field_00008_00007 with domain: int(1..2,5,7..9) (representing constraint )
c Direct encoding.
c Var 'field_00008_00007' direct represents '1' with '431'
c Var 'field_00008_00007' direct represents '2' with '432'
c Var 'field_00008_00007' direct represents '5' with '433'
c Var 'field_00008_00007' direct represents '7' with '434'
c Var 'field_00008_00007' direct represents '8' with '435'
c Var 'field_00008_00007' direct represents '9' with '436'
431 432 433 434 435 436 0
-431 -432 0
-431 -433 0
-431 -434 0
-431 -435 0
-431 -436 0
-432 -433 0
-432 -434 0
-432 -435 0
-432 -436 0
-433 -434 0
-433 -435 0
-433 -436 0
-434 -435 0
-434 -436 0
-435 -436 0
c Encoding variable: field_00008_00008 with domain: int(1..3,5,7,9) (representing constraint )
c Direct encoding.
c Var 'field_00008_00008' direct represents '1' with '437'
c Var 'field_00008_00008' direct represents '2' with '438'
c Var 'field_00008_00008' direct represents '3' with '439'
c Var 'field_00008_00008' direct represents '5' with '440'
c Var 'field_00008_00008' direct represents '7' with '441'
c Var 'field_00008_00008' direct represents '9' with '442'
437 438 439 440 441 442 0
-437 -438 0
-437 -439 0
-437 -440 0
-437 -441 0
-437 -442 0
-438 -439 0
-438 -440 0
-438 -441 0
-438 -442 0
-439 -440 0
-439 -441 0
-439 -442 0
-440 -441 0
-440 -442 0
-441 -442 0
c Encoding variable: field_00008_00009 with domain: int(5..8) (representing constraint )
c Direct encoding.
c Var 'field_00008_00009' direct represents '5' with '443'
c Var 'field_00008_00009' direct represents '6' with '444'
c Var 'field_00008_00009' direct represents '7' with '445'
c Var 'field_00008_00009' direct represents '8' with '446'
443 444 445 446 0
-443 -444 0
-443 -445 0
-443 -446 0
-444 -445 0
-444 -446 0
-445 -446 0
c Encoding variable: field_00009_00001 with domain: int(1..2,5..9) (representing constraint )
c Direct encoding.
c Var 'field_00009_00001' direct represents '1' with '447'
c Var 'field_00009_00001' direct represents '2' with '448'
c Var 'field_00009_00001' direct represents '5' with '449'
c Var 'field_00009_00001' direct represents '6' with '450'
c Var 'field_00009_00001' direct represents '7' with '451'
c Var 'field_00009_00001' direct represents '8' with '452'
c Var 'field_00009_00001' direct represents '9' with '453'
447 448 449 450 451 452 453 0
-447 454 0
-447 457 0
-448 455 0
-448 457 0
-449 456 0
-449 457 0
-450 454 0
-450 458 0
-451 455 0
-451 458 0
-452 456 0
-452 458 0
-453 454 0
-453 459 0
-454 -455 0
-454 -456 0
-455 -456 0
-457 -458 0
-457 -459 0
-458 -459 0
c Encoding variable: field_00009_00002 with domain: int(5..6) (representing constraint )
c Var 'field_00009_00002' direct represents '5' with '-460'
c Var 'field_00009_00002' direct represents '6' with '460'
c Var 'field_00009_00002' order represents '6' with '1'
c Var 'field_00009_00002' order represents '5' with '-460'
c Encoding variable: field_00009_00003 with domain: int(2,5..9) (representing constraint )
c Direct encoding.
c Var 'field_00009_00003' direct represents '2' with '461'
c Var 'field_00009_00003' direct represents '5' with '462'
c Var 'field_00009_00003' direct represents '6' with '463'
c Var 'field_00009_00003' direct represents '7' with '464'
c Var 'field_00009_00003' direct represents '8' with '465'
c Var 'field_00009_00003' direct represents '9' with '466'
461 462 463 464 465 466 0
-461 -462 0
-461 -463 0
-461 -464 0
-461 -465 0
-461 -466 0
-462 -463 0
-462 -464 0
-462 -465 0
-462 -466 0
-463 -464 0
-463 -465 0
-463 -466 0
-464 -465 0
-464 -466 0
-465 -466 0
c Encoding variable: field_00009_00004 with domain: int(3) (representing constraint )
c Var 'field_00009_00004' direct represents '3' with '467'
467 0
c Encoding variable: field_00009_00005 with domain: int(2,5..9) (representing constraint )
c Direct encoding.
c Var 'field_00009_00005' direct represents '2' with '468'
c Var 'field_00009_00005' direct represents '5' with '469'
c Var 'field_00009_00005' direct represents '6' with '470'
c Var 'field_00009_00005' direct represents '7' with '471'
c Var 'field_00009_00005' direct represents '8' with '472'
c Var 'field_00009_00005' direct represents '9' with '473'
468 469 470 471 472 473 0
-468 -469 0
-468 -470 0
-468 -471 0
-468 -472 0
-468 -473 0
-469 -470 0
-469 -471 0
-469 -472 0
-469 -473 0
-470 -471 0
-470 -472 0
-470 -473 0
-471 -472 0
-471 -473 0
-472 -473 0
c Encoding variable: field_00009_00006 with domain: int(2,5..9) (representing constraint )
c Direct encoding.
c Var 'field_00009_00006' direct represents '2' with '474'
c Var 'field_00009_00006' direct represents '5' with '475'
c Var 'field_00009_00006' direct represents '6' with '476'
c Var 'field_00009_00006' direct represents '7' with '477'
c Var 'field_00009_00006' direct represents '8' with '478'
c Var 'field_00009_00006' direct represents '9' with '479'
474 475 476 477 478 479 0
-474 -475 0
-474 -476 0
-474 -477 0
-474 -478 0
-474 -479 0
-475 -476 0
-475 -477 0
-475 -478 0
-475 -479 0
-476 -477 0
-476 -478 0
-476 -479 0
-477 -478 0
-477 -479 0
-478 -479 0
c Encoding variable: field_00009_00007 with domain: int(4) (representing constraint )
c Var 'field_00009_00007' direct represents '4' with '480'
480 0
c Encoding variable: field_00009_00008 with domain: int(1..2,5,7,9) (representing constraint )
c Direct encoding.
c Var 'field_00009_00008' direct represents '1' with '481'
c Var 'field_00009_00008' direct represents '2' with '482'
c Var 'field_00009_00008' direct represents '5' with '483'
c Var 'field_00009_00008' direct represents '7' with '484'
c Var 'field_00009_00008' direct represents '9' with '485'
481 482 483 484 485 0
-481 -482 0
-481 -483 0
-481 -484 0
-481 -485 0
-482 -483 0
-482 -484 0
-482 -485 0
-483 -484 0
-483 -485 0
-484 -485 0
c Encoding variable: field_00009_00009 with domain: int(1,5..9) (representing constraint )
c Direct encoding.
c Var 'field_00009_00009' direct represents '1' with '486'
c Var 'field_00009_00009' direct represents '5' with '487'
c Var 'field_00009_00009' direct represents '6' with '488'
c Var 'field_00009_00009' direct represents '7' with '489'
c Var 'field_00009_00009' direct represents '8' with '490'
c Var 'field_00009_00009' direct represents '9' with '491'
486 487 488 489 490 491 0
-486 -487 0
-486 -488 0
-486 -489 0
-486 -490 0
-486 -491 0
-487 -488 0
-487 -489 0
-487 -490 0
-487 -491 0
-488 -489 0
-488 -490 0
-488 -491 0
-489 -490 0
-489 -491 0
-490 -491 0
c Encoding variable: variant_fields_00001_00001_00001 with domain: int(5..9) (representing constraint )
c Direct encoding.
c Var 'variant_fields_00001_00001_00001' direct represents '5' with '492'
c Var 'variant_fields_00001_00001_00001' direct represents '6' with '493'
c Var 'variant_fields_00001_00001_00001' direct represents '7' with '494'
c Var 'variant_fields_00001_00001_00001' direct represents '8' with '495'
c Var 'variant_fields_00001_00001_00001' direct represents '9' with '496'
492 493 494 495 496 0
-492 -493 0
-492 -494 0
-492 -495 0
-492 -496 0
-493 -494 0
-493 -495 0
-493 -496 0
-494 -495 0
-494 -496 0
-495 -496 0
c Encoding variable: variant_fields_00001_00001_00002 with domain: int(5..7) (representing constraint )
c Direct encoding.
c Var 'variant_fields_00001_00001_00002' direct represents '5' with '497'
c Var 'variant_fields_00001_00001_00002' direct represents '6' with '498'
c Var 'variant_fields_00001_00001_00002' direct represents '7' with '499'
497 498 499 0
-497 -498 0
-497 -499 0
-498 -499 0
c Encoding variable: variant_fields_00001_00001_00003 with domain: int(5..9) (representing constraint )
c Direct encoding.
c Var 'variant_fields_00001_00001_00003' direct represents '5' with '500'
c Var 'variant_fields_00001_00001_00003' direct represents '6' with '501'
c Var 'variant_fields_00001_00001_00003' direct represents '7' with '502'
c Var 'variant_fields_00001_00001_00003' direct represents '8' with '503'
c Var 'variant_fields_00001_00001_00003' direct represents '9' with '504'
500 501 502 503 504 0
-500 -501 0
-500 -502 0
-500 -503 0
-500 -504 0
-501 -502 0
-501 -503 0
-501 -504 0
-502 -503 0
-502 -504 0
-503 -504 0
c Encoding variable: variant_fields_00001_00001_00004 with domain: int(2) (representing constraint )
c Var 'variant_fields_00001_00001_00004' direct represents '2' with '505'
505 0
c Encoding variable: variant_fields_00001_00001_00005 with domain: int(1,4..8) (representing constraint )
c Direct encoding.
c Var 'variant_fields_00001_00001_00005' direct represents '1' with '506'
c Var 'variant_fields_00001_00001_00005' direct represents '4' with '507'
c Var 'variant_fields_00001_00001_00005' direct represents '5' with '508'
c Var 'variant_fields_00001_00001_00005' direct represents '6' with '509'
c Var 'variant_fields_00001_00001_00005' direct represents '7' with '510'
c Var 'variant_fields_00001_00001_00005' direct represents '8' with '511'
506 507 508 509 510 511 0
-506 -507 0
-506 -508 0
-506 -509 0
-506 -510 0
-506 -511 0
-507 -508 0
-507 -509 0
-507 -510 0
-507 -511 0
-508 -509 0
-508 -510 0
-508 -511 0
-509 -510 0
-509 -511 0
-510 -511 0
c Encoding variable: variant_fields_00001_00001_00006 with domain: int(4..6) (representing constraint )
c Direct encoding.
c Var 'variant_fields_00001_00001_00006' direct represents '4' with '512'
c Var 'variant_fields_00001_00001_00006' direct represents '5' with '513'
c Var 'variant_fields_00001_00001_00006' direct represents '6' with '514'
512 513 514 0
-512 -513 0
-512 -514 0
-513 -514 0
c Encoding variable: variant_fields_00001_00001_00007 with domain: int(3) (representing constraint )
c Var 'variant_fields_00001_00001_00007' direct represents '3' with '515'
515 0
c Encoding variable: variant_fields_00001_00001_00008 with domain: int(1,4..5,7,9) (representing constraint )
c Direct encoding.
c Var 'variant_fields_00001_00001_00008' direct represents '1' with '516'
c Var 'variant_fields_00001_00001_00008' direct represents '4' with '517'
c Var 'variant_fields_00001_00001_00008' direct represents '5' with '518'
c Var 'variant_fields_00001_00001_00008' direct represents '7' with '519'
c Var 'variant_fields_00001_00001_00008' direct represents '9' with '520'
516 517 518 519 520 0
-516 -517 0
-516 -518 0
-516 -519 0
-516 -520 0
-517 -518 0
-517 -519 0
-517 -520 0
-518 -519 0
-518 -520 0
-519 -520 0
c Encoding variable: variant_fields_00001_00001_00009 with domain: int(1,4..5,7..9) (representing constraint )
c Direct encoding.
c Var 'variant_fields_00001_00001_00009' direct represents '1' with '521'
c Var 'variant_fields_00001_00001_00009' direct represents '4' with '522'
c Var 'variant_fields_00001_00001_00009' direct represents '5' with '523'
c Var 'variant_fields_00001_00001_00009' direct represents '7' with '524'
c Var 'variant_fields_00001_00001_00009' direct represents '8' with '525'
c Var 'variant_fields_00001_00001_00009' direct represents '9' with '526'
521 522 523 524 525 526 0
-521 -522 0
-521 -523 0
-521 -524 0
-521 -525 0
-521 -526 0
-522 -523 0
-522 -524 0
-522 -525 0
-522 -526 0
-523 -524 0
-523 -525 0
-523 -526 0
-524 -525 0
-524 -526 0
-525 -526 0
c Encoding variable: variant_fields_00001_00002_00001 with domain: int(3) (representing constraint )
c Var 'variant_fields_00001_00002_00001' direct represents '3' with '527'
527 0
c Encoding variable: variant_fields_00001_00002_00002 with domain: int(1,4) (representing constraint )
c Var 'variant_fields_00001_00002_00002' direct represents '1' with '-528'
c Var 'variant_fields_00001_00002_00002' direct represents '4' with '528'
c Var 'variant_fields_00001_00002_00002' order represents '4' with '1'
c Var 'variant_fields_00001_00002_00002' order represents '1' with '-528'
c Encoding variable: variant_fields_00001_00002_00003 with domain: int(1,4) (representing constraint )
c Var 'variant_fields_00001_00002_00003' direct represents '1' with '-529'
c Var 'variant_fields_00001_00002_00003' direct represents '4' with '529'
c Var 'variant_fields_00001_00002_00003' order represents '4' with '1'
c Var 'variant_fields_00001_00002_00003' order represents '1' with '-529'
c Encoding variable: variant_fields_00001_00002_00004 with domain: int(9) (representing constraint )
c Var 'variant_fields_00001_00002_00004' direct represents '9' with '530'
530 0
c Encoding variable: variant_fields_00001_00002_00005 with domain: int(5,7..8) (representing constraint )
c Direct encoding.
c Var 'variant_fields_00001_00002_00005' direct represents '5' with '531'
c Var 'variant_fields_00001_00002_00005' direct represents '7' with '532'
c Var 'variant_fields_00001_00002_00005' direct represents '8' with '533'
531 532 533 0
-531 -532 0
-531 -533 0
-532 -533 0
c Encoding variable: variant_fields_00001_00002_00006 with domain: int(5,7..8) (representing constraint )
c Direct encoding.
c Var 'variant_fields_00001_00002_00006' direct represents '5' with '534'
c Var 'variant_fields_00001_00002_00006' direct represents '7' with '535'
c Var 'variant_fields_00001_00002_00006' direct represents '8' with '536'
534 535 536 0
-534 -535 0
-534 -536 0
-535 -536 0
c Encoding variable: variant_fields_00001_00002_00007 with domain: int(5,7..8) (representing constraint )
c Direct encoding.
c Var 'variant_fields_00001_00002_00007' direct represents '5' with '537'
c Var 'variant_fields_00001_00002_00007' direct represents '7' with '538'
c Var 'variant_fields_00001_00002_00007' direct represents '8' with '539'
537 538 539 0
-537 -538 0
-537 -539 0
-538 -539 0
c Encoding variable: variant_fields_00001_00002_00008 with domain: int(6) (representing constraint )
c Var 'variant_fields_00001_00002_00008' direct represents '6' with '540'
540 0
c Encoding variable: variant_fields_00001_00002_00009 with domain: int(2) (representing constraint )
c Var 'variant_fields_00001_00002_00009' direct represents '2' with '541'
541 0
c Encoding variable: variant_fields_00001_00003_00001 with domain: int(2,5..9) (representing constraint )
c Direct encoding.
c Var 'variant_fields_00001_00003_00001' direct represents '2' with '542'
c Var 'variant_fields_00001_00003_00001' direct represents '5' with '543'
c Var 'variant_fields_00001_00003_00001' direct represents '6' with '544'
c Var 'variant_fields_00001_00003_00001' direct represents '7' with '545'
c Var 'variant_fields_00001_00003_00001' direct represents '8' with '546'
c Var 'variant_fields_00001_00003_00001' direct represents '9' with '547'
542 543 544 545 546 547 0
-542 -543 0
-542 -544 0
-542 -545 0
-542 -546 0
-542 -547 0
-543 -544 0
-543 -545 0
-543 -546 0
-543 -547 0
-544 -545 0
-544 -546 0
-544 -547 0
-545 -546 0
-545 -547 0
-546 -547 0
c Encoding variable: variant_fields_00001_00003_00002 with domain: int(2,5..9) (representing constraint )
c Direct encoding.
c Var 'variant_fields_00001_00003_00002' direct represents '2' with '548'
c Var 'variant_fields_00001_00003_00002' direct represents '5' with '549'
c Var 'variant_fields_00001_00003_00002' direct represents '6' with '550'
c Var 'variant_fields_00001_00003_00002' direct represents '7' with '551'
c Var 'variant_fields_00001_00003_00002' direct represents '8' with '552'
c Var 'variant_fields_00001_00003_00002' direct represents '9' with '553'
548 549 550 551 552 553 0
-548 -549 0
-548 -550 0
-548 -551 0
-548 -552 0
-548 -553 0
-549 -550 0
-549 -551 0
-549 -552 0
-549 -553 0
-550 -551 0
-550 -552 0
-550 -553 0
-551 -552 0
-551 -553 0
-552 -553 0
c Encoding variable: variant_fields_00001_00003_00003 with domain: int(2,5..9) (representing constraint )
c Direct encoding.
c Var 'variant_fields_00001_00003_00003' direct represents '2' with '554'
c Var 'variant_fields_00001_00003_00003' direct represents '5' with '555'
c Var 'variant_fields_00001_00003_00003' direct represents '6' with '556'
c Var 'variant_fields_00001_00003_00003' direct represents '7' with '557'
c Var 'variant_fields_00001_00003_00003' direct represents '8' with '558'
c Var 'variant_fields_00001_00003_00003' direct represents '9' with '559'
554 555 556 557 558 559 0
-554 -555 0
-554 -556 0
-554 -557 0
-554 -558 0
-554 -559 0
-555 -556 0
-555 -557 0
-555 -558 0
-555 -559 0
-556 -557 0
-556 -558 0
-556 -559 0
-557 -558 0
-557 -559 0
-558 -559 0
c Encoding variable: variant_fields_00001_00003_00004 with domain: int(4,6..8) (representing constraint )
c Direct encoding.
c Var 'variant_fields_00001_00003_00004' direct represents '4' with '560'
c Var 'variant_fields_00001_00003_00004' direct represents '6' with '561'
c Var 'variant_fields_00001_00003_00004' direct represents '7' with '562'
c Var 'variant_fields_00001_00003_00004' direct represents '8' with '563'
560 561 562 563 0
-560 -561 0
-560 -562 0
-560 -563 0
-561 -562 0
-561 -563 0
-562 -563 0
c Encoding variable: variant_fields_00001_00003_00005 with domain: int(1,3..8) (representing constraint )
c Direct encoding.
c Var 'variant_fields_00001_00003_00005' direct represents '1' with '564'
c Var 'variant_fields_00001_00003_00005' direct represents '3' with '565'
c Var 'variant_fields_00001_00003_00005' direct represents '4' with '566'
c Var 'variant_fields_00001_00003_00005' direct represents '5' with '567'
c Var 'variant_fields_00001_00003_00005' direct represents '6' with '568'
c Var 'variant_fields_00001_00003_00005' direct represents '7' with '569'
c Var 'variant_fields_00001_00003_00005' direct represents '8' with '570'
564 565 566 567 568 569 570 0
-564 571 0
-564 574 0
-565 572 0
-565 574 0
-566 573 0
-566 574 0
-567 571 0
-567 575 0
-568 572 0
-568 575 0
-569 573 0
-569 575 0
-570 571 0
-570 576 0
-571 -572 0
-571 -573 0
-572 -573 0
-574 -575 0
-574 -576 0
-575 -576 0
c Encoding variable: variant_fields_00001_00003_00006 with domain: int(1,3..8) (representing constraint )
c Direct encoding.
c Var 'variant_fields_00001_00003_00006' direct represents '1' with '577'
c Var 'variant_fields_00001_00003_00006' direct represents '3' with '578'
c Var 'variant_fields_00001_00003_00006' direct represents '4' with '579'
c Var 'variant_fields_00001_00003_00006' direct represents '5' with '580'
c Var 'variant_fields_00001_00003_00006' direct represents '6' with '581'
c Var 'variant_fields_00001_00003_00006' direct represents '7' with '582'
c Var 'variant_fields_00001_00003_00006' direct represents '8' with '583'
577 578 579 580 581 582 583 0
-577 584 0
-577 587 0
-578 585 0
-578 587 0
-579 586 0
-579 587 0
-580 584 0
-580 588 0
-581 585 0
-581 588 0
-582 586 0
-582 588 0
-583 584 0
-583 589 0
-584 -585 0
-584 -586 0
-585 -586 0
-587 -588 0
-587 -589 0
-588 -589 0
c Encoding variable: variant_fields_00001_00003_00007 with domain: int(5,7..8) (representing constraint )
c Direct encoding.
c Var 'variant_fields_00001_00003_00007' direct represents '5' with '590'
c Var 'variant_fields_00001_00003_00007' direct represents '7' with '591'
c Var 'variant_fields_00001_00003_00007' direct represents '8' with '592'
590 591 592 0
-590 -591 0
-590 -592 0
-591 -592 0
c Encoding variable: variant_fields_00001_00003_00008 with domain: int(1,4..5,7,9) (representing constraint )
c Direct encoding.
c Var 'variant_fields_00001_00003_00008' direct represents '1' with '593'
c Var 'variant_fields_00001_00003_00008' direct represents '4' with '594'
c Var 'variant_fields_00001_00003_00008' direct represents '5' with '595'
c Var 'variant_fields_00001_00003_00008' direct represents '7' with '596'
c Var 'variant_fields_00001_00003_00008' direct represents '9' with '597'
593 594 595 596 597 0
-593 -594 0
-593 -595 0
-593 -596 0
-593 -597 0
-594 -595 0
-594 -596 0
-594 -597 0
-595 -596 0
-595 -597 0
-596 -597 0
c Encoding variable: variant_fields_00001_00003_00009 with domain: int(1,4..5,7..9) (representing constraint )
c Direct encoding.
c Var 'variant_fields_00001_00003_00009' direct represents '1' with '598'
c Var 'variant_fields_00001_00003_00009' direct represents '4' with '599'
c Var 'variant_fields_00001_00003_00009' direct represents '5' with '600'
c Var 'variant_fields_00001_00003_00009' direct represents '7' with '601'
c Var 'variant_fields_00001_00003_00009' direct represents '8' with '602'
c Var 'variant_fields_00001_00003_00009' direct represents '9' with '603'
598 599 600 601 602 603 0
-598 -599 0
-598 -600 0
-598 -601 0
-598 -602 0
-598 -603 0
-599 -600 0
-599 -601 0
-599 -602 0
-599 -603 0
-600 -601 0
-600 -602 0
-600 -603 0
-601 -602 0
-601 -603 0
-602 -603 0
c Encoding variable: variant_fields_00001_00004_00001 with domain: int(4) (representing constraint )
c Var 'variant_fields_00001_00004_00001' direct represents '4' with '604'
604 0
c Encoding variable: variant_fields_00001_00004_00002 with domain: int(1..2,7) (representing constraint )
c Both direct and order encoding.
c Var 'variant_fields_00001_00004_00002' order represents '1' with '605'
c Var 'variant_fields_00001_00004_00002' direct represents '1' with '605'
c Var 'variant_fields_00001_00004_00002' order represents '2' with '606'
-605 606 0
c Var 'variant_fields_00001_00004_00002' direct represents '2' with '607'
605 -606 607 0
-607 606 0
-607 -605 0
c Var 'variant_fields_00001_00004_00002' direct represents '7' with '-606'
605 607 -606 0
c Encoding variable: variant_fields_00001_00004_00003 with domain: int(1..2,7) (representing constraint )
c Both direct and order encoding.
c Var 'variant_fields_00001_00004_00003' order represents '1' with '608'
c Var 'variant_fields_00001_00004_00003' direct represents '1' with '608'
c Var 'variant_fields_00001_00004_00003' order represents '2' with '609'
-608 609 0
c Var 'variant_fields_00001_00004_00003' direct represents '2' with '610'
608 -609 610 0
-610 609 0
-610 -608 0
c Var 'variant_fields_00001_00004_00003' direct represents '7' with '-609'
608 610 -609 0
c Encoding variable: variant_fields_00001_00004_00004 with domain: int(5) (representing constraint )
c Var 'variant_fields_00001_00004_00004' direct represents '5' with '611'
611 0
c Encoding variable: variant_fields_00001_00004_00005 with domain: int(2,7,9) (representing constraint )
c Direct encoding.
c Var 'variant_fields_00001_00004_00005' direct represents '2' with '612'
c Var 'variant_fields_00001_00004_00005' direct represents '7' with '613'
c Var 'variant_fields_00001_00004_00005' direct represents '9' with '614'
612 613 614 0
-612 -613 0
-612 -614 0
-613 -614 0
c Encoding variable: variant_fields_00001_00004_00006 with domain: int(2,7,9) (representing constraint )
c Direct encoding.
c Var 'variant_fields_00001_00004_00006' direct represents '2' with '615'
c Var 'variant_fields_00001_00004_00006' direct represents '7' with '616'
c Var 'variant_fields_00001_00004_00006' direct represents '9' with '617'
615 616 617 0
-615 -616 0
-615 -617 0
-616 -617 0
c Encoding variable: variant_fields_00001_00004_00007 with domain: int(6) (representing constraint )
c Var 'variant_fields_00001_00004_00007' direct represents '6' with '618'
618 0
c Encoding variable: variant_fields_00001_00004_00008 with domain: int(8) (representing constraint )
c Var 'variant_fields_00001_00004_00008' direct represents '8' with '619'
619 0
c Encoding variable: variant_fields_00001_00004_00009 with domain: int(3) (representing constraint )
c Var 'variant_fields_00001_00004_00009' direct represents '3' with '620'
620 0
c Encoding variable: variant_fields_00001_00005_00001 with domain: int(2,5..9) (representing constraint )
c Direct encoding.
c Var 'variant_fields_00001_00005_00001' direct represents '2' with '621'
c Var 'variant_fields_00001_00005_00001' direct represents '5' with '622'
c Var 'variant_fields_00001_00005_00001' direct represents '6' with '623'
c Var 'variant_fields_00001_00005_00001' direct represents '7' with '624'
c Var 'variant_fields_00001_00005_00001' direct represents '8' with '625'
c Var 'variant_fields_00001_00005_00001' direct represents '9' with '626'
621 622 623 624 625 626 0
-621 -622 0
-621 -623 0
-621 -624 0
-621 -625 0
-621 -626 0
-622 -623 0
-622 -624 0
-622 -625 0
-622 -626 0
-623 -624 0
-623 -625 0
-623 -626 0
-624 -625 0
-624 -626 0
-625 -626 0
c Encoding variable: variant_fields_00001_00005_00002 with domain: int(2..3,5..9) (representing constraint )
c Direct encoding.
c Var 'variant_fields_00001_00005_00002' direct represents '2' with '627'
c Var 'variant_fields_00001_00005_00002' direct represents '3' with '628'
c Var 'variant_fields_00001_00005_00002' direct represents '5' with '629'
c Var 'variant_fields_00001_00005_00002' direct represents '6' with '630'
c Var 'variant_fields_00001_00005_00002' direct represents '7' with '631'
c Var 'variant_fields_00001_00005_00002' direct represents '8' with '632'
c Var 'variant_fields_00001_00005_00002' direct represents '9' with '633'
627 628 629 630 631 632 633 0
-627 634 0
-627 637 0
-628 635 0
-628 637 0
-629 636 0
-629 637 0
-630 634 0
-630 638 0
-631 635 0
-631 638 0
-632 636 0
-632 638 0
-633 634 0
-633 639 0
-634 -635 0
-634 -636 0
-635 -636 0
-637 -638 0
-637 -639 0
-638 -639 0
c Encoding variable: variant_fields_00001_00005_00003 with domain: int(2..3,5..9) (representing constraint )
c Direct encoding.
c Var 'variant_fields_00001_00005_00003' direct represents '2' with '640'
c Var 'variant_fields_00001_00005_00003' direct represents '3' with '641'
c Var 'variant_fields_00001_00005_00003' direct represents '5' with '642'
c Var 'variant_fields_00001_00005_00003' direct represents '6' with '643'
c Var 'variant_fields_00001_00005_00003' direct represents '7' with '644'
c Var 'variant_fields_00001_00005_00003' direct represents '8' with '645'
c Var 'variant_fields_00001_00005_00003' direct represents '9' with '646'
640 641 642 643 644 645 646 0
-640 647 0
-640 650 0
-641 648 0
-641 650 0
-642 649 0
-642 650 0
-643 647 0
-643 651 0
-644 648 0
-644 651 0
-645 649 0
-645 651 0
-646 647 0
-646 652 0
-647 -648 0
-647 -649 0
-648 -649 0
-650 -651 0
-650 -652 0
-651 -652 0
c Encoding variable: variant_fields_00001_00005_00004 with domain: int(4,6..8) (representing constraint )
c Direct encoding.
c Var 'variant_fields_00001_00005_00004' direct represents '4' with '653'
c Var 'variant_fields_00001_00005_00004' direct represents '6' with '654'
c Var 'variant_fields_00001_00005_00004' direct represents '7' with '655'
c Var 'variant_fields_00001_00005_00004' direct represents '8' with '656'
653 654 655 656 0
-653 -654 0
-653 -655 0
-653 -656 0
-654 -655 0
-654 -656 0
-655 -656 0
c Encoding variable: variant_fields_00001_00005_00005 with domain: int(1..4,6..8) (representing constraint )
c Direct encoding.
c Var 'variant_fields_00001_00005_00005' direct represents '1' with '657'
c Var 'variant_fields_00001_00005_00005' direct represents '2' with '658'
c Var 'variant_fields_00001_00005_00005' direct represents '3' with '659'
c Var 'variant_fields_00001_00005_00005' direct represents '4' with '660'
c Var 'variant_fields_00001_00005_00005' direct represents '6' with '661'
c Var 'variant_fields_00001_00005_00005' direct represents '7' with '662'
c Var 'variant_fields_00001_00005_00005' direct represents '8' with '663'
657 658 659 660 661 662 663 0
-657 664 0
-657 667 0
-658 665 0
-658 667 0
-659 666 0
-659 667 0
-660 664 0
-660 668 0
-661 665 0
-661 668 0
-662 666 0
-662 668 0
-663 664 0
-663 669 0
-664 -665 0
-664 -666 0
-665 -666 0
-667 -668 0
-667 -669 0
-668 -669 0
c Encoding variable: variant_fields_00001_00005_00006 with domain: int(1..4,6..8) (representing constraint )
c Direct encoding.
c Var 'variant_fields_00001_00005_00006' direct represents '1' with '670'
c Var 'variant_fields_00001_00005_00006' direct represents '2' with '671'
c Var 'variant_fields_00001_00005_00006' direct represents '3' with '672'
c Var 'variant_fields_00001_00005_00006' direct represents '4' with '673'
c Var 'variant_fields_00001_00005_00006' direct represents '6' with '674'
c Var 'variant_fields_00001_00005_00006' direct represents '7' with '675'
c Var 'variant_fields_00001_00005_00006' direct represents '8' with '676'
670 671 672 673 674 675 676 0
-670 677 0
-670 680 0
-671 678 0
-671 680 0
-672 679 0
-672 680 0
-673 677 0
-673 681 0
-674 678 0
-674 681 0
-675 679 0
-675 681 0
-676 677 0
-676 682 0
-677 -678 0
-677 -679 0
-678 -679 0
-680 -681 0
-680 -682 0
-681 -682 0
c Encoding variable: variant_fields_00001_00005_00007 with domain: int(2,5,7,9) (representing constraint )
c Direct encoding.
c Var 'variant_fields_00001_00005_00007' direct represents '2' with '683'
c Var 'variant_fields_00001_00005_00007' direct represents '5' with '684'
c Var 'variant_fields_00001_00005_00007' direct represents '7' with '685'
c Var 'variant_fields_00001_00005_00007' direct represents '9' with '686'
683 684 685 686 0
-683 -684 0
-683 -685 0
-683 -686 0
-684 -685 0
-684 -686 0
-685 -686 0
c Encoding variable: variant_fields_00001_00005_00008 with domain: int(1..2,4..5,7,9) (representing constraint )
c Direct encoding.
c Var 'variant_fields_00001_00005_00008' direct represents '1' with '687'
c Var 'variant_fields_00001_00005_00008' direct represents '2' with '688'
c Var 'variant_fields_00001_00005_00008' direct represents '4' with '689'
c Var 'variant_fields_00001_00005_00008' direct represents '5' with '690'
c Var 'variant_fields_00001_00005_00008' direct represents '7' with '691'
c Var 'variant_fields_00001_00005_00008' direct represents '9' with '692'
687 688 689 690 691 692 0
-687 -688 0
-687 -689 0
-687 -690 0
-687 -691 0
-687 -692 0
-688 -689 0
-688 -690 0
-688 -691 0
-688 -692 0
-689 -690 0
-689 -691 0
-689 -692 0
-690 -691 0
-690 -692 0
-691 -692 0
c Encoding variable: variant_fields_00001_00005_00009 with domain: int(1,4..5,7,9) (representing constraint )
c Direct encoding.
c Var 'variant_fields_00001_00005_00009' direct represents '1' with '693'
c Var 'variant_fields_00001_00005_00009' direct represents '4' with '694'
c Var 'variant_fields_00001_00005_00009' direct represents '5' with '695'
c Var 'variant_fields_00001_00005_00009' direct represents '7' with '696'
c Var 'variant_fields_00001_00005_00009' direct represents '9' with '697'
693 694 695 696 697 0
-693 -694 0
-693 -695 0
-693 -696 0
-693 -697 0
-694 -695 0
-694 -696 0
-694 -697 0
-695 -696 0
-695 -697 0
-696 -697 0
c Encoding variable: variant_fields_00001_00006_00001 with domain: int(5..8) (representing constraint )
c Both direct and order encoding.
c Var 'variant_fields_00001_00006_00001' order represents '5' with '698'
c Var 'variant_fields_00001_00006_00001' direct represents '5' with '698'
c Var 'variant_fields_00001_00006_00001' order represents '6' with '699'
-698 699 0
c Var 'variant_fields_00001_00006_00001' direct represents '6' with '700'
698 -699 700 0
-700 699 0
-700 -698 0
c Var 'variant_fields_00001_00006_00001' order represents '7' with '701'
-699 701 0
c Var 'variant_fields_00001_00006_00001' direct represents '7' with '702'
699 -701 702 0
-702 701 0
-702 -699 0
c Var 'variant_fields_00001_00006_00001' direct represents '8' with '-701'
698 700 702 -701 0
c Encoding variable: variant_fields_00001_00006_00002 with domain: int(2..3,5..9) (representing constraint )
c Both direct and order encoding.
c Var 'variant_fields_00001_00006_00002' order represents '2' with '703'
c Var 'variant_fields_00001_00006_00002' direct represents '2' with '703'
c Var 'variant_fields_00001_00006_00002' order represents '3' with '704'
-703 704 0
c Var 'variant_fields_00001_00006_00002' direct represents '3' with '705'
703 -704 705 0
-705 704 0
-705 -703 0
c Var 'variant_fields_00001_00006_00002' order represents '5' with '706'
-704 706 0
c Var 'variant_fields_00001_00006_00002' direct represents '5' with '707'
704 -706 707 0
-707 706 0
-707 -704 0
c Var 'variant_fields_00001_00006_00002' order represents '6' with '708'
-706 708 0
c Var 'variant_fields_00001_00006_00002' direct represents '6' with '709'
706 -708 709 0
-709 708 0
-709 -706 0
c Var 'variant_fields_00001_00006_00002' order represents '7' with '710'
-708 710 0
c Var 'variant_fields_00001_00006_00002' direct represents '7' with '711'
708 -710 711 0
-711 710 0
-711 -708 0
c Var 'variant_fields_00001_00006_00002' order represents '8' with '712'
-710 712 0
c Var 'variant_fields_00001_00006_00002' direct represents '8' with '713'
710 -712 713 0
-713 712 0
-713 -710 0
c Var 'variant_fields_00001_00006_00002' direct represents '9' with '-712'
703 705 707 709 711 713 -712 0
c Encoding variable: variant_fields_00001_00006_00003 with domain: int(2..3,5..9) (representing constraint )
c Both direct and order encoding.
c Var 'variant_fields_00001_00006_00003' order represents '2' with '714'
c Var 'variant_fields_00001_00006_00003' direct represents '2' with '714'
c Var 'variant_fields_00001_00006_00003' order represents '3' with '715'
-714 715 0
c Var 'variant_fields_00001_00006_00003' direct represents '3' with '716'
714 -715 716 0
-716 715 0
-716 -714 0
c Var 'variant_fields_00001_00006_00003' order represents '5' with '717'
-715 717 0
c Var 'variant_fields_00001_00006_00003' direct represents '5' with '718'
715 -717 718 0
-718 717 0
-718 -715 0
c Var 'variant_fields_00001_00006_00003' order represents '6' with '719'
-717 719 0
c Var 'variant_fields_00001_00006_00003' direct represents '6' with '720'
717 -719 720 0
-720 719 0
-720 -717 0
c Var 'variant_fields_00001_00006_00003' order represents '7' with '721'
-719 721 0
c Var 'variant_fields_00001_00006_00003' direct represents '7' with '722'
719 -721 722 0
-722 721 0
-722 -719 0
c Var 'variant_fields_00001_00006_00003' order represents '8' with '723'
-721 723 0
c Var 'variant_fields_00001_00006_00003' direct represents '8' with '724'
721 -723 724 0
-724 723 0
-724 -721 0
c Var 'variant_fields_00001_00006_00003' direct represents '9' with '-723'
714 716 718 720 722 724 -723 0
c Encoding variable: variant_fields_00001_00006_00004 with domain: int(4,6..8) (representing constraint )
c Both direct and order encoding.
c Var 'variant_fields_00001_00006_00004' order represents '4' with '725'
c Var 'variant_fields_00001_00006_00004' direct represents '4' with '725'
c Var 'variant_fields_00001_00006_00004' order represents '6' with '726'
-725 726 0
c Var 'variant_fields_00001_00006_00004' direct represents '6' with '727'
725 -726 727 0
-727 726 0
-727 -725 0
c Var 'variant_fields_00001_00006_00004' order represents '7' with '728'
-726 728 0
c Var 'variant_fields_00001_00006_00004' direct represents '7' with '729'
726 -728 729 0
-729 728 0
-729 -726 0
c Var 'variant_fields_00001_00006_00004' direct represents '8' with '-728'
725 727 729 -728 0
c Encoding variable: variant_fields_00001_00006_00005 with domain: int(1..4,6..8) (representing constraint )
c Both direct and order encoding.
c Var 'variant_fields_00001_00006_00005' order represents '1' with '730'
c Var 'variant_fields_00001_00006_00005' direct represents '1' with '730'
c Var 'variant_fields_00001_00006_00005' order represents '2' with '731'
-730 731 0
c Var 'variant_fields_00001_00006_00005' direct represents '2' with '732'
730 -731 732 0
-732 731 0
-732 -730 0
c Var 'variant_fields_00001_00006_00005' order represents '3' with '733'
-731 733 0
c Var 'variant_fields_00001_00006_00005' direct represents '3' with '734'
731 -733 734 0
-734 733 0
-734 -731 0
c Var 'variant_fields_00001_00006_00005' order represents '4' with '735'
-733 735 0
c Var 'variant_fields_00001_00006_00005' direct represents '4' with '736'
733 -735 736 0
-736 735 0
-736 -733 0
c Var 'variant_fields_00001_00006_00005' order represents '6' with '737'
-735 737 0
c Var 'variant_fields_00001_00006_00005' direct represents '6' with '738'
735 -737 738 0
-738 737 0
-738 -735 0
c Var 'variant_fields_00001_00006_00005' order represents '7' with '739'
-737 739 0
c Var 'variant_fields_00001_00006_00005' direct represents '7' with '740'
737 -739 740 0
-740 739 0
-740 -737 0
c Var 'variant_fields_00001_00006_00005' direct represents '8' with '-739'
730 732 734 736 738 740 -739 0
c Encoding variable: variant_fields_00001_00006_00006 with domain: int(1..4,6..8) (representing constraint )
c Direct encoding.
c Var 'variant_fields_00001_00006_00006' direct represents '1' with '741'
c Var 'variant_fields_00001_00006_00006' direct represents '2' with '742'
c Var 'variant_fields_00001_00006_00006' direct represents '3' with '743'
c Var 'variant_fields_00001_00006_00006' direct represents '4' with '744'
c Var 'variant_fields_00001_00006_00006' direct represents '6' with '745'
c Var 'variant_fields_00001_00006_00006' direct represents '7' with '746'
c Var 'variant_fields_00001_00006_00006' direct represents '8' with '747'
741 742 743 744 745 746 747 0
-741 748 0
-741 751 0
-742 749 0
-742 751 0
-743 750 0
-743 751 0
-744 748 0
-744 752 0
-745 749 0
-745 752 0
-746 750 0
-746 752 0
-747 748 0
-747 753 0
-748 -749 0
-748 -750 0
-749 -750 0
-751 -752 0
-751 -753 0
-752 -753 0
c Encoding variable: variant_fields_00001_00006_00007 with domain: int(1..2,5,7,9) (representing constraint )
c Direct encoding.
c Var 'variant_fields_00001_00006_00007' direct represents '1' with '754'
c Var 'variant_fields_00001_00006_00007' direct represents '2' with '755'
c Var 'variant_fields_00001_00006_00007' direct represents '5' with '756'
c Var 'variant_fields_00001_00006_00007' direct represents '7' with '757'
c Var 'variant_fields_00001_00006_00007' direct represents '9' with '758'
754 755 756 757 758 0
-754 -755 0
-754 -756 0
-754 -757 0
-754 -758 0
-755 -756 0
-755 -757 0
-755 -758 0
-756 -757 0
-756 -758 0
-757 -758 0
c Encoding variable: variant_fields_00001_00006_00008 with domain: int(1..2,4..5,7,9) (representing constraint )
c Direct encoding.
c Var 'variant_fields_00001_00006_00008' direct represents '1' with '759'
c Var 'variant_fields_00001_00006_00008' direct represents '2' with '760'
c Var 'variant_fields_00001_00006_00008' direct represents '4' with '761'
c Var 'variant_fields_00001_00006_00008' direct represents '5' with '762'
c Var 'variant_fields_00001_00006_00008' direct represents '7' with '763'
c Var 'variant_fields_00001_00006_00008' direct represents '9' with '764'
759 760 761 762 763 764 0
-759 -760 0
-759 -761 0
-759 -762 0
-759 -763 0
-759 -764 0
-760 -761 0
-760 -762 0
-760 -763 0
-760 -764 0
-761 -762 0
-761 -763 0
-761 -764 0
-762 -763 0
-762 -764 0
-763 -764 0
c Encoding variable: variant_fields_00001_00006_00009 with domain: int(5,7) (representing constraint )
c Var 'variant_fields_00001_00006_00009' direct represents '5' with '-765'
c Var 'variant_fields_00001_00006_00009' direct represents '7' with '765'
c Var 'variant_fields_00001_00006_00009' order represents '7' with '1'
c Var 'variant_fields_00001_00006_00009' order represents '5' with '-765'
c Encoding variable: variant_fields_00001_00007_00001 with domain: int(1..2,5..9) (representing constraint )
c Direct encoding.
c Var 'variant_fields_00001_00007_00001' direct represents '1' with '766'
c Var 'variant_fields_00001_00007_00001' direct represents '2' with '767'
c Var 'variant_fields_00001_00007_00001' direct represents '5' with '768'
c Var 'variant_fields_00001_00007_00001' direct represents '6' with '769'
c Var 'variant_fields_00001_00007_00001' direct represents '7' with '770'
c Var 'variant_fields_00001_00007_00001' direct represents '8' with '771'
c Var 'variant_fields_00001_00007_00001' direct represents '9' with '772'
766 767 768 769 770 771 772 0
-766 773 0
-766 776 0
-767 774 0
-767 776 0
-768 775 0
-768 776 0
-769 773 0
-769 777 0
-770 774 0
-770 777 0
-771 775 0
-771 777 0
-772 773 0
-772 778 0
-773 -774 0
-773 -775 0
-774 -775 0
-776 -777 0
-776 -778 0
-777 -778 0
c Encoding variable: variant_fields_00001_00007_00002 with domain: int(2..9) (representing constraint )
c Direct encoding.
c Var 'variant_fields_00001_00007_00002' direct represents '2' with '779'
c Var 'variant_fields_00001_00007_00002' direct represents '3' with '780'
c Var 'variant_fields_00001_00007_00002' direct represents '4' with '781'
c Var 'variant_fields_00001_00007_00002' direct represents '5' with '782'
c Var 'variant_fields_00001_00007_00002' direct represents '6' with '783'
c Var 'variant_fields_00001_00007_00002' direct represents '7' with '784'
c Var 'variant_fields_00001_00007_00002' direct represents '8' with '785'
c Var 'variant_fields_00001_00007_00002' direct represents '9' with '786'
779 780 781 782 783 784 785 786 0
-779 787 0
-779 790 0
-780 788 0
-780 790 0
-781 789 0
-781 790 0
-782 787 0
-782 791 0
-783 788 0
-783 791 0
-784 789 0
-784 791 0
-785 787 0
-785 792 0
-786 788 0
-786 792 0
-787 -788 0
-787 -789 0
-788 -789 0
-790 -791 0
-790 -792 0
-791 -792 0
c Encoding variable: variant_fields_00001_00007_00003 with domain: int(2..9) (representing constraint )
c Direct encoding.
c Var 'variant_fields_00001_00007_00003' direct represents '2' with '793'
c Var 'variant_fields_00001_00007_00003' direct represents '3' with '794'
c Var 'variant_fields_00001_00007_00003' direct represents '4' with '795'
c Var 'variant_fields_00001_00007_00003' direct represents '5' with '796'
c Var 'variant_fields_00001_00007_00003' direct represents '6' with '797'
c Var 'variant_fields_00001_00007_00003' direct represents '7' with '798'
c Var 'variant_fields_00001_00007_00003' direct represents '8' with '799'
c Var 'variant_fields_00001_00007_00003' direct represents '9' with '800'
793 794 795 796 797 798 799 800 0
-793 801 0
-793 804 0
-794 802 0
-794 804 0
-795 803 0
-795 804 0
-796 801 0
-796 805 0
-797 802 0
-797 805 0
-798 803 0
-798 805 0
-799 801 0
-799 806 0
-800 802 0
-800 806 0
-801 -802 0
-801 -803 0
-802 -803 0
-804 -805 0
-804 -806 0
-805 -806 0
c Encoding variable: variant_fields_00001_00007_00004 with domain: int(1,4,6..7) (representing constraint )
c Direct encoding.
c Var 'variant_fields_00001_00007_00004' direct represents '1' with '807'
c Var 'variant_fields_00001_00007_00004' direct represents '4' with '808'
c Var 'variant_fields_00001_00007_00004' direct represents '6' with '809'
c Var 'variant_fields_00001_00007_00004' direct represents '7' with '810'
807 808 809 810 0
-807 -808 0
-807 -809 0
-807 -810 0
-808 -809 0
-808 -810 0
-809 -810 0
c Encoding variable: variant_fields_00001_00007_00005 with domain: int(2,4..9) (representing constraint )
c Direct encoding.
c Var 'variant_fields_00001_00007_00005' direct represents '2' with '811'
c Var 'variant_fields_00001_00007_00005' direct represents '4' with '812'
c Var 'variant_fields_00001_00007_00005' direct represents '5' with '813'
c Var 'variant_fields_00001_00007_00005' direct represents '6' with '814'
c Var 'variant_fields_00001_00007_00005' direct represents '7' with '815'
c Var 'variant_fields_00001_00007_00005' direct represents '8' with '816'
c Var 'variant_fields_00001_00007_00005' direct represents '9' with '817'
811 812 813 814 815 816 817 0
-811 818 0
-811 821 0
-812 819 0
-812 821 0
-813 820 0
-813 821 0
-814 818 0
-814 822 0
-815 819 0
-815 822 0
-816 820 0
-816 822 0
-817 818 0
-817 823 0
-818 -819 0
-818 -820 0
-819 -820 0
-821 -822 0
-821 -823 0
-822 -823 0
c Encoding variable: variant_fields_00001_00007_00006 with domain: int(2,4..9) (representing constraint )
c Direct encoding.
c Var 'variant_fields_00001_00007_00006' direct represents '2' with '824'
c Var 'variant_fields_00001_00007_00006' direct represents '4' with '825'
c Var 'variant_fields_00001_00007_00006' direct represents '5' with '826'
c Var 'variant_fields_00001_00007_00006' direct represents '6' with '827'
c Var 'variant_fields_00001_00007_00006' direct represents '7' with '828'
c Var 'variant_fields_00001_00007_00006' direct represents '8' with '829'
c Var 'variant_fields_00001_00007_00006' direct represents '9' with '830'
824 825 826 827 828 829 830 0
-824 831 0
-824 834 0
-825 832 0
-825 834 0
-826 833 0
-826 834 0
-827 831 0
-827 835 0
-828 832 0
-828 835 0
-829 833 0
-829 835 0
-830 831 0
-830 836 0
-831 -832 0
-831 -833 0
-832 -833 0
-834 -835 0
-834 -836 0
-835 -836 0
c Encoding variable: variant_fields_00001_00007_00007 with domain: int(1..2,5,7..9) (representing constraint )
c Direct encoding.
c Var 'variant_fields_00001_00007_00007' direct represents '1' with '837'
c Var 'variant_fields_00001_00007_00007' direct represents '2' with '838'
c Var 'variant_fields_00001_00007_00007' direct represents '5' with '839'
c Var 'variant_fields_00001_00007_00007' direct represents '7' with '840'
c Var 'variant_fields_00001_00007_00007' direct represents '8' with '841'
c Var 'variant_fields_00001_00007_00007' direct represents '9' with '842'
837 838 839 840 841 842 0
-837 -838 0
-837 -839 0
-837 -840 0
-837 -841 0
-837 -842 0
-838 -839 0
-838 -840 0
-838 -841 0
-838 -842 0
-839 -840 0
-839 -841 0
-839 -842 0
-840 -841 0
-840 -842 0
-841 -842 0
c Encoding variable: variant_fields_00001_00007_00008 with domain: int(1..3,5,7,9) (representing constraint )
c Direct encoding.
c Var 'variant_fields_00001_00007_00008' direct represents '1' with '843'
c Var 'variant_fields_00001_00007_00008' direct represents '2' with '844'
c Var 'variant_fields_00001_00007_00008' direct represents '3' with '845'
c Var 'variant_fields_00001_00007_00008' direct represents '5' with '846'
c Var 'variant_fields_00001_00007_00008' direct represents '7' with '847'
c Var 'variant_fields_00001_00007_00008' direct represents '9' with '848'
843 844 845 846 847 848 0
-843 -844 0
-843 -845 0
-843 -846 0
-843 -847 0
-843 -848 0
-844 -845 0
-844 -846 0
-844 -847 0
-844 -848 0
-845 -846 0
-845 -847 0
-845 -848 0
-846 -847 0
-846 -848 0
-847 -848 0
c Encoding variable: variant_fields_00001_00007_00009 with domain: int(1,5..9) (representing constraint )
c Direct encoding.
c Var 'variant_fields_00001_00007_00009' direct represents '1' with '849'
c Var 'variant_fields_00001_00007_00009' direct represents '5' with '850'
c Var 'variant_fields_00001_00007_00009' direct represents '6' with '851'
c Var 'variant_fields_00001_00007_00009' direct represents '7' with '852'
c Var 'variant_fields_00001_00007_00009' direct represents '8' with '853'
c Var 'variant_fields_00001_00007_00009' direct represents '9' with '854'
849 850 851 852 853 854 0
-849 -850 0
-849 -851 0
-849 -852 0
-849 -853 0
-849 -854 0
-850 -851 0
-850 -852 0
-850 -853 0
-850 -854 0
-851 -852 0
-851 -853 0
-851 -854 0
-852 -853 0
-852 -854 0
-853 -854 0
c Encoding variable: variant_fields_00001_00008_00001 with domain: int(5..8) (representing constraint )
c Both direct and order encoding.
c Var 'variant_fields_00001_00008_00001' order represents '5' with '855'
c Var 'variant_fields_00001_00008_00001' direct represents '5' with '855'
c Var 'variant_fields_00001_00008_00001' order represents '6' with '856'
-855 856 0
c Var 'variant_fields_00001_00008_00001' direct represents '6' with '857'
855 -856 857 0
-857 856 0
-857 -855 0
c Var 'variant_fields_00001_00008_00001' order represents '7' with '858'
-856 858 0
c Var 'variant_fields_00001_00008_00001' direct represents '7' with '859'
856 -858 859 0
-859 858 0
-859 -856 0
c Var 'variant_fields_00001_00008_00001' direct represents '8' with '-858'
855 857 859 -858 0
c Encoding variable: variant_fields_00001_00008_00002 with domain: int(2..9) (representing constraint )
c Both direct and order encoding.
c Var 'variant_fields_00001_00008_00002' order represents '2' with '860'
c Var 'variant_fields_00001_00008_00002' direct represents '2' with '860'
c Var 'variant_fields_00001_00008_00002' order represents '3' with '861'
-860 861 0
c Var 'variant_fields_00001_00008_00002' direct represents '3' with '862'
860 -861 862 0
-862 861 0
-862 -860 0
c Var 'variant_fields_00001_00008_00002' order represents '4' with '863'
-861 863 0
c Var 'variant_fields_00001_00008_00002' direct represents '4' with '864'
861 -863 864 0
-864 863 0
-864 -861 0
c Var 'variant_fields_00001_00008_00002' order represents '5' with '865'
-863 865 0
c Var 'variant_fields_00001_00008_00002' direct represents '5' with '866'
863 -865 866 0
-866 865 0
-866 -863 0
c Var 'variant_fields_00001_00008_00002' order represents '6' with '867'
-865 867 0
c Var 'variant_fields_00001_00008_00002' direct represents '6' with '868'
865 -867 868 0
-868 867 0
-868 -865 0
c Var 'variant_fields_00001_00008_00002' order represents '7' with '869'
-867 869 0
c Var 'variant_fields_00001_00008_00002' direct represents '7' with '870'
867 -869 870 0
-870 869 0
-870 -867 0
c Var 'variant_fields_00001_00008_00002' order represents '8' with '871'
-869 871 0
c Var 'variant_fields_00001_00008_00002' direct represents '8' with '872'
869 -871 872 0
-872 871 0
-872 -869 0
c Var 'variant_fields_00001_00008_00002' direct represents '9' with '-871'
860 862 864 866 868 870 872 -871 0
c Encoding variable: variant_fields_00001_00008_00003 with domain: int(2..9) (representing constraint )
c Both direct and order encoding.
c Var 'variant_fields_00001_00008_00003' order represents '2' with '873'
c Var 'variant_fields_00001_00008_00003' direct represents '2' with '873'
c Var 'variant_fields_00001_00008_00003' order represents '3' with '874'
-873 874 0
c Var 'variant_fields_00001_00008_00003' direct represents '3' with '875'
873 -874 875 0
-875 874 0
-875 -873 0
c Var 'variant_fields_00001_00008_00003' order represents '4' with '876'
-874 876 0
c Var 'variant_fields_00001_00008_00003' direct represents '4' with '877'
874 -876 877 0
-877 876 0
-877 -874 0
c Var 'variant_fields_00001_00008_00003' order represents '5' with '878'
-876 878 0
c Var 'variant_fields_00001_00008_00003' direct represents '5' with '879'
876 -878 879 0
-879 878 0
-879 -876 0
c Var 'variant_fields_00001_00008_00003' order represents '6' with '880'
-878 880 0
c Var 'variant_fields_00001_00008_00003' direct represents '6' with '881'
878 -880 881 0
-881 880 0
-881 -878 0
c Var 'variant_fields_00001_00008_00003' order represents '7' with '882'
-880 882 0
c Var 'variant_fields_00001_00008_00003' direct represents '7' with '883'
880 -882 883 0
-883 882 0
-883 -880 0
c Var 'variant_fields_00001_00008_00003' order represents '8' with '884'
-882 884 0
c Var 'variant_fields_00001_00008_00003' direct represents '8' with '885'
882 -884 885 0
-885 884 0
-885 -882 0
c Var 'variant_fields_00001_00008_00003' direct represents '9' with '-884'
873 875 877 879 881 883 885 -884 0
c Encoding variable: variant_fields_00001_00008_00004 with domain: int(1,4,6..7) (representing constraint )
c Both direct and order encoding.
c Var 'variant_fields_00001_00008_00004' order represents '1' with '886'
c Var 'variant_fields_00001_00008_00004' direct represents '1' with '886'
c Var 'variant_fields_00001_00008_00004' order represents '4' with '887'
-886 887 0
c Var 'variant_fields_00001_00008_00004' direct represents '4' with '888'
886 -887 888 0
-888 887 0
-888 -886 0
c Var 'variant_fields_00001_00008_00004' order represents '6' with '889'
-887 889 0
c Var 'variant_fields_00001_00008_00004' direct represents '6' with '890'
887 -889 890 0
-890 889 0
-890 -887 0
c Var 'variant_fields_00001_00008_00004' direct represents '7' with '-889'
886 888 890 -889 0
c Encoding variable: variant_fields_00001_00008_00005 with domain: int(2,4..9) (representing constraint )
c Both direct and order encoding.
c Var 'variant_fields_00001_00008_00005' order represents '2' with '891'
c Var 'variant_fields_00001_00008_00005' direct represents '2' with '891'
c Var 'variant_fields_00001_00008_00005' order represents '4' with '892'
-891 892 0
c Var 'variant_fields_00001_00008_00005' direct represents '4' with '893'
891 -892 893 0
-893 892 0
-893 -891 0
c Var 'variant_fields_00001_00008_00005' order represents '5' with '894'
-892 894 0
c Var 'variant_fields_00001_00008_00005' direct represents '5' with '895'
892 -894 895 0
-895 894 0
-895 -892 0
c Var 'variant_fields_00001_00008_00005' order represents '6' with '896'
-894 896 0
c Var 'variant_fields_00001_00008_00005' direct represents '6' with '897'
894 -896 897 0
-897 896 0
-897 -894 0
c Var 'variant_fields_00001_00008_00005' order represents '7' with '898'
-896 898 0
c Var 'variant_fields_00001_00008_00005' direct represents '7' with '899'
896 -898 899 0
-899 898 0
-899 -896 0
c Var 'variant_fields_00001_00008_00005' order represents '8' with '900'
-898 900 0
c Var 'variant_fields_00001_00008_00005' direct represents '8' with '901'
898 -900 901 0
-901 900 0
-901 -898 0
c Var 'variant_fields_00001_00008_00005' direct represents '9' with '-900'
891 893 895 897 899 901 -900 0
c Encoding variable: variant_fields_00001_00008_00006 with domain: int(2,4..9) (representing constraint )
c Direct encoding.
c Var 'variant_fields_00001_00008_00006' direct represents '2' with '902'
c Var 'variant_fields_00001_00008_00006' direct represents '4' with '903'
c Var 'variant_fields_00001_00008_00006' direct represents '5' with '904'
c Var 'variant_fields_00001_00008_00006' direct represents '6' with '905'
c Var 'variant_fields_00001_00008_00006' direct represents '7' with '906'
c Var 'variant_fields_00001_00008_00006' direct represents '8' with '907'
c Var 'variant_fields_00001_00008_00006' direct represents '9' with '908'
902 903 904 905 906 907 908 0
-902 909 0
-902 912 0
-903 910 0
-903 912 0
-904 911 0
-904 912 0
-905 909 0
-905 913 0
-906 910 0
-906 913 0
-907 911 0
-907 913 0
-908 909 0
-908 914 0
-909 -910 0
-909 -911 0
-910 -911 0
-912 -913 0
-912 -914 0
-913 -914 0
c Encoding variable: variant_fields_00001_00008_00007 with domain: int(1..2,5,7..9) (representing constraint )
c Direct encoding.
c Var 'variant_fields_00001_00008_00007' direct represents '1' with '915'
c Var 'variant_fields_00001_00008_00007' direct represents '2' with '916'
c Var 'variant_fields_00001_00008_00007' direct represents '5' with '917'
c Var 'variant_fields_00001_00008_00007' direct represents '7' with '918'
c Var 'variant_fields_00001_00008_00007' direct represents '8' with '919'
c Var 'variant_fields_00001_00008_00007' direct represents '9' with '920'
915 916 917 918 919 920 0
-915 -916 0
-915 -917 0
-915 -918 0
-915 -919 0
-915 -920 0
-916 -917 0
-916 -918 0
-916 -919 0
-916 -920 0
-917 -918 0
-917 -919 0
-917 -920 0
-918 -919 0
-918 -920 0
-919 -920 0
c Encoding variable: variant_fields_00001_00008_00008 with domain: int(1..3,5,7,9) (representing constraint )
c Direct encoding.
c Var 'variant_fields_00001_00008_00008' direct represents '1' with '921'
c Var 'variant_fields_00001_00008_00008' direct represents '2' with '922'
c Var 'variant_fields_00001_00008_00008' direct represents '3' with '923'
c Var 'variant_fields_00001_00008_00008' direct represents '5' with '924'
c Var 'variant_fields_00001_00008_00008' direct represents '7' with '925'
c Var 'variant_fields_00001_00008_00008' direct represents '9' with '926'
921 922 923 924 925 926 0
-921 -922 0
-921 -923 0
-921 -924 0
-921 -925 0
-921 -926 0
-922 -923 0
-922 -924 0
-922 -925 0
-922 -926 0
-923 -924 0
-923 -925 0
-923 -926 0
-924 -925 0
-924 -926 0
-925 -926 0
c Encoding variable: variant_fields_00001_00008_00009 with domain: int(5..8) (representing constraint )
c Direct encoding.
c Var 'variant_fields_00001_00008_00009' direct represents '5' with '927'
c Var 'variant_fields_00001_00008_00009' direct represents '6' with '928'
c Var 'variant_fields_00001_00008_00009' direct represents '7' with '929'
c Var 'variant_fields_00001_00008_00009' direct represents '8' with '930'
927 928 929 930 0
-927 -928 0
-927 -929 0
-927 -930 0
-928 -929 0
-928 -930 0
-929 -930 0
c Encoding variable: variant_fields_00001_00009_00001 with domain: int(1..2,5..9) (representing constraint )
c Direct encoding.
c Var 'variant_fields_00001_00009_00001' direct represents '1' with '931'
c Var 'variant_fields_00001_00009_00001' direct represents '2' with '932'
c Var 'variant_fields_00001_00009_00001' direct represents '5' with '933'
c Var 'variant_fields_00001_00009_00001' direct represents '6' with '934'
c Var 'variant_fields_00001_00009_00001' direct represents '7' with '935'
c Var 'variant_fields_00001_00009_00001' direct represents '8' with '936'
c Var 'variant_fields_00001_00009_00001' direct represents '9' with '937'
931 932 933 934 935 936 937 0
-931 938 0
-931 941 0
-932 939 0
-932 941 0
-933 940 0
-933 941 0
-934 938 0
-934 942 0
-935 939 0
-935 942 0
-936 940 0
-936 942 0
-937 938 0
-937 943 0
-938 -939 0
-938 -940 0
-939 -940 0
-941 -942 0
-941 -943 0
-942 -943 0
c Encoding variable: variant_fields_00001_00009_00002 with domain: int(5..6) (representing constraint )
c Var 'variant_fields_00001_00009_00002' direct represents '5' with '-944'
c Var 'variant_fields_00001_00009_00002' direct represents '6' with '944'
c Var 'variant_fields_00001_00009_00002' order represents '6' with '1'
c Var 'variant_fields_00001_00009_00002' order represents '5' with '-944'
c Encoding variable: variant_fields_00001_00009_00003 with domain: int(2,5..9) (representing constraint )
c Direct encoding.
c Var 'variant_fields_00001_00009_00003' direct represents '2' with '945'
c Var 'variant_fields_00001_00009_00003' direct represents '5' with '946'
c Var 'variant_fields_00001_00009_00003' direct represents '6' with '947'
c Var 'variant_fields_00001_00009_00003' direct represents '7' with '948'
c Var 'variant_fields_00001_00009_00003' direct represents '8' with '949'
c Var 'variant_fields_00001_00009_00003' direct represents '9' with '950'
945 946 947 948 949 950 0
-945 -946 0
-945 -947 0
-945 -948 0
-945 -949 0
-945 -950 0
-946 -947 0
-946 -948 0
-946 -949 0
-946 -950 0
-947 -948 0
-947 -949 0
-947 -950 0
-948 -949 0
-948 -950 0
-949 -950 0
c Encoding variable: variant_fields_00001_00009_00004 with domain: int(3) (representing constraint )
c Var 'variant_fields_00001_00009_00004' direct represents '3' with '951'
951 0
c Encoding variable: variant_fields_00001_00009_00005 with domain: int(2,5..9) (representing constraint )
c Direct encoding.
c Var 'variant_fields_00001_00009_00005' direct represents '2' with '952'
c Var 'variant_fields_00001_00009_00005' direct represents '5' with '953'
c Var 'variant_fields_00001_00009_00005' direct represents '6' with '954'
c Var 'variant_fields_00001_00009_00005' direct represents '7' with '955'
c Var 'variant_fields_00001_00009_00005' direct represents '8' with '956'
c Var 'variant_fields_00001_00009_00005' direct represents '9' with '957'
952 953 954 955 956 957 0
-952 -953 0
-952 -954 0
-952 -955 0
-952 -956 0
-952 -957 0
-953 -954 0
-953 -955 0
-953 -956 0
-953 -957 0
-954 -955 0
-954 -956 0
-954 -957 0
-955 -956 0
-955 -957 0
-956 -957 0
c Encoding variable: variant_fields_00001_00009_00006 with domain: int(2,5..9) (representing constraint )
c Direct encoding.
c Var 'variant_fields_00001_00009_00006' direct represents '2' with '958'
c Var 'variant_fields_00001_00009_00006' direct represents '5' with '959'
c Var 'variant_fields_00001_00009_00006' direct represents '6' with '960'
c Var 'variant_fields_00001_00009_00006' direct represents '7' with '961'
c Var 'variant_fields_00001_00009_00006' direct represents '8' with '962'
c Var 'variant_fields_00001_00009_00006' direct represents '9' with '963'
958 959 960 961 962 963 0
-958 -959 0
-958 -960 0
-958 -961 0
-958 -962 0
-958 -963 0
-959 -960 0
-959 -961 0
-959 -962 0
-959 -963 0
-960 -961 0
-960 -962 0
-960 -963 0
-961 -962 0
-961 -963 0
-962 -963 0
c Encoding variable: variant_fields_00001_00009_00007 with domain: int(4) (representing constraint )
c Var 'variant_fields_00001_00009_00007' direct represents '4' with '964'
964 0
c Encoding variable: variant_fields_00001_00009_00008 with domain: int(1..2,5,7,9) (representing constraint )
c Direct encoding.
c Var 'variant_fields_00001_00009_00008' direct represents '1' with '965'
c Var 'variant_fields_00001_00009_00008' direct represents '2' with '966'
c Var 'variant_fields_00001_00009_00008' direct represents '5' with '967'
c Var 'variant_fields_00001_00009_00008' direct represents '7' with '968'
c Var 'variant_fields_00001_00009_00008' direct represents '9' with '969'
965 966 967 968 969 0
-965 -966 0
-965 -967 0
-965 -968 0
-965 -969 0
-966 -967 0
-966 -968 0
-966 -969 0
-967 -968 0
-967 -969 0
-968 -969 0
c Encoding variable: variant_fields_00001_00009_00009 with domain: int(1,5..9) (representing constraint )
c Direct encoding.
c Var 'variant_fields_00001_00009_00009' direct represents '1' with '970'
c Var 'variant_fields_00001_00009_00009' direct represents '5' with '971'
c Var 'variant_fields_00001_00009_00009' direct represents '6' with '972'
c Var 'variant_fields_00001_00009_00009' direct represents '7' with '973'
c Var 'variant_fields_00001_00009_00009' direct represents '8' with '974'
c Var 'variant_fields_00001_00009_00009' direct represents '9' with '975'
970 971 972 973 974 975 0
-970 -971 0
-970 -972 0
-970 -973 0
-970 -974 0
-970 -975 0
-971 -972 0
-971 -973 0
-971 -974 0
-971 -975 0
-972 -973 0
-972 -974 0
-972 -975 0
-973 -974 0
-973 -975 0
-974 -975 0
c Encoding variable: variant_fields_00002_00001_00001 with domain: int(5..9) (representing constraint )
c Direct encoding.
c Var 'variant_fields_00002_00001_00001' direct represents '5' with '976'
c Var 'variant_fields_00002_00001_00001' direct represents '6' with '977'
c Var 'variant_fields_00002_00001_00001' direct represents '7' with '978'
c Var 'variant_fields_00002_00001_00001' direct represents '8' with '979'
c Var 'variant_fields_00002_00001_00001' direct represents '9' with '980'
976 977 978 979 980 0
-976 -977 0
-976 -978 0
-976 -979 0
-976 -980 0
-977 -978 0
-977 -979 0
-977 -980 0
-978 -979 0
-978 -980 0
-979 -980 0
c Encoding variable: variant_fields_00002_00001_00002 with domain: int(3) (representing constraint )
c Var 'variant_fields_00002_00001_00002' direct represents '3' with '981'
981 0
c Encoding variable: variant_fields_00002_00001_00003 with domain: int(2,5..9) (representing constraint )
c Direct encoding.
c Var 'variant_fields_00002_00001_00003' direct represents '2' with '982'
c Var 'variant_fields_00002_00001_00003' direct represents '5' with '983'
c Var 'variant_fields_00002_00001_00003' direct represents '6' with '984'
c Var 'variant_fields_00002_00001_00003' direct represents '7' with '985'
c Var 'variant_fields_00002_00001_00003' direct represents '8' with '986'
c Var 'variant_fields_00002_00001_00003' direct represents '9' with '987'
982 983 984 985 986 987 0
-982 -983 0
-982 -984 0
-982 -985 0
-982 -986 0
-982 -987 0
-983 -984 0
-983 -985 0
-983 -986 0
-983 -987 0
-984 -985 0
-984 -986 0
-984 -987 0
-985 -986 0
-985 -987 0
-986 -987 0
c Encoding variable: variant_fields_00002_00001_00004 with domain: int(4) (representing constraint )
c Var 'variant_fields_00002_00001_00004' direct represents '4' with '988'
988 0
c Encoding variable: variant_fields_00002_00001_00005 with domain: int(2,5..9) (representing constraint )
c Direct encoding.
c Var 'variant_fields_00002_00001_00005' direct represents '2' with '989'
c Var 'variant_fields_00002_00001_00005' direct represents '5' with '990'
c Var 'variant_fields_00002_00001_00005' direct represents '6' with '991'
c Var 'variant_fields_00002_00001_00005' direct represents '7' with '992'
c Var 'variant_fields_00002_00001_00005' direct represents '8' with '993'
c Var 'variant_fields_00002_00001_00005' direct represents '9' with '994'
989 990 991 992 993 994 0
-989 -990 0
-989 -991 0
-989 -992 0
-989 -993 0
-989 -994 0
-990 -991 0
-990 -992 0
-990 -993 0
-990 -994 0
-991 -992 0
-991 -993 0
-991 -994 0
-992 -993 0
-992 -994 0
-993 -994 0
c Encoding variable: variant_fields_00002_00001_00006 with domain: int(5..8) (representing constraint )
c Direct encoding.
c Var 'variant_fields_00002_00001_00006' direct represents '5' with '995'
c Var 'variant_fields_00002_00001_00006' direct represents '6' with '996'
c Var 'variant_fields_00002_00001_00006' direct represents '7' with '997'
c Var 'variant_fields_00002_00001_00006' direct represents '8' with '998'
995 996 997 998 0
-995 -996 0
-995 -997 0
-995 -998 0
-996 -997 0
-996 -998 0
-997 -998 0
c Encoding variable: variant_fields_00002_00001_00007 with domain: int(1..2,5..9) (representing constraint )
c Direct encoding.
c Var 'variant_fields_00002_00001_00007' direct represents '1' with '999'
c Var 'variant_fields_00002_00001_00007' direct represents '2' with '1000'
c Var 'variant_fields_00002_00001_00007' direct represents '5' with '1001'
c Var 'variant_fields_00002_00001_00007' direct represents '6' with '1002'
c Var 'variant_fields_00002_00001_00007' direct represents '7' with '1003'
c Var 'variant_fields_00002_00001_00007' direct represents '8' with '1004'
c Var 'variant_fields_00002_00001_00007' direct represents '9' with '1005'
999 1000 1001 1002 1003 1004 1005 0
-999 1006 0
-999 1009 0
-1000 1007 0
-1000 1009 0
-1001 1008 0
-1001 1009 0
-1002 1006 0
-1002 1010 0
-1003 1007 0
-1003 1010 0
-1004 1008 0
-1004 1010 0
-1005 1006 0
-1005 1011 0
-1006 -1007 0
-1006 -1008 0
-1007 -1008 0
-1009 -1010 0
-1009 -1011 0
-1010 -1011 0
c Encoding variable: variant_fields_00002_00001_00008 with domain: int(5..8) (representing constraint )
c Direct encoding.
c Var 'variant_fields_00002_00001_00008' direct represents '5' with '1012'
c Var 'variant_fields_00002_00001_00008' direct represents '6' with '1013'
c Var 'variant_fields_00002_00001_00008' direct represents '7' with '1014'
c Var 'variant_fields_00002_00001_00008' direct represents '8' with '1015'
1012 1013 1014 1015 0
-1012 -1013 0
-1012 -1014 0
-1012 -1015 0
-1013 -1014 0
-1013 -1015 0
-1014 -1015 0
c Encoding variable: variant_fields_00002_00001_00009 with domain: int(1..2,5..9) (representing constraint )
c Direct encoding.
c Var 'variant_fields_00002_00001_00009' direct represents '1' with '1016'
c Var 'variant_fields_00002_00001_00009' direct represents '2' with '1017'
c Var 'variant_fields_00002_00001_00009' direct represents '5' with '1018'
c Var 'variant_fields_00002_00001_00009' direct represents '6' with '1019'
c Var 'variant_fields_00002_00001_00009' direct represents '7' with '1020'
c Var 'variant_fields_00002_00001_00009' direct represents '8' with '1021'
c Var 'variant_fields_00002_00001_00009' direct represents '9' with '1022'
1016 1017 1018 1019 1020 1021 1022 0
-1016 1023 0
-1016 1026 0
-1017 1024 0
-1017 1026 0
-1018 1025 0
-1018 1026 0
-1019 1023 0
-1019 1027 0
-1020 1024 0
-1020 1027 0
-1021 1025 0
-1021 1027 0
-1022 1023 0
-1022 1028 0
-1023 -1024 0
-1023 -1025 0
-1024 -1025 0
-1026 -1027 0
-1026 -1028 0
-1027 -1028 0
c Encoding variable: variant_fields_00002_00002_00001 with domain: int(5..7) (representing constraint )
c Both direct and order encoding.
c Var 'variant_fields_00002_00002_00001' order represents '5' with '1029'
c Var 'variant_fields_00002_00002_00001' direct represents '5' with '1029'
c Var 'variant_fields_00002_00002_00001' order represents '6' with '1030'
-1029 1030 0
c Var 'variant_fields_00002_00002_00001' direct represents '6' with '1031'
1029 -1030 1031 0
-1031 1030 0
-1031 -1029 0
c Var 'variant_fields_00002_00002_00001' direct represents '7' with '-1030'
1029 1031 -1030 0
c Encoding variable: variant_fields_00002_00002_00002 with domain: int(1,4) (representing constraint )
c Var 'variant_fields_00002_00002_00002' direct represents '1' with '-1032'
c Var 'variant_fields_00002_00002_00002' direct represents '4' with '1032'
c Var 'variant_fields_00002_00002_00002' order represents '4' with '1'
c Var 'variant_fields_00002_00002_00002' order represents '1' with '-1032'
c Encoding variable: variant_fields_00002_00002_00003 with domain: int(2,5..9) (representing constraint )
c Both direct and order encoding.
c Var 'variant_fields_00002_00002_00003' order represents '2' with '1033'
c Var 'variant_fields_00002_00002_00003' direct represents '2' with '1033'
c Var 'variant_fields_00002_00002_00003' order represents '5' with '1034'
-1033 1034 0
c Var 'variant_fields_00002_00002_00003' direct represents '5' with '1035'
1033 -1034 1035 0
-1035 1034 0
-1035 -1033 0
c Var 'variant_fields_00002_00002_00003' order represents '6' with '1036'
-1034 1036 0
c Var 'variant_fields_00002_00002_00003' direct represents '6' with '1037'
1034 -1036 1037 0
-1037 1036 0
-1037 -1034 0
c Var 'variant_fields_00002_00002_00003' order represents '7' with '1038'
-1036 1038 0
c Var 'variant_fields_00002_00002_00003' direct represents '7' with '1039'
1036 -1038 1039 0
-1039 1038 0
-1039 -1036 0
c Var 'variant_fields_00002_00002_00003' order represents '8' with '1040'
-1038 1040 0
c Var 'variant_fields_00002_00002_00003' direct represents '8' with '1041'
1038 -1040 1041 0
-1041 1040 0
-1041 -1038 0
c Var 'variant_fields_00002_00002_00003' direct represents '9' with '-1040'
1033 1035 1037 1039 1041 -1040 0
c Encoding variable: variant_fields_00002_00002_00004 with domain: int(1..2,7) (representing constraint )
c Both direct and order encoding.
c Var 'variant_fields_00002_00002_00004' order represents '1' with '1042'
c Var 'variant_fields_00002_00002_00004' direct represents '1' with '1042'
c Var 'variant_fields_00002_00002_00004' order represents '2' with '1043'
-1042 1043 0
c Var 'variant_fields_00002_00002_00004' direct represents '2' with '1044'
1042 -1043 1044 0
-1044 1043 0
-1044 -1042 0
c Var 'variant_fields_00002_00002_00004' direct represents '7' with '-1043'
1042 1044 -1043 0
c Encoding variable: variant_fields_00002_00002_00005 with domain: int(2..3,5..9) (representing constraint )
c Both direct and order encoding.
c Var 'variant_fields_00002_00002_00005' order represents '2' with '1045'
c Var 'variant_fields_00002_00002_00005' direct represents '2' with '1045'
c Var 'variant_fields_00002_00002_00005' order represents '3' with '1046'
-1045 1046 0
c Var 'variant_fields_00002_00002_00005' direct represents '3' with '1047'
1045 -1046 1047 0
-1047 1046 0
-1047 -1045 0
c Var 'variant_fields_00002_00002_00005' order represents '5' with '1048'
-1046 1048 0
c Var 'variant_fields_00002_00002_00005' direct represents '5' with '1049'
1046 -1048 1049 0
-1049 1048 0
-1049 -1046 0
c Var 'variant_fields_00002_00002_00005' order represents '6' with '1050'
-1048 1050 0
c Var 'variant_fields_00002_00002_00005' direct represents '6' with '1051'
1048 -1050 1051 0
-1051 1050 0
-1051 -1048 0
c Var 'variant_fields_00002_00002_00005' order represents '7' with '1052'
-1050 1052 0
c Var 'variant_fields_00002_00002_00005' direct represents '7' with '1053'
1050 -1052 1053 0
-1053 1052 0
-1053 -1050 0
c Var 'variant_fields_00002_00002_00005' order represents '8' with '1054'
-1052 1054 0
c Var 'variant_fields_00002_00002_00005' direct represents '8' with '1055'
1052 -1054 1055 0
-1055 1054 0
-1055 -1052 0
c Var 'variant_fields_00002_00002_00005' direct represents '9' with '-1054'
1045 1047 1049 1051 1053 1055 -1054 0
c Encoding variable: variant_fields_00002_00002_00006 with domain: int(2..3,5..9) (representing constraint )
c Direct encoding.
c Var 'variant_fields_00002_00002_00006' direct represents '2' with '1056'
c Var 'variant_fields_00002_00002_00006' direct represents '3' with '1057'
c Var 'variant_fields_00002_00002_00006' direct represents '5' with '1058'
c Var 'variant_fields_00002_00002_00006' direct represents '6' with '1059'
c Var 'variant_fields_00002_00002_00006' direct represents '7' with '1060'
c Var 'variant_fields_00002_00002_00006' direct represents '8' with '1061'
c Var 'variant_fields_00002_00002_00006' direct represents '9' with '1062'
1056 1057 1058 1059 1060 1061 1062 0
-1056 1063 0
-1056 1066 0
-1057 1064 0
-1057 1066 0
-1058 1065 0
-1058 1066 0
-1059 1063 0
-1059 1067 0
-1060 1064 0
-1060 1067 0
-1061 1065 0
-1061 1067 0
-1062 1063 0
-1062 1068 0
-1063 -1064 0
-1063 -1065 0
-1064 -1065 0
-1066 -1067 0
-1066 -1068 0
-1067 -1068 0
c Encoding variable: variant_fields_00002_00002_00007 with domain: int(2..9) (representing constraint )
c Direct encoding.
c Var 'variant_fields_00002_00002_00007' direct represents '2' with '1069'
c Var 'variant_fields_00002_00002_00007' direct represents '3' with '1070'
c Var 'variant_fields_00002_00002_00007' direct represents '4' with '1071'
c Var 'variant_fields_00002_00002_00007' direct represents '5' with '1072'
c Var 'variant_fields_00002_00002_00007' direct represents '6' with '1073'
c Var 'variant_fields_00002_00002_00007' direct represents '7' with '1074'
c Var 'variant_fields_00002_00002_00007' direct represents '8' with '1075'
c Var 'variant_fields_00002_00002_00007' direct represents '9' with '1076'
1069 1070 1071 1072 1073 1074 1075 1076 0
-1069 1077 0
-1069 1080 0
-1070 1078 0
-1070 1080 0
-1071 1079 0
-1071 1080 0
-1072 1077 0
-1072 1081 0
-1073 1078 0
-1073 1081 0
-1074 1079 0
-1074 1081 0
-1075 1077 0
-1075 1082 0
-1076 1078 0
-1076 1082 0
-1077 -1078 0
-1077 -1079 0
-1078 -1079 0
-1080 -1081 0
-1080 -1082 0
-1081 -1082 0
c Encoding variable: variant_fields_00002_00002_00008 with domain: int(2..9) (representing constraint )
c Direct encoding.
c Var 'variant_fields_00002_00002_00008' direct represents '2' with '1083'
c Var 'variant_fields_00002_00002_00008' direct represents '3' with '1084'
c Var 'variant_fields_00002_00002_00008' direct represents '4' with '1085'
c Var 'variant_fields_00002_00002_00008' direct represents '5' with '1086'
c Var 'variant_fields_00002_00002_00008' direct represents '6' with '1087'
c Var 'variant_fields_00002_00002_00008' direct represents '7' with '1088'
c Var 'variant_fields_00002_00002_00008' direct represents '8' with '1089'
c Var 'variant_fields_00002_00002_00008' direct represents '9' with '1090'
1083 1084 1085 1086 1087 1088 1089 1090 0
-1083 1091 0
-1083 1094 0
-1084 1092 0
-1084 1094 0
-1085 1093 0
-1085 1094 0
-1086 1091 0
-1086 1095 0
-1087 1092 0
-1087 1095 0
-1088 1093 0
-1088 1095 0
-1089 1091 0
-1089 1096 0
-1090 1092 0
-1090 1096 0
-1091 -1092 0
-1091 -1093 0
-1092 -1093 0
-1094 -1095 0
-1094 -1096 0
-1095 -1096 0
c Encoding variable: variant_fields_00002_00002_00009 with domain: int(5..6) (representing constraint )
c Var 'variant_fields_00002_00002_00009' direct represents '5' with '-1097'
c Var 'variant_fields_00002_00002_00009' direct represents '6' with '1097'
c Var 'variant_fields_00002_00002_00009' order represents '6' with '1'
c Var 'variant_fields_00002_00002_00009' order represents '5' with '-1097'
c Encoding variable: variant_fields_00002_00003_00001 with domain: int(5..9) (representing constraint )
c Direct encoding.
c Var 'variant_fields_00002_00003_00001' direct represents '5' with '1098'
c Var 'variant_fields_00002_00003_00001' direct represents '6' with '1099'
c Var 'variant_fields_00002_00003_00001' direct represents '7' with '1100'
c Var 'variant_fields_00002_00003_00001' direct represents '8' with '1101'
c Var 'variant_fields_00002_00003_00001' direct represents '9' with '1102'
1098 1099 1100 1101 1102 0
-1098 -1099 0
-1098 -1100 0
-1098 -1101 0
-1098 -1102 0
-1099 -1100 0
-1099 -1101 0
-1099 -1102 0
-1100 -1101 0
-1100 -1102 0
-1101 -1102 0
c Encoding variable: variant_fields_00002_00003_00002 with domain: int(1,4) (representing constraint )
c Var 'variant_fields_00002_00003_00002' direct represents '1' with '-1103'
c Var 'variant_fields_00002_00003_00002' direct represents '4' with '1103'
c Var 'variant_fields_00002_00003_00002' order represents '4' with '1'
c Var 'variant_fields_00002_00003_00002' order represents '1' with '-1103'
c Encoding variable: variant_fields_00002_00003_00003 with domain: int(2,5..9) (representing constraint )
c Direct encoding.
c Var 'variant_fields_00002_00003_00003' direct represents '2' with '1104'
c Var 'variant_fields_00002_00003_00003' direct represents '5' with '1105'
c Var 'variant_fields_00002_00003_00003' direct represents '6' with '1106'
c Var 'variant_fields_00002_00003_00003' direct represents '7' with '1107'
c Var 'variant_fields_00002_00003_00003' direct represents '8' with '1108'
c Var 'variant_fields_00002_00003_00003' direct represents '9' with '1109'
1104 1105 1106 1107 1108 1109 0
-1104 -1105 0
-1104 -1106 0
-1104 -1107 0
-1104 -1108 0
-1104 -1109 0
-1105 -1106 0
-1105 -1107 0
-1105 -1108 0
-1105 -1109 0
-1106 -1107 0
-1106 -1108 0
-1106 -1109 0
-1107 -1108 0
-1107 -1109 0
-1108 -1109 0
c Encoding variable: variant_fields_00002_00003_00004 with domain: int(1..2,7) (representing constraint )
c Direct encoding.
c Var 'variant_fields_00002_00003_00004' direct represents '1' with '1110'
c Var 'variant_fields_00002_00003_00004' direct represents '2' with '1111'
c Var 'variant_fields_00002_00003_00004' direct represents '7' with '1112'
1110 1111 1112 0
-1110 -1111 0
-1110 -1112 0
-1111 -1112 0
c Encoding variable: variant_fields_00002_00003_00005 with domain: int(2..3,5..9) (representing constraint )
c Direct encoding.
c Var 'variant_fields_00002_00003_00005' direct represents '2' with '1113'
c Var 'variant_fields_00002_00003_00005' direct represents '3' with '1114'
c Var 'variant_fields_00002_00003_00005' direct represents '5' with '1115'
c Var 'variant_fields_00002_00003_00005' direct represents '6' with '1116'
c Var 'variant_fields_00002_00003_00005' direct represents '7' with '1117'
c Var 'variant_fields_00002_00003_00005' direct represents '8' with '1118'
c Var 'variant_fields_00002_00003_00005' direct represents '9' with '1119'
1113 1114 1115 1116 1117 1118 1119 0
-1113 1120 0
-1113 1123 0
-1114 1121 0
-1114 1123 0
-1115 1122 0
-1115 1123 0
-1116 1120 0
-1116 1124 0
-1117 1121 0
-1117 1124 0
-1118 1122 0
-1118 1124 0
-1119 1120 0
-1119 1125 0
-1120 -1121 0
-1120 -1122 0
-1121 -1122 0
-1123 -1124 0
-1123 -1125 0
-1124 -1125 0
c Encoding variable: variant_fields_00002_00003_00006 with domain: int(2..3,5..9) (representing constraint )
c Direct encoding.
c Var 'variant_fields_00002_00003_00006' direct represents '2' with '1126'
c Var 'variant_fields_00002_00003_00006' direct represents '3' with '1127'
c Var 'variant_fields_00002_00003_00006' direct represents '5' with '1128'
c Var 'variant_fields_00002_00003_00006' direct represents '6' with '1129'
c Var 'variant_fields_00002_00003_00006' direct represents '7' with '1130'
c Var 'variant_fields_00002_00003_00006' direct represents '8' with '1131'
c Var 'variant_fields_00002_00003_00006' direct represents '9' with '1132'
1126 1127 1128 1129 1130 1131 1132 0
-1126 1133 0
-1126 1136 0
-1127 1134 0
-1127 1136 0
-1128 1135 0
-1128 1136 0
-1129 1133 0
-1129 1137 0
-1130 1134 0
-1130 1137 0
-1131 1135 0
-1131 1137 0
-1132 1133 0
-1132 1138 0
-1133 -1134 0
-1133 -1135 0
-1134 -1135 0
-1136 -1137 0
-1136 -1138 0
-1137 -1138 0
c Encoding variable: variant_fields_00002_00003_00007 with domain: int(2..9) (representing constraint )
c Direct encoding.
c Var 'variant_fields_00002_00003_00007' direct represents '2' with '1139'
c Var 'variant_fields_00002_00003_00007' direct represents '3' with '1140'
c Var 'variant_fields_00002_00003_00007' direct represents '4' with '1141'
c Var 'variant_fields_00002_00003_00007' direct represents '5' with '1142'
c Var 'variant_fields_00002_00003_00007' direct represents '6' with '1143'
c Var 'variant_fields_00002_00003_00007' direct represents '7' with '1144'
c Var 'variant_fields_00002_00003_00007' direct represents '8' with '1145'
c Var 'variant_fields_00002_00003_00007' direct represents '9' with '1146'
1139 1140 1141 1142 1143 1144 1145 1146 0
-1139 1147 0
-1139 1150 0
-1140 1148 0
-1140 1150 0
-1141 1149 0
-1141 1150 0
-1142 1147 0
-1142 1151 0
-1143 1148 0
-1143 1151 0
-1144 1149 0
-1144 1151 0
-1145 1147 0
-1145 1152 0
-1146 1148 0
-1146 1152 0
-1147 -1148 0
-1147 -1149 0
-1148 -1149 0
-1150 -1151 0
-1150 -1152 0
-1151 -1152 0
c Encoding variable: variant_fields_00002_00003_00008 with domain: int(2..9) (representing constraint )
c Direct encoding.
c Var 'variant_fields_00002_00003_00008' direct represents '2' with '1153'
c Var 'variant_fields_00002_00003_00008' direct represents '3' with '1154'
c Var 'variant_fields_00002_00003_00008' direct represents '4' with '1155'
c Var 'variant_fields_00002_00003_00008' direct represents '5' with '1156'
c Var 'variant_fields_00002_00003_00008' direct represents '6' with '1157'
c Var 'variant_fields_00002_00003_00008' direct represents '7' with '1158'
c Var 'variant_fields_00002_00003_00008' direct represents '8' with '1159'
c Var 'variant_fields_00002_00003_00008' direct represents '9' with '1160'
1153 1154 1155 1156 1157 1158 1159 1160 0
-1153 1161 0
-1153 1164 0
-1154 1162 0
-1154 1164 0
-1155 1163 0
-1155 1164 0
-1156 1161 0
-1156 1165 0
-1157 1162 0
-1157 1165 0
-1158 1163 0
-1158 1165 0
-1159 1161 0
-1159 1166 0
-1160 1162 0
-1160 1166 0
-1161 -1162 0
-1161 -1163 0
-1162 -1163 0
-1164 -1165 0
-1164 -1166 0
-1165 -1166 0
c Encoding variable: variant_fields_00002_00003_00009 with domain: int(2,5..9) (representing constraint )
c Direct encoding.
c Var 'variant_fields_00002_00003_00009' direct represents '2' with '1167'
c Var 'variant_fields_00002_00003_00009' direct represents '5' with '1168'
c Var 'variant_fields_00002_00003_00009' direct represents '6' with '1169'
c Var 'variant_fields_00002_00003_00009' direct represents '7' with '1170'
c Var 'variant_fields_00002_00003_00009' direct represents '8' with '1171'
c Var 'variant_fields_00002_00003_00009' direct represents '9' with '1172'
1167 1168 1169 1170 1171 1172 0
-1167 -1168 0
-1167 -1169 0
-1167 -1170 0
-1167 -1171 0
-1167 -1172 0
-1168 -1169 0
-1168 -1170 0
-1168 -1171 0
-1168 -1172 0
-1169 -1170 0
-1169 -1171 0
-1169 -1172 0
-1170 -1171 0
-1170 -1172 0
-1171 -1172 0
c Encoding variable: variant_fields_00002_00004_00001 with domain: int(2) (representing constraint )
c Var 'variant_fields_00002_00004_00001' direct represents '2' with '1173'
1173 0
c Encoding variable: variant_fields_00002_00004_00002 with domain: int(9) (representing constraint )
c Var 'variant_fields_00002_00004_00002' direct represents '9' with '1174'
1174 0
c Encoding variable: variant_fields_00002_00004_00003 with domain: int(4,6..8) (representing constraint )
c Direct encoding.
c Var 'variant_fields_00002_00004_00003' direct represents '4' with '1175'
c Var 'variant_fields_00002_00004_00003' direct represents '6' with '1176'
c Var 'variant_fields_00002_00004_00003' direct represents '7' with '1177'
c Var 'variant_fields_00002_00004_00003' direct represents '8' with '1178'
1175 1176 1177 1178 0
-1175 -1176 0
-1175 -1177 0
-1175 -1178 0
-1176 -1177 0
-1176 -1178 0
-1177 -1178 0
c Encoding variable: variant_fields_00002_00004_00004 with domain: int(5) (representing constraint )
c Var 'variant_fields_00002_00004_00004' direct represents '5' with '1179'
1179 0
c Encoding variable: variant_fields_00002_00004_00005 with domain: int(4,6..8) (representing constraint )
c Direct encoding.
c Var 'variant_fields_00002_00004_00005' direct represents '4' with '1180'
c Var 'variant_fields_00002_00004_00005' direct represents '6' with '1181'
c Var 'variant_fields_00002_00004_00005' direct represents '7' with '1182'
c Var 'variant_fields_00002_00004_00005' direct represents '8' with '1183'
1180 1181 1182 1183 0
-1180 -1181 0
-1180 -1182 0
-1180 -1183 0
-1181 -1182 0
-1181 -1183 0
-1182 -1183 0
c Encoding variable: variant_fields_00002_00004_00006 with domain: int(4,6..8) (representing constraint )
c Direct encoding.
c Var 'variant_fields_00002_00004_00006' direct represents '4' with '1184'
c Var 'variant_fields_00002_00004_00006' direct represents '6' with '1185'
c Var 'variant_fields_00002_00004_00006' direct represents '7' with '1186'
c Var 'variant_fields_00002_00004_00006' direct represents '8' with '1187'
1184 1185 1186 1187 0
-1184 -1185 0
-1184 -1186 0
-1184 -1187 0
-1185 -1186 0
-1185 -1187 0
-1186 -1187 0
c Encoding variable: variant_fields_00002_00004_00007 with domain: int(1,4,6..7) (representing constraint )
c Direct encoding.
c Var 'variant_fields_00002_00004_00007' direct represents '1' with '1188'
c Var 'variant_fields_00002_00004_00007' direct represents '4' with '1189'
c Var 'variant_fields_00002_00004_00007' direct represents '6' with '1190'
c Var 'variant_fields_00002_00004_00007' direct represents '7' with '1191'
1188 1189 1190 1191 0
-1188 -1189 0
-1188 -1190 0
-1188 -1191 0
-1189 -1190 0
-1189 -1191 0
-1190 -1191 0
c Encoding variable: variant_fields_00002_00004_00008 with domain: int(1,4,6..7) (representing constraint )
c Direct encoding.
c Var 'variant_fields_00002_00004_00008' direct represents '1' with '1192'
c Var 'variant_fields_00002_00004_00008' direct represents '4' with '1193'
c Var 'variant_fields_00002_00004_00008' direct represents '6' with '1194'
c Var 'variant_fields_00002_00004_00008' direct represents '7' with '1195'
1192 1193 1194 1195 0
-1192 -1193 0
-1192 -1194 0
-1192 -1195 0
-1193 -1194 0
-1193 -1195 0
-1194 -1195 0
c Encoding variable: variant_fields_00002_00004_00009 with domain: int(3) (representing constraint )
c Var 'variant_fields_00002_00004_00009' direct represents '3' with '1196'
1196 0
c Encoding variable: variant_fields_00002_00005_00001 with domain: int(1,4..8) (representing constraint )
c Direct encoding.
c Var 'variant_fields_00002_00005_00001' direct represents '1' with '1197'
c Var 'variant_fields_00002_00005_00001' direct represents '4' with '1198'
c Var 'variant_fields_00002_00005_00001' direct represents '5' with '1199'
c Var 'variant_fields_00002_00005_00001' direct represents '6' with '1200'
c Var 'variant_fields_00002_00005_00001' direct represents '7' with '1201'
c Var 'variant_fields_00002_00005_00001' direct represents '8' with '1202'
1197 1198 1199 1200 1201 1202 0
-1197 -1198 0
-1197 -1199 0
-1197 -1200 0
-1197 -1201 0
-1197 -1202 0
-1198 -1199 0
-1198 -1200 0
-1198 -1201 0
-1198 -1202 0
-1199 -1200 0
-1199 -1201 0
-1199 -1202 0
-1200 -1201 0
-1200 -1202 0
-1201 -1202 0
c Encoding variable: variant_fields_00002_00005_00002 with domain: int(5,7..8) (representing constraint )
c Direct encoding.
c Var 'variant_fields_00002_00005_00002' direct represents '5' with '1203'
c Var 'variant_fields_00002_00005_00002' direct represents '7' with '1204'
c Var 'variant_fields_00002_00005_00002' direct represents '8' with '1205'
1203 1204 1205 0
-1203 -1204 0
-1203 -1205 0
-1204 -1205 0
c Encoding variable: variant_fields_00002_00005_00003 with domain: int(1,3..8) (representing constraint )
c Direct encoding.
c Var 'variant_fields_00002_00005_00003' direct represents '1' with '1206'
c Var 'variant_fields_00002_00005_00003' direct represents '3' with '1207'
c Var 'variant_fields_00002_00005_00003' direct represents '4' with '1208'
c Var 'variant_fields_00002_00005_00003' direct represents '5' with '1209'
c Var 'variant_fields_00002_00005_00003' direct represents '6' with '1210'
c Var 'variant_fields_00002_00005_00003' direct represents '7' with '1211'
c Var 'variant_fields_00002_00005_00003' direct represents '8' with '1212'
1206 1207 1208 1209 1210 1211 1212 0
-1206 1213 0
-1206 1216 0
-1207 1214 0
-1207 1216 0
-1208 1215 0
-1208 1216 0
-1209 1213 0
-1209 1217 0
-1210 1214 0
-1210 1217 0
-1211 1215 0
-1211 1217 0
-1212 1213 0
-1212 1218 0
-1213 -1214 0
-1213 -1215 0
-1214 -1215 0
-1216 -1217 0
-1216 -1218 0
-1217 -1218 0
c Encoding variable: variant_fields_00002_00005_00004 with domain: int(2,7,9) (representing constraint )
c Direct encoding.
c Var 'variant_fields_00002_00005_00004' direct represents '2' with '1219'
c Var 'variant_fields_00002_00005_00004' direct represents '7' with '1220'
c Var 'variant_fields_00002_00005_00004' direct represents '9' with '1221'
1219 1220 1221 0
-1219 -1220 0
-1219 -1221 0
-1220 -1221 0
c Encoding variable: variant_fields_00002_00005_00005 with domain: int(1..4,6..8) (representing constraint )
c Direct encoding.
c Var 'variant_fields_00002_00005_00005' direct represents '1' with '1222'
c Var 'variant_fields_00002_00005_00005' direct represents '2' with '1223'
c Var 'variant_fields_00002_00005_00005' direct represents '3' with '1224'
c Var 'variant_fields_00002_00005_00005' direct represents '4' with '1225'
c Var 'variant_fields_00002_00005_00005' direct represents '6' with '1226'
c Var 'variant_fields_00002_00005_00005' direct represents '7' with '1227'
c Var 'variant_fields_00002_00005_00005' direct represents '8' with '1228'
1222 1223 1224 1225 1226 1227 1228 0
-1222 1229 0
-1222 1232 0
-1223 1230 0
-1223 1232 0
-1224 1231 0
-1224 1232 0
-1225 1229 0
-1225 1233 0
-1226 1230 0
-1226 1233 0
-1227 1231 0
-1227 1233 0
-1228 1229 0
-1228 1234 0
-1229 -1230 0
-1229 -1231 0
-1230 -1231 0
-1232 -1233 0
-1232 -1234 0
-1233 -1234 0
c Encoding variable: variant_fields_00002_00005_00006 with domain: int(1..4,6..8) (representing constraint )
c Direct encoding.
c Var 'variant_fields_00002_00005_00006' direct represents '1' with '1235'
c Var 'variant_fields_00002_00005_00006' direct represents '2' with '1236'
c Var 'variant_fields_00002_00005_00006' direct represents '3' with '1237'
c Var 'variant_fields_00002_00005_00006' direct represents '4' with '1238'
c Var 'variant_fields_00002_00005_00006' direct represents '6' with '1239'
c Var 'variant_fields_00002_00005_00006' direct represents '7' with '1240'
c Var 'variant_fields_00002_00005_00006' direct represents '8' with '1241'
1235 1236 1237 1238 1239 1240 1241 0
-1235 1242 0
-1235 1245 0
-1236 1243 0
-1236 1245 0
-1237 1244 0
-1237 1245 0
-1238 1242 0
-1238 1246 0
-1239 1243 0
-1239 1246 0
-1240 1244 0
-1240 1246 0
-1241 1242 0
-1241 1247 0
-1242 -1243 0
-1242 -1244 0
-1243 -1244 0
-1245 -1246 0
-1245 -1247 0
-1246 -1247 0
c Encoding variable: variant_fields_00002_00005_00007 with domain: int(2,4..9) (representing constraint )
c Direct encoding.
c Var 'variant_fields_00002_00005_00007' direct represents '2' with '1248'
c Var 'variant_fields_00002_00005_00007' direct represents '4' with '1249'
c Var 'variant_fields_00002_00005_00007' direct represents '5' with '1250'
c Var 'variant_fields_00002_00005_00007' direct represents '6' with '1251'
c Var 'variant_fields_00002_00005_00007' direct represents '7' with '1252'
c Var 'variant_fields_00002_00005_00007' direct represents '8' with '1253'
c Var 'variant_fields_00002_00005_00007' direct represents '9' with '1254'
1248 1249 1250 1251 1252 1253 1254 0
-1248 1255 0
-1248 1258 0
-1249 1256 0
-1249 1258 0
-1250 1257 0
-1250 1258 0
-1251 1255 0
-1251 1259 0
-1252 1256 0
-1252 1259 0
-1253 1257 0
-1253 1259 0
-1254 1255 0
-1254 1260 0
-1255 -1256 0
-1255 -1257 0
-1256 -1257 0
-1258 -1259 0
-1258 -1260 0
-1259 -1260 0
c Encoding variable: variant_fields_00002_00005_00008 with domain: int(2,4..9) (representing constraint )
c Direct encoding.
c Var 'variant_fields_00002_00005_00008' direct represents '2' with '1261'
c Var 'variant_fields_00002_00005_00008' direct represents '4' with '1262'
c Var 'variant_fields_00002_00005_00008' direct represents '5' with '1263'
c Var 'variant_fields_00002_00005_00008' direct represents '6' with '1264'
c Var 'variant_fields_00002_00005_00008' direct represents '7' with '1265'
c Var 'variant_fields_00002_00005_00008' direct represents '8' with '1266'
c Var 'variant_fields_00002_00005_00008' direct represents '9' with '1267'
1261 1262 1263 1264 1265 1266 1267 0
-1261 1268 0
-1261 1271 0
-1262 1269 0
-1262 1271 0
-1263 1270 0
-1263 1271 0
-1264 1268 0
-1264 1272 0
-1265 1269 0
-1265 1272 0
-1266 1270 0
-1266 1272 0
-1267 1268 0
-1267 1273 0
-1268 -1269 0
-1268 -1270 0
-1269 -1270 0
-1271 -1272 0
-1271 -1273 0
-1272 -1273 0
c Encoding variable: variant_fields_00002_00005_00009 with domain: int(2,5..9) (representing constraint )
c Direct encoding.
c Var 'variant_fields_00002_00005_00009' direct represents '2' with '1274'
c Var 'variant_fields_00002_00005_00009' direct represents '5' with '1275'
c Var 'variant_fields_00002_00005_00009' direct represents '6' with '1276'
c Var 'variant_fields_00002_00005_00009' direct represents '7' with '1277'
c Var 'variant_fields_00002_00005_00009' direct represents '8' with '1278'
c Var 'variant_fields_00002_00005_00009' direct represents '9' with '1279'
1274 1275 1276 1277 1278 1279 0
-1274 -1275 0
-1274 -1276 0
-1274 -1277 0
-1274 -1278 0
-1274 -1279 0
-1275 -1276 0
-1275 -1277 0
-1275 -1278 0
-1275 -1279 0
-1276 -1277 0
-1276 -1278 0
-1276 -1279 0
-1277 -1278 0
-1277 -1279 0
-1278 -1279 0
c Encoding variable: variant_fields_00002_00006_00001 with domain: int(4..6) (representing constraint )
c Both direct and order encoding.
c Var 'variant_fields_00002_00006_00001' order represents '4' with '1280'
c Var 'variant_fields_00002_00006_00001' direct represents '4' with '1280'
c Var 'variant_fields_00002_00006_00001' order represents '5' with '1281'
-1280 1281 0
c Var 'variant_fields_00002_00006_00001' direct represents '5' with '1282'
1280 -1281 1282 0
-1282 1281 0
-1282 -1280 0
c Var 'variant_fields_00002_00006_00001' direct represents '6' with '-1281'
1280 1282 -1281 0
c Encoding variable: variant_fields_00002_00006_00002 with domain: int(5,7..8) (representing constraint )
c Both direct and order encoding.
c Var 'variant_fields_00002_00006_00002' order represents '5' with '1283'
c Var 'variant_fields_00002_00006_00002' direct represents '5' with '1283'
c Var 'variant_fields_00002_00006_00002' order represents '7' with '1284'
-1283 1284 0
c Var 'variant_fields_00002_00006_00002' direct represents '7' with '1285'
1283 -1284 1285 0
-1285 1284 0
-1285 -1283 0
c Var 'variant_fields_00002_00006_00002' direct represents '8' with '-1284'
1283 1285 -1284 0
c Encoding variable: variant_fields_00002_00006_00003 with domain: int(1,3..8) (representing constraint )
c Both direct and order encoding.
c Var 'variant_fields_00002_00006_00003' order represents '1' with '1286'
c Var 'variant_fields_00002_00006_00003' direct represents '1' with '1286'
c Var 'variant_fields_00002_00006_00003' order represents '3' with '1287'
-1286 1287 0
c Var 'variant_fields_00002_00006_00003' direct represents '3' with '1288'
1286 -1287 1288 0
-1288 1287 0
-1288 -1286 0
c Var 'variant_fields_00002_00006_00003' order represents '4' with '1289'
-1287 1289 0
c Var 'variant_fields_00002_00006_00003' direct represents '4' with '1290'
1287 -1289 1290 0
-1290 1289 0
-1290 -1287 0
c Var 'variant_fields_00002_00006_00003' order represents '5' with '1291'
-1289 1291 0
c Var 'variant_fields_00002_00006_00003' direct represents '5' with '1292'
1289 -1291 1292 0
-1292 1291 0
-1292 -1289 0
c Var 'variant_fields_00002_00006_00003' order represents '6' with '1293'
-1291 1293 0
c Var 'variant_fields_00002_00006_00003' direct represents '6' with '1294'
1291 -1293 1294 0
-1294 1293 0
-1294 -1291 0
c Var 'variant_fields_00002_00006_00003' order represents '7' with '1295'
-1293 1295 0
c Var 'variant_fields_00002_00006_00003' direct represents '7' with '1296'
1293 -1295 1296 0
-1296 1295 0
-1296 -1293 0
c Var 'variant_fields_00002_00006_00003' direct represents '8' with '-1295'
1286 1288 1290 1292 1294 1296 -1295 0
c Encoding variable: variant_fields_00002_00006_00004 with domain: int(2,7,9) (representing constraint )
c Both direct and order encoding.
c Var 'variant_fields_00002_00006_00004' order represents '2' with '1297'
c Var 'variant_fields_00002_00006_00004' direct represents '2' with '1297'
c Var 'variant_fields_00002_00006_00004' order represents '7' with '1298'
-1297 1298 0
c Var 'variant_fields_00002_00006_00004' direct represents '7' with '1299'
1297 -1298 1299 0
-1299 1298 0
-1299 -1297 0
c Var 'variant_fields_00002_00006_00004' direct represents '9' with '-1298'
1297 1299 -1298 0
c Encoding variable: variant_fields_00002_00006_00005 with domain: int(1..4,6..8) (representing constraint )
c Direct encoding.
c Var 'variant_fields_00002_00006_00005' direct represents '1' with '1300'
c Var 'variant_fields_00002_00006_00005' direct represents '2' with '1301'
c Var 'variant_fields_00002_00006_00005' direct represents '3' with '1302'
c Var 'variant_fields_00002_00006_00005' direct represents '4' with '1303'
c Var 'variant_fields_00002_00006_00005' direct represents '6' with '1304'
c Var 'variant_fields_00002_00006_00005' direct represents '7' with '1305'
c Var 'variant_fields_00002_00006_00005' direct represents '8' with '1306'
1300 1301 1302 1303 1304 1305 1306 0
-1300 1307 0
-1300 1310 0
-1301 1308 0
-1301 1310 0
-1302 1309 0
-1302 1310 0
-1303 1307 0
-1303 1311 0
-1304 1308 0
-1304 1311 0
-1305 1309 0
-1305 1311 0
-1306 1307 0
-1306 1312 0
-1307 -1308 0
-1307 -1309 0
-1308 -1309 0
-1310 -1311 0
-1310 -1312 0
-1311 -1312 0
c Encoding variable: variant_fields_00002_00006_00006 with domain: int(1..4,6..8) (representing constraint )
c Direct encoding.
c Var 'variant_fields_00002_00006_00006' direct represents '1' with '1313'
c Var 'variant_fields_00002_00006_00006' direct represents '2' with '1314'
c Var 'variant_fields_00002_00006_00006' direct represents '3' with '1315'
c Var 'variant_fields_00002_00006_00006' direct represents '4' with '1316'
c Var 'variant_fields_00002_00006_00006' direct represents '6' with '1317'
c Var 'variant_fields_00002_00006_00006' direct represents '7' with '1318'
c Var 'variant_fields_00002_00006_00006' direct represents '8' with '1319'
1313 1314 1315 1316 1317 1318 1319 0
-1313 1320 0
-1313 1323 0
-1314 1321 0
-1314 1323 0
-1315 1322 0
-1315 1323 0
-1316 1320 0
-1316 1324 0
-1317 1321 0
-1317 1324 0
-1318 1322 0
-1318 1324 0
-1319 1320 0
-1319 1325 0
-1320 -1321 0
-1320 -1322 0
-1321 -1322 0
-1323 -1324 0
-1323 -1325 0
-1324 -1325 0
c Encoding variable: variant_fields_00002_00006_00007 with domain: int(2,4..9) (representing constraint )
c Direct encoding.
c Var 'variant_fields_00002_00006_00007' direct represents '2' with '1326'
c Var 'variant_fields_00002_00006_00007' direct represents '4' with '1327'
c Var 'variant_fields_00002_00006_00007' direct represents '5' with '1328'
c Var 'variant_fields_00002_00006_00007' direct represents '6' with '1329'
c Var 'variant_fields_00002_00006_00007' direct represents '7' with '1330'
c Var 'variant_fields_00002_00006_00007' direct represents '8' with '1331'
c Var 'variant_fields_00002_00006_00007' direct represents '9' with '1332'
1326 1327 1328 1329 1330 1331 1332 0
-1326 1333 0
-1326 1336 0
-1327 1334 0
-1327 1336 0
-1328 1335 0
-1328 1336 0
-1329 1333 0
-1329 1337 0
-1330 1334 0
-1330 1337 0
-1331 1335 0
-1331 1337 0
-1332 1333 0
-1332 1338 0
-1333 -1334 0
-1333 -1335 0
-1334 -1335 0
-1336 -1337 0
-1336 -1338 0
-1337 -1338 0
c Encoding variable: variant_fields_00002_00006_00008 with domain: int(2,4..9) (representing constraint )
c Direct encoding.
c Var 'variant_fields_00002_00006_00008' direct represents '2' with '1339'
c Var 'variant_fields_00002_00006_00008' direct represents '4' with '1340'
c Var 'variant_fields_00002_00006_00008' direct represents '5' with '1341'
c Var 'variant_fields_00002_00006_00008' direct represents '6' with '1342'
c Var 'variant_fields_00002_00006_00008' direct represents '7' with '1343'
c Var 'variant_fields_00002_00006_00008' direct represents '8' with '1344'
c Var 'variant_fields_00002_00006_00008' direct represents '9' with '1345'
1339 1340 1341 1342 1343 1344 1345 0
-1339 1346 0
-1339 1349 0
-1340 1347 0
-1340 1349 0
-1341 1348 0
-1341 1349 0
-1342 1346 0
-1342 1350 0
-1343 1347 0
-1343 1350 0
-1344 1348 0
-1344 1350 0
-1345 1346 0
-1345 1351 0
-1346 -1347 0
-1346 -1348 0
-1347 -1348 0
-1349 -1350 0
-1349 -1351 0
-1350 -1351 0
c Encoding variable: variant_fields_00002_00006_00009 with domain: int(2,5..9) (representing constraint )
c Direct encoding.
c Var 'variant_fields_00002_00006_00009' direct represents '2' with '1352'
c Var 'variant_fields_00002_00006_00009' direct represents '5' with '1353'
c Var 'variant_fields_00002_00006_00009' direct represents '6' with '1354'
c Var 'variant_fields_00002_00006_00009' direct represents '7' with '1355'
c Var 'variant_fields_00002_00006_00009' direct represents '8' with '1356'
c Var 'variant_fields_00002_00006_00009' direct represents '9' with '1357'
1352 1353 1354 1355 1356 1357 0
-1352 -1353 0
-1352 -1354 0
-1352 -1355 0
-1352 -1356 0
-1352 -1357 0
-1353 -1354 0
-1353 -1355 0
-1353 -1356 0
-1353 -1357 0
-1354 -1355 0
-1354 -1356 0
-1354 -1357 0
-1355 -1356 0
-1355 -1357 0
-1356 -1357 0
c Encoding variable: variant_fields_00002_00007_00001 with domain: int(3) (representing constraint )
c Var 'variant_fields_00002_00007_00001' direct represents '3' with '1358'
1358 0
c Encoding variable: variant_fields_00002_00007_00002 with domain: int(5,7..8) (representing constraint )
c Both direct and order encoding.
c Var 'variant_fields_00002_00007_00002' order represents '5' with '1359'
c Var 'variant_fields_00002_00007_00002' direct represents '5' with '1359'
c Var 'variant_fields_00002_00007_00002' order represents '7' with '1360'
-1359 1360 0
c Var 'variant_fields_00002_00007_00002' direct represents '7' with '1361'
1359 -1360 1361 0
-1361 1360 0
-1361 -1359 0
c Var 'variant_fields_00002_00007_00002' direct represents '8' with '-1360'
1359 1361 -1360 0
c Encoding variable: variant_fields_00002_00007_00003 with domain: int(5,7..8) (representing constraint )
c Both direct and order encoding.
c Var 'variant_fields_00002_00007_00003' order represents '5' with '1362'
c Var 'variant_fields_00002_00007_00003' direct represents '5' with '1362'
c Var 'variant_fields_00002_00007_00003' order represents '7' with '1363'
-1362 1363 0
c Var 'variant_fields_00002_00007_00003' direct represents '7' with '1364'
1362 -1363 1364 0
-1364 1363 0
-1364 -1362 0
c Var 'variant_fields_00002_00007_00003' direct represents '8' with '-1363'
1362 1364 -1363 0
c Encoding variable: variant_fields_00002_00007_00004 with domain: int(6) (representing constraint )
c Var 'variant_fields_00002_00007_00004' direct represents '6' with '1365'
1365 0
c Encoding variable: variant_fields_00002_00007_00005 with domain: int(2,5,7,9) (representing constraint )
c Direct encoding.
c Var 'variant_fields_00002_00007_00005' direct represents '2' with '1366'
c Var 'variant_fields_00002_00007_00005' direct represents '5' with '1367'
c Var 'variant_fields_00002_00007_00005' direct represents '7' with '1368'
c Var 'variant_fields_00002_00007_00005' direct represents '9' with '1369'
1366 1367 1368 1369 0
-1366 -1367 0
-1366 -1368 0
-1366 -1369 0
-1367 -1368 0
-1367 -1369 0
-1368 -1369 0
c Encoding variable: variant_fields_00002_00007_00006 with domain: int(1..2,5,7,9) (representing constraint )
c Direct encoding.
c Var 'variant_fields_00002_00007_00006' direct represents '1' with '1370'
c Var 'variant_fields_00002_00007_00006' direct represents '2' with '1371'
c Var 'variant_fields_00002_00007_00006' direct represents '5' with '1372'
c Var 'variant_fields_00002_00007_00006' direct represents '7' with '1373'
c Var 'variant_fields_00002_00007_00006' direct represents '9' with '1374'
1370 1371 1372 1373 1374 0
-1370 -1371 0
-1370 -1372 0
-1370 -1373 0
-1370 -1374 0
-1371 -1372 0
-1371 -1373 0
-1371 -1374 0
-1372 -1373 0
-1372 -1374 0
-1373 -1374 0
c Encoding variable: variant_fields_00002_00007_00007 with domain: int(1..2,5,7..9) (representing constraint )
c Direct encoding.
c Var 'variant_fields_00002_00007_00007' direct represents '1' with '1375'
c Var 'variant_fields_00002_00007_00007' direct represents '2' with '1376'
c Var 'variant_fields_00002_00007_00007' direct represents '5' with '1377'
c Var 'variant_fields_00002_00007_00007' direct represents '7' with '1378'
c Var 'variant_fields_00002_00007_00007' direct represents '8' with '1379'
c Var 'variant_fields_00002_00007_00007' direct represents '9' with '1380'
1375 1376 1377 1378 1379 1380 0
-1375 -1376 0
-1375 -1377 0
-1375 -1378 0
-1375 -1379 0
-1375 -1380 0
-1376 -1377 0
-1376 -1378 0
-1376 -1379 0
-1376 -1380 0
-1377 -1378 0
-1377 -1379 0
-1377 -1380 0
-1378 -1379 0
-1378 -1380 0
-1379 -1380 0
c Encoding variable: variant_fields_00002_00007_00008 with domain: int(1..2,5,7..9) (representing constraint )
c Direct encoding.
c Var 'variant_fields_00002_00007_00008' direct represents '1' with '1381'
c Var 'variant_fields_00002_00007_00008' direct represents '2' with '1382'
c Var 'variant_fields_00002_00007_00008' direct represents '5' with '1383'
c Var 'variant_fields_00002_00007_00008' direct represents '7' with '1384'
c Var 'variant_fields_00002_00007_00008' direct represents '8' with '1385'
c Var 'variant_fields_00002_00007_00008' direct represents '9' with '1386'
1381 1382 1383 1384 1385 1386 0
-1381 -1382 0
-1381 -1383 0
-1381 -1384 0
-1381 -1385 0
-1381 -1386 0
-1382 -1383 0
-1382 -1384 0
-1382 -1385 0
-1382 -1386 0
-1383 -1384 0
-1383 -1385 0
-1383 -1386 0
-1384 -1385 0
-1384 -1386 0
-1385 -1386 0
c Encoding variable: variant_fields_00002_00007_00009 with domain: int(4) (representing constraint )
c Var 'variant_fields_00002_00007_00009' direct represents '4' with '1387'
1387 0
c Encoding variable: variant_fields_00002_00008_00001 with domain: int(1,4..5,7,9) (representing constraint )
c Direct encoding.
c Var 'variant_fields_00002_00008_00001' direct represents '1' with '1388'
c Var 'variant_fields_00002_00008_00001' direct represents '4' with '1389'
c Var 'variant_fields_00002_00008_00001' direct represents '5' with '1390'
c Var 'variant_fields_00002_00008_00001' direct represents '7' with '1391'
c Var 'variant_fields_00002_00008_00001' direct represents '9' with '1392'
1388 1389 1390 1391 1392 0
-1388 -1389 0
-1388 -1390 0
-1388 -1391 0
-1388 -1392 0
-1389 -1390 0
-1389 -1391 0
-1389 -1392 0
-1390 -1391 0
-1390 -1392 0
-1391 -1392 0
c Encoding variable: variant_fields_00002_00008_00002 with domain: int(6) (representing constraint )
c Var 'variant_fields_00002_00008_00002' direct represents '6' with '1393'
1393 0
c Encoding variable: variant_fields_00002_00008_00003 with domain: int(1,4..5,7,9) (representing constraint )
c Direct encoding.
c Var 'variant_fields_00002_00008_00003' direct represents '1' with '1394'
c Var 'variant_fields_00002_00008_00003' direct represents '4' with '1395'
c Var 'variant_fields_00002_00008_00003' direct represents '5' with '1396'
c Var 'variant_fields_00002_00008_00003' direct represents '7' with '1397'
c Var 'variant_fields_00002_00008_00003' direct represents '9' with '1398'
1394 1395 1396 1397 1398 0
-1394 -1395 0
-1394 -1396 0
-1394 -1397 0
-1394 -1398 0
-1395 -1396 0
-1395 -1397 0
-1395 -1398 0
-1396 -1397 0
-1396 -1398 0
-1397 -1398 0
c Encoding variable: variant_fields_00002_00008_00004 with domain: int(8) (representing constraint )
c Var 'variant_fields_00002_00008_00004' direct represents '8' with '1399'
1399 0
c Encoding variable: variant_fields_00002_00008_00005 with domain: int(1..2,4..5,7,9) (representing constraint )
c Direct encoding.
c Var 'variant_fields_00002_00008_00005' direct represents '1' with '1400'
c Var 'variant_fields_00002_00008_00005' direct represents '2' with '1401'
c Var 'variant_fields_00002_00008_00005' direct represents '4' with '1402'
c Var 'variant_fields_00002_00008_00005' direct represents '5' with '1403'
c Var 'variant_fields_00002_00008_00005' direct represents '7' with '1404'
c Var 'variant_fields_00002_00008_00005' direct represents '9' with '1405'
1400 1401 1402 1403 1404 1405 0
-1400 -1401 0
-1400 -1402 0
-1400 -1403 0
-1400 -1404 0
-1400 -1405 0
-1401 -1402 0
-1401 -1403 0
-1401 -1404 0
-1401 -1405 0
-1402 -1403 0
-1402 -1404 0
-1402 -1405 0
-1403 -1404 0
-1403 -1405 0
-1404 -1405 0
c Encoding variable: variant_fields_00002_00008_00006 with domain: int(1..2,4..5,7,9) (representing constraint )
c Direct encoding.
c Var 'variant_fields_00002_00008_00006' direct represents '1' with '1406'
c Var 'variant_fields_00002_00008_00006' direct represents '2' with '1407'
c Var 'variant_fields_00002_00008_00006' direct represents '4' with '1408'
c Var 'variant_fields_00002_00008_00006' direct represents '5' with '1409'
c Var 'variant_fields_00002_00008_00006' direct represents '7' with '1410'
c Var 'variant_fields_00002_00008_00006' direct represents '9' with '1411'
1406 1407 1408 1409 1410 1411 0
-1406 -1407 0
-1406 -1408 0
-1406 -1409 0
-1406 -1410 0
-1406 -1411 0
-1407 -1408 0
-1407 -1409 0
-1407 -1410 0
-1407 -1411 0
-1408 -1409 0
-1408 -1410 0
-1408 -1411 0
-1409 -1410 0
-1409 -1411 0
-1410 -1411 0
c Encoding variable: variant_fields_00002_00008_00007 with domain: int(1..3,5,7,9) (representing constraint )
c Direct encoding.
c Var 'variant_fields_00002_00008_00007' direct represents '1' with '1412'
c Var 'variant_fields_00002_00008_00007' direct represents '2' with '1413'
c Var 'variant_fields_00002_00008_00007' direct represents '3' with '1414'
c Var 'variant_fields_00002_00008_00007' direct represents '5' with '1415'
c Var 'variant_fields_00002_00008_00007' direct represents '7' with '1416'
c Var 'variant_fields_00002_00008_00007' direct represents '9' with '1417'
1412 1413 1414 1415 1416 1417 0
-1412 -1413 0
-1412 -1414 0
-1412 -1415 0
-1412 -1416 0
-1412 -1417 0
-1413 -1414 0
-1413 -1415 0
-1413 -1416 0
-1413 -1417 0
-1414 -1415 0
-1414 -1416 0
-1414 -1417 0
-1415 -1416 0
-1415 -1417 0
-1416 -1417 0
c Encoding variable: variant_fields_00002_00008_00008 with domain: int(1..3,5,7,9) (representing constraint )
c Direct encoding.
c Var 'variant_fields_00002_00008_00008' direct represents '1' with '1418'
c Var 'variant_fields_00002_00008_00008' direct represents '2' with '1419'
c Var 'variant_fields_00002_00008_00008' direct represents '3' with '1420'
c Var 'variant_fields_00002_00008_00008' direct represents '5' with '1421'
c Var 'variant_fields_00002_00008_00008' direct represents '7' with '1422'
c Var 'variant_fields_00002_00008_00008' direct represents '9' with '1423'
1418 1419 1420 1421 1422 1423 0
-1418 -1419 0
-1418 -1420 0
-1418 -1421 0
-1418 -1422 0
-1418 -1423 0
-1419 -1420 0
-1419 -1421 0
-1419 -1422 0
-1419 -1423 0
-1420 -1421 0
-1420 -1422 0
-1420 -1423 0
-1421 -1422 0
-1421 -1423 0
-1422 -1423 0
c Encoding variable: variant_fields_00002_00008_00009 with domain: int(1..2,5,7,9) (representing constraint )
c Direct encoding.
c Var 'variant_fields_00002_00008_00009' direct represents '1' with '1424'
c Var 'variant_fields_00002_00008_00009' direct represents '2' with '1425'
c Var 'variant_fields_00002_00008_00009' direct represents '5' with '1426'
c Var 'variant_fields_00002_00008_00009' direct represents '7' with '1427'
c Var 'variant_fields_00002_00008_00009' direct represents '9' with '1428'
1424 1425 1426 1427 1428 0
-1424 -1425 0
-1424 -1426 0
-1424 -1427 0
-1424 -1428 0
-1425 -1426 0
-1425 -1427 0
-1425 -1428 0
-1426 -1427 0
-1426 -1428 0
-1427 -1428 0
c Encoding variable: variant_fields_00002_00009_00001 with domain: int(1,4..5,7..9) (representing constraint )
c Direct encoding.
c Var 'variant_fields_00002_00009_00001' direct represents '1' with '1429'
c Var 'variant_fields_00002_00009_00001' direct represents '4' with '1430'
c Var 'variant_fields_00002_00009_00001' direct represents '5' with '1431'
c Var 'variant_fields_00002_00009_00001' direct represents '7' with '1432'
c Var 'variant_fields_00002_00009_00001' direct represents '8' with '1433'
c Var 'variant_fields_00002_00009_00001' direct represents '9' with '1434'
1429 1430 1431 1432 1433 1434 0
-1429 -1430 0
-1429 -1431 0
-1429 -1432 0
-1429 -1433 0
-1429 -1434 0
-1430 -1431 0
-1430 -1432 0
-1430 -1433 0
-1430 -1434 0
-1431 -1432 0
-1431 -1433 0
-1431 -1434 0
-1432 -1433 0
-1432 -1434 0
-1433 -1434 0
c Encoding variable: variant_fields_00002_00009_00002 with domain: int(2) (representing constraint )
c Var 'variant_fields_00002_00009_00002' direct represents '2' with '1435'
1435 0
c Encoding variable: variant_fields_00002_00009_00003 with domain: int(1,4..5,7..9) (representing constraint )
c Direct encoding.
c Var 'variant_fields_00002_00009_00003' direct represents '1' with '1436'
c Var 'variant_fields_00002_00009_00003' direct represents '4' with '1437'
c Var 'variant_fields_00002_00009_00003' direct represents '5' with '1438'
c Var 'variant_fields_00002_00009_00003' direct represents '7' with '1439'
c Var 'variant_fields_00002_00009_00003' direct represents '8' with '1440'
c Var 'variant_fields_00002_00009_00003' direct represents '9' with '1441'
1436 1437 1438 1439 1440 1441 0
-1436 -1437 0
-1436 -1438 0
-1436 -1439 0
-1436 -1440 0
-1436 -1441 0
-1437 -1438 0
-1437 -1439 0
-1437 -1440 0
-1437 -1441 0
-1438 -1439 0
-1438 -1440 0
-1438 -1441 0
-1439 -1440 0
-1439 -1441 0
-1440 -1441 0
c Encoding variable: variant_fields_00002_00009_00004 with domain: int(3) (representing constraint )
c Var 'variant_fields_00002_00009_00004' direct represents '3' with '1442'
1442 0
c Encoding variable: variant_fields_00002_00009_00005 with domain: int(1,4..5,7,9) (representing constraint )
c Direct encoding.
c Var 'variant_fields_00002_00009_00005' direct represents '1' with '1443'
c Var 'variant_fields_00002_00009_00005' direct represents '4' with '1444'
c Var 'variant_fields_00002_00009_00005' direct represents '5' with '1445'
c Var 'variant_fields_00002_00009_00005' direct represents '7' with '1446'
c Var 'variant_fields_00002_00009_00005' direct represents '9' with '1447'
1443 1444 1445 1446 1447 0
-1443 -1444 0
-1443 -1445 0
-1443 -1446 0
-1443 -1447 0
-1444 -1445 0
-1444 -1446 0
-1444 -1447 0
-1445 -1446 0
-1445 -1447 0
-1446 -1447 0
c Encoding variable: variant_fields_00002_00009_00006 with domain: int(5,7) (representing constraint )
c Var 'variant_fields_00002_00009_00006' direct represents '5' with '-1448'
c Var 'variant_fields_00002_00009_00006' direct represents '7' with '1448'
c Var 'variant_fields_00002_00009_00006' order represents '7' with '1'
c Var 'variant_fields_00002_00009_00006' order represents '5' with '-1448'
c Encoding variable: variant_fields_00002_00009_00007 with domain: int(1,5..9) (representing constraint )
c Direct encoding.
c Var 'variant_fields_00002_00009_00007' direct represents '1' with '1449'
c Var 'variant_fields_00002_00009_00007' direct represents '5' with '1450'
c Var 'variant_fields_00002_00009_00007' direct represents '6' with '1451'
c Var 'variant_fields_00002_00009_00007' direct represents '7' with '1452'
c Var 'variant_fields_00002_00009_00007' direct represents '8' with '1453'
c Var 'variant_fields_00002_00009_00007' direct represents '9' with '1454'
1449 1450 1451 1452 1453 1454 0
-1449 -1450 0
-1449 -1451 0
-1449 -1452 0
-1449 -1453 0
-1449 -1454 0
-1450 -1451 0
-1450 -1452 0
-1450 -1453 0
-1450 -1454 0
-1451 -1452 0
-1451 -1453 0
-1451 -1454 0
-1452 -1453 0
-1452 -1454 0
-1453 -1454 0
c Encoding variable: variant_fields_00002_00009_00008 with domain: int(5..8) (representing constraint )
c Direct encoding.
c Var 'variant_fields_00002_00009_00008' direct represents '5' with '1455'
c Var 'variant_fields_00002_00009_00008' direct represents '6' with '1456'
c Var 'variant_fields_00002_00009_00008' direct represents '7' with '1457'
c Var 'variant_fields_00002_00009_00008' direct represents '8' with '1458'
1455 1456 1457 1458 0
-1455 -1456 0
-1455 -1457 0
-1455 -1458 0
-1456 -1457 0
-1456 -1458 0
-1457 -1458 0
c Encoding variable: variant_fields_00002_00009_00009 with domain: int(1,5..9) (representing constraint )
c Direct encoding.
c Var 'variant_fields_00002_00009_00009' direct represents '1' with '1459'
c Var 'variant_fields_00002_00009_00009' direct represents '5' with '1460'
c Var 'variant_fields_00002_00009_00009' direct represents '6' with '1461'
c Var 'variant_fields_00002_00009_00009' direct represents '7' with '1462'
c Var 'variant_fields_00002_00009_00009' direct represents '8' with '1463'
c Var 'variant_fields_00002_00009_00009' direct represents '9' with '1464'
1459 1460 1461 1462 1463 1464 0
-1459 -1460 0
-1459 -1461 0
-1459 -1462 0
-1459 -1463 0
-1459 -1464 0
-1460 -1461 0
-1460 -1462 0
-1460 -1463 0
-1460 -1464 0
-1461 -1462 0
-1461 -1463 0
-1461 -1464 0
-1462 -1463 0
-1462 -1464 0
-1463 -1464 0
c Encoding variable: variant_fields_00003_00001_00001 with domain: int(1,4..5,7..9) (representing constraint )
c Direct encoding.
c Var 'variant_fields_00003_00001_00001' direct represents '1' with '1465'
c Var 'variant_fields_00003_00001_00001' direct represents '4' with '1466'
c Var 'variant_fields_00003_00001_00001' direct represents '5' with '1467'
c Var 'variant_fields_00003_00001_00001' direct represents '7' with '1468'
c Var 'variant_fields_00003_00001_00001' direct represents '8' with '1469'
c Var 'variant_fields_00003_00001_00001' direct represents '9' with '1470'
1465 1466 1467 1468 1469 1470 0
-1465 -1466 0
-1465 -1467 0
-1465 -1468 0
-1465 -1469 0
-1465 -1470 0
-1466 -1467 0
-1466 -1468 0
-1466 -1469 0
-1466 -1470 0
-1467 -1468 0
-1467 -1469 0
-1467 -1470 0
-1468 -1469 0
-1468 -1470 0
-1469 -1470 0
c Encoding variable: variant_fields_00003_00001_00002 with domain: int(1,4..5,7,9) (representing constraint )
c Direct encoding.
c Var 'variant_fields_00003_00001_00002' direct represents '1' with '1471'
c Var 'variant_fields_00003_00001_00002' direct represents '4' with '1472'
c Var 'variant_fields_00003_00001_00002' direct represents '5' with '1473'
c Var 'variant_fields_00003_00001_00002' direct represents '7' with '1474'
c Var 'variant_fields_00003_00001_00002' direct represents '9' with '1475'
1471 1472 1473 1474 1475 0
-1471 -1472 0
-1471 -1473 0
-1471 -1474 0
-1471 -1475 0
-1472 -1473 0
-1472 -1474 0
-1472 -1475 0
-1473 -1474 0
-1473 -1475 0
-1474 -1475 0
c Encoding variable: variant_fields_00003_00001_00003 with domain: int(3) (representing constraint )
c Var 'variant_fields_00003_00001_00003' direct represents '3' with '1476'
1476 0
c Encoding variable: variant_fields_00003_00001_00004 with domain: int(4..6) (representing constraint )
c Direct encoding.
c Var 'variant_fields_00003_00001_00004' direct represents '4' with '1477'
c Var 'variant_fields_00003_00001_00004' direct represents '5' with '1478'
c Var 'variant_fields_00003_00001_00004' direct represents '6' with '1479'
1477 1478 1479 0
-1477 -1478 0
-1477 -1479 0
-1478 -1479 0
c Encoding variable: variant_fields_00003_00001_00005 with domain: int(1,4..8) (representing constraint )
c Direct encoding.
c Var 'variant_fields_00003_00001_00005' direct represents '1' with '1480'
c Var 'variant_fields_00003_00001_00005' direct represents '4' with '1481'
c Var 'variant_fields_00003_00001_00005' direct represents '5' with '1482'
c Var 'variant_fields_00003_00001_00005' direct represents '6' with '1483'
c Var 'variant_fields_00003_00001_00005' direct represents '7' with '1484'
c Var 'variant_fields_00003_00001_00005' direct represents '8' with '1485'
1480 1481 1482 1483 1484 1485 0
-1480 -1481 0
-1480 -1482 0
-1480 -1483 0
-1480 -1484 0
-1480 -1485 0
-1481 -1482 0
-1481 -1483 0
-1481 -1484 0
-1481 -1485 0
-1482 -1483 0
-1482 -1484 0
-1482 -1485 0
-1483 -1484 0
-1483 -1485 0
-1484 -1485 0
c Encoding variable: variant_fields_00003_00001_00006 with domain: int(2) (representing constraint )
c Var 'variant_fields_00003_00001_00006' direct represents '2' with '1486'
1486 0
c Encoding variable: variant_fields_00003_00001_00007 with domain: int(5..9) (representing constraint )
c Direct encoding.
c Var 'variant_fields_00003_00001_00007' direct represents '5' with '1487'
c Var 'variant_fields_00003_00001_00007' direct represents '6' with '1488'
c Var 'variant_fields_00003_00001_00007' direct represents '7' with '1489'
c Var 'variant_fields_00003_00001_00007' direct represents '8' with '1490'
c Var 'variant_fields_00003_00001_00007' direct represents '9' with '1491'
1487 1488 1489 1490 1491 0
-1487 -1488 0
-1487 -1489 0
-1487 -1490 0
-1487 -1491 0
-1488 -1489 0
-1488 -1490 0
-1488 -1491 0
-1489 -1490 0
-1489 -1491 0
-1490 -1491 0
c Encoding variable: variant_fields_00003_00001_00008 with domain: int(5..7) (representing constraint )
c Direct encoding.
c Var 'variant_fields_00003_00001_00008' direct represents '5' with '1492'
c Var 'variant_fields_00003_00001_00008' direct represents '6' with '1493'
c Var 'variant_fields_00003_00001_00008' direct represents '7' with '1494'
1492 1493 1494 0
-1492 -1493 0
-1492 -1494 0
-1493 -1494 0
c Encoding variable: variant_fields_00003_00001_00009 with domain: int(5..9) (representing constraint )
c Direct encoding.
c Var 'variant_fields_00003_00001_00009' direct represents '5' with '1495'
c Var 'variant_fields_00003_00001_00009' direct represents '6' with '1496'
c Var 'variant_fields_00003_00001_00009' direct represents '7' with '1497'
c Var 'variant_fields_00003_00001_00009' direct represents '8' with '1498'
c Var 'variant_fields_00003_00001_00009' direct represents '9' with '1499'
1495 1496 1497 1498 1499 0
-1495 -1496 0
-1495 -1497 0
-1495 -1498 0
-1495 -1499 0
-1496 -1497 0
-1496 -1498 0
-1496 -1499 0
-1497 -1498 0
-1497 -1499 0
-1498 -1499 0
c Encoding variable: variant_fields_00003_00002_00001 with domain: int(2) (representing constraint )
c Var 'variant_fields_00003_00002_00001' direct represents '2' with '1500'
1500 0
c Encoding variable: variant_fields_00003_00002_00002 with domain: int(6) (representing constraint )
c Var 'variant_fields_00003_00002_00002' direct represents '6' with '1501'
1501 0
c Encoding variable: variant_fields_00003_00002_00003 with domain: int(5,7..8) (representing constraint )
c Direct encoding.
c Var 'variant_fields_00003_00002_00003' direct represents '5' with '1502'
c Var 'variant_fields_00003_00002_00003' direct represents '7' with '1503'
c Var 'variant_fields_00003_00002_00003' direct represents '8' with '1504'
1502 1503 1504 0
-1502 -1503 0
-1502 -1504 0
-1503 -1504 0
c Encoding variable: variant_fields_00003_00002_00004 with domain: int(5,7..8) (representing constraint )
c Direct encoding.
c Var 'variant_fields_00003_00002_00004' direct represents '5' with '1505'
c Var 'variant_fields_00003_00002_00004' direct represents '7' with '1506'
c Var 'variant_fields_00003_00002_00004' direct represents '8' with '1507'
1505 1506 1507 0
-1505 -1506 0
-1505 -1507 0
-1506 -1507 0
c Encoding variable: variant_fields_00003_00002_00005 with domain: int(5,7..8) (representing constraint )
c Direct encoding.
c Var 'variant_fields_00003_00002_00005' direct represents '5' with '1508'
c Var 'variant_fields_00003_00002_00005' direct represents '7' with '1509'
c Var 'variant_fields_00003_00002_00005' direct represents '8' with '1510'
1508 1509 1510 0
-1508 -1509 0
-1508 -1510 0
-1509 -1510 0
c Encoding variable: variant_fields_00003_00002_00006 with domain: int(9) (representing constraint )
c Var 'variant_fields_00003_00002_00006' direct represents '9' with '1511'
1511 0
c Encoding variable: variant_fields_00003_00002_00007 with domain: int(1,4) (representing constraint )
c Var 'variant_fields_00003_00002_00007' direct represents '1' with '-1512'
c Var 'variant_fields_00003_00002_00007' direct represents '4' with '1512'
c Var 'variant_fields_00003_00002_00007' order represents '4' with '1'
c Var 'variant_fields_00003_00002_00007' order represents '1' with '-1512'
c Encoding variable: variant_fields_00003_00002_00008 with domain: int(1,4) (representing constraint )
c Var 'variant_fields_00003_00002_00008' direct represents '1' with '-1513'
c Var 'variant_fields_00003_00002_00008' direct represents '4' with '1513'
c Var 'variant_fields_00003_00002_00008' order represents '4' with '1'
c Var 'variant_fields_00003_00002_00008' order represents '1' with '-1513'
c Encoding variable: variant_fields_00003_00002_00009 with domain: int(3) (representing constraint )
c Var 'variant_fields_00003_00002_00009' direct represents '3' with '1514'
1514 0
c Encoding variable: variant_fields_00003_00003_00001 with domain: int(1,4..5,7..9) (representing constraint )
c Direct encoding.
c Var 'variant_fields_00003_00003_00001' direct represents '1' with '1515'
c Var 'variant_fields_00003_00003_00001' direct represents '4' with '1516'
c Var 'variant_fields_00003_00003_00001' direct represents '5' with '1517'
c Var 'variant_fields_00003_00003_00001' direct represents '7' with '1518'
c Var 'variant_fields_00003_00003_00001' direct represents '8' with '1519'
c Var 'variant_fields_00003_00003_00001' direct represents '9' with '1520'
1515 1516 1517 1518 1519 1520 0
-1515 -1516 0
-1515 -1517 0
-1515 -1518 0
-1515 -1519 0
-1515 -1520 0
-1516 -1517 0
-1516 -1518 0
-1516 -1519 0
-1516 -1520 0
-1517 -1518 0
-1517 -1519 0
-1517 -1520 0
-1518 -1519 0
-1518 -1520 0
-1519 -1520 0
c Encoding variable: variant_fields_00003_00003_00002 with domain: int(1,4..5,7,9) (representing constraint )
c Direct encoding.
c Var 'variant_fields_00003_00003_00002' direct represents '1' with '1521'
c Var 'variant_fields_00003_00003_00002' direct represents '4' with '1522'
c Var 'variant_fields_00003_00003_00002' direct represents '5' with '1523'
c Var 'variant_fields_00003_00003_00002' direct represents '7' with '1524'
c Var 'variant_fields_00003_00003_00002' direct represents '9' with '1525'
1521 1522 1523 1524 1525 0
-1521 -1522 0
-1521 -1523 0
-1521 -1524 0
-1521 -1525 0
-1522 -1523 0
-1522 -1524 0
-1522 -1525 0
-1523 -1524 0
-1523 -1525 0
-1524 -1525 0
c Encoding variable: variant_fields_00003_00003_00003 with domain: int(5,7..8) (representing constraint )
c Direct encoding.
c Var 'variant_fields_00003_00003_00003' direct represents '5' with '1526'
c Var 'variant_fields_00003_00003_00003' direct represents '7' with '1527'
c Var 'variant_fields_00003_00003_00003' direct represents '8' with '1528'
1526 1527 1528 0
-1526 -1527 0
-1526 -1528 0
-1527 -1528 0
c Encoding variable: variant_fields_00003_00003_00004 with domain: int(1,3..8) (representing constraint )
c Direct encoding.
c Var 'variant_fields_00003_00003_00004' direct represents '1' with '1529'
c Var 'variant_fields_00003_00003_00004' direct represents '3' with '1530'
c Var 'variant_fields_00003_00003_00004' direct represents '4' with '1531'
c Var 'variant_fields_00003_00003_00004' direct represents '5' with '1532'
c Var 'variant_fields_00003_00003_00004' direct represents '6' with '1533'
c Var 'variant_fields_00003_00003_00004' direct represents '7' with '1534'
c Var 'variant_fields_00003_00003_00004' direct represents '8' with '1535'
1529 1530 1531 1532 1533 1534 1535 0
-1529 1536 0
-1529 1539 0
-1530 1537 0
-1530 1539 0
-1531 1538 0
-1531 1539 0
-1532 1536 0
-1532 1540 0
-1533 1537 0
-1533 1540 0
-1534 1538 0
-1534 1540 0
-1535 1536 0
-1535 1541 0
-1536 -1537 0
-1536 -1538 0
-1537 -1538 0
-1539 -1540 0
-1539 -1541 0
-1540 -1541 0
c Encoding variable: variant_fields_00003_00003_00005 with domain: int(1,3..8) (representing constraint )
c Direct encoding.
c Var 'variant_fields_00003_00003_00005' direct represents '1' with '1542'
c Var 'variant_fields_00003_00003_00005' direct represents '3' with '1543'
c Var 'variant_fields_00003_00003_00005' direct represents '4' with '1544'
c Var 'variant_fields_00003_00003_00005' direct represents '5' with '1545'
c Var 'variant_fields_00003_00003_00005' direct represents '6' with '1546'
c Var 'variant_fields_00003_00003_00005' direct represents '7' with '1547'
c Var 'variant_fields_00003_00003_00005' direct represents '8' with '1548'
1542 1543 1544 1545 1546 1547 1548 0
-1542 1549 0
-1542 1552 0
-1543 1550 0
-1543 1552 0
-1544 1551 0
-1544 1552 0
-1545 1549 0
-1545 1553 0
-1546 1550 0
-1546 1553 0
-1547 1551 0
-1547 1553 0
-1548 1549 0
-1548 1554 0
-1549 -1550 0
-1549 -1551 0
-1550 -1551 0
-1552 -1553 0
-1552 -1554 0
-1553 -1554 0
c Encoding variable: variant_fields_00003_00003_00006 with domain: int(4,6..8) (representing constraint )
c Direct encoding.
c Var 'variant_fields_00003_00003_00006' direct represents '4' with '1555'
c Var 'variant_fields_00003_00003_00006' direct represents '6' with '1556'
c Var 'variant_fields_00003_00003_00006' direct represents '7' with '1557'
c Var 'variant_fields_00003_00003_00006' direct represents '8' with '1558'
1555 1556 1557 1558 0
-1555 -1556 0
-1555 -1557 0
-1555 -1558 0
-1556 -1557 0
-1556 -1558 0
-1557 -1558 0
c Encoding variable: variant_fields_00003_00003_00007 with domain: int(2,5..9) (representing constraint )
c Direct encoding.
c Var 'variant_fields_00003_00003_00007' direct represents '2' with '1559'
c Var 'variant_fields_00003_00003_00007' direct represents '5' with '1560'
c Var 'variant_fields_00003_00003_00007' direct represents '6' with '1561'
c Var 'variant_fields_00003_00003_00007' direct represents '7' with '1562'
c Var 'variant_fields_00003_00003_00007' direct represents '8' with '1563'
c Var 'variant_fields_00003_00003_00007' direct represents '9' with '1564'
1559 1560 1561 1562 1563 1564 0
-1559 -1560 0
-1559 -1561 0
-1559 -1562 0
-1559 -1563 0
-1559 -1564 0
-1560 -1561 0
-1560 -1562 0
-1560 -1563 0
-1560 -1564 0
-1561 -1562 0
-1561 -1563 0
-1561 -1564 0
-1562 -1563 0
-1562 -1564 0
-1563 -1564 0
c Encoding variable: variant_fields_00003_00003_00008 with domain: int(2,5..9) (representing constraint )
c Direct encoding.
c Var 'variant_fields_00003_00003_00008' direct represents '2' with '1565'
c Var 'variant_fields_00003_00003_00008' direct represents '5' with '1566'
c Var 'variant_fields_00003_00003_00008' direct represents '6' with '1567'
c Var 'variant_fields_00003_00003_00008' direct represents '7' with '1568'
c Var 'variant_fields_00003_00003_00008' direct represents '8' with '1569'
c Var 'variant_fields_00003_00003_00008' direct represents '9' with '1570'
1565 1566 1567 1568 1569 1570 0
-1565 -1566 0
-1565 -1567 0
-1565 -1568 0
-1565 -1569 0
-1565 -1570 0
-1566 -1567 0
-1566 -1568 0
-1566 -1569 0
-1566 -1570 0
-1567 -1568 0
-1567 -1569 0
-1567 -1570 0
-1568 -1569 0
-1568 -1570 0
-1569 -1570 0
c Encoding variable: variant_fields_00003_00003_00009 with domain: int(2,5..9) (representing constraint )
c Direct encoding.
c Var 'variant_fields_00003_00003_00009' direct represents '2' with '1571'
c Var 'variant_fields_00003_00003_00009' direct represents '5' with '1572'
c Var 'variant_fields_00003_00003_00009' direct represents '6' with '1573'
c Var 'variant_fields_00003_00003_00009' direct represents '7' with '1574'
c Var 'variant_fields_00003_00003_00009' direct represents '8' with '1575'
c Var 'variant_fields_00003_00003_00009' direct represents '9' with '1576'
1571 1572 1573 1574 1575 1576 0
-1571 -1572 0
-1571 -1573 0
-1571 -1574 0
-1571 -1575 0
-1571 -1576 0
-1572 -1573 0
-1572 -1574 0
-1572 -1575 0
-1572 -1576 0
-1573 -1574 0
-1573 -1575 0
-1573 -1576 0
-1574 -1575 0
-1574 -1576 0
-1575 -1576 0
c Encoding variable: variant_fields_00003_00004_00001 with domain: int(3) (representing constraint )
c Var 'variant_fields_00003_00004_00001' direct represents '3' with '1577'
1577 0
c Encoding variable: variant_fields_00003_00004_00002 with domain: int(8) (representing constraint )
c Var 'variant_fields_00003_00004_00002' direct represents '8' with '1578'
1578 0
c Encoding variable: variant_fields_00003_00004_00003 with domain: int(6) (representing constraint )
c Var 'variant_fields_00003_00004_00003' direct represents '6' with '1579'
1579 0
c Encoding variable: variant_fields_00003_00004_00004 with domain: int(2,7,9) (representing constraint )
c Direct encoding.
c Var 'variant_fields_00003_00004_00004' direct represents '2' with '1580'
c Var 'variant_fields_00003_00004_00004' direct represents '7' with '1581'
c Var 'variant_fields_00003_00004_00004' direct represents '9' with '1582'
1580 1581 1582 0
-1580 -1581 0
-1580 -1582 0
-1581 -1582 0
c Encoding variable: variant_fields_00003_00004_00005 with domain: int(2,7,9) (representing constraint )
c Direct encoding.
c Var 'variant_fields_00003_00004_00005' direct represents '2' with '1583'
c Var 'variant_fields_00003_00004_00005' direct represents '7' with '1584'
c Var 'variant_fields_00003_00004_00005' direct represents '9' with '1585'
1583 1584 1585 0
-1583 -1584 0
-1583 -1585 0
-1584 -1585 0
c Encoding variable: variant_fields_00003_00004_00006 with domain: int(5) (representing constraint )
c Var 'variant_fields_00003_00004_00006' direct represents '5' with '1586'
1586 0
c Encoding variable: variant_fields_00003_00004_00007 with domain: int(1..2,7) (representing constraint )
c Direct encoding.
c Var 'variant_fields_00003_00004_00007' direct represents '1' with '1587'
c Var 'variant_fields_00003_00004_00007' direct represents '2' with '1588'
c Var 'variant_fields_00003_00004_00007' direct represents '7' with '1589'
1587 1588 1589 0
-1587 -1588 0
-1587 -1589 0
-1588 -1589 0
c Encoding variable: variant_fields_00003_00004_00008 with domain: int(1..2,7) (representing constraint )
c Direct encoding.
c Var 'variant_fields_00003_00004_00008' direct represents '1' with '1590'
c Var 'variant_fields_00003_00004_00008' direct represents '2' with '1591'
c Var 'variant_fields_00003_00004_00008' direct represents '7' with '1592'
1590 1591 1592 0
-1590 -1591 0
-1590 -1592 0
-1591 -1592 0
c Encoding variable: variant_fields_00003_00004_00009 with domain: int(4) (representing constraint )
c Var 'variant_fields_00003_00004_00009' direct represents '4' with '1593'
1593 0
c Encoding variable: variant_fields_00003_00005_00001 with domain: int(1,4..5,7,9) (representing constraint )
c Direct encoding.
c Var 'variant_fields_00003_00005_00001' direct represents '1' with '1594'
c Var 'variant_fields_00003_00005_00001' direct represents '4' with '1595'
c Var 'variant_fields_00003_00005_00001' direct represents '5' with '1596'
c Var 'variant_fields_00003_00005_00001' direct represents '7' with '1597'
c Var 'variant_fields_00003_00005_00001' direct represents '9' with '1598'
1594 1595 1596 1597 1598 0
-1594 -1595 0
-1594 -1596 0
-1594 -1597 0
-1594 -1598 0
-1595 -1596 0
-1595 -1597 0
-1595 -1598 0
-1596 -1597 0
-1596 -1598 0
-1597 -1598 0
c Encoding variable: variant_fields_00003_00005_00002 with domain: int(1..2,4..5,7,9) (representing constraint )
c Direct encoding.
c Var 'variant_fields_00003_00005_00002' direct represents '1' with '1599'
c Var 'variant_fields_00003_00005_00002' direct represents '2' with '1600'
c Var 'variant_fields_00003_00005_00002' direct represents '4' with '1601'
c Var 'variant_fields_00003_00005_00002' direct represents '5' with '1602'
c Var 'variant_fields_00003_00005_00002' direct represents '7' with '1603'
c Var 'variant_fields_00003_00005_00002' direct represents '9' with '1604'
1599 1600 1601 1602 1603 1604 0
-1599 -1600 0
-1599 -1601 0
-1599 -1602 0
-1599 -1603 0
-1599 -1604 0
-1600 -1601 0
-1600 -1602 0
-1600 -1603 0
-1600 -1604 0
-1601 -1602 0
-1601 -1603 0
-1601 -1604 0
-1602 -1603 0
-1602 -1604 0
-1603 -1604 0
c Encoding variable: variant_fields_00003_00005_00003 with domain: int(2,5,7,9) (representing constraint )
c Direct encoding.
c Var 'variant_fields_00003_00005_00003' direct represents '2' with '1605'
c Var 'variant_fields_00003_00005_00003' direct represents '5' with '1606'
c Var 'variant_fields_00003_00005_00003' direct represents '7' with '1607'
c Var 'variant_fields_00003_00005_00003' direct represents '9' with '1608'
1605 1606 1607 1608 0
-1605 -1606 0
-1605 -1607 0
-1605 -1608 0
-1606 -1607 0
-1606 -1608 0
-1607 -1608 0
c Encoding variable: variant_fields_00003_00005_00004 with domain: int(1..4,6..8) (representing constraint )
c Direct encoding.
c Var 'variant_fields_00003_00005_00004' direct represents '1' with '1609'
c Var 'variant_fields_00003_00005_00004' direct represents '2' with '1610'
c Var 'variant_fields_00003_00005_00004' direct represents '3' with '1611'
c Var 'variant_fields_00003_00005_00004' direct represents '4' with '1612'
c Var 'variant_fields_00003_00005_00004' direct represents '6' with '1613'
c Var 'variant_fields_00003_00005_00004' direct represents '7' with '1614'
c Var 'variant_fields_00003_00005_00004' direct represents '8' with '1615'
1609 1610 1611 1612 1613 1614 1615 0
-1609 1616 0
-1609 1619 0
-1610 1617 0
-1610 1619 0
-1611 1618 0
-1611 1619 0
-1612 1616 0
-1612 1620 0
-1613 1617 0
-1613 1620 0
-1614 1618 0
-1614 1620 0
-1615 1616 0
-1615 1621 0
-1616 -1617 0
-1616 -1618 0
-1617 -1618 0
-1619 -1620 0
-1619 -1621 0
-1620 -1621 0
c Encoding variable: variant_fields_00003_00005_00005 with domain: int(1..4,6..8) (representing constraint )
c Direct encoding.
c Var 'variant_fields_00003_00005_00005' direct represents '1' with '1622'
c Var 'variant_fields_00003_00005_00005' direct represents '2' with '1623'
c Var 'variant_fields_00003_00005_00005' direct represents '3' with '1624'
c Var 'variant_fields_00003_00005_00005' direct represents '4' with '1625'
c Var 'variant_fields_00003_00005_00005' direct represents '6' with '1626'
c Var 'variant_fields_00003_00005_00005' direct represents '7' with '1627'
c Var 'variant_fields_00003_00005_00005' direct represents '8' with '1628'
1622 1623 1624 1625 1626 1627 1628 0
-1622 1629 0
-1622 1632 0
-1623 1630 0
-1623 1632 0
-1624 1631 0
-1624 1632 0
-1625 1629 0
-1625 1633 0
-1626 1630 0
-1626 1633 0
-1627 1631 0
-1627 1633 0
-1628 1629 0
-1628 1634 0
-1629 -1630 0
-1629 -1631 0
-1630 -1631 0
-1632 -1633 0
-1632 -1634 0
-1633 -1634 0
c Encoding variable: variant_fields_00003_00005_00006 with domain: int(4,6..8) (representing constraint )
c Direct encoding.
c Var 'variant_fields_00003_00005_00006' direct represents '4' with '1635'
c Var 'variant_fields_00003_00005_00006' direct represents '6' with '1636'
c Var 'variant_fields_00003_00005_00006' direct represents '7' with '1637'
c Var 'variant_fields_00003_00005_00006' direct represents '8' with '1638'
1635 1636 1637 1638 0
-1635 -1636 0
-1635 -1637 0
-1635 -1638 0
-1636 -1637 0
-1636 -1638 0
-1637 -1638 0
c Encoding variable: variant_fields_00003_00005_00007 with domain: int(2..3,5..9) (representing constraint )
c Direct encoding.
c Var 'variant_fields_00003_00005_00007' direct represents '2' with '1639'
c Var 'variant_fields_00003_00005_00007' direct represents '3' with '1640'
c Var 'variant_fields_00003_00005_00007' direct represents '5' with '1641'
c Var 'variant_fields_00003_00005_00007' direct represents '6' with '1642'
c Var 'variant_fields_00003_00005_00007' direct represents '7' with '1643'
c Var 'variant_fields_00003_00005_00007' direct represents '8' with '1644'
c Var 'variant_fields_00003_00005_00007' direct represents '9' with '1645'
1639 1640 1641 1642 1643 1644 1645 0
-1639 1646 0
-1639 1649 0
-1640 1647 0
-1640 1649 0
-1641 1648 0
-1641 1649 0
-1642 1646 0
-1642 1650 0
-1643 1647 0
-1643 1650 0
-1644 1648 0
-1644 1650 0
-1645 1646 0
-1645 1651 0
-1646 -1647 0
-1646 -1648 0
-1647 -1648 0
-1649 -1650 0
-1649 -1651 0
-1650 -1651 0
c Encoding variable: variant_fields_00003_00005_00008 with domain: int(2..3,5..9) (representing constraint )
c Direct encoding.
c Var 'variant_fields_00003_00005_00008' direct represents '2' with '1652'
c Var 'variant_fields_00003_00005_00008' direct represents '3' with '1653'
c Var 'variant_fields_00003_00005_00008' direct represents '5' with '1654'
c Var 'variant_fields_00003_00005_00008' direct represents '6' with '1655'
c Var 'variant_fields_00003_00005_00008' direct represents '7' with '1656'
c Var 'variant_fields_00003_00005_00008' direct represents '8' with '1657'
c Var 'variant_fields_00003_00005_00008' direct represents '9' with '1658'
1652 1653 1654 1655 1656 1657 1658 0
-1652 1659 0
-1652 1662 0
-1653 1660 0
-1653 1662 0
-1654 1661 0
-1654 1662 0
-1655 1659 0
-1655 1663 0
-1656 1660 0
-1656 1663 0
-1657 1661 0
-1657 1663 0
-1658 1659 0
-1658 1664 0
-1659 -1660 0
-1659 -1661 0
-1660 -1661 0
-1662 -1663 0
-1662 -1664 0
-1663 -1664 0
c Encoding variable: variant_fields_00003_00005_00009 with domain: int(2,5..9) (representing constraint )
c Direct encoding.
c Var 'variant_fields_00003_00005_00009' direct represents '2' with '1665'
c Var 'variant_fields_00003_00005_00009' direct represents '5' with '1666'
c Var 'variant_fields_00003_00005_00009' direct represents '6' with '1667'
c Var 'variant_fields_00003_00005_00009' direct represents '7' with '1668'
c Var 'variant_fields_00003_00005_00009' direct represents '8' with '1669'
c Var 'variant_fields_00003_00005_00009' direct represents '9' with '1670'
1665 1666 1667 1668 1669 1670 0
-1665 -1666 0
-1665 -1667 0
-1665 -1668 0
-1665 -1669 0
-1665 -1670 0
-1666 -1667 0
-1666 -1668 0
-1666 -1669 0
-1666 -1670 0
-1667 -1668 0
-1667 -1669 0
-1667 -1670 0
-1668 -1669 0
-1668 -1670 0
-1669 -1670 0
c Encoding variable: variant_fields_00003_00006_00001 with domain: int(5,7) (representing constraint )
c Var 'variant_fields_00003_00006_00001' direct represents '5' with '-1671'
c Var 'variant_fields_00003_00006_00001' direct represents '7' with '1671'
c Var 'variant_fields_00003_00006_00001' order represents '7' with '1'
c Var 'variant_fields_00003_00006_00001' order represents '5' with '-1671'
c Encoding variable: variant_fields_00003_00006_00002 with domain: int(1..2,4..5,7,9) (representing constraint )
c Both direct and order encoding.
c Var 'variant_fields_00003_00006_00002' order represents '1' with '1672'
c Var 'variant_fields_00003_00006_00002' direct represents '1' with '1672'
c Var 'variant_fields_00003_00006_00002' order represents '2' with '1673'
-1672 1673 0
c Var 'variant_fields_00003_00006_00002' direct represents '2' with '1674'
1672 -1673 1674 0
-1674 1673 0
-1674 -1672 0
c Var 'variant_fields_00003_00006_00002' order represents '4' with '1675'
-1673 1675 0
c Var 'variant_fields_00003_00006_00002' direct represents '4' with '1676'
1673 -1675 1676 0
-1676 1675 0
-1676 -1673 0
c Var 'variant_fields_00003_00006_00002' order represents '5' with '1677'
-1675 1677 0
c Var 'variant_fields_00003_00006_00002' direct represents '5' with '1678'
1675 -1677 1678 0
-1678 1677 0
-1678 -1675 0
c Var 'variant_fields_00003_00006_00002' order represents '7' with '1679'
-1677 1679 0
c Var 'variant_fields_00003_00006_00002' direct represents '7' with '1680'
1677 -1679 1680 0
-1680 1679 0
-1680 -1677 0
c Var 'variant_fields_00003_00006_00002' direct represents '9' with '-1679'
1672 1674 1676 1678 1680 -1679 0
c Encoding variable: variant_fields_00003_00006_00003 with domain: int(1..2,5,7,9) (representing constraint )
c Both direct and order encoding.
c Var 'variant_fields_00003_00006_00003' order represents '1' with '1681'
c Var 'variant_fields_00003_00006_00003' direct represents '1' with '1681'
c Var 'variant_fields_00003_00006_00003' order represents '2' with '1682'
-1681 1682 0
c Var 'variant_fields_00003_00006_00003' direct represents '2' with '1683'
1681 -1682 1683 0
-1683 1682 0
-1683 -1681 0
c Var 'variant_fields_00003_00006_00003' order represents '5' with '1684'
-1682 1684 0
c Var 'variant_fields_00003_00006_00003' direct represents '5' with '1685'
1682 -1684 1685 0
-1685 1684 0
-1685 -1682 0
c Var 'variant_fields_00003_00006_00003' order represents '7' with '1686'
-1684 1686 0
c Var 'variant_fields_00003_00006_00003' direct represents '7' with '1687'
1684 -1686 1687 0
-1687 1686 0
-1687 -1684 0
c Var 'variant_fields_00003_00006_00003' direct represents '9' with '-1686'
1681 1683 1685 1687 -1686 0
c Encoding variable: variant_fields_00003_00006_00004 with domain: int(1..4,6..8) (representing constraint )
c Both direct and order encoding.
c Var 'variant_fields_00003_00006_00004' order represents '1' with '1688'
c Var 'variant_fields_00003_00006_00004' direct represents '1' with '1688'
c Var 'variant_fields_00003_00006_00004' order represents '2' with '1689'
-1688 1689 0
c Var 'variant_fields_00003_00006_00004' direct represents '2' with '1690'
1688 -1689 1690 0
-1690 1689 0
-1690 -1688 0
c Var 'variant_fields_00003_00006_00004' order represents '3' with '1691'
-1689 1691 0
c Var 'variant_fields_00003_00006_00004' direct represents '3' with '1692'
1689 -1691 1692 0
-1692 1691 0
-1692 -1689 0
c Var 'variant_fields_00003_00006_00004' order represents '4' with '1693'
-1691 1693 0
c Var 'variant_fields_00003_00006_00004' direct represents '4' with '1694'
1691 -1693 1694 0
-1694 1693 0
-1694 -1691 0
c Var 'variant_fields_00003_00006_00004' order represents '6' with '1695'
-1693 1695 0
c Var 'variant_fields_00003_00006_00004' direct represents '6' with '1696'
1693 -1695 1696 0
-1696 1695 0
-1696 -1693 0
c Var 'variant_fields_00003_00006_00004' order represents '7' with '1697'
-1695 1697 0
c Var 'variant_fields_00003_00006_00004' direct represents '7' with '1698'
1695 -1697 1698 0
-1698 1697 0
-1698 -1695 0
c Var 'variant_fields_00003_00006_00004' direct represents '8' with '-1697'
1688 1690 1692 1694 1696 1698 -1697 0
c Encoding variable: variant_fields_00003_00006_00005 with domain: int(1..4,6..8) (representing constraint )
c Both direct and order encoding.
c Var 'variant_fields_00003_00006_00005' order represents '1' with '1699'
c Var 'variant_fields_00003_00006_00005' direct represents '1' with '1699'
c Var 'variant_fields_00003_00006_00005' order represents '2' with '1700'
-1699 1700 0
c Var 'variant_fields_00003_00006_00005' direct represents '2' with '1701'
1699 -1700 1701 0
-1701 1700 0
-1701 -1699 0
c Var 'variant_fields_00003_00006_00005' order represents '3' with '1702'
-1700 1702 0
c Var 'variant_fields_00003_00006_00005' direct represents '3' with '1703'
1700 -1702 1703 0
-1703 1702 0
-1703 -1700 0
c Var 'variant_fields_00003_00006_00005' order represents '4' with '1704'
-1702 1704 0
c Var 'variant_fields_00003_00006_00005' direct represents '4' with '1705'
1702 -1704 1705 0
-1705 1704 0
-1705 -1702 0
c Var 'variant_fields_00003_00006_00005' order represents '6' with '1706'
-1704 1706 0
c Var 'variant_fields_00003_00006_00005' direct represents '6' with '1707'
1704 -1706 1707 0
-1707 1706 0
-1707 -1704 0
c Var 'variant_fields_00003_00006_00005' order represents '7' with '1708'
-1706 1708 0
c Var 'variant_fields_00003_00006_00005' direct represents '7' with '1709'
1706 -1708 1709 0
-1709 1708 0
-1709 -1706 0
c Var 'variant_fields_00003_00006_00005' direct represents '8' with '-1708'
1699 1701 1703 1705 1707 1709 -1708 0
c Encoding variable: variant_fields_00003_00006_00006 with domain: int(4,6..8) (representing constraint )
c Direct encoding.
c Var 'variant_fields_00003_00006_00006' direct represents '4' with '1710'
c Var 'variant_fields_00003_00006_00006' direct represents '6' with '1711'
c Var 'variant_fields_00003_00006_00006' direct represents '7' with '1712'
c Var 'variant_fields_00003_00006_00006' direct represents '8' with '1713'
1710 1711 1712 1713 0
-1710 -1711 0
-1710 -1712 0
-1710 -1713 0
-1711 -1712 0
-1711 -1713 0
-1712 -1713 0
c Encoding variable: variant_fields_00003_00006_00007 with domain: int(2..3,5..9) (representing constraint )
c Direct encoding.
c Var 'variant_fields_00003_00006_00007' direct represents '2' with '1714'
c Var 'variant_fields_00003_00006_00007' direct represents '3' with '1715'
c Var 'variant_fields_00003_00006_00007' direct represents '5' with '1716'
c Var 'variant_fields_00003_00006_00007' direct represents '6' with '1717'
c Var 'variant_fields_00003_00006_00007' direct represents '7' with '1718'
c Var 'variant_fields_00003_00006_00007' direct represents '8' with '1719'
c Var 'variant_fields_00003_00006_00007' direct represents '9' with '1720'
1714 1715 1716 1717 1718 1719 1720 0
-1714 1721 0
-1714 1724 0
-1715 1722 0
-1715 1724 0
-1716 1723 0
-1716 1724 0
-1717 1721 0
-1717 1725 0
-1718 1722 0
-1718 1725 0
-1719 1723 0
-1719 1725 0
-1720 1721 0
-1720 1726 0
-1721 -1722 0
-1721 -1723 0
-1722 -1723 0
-1724 -1725 0
-1724 -1726 0
-1725 -1726 0
c Encoding variable: variant_fields_00003_00006_00008 with domain: int(2..3,5..9) (representing constraint )
c Direct encoding.
c Var 'variant_fields_00003_00006_00008' direct represents '2' with '1727'
c Var 'variant_fields_00003_00006_00008' direct represents '3' with '1728'
c Var 'variant_fields_00003_00006_00008' direct represents '5' with '1729'
c Var 'variant_fields_00003_00006_00008' direct represents '6' with '1730'
c Var 'variant_fields_00003_00006_00008' direct represents '7' with '1731'
c Var 'variant_fields_00003_00006_00008' direct represents '8' with '1732'
c Var 'variant_fields_00003_00006_00008' direct represents '9' with '1733'
1727 1728 1729 1730 1731 1732 1733 0
-1727 1734 0
-1727 1737 0
-1728 1735 0
-1728 1737 0
-1729 1736 0
-1729 1737 0
-1730 1734 0
-1730 1738 0
-1731 1735 0
-1731 1738 0
-1732 1736 0
-1732 1738 0
-1733 1734 0
-1733 1739 0
-1734 -1735 0
-1734 -1736 0
-1735 -1736 0
-1737 -1738 0
-1737 -1739 0
-1738 -1739 0
c Encoding variable: variant_fields_00003_00006_00009 with domain: int(5..8) (representing constraint )
c Direct encoding.
c Var 'variant_fields_00003_00006_00009' direct represents '5' with '1740'
c Var 'variant_fields_00003_00006_00009' direct represents '6' with '1741'
c Var 'variant_fields_00003_00006_00009' direct represents '7' with '1742'
c Var 'variant_fields_00003_00006_00009' direct represents '8' with '1743'
1740 1741 1742 1743 0
-1740 -1741 0
-1740 -1742 0
-1740 -1743 0
-1741 -1742 0
-1741 -1743 0
-1742 -1743 0
c Encoding variable: variant_fields_00003_00007_00001 with domain: int(1,5..9) (representing constraint )
c Direct encoding.
c Var 'variant_fields_00003_00007_00001' direct represents '1' with '1744'
c Var 'variant_fields_00003_00007_00001' direct represents '5' with '1745'
c Var 'variant_fields_00003_00007_00001' direct represents '6' with '1746'
c Var 'variant_fields_00003_00007_00001' direct represents '7' with '1747'
c Var 'variant_fields_00003_00007_00001' direct represents '8' with '1748'
c Var 'variant_fields_00003_00007_00001' direct represents '9' with '1749'
1744 1745 1746 1747 1748 1749 0
-1744 -1745 0
-1744 -1746 0
-1744 -1747 0
-1744 -1748 0
-1744 -1749 0
-1745 -1746 0
-1745 -1747 0
-1745 -1748 0
-1745 -1749 0
-1746 -1747 0
-1746 -1748 0
-1746 -1749 0
-1747 -1748 0
-1747 -1749 0
-1748 -1749 0
c Encoding variable: variant_fields_00003_00007_00002 with domain: int(1..3,5,7,9) (representing constraint )
c Direct encoding.
c Var 'variant_fields_00003_00007_00002' direct represents '1' with '1750'
c Var 'variant_fields_00003_00007_00002' direct represents '2' with '1751'
c Var 'variant_fields_00003_00007_00002' direct represents '3' with '1752'
c Var 'variant_fields_00003_00007_00002' direct represents '5' with '1753'
c Var 'variant_fields_00003_00007_00002' direct represents '7' with '1754'
c Var 'variant_fields_00003_00007_00002' direct represents '9' with '1755'
1750 1751 1752 1753 1754 1755 0
-1750 -1751 0
-1750 -1752 0
-1750 -1753 0
-1750 -1754 0
-1750 -1755 0
-1751 -1752 0
-1751 -1753 0
-1751 -1754 0
-1751 -1755 0
-1752 -1753 0
-1752 -1754 0
-1752 -1755 0
-1753 -1754 0
-1753 -1755 0
-1754 -1755 0
c Encoding variable: variant_fields_00003_00007_00003 with domain: int(1..2,5,7..9) (representing constraint )
c Direct encoding.
c Var 'variant_fields_00003_00007_00003' direct represents '1' with '1756'
c Var 'variant_fields_00003_00007_00003' direct represents '2' with '1757'
c Var 'variant_fields_00003_00007_00003' direct represents '5' with '1758'
c Var 'variant_fields_00003_00007_00003' direct represents '7' with '1759'
c Var 'variant_fields_00003_00007_00003' direct represents '8' with '1760'
c Var 'variant_fields_00003_00007_00003' direct represents '9' with '1761'
1756 1757 1758 1759 1760 1761 0
-1756 -1757 0
-1756 -1758 0
-1756 -1759 0
-1756 -1760 0
-1756 -1761 0
-1757 -1758 0
-1757 -1759 0
-1757 -1760 0
-1757 -1761 0
-1758 -1759 0
-1758 -1760 0
-1758 -1761 0
-1759 -1760 0
-1759 -1761 0
-1760 -1761 0
c Encoding variable: variant_fields_00003_00007_00004 with domain: int(2,4..9) (representing constraint )
c Direct encoding.
c Var 'variant_fields_00003_00007_00004' direct represents '2' with '1762'
c Var 'variant_fields_00003_00007_00004' direct represents '4' with '1763'
c Var 'variant_fields_00003_00007_00004' direct represents '5' with '1764'
c Var 'variant_fields_00003_00007_00004' direct represents '6' with '1765'
c Var 'variant_fields_00003_00007_00004' direct represents '7' with '1766'
c Var 'variant_fields_00003_00007_00004' direct represents '8' with '1767'
c Var 'variant_fields_00003_00007_00004' direct represents '9' with '1768'
1762 1763 1764 1765 1766 1767 1768 0
-1762 1769 0
-1762 1772 0
-1763 1770 0
-1763 1772 0
-1764 1771 0
-1764 1772 0
-1765 1769 0
-1765 1773 0
-1766 1770 0
-1766 1773 0
-1767 1771 0
-1767 1773 0
-1768 1769 0
-1768 1774 0
-1769 -1770 0
-1769 -1771 0
-1770 -1771 0
-1772 -1773 0
-1772 -1774 0
-1773 -1774 0
c Encoding variable: variant_fields_00003_00007_00005 with domain: int(2,4..9) (representing constraint )
c Direct encoding.
c Var 'variant_fields_00003_00007_00005' direct represents '2' with '1775'
c Var 'variant_fields_00003_00007_00005' direct represents '4' with '1776'
c Var 'variant_fields_00003_00007_00005' direct represents '5' with '1777'
c Var 'variant_fields_00003_00007_00005' direct represents '6' with '1778'
c Var 'variant_fields_00003_00007_00005' direct represents '7' with '1779'
c Var 'variant_fields_00003_00007_00005' direct represents '8' with '1780'
c Var 'variant_fields_00003_00007_00005' direct represents '9' with '1781'
1775 1776 1777 1778 1779 1780 1781 0
-1775 1782 0
-1775 1785 0
-1776 1783 0
-1776 1785 0
-1777 1784 0
-1777 1785 0
-1778 1782 0
-1778 1786 0
-1779 1783 0
-1779 1786 0
-1780 1784 0
-1780 1786 0
-1781 1782 0
-1781 1787 0
-1782 -1783 0
-1782 -1784 0
-1783 -1784 0
-1785 -1786 0
-1785 -1787 0
-1786 -1787 0
c Encoding variable: variant_fields_00003_00007_00006 with domain: int(1,4,6..7) (representing constraint )
c Direct encoding.
c Var 'variant_fields_00003_00007_00006' direct represents '1' with '1788'
c Var 'variant_fields_00003_00007_00006' direct represents '4' with '1789'
c Var 'variant_fields_00003_00007_00006' direct represents '6' with '1790'
c Var 'variant_fields_00003_00007_00006' direct represents '7' with '1791'
1788 1789 1790 1791 0
-1788 -1789 0
-1788 -1790 0
-1788 -1791 0
-1789 -1790 0
-1789 -1791 0
-1790 -1791 0
c Encoding variable: variant_fields_00003_00007_00007 with domain: int(2..9) (representing constraint )
c Direct encoding.
c Var 'variant_fields_00003_00007_00007' direct represents '2' with '1792'
c Var 'variant_fields_00003_00007_00007' direct represents '3' with '1793'
c Var 'variant_fields_00003_00007_00007' direct represents '4' with '1794'
c Var 'variant_fields_00003_00007_00007' direct represents '5' with '1795'
c Var 'variant_fields_00003_00007_00007' direct represents '6' with '1796'
c Var 'variant_fields_00003_00007_00007' direct represents '7' with '1797'
c Var 'variant_fields_00003_00007_00007' direct represents '8' with '1798'
c Var 'variant_fields_00003_00007_00007' direct represents '9' with '1799'
1792 1793 1794 1795 1796 1797 1798 1799 0
-1792 1800 0
-1792 1803 0
-1793 1801 0
-1793 1803 0
-1794 1802 0
-1794 1803 0
-1795 1800 0
-1795 1804 0
-1796 1801 0
-1796 1804 0
-1797 1802 0
-1797 1804 0
-1798 1800 0
-1798 1805 0
-1799 1801 0
-1799 1805 0
-1800 -1801 0
-1800 -1802 0
-1801 -1802 0
-1803 -1804 0
-1803 -1805 0
-1804 -1805 0
c Encoding variable: variant_fields_00003_00007_00008 with domain: int(2..9) (representing constraint )
c Direct encoding.
c Var 'variant_fields_00003_00007_00008' direct represents '2' with '1806'
c Var 'variant_fields_00003_00007_00008' direct represents '3' with '1807'
c Var 'variant_fields_00003_00007_00008' direct represents '4' with '1808'
c Var 'variant_fields_00003_00007_00008' direct represents '5' with '1809'
c Var 'variant_fields_00003_00007_00008' direct represents '6' with '1810'
c Var 'variant_fields_00003_00007_00008' direct represents '7' with '1811'
c Var 'variant_fields_00003_00007_00008' direct represents '8' with '1812'
c Var 'variant_fields_00003_00007_00008' direct represents '9' with '1813'
1806 1807 1808 1809 1810 1811 1812 1813 0
-1806 1814 0
-1806 1817 0
-1807 1815 0
-1807 1817 0
-1808 1816 0
-1808 1817 0
-1809 1814 0
-1809 1818 0
-1810 1815 0
-1810 1818 0
-1811 1816 0
-1811 1818 0
-1812 1814 0
-1812 1819 0
-1813 1815 0
-1813 1819 0
-1814 -1815 0
-1814 -1816 0
-1815 -1816 0
-1817 -1818 0
-1817 -1819 0
-1818 -1819 0
c Encoding variable: variant_fields_00003_00007_00009 with domain: int(1..2,5..9) (representing constraint )
c Direct encoding.
c Var 'variant_fields_00003_00007_00009' direct represents '1' with '1820'
c Var 'variant_fields_00003_00007_00009' direct represents '2' with '1821'
c Var 'variant_fields_00003_00007_00009' direct represents '5' with '1822'
c Var 'variant_fields_00003_00007_00009' direct represents '6' with '1823'
c Var 'variant_fields_00003_00007_00009' direct represents '7' with '1824'
c Var 'variant_fields_00003_00007_00009' direct represents '8' with '1825'
c Var 'variant_fields_00003_00007_00009' direct represents '9' with '1826'
1820 1821 1822 1823 1824 1825 1826 0
-1820 1827 0
-1820 1830 0
-1821 1828 0
-1821 1830 0
-1822 1829 0
-1822 1830 0
-1823 1827 0
-1823 1831 0
-1824 1828 0
-1824 1831 0
-1825 1829 0
-1825 1831 0
-1826 1827 0
-1826 1832 0
-1827 -1828 0
-1827 -1829 0
-1828 -1829 0
-1830 -1831 0
-1830 -1832 0
-1831 -1832 0
c Encoding variable: variant_fields_00003_00008_00001 with domain: int(5..8) (representing constraint )
c Both direct and order encoding.
c Var 'variant_fields_00003_00008_00001' order represents '5' with '1833'
c Var 'variant_fields_00003_00008_00001' direct represents '5' with '1833'
c Var 'variant_fields_00003_00008_00001' order represents '6' with '1834'
-1833 1834 0
c Var 'variant_fields_00003_00008_00001' direct represents '6' with '1835'
1833 -1834 1835 0
-1835 1834 0
-1835 -1833 0
c Var 'variant_fields_00003_00008_00001' order represents '7' with '1836'
-1834 1836 0
c Var 'variant_fields_00003_00008_00001' direct represents '7' with '1837'
1834 -1836 1837 0
-1837 1836 0
-1837 -1834 0
c Var 'variant_fields_00003_00008_00001' direct represents '8' with '-1836'
1833 1835 1837 -1836 0
c Encoding variable: variant_fields_00003_00008_00002 with domain: int(1..3,5,7,9) (representing constraint )
c Both direct and order encoding.
c Var 'variant_fields_00003_00008_00002' order represents '1' with '1838'
c Var 'variant_fields_00003_00008_00002' direct represents '1' with '1838'
c Var 'variant_fields_00003_00008_00002' order represents '2' with '1839'
-1838 1839 0
c Var 'variant_fields_00003_00008_00002' direct represents '2' with '1840'
1838 -1839 1840 0
-1840 1839 0
-1840 -1838 0
c Var 'variant_fields_00003_00008_00002' order represents '3' with '1841'
-1839 1841 0
c Var 'variant_fields_00003_00008_00002' direct represents '3' with '1842'
1839 -1841 1842 0
-1842 1841 0
-1842 -1839 0
c Var 'variant_fields_00003_00008_00002' order represents '5' with '1843'
-1841 1843 0
c Var 'variant_fields_00003_00008_00002' direct represents '5' with '1844'
1841 -1843 1844 0
-1844 1843 0
-1844 -1841 0
c Var 'variant_fields_00003_00008_00002' order represents '7' with '1845'
-1843 1845 0
c Var 'variant_fields_00003_00008_00002' direct represents '7' with '1846'
1843 -1845 1846 0
-1846 1845 0
-1846 -1843 0
c Var 'variant_fields_00003_00008_00002' direct represents '9' with '-1845'
1838 1840 1842 1844 1846 -1845 0
c Encoding variable: variant_fields_00003_00008_00003 with domain: int(1..2,5,7..9) (representing constraint )
c Both direct and order encoding.
c Var 'variant_fields_00003_00008_00003' order represents '1' with '1847'
c Var 'variant_fields_00003_00008_00003' direct represents '1' with '1847'
c Var 'variant_fields_00003_00008_00003' order represents '2' with '1848'
-1847 1848 0
c Var 'variant_fields_00003_00008_00003' direct represents '2' with '1849'
1847 -1848 1849 0
-1849 1848 0
-1849 -1847 0
c Var 'variant_fields_00003_00008_00003' order represents '5' with '1850'
-1848 1850 0
c Var 'variant_fields_00003_00008_00003' direct represents '5' with '1851'
1848 -1850 1851 0
-1851 1850 0
-1851 -1848 0
c Var 'variant_fields_00003_00008_00003' order represents '7' with '1852'
-1850 1852 0
c Var 'variant_fields_00003_00008_00003' direct represents '7' with '1853'
1850 -1852 1853 0
-1853 1852 0
-1853 -1850 0
c Var 'variant_fields_00003_00008_00003' order represents '8' with '1854'
-1852 1854 0
c Var 'variant_fields_00003_00008_00003' direct represents '8' with '1855'
1852 -1854 1855 0
-1855 1854 0
-1855 -1852 0
c Var 'variant_fields_00003_00008_00003' direct represents '9' with '-1854'
1847 1849 1851 1853 1855 -1854 0
c Encoding variable: variant_fields_00003_00008_00004 with domain: int(2,4..9) (representing constraint )
c Both direct and order encoding.
c Var 'variant_fields_00003_00008_00004' order represents '2' with '1856'
c Var 'variant_fields_00003_00008_00004' direct represents '2' with '1856'
c Var 'variant_fields_00003_00008_00004' order represents '4' with '1857'
-1856 1857 0
c Var 'variant_fields_00003_00008_00004' direct represents '4' with '1858'
1856 -1857 1858 0
-1858 1857 0
-1858 -1856 0
c Var 'variant_fields_00003_00008_00004' order represents '5' with '1859'
-1857 1859 0
c Var 'variant_fields_00003_00008_00004' direct represents '5' with '1860'
1857 -1859 1860 0
-1860 1859 0
-1860 -1857 0
c Var 'variant_fields_00003_00008_00004' order represents '6' with '1861'
-1859 1861 0
c Var 'variant_fields_00003_00008_00004' direct represents '6' with '1862'
1859 -1861 1862 0
-1862 1861 0
-1862 -1859 0
c Var 'variant_fields_00003_00008_00004' order represents '7' with '1863'
-1861 1863 0
c Var 'variant_fields_00003_00008_00004' direct represents '7' with '1864'
1861 -1863 1864 0
-1864 1863 0
-1864 -1861 0
c Var 'variant_fields_00003_00008_00004' order represents '8' with '1865'
-1863 1865 0
c Var 'variant_fields_00003_00008_00004' direct represents '8' with '1866'
1863 -1865 1866 0
-1866 1865 0
-1866 -1863 0
c Var 'variant_fields_00003_00008_00004' direct represents '9' with '-1865'
1856 1858 1860 1862 1864 1866 -1865 0
c Encoding variable: variant_fields_00003_00008_00005 with domain: int(2,4..9) (representing constraint )
c Both direct and order encoding.
c Var 'variant_fields_00003_00008_00005' order represents '2' with '1867'
c Var 'variant_fields_00003_00008_00005' direct represents '2' with '1867'
c Var 'variant_fields_00003_00008_00005' order represents '4' with '1868'
-1867 1868 0
c Var 'variant_fields_00003_00008_00005' direct represents '4' with '1869'
1867 -1868 1869 0
-1869 1868 0
-1869 -1867 0
c Var 'variant_fields_00003_00008_00005' order represents '5' with '1870'
-1868 1870 0
c Var 'variant_fields_00003_00008_00005' direct represents '5' with '1871'
1868 -1870 1871 0
-1871 1870 0
-1871 -1868 0
c Var 'variant_fields_00003_00008_00005' order represents '6' with '1872'
-1870 1872 0
c Var 'variant_fields_00003_00008_00005' direct represents '6' with '1873'
1870 -1872 1873 0
-1873 1872 0
-1873 -1870 0
c Var 'variant_fields_00003_00008_00005' order represents '7' with '1874'
-1872 1874 0
c Var 'variant_fields_00003_00008_00005' direct represents '7' with '1875'
1872 -1874 1875 0
-1875 1874 0
-1875 -1872 0
c Var 'variant_fields_00003_00008_00005' order represents '8' with '1876'
-1874 1876 0
c Var 'variant_fields_00003_00008_00005' direct represents '8' with '1877'
1874 -1876 1877 0
-1877 1876 0
-1877 -1874 0
c Var 'variant_fields_00003_00008_00005' direct represents '9' with '-1876'
1867 1869 1871 1873 1875 1877 -1876 0
c Encoding variable: variant_fields_00003_00008_00006 with domain: int(1,4,6..7) (representing constraint )
c Direct encoding.
c Var 'variant_fields_00003_00008_00006' direct represents '1' with '1878'
c Var 'variant_fields_00003_00008_00006' direct represents '4' with '1879'
c Var 'variant_fields_00003_00008_00006' direct represents '6' with '1880'
c Var 'variant_fields_00003_00008_00006' direct represents '7' with '1881'
1878 1879 1880 1881 0
-1878 -1879 0
-1878 -1880 0
-1878 -1881 0
-1879 -1880 0
-1879 -1881 0
-1880 -1881 0
c Encoding variable: variant_fields_00003_00008_00007 with domain: int(2..9) (representing constraint )
c Direct encoding.
c Var 'variant_fields_00003_00008_00007' direct represents '2' with '1882'
c Var 'variant_fields_00003_00008_00007' direct represents '3' with '1883'
c Var 'variant_fields_00003_00008_00007' direct represents '4' with '1884'
c Var 'variant_fields_00003_00008_00007' direct represents '5' with '1885'
c Var 'variant_fields_00003_00008_00007' direct represents '6' with '1886'
c Var 'variant_fields_00003_00008_00007' direct represents '7' with '1887'
c Var 'variant_fields_00003_00008_00007' direct represents '8' with '1888'
c Var 'variant_fields_00003_00008_00007' direct represents '9' with '1889'
1882 1883 1884 1885 1886 1887 1888 1889 0
-1882 1890 0
-1882 1893 0
-1883 1891 0
-1883 1893 0
-1884 1892 0
-1884 1893 0
-1885 1890 0
-1885 1894 0
-1886 1891 0
-1886 1894 0
-1887 1892 0
-1887 1894 0
-1888 1890 0
-1888 1895 0
-1889 1891 0
-1889 1895 0
-1890 -1891 0
-1890 -1892 0
-1891 -1892 0
-1893 -1894 0
-1893 -1895 0
-1894 -1895 0
c Encoding variable: variant_fields_00003_00008_00008 with domain: int(2..9) (representing constraint )
c Direct encoding.
c Var 'variant_fields_00003_00008_00008' direct represents '2' with '1896'
c Var 'variant_fields_00003_00008_00008' direct represents '3' with '1897'
c Var 'variant_fields_00003_00008_00008' direct represents '4' with '1898'
c Var 'variant_fields_00003_00008_00008' direct represents '5' with '1899'
c Var 'variant_fields_00003_00008_00008' direct represents '6' with '1900'
c Var 'variant_fields_00003_00008_00008' direct represents '7' with '1901'
c Var 'variant_fields_00003_00008_00008' direct represents '8' with '1902'
c Var 'variant_fields_00003_00008_00008' direct represents '9' with '1903'
1896 1897 1898 1899 1900 1901 1902 1903 0
-1896 1904 0
-1896 1907 0
-1897 1905 0
-1897 1907 0
-1898 1906 0
-1898 1907 0
-1899 1904 0
-1899 1908 0
-1900 1905 0
-1900 1908 0
-1901 1906 0
-1901 1908 0
-1902 1904 0
-1902 1909 0
-1903 1905 0
-1903 1909 0
-1904 -1905 0
-1904 -1906 0
-1905 -1906 0
-1907 -1908 0
-1907 -1909 0
-1908 -1909 0
c Encoding variable: variant_fields_00003_00008_00009 with domain: int(5..8) (representing constraint )
c Direct encoding.
c Var 'variant_fields_00003_00008_00009' direct represents '5' with '1910'
c Var 'variant_fields_00003_00008_00009' direct represents '6' with '1911'
c Var 'variant_fields_00003_00008_00009' direct represents '7' with '1912'
c Var 'variant_fields_00003_00008_00009' direct represents '8' with '1913'
1910 1911 1912 1913 0
-1910 -1911 0
-1910 -1912 0
-1910 -1913 0
-1911 -1912 0
-1911 -1913 0
-1912 -1913 0
c Encoding variable: variant_fields_00003_00009_00001 with domain: int(1,5..9) (representing constraint )
c Direct encoding.
c Var 'variant_fields_00003_00009_00001' direct represents '1' with '1914'
c Var 'variant_fields_00003_00009_00001' direct represents '5' with '1915'
c Var 'variant_fields_00003_00009_00001' direct represents '6' with '1916'
c Var 'variant_fields_00003_00009_00001' direct represents '7' with '1917'
c Var 'variant_fields_00003_00009_00001' direct represents '8' with '1918'
c Var 'variant_fields_00003_00009_00001' direct represents '9' with '1919'
1914 1915 1916 1917 1918 1919 0
-1914 -1915 0
-1914 -1916 0
-1914 -1917 0
-1914 -1918 0
-1914 -1919 0
-1915 -1916 0
-1915 -1917 0
-1915 -1918 0
-1915 -1919 0
-1916 -1917 0
-1916 -1918 0
-1916 -1919 0
-1917 -1918 0
-1917 -1919 0
-1918 -1919 0
c Encoding variable: variant_fields_00003_00009_00002 with domain: int(1..2,5,7,9) (representing constraint )
c Direct encoding.
c Var 'variant_fields_00003_00009_00002' direct represents '1' with '1920'
c Var 'variant_fields_00003_00009_00002' direct represents '2' with '1921'
c Var 'variant_fields_00003_00009_00002' direct represents '5' with '1922'
c Var 'variant_fields_00003_00009_00002' direct represents '7' with '1923'
c Var 'variant_fields_00003_00009_00002' direct represents '9' with '1924'
1920 1921 1922 1923 1924 0
-1920 -1921 0
-1920 -1922 0
-1920 -1923 0
-1920 -1924 0
-1921 -1922 0
-1921 -1923 0
-1921 -1924 0
-1922 -1923 0
-1922 -1924 0
-1923 -1924 0
c Encoding variable: variant_fields_00003_00009_00003 with domain: int(4) (representing constraint )
c Var 'variant_fields_00003_00009_00003' direct represents '4' with '1925'
1925 0
c Encoding variable: variant_fields_00003_00009_00004 with domain: int(2,5..9) (representing constraint )
c Direct encoding.
c Var 'variant_fields_00003_00009_00004' direct represents '2' with '1926'
c Var 'variant_fields_00003_00009_00004' direct represents '5' with '1927'
c Var 'variant_fields_00003_00009_00004' direct represents '6' with '1928'
c Var 'variant_fields_00003_00009_00004' direct represents '7' with '1929'
c Var 'variant_fields_00003_00009_00004' direct represents '8' with '1930'
c Var 'variant_fields_00003_00009_00004' direct represents '9' with '1931'
1926 1927 1928 1929 1930 1931 0
-1926 -1927 0
-1926 -1928 0
-1926 -1929 0
-1926 -1930 0
-1926 -1931 0
-1927 -1928 0
-1927 -1929 0
-1927 -1930 0
-1927 -1931 0
-1928 -1929 0
-1928 -1930 0
-1928 -1931 0
-1929 -1930 0
-1929 -1931 0
-1930 -1931 0
c Encoding variable: variant_fields_00003_00009_00005 with domain: int(2,5..9) (representing constraint )
c Direct encoding.
c Var 'variant_fields_00003_00009_00005' direct represents '2' with '1932'
c Var 'variant_fields_00003_00009_00005' direct represents '5' with '1933'
c Var 'variant_fields_00003_00009_00005' direct represents '6' with '1934'
c Var 'variant_fields_00003_00009_00005' direct represents '7' with '1935'
c Var 'variant_fields_00003_00009_00005' direct represents '8' with '1936'
c Var 'variant_fields_00003_00009_00005' direct represents '9' with '1937'
1932 1933 1934 1935 1936 1937 0
-1932 -1933 0
-1932 -1934 0
-1932 -1935 0
-1932 -1936 0
-1932 -1937 0
-1933 -1934 0
-1933 -1935 0
-1933 -1936 0
-1933 -1937 0
-1934 -1935 0
-1934 -1936 0
-1934 -1937 0
-1935 -1936 0
-1935 -1937 0
-1936 -1937 0
c Encoding variable: variant_fields_00003_00009_00006 with domain: int(3) (representing constraint )
c Var 'variant_fields_00003_00009_00006' direct represents '3' with '1938'
1938 0
c Encoding variable: variant_fields_00003_00009_00007 with domain: int(2,5..9) (representing constraint )
c Direct encoding.
c Var 'variant_fields_00003_00009_00007' direct represents '2' with '1939'
c Var 'variant_fields_00003_00009_00007' direct represents '5' with '1940'
c Var 'variant_fields_00003_00009_00007' direct represents '6' with '1941'
c Var 'variant_fields_00003_00009_00007' direct represents '7' with '1942'
c Var 'variant_fields_00003_00009_00007' direct represents '8' with '1943'
c Var 'variant_fields_00003_00009_00007' direct represents '9' with '1944'
1939 1940 1941 1942 1943 1944 0
-1939 -1940 0
-1939 -1941 0
-1939 -1942 0
-1939 -1943 0
-1939 -1944 0
-1940 -1941 0
-1940 -1942 0
-1940 -1943 0
-1940 -1944 0
-1941 -1942 0
-1941 -1943 0
-1941 -1944 0
-1942 -1943 0
-1942 -1944 0
-1943 -1944 0
c Encoding variable: variant_fields_00003_00009_00008 with domain: int(5..6) (representing constraint )
c Var 'variant_fields_00003_00009_00008' direct represents '5' with '-1945'
c Var 'variant_fields_00003_00009_00008' direct represents '6' with '1945'
c Var 'variant_fields_00003_00009_00008' order represents '6' with '1'
c Var 'variant_fields_00003_00009_00008' order represents '5' with '-1945'
c Encoding variable: variant_fields_00003_00009_00009 with domain: int(1..2,5..9) (representing constraint )
c Direct encoding.
c Var 'variant_fields_00003_00009_00009' direct represents '1' with '1946'
c Var 'variant_fields_00003_00009_00009' direct represents '2' with '1947'
c Var 'variant_fields_00003_00009_00009' direct represents '5' with '1948'
c Var 'variant_fields_00003_00009_00009' direct represents '6' with '1949'
c Var 'variant_fields_00003_00009_00009' direct represents '7' with '1950'
c Var 'variant_fields_00003_00009_00009' direct represents '8' with '1951'
c Var 'variant_fields_00003_00009_00009' direct represents '9' with '1952'
1946 1947 1948 1949 1950 1951 1952 0
-1946 1953 0
-1946 1956 0
-1947 1954 0
-1947 1956 0
-1948 1955 0
-1948 1956 0
-1949 1953 0
-1949 1957 0
-1950 1954 0
-1950 1957 0
-1951 1955 0
-1951 1957 0
-1952 1953 0
-1952 1958 0
-1953 -1954 0
-1953 -1955 0
-1954 -1955 0
-1956 -1957 0
-1956 -1958 0
-1957 -1958 0
c Encoding variable: variant_fields_00004_00001_00001 with domain: int(1..2,5..9) (representing constraint )
c Direct encoding.
c Var 'variant_fields_00004_00001_00001' direct represents '1' with '1959'
c Var 'variant_fields_00004_00001_00001' direct represents '2' with '1960'
c Var 'variant_fields_00004_00001_00001' direct represents '5' with '1961'
c Var 'variant_fields_00004_00001_00001' direct represents '6' with '1962'
c Var 'variant_fields_00004_00001_00001' direct represents '7' with '1963'
c Var 'variant_fields_00004_00001_00001' direct represents '8' with '1964'
c Var 'variant_fields_00004_00001_00001' direct represents '9' with '1965'
1959 1960 1961 1962 1963 1964 1965 0
-1959 1966 0
-1959 1969 0
-1960 1967 0
-1960 1969 0
-1961 1968 0
-1961 1969 0
-1962 1966 0
-1962 1970 0
-1963 1967 0
-1963 1970 0
-1964 1968 0
-1964 1970 0
-1965 1966 0
-1965 1971 0
-1966 -1967 0
-1966 -1968 0
-1967 -1968 0
-1969 -1970 0
-1969 -1971 0
-1970 -1971 0
c Encoding variable: variant_fields_00004_00001_00002 with domain: int(5..8) (representing constraint )
c Direct encoding.
c Var 'variant_fields_00004_00001_00002' direct represents '5' with '1972'
c Var 'variant_fields_00004_00001_00002' direct represents '6' with '1973'
c Var 'variant_fields_00004_00001_00002' direct represents '7' with '1974'
c Var 'variant_fields_00004_00001_00002' direct represents '8' with '1975'
1972 1973 1974 1975 0
-1972 -1973 0
-1972 -1974 0
-1972 -1975 0
-1973 -1974 0
-1973 -1975 0
-1974 -1975 0
c Encoding variable: variant_fields_00004_00001_00003 with domain: int(1..2,5..9) (representing constraint )
c Direct encoding.
c Var 'variant_fields_00004_00001_00003' direct represents '1' with '1976'
c Var 'variant_fields_00004_00001_00003' direct represents '2' with '1977'
c Var 'variant_fields_00004_00001_00003' direct represents '5' with '1978'
c Var 'variant_fields_00004_00001_00003' direct represents '6' with '1979'
c Var 'variant_fields_00004_00001_00003' direct represents '7' with '1980'
c Var 'variant_fields_00004_00001_00003' direct represents '8' with '1981'
c Var 'variant_fields_00004_00001_00003' direct represents '9' with '1982'
1976 1977 1978 1979 1980 1981 1982 0
-1976 1983 0
-1976 1986 0
-1977 1984 0
-1977 1986 0
-1978 1985 0
-1978 1986 0
-1979 1983 0
-1979 1987 0
-1980 1984 0
-1980 1987 0
-1981 1985 0
-1981 1987 0
-1982 1983 0
-1982 1988 0
-1983 -1984 0
-1983 -1985 0
-1984 -1985 0
-1986 -1987 0
-1986 -1988 0
-1987 -1988 0
c Encoding variable: variant_fields_00004_00001_00004 with domain: int(5..8) (representing constraint )
c Direct encoding.
c Var 'variant_fields_00004_00001_00004' direct represents '5' with '1989'
c Var 'variant_fields_00004_00001_00004' direct represents '6' with '1990'
c Var 'variant_fields_00004_00001_00004' direct represents '7' with '1991'
c Var 'variant_fields_00004_00001_00004' direct represents '8' with '1992'
1989 1990 1991 1992 0
-1989 -1990 0
-1989 -1991 0
-1989 -1992 0
-1990 -1991 0
-1990 -1992 0
-1991 -1992 0
c Encoding variable: variant_fields_00004_00001_00005 with domain: int(2,5..9) (representing constraint )
c Direct encoding.
c Var 'variant_fields_00004_00001_00005' direct represents '2' with '1993'
c Var 'variant_fields_00004_00001_00005' direct represents '5' with '1994'
c Var 'variant_fields_00004_00001_00005' direct represents '6' with '1995'
c Var 'variant_fields_00004_00001_00005' direct represents '7' with '1996'
c Var 'variant_fields_00004_00001_00005' direct represents '8' with '1997'
c Var 'variant_fields_00004_00001_00005' direct represents '9' with '1998'
1993 1994 1995 1996 1997 1998 0
-1993 -1994 0
-1993 -1995 0
-1993 -1996 0
-1993 -1997 0
-1993 -1998 0
-1994 -1995 0
-1994 -1996 0
-1994 -1997 0
-1994 -1998 0
-1995 -1996 0
-1995 -1997 0
-1995 -1998 0
-1996 -1997 0
-1996 -1998 0
-1997 -1998 0
c Encoding variable: variant_fields_00004_00001_00006 with domain: int(4) (representing constraint )
c Var 'variant_fields_00004_00001_00006' direct represents '4' with '1999'
1999 0
c Encoding variable: variant_fields_00004_00001_00007 with domain: int(2,5..9) (representing constraint )
c Direct encoding.
c Var 'variant_fields_00004_00001_00007' direct represents '2' with '2000'
c Var 'variant_fields_00004_00001_00007' direct represents '5' with '2001'
c Var 'variant_fields_00004_00001_00007' direct represents '6' with '2002'
c Var 'variant_fields_00004_00001_00007' direct represents '7' with '2003'
c Var 'variant_fields_00004_00001_00007' direct represents '8' with '2004'
c Var 'variant_fields_00004_00001_00007' direct represents '9' with '2005'
2000 2001 2002 2003 2004 2005 0
-2000 -2001 0
-2000 -2002 0
-2000 -2003 0
-2000 -2004 0
-2000 -2005 0
-2001 -2002 0
-2001 -2003 0
-2001 -2004 0
-2001 -2005 0
-2002 -2003 0
-2002 -2004 0
-2002 -2005 0
-2003 -2004 0
-2003 -2005 0
-2004 -2005 0
c Encoding variable: variant_fields_00004_00001_00008 with domain: int(3) (representing constraint )
c Var 'variant_fields_00004_00001_00008' direct represents '3' with '2006'
2006 0
c Encoding variable: variant_fields_00004_00001_00009 with domain: int(5..9) (representing constraint )
c Direct encoding.
c Var 'variant_fields_00004_00001_00009' direct represents '5' with '2007'
c Var 'variant_fields_00004_00001_00009' direct represents '6' with '2008'
c Var 'variant_fields_00004_00001_00009' direct represents '7' with '2009'
c Var 'variant_fields_00004_00001_00009' direct represents '8' with '2010'
c Var 'variant_fields_00004_00001_00009' direct represents '9' with '2011'
2007 2008 2009 2010 2011 0
-2007 -2008 0
-2007 -2009 0
-2007 -2010 0
-2007 -2011 0
-2008 -2009 0
-2008 -2010 0
-2008 -2011 0
-2009 -2010 0
-2009 -2011 0
-2010 -2011 0
c Encoding variable: variant_fields_00004_00002_00001 with domain: int(5..6) (representing constraint )
c Var 'variant_fields_00004_00002_00001' direct represents '5' with '-2012'
c Var 'variant_fields_00004_00002_00001' direct represents '6' with '2012'
c Var 'variant_fields_00004_00002_00001' order represents '6' with '1'
c Var 'variant_fields_00004_00002_00001' order represents '5' with '-2012'
c Encoding variable: variant_fields_00004_00002_00002 with domain: int(2..9) (representing constraint )
c Both direct and order encoding.
c Var 'variant_fields_00004_00002_00002' order represents '2' with '2013'
c Var 'variant_fields_00004_00002_00002' direct represents '2' with '2013'
c Var 'variant_fields_00004_00002_00002' order represents '3' with '2014'
-2013 2014 0
c Var 'variant_fields_00004_00002_00002' direct represents '3' with '2015'
2013 -2014 2015 0
-2015 2014 0
-2015 -2013 0
c Var 'variant_fields_00004_00002_00002' order represents '4' with '2016'
-2014 2016 0
c Var 'variant_fields_00004_00002_00002' direct represents '4' with '2017'
2014 -2016 2017 0
-2017 2016 0
-2017 -2014 0
c Var 'variant_fields_00004_00002_00002' order represents '5' with '2018'
-2016 2018 0
c Var 'variant_fields_00004_00002_00002' direct represents '5' with '2019'
2016 -2018 2019 0
-2019 2018 0
-2019 -2016 0
c Var 'variant_fields_00004_00002_00002' order represents '6' with '2020'
-2018 2020 0
c Var 'variant_fields_00004_00002_00002' direct represents '6' with '2021'
2018 -2020 2021 0
-2021 2020 0
-2021 -2018 0
c Var 'variant_fields_00004_00002_00002' order represents '7' with '2022'
-2020 2022 0
c Var 'variant_fields_00004_00002_00002' direct represents '7' with '2023'
2020 -2022 2023 0
-2023 2022 0
-2023 -2020 0
c Var 'variant_fields_00004_00002_00002' order represents '8' with '2024'
-2022 2024 0
c Var 'variant_fields_00004_00002_00002' direct represents '8' with '2025'
2022 -2024 2025 0
-2025 2024 0
-2025 -2022 0
c Var 'variant_fields_00004_00002_00002' direct represents '9' with '-2024'
2013 2015 2017 2019 2021 2023 2025 -2024 0
c Encoding variable: variant_fields_00004_00002_00003 with domain: int(2..9) (representing constraint )
c Both direct and order encoding.
c Var 'variant_fields_00004_00002_00003' order represents '2' with '2026'
c Var 'variant_fields_00004_00002_00003' direct represents '2' with '2026'
c Var 'variant_fields_00004_00002_00003' order represents '3' with '2027'
-2026 2027 0
c Var 'variant_fields_00004_00002_00003' direct represents '3' with '2028'
2026 -2027 2028 0
-2028 2027 0
-2028 -2026 0
c Var 'variant_fields_00004_00002_00003' order represents '4' with '2029'
-2027 2029 0
c Var 'variant_fields_00004_00002_00003' direct represents '4' with '2030'
2027 -2029 2030 0
-2030 2029 0
-2030 -2027 0
c Var 'variant_fields_00004_00002_00003' order represents '5' with '2031'
-2029 2031 0
c Var 'variant_fields_00004_00002_00003' direct represents '5' with '2032'
2029 -2031 2032 0
-2032 2031 0
-2032 -2029 0
c Var 'variant_fields_00004_00002_00003' order represents '6' with '2033'
-2031 2033 0
c Var 'variant_fields_00004_00002_00003' direct represents '6' with '2034'
2031 -2033 2034 0
-2034 2033 0
-2034 -2031 0
c Var 'variant_fields_00004_00002_00003' order represents '7' with '2035'
-2033 2035 0
c Var 'variant_fields_00004_00002_00003' direct represents '7' with '2036'
2033 -2035 2036 0
-2036 2035 0
-2036 -2033 0
c Var 'variant_fields_00004_00002_00003' order represents '8' with '2037'
-2035 2037 0
c Var 'variant_fields_00004_00002_00003' direct represents '8' with '2038'
2035 -2037 2038 0
-2038 2037 0
-2038 -2035 0
c Var 'variant_fields_00004_00002_00003' direct represents '9' with '-2037'
2026 2028 2030 2032 2034 2036 2038 -2037 0
c Encoding variable: variant_fields_00004_00002_00004 with domain: int(2..3,5..9) (representing constraint )
c Both direct and order encoding.
c Var 'variant_fields_00004_00002_00004' order represents '2' with '2039'
c Var 'variant_fields_00004_00002_00004' direct represents '2' with '2039'
c Var 'variant_fields_00004_00002_00004' order represents '3' with '2040'
-2039 2040 0
c Var 'variant_fields_00004_00002_00004' direct represents '3' with '2041'
2039 -2040 2041 0
-2041 2040 0
-2041 -2039 0
c Var 'variant_fields_00004_00002_00004' order represents '5' with '2042'
-2040 2042 0
c Var 'variant_fields_00004_00002_00004' direct represents '5' with '2043'
2040 -2042 2043 0
-2043 2042 0
-2043 -2040 0
c Var 'variant_fields_00004_00002_00004' order represents '6' with '2044'
-2042 2044 0
c Var 'variant_fields_00004_00002_00004' direct represents '6' with '2045'
2042 -2044 2045 0
-2045 2044 0
-2045 -2042 0
c Var 'variant_fields_00004_00002_00004' order represents '7' with '2046'
-2044 2046 0
c Var 'variant_fields_00004_00002_00004' direct represents '7' with '2047'
2044 -2046 2047 0
-2047 2046 0
-2047 -2044 0
c Var 'variant_fields_00004_00002_00004' order represents '8' with '2048'
-2046 2048 0
c Var 'variant_fields_00004_00002_00004' direct represents '8' with '2049'
2046 -2048 2049 0
-2049 2048 0
-2049 -2046 0
c Var 'variant_fields_00004_00002_00004' direct represents '9' with '-2048'
2039 2041 2043 2045 2047 2049 -2048 0
c Encoding variable: variant_fields_00004_00002_00005 with domain: int(2..3,5..9) (representing constraint )
c Both direct and order encoding.
c Var 'variant_fields_00004_00002_00005' order represents '2' with '2050'
c Var 'variant_fields_00004_00002_00005' direct represents '2' with '2050'
c Var 'variant_fields_00004_00002_00005' order represents '3' with '2051'
-2050 2051 0
c Var 'variant_fields_00004_00002_00005' direct represents '3' with '2052'
2050 -2051 2052 0
-2052 2051 0
-2052 -2050 0
c Var 'variant_fields_00004_00002_00005' order represents '5' with '2053'
-2051 2053 0
c Var 'variant_fields_00004_00002_00005' direct represents '5' with '2054'
2051 -2053 2054 0
-2054 2053 0
-2054 -2051 0
c Var 'variant_fields_00004_00002_00005' order represents '6' with '2055'
-2053 2055 0
c Var 'variant_fields_00004_00002_00005' direct represents '6' with '2056'
2053 -2055 2056 0
-2056 2055 0
-2056 -2053 0
c Var 'variant_fields_00004_00002_00005' order represents '7' with '2057'
-2055 2057 0
c Var 'variant_fields_00004_00002_00005' direct represents '7' with '2058'
2055 -2057 2058 0
-2058 2057 0
-2058 -2055 0
c Var 'variant_fields_00004_00002_00005' order represents '8' with '2059'
-2057 2059 0
c Var 'variant_fields_00004_00002_00005' direct represents '8' with '2060'
2057 -2059 2060 0
-2060 2059 0
-2060 -2057 0
c Var 'variant_fields_00004_00002_00005' direct represents '9' with '-2059'
2050 2052 2054 2056 2058 2060 -2059 0
c Encoding variable: variant_fields_00004_00002_00006 with domain: int(1..2,7) (representing constraint )
c Direct encoding.
c Var 'variant_fields_00004_00002_00006' direct represents '1' with '2061'
c Var 'variant_fields_00004_00002_00006' direct represents '2' with '2062'
c Var 'variant_fields_00004_00002_00006' direct represents '7' with '2063'
2061 2062 2063 0
-2061 -2062 0
-2061 -2063 0
-2062 -2063 0
c Encoding variable: variant_fields_00004_00002_00007 with domain: int(2,5..9) (representing constraint )
c Direct encoding.
c Var 'variant_fields_00004_00002_00007' direct represents '2' with '2064'
c Var 'variant_fields_00004_00002_00007' direct represents '5' with '2065'
c Var 'variant_fields_00004_00002_00007' direct represents '6' with '2066'
c Var 'variant_fields_00004_00002_00007' direct represents '7' with '2067'
c Var 'variant_fields_00004_00002_00007' direct represents '8' with '2068'
c Var 'variant_fields_00004_00002_00007' direct represents '9' with '2069'
2064 2065 2066 2067 2068 2069 0
-2064 -2065 0
-2064 -2066 0
-2064 -2067 0
-2064 -2068 0
-2064 -2069 0
-2065 -2066 0
-2065 -2067 0
-2065 -2068 0
-2065 -2069 0
-2066 -2067 0
-2066 -2068 0
-2066 -2069 0
-2067 -2068 0
-2067 -2069 0
-2068 -2069 0
c Encoding variable: variant_fields_00004_00002_00008 with domain: int(1,4) (representing constraint )
c Var 'variant_fields_00004_00002_00008' direct represents '1' with '-2070'
c Var 'variant_fields_00004_00002_00008' direct represents '4' with '2070'
c Var 'variant_fields_00004_00002_00008' order represents '4' with '1'
c Var 'variant_fields_00004_00002_00008' order represents '1' with '-2070'
c Encoding variable: variant_fields_00004_00002_00009 with domain: int(5..7) (representing constraint )
c Direct encoding.
c Var 'variant_fields_00004_00002_00009' direct represents '5' with '2071'
c Var 'variant_fields_00004_00002_00009' direct represents '6' with '2072'
c Var 'variant_fields_00004_00002_00009' direct represents '7' with '2073'
2071 2072 2073 0
-2071 -2072 0
-2071 -2073 0
-2072 -2073 0
c Encoding variable: variant_fields_00004_00003_00001 with domain: int(2,5..9) (representing constraint )
c Direct encoding.
c Var 'variant_fields_00004_00003_00001' direct represents '2' with '2074'
c Var 'variant_fields_00004_00003_00001' direct represents '5' with '2075'
c Var 'variant_fields_00004_00003_00001' direct represents '6' with '2076'
c Var 'variant_fields_00004_00003_00001' direct represents '7' with '2077'
c Var 'variant_fields_00004_00003_00001' direct represents '8' with '2078'
c Var 'variant_fields_00004_00003_00001' direct represents '9' with '2079'
2074 2075 2076 2077 2078 2079 0
-2074 -2075 0
-2074 -2076 0
-2074 -2077 0
-2074 -2078 0
-2074 -2079 0
-2075 -2076 0
-2075 -2077 0
-2075 -2078 0
-2075 -2079 0
-2076 -2077 0
-2076 -2078 0
-2076 -2079 0
-2077 -2078 0
-2077 -2079 0
-2078 -2079 0
c Encoding variable: variant_fields_00004_00003_00002 with domain: int(2..9) (representing constraint )
c Direct encoding.
c Var 'variant_fields_00004_00003_00002' direct represents '2' with '2080'
c Var 'variant_fields_00004_00003_00002' direct represents '3' with '2081'
c Var 'variant_fields_00004_00003_00002' direct represents '4' with '2082'
c Var 'variant_fields_00004_00003_00002' direct represents '5' with '2083'
c Var 'variant_fields_00004_00003_00002' direct represents '6' with '2084'
c Var 'variant_fields_00004_00003_00002' direct represents '7' with '2085'
c Var 'variant_fields_00004_00003_00002' direct represents '8' with '2086'
c Var 'variant_fields_00004_00003_00002' direct represents '9' with '2087'
2080 2081 2082 2083 2084 2085 2086 2087 0
-2080 2088 0
-2080 2091 0
-2081 2089 0
-2081 2091 0
-2082 2090 0
-2082 2091 0
-2083 2088 0
-2083 2092 0
-2084 2089 0
-2084 2092 0
-2085 2090 0
-2085 2092 0
-2086 2088 0
-2086 2093 0
-2087 2089 0
-2087 2093 0
-2088 -2089 0
-2088 -2090 0
-2089 -2090 0
-2091 -2092 0
-2091 -2093 0
-2092 -2093 0
c Encoding variable: variant_fields_00004_00003_00003 with domain: int(2..9) (representing constraint )
c Direct encoding.
c Var 'variant_fields_00004_00003_00003' direct represents '2' with '2094'
c Var 'variant_fields_00004_00003_00003' direct represents '3' with '2095'
c Var 'variant_fields_00004_00003_00003' direct represents '4' with '2096'
c Var 'variant_fields_00004_00003_00003' direct represents '5' with '2097'
c Var 'variant_fields_00004_00003_00003' direct represents '6' with '2098'
c Var 'variant_fields_00004_00003_00003' direct represents '7' with '2099'
c Var 'variant_fields_00004_00003_00003' direct represents '8' with '2100'
c Var 'variant_fields_00004_00003_00003' direct represents '9' with '2101'
2094 2095 2096 2097 2098 2099 2100 2101 0
-2094 2102 0
-2094 2105 0
-2095 2103 0
-2095 2105 0
-2096 2104 0
-2096 2105 0
-2097 2102 0
-2097 2106 0
-2098 2103 0
-2098 2106 0
-2099 2104 0
-2099 2106 0
-2100 2102 0
-2100 2107 0
-2101 2103 0
-2101 2107 0
-2102 -2103 0
-2102 -2104 0
-2103 -2104 0
-2105 -2106 0
-2105 -2107 0
-2106 -2107 0
c Encoding variable: variant_fields_00004_00003_00004 with domain: int(2..3,5..9) (representing constraint )
c Direct encoding.
c Var 'variant_fields_00004_00003_00004' direct represents '2' with '2108'
c Var 'variant_fields_00004_00003_00004' direct represents '3' with '2109'
c Var 'variant_fields_00004_00003_00004' direct represents '5' with '2110'
c Var 'variant_fields_00004_00003_00004' direct represents '6' with '2111'
c Var 'variant_fields_00004_00003_00004' direct represents '7' with '2112'
c Var 'variant_fields_00004_00003_00004' direct represents '8' with '2113'
c Var 'variant_fields_00004_00003_00004' direct represents '9' with '2114'
2108 2109 2110 2111 2112 2113 2114 0
-2108 2115 0
-2108 2118 0
-2109 2116 0
-2109 2118 0
-2110 2117 0
-2110 2118 0
-2111 2115 0
-2111 2119 0
-2112 2116 0
-2112 2119 0
-2113 2117 0
-2113 2119 0
-2114 2115 0
-2114 2120 0
-2115 -2116 0
-2115 -2117 0
-2116 -2117 0
-2118 -2119 0
-2118 -2120 0
-2119 -2120 0
c Encoding variable: variant_fields_00004_00003_00005 with domain: int(2..3,5..9) (representing constraint )
c Direct encoding.
c Var 'variant_fields_00004_00003_00005' direct represents '2' with '2121'
c Var 'variant_fields_00004_00003_00005' direct represents '3' with '2122'
c Var 'variant_fields_00004_00003_00005' direct represents '5' with '2123'
c Var 'variant_fields_00004_00003_00005' direct represents '6' with '2124'
c Var 'variant_fields_00004_00003_00005' direct represents '7' with '2125'
c Var 'variant_fields_00004_00003_00005' direct represents '8' with '2126'
c Var 'variant_fields_00004_00003_00005' direct represents '9' with '2127'
2121 2122 2123 2124 2125 2126 2127 0
-2121 2128 0
-2121 2131 0
-2122 2129 0
-2122 2131 0
-2123 2130 0
-2123 2131 0
-2124 2128 0
-2124 2132 0
-2125 2129 0
-2125 2132 0
-2126 2130 0
-2126 2132 0
-2127 2128 0
-2127 2133 0
-2128 -2129 0
-2128 -2130 0
-2129 -2130 0
-2131 -2132 0
-2131 -2133 0
-2132 -2133 0
c Encoding variable: variant_fields_00004_00003_00006 with domain: int(1..2,7) (representing constraint )
c Direct encoding.
c Var 'variant_fields_00004_00003_00006' direct represents '1' with '2134'
c Var 'variant_fields_00004_00003_00006' direct represents '2' with '2135'
c Var 'variant_fields_00004_00003_00006' direct represents '7' with '2136'
2134 2135 2136 0
-2134 -2135 0
-2134 -2136 0
-2135 -2136 0
c Encoding variable: variant_fields_00004_00003_00007 with domain: int(2,5..9) (representing constraint )
c Direct encoding.
c Var 'variant_fields_00004_00003_00007' direct represents '2' with '2137'
c Var 'variant_fields_00004_00003_00007' direct represents '5' with '2138'
c Var 'variant_fields_00004_00003_00007' direct represents '6' with '2139'
c Var 'variant_fields_00004_00003_00007' direct represents '7' with '2140'
c Var 'variant_fields_00004_00003_00007' direct represents '8' with '2141'
c Var 'variant_fields_00004_00003_00007' direct represents '9' with '2142'
2137 2138 2139 2140 2141 2142 0
-2137 -2138 0
-2137 -2139 0
-2137 -2140 0
-2137 -2141 0
-2137 -2142 0
-2138 -2139 0
-2138 -2140 0
-2138 -2141 0
-2138 -2142 0
-2139 -2140 0
-2139 -2141 0
-2139 -2142 0
-2140 -2141 0
-2140 -2142 0
-2141 -2142 0
c Encoding variable: variant_fields_00004_00003_00008 with domain: int(1,4) (representing constraint )
c Var 'variant_fields_00004_00003_00008' direct represents '1' with '-2143'
c Var 'variant_fields_00004_00003_00008' direct represents '4' with '2143'
c Var 'variant_fields_00004_00003_00008' order represents '4' with '1'
c Var 'variant_fields_00004_00003_00008' order represents '1' with '-2143'
c Encoding variable: variant_fields_00004_00003_00009 with domain: int(5..9) (representing constraint )
c Direct encoding.
c Var 'variant_fields_00004_00003_00009' direct represents '5' with '2144'
c Var 'variant_fields_00004_00003_00009' direct represents '6' with '2145'
c Var 'variant_fields_00004_00003_00009' direct represents '7' with '2146'
c Var 'variant_fields_00004_00003_00009' direct represents '8' with '2147'
c Var 'variant_fields_00004_00003_00009' direct represents '9' with '2148'
2144 2145 2146 2147 2148 0
-2144 -2145 0
-2144 -2146 0
-2144 -2147 0
-2144 -2148 0
-2145 -2146 0
-2145 -2147 0
-2145 -2148 0
-2146 -2147 0
-2146 -2148 0
-2147 -2148 0
c Encoding variable: variant_fields_00004_00004_00001 with domain: int(3) (representing constraint )
c Var 'variant_fields_00004_00004_00001' direct represents '3' with '2149'
2149 0
c Encoding variable: variant_fields_00004_00004_00002 with domain: int(1,4,6..7) (representing constraint )
c Both direct and order encoding.
c Var 'variant_fields_00004_00004_00002' order represents '1' with '2150'
c Var 'variant_fields_00004_00004_00002' direct represents '1' with '2150'
c Var 'variant_fields_00004_00004_00002' order represents '4' with '2151'
-2150 2151 0
c Var 'variant_fields_00004_00004_00002' direct represents '4' with '2152'
2150 -2151 2152 0
-2152 2151 0
-2152 -2150 0
c Var 'variant_fields_00004_00004_00002' order represents '6' with '2153'
-2151 2153 0
c Var 'variant_fields_00004_00004_00002' direct represents '6' with '2154'
2151 -2153 2154 0
-2154 2153 0
-2154 -2151 0
c Var 'variant_fields_00004_00004_00002' direct represents '7' with '-2153'
2150 2152 2154 -2153 0
c Encoding variable: variant_fields_00004_00004_00003 with domain: int(1,4,6..7) (representing constraint )
c Both direct and order encoding.
c Var 'variant_fields_00004_00004_00003' order represents '1' with '2155'
c Var 'variant_fields_00004_00004_00003' direct represents '1' with '2155'
c Var 'variant_fields_00004_00004_00003' order represents '4' with '2156'
-2155 2156 0
c Var 'variant_fields_00004_00004_00003' direct represents '4' with '2157'
2155 -2156 2157 0
-2157 2156 0
-2157 -2155 0
c Var 'variant_fields_00004_00004_00003' order represents '6' with '2158'
-2156 2158 0
c Var 'variant_fields_00004_00004_00003' direct represents '6' with '2159'
2156 -2158 2159 0
-2159 2158 0
-2159 -2156 0
c Var 'variant_fields_00004_00004_00003' direct represents '7' with '-2158'
2155 2157 2159 -2158 0
c Encoding variable: variant_fields_00004_00004_00004 with domain: int(4,6..8) (representing constraint )
c Direct encoding.
c Var 'variant_fields_00004_00004_00004' direct represents '4' with '2160'
c Var 'variant_fields_00004_00004_00004' direct represents '6' with '2161'
c Var 'variant_fields_00004_00004_00004' direct represents '7' with '2162'
c Var 'variant_fields_00004_00004_00004' direct represents '8' with '2163'
2160 2161 2162 2163 0
-2160 -2161 0
-2160 -2162 0
-2160 -2163 0
-2161 -2162 0
-2161 -2163 0
-2162 -2163 0
c Encoding variable: variant_fields_00004_00004_00005 with domain: int(4,6..8) (representing constraint )
c Direct encoding.
c Var 'variant_fields_00004_00004_00005' direct represents '4' with '2164'
c Var 'variant_fields_00004_00004_00005' direct represents '6' with '2165'
c Var 'variant_fields_00004_00004_00005' direct represents '7' with '2166'
c Var 'variant_fields_00004_00004_00005' direct represents '8' with '2167'
2164 2165 2166 2167 0
-2164 -2165 0
-2164 -2166 0
-2164 -2167 0
-2165 -2166 0
-2165 -2167 0
-2166 -2167 0
c Encoding variable: variant_fields_00004_00004_00006 with domain: int(5) (representing constraint )
c Var 'variant_fields_00004_00004_00006' direct represents '5' with '2168'
2168 0
c Encoding variable: variant_fields_00004_00004_00007 with domain: int(4,6..8) (representing constraint )
c Direct encoding.
c Var 'variant_fields_00004_00004_00007' direct represents '4' with '2169'
c Var 'variant_fields_00004_00004_00007' direct represents '6' with '2170'
c Var 'variant_fields_00004_00004_00007' direct represents '7' with '2171'
c Var 'variant_fields_00004_00004_00007' direct represents '8' with '2172'
2169 2170 2171 2172 0
-2169 -2170 0
-2169 -2171 0
-2169 -2172 0
-2170 -2171 0
-2170 -2172 0
-2171 -2172 0
c Encoding variable: variant_fields_00004_00004_00008 with domain: int(9) (representing constraint )
c Var 'variant_fields_00004_00004_00008' direct represents '9' with '2173'
2173 0
c Encoding variable: variant_fields_00004_00004_00009 with domain: int(2) (representing constraint )
c Var 'variant_fields_00004_00004_00009' direct represents '2' with '2174'
2174 0
c Encoding variable: variant_fields_00004_00005_00001 with domain: int(2,5..9) (representing constraint )
c Direct encoding.
c Var 'variant_fields_00004_00005_00001' direct represents '2' with '2175'
c Var 'variant_fields_00004_00005_00001' direct represents '5' with '2176'
c Var 'variant_fields_00004_00005_00001' direct represents '6' with '2177'
c Var 'variant_fields_00004_00005_00001' direct represents '7' with '2178'
c Var 'variant_fields_00004_00005_00001' direct represents '8' with '2179'
c Var 'variant_fields_00004_00005_00001' direct represents '9' with '2180'
2175 2176 2177 2178 2179 2180 0
-2175 -2176 0
-2175 -2177 0
-2175 -2178 0
-2175 -2179 0
-2175 -2180 0
-2176 -2177 0
-2176 -2178 0
-2176 -2179 0
-2176 -2180 0
-2177 -2178 0
-2177 -2179 0
-2177 -2180 0
-2178 -2179 0
-2178 -2180 0
-2179 -2180 0
c Encoding variable: variant_fields_00004_00005_00002 with domain: int(2,4..9) (representing constraint )
c Direct encoding.
c Var 'variant_fields_00004_00005_00002' direct represents '2' with '2181'
c Var 'variant_fields_00004_00005_00002' direct represents '4' with '2182'
c Var 'variant_fields_00004_00005_00002' direct represents '5' with '2183'
c Var 'variant_fields_00004_00005_00002' direct represents '6' with '2184'
c Var 'variant_fields_00004_00005_00002' direct represents '7' with '2185'
c Var 'variant_fields_00004_00005_00002' direct represents '8' with '2186'
c Var 'variant_fields_00004_00005_00002' direct represents '9' with '2187'
2181 2182 2183 2184 2185 2186 2187 0
-2181 2188 0
-2181 2191 0
-2182 2189 0
-2182 2191 0
-2183 2190 0
-2183 2191 0
-2184 2188 0
-2184 2192 0
-2185 2189 0
-2185 2192 0
-2186 2190 0
-2186 2192 0
-2187 2188 0
-2187 2193 0
-2188 -2189 0
-2188 -2190 0
-2189 -2190 0
-2191 -2192 0
-2191 -2193 0
-2192 -2193 0
c Encoding variable: variant_fields_00004_00005_00003 with domain: int(2,4..9) (representing constraint )
c Direct encoding.
c Var 'variant_fields_00004_00005_00003' direct represents '2' with '2194'
c Var 'variant_fields_00004_00005_00003' direct represents '4' with '2195'
c Var 'variant_fields_00004_00005_00003' direct represents '5' with '2196'
c Var 'variant_fields_00004_00005_00003' direct represents '6' with '2197'
c Var 'variant_fields_00004_00005_00003' direct represents '7' with '2198'
c Var 'variant_fields_00004_00005_00003' direct represents '8' with '2199'
c Var 'variant_fields_00004_00005_00003' direct represents '9' with '2200'
2194 2195 2196 2197 2198 2199 2200 0
-2194 2201 0
-2194 2204 0
-2195 2202 0
-2195 2204 0
-2196 2203 0
-2196 2204 0
-2197 2201 0
-2197 2205 0
-2198 2202 0
-2198 2205 0
-2199 2203 0
-2199 2205 0
-2200 2201 0
-2200 2206 0
-2201 -2202 0
-2201 -2203 0
-2202 -2203 0
-2204 -2205 0
-2204 -2206 0
-2205 -2206 0
c Encoding variable: variant_fields_00004_00005_00004 with domain: int(1..4,6..8) (representing constraint )
c Direct encoding.
c Var 'variant_fields_00004_00005_00004' direct represents '1' with '2207'
c Var 'variant_fields_00004_00005_00004' direct represents '2' with '2208'
c Var 'variant_fields_00004_00005_00004' direct represents '3' with '2209'
c Var 'variant_fields_00004_00005_00004' direct represents '4' with '2210'
c Var 'variant_fields_00004_00005_00004' direct represents '6' with '2211'
c Var 'variant_fields_00004_00005_00004' direct represents '7' with '2212'
c Var 'variant_fields_00004_00005_00004' direct represents '8' with '2213'
2207 2208 2209 2210 2211 2212 2213 0
-2207 2214 0
-2207 2217 0
-2208 2215 0
-2208 2217 0
-2209 2216 0
-2209 2217 0
-2210 2214 0
-2210 2218 0
-2211 2215 0
-2211 2218 0
-2212 2216 0
-2212 2218 0
-2213 2214 0
-2213 2219 0
-2214 -2215 0
-2214 -2216 0
-2215 -2216 0
-2217 -2218 0
-2217 -2219 0
-2218 -2219 0
c Encoding variable: variant_fields_00004_00005_00005 with domain: int(1..4,6..8) (representing constraint )
c Direct encoding.
c Var 'variant_fields_00004_00005_00005' direct represents '1' with '2220'
c Var 'variant_fields_00004_00005_00005' direct represents '2' with '2221'
c Var 'variant_fields_00004_00005_00005' direct represents '3' with '2222'
c Var 'variant_fields_00004_00005_00005' direct represents '4' with '2223'
c Var 'variant_fields_00004_00005_00005' direct represents '6' with '2224'
c Var 'variant_fields_00004_00005_00005' direct represents '7' with '2225'
c Var 'variant_fields_00004_00005_00005' direct represents '8' with '2226'
2220 2221 2222 2223 2224 2225 2226 0
-2220 2227 0
-2220 2230 0
-2221 2228 0
-2221 2230 0
-2222 2229 0
-2222 2230 0
-2223 2227 0
-2223 2231 0
-2224 2228 0
-2224 2231 0
-2225 2229 0
-2225 2231 0
-2226 2227 0
-2226 2232 0
-2227 -2228 0
-2227 -2229 0
-2228 -2229 0
-2230 -2231 0
-2230 -2232 0
-2231 -2232 0
c Encoding variable: variant_fields_00004_00005_00006 with domain: int(2,7,9) (representing constraint )
c Direct encoding.
c Var 'variant_fields_00004_00005_00006' direct represents '2' with '2233'
c Var 'variant_fields_00004_00005_00006' direct represents '7' with '2234'
c Var 'variant_fields_00004_00005_00006' direct represents '9' with '2235'
2233 2234 2235 0
-2233 -2234 0
-2233 -2235 0
-2234 -2235 0
c Encoding variable: variant_fields_00004_00005_00007 with domain: int(1,3..8) (representing constraint )
c Direct encoding.
c Var 'variant_fields_00004_00005_00007' direct represents '1' with '2236'
c Var 'variant_fields_00004_00005_00007' direct represents '3' with '2237'
c Var 'variant_fields_00004_00005_00007' direct represents '4' with '2238'
c Var 'variant_fields_00004_00005_00007' direct represents '5' with '2239'
c Var 'variant_fields_00004_00005_00007' direct represents '6' with '2240'
c Var 'variant_fields_00004_00005_00007' direct represents '7' with '2241'
c Var 'variant_fields_00004_00005_00007' direct represents '8' with '2242'
2236 2237 2238 2239 2240 2241 2242 0
-2236 2243 0
-2236 2246 0
-2237 2244 0
-2237 2246 0
-2238 2245 0
-2238 2246 0
-2239 2243 0
-2239 2247 0
-2240 2244 0
-2240 2247 0
-2241 2245 0
-2241 2247 0
-2242 2243 0
-2242 2248 0
-2243 -2244 0
-2243 -2245 0
-2244 -2245 0
-2246 -2247 0
-2246 -2248 0
-2247 -2248 0
c Encoding variable: variant_fields_00004_00005_00008 with domain: int(5,7..8) (representing constraint )
c Direct encoding.
c Var 'variant_fields_00004_00005_00008' direct represents '5' with '2249'
c Var 'variant_fields_00004_00005_00008' direct represents '7' with '2250'
c Var 'variant_fields_00004_00005_00008' direct represents '8' with '2251'
2249 2250 2251 0
-2249 -2250 0
-2249 -2251 0
-2250 -2251 0
c Encoding variable: variant_fields_00004_00005_00009 with domain: int(1,4..8) (representing constraint )
c Direct encoding.
c Var 'variant_fields_00004_00005_00009' direct represents '1' with '2252'
c Var 'variant_fields_00004_00005_00009' direct represents '4' with '2253'
c Var 'variant_fields_00004_00005_00009' direct represents '5' with '2254'
c Var 'variant_fields_00004_00005_00009' direct represents '6' with '2255'
c Var 'variant_fields_00004_00005_00009' direct represents '7' with '2256'
c Var 'variant_fields_00004_00005_00009' direct represents '8' with '2257'
2252 2253 2254 2255 2256 2257 0
-2252 -2253 0
-2252 -2254 0
-2252 -2255 0
-2252 -2256 0
-2252 -2257 0
-2253 -2254 0
-2253 -2255 0
-2253 -2256 0
-2253 -2257 0
-2254 -2255 0
-2254 -2256 0
-2254 -2257 0
-2255 -2256 0
-2255 -2257 0
-2256 -2257 0
c Encoding variable: variant_fields_00004_00006_00001 with domain: int(2,5..9) (representing constraint )
c Direct encoding.
c Var 'variant_fields_00004_00006_00001' direct represents '2' with '2258'
c Var 'variant_fields_00004_00006_00001' direct represents '5' with '2259'
c Var 'variant_fields_00004_00006_00001' direct represents '6' with '2260'
c Var 'variant_fields_00004_00006_00001' direct represents '7' with '2261'
c Var 'variant_fields_00004_00006_00001' direct represents '8' with '2262'
c Var 'variant_fields_00004_00006_00001' direct represents '9' with '2263'
2258 2259 2260 2261 2262 2263 0
-2258 -2259 0
-2258 -2260 0
-2258 -2261 0
-2258 -2262 0
-2258 -2263 0
-2259 -2260 0
-2259 -2261 0
-2259 -2262 0
-2259 -2263 0
-2260 -2261 0
-2260 -2262 0
-2260 -2263 0
-2261 -2262 0
-2261 -2263 0
-2262 -2263 0
c Encoding variable: variant_fields_00004_00006_00002 with domain: int(2,4..9) (representing constraint )
c Direct encoding.
c Var 'variant_fields_00004_00006_00002' direct represents '2' with '2264'
c Var 'variant_fields_00004_00006_00002' direct represents '4' with '2265'
c Var 'variant_fields_00004_00006_00002' direct represents '5' with '2266'
c Var 'variant_fields_00004_00006_00002' direct represents '6' with '2267'
c Var 'variant_fields_00004_00006_00002' direct represents '7' with '2268'
c Var 'variant_fields_00004_00006_00002' direct represents '8' with '2269'
c Var 'variant_fields_00004_00006_00002' direct represents '9' with '2270'
2264 2265 2266 2267 2268 2269 2270 0
-2264 2271 0
-2264 2274 0
-2265 2272 0
-2265 2274 0
-2266 2273 0
-2266 2274 0
-2267 2271 0
-2267 2275 0
-2268 2272 0
-2268 2275 0
-2269 2273 0
-2269 2275 0
-2270 2271 0
-2270 2276 0
-2271 -2272 0
-2271 -2273 0
-2272 -2273 0
-2274 -2275 0
-2274 -2276 0
-2275 -2276 0
c Encoding variable: variant_fields_00004_00006_00003 with domain: int(2,4..9) (representing constraint )
c Direct encoding.
c Var 'variant_fields_00004_00006_00003' direct represents '2' with '2277'
c Var 'variant_fields_00004_00006_00003' direct represents '4' with '2278'
c Var 'variant_fields_00004_00006_00003' direct represents '5' with '2279'
c Var 'variant_fields_00004_00006_00003' direct represents '6' with '2280'
c Var 'variant_fields_00004_00006_00003' direct represents '7' with '2281'
c Var 'variant_fields_00004_00006_00003' direct represents '8' with '2282'
c Var 'variant_fields_00004_00006_00003' direct represents '9' with '2283'
2277 2278 2279 2280 2281 2282 2283 0
-2277 2284 0
-2277 2287 0
-2278 2285 0
-2278 2287 0
-2279 2286 0
-2279 2287 0
-2280 2284 0
-2280 2288 0
-2281 2285 0
-2281 2288 0
-2282 2286 0
-2282 2288 0
-2283 2284 0
-2283 2289 0
-2284 -2285 0
-2284 -2286 0
-2285 -2286 0
-2287 -2288 0
-2287 -2289 0
-2288 -2289 0
c Encoding variable: variant_fields_00004_00006_00004 with domain: int(1..4,6..8) (representing constraint )
c Direct encoding.
c Var 'variant_fields_00004_00006_00004' direct represents '1' with '2290'
c Var 'variant_fields_00004_00006_00004' direct represents '2' with '2291'
c Var 'variant_fields_00004_00006_00004' direct represents '3' with '2292'
c Var 'variant_fields_00004_00006_00004' direct represents '4' with '2293'
c Var 'variant_fields_00004_00006_00004' direct represents '6' with '2294'
c Var 'variant_fields_00004_00006_00004' direct represents '7' with '2295'
c Var 'variant_fields_00004_00006_00004' direct represents '8' with '2296'
2290 2291 2292 2293 2294 2295 2296 0
-2290 2297 0
-2290 2300 0
-2291 2298 0
-2291 2300 0
-2292 2299 0
-2292 2300 0
-2293 2297 0
-2293 2301 0
-2294 2298 0
-2294 2301 0
-2295 2299 0
-2295 2301 0
-2296 2297 0
-2296 2302 0
-2297 -2298 0
-2297 -2299 0
-2298 -2299 0
-2300 -2301 0
-2300 -2302 0
-2301 -2302 0
c Encoding variable: variant_fields_00004_00006_00005 with domain: int(1..4,6..8) (representing constraint )
c Direct encoding.
c Var 'variant_fields_00004_00006_00005' direct represents '1' with '2303'
c Var 'variant_fields_00004_00006_00005' direct represents '2' with '2304'
c Var 'variant_fields_00004_00006_00005' direct represents '3' with '2305'
c Var 'variant_fields_00004_00006_00005' direct represents '4' with '2306'
c Var 'variant_fields_00004_00006_00005' direct represents '6' with '2307'
c Var 'variant_fields_00004_00006_00005' direct represents '7' with '2308'
c Var 'variant_fields_00004_00006_00005' direct represents '8' with '2309'
2303 2304 2305 2306 2307 2308 2309 0
-2303 2310 0
-2303 2313 0
-2304 2311 0
-2304 2313 0
-2305 2312 0
-2305 2313 0
-2306 2310 0
-2306 2314 0
-2307 2311 0
-2307 2314 0
-2308 2312 0
-2308 2314 0
-2309 2310 0
-2309 2315 0
-2310 -2311 0
-2310 -2312 0
-2311 -2312 0
-2313 -2314 0
-2313 -2315 0
-2314 -2315 0
c Encoding variable: variant_fields_00004_00006_00006 with domain: int(2,7,9) (representing constraint )
c Direct encoding.
c Var 'variant_fields_00004_00006_00006' direct represents '2' with '2316'
c Var 'variant_fields_00004_00006_00006' direct represents '7' with '2317'
c Var 'variant_fields_00004_00006_00006' direct represents '9' with '2318'
2316 2317 2318 0
-2316 -2317 0
-2316 -2318 0
-2317 -2318 0
c Encoding variable: variant_fields_00004_00006_00007 with domain: int(1,3..8) (representing constraint )
c Direct encoding.
c Var 'variant_fields_00004_00006_00007' direct represents '1' with '2319'
c Var 'variant_fields_00004_00006_00007' direct represents '3' with '2320'
c Var 'variant_fields_00004_00006_00007' direct represents '4' with '2321'
c Var 'variant_fields_00004_00006_00007' direct represents '5' with '2322'
c Var 'variant_fields_00004_00006_00007' direct represents '6' with '2323'
c Var 'variant_fields_00004_00006_00007' direct represents '7' with '2324'
c Var 'variant_fields_00004_00006_00007' direct represents '8' with '2325'
2319 2320 2321 2322 2323 2324 2325 0
-2319 2326 0
-2319 2329 0
-2320 2327 0
-2320 2329 0
-2321 2328 0
-2321 2329 0
-2322 2326 0
-2322 2330 0
-2323 2327 0
-2323 2330 0
-2324 2328 0
-2324 2330 0
-2325 2326 0
-2325 2331 0
-2326 -2327 0
-2326 -2328 0
-2327 -2328 0
-2329 -2330 0
-2329 -2331 0
-2330 -2331 0
c Encoding variable: variant_fields_00004_00006_00008 with domain: int(5,7..8) (representing constraint )
c Direct encoding.
c Var 'variant_fields_00004_00006_00008' direct represents '5' with '2332'
c Var 'variant_fields_00004_00006_00008' direct represents '7' with '2333'
c Var 'variant_fields_00004_00006_00008' direct represents '8' with '2334'
2332 2333 2334 0
-2332 -2333 0
-2332 -2334 0
-2333 -2334 0
c Encoding variable: variant_fields_00004_00006_00009 with domain: int(4..6) (representing constraint )
c Direct encoding.
c Var 'variant_fields_00004_00006_00009' direct represents '4' with '2335'
c Var 'variant_fields_00004_00006_00009' direct represents '5' with '2336'
c Var 'variant_fields_00004_00006_00009' direct represents '6' with '2337'
2335 2336 2337 0
-2335 -2336 0
-2335 -2337 0
-2336 -2337 0
c Encoding variable: variant_fields_00004_00007_00001 with domain: int(4) (representing constraint )
c Var 'variant_fields_00004_00007_00001' direct represents '4' with '2338'
2338 0
c Encoding variable: variant_fields_00004_00007_00002 with domain: int(1..2,5,7..9) (representing constraint )
c Both direct and order encoding.
c Var 'variant_fields_00004_00007_00002' order represents '1' with '2339'
c Var 'variant_fields_00004_00007_00002' direct represents '1' with '2339'
c Var 'variant_fields_00004_00007_00002' order represents '2' with '2340'
-2339 2340 0
c Var 'variant_fields_00004_00007_00002' direct represents '2' with '2341'
2339 -2340 2341 0
-2341 2340 0
-2341 -2339 0
c Var 'variant_fields_00004_00007_00002' order represents '5' with '2342'
-2340 2342 0
c Var 'variant_fields_00004_00007_00002' direct represents '5' with '2343'
2340 -2342 2343 0
-2343 2342 0
-2343 -2340 0
c Var 'variant_fields_00004_00007_00002' order represents '7' with '2344'
-2342 2344 0
c Var 'variant_fields_00004_00007_00002' direct represents '7' with '2345'
2342 -2344 2345 0
-2345 2344 0
-2345 -2342 0
c Var 'variant_fields_00004_00007_00002' order represents '8' with '2346'
-2344 2346 0
c Var 'variant_fields_00004_00007_00002' direct represents '8' with '2347'
2344 -2346 2347 0
-2347 2346 0
-2347 -2344 0
c Var 'variant_fields_00004_00007_00002' direct represents '9' with '-2346'
2339 2341 2343 2345 2347 -2346 0
c Encoding variable: variant_fields_00004_00007_00003 with domain: int(1..2,5,7..9) (representing constraint )
c Both direct and order encoding.
c Var 'variant_fields_00004_00007_00003' order represents '1' with '2348'
c Var 'variant_fields_00004_00007_00003' direct represents '1' with '2348'
c Var 'variant_fields_00004_00007_00003' order represents '2' with '2349'
-2348 2349 0
c Var 'variant_fields_00004_00007_00003' direct represents '2' with '2350'
2348 -2349 2350 0
-2350 2349 0
-2350 -2348 0
c Var 'variant_fields_00004_00007_00003' order represents '5' with '2351'
-2349 2351 0
c Var 'variant_fields_00004_00007_00003' direct represents '5' with '2352'
2349 -2351 2352 0
-2352 2351 0
-2352 -2349 0
c Var 'variant_fields_00004_00007_00003' order represents '7' with '2353'
-2351 2353 0
c Var 'variant_fields_00004_00007_00003' direct represents '7' with '2354'
2351 -2353 2354 0
-2354 2353 0
-2354 -2351 0
c Var 'variant_fields_00004_00007_00003' order represents '8' with '2355'
-2353 2355 0
c Var 'variant_fields_00004_00007_00003' direct represents '8' with '2356'
2353 -2355 2356 0
-2356 2355 0
-2356 -2353 0
c Var 'variant_fields_00004_00007_00003' direct represents '9' with '-2355'
2348 2350 2352 2354 2356 -2355 0
c Encoding variable: variant_fields_00004_00007_00004 with domain: int(1..2,5,7,9) (representing constraint )
c Both direct and order encoding.
c Var 'variant_fields_00004_00007_00004' order represents '1' with '2357'
c Var 'variant_fields_00004_00007_00004' direct represents '1' with '2357'
c Var 'variant_fields_00004_00007_00004' order represents '2' with '2358'
-2357 2358 0
c Var 'variant_fields_00004_00007_00004' direct represents '2' with '2359'
2357 -2358 2359 0
-2359 2358 0
-2359 -2357 0
c Var 'variant_fields_00004_00007_00004' order represents '5' with '2360'
-2358 2360 0
c Var 'variant_fields_00004_00007_00004' direct represents '5' with '2361'
2358 -2360 2361 0
-2361 2360 0
-2361 -2358 0
c Var 'variant_fields_00004_00007_00004' order represents '7' with '2362'
-2360 2362 0
c Var 'variant_fields_00004_00007_00004' direct represents '7' with '2363'
2360 -2362 2363 0
-2363 2362 0
-2363 -2360 0
c Var 'variant_fields_00004_00007_00004' direct represents '9' with '-2362'
2357 2359 2361 2363 -2362 0
c Encoding variable: variant_fields_00004_00007_00005 with domain: int(2,5,7,9) (representing constraint )
c Direct encoding.
c Var 'variant_fields_00004_00007_00005' direct represents '2' with '2364'
c Var 'variant_fields_00004_00007_00005' direct represents '5' with '2365'
c Var 'variant_fields_00004_00007_00005' direct represents '7' with '2366'
c Var 'variant_fields_00004_00007_00005' direct represents '9' with '2367'
2364 2365 2366 2367 0
-2364 -2365 0
-2364 -2366 0
-2364 -2367 0
-2365 -2366 0
-2365 -2367 0
-2366 -2367 0
c Encoding variable: variant_fields_00004_00007_00006 with domain: int(6) (representing constraint )
c Var 'variant_fields_00004_00007_00006' direct represents '6' with '2368'
2368 0
c Encoding variable: variant_fields_00004_00007_00007 with domain: int(5,7..8) (representing constraint )
c Direct encoding.
c Var 'variant_fields_00004_00007_00007' direct represents '5' with '2369'
c Var 'variant_fields_00004_00007_00007' direct represents '7' with '2370'
c Var 'variant_fields_00004_00007_00007' direct represents '8' with '2371'
2369 2370 2371 0
-2369 -2370 0
-2369 -2371 0
-2370 -2371 0
c Encoding variable: variant_fields_00004_00007_00008 with domain: int(5,7..8) (representing constraint )
c Direct encoding.
c Var 'variant_fields_00004_00007_00008' direct represents '5' with '2372'
c Var 'variant_fields_00004_00007_00008' direct represents '7' with '2373'
c Var 'variant_fields_00004_00007_00008' direct represents '8' with '2374'
2372 2373 2374 0
-2372 -2373 0
-2372 -2374 0
-2373 -2374 0
c Encoding variable: variant_fields_00004_00007_00009 with domain: int(3) (representing constraint )
c Var 'variant_fields_00004_00007_00009' direct represents '3' with '2375'
2375 0
c Encoding variable: variant_fields_00004_00008_00001 with domain: int(1..2,5,7,9) (representing constraint )
c Direct encoding.
c Var 'variant_fields_00004_00008_00001' direct represents '1' with '2376'
c Var 'variant_fields_00004_00008_00001' direct represents '2' with '2377'
c Var 'variant_fields_00004_00008_00001' direct represents '5' with '2378'
c Var 'variant_fields_00004_00008_00001' direct represents '7' with '2379'
c Var 'variant_fields_00004_00008_00001' direct represents '9' with '2380'
2376 2377 2378 2379 2380 0
-2376 -2377 0
-2376 -2378 0
-2376 -2379 0
-2376 -2380 0
-2377 -2378 0
-2377 -2379 0
-2377 -2380 0
-2378 -2379 0
-2378 -2380 0
-2379 -2380 0
c Encoding variable: variant_fields_00004_00008_00002 with domain: int(1..3,5,7,9) (representing constraint )
c Direct encoding.
c Var 'variant_fields_00004_00008_00002' direct represents '1' with '2381'
c Var 'variant_fields_00004_00008_00002' direct represents '2' with '2382'
c Var 'variant_fields_00004_00008_00002' direct represents '3' with '2383'
c Var 'variant_fields_00004_00008_00002' direct represents '5' with '2384'
c Var 'variant_fields_00004_00008_00002' direct represents '7' with '2385'
c Var 'variant_fields_00004_00008_00002' direct represents '9' with '2386'
2381 2382 2383 2384 2385 2386 0
-2381 -2382 0
-2381 -2383 0
-2381 -2384 0
-2381 -2385 0
-2381 -2386 0
-2382 -2383 0
-2382 -2384 0
-2382 -2385 0
-2382 -2386 0
-2383 -2384 0
-2383 -2385 0
-2383 -2386 0
-2384 -2385 0
-2384 -2386 0
-2385 -2386 0
c Encoding variable: variant_fields_00004_00008_00003 with domain: int(1..3,5,7,9) (representing constraint )
c Direct encoding.
c Var 'variant_fields_00004_00008_00003' direct represents '1' with '2387'
c Var 'variant_fields_00004_00008_00003' direct represents '2' with '2388'
c Var 'variant_fields_00004_00008_00003' direct represents '3' with '2389'
c Var 'variant_fields_00004_00008_00003' direct represents '5' with '2390'
c Var 'variant_fields_00004_00008_00003' direct represents '7' with '2391'
c Var 'variant_fields_00004_00008_00003' direct represents '9' with '2392'
2387 2388 2389 2390 2391 2392 0
-2387 -2388 0
-2387 -2389 0
-2387 -2390 0
-2387 -2391 0
-2387 -2392 0
-2388 -2389 0
-2388 -2390 0
-2388 -2391 0
-2388 -2392 0
-2389 -2390 0
-2389 -2391 0
-2389 -2392 0
-2390 -2391 0
-2390 -2392 0
-2391 -2392 0
c Encoding variable: variant_fields_00004_00008_00004 with domain: int(1..2,4..5,7,9) (representing constraint )
c Direct encoding.
c Var 'variant_fields_00004_00008_00004' direct represents '1' with '2393'
c Var 'variant_fields_00004_00008_00004' direct represents '2' with '2394'
c Var 'variant_fields_00004_00008_00004' direct represents '4' with '2395'
c Var 'variant_fields_00004_00008_00004' direct represents '5' with '2396'
c Var 'variant_fields_00004_00008_00004' direct represents '7' with '2397'
c Var 'variant_fields_00004_00008_00004' direct represents '9' with '2398'
2393 2394 2395 2396 2397 2398 0
-2393 -2394 0
-2393 -2395 0
-2393 -2396 0
-2393 -2397 0
-2393 -2398 0
-2394 -2395 0
-2394 -2396 0
-2394 -2397 0
-2394 -2398 0
-2395 -2396 0
-2395 -2397 0
-2395 -2398 0
-2396 -2397 0
-2396 -2398 0
-2397 -2398 0
c Encoding variable: variant_fields_00004_00008_00005 with domain: int(1..2,4..5,7,9) (representing constraint )
c Direct encoding.
c Var 'variant_fields_00004_00008_00005' direct represents '1' with '2399'
c Var 'variant_fields_00004_00008_00005' direct represents '2' with '2400'
c Var 'variant_fields_00004_00008_00005' direct represents '4' with '2401'
c Var 'variant_fields_00004_00008_00005' direct represents '5' with '2402'
c Var 'variant_fields_00004_00008_00005' direct represents '7' with '2403'
c Var 'variant_fields_00004_00008_00005' direct represents '9' with '2404'
2399 2400 2401 2402 2403 2404 0
-2399 -2400 0
-2399 -2401 0
-2399 -2402 0
-2399 -2403 0
-2399 -2404 0
-2400 -2401 0
-2400 -2402 0
-2400 -2403 0
-2400 -2404 0
-2401 -2402 0
-2401 -2403 0
-2401 -2404 0
-2402 -2403 0
-2402 -2404 0
-2403 -2404 0
c Encoding variable: variant_fields_00004_00008_00006 with domain: int(8) (representing constraint )
c Var 'variant_fields_00004_00008_00006' direct represents '8' with '2405'
2405 0
c Encoding variable: variant_fields_00004_00008_00007 with domain: int(1,4..5,7,9) (representing constraint )
c Direct encoding.
c Var 'variant_fields_00004_00008_00007' direct represents '1' with '2406'
c Var 'variant_fields_00004_00008_00007' direct represents '4' with '2407'
c Var 'variant_fields_00004_00008_00007' direct represents '5' with '2408'
c Var 'variant_fields_00004_00008_00007' direct represents '7' with '2409'
c Var 'variant_fields_00004_00008_00007' direct represents '9' with '2410'
2406 2407 2408 2409 2410 0
-2406 -2407 0
-2406 -2408 0
-2406 -2409 0
-2406 -2410 0
-2407 -2408 0
-2407 -2409 0
-2407 -2410 0
-2408 -2409 0
-2408 -2410 0
-2409 -2410 0
c Encoding variable: variant_fields_00004_00008_00008 with domain: int(6) (representing constraint )
c Var 'variant_fields_00004_00008_00008' direct represents '6' with '2411'
2411 0
c Encoding variable: variant_fields_00004_00008_00009 with domain: int(1,4..5,7,9) (representing constraint )
c Direct encoding.
c Var 'variant_fields_00004_00008_00009' direct represents '1' with '2412'
c Var 'variant_fields_00004_00008_00009' direct represents '4' with '2413'
c Var 'variant_fields_00004_00008_00009' direct represents '5' with '2414'
c Var 'variant_fields_00004_00008_00009' direct represents '7' with '2415'
c Var 'variant_fields_00004_00008_00009' direct represents '9' with '2416'
2412 2413 2414 2415 2416 0
-2412 -2413 0
-2412 -2414 0
-2412 -2415 0
-2412 -2416 0
-2413 -2414 0
-2413 -2415 0
-2413 -2416 0
-2414 -2415 0
-2414 -2416 0
-2415 -2416 0
c Encoding variable: variant_fields_00004_00009_00001 with domain: int(1,5..9) (representing constraint )
c Direct encoding.
c Var 'variant_fields_00004_00009_00001' direct represents '1' with '2417'
c Var 'variant_fields_00004_00009_00001' direct represents '5' with '2418'
c Var 'variant_fields_00004_00009_00001' direct represents '6' with '2419'
c Var 'variant_fields_00004_00009_00001' direct represents '7' with '2420'
c Var 'variant_fields_00004_00009_00001' direct represents '8' with '2421'
c Var 'variant_fields_00004_00009_00001' direct represents '9' with '2422'
2417 2418 2419 2420 2421 2422 0
-2417 -2418 0
-2417 -2419 0
-2417 -2420 0
-2417 -2421 0
-2417 -2422 0
-2418 -2419 0
-2418 -2420 0
-2418 -2421 0
-2418 -2422 0
-2419 -2420 0
-2419 -2421 0
-2419 -2422 0
-2420 -2421 0
-2420 -2422 0
-2421 -2422 0
c Encoding variable: variant_fields_00004_00009_00002 with domain: int(5..8) (representing constraint )
c Direct encoding.
c Var 'variant_fields_00004_00009_00002' direct represents '5' with '2423'
c Var 'variant_fields_00004_00009_00002' direct represents '6' with '2424'
c Var 'variant_fields_00004_00009_00002' direct represents '7' with '2425'
c Var 'variant_fields_00004_00009_00002' direct represents '8' with '2426'
2423 2424 2425 2426 0
-2423 -2424 0
-2423 -2425 0
-2423 -2426 0
-2424 -2425 0
-2424 -2426 0
-2425 -2426 0
c Encoding variable: variant_fields_00004_00009_00003 with domain: int(1,5..9) (representing constraint )
c Direct encoding.
c Var 'variant_fields_00004_00009_00003' direct represents '1' with '2427'
c Var 'variant_fields_00004_00009_00003' direct represents '5' with '2428'
c Var 'variant_fields_00004_00009_00003' direct represents '6' with '2429'
c Var 'variant_fields_00004_00009_00003' direct represents '7' with '2430'
c Var 'variant_fields_00004_00009_00003' direct represents '8' with '2431'
c Var 'variant_fields_00004_00009_00003' direct represents '9' with '2432'
2427 2428 2429 2430 2431 2432 0
-2427 -2428 0
-2427 -2429 0
-2427 -2430 0
-2427 -2431 0
-2427 -2432 0
-2428 -2429 0
-2428 -2430 0
-2428 -2431 0
-2428 -2432 0
-2429 -2430 0
-2429 -2431 0
-2429 -2432 0
-2430 -2431 0
-2430 -2432 0
-2431 -2432 0
c Encoding variable: variant_fields_00004_00009_00004 with domain: int(5,7) (representing constraint )
c Var 'variant_fields_00004_00009_00004' direct represents '5' with '-2433'
c Var 'variant_fields_00004_00009_00004' direct represents '7' with '2433'
c Var 'variant_fields_00004_00009_00004' order represents '7' with '1'
c Var 'variant_fields_00004_00009_00004' order represents '5' with '-2433'
c Encoding variable: variant_fields_00004_00009_00005 with domain: int(1,4..5,7,9) (representing constraint )
c Direct encoding.
c Var 'variant_fields_00004_00009_00005' direct represents '1' with '2434'
c Var 'variant_fields_00004_00009_00005' direct represents '4' with '2435'
c Var 'variant_fields_00004_00009_00005' direct represents '5' with '2436'
c Var 'variant_fields_00004_00009_00005' direct represents '7' with '2437'
c Var 'variant_fields_00004_00009_00005' direct represents '9' with '2438'
2434 2435 2436 2437 2438 0
-2434 -2435 0
-2434 -2436 0
-2434 -2437 0
-2434 -2438 0
-2435 -2436 0
-2435 -2437 0
-2435 -2438 0
-2436 -2437 0
-2436 -2438 0
-2437 -2438 0
c Encoding variable: variant_fields_00004_00009_00006 with domain: int(3) (representing constraint )
c Var 'variant_fields_00004_00009_00006' direct represents '3' with '2439'
2439 0
c Encoding variable: variant_fields_00004_00009_00007 with domain: int(1,4..5,7..9) (representing constraint )
c Direct encoding.
c Var 'variant_fields_00004_00009_00007' direct represents '1' with '2440'
c Var 'variant_fields_00004_00009_00007' direct represents '4' with '2441'
c Var 'variant_fields_00004_00009_00007' direct represents '5' with '2442'
c Var 'variant_fields_00004_00009_00007' direct represents '7' with '2443'
c Var 'variant_fields_00004_00009_00007' direct represents '8' with '2444'
c Var 'variant_fields_00004_00009_00007' direct represents '9' with '2445'
2440 2441 2442 2443 2444 2445 0
-2440 -2441 0
-2440 -2442 0
-2440 -2443 0
-2440 -2444 0
-2440 -2445 0
-2441 -2442 0
-2441 -2443 0
-2441 -2444 0
-2441 -2445 0
-2442 -2443 0
-2442 -2444 0
-2442 -2445 0
-2443 -2444 0
-2443 -2445 0
-2444 -2445 0
c Encoding variable: variant_fields_00004_00009_00008 with domain: int(2) (representing constraint )
c Var 'variant_fields_00004_00009_00008' direct represents '2' with '2446'
2446 0
c Encoding variable: variant_fields_00004_00009_00009 with domain: int(1,4..5,7..9) (representing constraint )
c Direct encoding.
c Var 'variant_fields_00004_00009_00009' direct represents '1' with '2447'
c Var 'variant_fields_00004_00009_00009' direct represents '4' with '2448'
c Var 'variant_fields_00004_00009_00009' direct represents '5' with '2449'
c Var 'variant_fields_00004_00009_00009' direct represents '7' with '2450'
c Var 'variant_fields_00004_00009_00009' direct represents '8' with '2451'
c Var 'variant_fields_00004_00009_00009' direct represents '9' with '2452'
2447 2448 2449 2450 2451 2452 0
-2447 -2448 0
-2447 -2449 0
-2447 -2450 0
-2447 -2451 0
-2447 -2452 0
-2448 -2449 0
-2448 -2450 0
-2448 -2451 0
-2448 -2452 0
-2449 -2450 0
-2449 -2451 0
-2449 -2452 0
-2450 -2451 0
-2450 -2452 0
-2451 -2452 0
c Encoding variable: alldiff_row_00001 with domain: bool(true) (representing constraint )
c Var 'alldiff_row_00001' direct represents '1' with '2453'
2453 0
c Encoding variable: alldiff_row_00002 with domain: bool(true) (representing constraint )
c Var 'alldiff_row_00002' direct represents '1' with '2454'
2454 0
c Encoding variable: alldiff_row_00003 with domain: bool(true) (representing constraint )
c Var 'alldiff_row_00003' direct represents '1' with '2455'
2455 0
c Encoding variable: alldiff_row_00004 with domain: bool(true) (representing constraint )
c Var 'alldiff_row_00004' direct represents '1' with '2456'
2456 0
c Encoding variable: alldiff_row_00005 with domain: bool(true) (representing constraint )
c Var 'alldiff_row_00005' direct represents '1' with '2457'
2457 0
c Encoding variable: alldiff_row_00006 with domain: bool(true) (representing constraint )
c Var 'alldiff_row_00006' direct represents '1' with '2458'
2458 0
c Encoding variable: alldiff_row_00007 with domain: bool(true) (representing constraint )
c Var 'alldiff_row_00007' direct represents '1' with '2459'
2459 0
c Encoding variable: alldiff_row_00008 with domain: bool(true) (representing constraint )
c Var 'alldiff_row_00008' direct represents '1' with '2460'
2460 0
c Encoding variable: alldiff_row_00009 with domain: bool(true) (representing constraint )
c Var 'alldiff_row_00009' direct represents '1' with '2461'
2461 0
c Encoding variable: alldiff_col_00001 with domain: bool(true) (representing constraint )
c Var 'alldiff_col_00001' direct represents '1' with '2462'
2462 0
c Encoding variable: alldiff_col_00002 with domain: bool(true) (representing constraint )
c Var 'alldiff_col_00002' direct represents '1' with '2463'
2463 0
c Encoding variable: alldiff_col_00003 with domain: bool(true) (representing constraint )
c Var 'alldiff_col_00003' direct represents '1' with '2464'
2464 0
c Encoding variable: alldiff_col_00004 with domain: bool(true) (representing constraint )
c Var 'alldiff_col_00004' direct represents '1' with '2465'
2465 0
c Encoding variable: alldiff_col_00005 with domain: bool(true) (representing constraint )
c Var 'alldiff_col_00005' direct represents '1' with '2466'
2466 0
c Encoding variable: alldiff_col_00006 with domain: bool(true) (representing constraint )
c Var 'alldiff_col_00006' direct represents '1' with '2467'
2467 0
c Encoding variable: alldiff_col_00007 with domain: bool(true) (representing constraint )
c Var 'alldiff_col_00007' direct represents '1' with '2468'
2468 0
c Encoding variable: alldiff_col_00008 with domain: bool(true) (representing constraint )
c Var 'alldiff_col_00008' direct represents '1' with '2469'
2469 0
c Encoding variable: alldiff_col_00009 with domain: bool(true) (representing constraint )
c Var 'alldiff_col_00009' direct represents '1' with '2470'
2470 0
c Encoding variable: alldiff_box_00001 with domain: bool(true) (representing constraint )
c Var 'alldiff_box_00001' direct represents '1' with '2471'
2471 0
c Encoding variable: alldiff_box_00002 with domain: bool(true) (representing constraint )
c Var 'alldiff_box_00002' direct represents '1' with '2472'
2472 0
c Encoding variable: alldiff_box_00003 with domain: bool(true) (representing constraint )
c Var 'alldiff_box_00003' direct represents '1' with '2473'
2473 0
c Encoding variable: alldiff_box_00004 with domain: bool(true) (representing constraint )
c Var 'alldiff_box_00004' direct represents '1' with '2474'
2474 0
c Encoding variable: alldiff_box_00005 with domain: bool(true) (representing constraint )
c Var 'alldiff_box_00005' direct represents '1' with '2475'
2475 0
c Encoding variable: alldiff_box_00006 with domain: bool(true) (representing constraint )
c Var 'alldiff_box_00006' direct represents '1' with '2476'
2476 0
c Encoding variable: alldiff_box_00007 with domain: bool(true) (representing constraint )
c Var 'alldiff_box_00007' direct represents '1' with '2477'
2477 0
c Encoding variable: alldiff_box_00008 with domain: bool(true) (representing constraint )
c Var 'alldiff_box_00008' direct represents '1' with '2478'
2478 0
c Encoding variable: alldiff_box_00009 with domain: bool(true) (representing constraint )
c Var 'alldiff_box_00009' direct represents '1' with '2479'
2479 0
c Encoding variable: clues_left_on_00001_00001 with domain: bool(true) (representing constraint )
c Var 'clues_left_on_00001_00001' direct represents '1' with '2480'
2480 0
c Encoding variable: clues_left_on_00001_00002 with domain: bool(true) (representing constraint )
c Var 'clues_left_on_00001_00002' direct represents '1' with '2481'
2481 0
c Encoding variable: clues_left_on_00001_00003 with domain: bool(true) (representing constraint )
c Var 'clues_left_on_00001_00003' direct represents '1' with '2482'
2482 0
c Encoding variable: clues_left_on_00001_00004 with domain: bool(true) (representing constraint )
c Var 'clues_left_on_00001_00004' direct represents '1' with '2483'
2483 0
c Encoding variable: clues_left_on_00001_00005 with domain: bool(true) (representing constraint )
c Var 'clues_left_on_00001_00005' direct represents '1' with '2484'
2484 0
c Encoding variable: clues_left_on_00001_00006 with domain: bool(true) (representing constraint )
c Var 'clues_left_on_00001_00006' direct represents '1' with '2485'
2485 0
c Encoding variable: clues_left_on_00001_00007 with domain: bool(true) (representing constraint )
c Var 'clues_left_on_00001_00007' direct represents '1' with '2486'
2486 0
c Encoding variable: clues_left_on_00001_00008 with domain: bool(true) (representing constraint )
c Var 'clues_left_on_00001_00008' direct represents '1' with '2487'
2487 0
c Encoding variable: clues_left_on_00001_00009 with domain: bool(true) (representing constraint )
c Var 'clues_left_on_00001_00009' direct represents '1' with '2488'
2488 0
c Encoding variable: clues_left_on_00002_00001 with domain: bool(true) (representing constraint )
c Var 'clues_left_on_00002_00001' direct represents '1' with '2489'
2489 0
c Encoding variable: clues_left_on_00002_00002 with domain: bool(true) (representing constraint )
c Var 'clues_left_on_00002_00002' direct represents '1' with '2490'
2490 0
c Encoding variable: clues_left_on_00002_00003 with domain: bool(true) (representing constraint )
c Var 'clues_left_on_00002_00003' direct represents '1' with '2491'
2491 0
c Encoding variable: clues_left_on_00002_00004 with domain: bool(true) (representing constraint )
c Var 'clues_left_on_00002_00004' direct represents '1' with '2492'
2492 0
c Encoding variable: clues_left_on_00002_00005 with domain: bool(true) (representing constraint )
c Var 'clues_left_on_00002_00005' direct represents '1' with '2493'
2493 0
c Encoding variable: clues_left_on_00002_00006 with domain: bool(true) (representing constraint )
c Var 'clues_left_on_00002_00006' direct represents '1' with '2494'
2494 0
c Encoding variable: clues_left_on_00002_00007 with domain: bool(true) (representing constraint )
c Var 'clues_left_on_00002_00007' direct represents '1' with '2495'
2495 0
c Encoding variable: clues_left_on_00002_00008 with domain: bool(true) (representing constraint )
c Var 'clues_left_on_00002_00008' direct represents '1' with '2496'
2496 0
c Encoding variable: clues_left_on_00002_00009 with domain: bool(true) (representing constraint )
c Var 'clues_left_on_00002_00009' direct represents '1' with '2497'
2497 0
c Encoding variable: clues_left_on_00003_00001 with domain: bool(true) (representing constraint )
c Var 'clues_left_on_00003_00001' direct represents '1' with '2498'
2498 0
c Encoding variable: clues_left_on_00003_00002 with domain: bool(true) (representing constraint )
c Var 'clues_left_on_00003_00002' direct represents '1' with '2499'
2499 0
c Encoding variable: clues_left_on_00003_00003 with domain: bool(true) (representing constraint )
c Var 'clues_left_on_00003_00003' direct represents '1' with '2500'
2500 0
c Encoding variable: clues_left_on_00003_00004 with domain: bool(true) (representing constraint )
c Var 'clues_left_on_00003_00004' direct represents '1' with '2501'
2501 0
c Encoding variable: clues_left_on_00003_00005 with domain: bool(true) (representing constraint )
c Var 'clues_left_on_00003_00005' direct represents '1' with '2502'
2502 0
c Encoding variable: clues_left_on_00003_00006 with domain: bool(true) (representing constraint )
c Var 'clues_left_on_00003_00006' direct represents '1' with '2503'
2503 0
c Encoding variable: clues_left_on_00003_00007 with domain: bool(true) (representing constraint )
c Var 'clues_left_on_00003_00007' direct represents '1' with '2504'
2504 0
c Encoding variable: clues_left_on_00003_00008 with domain: bool(true) (representing constraint )
c Var 'clues_left_on_00003_00008' direct represents '1' with '2505'
2505 0
c Encoding variable: clues_left_on_00003_00009 with domain: bool(true) (representing constraint )
c Var 'clues_left_on_00003_00009' direct represents '1' with '2506'
2506 0
c Encoding variable: clues_left_on_00004_00001 with domain: bool(true) (representing constraint )
c Var 'clues_left_on_00004_00001' direct represents '1' with '2507'
2507 0
c Encoding variable: clues_left_on_00004_00002 with domain: bool(true) (representing constraint )
c Var 'clues_left_on_00004_00002' direct represents '1' with '2508'
2508 0
c Encoding variable: clues_left_on_00004_00003 with domain: bool(true) (representing constraint )
c Var 'clues_left_on_00004_00003' direct represents '1' with '2509'
2509 0
c Encoding variable: clues_left_on_00004_00004 with domain: bool(true) (representing constraint )
c Var 'clues_left_on_00004_00004' direct represents '1' with '2510'
2510 0
c Encoding variable: clues_left_on_00004_00005 with domain: bool(true) (representing constraint )
c Var 'clues_left_on_00004_00005' direct represents '1' with '2511'
2511 0
c Encoding variable: clues_left_on_00004_00006 with domain: bool(true) (representing constraint )
c Var 'clues_left_on_00004_00006' direct represents '1' with '2512'
2512 0
c Encoding variable: clues_left_on_00004_00007 with domain: bool(true) (representing constraint )
c Var 'clues_left_on_00004_00007' direct represents '1' with '2513'
2513 0
c Encoding variable: clues_left_on_00004_00008 with domain: bool(true) (representing constraint )
c Var 'clues_left_on_00004_00008' direct represents '1' with '2514'
2514 0
c Encoding variable: clues_left_on_00004_00009 with domain: bool(true) (representing constraint )
c Var 'clues_left_on_00004_00009' direct represents '1' with '2515'
2515 0
c Encoding variable: aux0 with domain: bool (representing constraint ((variant_fields_00001_00002_00001 + variant_fields_00001_00002_00002 + variant_fields_00001_00002_00003)=tv=8))
c Var 'aux0' direct represents '0' with '-2516'
c Var 'aux0' direct represents '1' with '2516'
c Var 'aux0' order represents '1' with '1'
c Var 'aux0' order represents '0' with '-2516'
c Encoding variable: aux1 with domain: bool (representing constraint ((variant_fields_00001_00004_00001 + variant_fields_00001_00004_00002 + variant_fields_00001_00004_00003 + variant_fields_00001_00004_00004)=tv=17))
c Var 'aux1' direct represents '0' with '-2517'
c Var 'aux1' direct represents '1' with '2517'
c Var 'aux1' order represents '1' with '1'
c Var 'aux1' order represents '0' with '-2517'
c Encoding variable: aux2 with domain: int(0..4,6..8) (representing constraint (variant_fields_00001_00006_00006 * (6<=variant_fields_00001_00006_00001)))
c Both direct and order encoding.
c Var 'aux2' order represents '0' with '2518'
c Var 'aux2' direct represents '0' with '2518'
c Var 'aux2' order represents '1' with '2519'
-2518 2519 0
c Var 'aux2' direct represents '1' with '2520'
2518 -2519 2520 0
-2520 2519 0
-2520 -2518 0
c Var 'aux2' order represents '2' with '2521'
-2519 2521 0
c Var 'aux2' direct represents '2' with '2522'
2519 -2521 2522 0
-2522 2521 0
-2522 -2519 0
c Var 'aux2' order represents '3' with '2523'
-2521 2523 0
c Var 'aux2' direct represents '3' with '2524'
2521 -2523 2524 0
-2524 2523 0
-2524 -2521 0
c Var 'aux2' order represents '4' with '2525'
-2523 2525 0
c Var 'aux2' direct represents '4' with '2526'
2523 -2525 2526 0
-2526 2525 0
-2526 -2523 0
c Var 'aux2' order represents '6' with '2527'
-2525 2527 0
c Var 'aux2' direct represents '6' with '2528'
2525 -2527 2528 0
-2528 2527 0
-2528 -2525 0
c Var 'aux2' order represents '7' with '2529'
-2527 2529 0
c Var 'aux2' direct represents '7' with '2530'
2527 -2529 2530 0
-2530 2529 0
-2530 -2527 0
c Var 'aux2' direct represents '8' with '-2529'
2518 2520 2522 2524 2526 2528 2530 -2529 0
c Encoding variable: aux3 with domain: int(0..2,5,7,9) (representing constraint (variant_fields_00001_00006_00007 * (7<=variant_fields_00001_00006_00001)))
c Both direct and order encoding.
c Var 'aux3' order represents '0' with '2531'
c Var 'aux3' direct represents '0' with '2531'
c Var 'aux3' order represents '1' with '2532'
-2531 2532 0
c Var 'aux3' direct represents '1' with '2533'
2531 -2532 2533 0
-2533 2532 0
-2533 -2531 0
c Var 'aux3' order represents '2' with '2534'
-2532 2534 0
c Var 'aux3' direct represents '2' with '2535'
2532 -2534 2535 0
-2535 2534 0
-2535 -2532 0
c Var 'aux3' order represents '5' with '2536'
-2534 2536 0
c Var 'aux3' direct represents '5' with '2537'
2534 -2536 2537 0
-2537 2536 0
-2537 -2534 0
c Var 'aux3' order represents '7' with '2538'
-2536 2538 0
c Var 'aux3' direct represents '7' with '2539'
2536 -2538 2539 0
-2539 2538 0
-2539 -2536 0
c Var 'aux3' direct represents '9' with '-2538'
2531 2533 2535 2537 2539 -2538 0
c Encoding variable: aux4 with domain: int(0..2,4..5,7,9) (representing constraint (variant_fields_00001_00006_00008 * (8<=variant_fields_00001_00006_00001)))
c Both direct and order encoding.
c Var 'aux4' order represents '0' with '2540'
c Var 'aux4' direct represents '0' with '2540'
c Var 'aux4' order represents '1' with '2541'
-2540 2541 0
c Var 'aux4' direct represents '1' with '2542'
2540 -2541 2542 0
-2542 2541 0
-2542 -2540 0
c Var 'aux4' order represents '2' with '2543'
-2541 2543 0
c Var 'aux4' direct represents '2' with '2544'
2541 -2543 2544 0
-2544 2543 0
-2544 -2541 0
c Var 'aux4' order represents '4' with '2545'
-2543 2545 0
c Var 'aux4' direct represents '4' with '2546'
2543 -2545 2546 0
-2546 2545 0
-2546 -2543 0
c Var 'aux4' order represents '5' with '2547'
-2545 2547 0
c Var 'aux4' direct represents '5' with '2548'
2545 -2547 2548 0
-2548 2547 0
-2548 -2545 0
c Var 'aux4' order represents '7' with '2549'
-2547 2549 0
c Var 'aux4' direct represents '7' with '2550'
2547 -2549 2550 0
-2550 2549 0
-2550 -2547 0
c Var 'aux4' direct represents '9' with '-2549'
2540 2542 2544 2546 2548 2550 -2549 0
c Encoding variable: aux5 with domain: bool (representing constraint ((variant_fields_00001_00006_00001 + variant_fields_00001_00006_00002 + variant_fields_00001_00006_00003 + variant_fields_00001_00006_00004 + variant_fields_00001_00006_00005 + aux2 + aux3 + aux4)=tv=30))
c Var 'aux5' direct represents '0' with '-2551'
c Var 'aux5' direct represents '1' with '2551'
c Var 'aux5' order represents '1' with '1'
c Var 'aux5' order represents '0' with '-2551'
c Encoding variable: aux6 with domain: int(0,2,4..9) (representing constraint (variant_fields_00001_00008_00006 * (6<=variant_fields_00001_00008_00001)))
c Both direct and order encoding.
c Var 'aux6' order represents '0' with '2552'
c Var 'aux6' direct represents '0' with '2552'
c Var 'aux6' order represents '2' with '2553'
-2552 2553 0
c Var 'aux6' direct represents '2' with '2554'
2552 -2553 2554 0
-2554 2553 0
-2554 -2552 0
c Var 'aux6' order represents '4' with '2555'
-2553 2555 0
c Var 'aux6' direct represents '4' with '2556'
2553 -2555 2556 0
-2556 2555 0
-2556 -2553 0
c Var 'aux6' order represents '5' with '2557'
-2555 2557 0
c Var 'aux6' direct represents '5' with '2558'
2555 -2557 2558 0
-2558 2557 0
-2558 -2555 0
c Var 'aux6' order represents '6' with '2559'
-2557 2559 0
c Var 'aux6' direct represents '6' with '2560'
2557 -2559 2560 0
-2560 2559 0
-2560 -2557 0
c Var 'aux6' order represents '7' with '2561'
-2559 2561 0
c Var 'aux6' direct represents '7' with '2562'
2559 -2561 2562 0
-2562 2561 0
-2562 -2559 0
c Var 'aux6' order represents '8' with '2563'
-2561 2563 0
c Var 'aux6' direct represents '8' with '2564'
2561 -2563 2564 0
-2564 2563 0
-2564 -2561 0
c Var 'aux6' direct represents '9' with '-2563'
2552 2554 2556 2558 2560 2562 2564 -2563 0
c Encoding variable: aux7 with domain: int(0..2,5,7..9) (representing constraint (variant_fields_00001_00008_00007 * (7<=variant_fields_00001_00008_00001)))
c Both direct and order encoding.
c Var 'aux7' order represents '0' with '2565'
c Var 'aux7' direct represents '0' with '2565'
c Var 'aux7' order represents '1' with '2566'
-2565 2566 0
c Var 'aux7' direct represents '1' with '2567'
2565 -2566 2567 0
-2567 2566 0
-2567 -2565 0
c Var 'aux7' order represents '2' with '2568'
-2566 2568 0
c Var 'aux7' direct represents '2' with '2569'
2566 -2568 2569 0
-2569 2568 0
-2569 -2566 0
c Var 'aux7' order represents '5' with '2570'
-2568 2570 0
c Var 'aux7' direct represents '5' with '2571'
2568 -2570 2571 0
-2571 2570 0
-2571 -2568 0
c Var 'aux7' order represents '7' with '2572'
-2570 2572 0
c Var 'aux7' direct represents '7' with '2573'
2570 -2572 2573 0
-2573 2572 0
-2573 -2570 0
c Var 'aux7' order represents '8' with '2574'
-2572 2574 0
c Var 'aux7' direct represents '8' with '2575'
2572 -2574 2575 0
-2575 2574 0
-2575 -2572 0
c Var 'aux7' direct represents '9' with '-2574'
2565 2567 2569 2571 2573 2575 -2574 0
c Encoding variable: aux8 with domain: int(0..3,5,7,9) (representing constraint (variant_fields_00001_00008_00008 * (8<=variant_fields_00001_00008_00001)))
c Both direct and order encoding.
c Var 'aux8' order represents '0' with '2576'
c Var 'aux8' direct represents '0' with '2576'
c Var 'aux8' order represents '1' with '2577'
-2576 2577 0
c Var 'aux8' direct represents '1' with '2578'
2576 -2577 2578 0
-2578 2577 0
-2578 -2576 0
c Var 'aux8' order represents '2' with '2579'
-2577 2579 0
c Var 'aux8' direct represents '2' with '2580'
2577 -2579 2580 0
-2580 2579 0
-2580 -2577 0
c Var 'aux8' order represents '3' with '2581'
-2579 2581 0
c Var 'aux8' direct represents '3' with '2582'
2579 -2581 2582 0
-2582 2581 0
-2582 -2579 0
c Var 'aux8' order represents '5' with '2583'
-2581 2583 0
c Var 'aux8' direct represents '5' with '2584'
2581 -2583 2584 0
-2584 2583 0
-2584 -2581 0
c Var 'aux8' order represents '7' with '2585'
-2583 2585 0
c Var 'aux8' direct represents '7' with '2586'
2583 -2585 2586 0
-2586 2585 0
-2586 -2583 0
c Var 'aux8' direct represents '9' with '-2585'
2576 2578 2580 2582 2584 2586 -2585 0
c Encoding variable: aux9 with domain: bool (representing constraint ((aux6 + aux7 + aux8 + variant_fields_00001_00008_00001 + variant_fields_00001_00008_00002 + variant_fields_00001_00008_00003 + variant_fields_00001_00008_00004 + variant_fields_00001_00008_00005)=tv=28))
c Var 'aux9' direct represents '0' with '-2587'
c Var 'aux9' direct represents '1' with '2587'
c Var 'aux9' order represents '1' with '1'
c Var 'aux9' order represents '0' with '-2587'
c Encoding variable: aux10 with domain: int(0,2..3,5..9) (representing constraint (variant_fields_00002_00002_00006 * (6<=variant_fields_00002_00002_00001)))
c Both direct and order encoding.
c Var 'aux10' order represents '0' with '2588'
c Var 'aux10' direct represents '0' with '2588'
c Var 'aux10' order represents '2' with '2589'
-2588 2589 0
c Var 'aux10' direct represents '2' with '2590'
2588 -2589 2590 0
-2590 2589 0
-2590 -2588 0
c Var 'aux10' order represents '3' with '2591'
-2589 2591 0
c Var 'aux10' direct represents '3' with '2592'
2589 -2591 2592 0
-2592 2591 0
-2592 -2589 0
c Var 'aux10' order represents '5' with '2593'
-2591 2593 0
c Var 'aux10' direct represents '5' with '2594'
2591 -2593 2594 0
-2594 2593 0
-2594 -2591 0
c Var 'aux10' order represents '6' with '2595'
-2593 2595 0
c Var 'aux10' direct represents '6' with '2596'
2593 -2595 2596 0
-2596 2595 0
-2596 -2593 0
c Var 'aux10' order represents '7' with '2597'
-2595 2597 0
c Var 'aux10' direct represents '7' with '2598'
2595 -2597 2598 0
-2598 2597 0
-2598 -2595 0
c Var 'aux10' order represents '8' with '2599'
-2597 2599 0
c Var 'aux10' direct represents '8' with '2600'
2597 -2599 2600 0
-2600 2599 0
-2600 -2597 0
c Var 'aux10' direct represents '9' with '-2599'
2588 2590 2592 2594 2596 2598 2600 -2599 0
c Encoding variable: aux11 with domain: int(0,2..9) (representing constraint (variant_fields_00002_00002_00007 * (7<=variant_fields_00002_00002_00001)))
c Both direct and order encoding.
c Var 'aux11' order represents '0' with '2601'
c Var 'aux11' direct represents '0' with '2601'
c Var 'aux11' order represents '2' with '2602'
-2601 2602 0
c Var 'aux11' direct represents '2' with '2603'
2601 -2602 2603 0
-2603 2602 0
-2603 -2601 0
c Var 'aux11' order represents '3' with '2604'
-2602 2604 0
c Var 'aux11' direct represents '3' with '2605'
2602 -2604 2605 0
-2605 2604 0
-2605 -2602 0
c Var 'aux11' order represents '4' with '2606'
-2604 2606 0
c Var 'aux11' direct represents '4' with '2607'
2604 -2606 2607 0
-2607 2606 0
-2607 -2604 0
c Var 'aux11' order represents '5' with '2608'
-2606 2608 0
c Var 'aux11' direct represents '5' with '2609'
2606 -2608 2609 0
-2609 2608 0
-2609 -2606 0
c Var 'aux11' order represents '6' with '2610'
-2608 2610 0
c Var 'aux11' direct represents '6' with '2611'
2608 -2610 2611 0
-2611 2610 0
-2611 -2608 0
c Var 'aux11' order represents '7' with '2612'
-2610 2612 0
c Var 'aux11' direct represents '7' with '2613'
2610 -2612 2613 0
-2613 2612 0
-2613 -2610 0
c Var 'aux11' order represents '8' with '2614'
-2612 2614 0
c Var 'aux11' direct represents '8' with '2615'
2612 -2614 2615 0
-2615 2614 0
-2615 -2612 0
c Var 'aux11' direct represents '9' with '-2614'
2601 2603 2605 2607 2609 2611 2613 2615 -2614 0
c Encoding variable: aux12 with domain: bool (representing constraint ((variant_fields_00002_00002_00001 + variant_fields_00002_00002_00002 + variant_fields_00002_00002_00003 + variant_fields_00002_00002_00004 + variant_fields_00002_00002_00005 + aux10 + aux11)=tv=27))
c Var 'aux12' direct represents '0' with '-2616'
c Var 'aux12' direct represents '1' with '2616'
c Var 'aux12' order represents '1' with '1'
c Var 'aux12' order represents '0' with '-2616'
c Encoding variable: aux13 with domain: bool (representing constraint ((variant_fields_00002_00004_00001 + variant_fields_00002_00004_00002)=tv=11))
c Var 'aux13' direct represents '0' with '-2617'
c Var 'aux13' direct represents '1' with '2617'
c Var 'aux13' order represents '1' with '1'
c Var 'aux13' order represents '0' with '-2617'
c Encoding variable: aux14 with domain: int(0..4,6..8) (representing constraint (variant_fields_00002_00006_00005 * (5<=variant_fields_00002_00006_00001)))
c Both direct and order encoding.
c Var 'aux14' order represents '0' with '2618'
c Var 'aux14' direct represents '0' with '2618'
c Var 'aux14' order represents '1' with '2619'
-2618 2619 0
c Var 'aux14' direct represents '1' with '2620'
2618 -2619 2620 0
-2620 2619 0
-2620 -2618 0
c Var 'aux14' order represents '2' with '2621'
-2619 2621 0
c Var 'aux14' direct represents '2' with '2622'
2619 -2621 2622 0
-2622 2621 0
-2622 -2619 0
c Var 'aux14' order represents '3' with '2623'
-2621 2623 0
c Var 'aux14' direct represents '3' with '2624'
2621 -2623 2624 0
-2624 2623 0
-2624 -2621 0
c Var 'aux14' order represents '4' with '2625'
-2623 2625 0
c Var 'aux14' direct represents '4' with '2626'
2623 -2625 2626 0
-2626 2625 0
-2626 -2623 0
c Var 'aux14' order represents '6' with '2627'
-2625 2627 0
c Var 'aux14' direct represents '6' with '2628'
2625 -2627 2628 0
-2628 2627 0
-2628 -2625 0
c Var 'aux14' order represents '7' with '2629'
-2627 2629 0
c Var 'aux14' direct represents '7' with '2630'
2627 -2629 2630 0
-2630 2629 0
-2630 -2627 0
c Var 'aux14' direct represents '8' with '-2629'
2618 2620 2622 2624 2626 2628 2630 -2629 0
c Encoding variable: aux15 with domain: int(0..4,6..8) (representing constraint (variant_fields_00002_00006_00006 * (6<=variant_fields_00002_00006_00001)))
c Both direct and order encoding.
c Var 'aux15' order represents '0' with '2631'
c Var 'aux15' direct represents '0' with '2631'
c Var 'aux15' order represents '1' with '2632'
-2631 2632 0
c Var 'aux15' direct represents '1' with '2633'
2631 -2632 2633 0
-2633 2632 0
-2633 -2631 0
c Var 'aux15' order represents '2' with '2634'
-2632 2634 0
c Var 'aux15' direct represents '2' with '2635'
2632 -2634 2635 0
-2635 2634 0
-2635 -2632 0
c Var 'aux15' order represents '3' with '2636'
-2634 2636 0
c Var 'aux15' direct represents '3' with '2637'
2634 -2636 2637 0
-2637 2636 0
-2637 -2634 0
c Var 'aux15' order represents '4' with '2638'
-2636 2638 0
c Var 'aux15' direct represents '4' with '2639'
2636 -2638 2639 0
-2639 2638 0
-2639 -2636 0
c Var 'aux15' order represents '6' with '2640'
-2638 2640 0
c Var 'aux15' direct represents '6' with '2641'
2638 -2640 2641 0
-2641 2640 0
-2641 -2638 0
c Var 'aux15' order represents '7' with '2642'
-2640 2642 0
c Var 'aux15' direct represents '7' with '2643'
2640 -2642 2643 0
-2643 2642 0
-2643 -2640 0
c Var 'aux15' direct represents '8' with '-2642'
2631 2633 2635 2637 2639 2641 2643 -2642 0
c Encoding variable: aux16 with domain: bool (representing constraint ((variant_fields_00002_00006_00001 + variant_fields_00002_00006_00002 + variant_fields_00002_00006_00003 + variant_fields_00002_00006_00004 + aux14 + aux15)=tv=21))
c Var 'aux16' direct represents '0' with '-2644'
c Var 'aux16' direct represents '1' with '2644'
c Var 'aux16' order represents '1' with '1'
c Var 'aux16' order represents '0' with '-2644'
c Encoding variable: aux17 with domain: bool (representing constraint ((variant_fields_00002_00007_00001 + variant_fields_00002_00007_00002 + variant_fields_00002_00007_00003)=tv=16))
c Var 'aux17' direct represents '0' with '-2645'
c Var 'aux17' direct represents '1' with '2645'
c Var 'aux17' order represents '1' with '1'
c Var 'aux17' order represents '0' with '-2645'
c Encoding variable: aux18 with domain: bool (representing constraint ((variant_fields_00003_00002_00001 + variant_fields_00003_00002_00002)=tv=8))
c Var 'aux18' direct represents '0' with '-2646'
c Var 'aux18' direct represents '1' with '2646'
c Var 'aux18' order represents '1' with '1'
c Var 'aux18' order represents '0' with '-2646'
c Encoding variable: aux19 with domain: bool (representing constraint ((variant_fields_00003_00004_00001 + variant_fields_00003_00004_00002 + variant_fields_00003_00004_00003)=tv=17))
c Var 'aux19' direct represents '0' with '-2647'
c Var 'aux19' direct represents '1' with '2647'
c Var 'aux19' order represents '1' with '1'
c Var 'aux19' order represents '0' with '-2647'
c Encoding variable: aux20 with domain: int(0,4,6..8) (representing constraint (variant_fields_00003_00006_00006 * (6<=variant_fields_00003_00006_00001)))
c Both direct and order encoding.
c Var 'aux20' order represents '0' with '2648'
c Var 'aux20' direct represents '0' with '2648'
c Var 'aux20' order represents '4' with '2649'
-2648 2649 0
c Var 'aux20' direct represents '4' with '2650'
2648 -2649 2650 0
-2650 2649 0
-2650 -2648 0
c Var 'aux20' order represents '6' with '2651'
-2649 2651 0
c Var 'aux20' direct represents '6' with '2652'
2649 -2651 2652 0
-2652 2651 0
-2652 -2649 0
c Var 'aux20' order represents '7' with '2653'
-2651 2653 0
c Var 'aux20' direct represents '7' with '2654'
2651 -2653 2654 0
-2654 2653 0
-2654 -2651 0
c Var 'aux20' direct represents '8' with '-2653'
2648 2650 2652 2654 -2653 0
c Encoding variable: aux21 with domain: int(0,2..3,5..9) (representing constraint (variant_fields_00003_00006_00007 * (7<=variant_fields_00003_00006_00001)))
c Both direct and order encoding.
c Var 'aux21' order represents '0' with '2655'
c Var 'aux21' direct represents '0' with '2655'
c Var 'aux21' order represents '2' with '2656'
-2655 2656 0
c Var 'aux21' direct represents '2' with '2657'
2655 -2656 2657 0
-2657 2656 0
-2657 -2655 0
c Var 'aux21' order represents '3' with '2658'
-2656 2658 0
c Var 'aux21' direct represents '3' with '2659'
2656 -2658 2659 0
-2659 2658 0
-2659 -2656 0
c Var 'aux21' order represents '5' with '2660'
-2658 2660 0
c Var 'aux21' direct represents '5' with '2661'
2658 -2660 2661 0
-2661 2660 0
-2661 -2658 0
c Var 'aux21' order represents '6' with '2662'
-2660 2662 0
c Var 'aux21' direct represents '6' with '2663'
2660 -2662 2663 0
-2663 2662 0
-2663 -2660 0
c Var 'aux21' order represents '7' with '2664'
-2662 2664 0
c Var 'aux21' direct represents '7' with '2665'
2662 -2664 2665 0
-2665 2664 0
-2665 -2662 0
c Var 'aux21' order represents '8' with '2666'
-2664 2666 0
c Var 'aux21' direct represents '8' with '2667'
2664 -2666 2667 0
-2667 2666 0
-2667 -2664 0
c Var 'aux21' direct represents '9' with '-2666'
2655 2657 2659 2661 2663 2665 2667 -2666 0
c Encoding variable: aux22 with domain: bool (representing constraint ((variant_fields_00003_00006_00001 + variant_fields_00003_00006_00002 + variant_fields_00003_00006_00003 + variant_fields_00003_00006_00004 + variant_fields_00003_00006_00005 + aux20 + aux21)=tv=30))
c Var 'aux22' direct represents '0' with '-2668'
c Var 'aux22' direct represents '1' with '2668'
c Var 'aux22' order represents '1' with '1'
c Var 'aux22' order represents '0' with '-2668'
c Encoding variable: aux23 with domain: int(0..1,4,6..7) (representing constraint (variant_fields_00003_00008_00006 * (6<=variant_fields_00003_00008_00001)))
c Both direct and order encoding.
c Var 'aux23' order represents '0' with '2669'
c Var 'aux23' direct represents '0' with '2669'
c Var 'aux23' order represents '1' with '2670'
-2669 2670 0
c Var 'aux23' direct represents '1' with '2671'
2669 -2670 2671 0
-2671 2670 0
-2671 -2669 0
c Var 'aux23' order represents '4' with '2672'
-2670 2672 0
c Var 'aux23' direct represents '4' with '2673'
2670 -2672 2673 0
-2673 2672 0
-2673 -2670 0
c Var 'aux23' order represents '6' with '2674'
-2672 2674 0
c Var 'aux23' direct represents '6' with '2675'
2672 -2674 2675 0
-2675 2674 0
-2675 -2672 0
c Var 'aux23' direct represents '7' with '-2674'
2669 2671 2673 2675 -2674 0
c Encoding variable: aux24 with domain: int(0,2..9) (representing constraint (variant_fields_00003_00008_00007 * (7<=variant_fields_00003_00008_00001)))
c Both direct and order encoding.
c Var 'aux24' order represents '0' with '2676'
c Var 'aux24' direct represents '0' with '2676'
c Var 'aux24' order represents '2' with '2677'
-2676 2677 0
c Var 'aux24' direct represents '2' with '2678'
2676 -2677 2678 0
-2678 2677 0
-2678 -2676 0
c Var 'aux24' order represents '3' with '2679'
-2677 2679 0
c Var 'aux24' direct represents '3' with '2680'
2677 -2679 2680 0
-2680 2679 0
-2680 -2677 0
c Var 'aux24' order represents '4' with '2681'
-2679 2681 0
c Var 'aux24' direct represents '4' with '2682'
2679 -2681 2682 0
-2682 2681 0
-2682 -2679 0
c Var 'aux24' order represents '5' with '2683'
-2681 2683 0
c Var 'aux24' direct represents '5' with '2684'
2681 -2683 2684 0
-2684 2683 0
-2684 -2681 0
c Var 'aux24' order represents '6' with '2685'
-2683 2685 0
c Var 'aux24' direct represents '6' with '2686'
2683 -2685 2686 0
-2686 2685 0
-2686 -2683 0
c Var 'aux24' order represents '7' with '2687'
-2685 2687 0
c Var 'aux24' direct represents '7' with '2688'
2685 -2687 2688 0
-2688 2687 0
-2688 -2685 0
c Var 'aux24' order represents '8' with '2689'
-2687 2689 0
c Var 'aux24' direct represents '8' with '2690'
2687 -2689 2690 0
-2690 2689 0
-2690 -2687 0
c Var 'aux24' direct represents '9' with '-2689'
2676 2678 2680 2682 2684 2686 2688 2690 -2689 0
c Encoding variable: aux25 with domain: int(0,2..9) (representing constraint (variant_fields_00003_00008_00008 * (8<=variant_fields_00003_00008_00001)))
c Both direct and order encoding.
c Var 'aux25' order represents '0' with '2691'
c Var 'aux25' direct represents '0' with '2691'
c Var 'aux25' order represents '2' with '2692'
-2691 2692 0
c Var 'aux25' direct represents '2' with '2693'
2691 -2692 2693 0
-2693 2692 0
-2693 -2691 0
c Var 'aux25' order represents '3' with '2694'
-2692 2694 0
c Var 'aux25' direct represents '3' with '2695'
2692 -2694 2695 0
-2695 2694 0
-2695 -2692 0
c Var 'aux25' order represents '4' with '2696'
-2694 2696 0
c Var 'aux25' direct represents '4' with '2697'
2694 -2696 2697 0
-2697 2696 0
-2697 -2694 0
c Var 'aux25' order represents '5' with '2698'
-2696 2698 0
c Var 'aux25' direct represents '5' with '2699'
2696 -2698 2699 0
-2699 2698 0
-2699 -2696 0
c Var 'aux25' order represents '6' with '2700'
-2698 2700 0
c Var 'aux25' direct represents '6' with '2701'
2698 -2700 2701 0
-2701 2700 0
-2701 -2698 0
c Var 'aux25' order represents '7' with '2702'
-2700 2702 0
c Var 'aux25' direct represents '7' with '2703'
2700 -2702 2703 0
-2703 2702 0
-2703 -2700 0
c Var 'aux25' order represents '8' with '2704'
-2702 2704 0
c Var 'aux25' direct represents '8' with '2705'
2702 -2704 2705 0
-2705 2704 0
-2705 -2702 0
c Var 'aux25' direct represents '9' with '-2704'
2691 2693 2695 2697 2699 2701 2703 2705 -2704 0
c Encoding variable: aux26 with domain: bool (representing constraint ((aux23 + aux24 + aux25 + variant_fields_00003_00008_00001 + variant_fields_00003_00008_00002 + variant_fields_00003_00008_00003 + variant_fields_00003_00008_00004 + variant_fields_00003_00008_00005)=tv=28))
c Var 'aux26' direct represents '0' with '-2706'
c Var 'aux26' direct represents '1' with '2706'
c Var 'aux26' order represents '1' with '1'
c Var 'aux26' order represents '0' with '-2706'
c Encoding variable: aux27 with domain: int(0..2,7) (representing constraint (variant_fields_00004_00002_00006 * (6<=variant_fields_00004_00002_00001)))
c Both direct and order encoding.
c Var 'aux27' order represents '0' with '2707'
c Var 'aux27' direct represents '0' with '2707'
c Var 'aux27' order represents '1' with '2708'
-2707 2708 0
c Var 'aux27' direct represents '1' with '2709'
2707 -2708 2709 0
-2709 2708 0
-2709 -2707 0
c Var 'aux27' order represents '2' with '2710'
-2708 2710 0
c Var 'aux27' direct represents '2' with '2711'
2708 -2710 2711 0
-2711 2710 0
-2711 -2708 0
c Var 'aux27' direct represents '7' with '-2710'
2707 2709 2711 -2710 0
c Encoding variable: aux28 with domain: bool (representing constraint ((variant_fields_00004_00002_00001 + variant_fields_00004_00002_00002 + variant_fields_00004_00002_00003 + variant_fields_00004_00002_00004 + variant_fields_00004_00002_00005 + aux27)=tv=27))
c Var 'aux28' direct represents '0' with '-2712'
c Var 'aux28' direct represents '1' with '2712'
c Var 'aux28' order represents '1' with '1'
c Var 'aux28' order represents '0' with '-2712'
c Encoding variable: aux29 with domain: bool (representing constraint ((variant_fields_00004_00004_00001 + variant_fields_00004_00004_00002 + variant_fields_00004_00004_00003)=tv=11))
c Var 'aux29' direct represents '0' with '-2713'
c Var 'aux29' direct represents '1' with '2713'
c Var 'aux29' order represents '1' with '1'
c Var 'aux29' order represents '0' with '-2713'
c Encoding variable: aux30 with domain: bool (representing constraint ((variant_fields_00004_00007_00001 + variant_fields_00004_00007_00002 + variant_fields_00004_00007_00003 + variant_fields_00004_00007_00004)=tv=16))
c Var 'aux30' direct represents '0' with '-2714'
c Var 'aux30' direct represents '1' with '2714'
c Var 'aux30' order represents '1' with '1'
c Var 'aux30' order represents '0' with '-2714'
c Encoding variable: aux31 with domain: bool (representing constraint (((field_00009_00001=1) + (field_00007_00001=1))=tv=1))
c Var 'aux31' direct represents '0' with '-2715'
c Var 'aux31' direct represents '1' with '2715'
c Var 'aux31' order represents '1' with '1'
c Var 'aux31' order represents '0' with '-2715'
c Encoding variable: aux32 with domain: bool (representing constraint (((field_00009_00001=2) + (field_00007_00001=2) + (field_00005_00001=2) + (field_00003_00001=2))=tv=1))
c Var 'aux32' direct represents '0' with '-2716'
c Var 'aux32' direct represents '1' with '2716'
c Var 'aux32' order represents '1' with '1'
c Var 'aux32' order represents '0' with '-2716'
c Encoding variable: aux33 with domain: bool (representing constraint (((field_00009_00001=5) + (field_00007_00001=5) + (field_00005_00001=5) + (field_00003_00001=5) + (field_00008_00001=5) + (field_00001_00001=5) + (field_00006_00001=5))=tv=1))
c Var 'aux33' direct represents '0' with '-2717'
c Var 'aux33' direct represents '1' with '2717'
c Var 'aux33' order represents '1' with '1'
c Var 'aux33' order represents '0' with '-2717'
c Encoding variable: aux34 with domain: bool (representing constraint (((field_00009_00001=6) + (field_00007_00001=6) + (field_00005_00001=6) + (field_00003_00001=6) + (field_00008_00001=6) + (field_00001_00001=6) + (field_00006_00001=6))=tv=1))
c Var 'aux34' direct represents '0' with '-2718'
c Var 'aux34' direct represents '1' with '2718'
c Var 'aux34' order represents '1' with '1'
c Var 'aux34' order represents '0' with '-2718'
c Encoding variable: aux35 with domain: bool (representing constraint (((field_00009_00001=7) + (field_00007_00001=7) + (field_00005_00001=7) + (field_00003_00001=7) + (field_00008_00001=7) + (field_00001_00001=7) + (field_00006_00001=7))=tv=1))
c Var 'aux35' direct represents '0' with '-2719'
c Var 'aux35' direct represents '1' with '2719'
c Var 'aux35' order represents '1' with '1'
c Var 'aux35' order represents '0' with '-2719'
c Encoding variable: aux36 with domain: bool (representing constraint (((field_00009_00001=8) + (field_00007_00001=8) + (field_00005_00001=8) + (field_00003_00001=8) + (field_00008_00001=8) + (field_00001_00001=8) + (field_00006_00001=8))=tv=1))
c Var 'aux36' direct represents '0' with '-2720'
c Var 'aux36' direct represents '1' with '2720'
c Var 'aux36' order represents '1' with '1'
c Var 'aux36' order represents '0' with '-2720'
c Encoding variable: aux37 with domain: bool (representing constraint (((field_00009_00001=9) + (field_00007_00001=9) + (field_00005_00001=9) + (field_00003_00001=9) + (field_00001_00001=9))=tv=1))
c Var 'aux37' direct represents '0' with '-2721'
c Var 'aux37' direct represents '1' with '2721'
c Var 'aux37' order represents '1' with '1'
c Var 'aux37' order represents '0' with '-2721'
c Encoding variable: aux38 with domain: bool (representing constraint (((field_00004_00002=1) + (field_00002_00002=1))=tv=1))
c Var 'aux38' direct represents '0' with '-2722'
c Var 'aux38' direct represents '1' with '2722'
c Var 'aux38' order represents '1' with '1'
c Var 'aux38' order represents '0' with '-2722'
c Encoding variable: aux39 with domain: bool (representing constraint (((field_00004_00002=2) + (field_00007_00002=2) + (field_00005_00002=2) + (field_00003_00002=2) + (field_00008_00002=2) + (field_00006_00002=2))=tv=1))
c Var 'aux39' direct represents '0' with '-2723'
c Var 'aux39' direct represents '1' with '2723'
c Var 'aux39' order represents '1' with '1'
c Var 'aux39' order represents '0' with '-2723'
c Encoding variable: aux40 with domain: bool (representing constraint (((field_00007_00002=3) + (field_00005_00002=3) + (field_00008_00002=3) + (field_00006_00002=3))=tv=1))
c Var 'aux40' direct represents '0' with '-2724'
c Var 'aux40' direct represents '1' with '2724'
c Var 'aux40' order represents '1' with '1'
c Var 'aux40' order represents '0' with '-2724'
c Encoding variable: aux41 with domain: bool (representing constraint (((field_00002_00002=4) + (field_00007_00002=4) + (field_00008_00002=4))=tv=1))
c Var 'aux41' direct represents '0' with '-2725'
c Var 'aux41' direct represents '1' with '2725'
c Var 'aux41' order represents '1' with '1'
c Var 'aux41' order represents '0' with '-2725'
c Encoding variable: aux42 with domain: bool (representing constraint (((field_00009_00002=5) + (field_00007_00002=5) + (field_00005_00002=5) + (field_00003_00002=5) + (field_00008_00002=5) + (field_00001_00002=5) + (field_00006_00002=5))=tv=1))
c Var 'aux42' direct represents '0' with '-2726'
c Var 'aux42' direct represents '1' with '2726'
c Var 'aux42' order represents '1' with '1'
c Var 'aux42' order represents '0' with '-2726'
c Encoding variable: aux43 with domain: bool (representing constraint (((field_00009_00002=6) + (field_00007_00002=6) + (field_00005_00002=6) + (field_00003_00002=6) + (field_00008_00002=6) + (field_00001_00002=6) + (field_00006_00002=6))=tv=1))
c Var 'aux43' direct represents '0' with '-2727'
c Var 'aux43' direct represents '1' with '2727'
c Var 'aux43' order represents '1' with '1'
c Var 'aux43' order represents '0' with '-2727'
c Encoding variable: aux44 with domain: bool (representing constraint (((field_00004_00002=7) + (field_00007_00002=7) + (field_00005_00002=7) + (field_00003_00002=7) + (field_00008_00002=7) + (field_00001_00002=7) + (field_00006_00002=7))=tv=1))
c Var 'aux44' direct represents '0' with '-2728'
c Var 'aux44' direct represents '1' with '2728'
c Var 'aux44' order represents '1' with '1'
c Var 'aux44' order represents '0' with '-2728'
c Encoding variable: aux45 with domain: bool (representing constraint (((field_00007_00002=8) + (field_00005_00002=8) + (field_00003_00002=8) + (field_00008_00002=8) + (field_00006_00002=8))=tv=1))
c Var 'aux45' direct represents '0' with '-2729'
c Var 'aux45' direct represents '1' with '2729'
c Var 'aux45' order represents '1' with '1'
c Var 'aux45' order represents '0' with '-2729'
c Encoding variable: aux46 with domain: bool (representing constraint (((field_00007_00002=9) + (field_00005_00002=9) + (field_00003_00002=9) + (field_00008_00002=9) + (field_00006_00002=9))=tv=1))
c Var 'aux46' direct represents '0' with '-2730'
c Var 'aux46' direct represents '1' with '2730'
c Var 'aux46' order represents '1' with '1'
c Var 'aux46' order represents '0' with '-2730'
c Encoding variable: aux47 with domain: bool (representing constraint (((field_00004_00003=1) + (field_00002_00003=1))=tv=1))
c Var 'aux47' direct represents '0' with '-2731'
c Var 'aux47' direct represents '1' with '2731'
c Var 'aux47' order represents '1' with '1'
c Var 'aux47' order represents '0' with '-2731'
c Encoding variable: aux48 with domain: bool (representing constraint (((field_00004_00003=2) + (field_00009_00003=2) + (field_00007_00003=2) + (field_00005_00003=2) + (field_00003_00003=2) + (field_00008_00003=2) + (field_00006_00003=2))=tv=1))
c Var 'aux48' direct represents '0' with '-2732'
c Var 'aux48' direct represents '1' with '2732'
c Var 'aux48' order represents '1' with '1'
c Var 'aux48' order represents '0' with '-2732'
c Encoding variable: aux49 with domain: bool (representing constraint (((field_00007_00003=3) + (field_00005_00003=3) + (field_00008_00003=3) + (field_00006_00003=3))=tv=1))
c Var 'aux49' direct represents '0' with '-2733'
c Var 'aux49' direct represents '1' with '2733'
c Var 'aux49' order represents '1' with '1'
c Var 'aux49' order represents '0' with '-2733'
c Encoding variable: aux50 with domain: bool (representing constraint (((field_00002_00003=4) + (field_00007_00003=4) + (field_00008_00003=4))=tv=1))
c Var 'aux50' direct represents '0' with '-2734'
c Var 'aux50' direct represents '1' with '2734'
c Var 'aux50' order represents '1' with '1'
c Var 'aux50' order represents '0' with '-2734'
c Encoding variable: aux51 with domain: bool (representing constraint (((field_00009_00003=5) + (field_00007_00003=5) + (field_00005_00003=5) + (field_00003_00003=5) + (field_00008_00003=5) + (field_00001_00003=5) + (field_00006_00003=5))=tv=1))
c Var 'aux51' direct represents '0' with '-2735'
c Var 'aux51' direct represents '1' with '2735'
c Var 'aux51' order represents '1' with '1'
c Var 'aux51' order represents '0' with '-2735'
c Encoding variable: aux52 with domain: bool (representing constraint (((field_00009_00003=6) + (field_00007_00003=6) + (field_00005_00003=6) + (field_00003_00003=6) + (field_00008_00003=6) + (field_00001_00003=6) + (field_00006_00003=6))=tv=1))
c Var 'aux52' direct represents '0' with '-2736'
c Var 'aux52' direct represents '1' with '2736'
c Var 'aux52' order represents '1' with '1'
c Var 'aux52' order represents '0' with '-2736'
c Encoding variable: aux53 with domain: bool (representing constraint (((field_00004_00003=7) + (field_00009_00003=7) + (field_00007_00003=7) + (field_00005_00003=7) + (field_00003_00003=7) + (field_00008_00003=7) + (field_00001_00003=7) + (field_00006_00003=7))=tv=1))
c Var 'aux53' direct represents '0' with '-2737'
c Var 'aux53' direct represents '1' with '2737'
c Var 'aux53' order represents '1' with '1'
c Var 'aux53' order represents '0' with '-2737'
c Encoding variable: aux54 with domain: bool (representing constraint (((field_00009_00003=8) + (field_00007_00003=8) + (field_00005_00003=8) + (field_00003_00003=8) + (field_00008_00003=8) + (field_00001_00003=8) + (field_00006_00003=8))=tv=1))
c Var 'aux54' direct represents '0' with '-2738'
c Var 'aux54' direct represents '1' with '2738'
c Var 'aux54' order represents '1' with '1'
c Var 'aux54' order represents '0' with '-2738'
c Encoding variable: aux55 with domain: bool (representing constraint (((field_00009_00003=9) + (field_00007_00003=9) + (field_00005_00003=9) + (field_00003_00003=9) + (field_00008_00003=9) + (field_00001_00003=9) + (field_00006_00003=9))=tv=1))
c Var 'aux55' direct represents '0' with '-2739'
c Var 'aux55' direct represents '1' with '2739'
c Var 'aux55' order represents '1' with '1'
c Var 'aux55' order represents '0' with '-2739'
c Encoding variable: aux56 with domain: bool (representing constraint (((field_00007_00004=1) + (field_00008_00004=1))=tv=1))
c Var 'aux56' direct represents '0' with '-2740'
c Var 'aux56' direct represents '1' with '2740'
c Var 'aux56' order represents '1' with '1'
c Var 'aux56' order represents '0' with '-2740'
c Encoding variable: aux57 with domain: bool (representing constraint (((field_00007_00004=4) + (field_00005_00004=4) + (field_00003_00004=4) + (field_00008_00004=4) + (field_00006_00004=4))=tv=1))
c Var 'aux57' direct represents '0' with '-2741'
c Var 'aux57' direct represents '1' with '2741'
c Var 'aux57' order represents '1' with '1'
c Var 'aux57' order represents '0' with '-2741'
c Encoding variable: aux58 with domain: bool (representing constraint (((field_00007_00004=6) + (field_00005_00004=6) + (field_00003_00004=6) + (field_00008_00004=6) + (field_00006_00004=6))=tv=1))
c Var 'aux58' direct represents '0' with '-2742'
c Var 'aux58' direct represents '1' with '2742'
c Var 'aux58' order represents '1' with '1'
c Var 'aux58' order represents '0' with '-2742'
c Encoding variable: aux59 with domain: bool (representing constraint (((field_00007_00004=7) + (field_00005_00004=7) + (field_00003_00004=7) + (field_00008_00004=7) + (field_00006_00004=7))=tv=1))
c Var 'aux59' direct represents '0' with '-2743'
c Var 'aux59' direct represents '1' with '2743'
c Var 'aux59' order represents '1' with '1'
c Var 'aux59' order represents '0' with '-2743'
c Encoding variable: aux60 with domain: bool (representing constraint (((field_00005_00004=8) + (field_00003_00004=8) + (field_00006_00004=8))=tv=1))
c Var 'aux60' direct represents '0' with '-2744'
c Var 'aux60' direct represents '1' with '2744'
c Var 'aux60' order represents '1' with '1'
c Var 'aux60' order represents '0' with '-2744'
c Encoding variable: aux61 with domain: bool (representing constraint (((field_00005_00005=1) + (field_00003_00005=1) + (field_00001_00005=1) + (field_00006_00005=1))=tv=1))
c Var 'aux61' direct represents '0' with '-2745'
c Var 'aux61' direct represents '1' with '2745'
c Var 'aux61' order represents '1' with '1'
c Var 'aux61' order represents '0' with '-2745'
c Encoding variable: aux62 with domain: bool (representing constraint (((field_00004_00005=2) + (field_00009_00005=2) + (field_00007_00005=2) + (field_00005_00005=2) + (field_00008_00005=2) + (field_00006_00005=2))=tv=1))
c Var 'aux62' direct represents '0' with '-2746'
c Var 'aux62' direct represents '1' with '2746'
c Var 'aux62' order represents '1' with '1'
c Var 'aux62' order represents '0' with '-2746'
c Encoding variable: aux63 with domain: bool (representing constraint (((field_00005_00005=3) + (field_00003_00005=3) + (field_00006_00005=3))=tv=1))
c Var 'aux63' direct represents '0' with '-2747'
c Var 'aux63' direct represents '1' with '2747'
c Var 'aux63' order represents '1' with '1'
c Var 'aux63' order represents '0' with '-2747'
c Encoding variable: aux64 with domain: bool (representing constraint (((field_00007_00005=4) + (field_00005_00005=4) + (field_00003_00005=4) + (field_00008_00005=4) + (field_00001_00005=4) + (field_00006_00005=4))=tv=1))
c Var 'aux64' direct represents '0' with '-2748'
c Var 'aux64' direct represents '1' with '2748'
c Var 'aux64' order represents '1' with '1'
c Var 'aux64' order represents '0' with '-2748'
c Encoding variable: aux65 with domain: bool (representing constraint (((field_00009_00005=5) + (field_00002_00005=5) + (field_00007_00005=5) + (field_00003_00005=5) + (field_00008_00005=5) + (field_00001_00005=5))=tv=1))
c Var 'aux65' direct represents '0' with '-2749'
c Var 'aux65' direct represents '1' with '2749'
c Var 'aux65' order represents '1' with '1'
c Var 'aux65' order represents '0' with '-2749'
c Encoding variable: aux66 with domain: bool (representing constraint (((field_00009_00005=6) + (field_00007_00005=6) + (field_00005_00005=6) + (field_00003_00005=6) + (field_00008_00005=6) + (field_00001_00005=6) + (field_00006_00005=6))=tv=1))
c Var 'aux66' direct represents '0' with '-2750'
c Var 'aux66' direct represents '1' with '2750'
c Var 'aux66' order represents '1' with '1'
c Var 'aux66' order represents '0' with '-2750'
c Encoding variable: aux67 with domain: bool (representing constraint (((field_00004_00005=7) + (field_00009_00005=7) + (field_00002_00005=7) + (field_00007_00005=7) + (field_00005_00005=7) + (field_00003_00005=7) + (field_00008_00005=7) + (field_00001_00005=7) + (field_00006_00005=7))=tv=1))
c Var 'aux67' direct represents '0' with '-2751'
c Var 'aux67' direct represents '1' with '2751'
c Var 'aux67' order represents '1' with '1'
c Var 'aux67' order represents '0' with '-2751'
c Encoding variable: aux68 with domain: bool (representing constraint (((field_00009_00005=8) + (field_00002_00005=8) + (field_00007_00005=8) + (field_00005_00005=8) + (field_00003_00005=8) + (field_00008_00005=8) + (field_00001_00005=8) + (field_00006_00005=8))=tv=1))
c Var 'aux68' direct represents '0' with '-2752'
c Var 'aux68' direct represents '1' with '2752'
c Var 'aux68' order represents '1' with '1'
c Var 'aux68' order represents '0' with '-2752'
c Encoding variable: aux69 with domain: bool (representing constraint (((field_00004_00005=9) + (field_00009_00005=9) + (field_00007_00005=9) + (field_00008_00005=9))=tv=1))
c Var 'aux69' direct represents '0' with '-2753'
c Var 'aux69' direct represents '1' with '2753'
c Var 'aux69' order represents '1' with '1'
c Var 'aux69' order represents '0' with '-2753'
c Encoding variable: aux70 with domain: bool (representing constraint (((field_00005_00006=1) + (field_00003_00006=1) + (field_00006_00006=1))=tv=1))
c Var 'aux70' direct represents '0' with '-2754'
c Var 'aux70' direct represents '1' with '2754'
c Var 'aux70' order represents '1' with '1'
c Var 'aux70' order represents '0' with '-2754'
c Encoding variable: aux71 with domain: bool (representing constraint (((field_00004_00006=2) + (field_00009_00006=2) + (field_00007_00006=2) + (field_00005_00006=2) + (field_00008_00006=2) + (field_00006_00006=2))=tv=1))
c Var 'aux71' direct represents '0' with '-2755'
c Var 'aux71' direct represents '1' with '2755'
c Var 'aux71' order represents '1' with '1'
c Var 'aux71' order represents '0' with '-2755'
c Encoding variable: aux72 with domain: bool (representing constraint (((field_00005_00006=3) + (field_00003_00006=3) + (field_00006_00006=3))=tv=1))
c Var 'aux72' direct represents '0' with '-2756'
c Var 'aux72' direct represents '1' with '2756'
c Var 'aux72' order represents '1' with '1'
c Var 'aux72' order represents '0' with '-2756'
c Encoding variable: aux73 with domain: bool (representing constraint (((field_00007_00006=4) + (field_00005_00006=4) + (field_00003_00006=4) + (field_00008_00006=4) + (field_00001_00006=4) + (field_00006_00006=4))=tv=1))
c Var 'aux73' direct represents '0' with '-2757'
c Var 'aux73' direct represents '1' with '2757'
c Var 'aux73' order represents '1' with '1'
c Var 'aux73' order represents '0' with '-2757'
c Encoding variable: aux74 with domain: bool (representing constraint (((field_00009_00006=5) + (field_00002_00006=5) + (field_00007_00006=5) + (field_00003_00006=5) + (field_00008_00006=5) + (field_00001_00006=5))=tv=1))
c Var 'aux74' direct represents '0' with '-2758'
c Var 'aux74' direct represents '1' with '2758'
c Var 'aux74' order represents '1' with '1'
c Var 'aux74' order represents '0' with '-2758'
c Encoding variable: aux75 with domain: bool (representing constraint (((field_00009_00006=6) + (field_00007_00006=6) + (field_00005_00006=6) + (field_00003_00006=6) + (field_00008_00006=6) + (field_00001_00006=6) + (field_00006_00006=6))=tv=1))
c Var 'aux75' direct represents '0' with '-2759'
c Var 'aux75' direct represents '1' with '2759'
c Var 'aux75' order represents '1' with '1'
c Var 'aux75' order represents '0' with '-2759'
c Encoding variable: aux76 with domain: bool (representing constraint (((field_00004_00006=7) + (field_00009_00006=7) + (field_00002_00006=7) + (field_00007_00006=7) + (field_00005_00006=7) + (field_00003_00006=7) + (field_00008_00006=7) + (field_00006_00006=7))=tv=1))
c Var 'aux76' direct represents '0' with '-2760'
c Var 'aux76' direct represents '1' with '2760'
c Var 'aux76' order represents '1' with '1'
c Var 'aux76' order represents '0' with '-2760'
c Encoding variable: aux77 with domain: bool (representing constraint (((field_00009_00006=8) + (field_00002_00006=8) + (field_00007_00006=8) + (field_00005_00006=8) + (field_00003_00006=8) + (field_00008_00006=8) + (field_00006_00006=8))=tv=1))
c Var 'aux77' direct represents '0' with '-2761'
c Var 'aux77' direct represents '1' with '2761'
c Var 'aux77' order represents '1' with '1'
c Var 'aux77' order represents '0' with '-2761'
c Encoding variable: aux78 with domain: bool (representing constraint (((field_00004_00006=9) + (field_00009_00006=9) + (field_00007_00006=9) + (field_00008_00006=9))=tv=1))
c Var 'aux78' direct represents '0' with '-2762'
c Var 'aux78' direct represents '1' with '2762'
c Var 'aux78' order represents '1' with '1'
c Var 'aux78' order represents '0' with '-2762'
c Encoding variable: aux79 with domain: bool (representing constraint (((field_00007_00007=1) + (field_00008_00007=1) + (field_00006_00007=1))=tv=1))
c Var 'aux79' direct represents '0' with '-2763'
c Var 'aux79' direct represents '1' with '2763'
c Var 'aux79' order represents '1' with '1'
c Var 'aux79' order represents '0' with '-2763'
c Encoding variable: aux80 with domain: bool (representing constraint (((field_00007_00007=2) + (field_00005_00007=2) + (field_00008_00007=2) + (field_00006_00007=2))=tv=1))
c Var 'aux80' direct represents '0' with '-2764'
c Var 'aux80' direct represents '1' with '2764'
c Var 'aux80' order represents '1' with '1'
c Var 'aux80' order represents '0' with '-2764'
c Encoding variable: aux81 with domain: bool (representing constraint (((field_00002_00007=5) + (field_00007_00007=5) + (field_00005_00007=5) + (field_00003_00007=5) + (field_00008_00007=5) + (field_00006_00007=5))=tv=1))
c Var 'aux81' direct represents '0' with '-2765'
c Var 'aux81' direct represents '1' with '2765'
c Var 'aux81' order represents '1' with '1'
c Var 'aux81' order represents '0' with '-2765'
c Encoding variable: aux82 with domain: bool (representing constraint (((field_00002_00007=7) + (field_00007_00007=7) + (field_00005_00007=7) + (field_00003_00007=7) + (field_00008_00007=7) + (field_00006_00007=7))=tv=1))
c Var 'aux82' direct represents '0' with '-2766'
c Var 'aux82' direct represents '1' with '2766'
c Var 'aux82' order represents '1' with '1'
c Var 'aux82' order represents '0' with '-2766'
c Encoding variable: aux83 with domain: bool (representing constraint (((field_00002_00007=8) + (field_00007_00007=8) + (field_00003_00007=8) + (field_00008_00007=8))=tv=1))
c Var 'aux83' direct represents '0' with '-2767'
c Var 'aux83' direct represents '1' with '2767'
c Var 'aux83' order represents '1' with '1'
c Var 'aux83' order represents '0' with '-2767'
c Encoding variable: aux84 with domain: bool (representing constraint (((field_00007_00007=9) + (field_00005_00007=9) + (field_00008_00007=9) + (field_00006_00007=9))=tv=1))
c Var 'aux84' direct represents '0' with '-2768'
c Var 'aux84' direct represents '1' with '2768'
c Var 'aux84' order represents '1' with '1'
c Var 'aux84' order represents '0' with '-2768'
c Encoding variable: aux85 with domain: bool (representing constraint (((field_00009_00008=1) + (field_00007_00008=1) + (field_00005_00008=1) + (field_00003_00008=1) + (field_00008_00008=1) + (field_00001_00008=1) + (field_00006_00008=1))=tv=1))
c Var 'aux85' direct represents '0' with '-2769'
c Var 'aux85' direct represents '1' with '2769'
c Var 'aux85' order represents '1' with '1'
c Var 'aux85' order represents '0' with '-2769'
c Encoding variable: aux86 with domain: bool (representing constraint (((field_00009_00008=2) + (field_00007_00008=2) + (field_00005_00008=2) + (field_00008_00008=2) + (field_00006_00008=2))=tv=1))
c Var 'aux86' direct represents '0' with '-2770'
c Var 'aux86' direct represents '1' with '2770'
c Var 'aux86' order represents '1' with '1'
c Var 'aux86' order represents '0' with '-2770'
c Encoding variable: aux87 with domain: bool (representing constraint (((field_00007_00008=3) + (field_00008_00008=3))=tv=1))
c Var 'aux87' direct represents '0' with '-2771'
c Var 'aux87' direct represents '1' with '2771'
c Var 'aux87' order represents '1' with '1'
c Var 'aux87' order represents '0' with '-2771'
c Encoding variable: aux88 with domain: bool (representing constraint (((field_00005_00008=4) + (field_00003_00008=4) + (field_00001_00008=4) + (field_00006_00008=4))=tv=1))
c Var 'aux88' direct represents '0' with '-2772'
c Var 'aux88' direct represents '1' with '2772'
c Var 'aux88' order represents '1' with '1'
c Var 'aux88' order represents '0' with '-2772'
c Encoding variable: aux89 with domain: bool (representing constraint (((field_00009_00008=5) + (field_00007_00008=5) + (field_00005_00008=5) + (field_00003_00008=5) + (field_00008_00008=5) + (field_00001_00008=5) + (field_00006_00008=5))=tv=1))
c Var 'aux89' direct represents '0' with '-2773'
c Var 'aux89' direct represents '1' with '2773'
c Var 'aux89' order represents '1' with '1'
c Var 'aux89' order represents '0' with '-2773'
c Encoding variable: aux90 with domain: bool (representing constraint (((field_00009_00008=7) + (field_00007_00008=7) + (field_00005_00008=7) + (field_00003_00008=7) + (field_00008_00008=7) + (field_00001_00008=7) + (field_00006_00008=7))=tv=1))
c Var 'aux90' direct represents '0' with '-2774'
c Var 'aux90' direct represents '1' with '2774'
c Var 'aux90' order represents '1' with '1'
c Var 'aux90' order represents '0' with '-2774'
c Encoding variable: aux91 with domain: bool (representing constraint (((field_00009_00008=9) + (field_00007_00008=9) + (field_00005_00008=9) + (field_00003_00008=9) + (field_00008_00008=9) + (field_00001_00008=9) + (field_00006_00008=9))=tv=1))
c Var 'aux91' direct represents '0' with '-2775'
c Var 'aux91' direct represents '1' with '2775'
c Var 'aux91' order represents '1' with '1'
c Var 'aux91' order represents '0' with '-2775'
c Encoding variable: aux92 with domain: bool (representing constraint (((field_00009_00009=1) + (field_00007_00009=1) + (field_00005_00009=1) + (field_00003_00009=1) + (field_00001_00009=1))=tv=1))
c Var 'aux92' direct represents '0' with '-2776'
c Var 'aux92' direct represents '1' with '2776'
c Var 'aux92' order represents '1' with '1'
c Var 'aux92' order represents '0' with '-2776'
c Encoding variable: aux93 with domain: bool (representing constraint (((field_00005_00009=4) + (field_00003_00009=4) + (field_00001_00009=4))=tv=1))
c Var 'aux93' direct represents '0' with '-2777'
c Var 'aux93' direct represents '1' with '2777'
c Var 'aux93' order represents '1' with '1'
c Var 'aux93' order represents '0' with '-2777'
c Encoding variable: aux94 with domain: bool (representing constraint (((field_00009_00009=5) + (field_00007_00009=5) + (field_00005_00009=5) + (field_00003_00009=5) + (field_00008_00009=5) + (field_00001_00009=5) + (field_00006_00009=5))=tv=1))
c Var 'aux94' direct represents '0' with '-2778'
c Var 'aux94' direct represents '1' with '2778'
c Var 'aux94' order represents '1' with '1'
c Var 'aux94' order represents '0' with '-2778'
c Encoding variable: aux95 with domain: bool (representing constraint (((field_00009_00009=6) + (field_00007_00009=6) + (field_00008_00009=6))=tv=1))
c Var 'aux95' direct represents '0' with '-2779'
c Var 'aux95' direct represents '1' with '2779'
c Var 'aux95' order represents '1' with '1'
c Var 'aux95' order represents '0' with '-2779'
c Encoding variable: aux96 with domain: bool (representing constraint (((field_00009_00009=7) + (field_00007_00009=7) + (field_00005_00009=7) + (field_00003_00009=7) + (field_00008_00009=7) + (field_00001_00009=7) + (field_00006_00009=7))=tv=1))
c Var 'aux96' direct represents '0' with '-2780'
c Var 'aux96' direct represents '1' with '2780'
c Var 'aux96' order represents '1' with '1'
c Var 'aux96' order represents '0' with '-2780'
c Encoding variable: aux97 with domain: bool (representing constraint (((field_00009_00009=8) + (field_00007_00009=8) + (field_00003_00009=8) + (field_00008_00009=8) + (field_00001_00009=8))=tv=1))
c Var 'aux97' direct represents '0' with '-2781'
c Var 'aux97' direct represents '1' with '2781'
c Var 'aux97' order represents '1' with '1'
c Var 'aux97' order represents '0' with '-2781'
c Encoding variable: aux98 with domain: bool (representing constraint (((field_00009_00009=9) + (field_00007_00009=9) + (field_00005_00009=9) + (field_00003_00009=9) + (field_00001_00009=9))=tv=1))
c Var 'aux98' direct represents '0' with '-2782'
c Var 'aux98' direct represents '1' with '2782'
c Var 'aux98' order represents '1' with '1'
c Var 'aux98' order represents '0' with '-2782'
c Encoding variable: aux99 with domain: bool (representing constraint (((field_00001_00005=1) + (field_00001_00008=1) + (field_00001_00009=1))=tv=1))
c Var 'aux99' direct represents '0' with '-2783'
c Var 'aux99' direct represents '1' with '2783'
c Var 'aux99' order represents '1' with '1'
c Var 'aux99' order represents '0' with '-2783'
c Encoding variable: aux100 with domain: bool (representing constraint (((field_00001_00005=4) + (field_00001_00006=4) + (field_00001_00008=4) + (field_00001_00009=4))=tv=1))
c Var 'aux100' direct represents '0' with '-2784'
c Var 'aux100' direct represents '1' with '2784'
c Var 'aux100' order represents '1' with '1'
c Var 'aux100' order represents '0' with '-2784'
c Encoding variable: aux101 with domain: bool (representing constraint (((field_00001_00001=5) + (field_00001_00002=5) + (field_00001_00003=5) + (field_00001_00005=5) + (field_00001_00006=5) + (field_00001_00008=5) + (field_00001_00009=5))=tv=1))
c Var 'aux101' direct represents '0' with '-2785'
c Var 'aux101' direct represents '1' with '2785'
c Var 'aux101' order represents '1' with '1'
c Var 'aux101' order represents '0' with '-2785'
c Encoding variable: aux102 with domain: bool (representing constraint (((field_00001_00001=6) + (field_00001_00002=6) + (field_00001_00003=6) + (field_00001_00005=6) + (field_00001_00006=6))=tv=1))
c Var 'aux102' direct represents '0' with '-2786'
c Var 'aux102' direct represents '1' with '2786'
c Var 'aux102' order represents '1' with '1'
c Var 'aux102' order represents '0' with '-2786'
c Encoding variable: aux103 with domain: bool (representing constraint (((field_00001_00001=7) + (field_00001_00002=7) + (field_00001_00003=7) + (field_00001_00005=7) + (field_00001_00008=7) + (field_00001_00009=7))=tv=1))
c Var 'aux103' direct represents '0' with '-2787'
c Var 'aux103' direct represents '1' with '2787'
c Var 'aux103' order represents '1' with '1'
c Var 'aux103' order represents '0' with '-2787'
c Encoding variable: aux104 with domain: bool (representing constraint (((field_00001_00001=8) + (field_00001_00003=8) + (field_00001_00005=8) + (field_00001_00009=8))=tv=1))
c Var 'aux104' direct represents '0' with '-2788'
c Var 'aux104' direct represents '1' with '2788'
c Var 'aux104' order represents '1' with '1'
c Var 'aux104' order represents '0' with '-2788'
c Encoding variable: aux105 with domain: bool (representing constraint (((field_00001_00001=9) + (field_00001_00003=9) + (field_00001_00008=9) + (field_00001_00009=9))=tv=1))
c Var 'aux105' direct represents '0' with '-2789'
c Var 'aux105' direct represents '1' with '2789'
c Var 'aux105' order represents '1' with '1'
c Var 'aux105' order represents '0' with '-2789'
c Encoding variable: aux106 with domain: bool (representing constraint (((field_00002_00002=1) + (field_00002_00003=1))=tv=1))
c Var 'aux106' direct represents '0' with '-2790'
c Var 'aux106' direct represents '1' with '2790'
c Var 'aux106' order represents '1' with '1'
c Var 'aux106' order represents '0' with '-2790'
c Encoding variable: aux107 with domain: bool (representing constraint (((field_00002_00002=4) + (field_00002_00003=4))=tv=1))
c Var 'aux107' direct represents '0' with '-2791'
c Var 'aux107' direct represents '1' with '2791'
c Var 'aux107' order represents '1' with '1'
c Var 'aux107' order represents '0' with '-2791'
c Encoding variable: aux108 with domain: bool (representing constraint (((field_00002_00005=5) + (field_00002_00006=5) + (field_00002_00007=5))=tv=1))
c Var 'aux108' direct represents '0' with '-2792'
c Var 'aux108' direct represents '1' with '2792'
c Var 'aux108' order represents '1' with '1'
c Var 'aux108' order represents '0' with '-2792'
c Encoding variable: aux109 with domain: bool (representing constraint (((field_00002_00005=7) + (field_00002_00006=7) + (field_00002_00007=7))=tv=1))
c Var 'aux109' direct represents '0' with '-2793'
c Var 'aux109' direct represents '1' with '2793'
c Var 'aux109' order represents '1' with '1'
c Var 'aux109' order represents '0' with '-2793'
c Encoding variable: aux110 with domain: bool (representing constraint (((field_00002_00005=8) + (field_00002_00006=8) + (field_00002_00007=8))=tv=1))
c Var 'aux110' direct represents '0' with '-2794'
c Var 'aux110' direct represents '1' with '2794'
c Var 'aux110' order represents '1' with '1'
c Var 'aux110' order represents '0' with '-2794'
c Encoding variable: aux111 with domain: bool (representing constraint (((field_00003_00005=1) + (field_00003_00006=1) + (field_00003_00008=1) + (field_00003_00009=1))=tv=1))
c Var 'aux111' direct represents '0' with '-2795'
c Var 'aux111' direct represents '1' with '2795'
c Var 'aux111' order represents '1' with '1'
c Var 'aux111' order represents '0' with '-2795'
c Encoding variable: aux112 with domain: bool (representing constraint (((field_00003_00001=2) + (field_00003_00002=2) + (field_00003_00003=2))=tv=1))
c Var 'aux112' direct represents '0' with '-2796'
c Var 'aux112' direct represents '1' with '2796'
c Var 'aux112' order represents '1' with '1'
c Var 'aux112' order represents '0' with '-2796'
c Encoding variable: aux113 with domain: bool (representing constraint (((field_00003_00005=3) + (field_00003_00006=3))=tv=1))
c Var 'aux113' direct represents '0' with '-2797'
c Var 'aux113' direct represents '1' with '2797'
c Var 'aux113' order represents '1' with '1'
c Var 'aux113' order represents '0' with '-2797'
c Encoding variable: aux114 with domain: bool (representing constraint (((field_00003_00004=4) + (field_00003_00005=4) + (field_00003_00006=4) + (field_00003_00008=4) + (field_00003_00009=4))=tv=1))
c Var 'aux114' direct represents '0' with '-2798'
c Var 'aux114' direct represents '1' with '2798'
c Var 'aux114' order represents '1' with '1'
c Var 'aux114' order represents '0' with '-2798'
c Encoding variable: aux115 with domain: bool (representing constraint (((field_00003_00001=5) + (field_00003_00002=5) + (field_00003_00003=5) + (field_00003_00005=5) + (field_00003_00006=5) + (field_00003_00007=5) + (field_00003_00008=5) + (field_00003_00009=5))=tv=1))
c Var 'aux115' direct represents '0' with '-2799'
c Var 'aux115' direct represents '1' with '2799'
c Var 'aux115' order represents '1' with '1'
c Var 'aux115' order represents '0' with '-2799'
c Encoding variable: aux116 with domain: bool (representing constraint (((field_00003_00001=6) + (field_00003_00002=6) + (field_00003_00003=6) + (field_00003_00004=6) + (field_00003_00005=6) + (field_00003_00006=6))=tv=1))
c Var 'aux116' direct represents '0' with '-2800'
c Var 'aux116' direct represents '1' with '2800'
c Var 'aux116' order represents '1' with '1'
c Var 'aux116' order represents '0' with '-2800'
c Encoding variable: aux117 with domain: bool (representing constraint (((field_00003_00001=7) + (field_00003_00002=7) + (field_00003_00003=7) + (field_00003_00004=7) + (field_00003_00005=7) + (field_00003_00006=7) + (field_00003_00007=7) + (field_00003_00008=7) + (field_00003_00009=7))=tv=1))
c Var 'aux117' direct represents '0' with '-2801'
c Var 'aux117' direct represents '1' with '2801'
c Var 'aux117' order represents '1' with '1'
c Var 'aux117' order represents '0' with '-2801'
c Encoding variable: aux118 with domain: bool (representing constraint (((field_00003_00001=8) + (field_00003_00002=8) + (field_00003_00003=8) + (field_00003_00004=8) + (field_00003_00005=8) + (field_00003_00006=8) + (field_00003_00007=8) + (field_00003_00009=8))=tv=1))
c Var 'aux118' direct represents '0' with '-2802'
c Var 'aux118' direct represents '1' with '2802'
c Var 'aux118' order represents '1' with '1'
c Var 'aux118' order represents '0' with '-2802'
c Encoding variable: aux119 with domain: bool (representing constraint (((field_00003_00001=9) + (field_00003_00002=9) + (field_00003_00003=9) + (field_00003_00008=9) + (field_00003_00009=9))=tv=1))
c Var 'aux119' direct represents '0' with '-2803'
c Var 'aux119' direct represents '1' with '2803'
c Var 'aux119' order represents '1' with '1'
c Var 'aux119' order represents '0' with '-2803'
c Encoding variable: aux120 with domain: bool (representing constraint (((field_00004_00002=1) + (field_00004_00003=1))=tv=1))
c Var 'aux120' direct represents '0' with '-2804'
c Var 'aux120' direct represents '1' with '2804'
c Var 'aux120' order represents '1' with '1'
c Var 'aux120' order represents '0' with '-2804'
c Encoding variable: aux121 with domain: bool (representing constraint (((field_00004_00002=2) + (field_00004_00003=2) + (field_00004_00005=2) + (field_00004_00006=2))=tv=1))
c Var 'aux121' direct represents '0' with '-2805'
c Var 'aux121' direct represents '1' with '2805'
c Var 'aux121' order represents '1' with '1'
c Var 'aux121' order represents '0' with '-2805'
c Encoding variable: aux122 with domain: bool (representing constraint (((field_00004_00002=7) + (field_00004_00003=7) + (field_00004_00005=7) + (field_00004_00006=7))=tv=1))
c Var 'aux122' direct represents '0' with '-2806'
c Var 'aux122' direct represents '1' with '2806'
c Var 'aux122' order represents '1' with '1'
c Var 'aux122' order represents '0' with '-2806'
c Encoding variable: aux123 with domain: bool (representing constraint (((field_00004_00005=9) + (field_00004_00006=9))=tv=1))
c Var 'aux123' direct represents '0' with '-2807'
c Var 'aux123' direct represents '1' with '2807'
c Var 'aux123' order represents '1' with '1'
c Var 'aux123' order represents '0' with '-2807'
c Encoding variable: aux124 with domain: bool (representing constraint (((field_00005_00005=1) + (field_00005_00006=1) + (field_00005_00008=1) + (field_00005_00009=1))=tv=1))
c Var 'aux124' direct represents '0' with '-2808'
c Var 'aux124' direct represents '1' with '2808'
c Var 'aux124' order represents '1' with '1'
c Var 'aux124' order represents '0' with '-2808'
c Encoding variable: aux125 with domain: bool (representing constraint (((field_00005_00001=2) + (field_00005_00002=2) + (field_00005_00003=2) + (field_00005_00005=2) + (field_00005_00006=2) + (field_00005_00007=2) + (field_00005_00008=2))=tv=1))
c Var 'aux125' direct represents '0' with '-2809'
c Var 'aux125' direct represents '1' with '2809'
c Var 'aux125' order represents '1' with '1'
c Var 'aux125' order represents '0' with '-2809'
c Encoding variable: aux126 with domain: bool (representing constraint (((field_00005_00002=3) + (field_00005_00003=3) + (field_00005_00005=3) + (field_00005_00006=3))=tv=1))
c Var 'aux126' direct represents '0' with '-2810'
c Var 'aux126' direct represents '1' with '2810'
c Var 'aux126' order represents '1' with '1'
c Var 'aux126' order represents '0' with '-2810'
c Encoding variable: aux127 with domain: bool (representing constraint (((field_00005_00004=4) + (field_00005_00005=4) + (field_00005_00006=4) + (field_00005_00008=4) + (field_00005_00009=4))=tv=1))
c Var 'aux127' direct represents '0' with '-2811'
c Var 'aux127' direct represents '1' with '2811'
c Var 'aux127' order represents '1' with '1'
c Var 'aux127' order represents '0' with '-2811'
c Encoding variable: aux128 with domain: bool (representing constraint (((field_00005_00001=5) + (field_00005_00002=5) + (field_00005_00003=5) + (field_00005_00007=5) + (field_00005_00008=5) + (field_00005_00009=5))=tv=1))
c Var 'aux128' direct represents '0' with '-2812'
c Var 'aux128' direct represents '1' with '2812'
c Var 'aux128' order represents '1' with '1'
c Var 'aux128' order represents '0' with '-2812'
c Encoding variable: aux129 with domain: bool (representing constraint (((field_00005_00001=6) + (field_00005_00002=6) + (field_00005_00003=6) + (field_00005_00004=6) + (field_00005_00005=6) + (field_00005_00006=6))=tv=1))
c Var 'aux129' direct represents '0' with '-2813'
c Var 'aux129' direct represents '1' with '2813'
c Var 'aux129' order represents '1' with '1'
c Var 'aux129' order represents '0' with '-2813'
c Encoding variable: aux130 with domain: bool (representing constraint (((field_00005_00001=7) + (field_00005_00002=7) + (field_00005_00003=7) + (field_00005_00004=7) + (field_00005_00005=7) + (field_00005_00006=7) + (field_00005_00007=7) + (field_00005_00008=7) + (field_00005_00009=7))=tv=1))
c Var 'aux130' direct represents '0' with '-2814'
c Var 'aux130' direct represents '1' with '2814'
c Var 'aux130' order represents '1' with '1'
c Var 'aux130' order represents '0' with '-2814'
c Encoding variable: aux131 with domain: bool (representing constraint (((field_00005_00001=8) + (field_00005_00002=8) + (field_00005_00003=8) + (field_00005_00004=8) + (field_00005_00005=8) + (field_00005_00006=8))=tv=1))
c Var 'aux131' direct represents '0' with '-2815'
c Var 'aux131' direct represents '1' with '2815'
c Var 'aux131' order represents '1' with '1'
c Var 'aux131' order represents '0' with '-2815'
c Encoding variable: aux132 with domain: bool (representing constraint (((field_00005_00001=9) + (field_00005_00002=9) + (field_00005_00003=9) + (field_00005_00007=9) + (field_00005_00008=9) + (field_00005_00009=9))=tv=1))
c Var 'aux132' direct represents '0' with '-2816'
c Var 'aux132' direct represents '1' with '2816'
c Var 'aux132' order represents '1' with '1'
c Var 'aux132' order represents '0' with '-2816'
c Encoding variable: aux133 with domain: bool (representing constraint (((field_00006_00005=1) + (field_00006_00006=1) + (field_00006_00007=1) + (field_00006_00008=1))=tv=1))
c Var 'aux133' direct represents '0' with '-2817'
c Var 'aux133' direct represents '1' with '2817'
c Var 'aux133' order represents '1' with '1'
c Var 'aux133' order represents '0' with '-2817'
c Encoding variable: aux134 with domain: bool (representing constraint (((field_00006_00002=2) + (field_00006_00003=2) + (field_00006_00005=2) + (field_00006_00006=2) + (field_00006_00007=2) + (field_00006_00008=2))=tv=1))
c Var 'aux134' direct represents '0' with '-2818'
c Var 'aux134' direct represents '1' with '2818'
c Var 'aux134' order represents '1' with '1'
c Var 'aux134' order represents '0' with '-2818'
c Encoding variable: aux135 with domain: bool (representing constraint (((field_00006_00002=3) + (field_00006_00003=3) + (field_00006_00005=3) + (field_00006_00006=3))=tv=1))
c Var 'aux135' direct represents '0' with '-2819'
c Var 'aux135' direct represents '1' with '2819'
c Var 'aux135' order represents '1' with '1'
c Var 'aux135' order represents '0' with '-2819'
c Encoding variable: aux136 with domain: bool (representing constraint (((field_00006_00004=4) + (field_00006_00005=4) + (field_00006_00006=4) + (field_00006_00008=4))=tv=1))
c Var 'aux136' direct represents '0' with '-2820'
c Var 'aux136' direct represents '1' with '2820'
c Var 'aux136' order represents '1' with '1'
c Var 'aux136' order represents '0' with '-2820'
c Encoding variable: aux137 with domain: bool (representing constraint (((field_00006_00001=5) + (field_00006_00002=5) + (field_00006_00003=5) + (field_00006_00007=5) + (field_00006_00008=5) + (field_00006_00009=5))=tv=1))
c Var 'aux137' direct represents '0' with '-2821'
c Var 'aux137' direct represents '1' with '2821'
c Var 'aux137' order represents '1' with '1'
c Var 'aux137' order represents '0' with '-2821'
c Encoding variable: aux138 with domain: bool (representing constraint (((field_00006_00001=6) + (field_00006_00002=6) + (field_00006_00003=6) + (field_00006_00004=6) + (field_00006_00005=6) + (field_00006_00006=6))=tv=1))
c Var 'aux138' direct represents '0' with '-2822'
c Var 'aux138' direct represents '1' with '2822'
c Var 'aux138' order represents '1' with '1'
c Var 'aux138' order represents '0' with '-2822'
c Encoding variable: aux139 with domain: bool (representing constraint (((field_00006_00001=7) + (field_00006_00002=7) + (field_00006_00003=7) + (field_00006_00004=7) + (field_00006_00005=7) + (field_00006_00006=7) + (field_00006_00007=7) + (field_00006_00008=7) + (field_00006_00009=7))=tv=1))
c Var 'aux139' direct represents '0' with '-2823'
c Var 'aux139' direct represents '1' with '2823'
c Var 'aux139' order represents '1' with '1'
c Var 'aux139' order represents '0' with '-2823'
c Encoding variable: aux140 with domain: bool (representing constraint (((field_00006_00001=8) + (field_00006_00002=8) + (field_00006_00003=8) + (field_00006_00004=8) + (field_00006_00005=8) + (field_00006_00006=8))=tv=1))
c Var 'aux140' direct represents '0' with '-2824'
c Var 'aux140' direct represents '1' with '2824'
c Var 'aux140' order represents '1' with '1'
c Var 'aux140' order represents '0' with '-2824'
c Encoding variable: aux141 with domain: bool (representing constraint (((field_00006_00002=9) + (field_00006_00003=9) + (field_00006_00007=9) + (field_00006_00008=9))=tv=1))
c Var 'aux141' direct represents '0' with '-2825'
c Var 'aux141' direct represents '1' with '2825'
c Var 'aux141' order represents '1' with '1'
c Var 'aux141' order represents '0' with '-2825'
c Encoding variable: aux142 with domain: bool (representing constraint (((field_00007_00001=1) + (field_00007_00004=1) + (field_00007_00007=1) + (field_00007_00008=1) + (field_00007_00009=1))=tv=1))
c Var 'aux142' direct represents '0' with '-2826'
c Var 'aux142' direct represents '1' with '2826'
c Var 'aux142' order represents '1' with '1'
c Var 'aux142' order represents '0' with '-2826'
c Encoding variable: aux143 with domain: bool (representing constraint (((field_00007_00001=2) + (field_00007_00002=2) + (field_00007_00003=2) + (field_00007_00005=2) + (field_00007_00006=2) + (field_00007_00007=2) + (field_00007_00008=2))=tv=1))
c Var 'aux143' direct represents '0' with '-2827'
c Var 'aux143' direct represents '1' with '2827'
c Var 'aux143' order represents '1' with '1'
c Var 'aux143' order represents '0' with '-2827'
c Encoding variable: aux144 with domain: bool (representing constraint (((field_00007_00002=3) + (field_00007_00003=3) + (field_00007_00008=3))=tv=1))
c Var 'aux144' direct represents '0' with '-2828'
c Var 'aux144' direct represents '1' with '2828'
c Var 'aux144' order represents '1' with '1'
c Var 'aux144' order represents '0' with '-2828'
c Encoding variable: aux145 with domain: bool (representing constraint (((field_00007_00002=4) + (field_00007_00003=4) + (field_00007_00004=4) + (field_00007_00005=4) + (field_00007_00006=4))=tv=1))
c Var 'aux145' direct represents '0' with '-2829'
c Var 'aux145' direct represents '1' with '2829'
c Var 'aux145' order represents '1' with '1'
c Var 'aux145' order represents '0' with '-2829'
c Encoding variable: aux146 with domain: bool (representing constraint (((field_00007_00001=5) + (field_00007_00002=5) + (field_00007_00003=5) + (field_00007_00005=5) + (field_00007_00006=5) + (field_00007_00007=5) + (field_00007_00008=5) + (field_00007_00009=5))=tv=1))
c Var 'aux146' direct represents '0' with '-2830'
c Var 'aux146' direct represents '1' with '2830'
c Var 'aux146' order represents '1' with '1'
c Var 'aux146' order represents '0' with '-2830'
c Encoding variable: aux147 with domain: bool (representing constraint (((field_00007_00001=6) + (field_00007_00002=6) + (field_00007_00003=6) + (field_00007_00004=6) + (field_00007_00005=6) + (field_00007_00006=6) + (field_00007_00009=6))=tv=1))
c Var 'aux147' direct represents '0' with '-2831'
c Var 'aux147' direct represents '1' with '2831'
c Var 'aux147' order represents '1' with '1'
c Var 'aux147' order represents '0' with '-2831'
c Encoding variable: aux148 with domain: bool (representing constraint (((field_00007_00001=7) + (field_00007_00002=7) + (field_00007_00003=7) + (field_00007_00004=7) + (field_00007_00005=7) + (field_00007_00006=7) + (field_00007_00007=7) + (field_00007_00008=7) + (field_00007_00009=7))=tv=1))
c Var 'aux148' direct represents '0' with '-2832'
c Var 'aux148' direct represents '1' with '2832'
c Var 'aux148' order represents '1' with '1'
c Var 'aux148' order represents '0' with '-2832'
c Encoding variable: aux149 with domain: bool (representing constraint (((field_00007_00001=8) + (field_00007_00002=8) + (field_00007_00003=8) + (field_00007_00005=8) + (field_00007_00006=8) + (field_00007_00007=8) + (field_00007_00009=8))=tv=1))
c Var 'aux149' direct represents '0' with '-2833'
c Var 'aux149' direct represents '1' with '2833'
c Var 'aux149' order represents '1' with '1'
c Var 'aux149' order represents '0' with '-2833'
c Encoding variable: aux150 with domain: bool (representing constraint (((field_00007_00001=9) + (field_00007_00002=9) + (field_00007_00003=9) + (field_00007_00005=9) + (field_00007_00006=9) + (field_00007_00007=9) + (field_00007_00008=9) + (field_00007_00009=9))=tv=1))
c Var 'aux150' direct represents '0' with '-2834'
c Var 'aux150' direct represents '1' with '2834'
c Var 'aux150' order represents '1' with '1'
c Var 'aux150' order represents '0' with '-2834'
c Encoding variable: aux151 with domain: bool (representing constraint (((field_00008_00004=1) + (field_00008_00007=1) + (field_00008_00008=1))=tv=1))
c Var 'aux151' direct represents '0' with '-2835'
c Var 'aux151' direct represents '1' with '2835'
c Var 'aux151' order represents '1' with '1'
c Var 'aux151' order represents '0' with '-2835'
c Encoding variable: aux152 with domain: bool (representing constraint (((field_00008_00002=2) + (field_00008_00003=2) + (field_00008_00005=2) + (field_00008_00006=2) + (field_00008_00007=2) + (field_00008_00008=2))=tv=1))
c Var 'aux152' direct represents '0' with '-2836'
c Var 'aux152' direct represents '1' with '2836'
c Var 'aux152' order represents '1' with '1'
c Var 'aux152' order represents '0' with '-2836'
c Encoding variable: aux153 with domain: bool (representing constraint (((field_00008_00002=3) + (field_00008_00003=3) + (field_00008_00008=3))=tv=1))
c Var 'aux153' direct represents '0' with '-2837'
c Var 'aux153' direct represents '1' with '2837'
c Var 'aux153' order represents '1' with '1'
c Var 'aux153' order represents '0' with '-2837'
c Encoding variable: aux154 with domain: bool (representing constraint (((field_00008_00002=4) + (field_00008_00003=4) + (field_00008_00004=4) + (field_00008_00005=4) + (field_00008_00006=4))=tv=1))
c Var 'aux154' direct represents '0' with '-2838'
c Var 'aux154' direct represents '1' with '2838'
c Var 'aux154' order represents '1' with '1'
c Var 'aux154' order represents '0' with '-2838'
c Encoding variable: aux155 with domain: bool (representing constraint (((field_00008_00001=5) + (field_00008_00002=5) + (field_00008_00003=5) + (field_00008_00005=5) + (field_00008_00006=5) + (field_00008_00007=5) + (field_00008_00008=5) + (field_00008_00009=5))=tv=1))
c Var 'aux155' direct represents '0' with '-2839'
c Var 'aux155' direct represents '1' with '2839'
c Var 'aux155' order represents '1' with '1'
c Var 'aux155' order represents '0' with '-2839'
c Encoding variable: aux156 with domain: bool (representing constraint (((field_00008_00001=6) + (field_00008_00002=6) + (field_00008_00003=6) + (field_00008_00004=6) + (field_00008_00005=6) + (field_00008_00006=6) + (field_00008_00009=6))=tv=1))
c Var 'aux156' direct represents '0' with '-2840'
c Var 'aux156' direct represents '1' with '2840'
c Var 'aux156' order represents '1' with '1'
c Var 'aux156' order represents '0' with '-2840'
c Encoding variable: aux157 with domain: bool (representing constraint (((field_00008_00001=7) + (field_00008_00002=7) + (field_00008_00003=7) + (field_00008_00004=7) + (field_00008_00005=7) + (field_00008_00006=7) + (field_00008_00007=7) + (field_00008_00008=7) + (field_00008_00009=7))=tv=1))
c Var 'aux157' direct represents '0' with '-2841'
c Var 'aux157' direct represents '1' with '2841'
c Var 'aux157' order represents '1' with '1'
c Var 'aux157' order represents '0' with '-2841'
c Encoding variable: aux158 with domain: bool (representing constraint (((field_00008_00001=8) + (field_00008_00002=8) + (field_00008_00003=8) + (field_00008_00005=8) + (field_00008_00006=8) + (field_00008_00007=8) + (field_00008_00009=8))=tv=1))
c Var 'aux158' direct represents '0' with '-2842'
c Var 'aux158' direct represents '1' with '2842'
c Var 'aux158' order represents '1' with '1'
c Var 'aux158' order represents '0' with '-2842'
c Encoding variable: aux159 with domain: bool (representing constraint (((field_00008_00002=9) + (field_00008_00003=9) + (field_00008_00005=9) + (field_00008_00006=9) + (field_00008_00007=9) + (field_00008_00008=9))=tv=1))
c Var 'aux159' direct represents '0' with '-2843'
c Var 'aux159' direct represents '1' with '2843'
c Var 'aux159' order represents '1' with '1'
c Var 'aux159' order represents '0' with '-2843'
c Encoding variable: aux160 with domain: bool (representing constraint (((field_00009_00001=1) + (field_00009_00008=1) + (field_00009_00009=1))=tv=1))
c Var 'aux160' direct represents '0' with '-2844'
c Var 'aux160' direct represents '1' with '2844'
c Var 'aux160' order represents '1' with '1'
c Var 'aux160' order represents '0' with '-2844'
c Encoding variable: aux161 with domain: bool (representing constraint (((field_00009_00001=2) + (field_00009_00003=2) + (field_00009_00005=2) + (field_00009_00006=2) + (field_00009_00008=2))=tv=1))
c Var 'aux161' direct represents '0' with '-2845'
c Var 'aux161' direct represents '1' with '2845'
c Var 'aux161' order represents '1' with '1'
c Var 'aux161' order represents '0' with '-2845'
c Encoding variable: aux162 with domain: bool (representing constraint (((field_00009_00001=5) + (field_00009_00002=5) + (field_00009_00003=5) + (field_00009_00005=5) + (field_00009_00006=5) + (field_00009_00008=5) + (field_00009_00009=5))=tv=1))
c Var 'aux162' direct represents '0' with '-2846'
c Var 'aux162' direct represents '1' with '2846'
c Var 'aux162' order represents '1' with '1'
c Var 'aux162' order represents '0' with '-2846'
c Encoding variable: aux163 with domain: bool (representing constraint (((field_00009_00001=6) + (field_00009_00002=6) + (field_00009_00003=6) + (field_00009_00005=6) + (field_00009_00006=6) + (field_00009_00009=6))=tv=1))
c Var 'aux163' direct represents '0' with '-2847'
c Var 'aux163' direct represents '1' with '2847'
c Var 'aux163' order represents '1' with '1'
c Var 'aux163' order represents '0' with '-2847'
c Encoding variable: aux164 with domain: bool (representing constraint (((field_00009_00001=7) + (field_00009_00003=7) + (field_00009_00005=7) + (field_00009_00006=7) + (field_00009_00008=7) + (field_00009_00009=7))=tv=1))
c Var 'aux164' direct represents '0' with '-2848'
c Var 'aux164' direct represents '1' with '2848'
c Var 'aux164' order represents '1' with '1'
c Var 'aux164' order represents '0' with '-2848'
c Encoding variable: aux165 with domain: bool (representing constraint (((field_00009_00001=8) + (field_00009_00003=8) + (field_00009_00005=8) + (field_00009_00006=8) + (field_00009_00009=8))=tv=1))
c Var 'aux165' direct represents '0' with '-2849'
c Var 'aux165' direct represents '1' with '2849'
c Var 'aux165' order represents '1' with '1'
c Var 'aux165' order represents '0' with '-2849'
c Encoding variable: aux166 with domain: bool (representing constraint (((field_00009_00001=9) + (field_00009_00003=9) + (field_00009_00005=9) + (field_00009_00006=9) + (field_00009_00008=9) + (field_00009_00009=9))=tv=1))
c Var 'aux166' direct represents '0' with '-2850'
c Var 'aux166' direct represents '1' with '2850'
c Var 'aux166' order represents '1' with '1'
c Var 'aux166' order represents '0' with '-2850'
c Encoding variable: aux167 with domain: bool (representing constraint (((field_00002_00002=1) + (field_00002_00003=1))=tv=1))
c Var 'aux167' direct represents '0' with '-2851'
c Var 'aux167' direct represents '1' with '2851'
c Var 'aux167' order represents '1' with '1'
c Var 'aux167' order represents '0' with '-2851'
c Encoding variable: aux168 with domain: bool (representing constraint (((field_00003_00001=2) + (field_00003_00002=2) + (field_00003_00003=2))=tv=1))
c Var 'aux168' direct represents '0' with '-2852'
c Var 'aux168' direct represents '1' with '2852'
c Var 'aux168' order represents '1' with '1'
c Var 'aux168' order represents '0' with '-2852'
c Encoding variable: aux169 with domain: bool (representing constraint (((field_00002_00002=4) + (field_00002_00003=4))=tv=1))
c Var 'aux169' direct represents '0' with '-2853'
c Var 'aux169' direct represents '1' with '2853'
c Var 'aux169' order represents '1' with '1'
c Var 'aux169' order represents '0' with '-2853'
c Encoding variable: aux170 with domain: bool (representing constraint (((field_00003_00001=5) + (field_00003_00002=5) + (field_00003_00003=5) + (field_00001_00001=5) + (field_00001_00002=5) + (field_00001_00003=5))=tv=1))
c Var 'aux170' direct represents '0' with '-2854'
c Var 'aux170' direct represents '1' with '2854'
c Var 'aux170' order represents '1' with '1'
c Var 'aux170' order represents '0' with '-2854'
c Encoding variable: aux171 with domain: bool (representing constraint (((field_00003_00001=6) + (field_00003_00002=6) + (field_00003_00003=6) + (field_00001_00001=6) + (field_00001_00002=6) + (field_00001_00003=6))=tv=1))
c Var 'aux171' direct represents '0' with '-2855'
c Var 'aux171' direct represents '1' with '2855'
c Var 'aux171' order represents '1' with '1'
c Var 'aux171' order represents '0' with '-2855'
c Encoding variable: aux172 with domain: bool (representing constraint (((field_00003_00001=7) + (field_00003_00002=7) + (field_00003_00003=7) + (field_00001_00001=7) + (field_00001_00002=7) + (field_00001_00003=7))=tv=1))
c Var 'aux172' direct represents '0' with '-2856'
c Var 'aux172' direct represents '1' with '2856'
c Var 'aux172' order represents '1' with '1'
c Var 'aux172' order represents '0' with '-2856'
c Encoding variable: aux173 with domain: bool (representing constraint (((field_00003_00001=8) + (field_00003_00002=8) + (field_00003_00003=8) + (field_00001_00001=8) + (field_00001_00003=8))=tv=1))
c Var 'aux173' direct represents '0' with '-2857'
c Var 'aux173' direct represents '1' with '2857'
c Var 'aux173' order represents '1' with '1'
c Var 'aux173' order represents '0' with '-2857'
c Encoding variable: aux174 with domain: bool (representing constraint (((field_00003_00001=9) + (field_00003_00002=9) + (field_00003_00003=9) + (field_00001_00001=9) + (field_00001_00003=9))=tv=1))
c Var 'aux174' direct represents '0' with '-2858'
c Var 'aux174' direct represents '1' with '2858'
c Var 'aux174' order represents '1' with '1'
c Var 'aux174' order represents '0' with '-2858'
c Encoding variable: aux175 with domain: bool (representing constraint (((field_00003_00005=1) + (field_00003_00006=1) + (field_00001_00005=1))=tv=1))
c Var 'aux175' direct represents '0' with '-2859'
c Var 'aux175' direct represents '1' with '2859'
c Var 'aux175' order represents '1' with '1'
c Var 'aux175' order represents '0' with '-2859'
c Encoding variable: aux176 with domain: bool (representing constraint (((field_00003_00005=3) + (field_00003_00006=3))=tv=1))
c Var 'aux176' direct represents '0' with '-2860'
c Var 'aux176' direct represents '1' with '2860'
c Var 'aux176' order represents '1' with '1'
c Var 'aux176' order represents '0' with '-2860'
c Encoding variable: aux177 with domain: bool (representing constraint (((field_00003_00004=4) + (field_00003_00005=4) + (field_00003_00006=4) + (field_00001_00005=4) + (field_00001_00006=4))=tv=1))
c Var 'aux177' direct represents '0' with '-2861'
c Var 'aux177' direct represents '1' with '2861'
c Var 'aux177' order represents '1' with '1'
c Var 'aux177' order represents '0' with '-2861'
c Encoding variable: aux178 with domain: bool (representing constraint (((field_00002_00005=5) + (field_00002_00006=5) + (field_00003_00005=5) + (field_00003_00006=5) + (field_00001_00005=5) + (field_00001_00006=5))=tv=1))
c Var 'aux178' direct represents '0' with '-2862'
c Var 'aux178' direct represents '1' with '2862'
c Var 'aux178' order represents '1' with '1'
c Var 'aux178' order represents '0' with '-2862'
c Encoding variable: aux179 with domain: bool (representing constraint (((field_00003_00004=6) + (field_00003_00005=6) + (field_00003_00006=6) + (field_00001_00005=6) + (field_00001_00006=6))=tv=1))
c Var 'aux179' direct represents '0' with '-2863'
c Var 'aux179' direct represents '1' with '2863'
c Var 'aux179' order represents '1' with '1'
c Var 'aux179' order represents '0' with '-2863'
c Encoding variable: aux180 with domain: bool (representing constraint (((field_00002_00005=7) + (field_00002_00006=7) + (field_00003_00004=7) + (field_00003_00005=7) + (field_00003_00006=7) + (field_00001_00005=7))=tv=1))
c Var 'aux180' direct represents '0' with '-2864'
c Var 'aux180' direct represents '1' with '2864'
c Var 'aux180' order represents '1' with '1'
c Var 'aux180' order represents '0' with '-2864'
c Encoding variable: aux181 with domain: bool (representing constraint (((field_00002_00005=8) + (field_00002_00006=8) + (field_00003_00004=8) + (field_00003_00005=8) + (field_00003_00006=8) + (field_00001_00005=8))=tv=1))
c Var 'aux181' direct represents '0' with '-2865'
c Var 'aux181' direct represents '1' with '2865'
c Var 'aux181' order represents '1' with '1'
c Var 'aux181' order represents '0' with '-2865'
c Encoding variable: aux182 with domain: bool (representing constraint (((field_00003_00008=1) + (field_00003_00009=1) + (field_00001_00008=1) + (field_00001_00009=1))=tv=1))
c Var 'aux182' direct represents '0' with '-2866'
c Var 'aux182' direct represents '1' with '2866'
c Var 'aux182' order represents '1' with '1'
c Var 'aux182' order represents '0' with '-2866'
c Encoding variable: aux183 with domain: bool (representing constraint (((field_00003_00008=4) + (field_00003_00009=4) + (field_00001_00008=4) + (field_00001_00009=4))=tv=1))
c Var 'aux183' direct represents '0' with '-2867'
c Var 'aux183' direct represents '1' with '2867'
c Var 'aux183' order represents '1' with '1'
c Var 'aux183' order represents '0' with '-2867'
c Encoding variable: aux184 with domain: bool (representing constraint (((field_00002_00007=5) + (field_00003_00007=5) + (field_00003_00008=5) + (field_00003_00009=5) + (field_00001_00008=5) + (field_00001_00009=5))=tv=1))
c Var 'aux184' direct represents '0' with '-2868'
c Var 'aux184' direct represents '1' with '2868'
c Var 'aux184' order represents '1' with '1'
c Var 'aux184' order represents '0' with '-2868'
c Encoding variable: aux185 with domain: bool (representing constraint (((field_00002_00007=7) + (field_00003_00007=7) + (field_00003_00008=7) + (field_00003_00009=7) + (field_00001_00008=7) + (field_00001_00009=7))=tv=1))
c Var 'aux185' direct represents '0' with '-2869'
c Var 'aux185' direct represents '1' with '2869'
c Var 'aux185' order represents '1' with '1'
c Var 'aux185' order represents '0' with '-2869'
c Encoding variable: aux186 with domain: bool (representing constraint (((field_00002_00007=8) + (field_00003_00007=8) + (field_00003_00009=8) + (field_00001_00009=8))=tv=1))
c Var 'aux186' direct represents '0' with '-2870'
c Var 'aux186' direct represents '1' with '2870'
c Var 'aux186' order represents '1' with '1'
c Var 'aux186' order represents '0' with '-2870'
c Encoding variable: aux187 with domain: bool (representing constraint (((field_00003_00008=9) + (field_00003_00009=9) + (field_00001_00008=9) + (field_00001_00009=9))=tv=1))
c Var 'aux187' direct represents '0' with '-2871'
c Var 'aux187' direct represents '1' with '2871'
c Var 'aux187' order represents '1' with '1'
c Var 'aux187' order represents '0' with '-2871'
c Encoding variable: aux188 with domain: bool (representing constraint (((field_00004_00002=1) + (field_00004_00003=1))=tv=1))
c Var 'aux188' direct represents '0' with '-2872'
c Var 'aux188' direct represents '1' with '2872'
c Var 'aux188' order represents '1' with '1'
c Var 'aux188' order represents '0' with '-2872'
c Encoding variable: aux189 with domain: bool (representing constraint (((field_00004_00002=2) + (field_00004_00003=2) + (field_00005_00001=2) + (field_00005_00002=2) + (field_00005_00003=2) + (field_00006_00002=2) + (field_00006_00003=2))=tv=1))
c Var 'aux189' direct represents '0' with '-2873'
c Var 'aux189' direct represents '1' with '2873'
c Var 'aux189' order represents '1' with '1'
c Var 'aux189' order represents '0' with '-2873'
c Encoding variable: aux190 with domain: bool (representing constraint (((field_00005_00002=3) + (field_00005_00003=3) + (field_00006_00002=3) + (field_00006_00003=3))=tv=1))
c Var 'aux190' direct represents '0' with '-2874'
c Var 'aux190' direct represents '1' with '2874'
c Var 'aux190' order represents '1' with '1'
c Var 'aux190' order represents '0' with '-2874'
c Encoding variable: aux191 with domain: bool (representing constraint (((field_00005_00001=5) + (field_00005_00002=5) + (field_00005_00003=5) + (field_00006_00001=5) + (field_00006_00002=5) + (field_00006_00003=5))=tv=1))
c Var 'aux191' direct represents '0' with '-2875'
c Var 'aux191' direct represents '1' with '2875'
c Var 'aux191' order represents '1' with '1'
c Var 'aux191' order represents '0' with '-2875'
c Encoding variable: aux192 with domain: bool (representing constraint (((field_00005_00001=6) + (field_00005_00002=6) + (field_00005_00003=6) + (field_00006_00001=6) + (field_00006_00002=6) + (field_00006_00003=6))=tv=1))
c Var 'aux192' direct represents '0' with '-2876'
c Var 'aux192' direct represents '1' with '2876'
c Var 'aux192' order represents '1' with '1'
c Var 'aux192' order represents '0' with '-2876'
c Encoding variable: aux193 with domain: bool (representing constraint (((field_00004_00002=7) + (field_00004_00003=7) + (field_00005_00001=7) + (field_00005_00002=7) + (field_00005_00003=7) + (field_00006_00001=7) + (field_00006_00002=7) + (field_00006_00003=7))=tv=1))
c Var 'aux193' direct represents '0' with '-2877'
c Var 'aux193' direct represents '1' with '2877'
c Var 'aux193' order represents '1' with '1'
c Var 'aux193' order represents '0' with '-2877'
c Encoding variable: aux194 with domain: bool (representing constraint (((field_00005_00001=8) + (field_00005_00002=8) + (field_00005_00003=8) + (field_00006_00001=8) + (field_00006_00002=8) + (field_00006_00003=8))=tv=1))
c Var 'aux194' direct represents '0' with '-2878'
c Var 'aux194' direct represents '1' with '2878'
c Var 'aux194' order represents '1' with '1'
c Var 'aux194' order represents '0' with '-2878'
c Encoding variable: aux195 with domain: bool (representing constraint (((field_00005_00001=9) + (field_00005_00002=9) + (field_00005_00003=9) + (field_00006_00002=9) + (field_00006_00003=9))=tv=1))
c Var 'aux195' direct represents '0' with '-2879'
c Var 'aux195' direct represents '1' with '2879'
c Var 'aux195' order represents '1' with '1'
c Var 'aux195' order represents '0' with '-2879'
c Encoding variable: aux196 with domain: bool (representing constraint (((field_00005_00005=1) + (field_00005_00006=1) + (field_00006_00005=1) + (field_00006_00006=1))=tv=1))
c Var 'aux196' direct represents '0' with '-2880'
c Var 'aux196' direct represents '1' with '2880'
c Var 'aux196' order represents '1' with '1'
c Var 'aux196' order represents '0' with '-2880'
c Encoding variable: aux197 with domain: bool (representing constraint (((field_00004_00005=2) + (field_00004_00006=2) + (field_00005_00005=2) + (field_00005_00006=2) + (field_00006_00005=2) + (field_00006_00006=2))=tv=1))
c Var 'aux197' direct represents '0' with '-2881'
c Var 'aux197' direct represents '1' with '2881'
c Var 'aux197' order represents '1' with '1'
c Var 'aux197' order represents '0' with '-2881'
c Encoding variable: aux198 with domain: bool (representing constraint (((field_00005_00005=3) + (field_00005_00006=3) + (field_00006_00005=3) + (field_00006_00006=3))=tv=1))
c Var 'aux198' direct represents '0' with '-2882'
c Var 'aux198' direct represents '1' with '2882'
c Var 'aux198' order represents '1' with '1'
c Var 'aux198' order represents '0' with '-2882'
c Encoding variable: aux199 with domain: bool (representing constraint (((field_00005_00004=4) + (field_00005_00005=4) + (field_00005_00006=4) + (field_00006_00004=4) + (field_00006_00005=4) + (field_00006_00006=4))=tv=1))
c Var 'aux199' direct represents '0' with '-2883'
c Var 'aux199' direct represents '1' with '2883'
c Var 'aux199' order represents '1' with '1'
c Var 'aux199' order represents '0' with '-2883'
c Encoding variable: aux200 with domain: bool (representing constraint (((field_00005_00004=6) + (field_00005_00005=6) + (field_00005_00006=6) + (field_00006_00004=6) + (field_00006_00005=6) + (field_00006_00006=6))=tv=1))
c Var 'aux200' direct represents '0' with '-2884'
c Var 'aux200' direct represents '1' with '2884'
c Var 'aux200' order represents '1' with '1'
c Var 'aux200' order represents '0' with '-2884'
c Encoding variable: aux201 with domain: bool (representing constraint (((field_00004_00005=7) + (field_00004_00006=7) + (field_00005_00004=7) + (field_00005_00005=7) + (field_00005_00006=7) + (field_00006_00004=7) + (field_00006_00005=7) + (field_00006_00006=7))=tv=1))
c Var 'aux201' direct represents '0' with '-2885'
c Var 'aux201' direct represents '1' with '2885'
c Var 'aux201' order represents '1' with '1'
c Var 'aux201' order represents '0' with '-2885'
c Encoding variable: aux202 with domain: bool (representing constraint (((field_00005_00004=8) + (field_00005_00005=8) + (field_00005_00006=8) + (field_00006_00004=8) + (field_00006_00005=8) + (field_00006_00006=8))=tv=1))
c Var 'aux202' direct represents '0' with '-2886'
c Var 'aux202' direct represents '1' with '2886'
c Var 'aux202' order represents '1' with '1'
c Var 'aux202' order represents '0' with '-2886'
c Encoding variable: aux203 with domain: bool (representing constraint (((field_00004_00005=9) + (field_00004_00006=9))=tv=1))
c Var 'aux203' direct represents '0' with '-2887'
c Var 'aux203' direct represents '1' with '2887'
c Var 'aux203' order represents '1' with '1'
c Var 'aux203' order represents '0' with '-2887'
c Encoding variable: aux204 with domain: bool (representing constraint (((field_00005_00008=1) + (field_00005_00009=1) + (field_00006_00007=1) + (field_00006_00008=1))=tv=1))
c Var 'aux204' direct represents '0' with '-2888'
c Var 'aux204' direct represents '1' with '2888'
c Var 'aux204' order represents '1' with '1'
c Var 'aux204' order represents '0' with '-2888'
c Encoding variable: aux205 with domain: bool (representing constraint (((field_00005_00007=2) + (field_00005_00008=2) + (field_00006_00007=2) + (field_00006_00008=2))=tv=1))
c Var 'aux205' direct represents '0' with '-2889'
c Var 'aux205' direct represents '1' with '2889'
c Var 'aux205' order represents '1' with '1'
c Var 'aux205' order represents '0' with '-2889'
c Encoding variable: aux206 with domain: bool (representing constraint (((field_00005_00008=4) + (field_00005_00009=4) + (field_00006_00008=4))=tv=1))
c Var 'aux206' direct represents '0' with '-2890'
c Var 'aux206' direct represents '1' with '2890'
c Var 'aux206' order represents '1' with '1'
c Var 'aux206' order represents '0' with '-2890'
c Encoding variable: aux207 with domain: bool (representing constraint (((field_00005_00007=5) + (field_00005_00008=5) + (field_00005_00009=5) + (field_00006_00007=5) + (field_00006_00008=5) + (field_00006_00009=5))=tv=1))
c Var 'aux207' direct represents '0' with '-2891'
c Var 'aux207' direct represents '1' with '2891'
c Var 'aux207' order represents '1' with '1'
c Var 'aux207' order represents '0' with '-2891'
c Encoding variable: aux208 with domain: bool (representing constraint (((field_00005_00007=7) + (field_00005_00008=7) + (field_00005_00009=7) + (field_00006_00007=7) + (field_00006_00008=7) + (field_00006_00009=7))=tv=1))
c Var 'aux208' direct represents '0' with '-2892'
c Var 'aux208' direct represents '1' with '2892'
c Var 'aux208' order represents '1' with '1'
c Var 'aux208' order represents '0' with '-2892'
c Encoding variable: aux209 with domain: bool (representing constraint (((field_00005_00007=9) + (field_00005_00008=9) + (field_00005_00009=9) + (field_00006_00007=9) + (field_00006_00008=9))=tv=1))
c Var 'aux209' direct represents '0' with '-2893'
c Var 'aux209' direct represents '1' with '2893'
c Var 'aux209' order represents '1' with '1'
c Var 'aux209' order represents '0' with '-2893'
c Encoding variable: aux210 with domain: bool (representing constraint (((field_00009_00001=1) + (field_00007_00001=1))=tv=1))
c Var 'aux210' direct represents '0' with '-2894'
c Var 'aux210' direct represents '1' with '2894'
c Var 'aux210' order represents '1' with '1'
c Var 'aux210' order represents '0' with '-2894'
c Encoding variable: aux211 with domain: bool (representing constraint (((field_00009_00001=2) + (field_00009_00003=2) + (field_00007_00001=2) + (field_00007_00002=2) + (field_00007_00003=2) + (field_00008_00002=2) + (field_00008_00003=2))=tv=1))
c Var 'aux211' direct represents '0' with '-2895'
c Var 'aux211' direct represents '1' with '2895'
c Var 'aux211' order represents '1' with '1'
c Var 'aux211' order represents '0' with '-2895'
c Encoding variable: aux212 with domain: bool (representing constraint (((field_00007_00002=3) + (field_00007_00003=3) + (field_00008_00002=3) + (field_00008_00003=3))=tv=1))
c Var 'aux212' direct represents '0' with '-2896'
c Var 'aux212' direct represents '1' with '2896'
c Var 'aux212' order represents '1' with '1'
c Var 'aux212' order represents '0' with '-2896'
c Encoding variable: aux213 with domain: bool (representing constraint (((field_00007_00002=4) + (field_00007_00003=4) + (field_00008_00002=4) + (field_00008_00003=4))=tv=1))
c Var 'aux213' direct represents '0' with '-2897'
c Var 'aux213' direct represents '1' with '2897'
c Var 'aux213' order represents '1' with '1'
c Var 'aux213' order represents '0' with '-2897'
c Encoding variable: aux214 with domain: bool (representing constraint (((field_00009_00001=5) + (field_00009_00002=5) + (field_00009_00003=5) + (field_00007_00001=5) + (field_00007_00002=5) + (field_00007_00003=5) + (field_00008_00001=5) + (field_00008_00002=5) + (field_00008_00003=5))=tv=1))
c Var 'aux214' direct represents '0' with '-2898'
c Var 'aux214' direct represents '1' with '2898'
c Var 'aux214' order represents '1' with '1'
c Var 'aux214' order represents '0' with '-2898'
c Encoding variable: aux215 with domain: bool (representing constraint (((field_00009_00001=6) + (field_00009_00002=6) + (field_00009_00003=6) + (field_00007_00001=6) + (field_00007_00002=6) + (field_00007_00003=6) + (field_00008_00001=6) + (field_00008_00002=6) + (field_00008_00003=6))=tv=1))
c Var 'aux215' direct represents '0' with '-2899'
c Var 'aux215' direct represents '1' with '2899'
c Var 'aux215' order represents '1' with '1'
c Var 'aux215' order represents '0' with '-2899'
c Encoding variable: aux216 with domain: bool (representing constraint (((field_00009_00001=7) + (field_00009_00003=7) + (field_00007_00001=7) + (field_00007_00002=7) + (field_00007_00003=7) + (field_00008_00001=7) + (field_00008_00002=7) + (field_00008_00003=7))=tv=1))
c Var 'aux216' direct represents '0' with '-2900'
c Var 'aux216' direct represents '1' with '2900'
c Var 'aux216' order represents '1' with '1'
c Var 'aux216' order represents '0' with '-2900'
c Encoding variable: aux217 with domain: bool (representing constraint (((field_00009_00001=8) + (field_00009_00003=8) + (field_00007_00001=8) + (field_00007_00002=8) + (field_00007_00003=8) + (field_00008_00001=8) + (field_00008_00002=8) + (field_00008_00003=8))=tv=1))
c Var 'aux217' direct represents '0' with '-2901'
c Var 'aux217' direct represents '1' with '2901'
c Var 'aux217' order represents '1' with '1'
c Var 'aux217' order represents '0' with '-2901'
c Encoding variable: aux218 with domain: bool (representing constraint (((field_00009_00001=9) + (field_00009_00003=9) + (field_00007_00001=9) + (field_00007_00002=9) + (field_00007_00003=9) + (field_00008_00002=9) + (field_00008_00003=9))=tv=1))
c Var 'aux218' direct represents '0' with '-2902'
c Var 'aux218' direct represents '1' with '2902'
c Var 'aux218' order represents '1' with '1'
c Var 'aux218' order represents '0' with '-2902'
c Encoding variable: aux219 with domain: bool (representing constraint (((field_00007_00004=1) + (field_00008_00004=1))=tv=1))
c Var 'aux219' direct represents '0' with '-2903'
c Var 'aux219' direct represents '1' with '2903'
c Var 'aux219' order represents '1' with '1'
c Var 'aux219' order represents '0' with '-2903'
c Encoding variable: aux220 with domain: bool (representing constraint (((field_00009_00005=2) + (field_00009_00006=2) + (field_00007_00005=2) + (field_00007_00006=2) + (field_00008_00005=2) + (field_00008_00006=2))=tv=1))
c Var 'aux220' direct represents '0' with '-2904'
c Var 'aux220' direct represents '1' with '2904'
c Var 'aux220' order represents '1' with '1'
c Var 'aux220' order represents '0' with '-2904'
c Encoding variable: aux221 with domain: bool (representing constraint (((field_00007_00004=4) + (field_00007_00005=4) + (field_00007_00006=4) + (field_00008_00004=4) + (field_00008_00005=4) + (field_00008_00006=4))=tv=1))
c Var 'aux221' direct represents '0' with '-2905'
c Var 'aux221' direct represents '1' with '2905'
c Var 'aux221' order represents '1' with '1'
c Var 'aux221' order represents '0' with '-2905'
c Encoding variable: aux222 with domain: bool (representing constraint (((field_00009_00005=5) + (field_00009_00006=5) + (field_00007_00005=5) + (field_00007_00006=5) + (field_00008_00005=5) + (field_00008_00006=5))=tv=1))
c Var 'aux222' direct represents '0' with '-2906'
c Var 'aux222' direct represents '1' with '2906'
c Var 'aux222' order represents '1' with '1'
c Var 'aux222' order represents '0' with '-2906'
c Encoding variable: aux223 with domain: bool (representing constraint (((field_00009_00005=6) + (field_00009_00006=6) + (field_00007_00004=6) + (field_00007_00005=6) + (field_00007_00006=6) + (field_00008_00004=6) + (field_00008_00005=6) + (field_00008_00006=6))=tv=1))
c Var 'aux223' direct represents '0' with '-2907'
c Var 'aux223' direct represents '1' with '2907'
c Var 'aux223' order represents '1' with '1'
c Var 'aux223' order represents '0' with '-2907'
c Encoding variable: aux224 with domain: bool (representing constraint (((field_00009_00005=7) + (field_00009_00006=7) + (field_00007_00004=7) + (field_00007_00005=7) + (field_00007_00006=7) + (field_00008_00004=7) + (field_00008_00005=7) + (field_00008_00006=7))=tv=1))
c Var 'aux224' direct represents '0' with '-2908'
c Var 'aux224' direct represents '1' with '2908'
c Var 'aux224' order represents '1' with '1'
c Var 'aux224' order represents '0' with '-2908'
c Encoding variable: aux225 with domain: bool (representing constraint (((field_00009_00005=8) + (field_00009_00006=8) + (field_00007_00005=8) + (field_00007_00006=8) + (field_00008_00005=8) + (field_00008_00006=8))=tv=1))
c Var 'aux225' direct represents '0' with '-2909'
c Var 'aux225' direct represents '1' with '2909'
c Var 'aux225' order represents '1' with '1'
c Var 'aux225' order represents '0' with '-2909'
c Encoding variable: aux226 with domain: bool (representing constraint (((field_00009_00005=9) + (field_00009_00006=9) + (field_00007_00005=9) + (field_00007_00006=9) + (field_00008_00005=9) + (field_00008_00006=9))=tv=1))
c Var 'aux226' direct represents '0' with '-2910'
c Var 'aux226' direct represents '1' with '2910'
c Var 'aux226' order represents '1' with '1'
c Var 'aux226' order represents '0' with '-2910'
c Encoding variable: aux227 with domain: bool (representing constraint (((field_00009_00008=1) + (field_00009_00009=1) + (field_00007_00007=1) + (field_00007_00008=1) + (field_00007_00009=1) + (field_00008_00007=1) + (field_00008_00008=1))=tv=1))
c Var 'aux227' direct represents '0' with '-2911'
c Var 'aux227' direct represents '1' with '2911'
c Var 'aux227' order represents '1' with '1'
c Var 'aux227' order represents '0' with '-2911'
c Encoding variable: aux228 with domain: bool (representing constraint (((field_00009_00008=2) + (field_00007_00007=2) + (field_00007_00008=2) + (field_00008_00007=2) + (field_00008_00008=2))=tv=1))
c Var 'aux228' direct represents '0' with '-2912'
c Var 'aux228' direct represents '1' with '2912'
c Var 'aux228' order represents '1' with '1'
c Var 'aux228' order represents '0' with '-2912'
c Encoding variable: aux229 with domain: bool (representing constraint (((field_00007_00008=3) + (field_00008_00008=3))=tv=1))
c Var 'aux229' direct represents '0' with '-2913'
c Var 'aux229' direct represents '1' with '2913'
c Var 'aux229' order represents '1' with '1'
c Var 'aux229' order represents '0' with '-2913'
c Encoding variable: aux230 with domain: bool (representing constraint (((field_00009_00008=5) + (field_00009_00009=5) + (field_00007_00007=5) + (field_00007_00008=5) + (field_00007_00009=5) + (field_00008_00007=5) + (field_00008_00008=5) + (field_00008_00009=5))=tv=1))
c Var 'aux230' direct represents '0' with '-2914'
c Var 'aux230' direct represents '1' with '2914'
c Var 'aux230' order represents '1' with '1'
c Var 'aux230' order represents '0' with '-2914'
c Encoding variable: aux231 with domain: bool (representing constraint (((field_00009_00009=6) + (field_00007_00009=6) + (field_00008_00009=6))=tv=1))
c Var 'aux231' direct represents '0' with '-2915'
c Var 'aux231' direct represents '1' with '2915'
c Var 'aux231' order represents '1' with '1'
c Var 'aux231' order represents '0' with '-2915'
c Encoding variable: aux232 with domain: bool (representing constraint (((field_00009_00008=7) + (field_00009_00009=7) + (field_00007_00007=7) + (field_00007_00008=7) + (field_00007_00009=7) + (field_00008_00007=7) + (field_00008_00008=7) + (field_00008_00009=7))=tv=1))
c Var 'aux232' direct represents '0' with '-2916'
c Var 'aux232' direct represents '1' with '2916'
c Var 'aux232' order represents '1' with '1'
c Var 'aux232' order represents '0' with '-2916'
c Encoding variable: aux233 with domain: bool (representing constraint (((field_00009_00009=8) + (field_00007_00007=8) + (field_00007_00009=8) + (field_00008_00007=8) + (field_00008_00009=8))=tv=1))
c Var 'aux233' direct represents '0' with '-2917'
c Var 'aux233' direct represents '1' with '2917'
c Var 'aux233' order represents '1' with '1'
c Var 'aux233' order represents '0' with '-2917'
c Encoding variable: aux234 with domain: bool (representing constraint (((field_00009_00008=9) + (field_00009_00009=9) + (field_00007_00007=9) + (field_00007_00008=9) + (field_00007_00009=9) + (field_00008_00007=9) + (field_00008_00008=9))=tv=1))
c Var 'aux234' direct represents '0' with '-2918'
c Var 'aux234' direct represents '1' with '2918'
c Var 'aux234' order represents '1' with '1'
c Var 'aux234' order represents '0' with '-2918'
c Encoding variable: aux235 with domain: int(0) (representing constraint (shift(variant_fields_00001_00004_00001, -4) + shift(variant_fields_00001_00004_00004, -5)))
c Var 'aux235' direct represents '0' with '2919'
2919 0
c Encoding variable: aux236 with domain: int(0..7) (representing constraint (shift(variant_fields_00001_00006_00001, -5) + shift(variant_fields_00001_00006_00004, -4)))
c Both direct and order encoding.
c Var 'aux236' order represents '0' with '2920'
c Var 'aux236' direct represents '0' with '2920'
c Var 'aux236' order represents '1' with '2921'
-2920 2921 0
c Var 'aux236' direct represents '1' with '2922'
2920 -2921 2922 0
-2922 2921 0
-2922 -2920 0
c Var 'aux236' order represents '2' with '2923'
-2921 2923 0
c Var 'aux236' direct represents '2' with '2924'
2921 -2923 2924 0
-2924 2923 0
-2924 -2921 0
c Var 'aux236' order represents '3' with '2925'
-2923 2925 0
c Var 'aux236' direct represents '3' with '2926'
2923 -2925 2926 0
-2926 2925 0
-2926 -2923 0
c Var 'aux236' order represents '4' with '2927'
-2925 2927 0
c Var 'aux236' direct represents '4' with '2928'
2925 -2927 2928 0
-2928 2927 0
-2928 -2925 0
c Var 'aux236' order represents '5' with '2929'
-2927 2929 0
c Var 'aux236' direct represents '5' with '2930'
2927 -2929 2930 0
-2930 2929 0
-2930 -2927 0
c Var 'aux236' order represents '6' with '2931'
-2929 2931 0
c Var 'aux236' direct represents '6' with '2932'
2929 -2931 2932 0
-2932 2931 0
-2932 -2929 0
c Var 'aux236' direct represents '7' with '-2931'
2920 2922 2924 2926 2928 2930 2932 -2931 0
c Encoding variable: aux237 with domain: int(0..16) (representing constraint (aux3 + shift(variant_fields_00001_00006_00002, -2)))
c Both direct and order encoding.
c Var 'aux237' order represents '0' with '2933'
c Var 'aux237' direct represents '0' with '2933'
c Var 'aux237' order represents '1' with '2934'
-2933 2934 0
c Var 'aux237' direct represents '1' with '2935'
2933 -2934 2935 0
-2935 2934 0
-2935 -2933 0
c Var 'aux237' order represents '2' with '2936'
-2934 2936 0
c Var 'aux237' direct represents '2' with '2937'
2934 -2936 2937 0
-2937 2936 0
-2937 -2934 0
c Var 'aux237' order represents '3' with '2938'
-2936 2938 0
c Var 'aux237' direct represents '3' with '2939'
2936 -2938 2939 0
-2939 2938 0
-2939 -2936 0
c Var 'aux237' order represents '4' with '2940'
-2938 2940 0
c Var 'aux237' direct represents '4' with '2941'
2938 -2940 2941 0
-2941 2940 0
-2941 -2938 0
c Var 'aux237' order represents '5' with '2942'
-2940 2942 0
c Var 'aux237' direct represents '5' with '2943'
2940 -2942 2943 0
-2943 2942 0
-2943 -2940 0
c Var 'aux237' order represents '6' with '2944'
-2942 2944 0
c Var 'aux237' direct represents '6' with '2945'
2942 -2944 2945 0
-2945 2944 0
-2945 -2942 0
c Var 'aux237' order represents '7' with '2946'
-2944 2946 0
c Var 'aux237' direct represents '7' with '2947'
2944 -2946 2947 0
-2947 2946 0
-2947 -2944 0
c Var 'aux237' order represents '8' with '2948'
-2946 2948 0
c Var 'aux237' direct represents '8' with '2949'
2946 -2948 2949 0
-2949 2948 0
-2949 -2946 0
c Var 'aux237' order represents '9' with '2950'
-2948 2950 0
c Var 'aux237' direct represents '9' with '2951'
2948 -2950 2951 0
-2951 2950 0
-2951 -2948 0
c Var 'aux237' order represents '10' with '2952'
-2950 2952 0
c Var 'aux237' direct represents '10' with '2953'
2950 -2952 2953 0
-2953 2952 0
-2953 -2950 0
c Var 'aux237' order represents '11' with '2954'
-2952 2954 0
c Var 'aux237' direct represents '11' with '2955'
2952 -2954 2955 0
-2955 2954 0
-2955 -2952 0
c Var 'aux237' order represents '12' with '2956'
-2954 2956 0
c Var 'aux237' direct represents '12' with '2957'
2954 -2956 2957 0
-2957 2956 0
-2957 -2954 0
c Var 'aux237' order represents '13' with '2958'
-2956 2958 0
c Var 'aux237' direct represents '13' with '2959'
2956 -2958 2959 0
-2959 2958 0
-2959 -2956 0
c Var 'aux237' order represents '14' with '2960'
-2958 2960 0
c Var 'aux237' direct represents '14' with '2961'
2958 -2960 2961 0
-2961 2960 0
-2961 -2958 0
c Var 'aux237' order represents '15' with '2962'
-2960 2962 0
c Var 'aux237' direct represents '15' with '2963'
2960 -2962 2963 0
-2963 2962 0
-2963 -2960 0
c Var 'aux237' direct represents '16' with '-2962'
2933 2935 2937 2939 2941 2943 2945 2947 2949 2951 2953 2955 2957 2959 2961 2963 -2962 0
c Encoding variable: aux238 with domain: int(0..14) (representing constraint (shift(variant_fields_00001_00006_00005, -1) + shift(variant_fields_00001_00006_00003, -2)))
c Both direct and order encoding.
c Var 'aux238' order represents '0' with '2964'
c Var 'aux238' direct represents '0' with '2964'
c Var 'aux238' order represents '1' with '2965'
-2964 2965 0
c Var 'aux238' direct represents '1' with '2966'
2964 -2965 2966 0
-2966 2965 0
-2966 -2964 0
c Var 'aux238' order represents '2' with '2967'
-2965 2967 0
c Var 'aux238' direct represents '2' with '2968'
2965 -2967 2968 0
-2968 2967 0
-2968 -2965 0
c Var 'aux238' order represents '3' with '2969'
-2967 2969 0
c Var 'aux238' direct represents '3' with '2970'
2967 -2969 2970 0
-2970 2969 0
-2970 -2967 0
c Var 'aux238' order represents '4' with '2971'
-2969 2971 0
c Var 'aux238' direct represents '4' with '2972'
2969 -2971 2972 0
-2972 2971 0
-2972 -2969 0
c Var 'aux238' order represents '5' with '2973'
-2971 2973 0
c Var 'aux238' direct represents '5' with '2974'
2971 -2973 2974 0
-2974 2973 0
-2974 -2971 0
c Var 'aux238' order represents '6' with '2975'
-2973 2975 0
c Var 'aux238' direct represents '6' with '2976'
2973 -2975 2976 0
-2976 2975 0
-2976 -2973 0
c Var 'aux238' order represents '7' with '2977'
-2975 2977 0
c Var 'aux238' direct represents '7' with '2978'
2975 -2977 2978 0
-2978 2977 0
-2978 -2975 0
c Var 'aux238' order represents '8' with '2979'
-2977 2979 0
c Var 'aux238' direct represents '8' with '2980'
2977 -2979 2980 0
-2980 2979 0
-2980 -2977 0
c Var 'aux238' order represents '9' with '2981'
-2979 2981 0
c Var 'aux238' direct represents '9' with '2982'
2979 -2981 2982 0
-2982 2981 0
-2982 -2979 0
c Var 'aux238' order represents '10' with '2983'
-2981 2983 0
c Var 'aux238' direct represents '10' with '2984'
2981 -2983 2984 0
-2984 2983 0
-2984 -2981 0
c Var 'aux238' order represents '11' with '2985'
-2983 2985 0
c Var 'aux238' direct represents '11' with '2986'
2983 -2985 2986 0
-2986 2985 0
-2986 -2983 0
c Var 'aux238' order represents '12' with '2987'
-2985 2987 0
c Var 'aux238' direct represents '12' with '2988'
2985 -2987 2988 0
-2988 2987 0
-2988 -2985 0
c Var 'aux238' order represents '13' with '2989'
-2987 2989 0
c Var 'aux238' direct represents '13' with '2990'
2987 -2989 2990 0
-2990 2989 0
-2990 -2987 0
c Var 'aux238' direct represents '14' with '-2989'
2964 2966 2968 2970 2972 2974 2976 2978 2980 2982 2984 2986 2988 2990 -2989 0
c Encoding variable: aux239 with domain: int(0..16) (representing constraint (aux4 + aux236))
c Both direct and order encoding.
c Var 'aux239' order represents '0' with '2991'
c Var 'aux239' direct represents '0' with '2991'
c Var 'aux239' order represents '1' with '2992'
-2991 2992 0
c Var 'aux239' direct represents '1' with '2993'
2991 -2992 2993 0
-2993 2992 0
-2993 -2991 0
c Var 'aux239' order represents '2' with '2994'
-2992 2994 0
c Var 'aux239' direct represents '2' with '2995'
2992 -2994 2995 0
-2995 2994 0
-2995 -2992 0
c Var 'aux239' order represents '3' with '2996'
-2994 2996 0
c Var 'aux239' direct represents '3' with '2997'
2994 -2996 2997 0
-2997 2996 0
-2997 -2994 0
c Var 'aux239' order represents '4' with '2998'
-2996 2998 0
c Var 'aux239' direct represents '4' with '2999'
2996 -2998 2999 0
-2999 2998 0
-2999 -2996 0
c Var 'aux239' order represents '5' with '3000'
-2998 3000 0
c Var 'aux239' direct represents '5' with '3001'
2998 -3000 3001 0
-3001 3000 0
-3001 -2998 0
c Var 'aux239' order represents '6' with '3002'
-3000 3002 0
c Var 'aux239' direct represents '6' with '3003'
3000 -3002 3003 0
-3003 3002 0
-3003 -3000 0
c Var 'aux239' order represents '7' with '3004'
-3002 3004 0
c Var 'aux239' direct represents '7' with '3005'
3002 -3004 3005 0
-3005 3004 0
-3005 -3002 0
c Var 'aux239' order represents '8' with '3006'
-3004 3006 0
c Var 'aux239' direct represents '8' with '3007'
3004 -3006 3007 0
-3007 3006 0
-3007 -3004 0
c Var 'aux239' order represents '9' with '3008'
-3006 3008 0
c Var 'aux239' direct represents '9' with '3009'
3006 -3008 3009 0
-3009 3008 0
-3009 -3006 0
c Var 'aux239' order represents '10' with '3010'
-3008 3010 0
c Var 'aux239' direct represents '10' with '3011'
3008 -3010 3011 0
-3011 3010 0
-3011 -3008 0
c Var 'aux239' order represents '11' with '3012'
-3010 3012 0
c Var 'aux239' direct represents '11' with '3013'
3010 -3012 3013 0
-3013 3012 0
-3013 -3010 0
c Var 'aux239' order represents '12' with '3014'
-3012 3014 0
c Var 'aux239' direct represents '12' with '3015'
3012 -3014 3015 0
-3015 3014 0
-3015 -3012 0
c Var 'aux239' order represents '13' with '3016'
-3014 3016 0
c Var 'aux239' direct represents '13' with '3017'
3014 -3016 3017 0
-3017 3016 0
-3017 -3014 0
c Var 'aux239' order represents '14' with '3018'
-3016 3018 0
c Var 'aux239' direct represents '14' with '3019'
3016 -3018 3019 0
-3019 3018 0
-3019 -3016 0
c Var 'aux239' order represents '15' with '3020'
-3018 3020 0
c Var 'aux239' direct represents '15' with '3021'
3018 -3020 3021 0
-3021 3020 0
-3021 -3018 0
c Var 'aux239' direct represents '16' with '-3020'
2991 2993 2995 2997 2999 3001 3003 3005 3007 3009 3011 3013 3015 3017 3019 3021 -3020 0
c Encoding variable: aux240 with domain: int(0..22) (representing constraint (aux2 + aux238))
c Both direct and order encoding.
c Var 'aux240' order represents '0' with '3022'
c Var 'aux240' direct represents '0' with '3022'
c Var 'aux240' order represents '1' with '3023'
-3022 3023 0
c Var 'aux240' direct represents '1' with '3024'
3022 -3023 3024 0
-3024 3023 0
-3024 -3022 0
c Var 'aux240' order represents '2' with '3025'
-3023 3025 0
c Var 'aux240' direct represents '2' with '3026'
3023 -3025 3026 0
-3026 3025 0
-3026 -3023 0
c Var 'aux240' order represents '3' with '3027'
-3025 3027 0
c Var 'aux240' direct represents '3' with '3028'
3025 -3027 3028 0
-3028 3027 0
-3028 -3025 0
c Var 'aux240' order represents '4' with '3029'
-3027 3029 0
c Var 'aux240' direct represents '4' with '3030'
3027 -3029 3030 0
-3030 3029 0
-3030 -3027 0
c Var 'aux240' order represents '5' with '3031'
-3029 3031 0
c Var 'aux240' direct represents '5' with '3032'
3029 -3031 3032 0
-3032 3031 0
-3032 -3029 0
c Var 'aux240' order represents '6' with '3033'
-3031 3033 0
c Var 'aux240' direct represents '6' with '3034'
3031 -3033 3034 0
-3034 3033 0
-3034 -3031 0
c Var 'aux240' order represents '7' with '3035'
-3033 3035 0
c Var 'aux240' direct represents '7' with '3036'
3033 -3035 3036 0
-3036 3035 0
-3036 -3033 0
c Var 'aux240' order represents '8' with '3037'
-3035 3037 0
c Var 'aux240' direct represents '8' with '3038'
3035 -3037 3038 0
-3038 3037 0
-3038 -3035 0
c Var 'aux240' order represents '9' with '3039'
-3037 3039 0
c Var 'aux240' direct represents '9' with '3040'
3037 -3039 3040 0
-3040 3039 0
-3040 -3037 0
c Var 'aux240' order represents '10' with '3041'
-3039 3041 0
c Var 'aux240' direct represents '10' with '3042'
3039 -3041 3042 0
-3042 3041 0
-3042 -3039 0
c Var 'aux240' order represents '11' with '3043'
-3041 3043 0
c Var 'aux240' direct represents '11' with '3044'
3041 -3043 3044 0
-3044 3043 0
-3044 -3041 0
c Var 'aux240' order represents '12' with '3045'
-3043 3045 0
c Var 'aux240' direct represents '12' with '3046'
3043 -3045 3046 0
-3046 3045 0
-3046 -3043 0
c Var 'aux240' order represents '13' with '3047'
-3045 3047 0
c Var 'aux240' direct represents '13' with '3048'
3045 -3047 3048 0
-3048 3047 0
-3048 -3045 0
c Var 'aux240' order represents '14' with '3049'
-3047 3049 0
c Var 'aux240' direct represents '14' with '3050'
3047 -3049 3050 0
-3050 3049 0
-3050 -3047 0
c Var 'aux240' order represents '15' with '3051'
-3049 3051 0
c Var 'aux240' direct represents '15' with '3052'
3049 -3051 3052 0
-3052 3051 0
-3052 -3049 0
c Var 'aux240' order represents '16' with '3053'
-3051 3053 0
c Var 'aux240' direct represents '16' with '3054'
3051 -3053 3054 0
-3054 3053 0
-3054 -3051 0
c Var 'aux240' order represents '17' with '3055'
-3053 3055 0
c Var 'aux240' direct represents '17' with '3056'
3053 -3055 3056 0
-3056 3055 0
-3056 -3053 0
c Var 'aux240' order represents '18' with '3057'
-3055 3057 0
c Var 'aux240' direct represents '18' with '3058'
3055 -3057 3058 0
-3058 3057 0
-3058 -3055 0
c Var 'aux240' order represents '19' with '3059'
-3057 3059 0
c Var 'aux240' direct represents '19' with '3060'
3057 -3059 3060 0
-3060 3059 0
-3060 -3057 0
c Var 'aux240' order represents '20' with '3061'
-3059 3061 0
c Var 'aux240' direct represents '20' with '3062'
3059 -3061 3062 0
-3062 3061 0
-3062 -3059 0
c Var 'aux240' order represents '21' with '3063'
-3061 3063 0
c Var 'aux240' direct represents '21' with '3064'
3061 -3063 3064 0
-3064 3063 0
-3064 -3061 0
c Var 'aux240' direct represents '22' with '-3063'
3022 3024 3026 3028 3030 3032 3034 3036 3038 3040 3042 3044 3046 3048 3050 3052 3054 3056 3058 3060 3062 3064 -3063 0
c Encoding variable: aux241 with domain: int(0..9) (representing constraint (shift(variant_fields_00001_00008_00001, -5) + shift(variant_fields_00001_00008_00004, -1)))
c Both direct and order encoding.
c Var 'aux241' order represents '0' with '3065'
c Var 'aux241' direct represents '0' with '3065'
c Var 'aux241' order represents '1' with '3066'
-3065 3066 0
c Var 'aux241' direct represents '1' with '3067'
3065 -3066 3067 0
-3067 3066 0
-3067 -3065 0
c Var 'aux241' order represents '2' with '3068'
-3066 3068 0
c Var 'aux241' direct represents '2' with '3069'
3066 -3068 3069 0
-3069 3068 0
-3069 -3066 0
c Var 'aux241' order represents '3' with '3070'
-3068 3070 0
c Var 'aux241' direct represents '3' with '3071'
3068 -3070 3071 0
-3071 3070 0
-3071 -3068 0
c Var 'aux241' order represents '4' with '3072'
-3070 3072 0
c Var 'aux241' direct represents '4' with '3073'
3070 -3072 3073 0
-3073 3072 0
-3073 -3070 0
c Var 'aux241' order represents '5' with '3074'
-3072 3074 0
c Var 'aux241' direct represents '5' with '3075'
3072 -3074 3075 0
-3075 3074 0
-3075 -3072 0
c Var 'aux241' order represents '6' with '3076'
-3074 3076 0
c Var 'aux241' direct represents '6' with '3077'
3074 -3076 3077 0
-3077 3076 0
-3077 -3074 0
c Var 'aux241' order represents '7' with '3078'
-3076 3078 0
c Var 'aux241' direct represents '7' with '3079'
3076 -3078 3079 0
-3079 3078 0
-3079 -3076 0
c Var 'aux241' order represents '8' with '3080'
-3078 3080 0
c Var 'aux241' direct represents '8' with '3081'
3078 -3080 3081 0
-3081 3080 0
-3081 -3078 0
c Var 'aux241' direct represents '9' with '-3080'
3065 3067 3069 3071 3073 3075 3077 3079 3081 -3080 0
c Encoding variable: aux242 with domain: int(0..16) (representing constraint (shift(variant_fields_00001_00008_00005, -2) + aux7))
c Both direct and order encoding.
c Var 'aux242' order represents '0' with '3082'
c Var 'aux242' direct represents '0' with '3082'
c Var 'aux242' order represents '1' with '3083'
-3082 3083 0
c Var 'aux242' direct represents '1' with '3084'
3082 -3083 3084 0
-3084 3083 0
-3084 -3082 0
c Var 'aux242' order represents '2' with '3085'
-3083 3085 0
c Var 'aux242' direct represents '2' with '3086'
3083 -3085 3086 0
-3086 3085 0
-3086 -3083 0
c Var 'aux242' order represents '3' with '3087'
-3085 3087 0
c Var 'aux242' direct represents '3' with '3088'
3085 -3087 3088 0
-3088 3087 0
-3088 -3085 0
c Var 'aux242' order represents '4' with '3089'
-3087 3089 0
c Var 'aux242' direct represents '4' with '3090'
3087 -3089 3090 0
-3090 3089 0
-3090 -3087 0
c Var 'aux242' order represents '5' with '3091'
-3089 3091 0
c Var 'aux242' direct represents '5' with '3092'
3089 -3091 3092 0
-3092 3091 0
-3092 -3089 0
c Var 'aux242' order represents '6' with '3093'
-3091 3093 0
c Var 'aux242' direct represents '6' with '3094'
3091 -3093 3094 0
-3094 3093 0
-3094 -3091 0
c Var 'aux242' order represents '7' with '3095'
-3093 3095 0
c Var 'aux242' direct represents '7' with '3096'
3093 -3095 3096 0
-3096 3095 0
-3096 -3093 0
c Var 'aux242' order represents '8' with '3097'
-3095 3097 0
c Var 'aux242' direct represents '8' with '3098'
3095 -3097 3098 0
-3098 3097 0
-3098 -3095 0
c Var 'aux242' order represents '9' with '3099'
-3097 3099 0
c Var 'aux242' direct represents '9' with '3100'
3097 -3099 3100 0
-3100 3099 0
-3100 -3097 0
c Var 'aux242' order represents '10' with '3101'
-3099 3101 0
c Var 'aux242' direct represents '10' with '3102'
3099 -3101 3102 0
-3102 3101 0
-3102 -3099 0
c Var 'aux242' order represents '11' with '3103'
-3101 3103 0
c Var 'aux242' direct represents '11' with '3104'
3101 -3103 3104 0
-3104 3103 0
-3104 -3101 0
c Var 'aux242' order represents '12' with '3105'
-3103 3105 0
c Var 'aux242' direct represents '12' with '3106'
3103 -3105 3106 0
-3106 3105 0
-3106 -3103 0
c Var 'aux242' order represents '13' with '3107'
-3105 3107 0
c Var 'aux242' direct represents '13' with '3108'
3105 -3107 3108 0
-3108 3107 0
-3108 -3105 0
c Var 'aux242' order represents '14' with '3109'
-3107 3109 0
c Var 'aux242' direct represents '14' with '3110'
3107 -3109 3110 0
-3110 3109 0
-3110 -3107 0
c Var 'aux242' order represents '15' with '3111'
-3109 3111 0
c Var 'aux242' direct represents '15' with '3112'
3109 -3111 3112 0
-3112 3111 0
-3112 -3109 0
c Var 'aux242' direct represents '16' with '-3111'
3082 3084 3086 3088 3090 3092 3094 3096 3098 3100 3102 3104 3106 3108 3110 3112 -3111 0
c Encoding variable: aux243 with domain: int(0..16) (representing constraint (aux8 + shift(variant_fields_00001_00008_00002, -2)))
c Both direct and order encoding.
c Var 'aux243' order represents '0' with '3113'
c Var 'aux243' direct represents '0' with '3113'
c Var 'aux243' order represents '1' with '3114'
-3113 3114 0
c Var 'aux243' direct represents '1' with '3115'
3113 -3114 3115 0
-3115 3114 0
-3115 -3113 0
c Var 'aux243' order represents '2' with '3116'
-3114 3116 0
c Var 'aux243' direct represents '2' with '3117'
3114 -3116 3117 0
-3117 3116 0
-3117 -3114 0
c Var 'aux243' order represents '3' with '3118'
-3116 3118 0
c Var 'aux243' direct represents '3' with '3119'
3116 -3118 3119 0
-3119 3118 0
-3119 -3116 0
c Var 'aux243' order represents '4' with '3120'
-3118 3120 0
c Var 'aux243' direct represents '4' with '3121'
3118 -3120 3121 0
-3121 3120 0
-3121 -3118 0
c Var 'aux243' order represents '5' with '3122'
-3120 3122 0
c Var 'aux243' direct represents '5' with '3123'
3120 -3122 3123 0
-3123 3122 0
-3123 -3120 0
c Var 'aux243' order represents '6' with '3124'
-3122 3124 0
c Var 'aux243' direct represents '6' with '3125'
3122 -3124 3125 0
-3125 3124 0
-3125 -3122 0
c Var 'aux243' order represents '7' with '3126'
-3124 3126 0
c Var 'aux243' direct represents '7' with '3127'
3124 -3126 3127 0
-3127 3126 0
-3127 -3124 0
c Var 'aux243' order represents '8' with '3128'
-3126 3128 0
c Var 'aux243' direct represents '8' with '3129'
3126 -3128 3129 0
-3129 3128 0
-3129 -3126 0
c Var 'aux243' order represents '9' with '3130'
-3128 3130 0
c Var 'aux243' direct represents '9' with '3131'
3128 -3130 3131 0
-3131 3130 0
-3131 -3128 0
c Var 'aux243' order represents '10' with '3132'
-3130 3132 0
c Var 'aux243' direct represents '10' with '3133'
3130 -3132 3133 0
-3133 3132 0
-3133 -3130 0
c Var 'aux243' order represents '11' with '3134'
-3132 3134 0
c Var 'aux243' direct represents '11' with '3135'
3132 -3134 3135 0
-3135 3134 0
-3135 -3132 0
c Var 'aux243' order represents '12' with '3136'
-3134 3136 0
c Var 'aux243' direct represents '12' with '3137'
3134 -3136 3137 0
-3137 3136 0
-3137 -3134 0
c Var 'aux243' order represents '13' with '3138'
-3136 3138 0
c Var 'aux243' direct represents '13' with '3139'
3136 -3138 3139 0
-3139 3138 0
-3139 -3136 0
c Var 'aux243' order represents '14' with '3140'
-3138 3140 0
c Var 'aux243' direct represents '14' with '3141'
3138 -3140 3141 0
-3141 3140 0
-3141 -3138 0
c Var 'aux243' order represents '15' with '3142'
-3140 3142 0
c Var 'aux243' direct represents '15' with '3143'
3140 -3142 3143 0
-3143 3142 0
-3143 -3140 0
c Var 'aux243' direct represents '16' with '-3142'
3113 3115 3117 3119 3121 3123 3125 3127 3129 3131 3133 3135 3137 3139 3141 3143 -3142 0
c Encoding variable: aux244 with domain: int(0..16) (representing constraint (shift(variant_fields_00001_00008_00003, -2) + aux6))
c Both direct and order encoding.
c Var 'aux244' order represents '0' with '3144'
c Var 'aux244' direct represents '0' with '3144'
c Var 'aux244' order represents '1' with '3145'
-3144 3145 0
c Var 'aux244' direct represents '1' with '3146'
3144 -3145 3146 0
-3146 3145 0
-3146 -3144 0
c Var 'aux244' order represents '2' with '3147'
-3145 3147 0
c Var 'aux244' direct represents '2' with '3148'
3145 -3147 3148 0
-3148 3147 0
-3148 -3145 0
c Var 'aux244' order represents '3' with '3149'
-3147 3149 0
c Var 'aux244' direct represents '3' with '3150'
3147 -3149 3150 0
-3150 3149 0
-3150 -3147 0
c Var 'aux244' order represents '4' with '3151'
-3149 3151 0
c Var 'aux244' direct represents '4' with '3152'
3149 -3151 3152 0
-3152 3151 0
-3152 -3149 0
c Var 'aux244' order represents '5' with '3153'
-3151 3153 0
c Var 'aux244' direct represents '5' with '3154'
3151 -3153 3154 0
-3154 3153 0
-3154 -3151 0
c Var 'aux244' order represents '6' with '3155'
-3153 3155 0
c Var 'aux244' direct represents '6' with '3156'
3153 -3155 3156 0
-3156 3155 0
-3156 -3153 0
c Var 'aux244' order represents '7' with '3157'
-3155 3157 0
c Var 'aux244' direct represents '7' with '3158'
3155 -3157 3158 0
-3158 3157 0
-3158 -3155 0
c Var 'aux244' order represents '8' with '3159'
-3157 3159 0
c Var 'aux244' direct represents '8' with '3160'
3157 -3159 3160 0
-3160 3159 0
-3160 -3157 0
c Var 'aux244' order represents '9' with '3161'
-3159 3161 0
c Var 'aux244' direct represents '9' with '3162'
3159 -3161 3162 0
-3162 3161 0
-3162 -3159 0
c Var 'aux244' order represents '10' with '3163'
-3161 3163 0
c Var 'aux244' direct represents '10' with '3164'
3161 -3163 3164 0
-3164 3163 0
-3164 -3161 0
c Var 'aux244' order represents '11' with '3165'
-3163 3165 0
c Var 'aux244' direct represents '11' with '3166'
3163 -3165 3166 0
-3166 3165 0
-3166 -3163 0
c Var 'aux244' order represents '12' with '3167'
-3165 3167 0
c Var 'aux244' direct represents '12' with '3168'
3165 -3167 3168 0
-3168 3167 0
-3168 -3165 0
c Var 'aux244' order represents '13' with '3169'
-3167 3169 0
c Var 'aux244' direct represents '13' with '3170'
3167 -3169 3170 0
-3170 3169 0
-3170 -3167 0
c Var 'aux244' order represents '14' with '3171'
-3169 3171 0
c Var 'aux244' direct represents '14' with '3172'
3169 -3171 3172 0
-3172 3171 0
-3172 -3169 0
c Var 'aux244' order represents '15' with '3173'
-3171 3173 0
c Var 'aux244' direct represents '15' with '3174'
3171 -3173 3174 0
-3174 3173 0
-3174 -3171 0
c Var 'aux244' direct represents '16' with '-3173'
3144 3146 3148 3150 3152 3154 3156 3158 3160 3162 3164 3166 3168 3170 3172 3174 -3173 0
c Encoding variable: aux245 with domain: int(0..25) (representing constraint (aux241 + aux244))
c Both direct and order encoding.
c Var 'aux245' order represents '0' with '3175'
c Var 'aux245' direct represents '0' with '3175'
c Var 'aux245' order represents '1' with '3176'
-3175 3176 0
c Var 'aux245' direct represents '1' with '3177'
3175 -3176 3177 0
-3177 3176 0
-3177 -3175 0
c Var 'aux245' order represents '2' with '3178'
-3176 3178 0
c Var 'aux245' direct represents '2' with '3179'
3176 -3178 3179 0
-3179 3178 0
-3179 -3176 0
c Var 'aux245' order represents '3' with '3180'
-3178 3180 0
c Var 'aux245' direct represents '3' with '3181'
3178 -3180 3181 0
-3181 3180 0
-3181 -3178 0
c Var 'aux245' order represents '4' with '3182'
-3180 3182 0
c Var 'aux245' direct represents '4' with '3183'
3180 -3182 3183 0
-3183 3182 0
-3183 -3180 0
c Var 'aux245' order represents '5' with '3184'
-3182 3184 0
c Var 'aux245' direct represents '5' with '3185'
3182 -3184 3185 0
-3185 3184 0
-3185 -3182 0
c Var 'aux245' order represents '6' with '3186'
-3184 3186 0
c Var 'aux245' direct represents '6' with '3187'
3184 -3186 3187 0
-3187 3186 0
-3187 -3184 0
c Var 'aux245' order represents '7' with '3188'
-3186 3188 0
c Var 'aux245' direct represents '7' with '3189'
3186 -3188 3189 0
-3189 3188 0
-3189 -3186 0
c Var 'aux245' order represents '8' with '3190'
-3188 3190 0
c Var 'aux245' direct represents '8' with '3191'
3188 -3190 3191 0
-3191 3190 0
-3191 -3188 0
c Var 'aux245' order represents '9' with '3192'
-3190 3192 0
c Var 'aux245' direct represents '9' with '3193'
3190 -3192 3193 0
-3193 3192 0
-3193 -3190 0
c Var 'aux245' order represents '10' with '3194'
-3192 3194 0
c Var 'aux245' direct represents '10' with '3195'
3192 -3194 3195 0
-3195 3194 0
-3195 -3192 0
c Var 'aux245' order represents '11' with '3196'
-3194 3196 0
c Var 'aux245' direct represents '11' with '3197'
3194 -3196 3197 0
-3197 3196 0
-3197 -3194 0
c Var 'aux245' order represents '12' with '3198'
-3196 3198 0
c Var 'aux245' direct represents '12' with '3199'
3196 -3198 3199 0
-3199 3198 0
-3199 -3196 0
c Var 'aux245' order represents '13' with '3200'
-3198 3200 0
c Var 'aux245' direct represents '13' with '3201'
3198 -3200 3201 0
-3201 3200 0
-3201 -3198 0
c Var 'aux245' order represents '14' with '3202'
-3200 3202 0
c Var 'aux245' direct represents '14' with '3203'
3200 -3202 3203 0
-3203 3202 0
-3203 -3200 0
c Var 'aux245' order represents '15' with '3204'
-3202 3204 0
c Var 'aux245' direct represents '15' with '3205'
3202 -3204 3205 0
-3205 3204 0
-3205 -3202 0
c Var 'aux245' order represents '16' with '3206'
-3204 3206 0
c Var 'aux245' direct represents '16' with '3207'
3204 -3206 3207 0
-3207 3206 0
-3207 -3204 0
c Var 'aux245' order represents '17' with '3208'
-3206 3208 0
c Var 'aux245' direct represents '17' with '3209'
3206 -3208 3209 0
-3209 3208 0
-3209 -3206 0
c Var 'aux245' order represents '18' with '3210'
-3208 3210 0
c Var 'aux245' direct represents '18' with '3211'
3208 -3210 3211 0
-3211 3210 0
-3211 -3208 0
c Var 'aux245' order represents '19' with '3212'
-3210 3212 0
c Var 'aux245' direct represents '19' with '3213'
3210 -3212 3213 0
-3213 3212 0
-3213 -3210 0
c Var 'aux245' order represents '20' with '3214'
-3212 3214 0
c Var 'aux245' direct represents '20' with '3215'
3212 -3214 3215 0
-3215 3214 0
-3215 -3212 0
c Var 'aux245' order represents '21' with '3216'
-3214 3216 0
c Var 'aux245' direct represents '21' with '3217'
3214 -3216 3217 0
-3217 3216 0
-3217 -3214 0
c Var 'aux245' order represents '22' with '3218'
-3216 3218 0
c Var 'aux245' direct represents '22' with '3219'
3216 -3218 3219 0
-3219 3218 0
-3219 -3216 0
c Var 'aux245' order represents '23' with '3220'
-3218 3220 0
c Var 'aux245' direct represents '23' with '3221'
3218 -3220 3221 0
-3221 3220 0
-3221 -3218 0
c Var 'aux245' order represents '24' with '3222'
-3220 3222 0
c Var 'aux245' direct represents '24' with '3223'
3220 -3222 3223 0
-3223 3222 0
-3223 -3220 0
c Var 'aux245' direct represents '25' with '-3222'
3175 3177 3179 3181 3183 3185 3187 3189 3191 3193 3195 3197 3199 3201 3203 3205 3207 3209 3211 3213 3215 3217 3219 3221 3223 -3222 0
c Encoding variable: aux246 with domain: int(0..5) (representing constraint (shift(variant_fields_00002_00002_00002, -1) + shift(variant_fields_00002_00002_00001, -5)))
c Both direct and order encoding.
c Var 'aux246' order represents '0' with '3224'
c Var 'aux246' direct represents '0' with '3224'
c Var 'aux246' order represents '1' with '3225'
-3224 3225 0
c Var 'aux246' direct represents '1' with '3226'
3224 -3225 3226 0
-3226 3225 0
-3226 -3224 0
c Var 'aux246' order represents '2' with '3227'
-3225 3227 0
c Var 'aux246' direct represents '2' with '3228'
3225 -3227 3228 0
-3228 3227 0
-3228 -3225 0
c Var 'aux246' order represents '3' with '3229'
-3227 3229 0
c Var 'aux246' direct represents '3' with '3230'
3227 -3229 3230 0
-3230 3229 0
-3230 -3227 0
c Var 'aux246' order represents '4' with '3231'
-3229 3231 0
c Var 'aux246' direct represents '4' with '3232'
3229 -3231 3232 0
-3232 3231 0
-3232 -3229 0
c Var 'aux246' direct represents '5' with '-3231'
3224 3226 3228 3230 3232 -3231 0
c Encoding variable: aux247 with domain: int(0..11) (representing constraint (shift(variant_fields_00002_00002_00004, -1) + aux246))
c Both direct and order encoding.
c Var 'aux247' order represents '0' with '3233'
c Var 'aux247' direct represents '0' with '3233'
c Var 'aux247' order represents '1' with '3234'
-3233 3234 0
c Var 'aux247' direct represents '1' with '3235'
3233 -3234 3235 0
-3235 3234 0
-3235 -3233 0
c Var 'aux247' order represents '2' with '3236'
-3234 3236 0
c Var 'aux247' direct represents '2' with '3237'
3234 -3236 3237 0
-3237 3236 0
-3237 -3234 0
c Var 'aux247' order represents '3' with '3238'
-3236 3238 0
c Var 'aux247' direct represents '3' with '3239'
3236 -3238 3239 0
-3239 3238 0
-3239 -3236 0
c Var 'aux247' order represents '4' with '3240'
-3238 3240 0
c Var 'aux247' direct represents '4' with '3241'
3238 -3240 3241 0
-3241 3240 0
-3241 -3238 0
c Var 'aux247' order represents '5' with '3242'
-3240 3242 0
c Var 'aux247' direct represents '5' with '3243'
3240 -3242 3243 0
-3243 3242 0
-3243 -3240 0
c Var 'aux247' order represents '6' with '3244'
-3242 3244 0
c Var 'aux247' direct represents '6' with '3245'
3242 -3244 3245 0
-3245 3244 0
-3245 -3242 0
c Var 'aux247' order represents '7' with '3246'
-3244 3246 0
c Var 'aux247' direct represents '7' with '3247'
3244 -3246 3247 0
-3247 3246 0
-3247 -3244 0
c Var 'aux247' order represents '8' with '3248'
-3246 3248 0
c Var 'aux247' direct represents '8' with '3249'
3246 -3248 3249 0
-3249 3248 0
-3249 -3246 0
c Var 'aux247' order represents '9' with '3250'
-3248 3250 0
c Var 'aux247' direct represents '9' with '3251'
3248 -3250 3251 0
-3251 3250 0
-3251 -3248 0
c Var 'aux247' order represents '10' with '3252'
-3250 3252 0
c Var 'aux247' direct represents '10' with '3253'
3250 -3252 3253 0
-3253 3252 0
-3253 -3250 0
c Var 'aux247' direct represents '11' with '-3252'
3233 3235 3237 3239 3241 3243 3245 3247 3249 3251 3253 -3252 0
c Encoding variable: aux248 with domain: int(0..1,3..14) (representing constraint (shift(variant_fields_00002_00002_00003, -2) + shift(variant_fields_00002_00002_00005, -2)))
c Both direct and order encoding.
c Var 'aux248' order represents '0' with '3254'
c Var 'aux248' direct represents '0' with '3254'
c Var 'aux248' order represents '1' with '3255'
-3254 3255 0
c Var 'aux248' direct represents '1' with '3256'
3254 -3255 3256 0
-3256 3255 0
-3256 -3254 0
c Var 'aux248' order represents '3' with '3257'
-3255 3257 0
c Var 'aux248' direct represents '3' with '3258'
3255 -3257 3258 0
-3258 3257 0
-3258 -3255 0
c Var 'aux248' order represents '4' with '3259'
-3257 3259 0
c Var 'aux248' direct represents '4' with '3260'
3257 -3259 3260 0
-3260 3259 0
-3260 -3257 0
c Var 'aux248' order represents '5' with '3261'
-3259 3261 0
c Var 'aux248' direct represents '5' with '3262'
3259 -3261 3262 0
-3262 3261 0
-3262 -3259 0
c Var 'aux248' order represents '6' with '3263'
-3261 3263 0
c Var 'aux248' direct represents '6' with '3264'
3261 -3263 3264 0
-3264 3263 0
-3264 -3261 0
c Var 'aux248' order represents '7' with '3265'
-3263 3265 0
c Var 'aux248' direct represents '7' with '3266'
3263 -3265 3266 0
-3266 3265 0
-3266 -3263 0
c Var 'aux248' order represents '8' with '3267'
-3265 3267 0
c Var 'aux248' direct represents '8' with '3268'
3265 -3267 3268 0
-3268 3267 0
-3268 -3265 0
c Var 'aux248' order represents '9' with '3269'
-3267 3269 0
c Var 'aux248' direct represents '9' with '3270'
3267 -3269 3270 0
-3270 3269 0
-3270 -3267 0
c Var 'aux248' order represents '10' with '3271'
-3269 3271 0
c Var 'aux248' direct represents '10' with '3272'
3269 -3271 3272 0
-3272 3271 0
-3272 -3269 0
c Var 'aux248' order represents '11' with '3273'
-3271 3273 0
c Var 'aux248' direct represents '11' with '3274'
3271 -3273 3274 0
-3274 3273 0
-3274 -3271 0
c Var 'aux248' order represents '12' with '3275'
-3273 3275 0
c Var 'aux248' direct represents '12' with '3276'
3273 -3275 3276 0
-3276 3275 0
-3276 -3273 0
c Var 'aux248' order represents '13' with '3277'
-3275 3277 0
c Var 'aux248' direct represents '13' with '3278'
3275 -3277 3278 0
-3278 3277 0
-3278 -3275 0
c Var 'aux248' direct represents '14' with '-3277'
3254 3256 3258 3260 3262 3264 3266 3268 3270 3272 3274 3276 3278 -3277 0
c Encoding variable: aux249 with domain: int(0,2..18) (representing constraint (aux10 + aux11))
c Both direct and order encoding.
c Var 'aux249' order represents '0' with '3279'
c Var 'aux249' direct represents '0' with '3279'
c Var 'aux249' order represents '2' with '3280'
-3279 3280 0
c Var 'aux249' direct represents '2' with '3281'
3279 -3280 3281 0
-3281 3280 0
-3281 -3279 0
c Var 'aux249' order represents '3' with '3282'
-3280 3282 0
c Var 'aux249' direct represents '3' with '3283'
3280 -3282 3283 0
-3283 3282 0
-3283 -3280 0
c Var 'aux249' order represents '4' with '3284'
-3282 3284 0
c Var 'aux249' direct represents '4' with '3285'
3282 -3284 3285 0
-3285 3284 0
-3285 -3282 0
c Var 'aux249' order represents '5' with '3286'
-3284 3286 0
c Var 'aux249' direct represents '5' with '3287'
3284 -3286 3287 0
-3287 3286 0
-3287 -3284 0
c Var 'aux249' order represents '6' with '3288'
-3286 3288 0
c Var 'aux249' direct represents '6' with '3289'
3286 -3288 3289 0
-3289 3288 0
-3289 -3286 0
c Var 'aux249' order represents '7' with '3290'
-3288 3290 0
c Var 'aux249' direct represents '7' with '3291'
3288 -3290 3291 0
-3291 3290 0
-3291 -3288 0
c Var 'aux249' order represents '8' with '3292'
-3290 3292 0
c Var 'aux249' direct represents '8' with '3293'
3290 -3292 3293 0
-3293 3292 0
-3293 -3290 0
c Var 'aux249' order represents '9' with '3294'
-3292 3294 0
c Var 'aux249' direct represents '9' with '3295'
3292 -3294 3295 0
-3295 3294 0
-3295 -3292 0
c Var 'aux249' order represents '10' with '3296'
-3294 3296 0
c Var 'aux249' direct represents '10' with '3297'
3294 -3296 3297 0
-3297 3296 0
-3297 -3294 0
c Var 'aux249' order represents '11' with '3298'
-3296 3298 0
c Var 'aux249' direct represents '11' with '3299'
3296 -3298 3299 0
-3299 3298 0
-3299 -3296 0
c Var 'aux249' order represents '12' with '3300'
-3298 3300 0
c Var 'aux249' direct represents '12' with '3301'
3298 -3300 3301 0
-3301 3300 0
-3301 -3298 0
c Var 'aux249' order represents '13' with '3302'
-3300 3302 0
c Var 'aux249' direct represents '13' with '3303'
3300 -3302 3303 0
-3303 3302 0
-3303 -3300 0
c Var 'aux249' order represents '14' with '3304'
-3302 3304 0
c Var 'aux249' direct represents '14' with '3305'
3302 -3304 3305 0
-3305 3304 0
-3305 -3302 0
c Var 'aux249' order represents '15' with '3306'
-3304 3306 0
c Var 'aux249' direct represents '15' with '3307'
3304 -3306 3307 0
-3307 3306 0
-3307 -3304 0
c Var 'aux249' order represents '16' with '3308'
-3306 3308 0
c Var 'aux249' direct represents '16' with '3309'
3306 -3308 3309 0
-3309 3308 0
-3309 -3306 0
c Var 'aux249' order represents '17' with '3310'
-3308 3310 0
c Var 'aux249' direct represents '17' with '3311'
3308 -3310 3311 0
-3311 3310 0
-3311 -3308 0
c Var 'aux249' direct represents '18' with '-3310'
3279 3281 3283 3285 3287 3289 3291 3293 3295 3297 3299 3301 3303 3305 3307 3309 3311 -3310 0
c Encoding variable: aux250 with domain: int(0..5) (representing constraint (shift(variant_fields_00002_00006_00001, -4) + shift(variant_fields_00002_00006_00002, -5)))
c Both direct and order encoding.
c Var 'aux250' order represents '0' with '3312'
c Var 'aux250' direct represents '0' with '3312'
c Var 'aux250' order represents '1' with '3313'
-3312 3313 0
c Var 'aux250' direct represents '1' with '3314'
3312 -3313 3314 0
-3314 3313 0
-3314 -3312 0
c Var 'aux250' order represents '2' with '3315'
-3313 3315 0
c Var 'aux250' direct represents '2' with '3316'
3313 -3315 3316 0
-3316 3315 0
-3316 -3313 0
c Var 'aux250' order represents '3' with '3317'
-3315 3317 0
c Var 'aux250' direct represents '3' with '3318'
3315 -3317 3318 0
-3318 3317 0
-3318 -3315 0
c Var 'aux250' order represents '4' with '3319'
-3317 3319 0
c Var 'aux250' direct represents '4' with '3320'
3317 -3319 3320 0
-3320 3319 0
-3320 -3317 0
c Var 'aux250' direct represents '5' with '-3319'
3312 3314 3316 3318 3320 -3319 0
c Encoding variable: aux251 with domain: int(0..12) (representing constraint (shift(variant_fields_00002_00006_00004, -2) + aux250))
c Both direct and order encoding.
c Var 'aux251' order represents '0' with '3321'
c Var 'aux251' direct represents '0' with '3321'
c Var 'aux251' order represents '1' with '3322'
-3321 3322 0
c Var 'aux251' direct represents '1' with '3323'
3321 -3322 3323 0
-3323 3322 0
-3323 -3321 0
c Var 'aux251' order represents '2' with '3324'
-3322 3324 0
c Var 'aux251' direct represents '2' with '3325'
3322 -3324 3325 0
-3325 3324 0
-3325 -3322 0
c Var 'aux251' order represents '3' with '3326'
-3324 3326 0
c Var 'aux251' direct represents '3' with '3327'
3324 -3326 3327 0
-3327 3326 0
-3327 -3324 0
c Var 'aux251' order represents '4' with '3328'
-3326 3328 0
c Var 'aux251' direct represents '4' with '3329'
3326 -3328 3329 0
-3329 3328 0
-3329 -3326 0
c Var 'aux251' order represents '5' with '3330'
-3328 3330 0
c Var 'aux251' direct represents '5' with '3331'
3328 -3330 3331 0
-3331 3330 0
-3331 -3328 0
c Var 'aux251' order represents '6' with '3332'
-3330 3332 0
c Var 'aux251' direct represents '6' with '3333'
3330 -3332 3333 0
-3333 3332 0
-3333 -3330 0
c Var 'aux251' order represents '7' with '3334'
-3332 3334 0
c Var 'aux251' direct represents '7' with '3335'
3332 -3334 3335 0
-3335 3334 0
-3335 -3332 0
c Var 'aux251' order represents '8' with '3336'
-3334 3336 0
c Var 'aux251' direct represents '8' with '3337'
3334 -3336 3337 0
-3337 3336 0
-3337 -3334 0
c Var 'aux251' order represents '9' with '3338'
-3336 3338 0
c Var 'aux251' direct represents '9' with '3339'
3336 -3338 3339 0
-3339 3338 0
-3339 -3336 0
c Var 'aux251' order represents '10' with '3340'
-3338 3340 0
c Var 'aux251' direct represents '10' with '3341'
3338 -3340 3341 0
-3341 3340 0
-3341 -3338 0
c Var 'aux251' order represents '11' with '3342'
-3340 3342 0
c Var 'aux251' direct represents '11' with '3343'
3340 -3342 3343 0
-3343 3342 0
-3343 -3340 0
c Var 'aux251' direct represents '12' with '-3342'
3321 3323 3325 3327 3329 3331 3333 3335 3337 3339 3341 3343 -3342 0
c Encoding variable: aux252 with domain: int(0..15) (representing constraint (shift(variant_fields_00002_00006_00003, -1) + aux14))
c Both direct and order encoding.
c Var 'aux252' order represents '0' with '3344'
c Var 'aux252' direct represents '0' with '3344'
c Var 'aux252' order represents '1' with '3345'
-3344 3345 0
c Var 'aux252' direct represents '1' with '3346'
3344 -3345 3346 0
-3346 3345 0
-3346 -3344 0
c Var 'aux252' order represents '2' with '3347'
-3345 3347 0
c Var 'aux252' direct represents '2' with '3348'
3345 -3347 3348 0
-3348 3347 0
-3348 -3345 0
c Var 'aux252' order represents '3' with '3349'
-3347 3349 0
c Var 'aux252' direct represents '3' with '3350'
3347 -3349 3350 0
-3350 3349 0
-3350 -3347 0
c Var 'aux252' order represents '4' with '3351'
-3349 3351 0
c Var 'aux252' direct represents '4' with '3352'
3349 -3351 3352 0
-3352 3351 0
-3352 -3349 0
c Var 'aux252' order represents '5' with '3353'
-3351 3353 0
c Var 'aux252' direct represents '5' with '3354'
3351 -3353 3354 0
-3354 3353 0
-3354 -3351 0
c Var 'aux252' order represents '6' with '3355'
-3353 3355 0
c Var 'aux252' direct represents '6' with '3356'
3353 -3355 3356 0
-3356 3355 0
-3356 -3353 0
c Var 'aux252' order represents '7' with '3357'
-3355 3357 0
c Var 'aux252' direct represents '7' with '3358'
3355 -3357 3358 0
-3358 3357 0
-3358 -3355 0
c Var 'aux252' order represents '8' with '3359'
-3357 3359 0
c Var 'aux252' direct represents '8' with '3360'
3357 -3359 3360 0
-3360 3359 0
-3360 -3357 0
c Var 'aux252' order represents '9' with '3361'
-3359 3361 0
c Var 'aux252' direct represents '9' with '3362'
3359 -3361 3362 0
-3362 3361 0
-3362 -3359 0
c Var 'aux252' order represents '10' with '3363'
-3361 3363 0
c Var 'aux252' direct represents '10' with '3364'
3361 -3363 3364 0
-3364 3363 0
-3364 -3361 0
c Var 'aux252' order represents '11' with '3365'
-3363 3365 0
c Var 'aux252' direct represents '11' with '3366'
3363 -3365 3366 0
-3366 3365 0
-3366 -3363 0
c Var 'aux252' order represents '12' with '3367'
-3365 3367 0
c Var 'aux252' direct represents '12' with '3368'
3365 -3367 3368 0
-3368 3367 0
-3368 -3365 0
c Var 'aux252' order represents '13' with '3369'
-3367 3369 0
c Var 'aux252' direct represents '13' with '3370'
3367 -3369 3370 0
-3370 3369 0
-3370 -3367 0
c Var 'aux252' order represents '14' with '3371'
-3369 3371 0
c Var 'aux252' direct represents '14' with '3372'
3369 -3371 3372 0
-3372 3371 0
-3372 -3369 0
c Var 'aux252' direct represents '15' with '-3371'
3344 3346 3348 3350 3352 3354 3356 3358 3360 3362 3364 3366 3368 3370 3372 -3371 0
c Encoding variable: aux253 with domain: int(0..4,6,8,10) (representing constraint (shift(variant_fields_00003_00006_00001, -5) + shift(variant_fields_00003_00006_00003, -1)))
c Both direct and order encoding.
c Var 'aux253' order represents '0' with '3373'
c Var 'aux253' direct represents '0' with '3373'
c Var 'aux253' order represents '1' with '3374'
-3373 3374 0
c Var 'aux253' direct represents '1' with '3375'
3373 -3374 3375 0
-3375 3374 0
-3375 -3373 0
c Var 'aux253' order represents '2' with '3376'
-3374 3376 0
c Var 'aux253' direct represents '2' with '3377'
3374 -3376 3377 0
-3377 3376 0
-3377 -3374 0
c Var 'aux253' order represents '3' with '3378'
-3376 3378 0
c Var 'aux253' direct represents '3' with '3379'
3376 -3378 3379 0
-3379 3378 0
-3379 -3376 0
c Var 'aux253' order represents '4' with '3380'
-3378 3380 0
c Var 'aux253' direct represents '4' with '3381'
3378 -3380 3381 0
-3381 3380 0
-3381 -3378 0
c Var 'aux253' order represents '6' with '3382'
-3380 3382 0
c Var 'aux253' direct represents '6' with '3383'
3380 -3382 3383 0
-3383 3382 0
-3383 -3380 0
c Var 'aux253' order represents '8' with '3384'
-3382 3384 0
c Var 'aux253' direct represents '8' with '3385'
3382 -3384 3385 0
-3385 3384 0
-3385 -3382 0
c Var 'aux253' direct represents '10' with '-3384'
3373 3375 3377 3379 3381 3383 3385 -3384 0
c Encoding variable: aux254 with domain: int(0..1,3..16) (representing constraint (aux20 + shift(variant_fields_00003_00006_00002, -1)))
c Both direct and order encoding.
c Var 'aux254' order represents '0' with '3386'
c Var 'aux254' direct represents '0' with '3386'
c Var 'aux254' order represents '1' with '3387'
-3386 3387 0
c Var 'aux254' direct represents '1' with '3388'
3386 -3387 3388 0
-3388 3387 0
-3388 -3386 0
c Var 'aux254' order represents '3' with '3389'
-3387 3389 0
c Var 'aux254' direct represents '3' with '3390'
3387 -3389 3390 0
-3390 3389 0
-3390 -3387 0
c Var 'aux254' order represents '4' with '3391'
-3389 3391 0
c Var 'aux254' direct represents '4' with '3392'
3389 -3391 3392 0
-3392 3391 0
-3392 -3389 0
c Var 'aux254' order represents '5' with '3393'
-3391 3393 0
c Var 'aux254' direct represents '5' with '3394'
3391 -3393 3394 0
-3394 3393 0
-3394 -3391 0
c Var 'aux254' order represents '6' with '3395'
-3393 3395 0
c Var 'aux254' direct represents '6' with '3396'
3393 -3395 3396 0
-3396 3395 0
-3396 -3393 0
c Var 'aux254' order represents '7' with '3397'
-3395 3397 0
c Var 'aux254' direct represents '7' with '3398'
3395 -3397 3398 0
-3398 3397 0
-3398 -3395 0
c Var 'aux254' order represents '8' with '3399'
-3397 3399 0
c Var 'aux254' direct represents '8' with '3400'
3397 -3399 3400 0
-3400 3399 0
-3400 -3397 0
c Var 'aux254' order represents '9' with '3401'
-3399 3401 0
c Var 'aux254' direct represents '9' with '3402'
3399 -3401 3402 0
-3402 3401 0
-3402 -3399 0
c Var 'aux254' order represents '10' with '3403'
-3401 3403 0
c Var 'aux254' direct represents '10' with '3404'
3401 -3403 3404 0
-3404 3403 0
-3404 -3401 0
c Var 'aux254' order represents '11' with '3405'
-3403 3405 0
c Var 'aux254' direct represents '11' with '3406'
3403 -3405 3406 0
-3406 3405 0
-3406 -3403 0
c Var 'aux254' order represents '12' with '3407'
-3405 3407 0
c Var 'aux254' direct represents '12' with '3408'
3405 -3407 3408 0
-3408 3407 0
-3408 -3405 0
c Var 'aux254' order represents '13' with '3409'
-3407 3409 0
c Var 'aux254' direct represents '13' with '3410'
3407 -3409 3410 0
-3410 3409 0
-3410 -3407 0
c Var 'aux254' order represents '14' with '3411'
-3409 3411 0
c Var 'aux254' direct represents '14' with '3412'
3409 -3411 3412 0
-3412 3411 0
-3412 -3409 0
c Var 'aux254' order represents '15' with '3413'
-3411 3413 0
c Var 'aux254' direct represents '15' with '3414'
3411 -3413 3414 0
-3414 3413 0
-3414 -3411 0
c Var 'aux254' direct represents '16' with '-3413'
3386 3388 3390 3392 3394 3396 3398 3400 3402 3404 3406 3408 3410 3412 3414 -3413 0
c Encoding variable: aux255 with domain: int(0..14) (representing constraint (shift(variant_fields_00003_00006_00005, -1) + shift(variant_fields_00003_00006_00004, -1)))
c Both direct and order encoding.
c Var 'aux255' order represents '0' with '3415'
c Var 'aux255' direct represents '0' with '3415'
c Var 'aux255' order represents '1' with '3416'
-3415 3416 0
c Var 'aux255' direct represents '1' with '3417'
3415 -3416 3417 0
-3417 3416 0
-3417 -3415 0
c Var 'aux255' order represents '2' with '3418'
-3416 3418 0
c Var 'aux255' direct represents '2' with '3419'
3416 -3418 3419 0
-3419 3418 0
-3419 -3416 0
c Var 'aux255' order represents '3' with '3420'
-3418 3420 0
c Var 'aux255' direct represents '3' with '3421'
3418 -3420 3421 0
-3421 3420 0
-3421 -3418 0
c Var 'aux255' order represents '4' with '3422'
-3420 3422 0
c Var 'aux255' direct represents '4' with '3423'
3420 -3422 3423 0
-3423 3422 0
-3423 -3420 0
c Var 'aux255' order represents '5' with '3424'
-3422 3424 0
c Var 'aux255' direct represents '5' with '3425'
3422 -3424 3425 0
-3425 3424 0
-3425 -3422 0
c Var 'aux255' order represents '6' with '3426'
-3424 3426 0
c Var 'aux255' direct represents '6' with '3427'
3424 -3426 3427 0
-3427 3426 0
-3427 -3424 0
c Var 'aux255' order represents '7' with '3428'
-3426 3428 0
c Var 'aux255' direct represents '7' with '3429'
3426 -3428 3429 0
-3429 3428 0
-3429 -3426 0
c Var 'aux255' order represents '8' with '3430'
-3428 3430 0
c Var 'aux255' direct represents '8' with '3431'
3428 -3430 3431 0
-3431 3430 0
-3431 -3428 0
c Var 'aux255' order represents '9' with '3432'
-3430 3432 0
c Var 'aux255' direct represents '9' with '3433'
3430 -3432 3433 0
-3433 3432 0
-3433 -3430 0
c Var 'aux255' order represents '10' with '3434'
-3432 3434 0
c Var 'aux255' direct represents '10' with '3435'
3432 -3434 3435 0
-3435 3434 0
-3435 -3432 0
c Var 'aux255' order represents '11' with '3436'
-3434 3436 0
c Var 'aux255' direct represents '11' with '3437'
3434 -3436 3437 0
-3437 3436 0
-3437 -3434 0
c Var 'aux255' order represents '12' with '3438'
-3436 3438 0
c Var 'aux255' direct represents '12' with '3439'
3436 -3438 3439 0
-3439 3438 0
-3439 -3436 0
c Var 'aux255' order represents '13' with '3440'
-3438 3440 0
c Var 'aux255' direct represents '13' with '3441'
3438 -3440 3441 0
-3441 3440 0
-3441 -3438 0
c Var 'aux255' direct represents '14' with '-3440'
3415 3417 3419 3421 3423 3425 3427 3429 3431 3433 3435 3437 3439 3441 -3440 0
c Encoding variable: aux256 with domain: int(0..19) (representing constraint (aux21 + aux253))
c Both direct and order encoding.
c Var 'aux256' order represents '0' with '3442'
c Var 'aux256' direct represents '0' with '3442'
c Var 'aux256' order represents '1' with '3443'
-3442 3443 0
c Var 'aux256' direct represents '1' with '3444'
3442 -3443 3444 0
-3444 3443 0
-3444 -3442 0
c Var 'aux256' order represents '2' with '3445'
-3443 3445 0
c Var 'aux256' direct represents '2' with '3446'
3443 -3445 3446 0
-3446 3445 0
-3446 -3443 0
c Var 'aux256' order represents '3' with '3447'
-3445 3447 0
c Var 'aux256' direct represents '3' with '3448'
3445 -3447 3448 0
-3448 3447 0
-3448 -3445 0
c Var 'aux256' order represents '4' with '3449'
-3447 3449 0
c Var 'aux256' direct represents '4' with '3450'
3447 -3449 3450 0
-3450 3449 0
-3450 -3447 0
c Var 'aux256' order represents '5' with '3451'
-3449 3451 0
c Var 'aux256' direct represents '5' with '3452'
3449 -3451 3452 0
-3452 3451 0
-3452 -3449 0
c Var 'aux256' order represents '6' with '3453'
-3451 3453 0
c Var 'aux256' direct represents '6' with '3454'
3451 -3453 3454 0
-3454 3453 0
-3454 -3451 0
c Var 'aux256' order represents '7' with '3455'
-3453 3455 0
c Var 'aux256' direct represents '7' with '3456'
3453 -3455 3456 0
-3456 3455 0
-3456 -3453 0
c Var 'aux256' order represents '8' with '3457'
-3455 3457 0
c Var 'aux256' direct represents '8' with '3458'
3455 -3457 3458 0
-3458 3457 0
-3458 -3455 0
c Var 'aux256' order represents '9' with '3459'
-3457 3459 0
c Var 'aux256' direct represents '9' with '3460'
3457 -3459 3460 0
-3460 3459 0
-3460 -3457 0
c Var 'aux256' order represents '10' with '3461'
-3459 3461 0
c Var 'aux256' direct represents '10' with '3462'
3459 -3461 3462 0
-3462 3461 0
-3462 -3459 0
c Var 'aux256' order represents '11' with '3463'
-3461 3463 0
c Var 'aux256' direct represents '11' with '3464'
3461 -3463 3464 0
-3464 3463 0
-3464 -3461 0
c Var 'aux256' order represents '12' with '3465'
-3463 3465 0
c Var 'aux256' direct represents '12' with '3466'
3463 -3465 3466 0
-3466 3465 0
-3466 -3463 0
c Var 'aux256' order represents '13' with '3467'
-3465 3467 0
c Var 'aux256' direct represents '13' with '3468'
3465 -3467 3468 0
-3468 3467 0
-3468 -3465 0
c Var 'aux256' order represents '14' with '3469'
-3467 3469 0
c Var 'aux256' direct represents '14' with '3470'
3467 -3469 3470 0
-3470 3469 0
-3470 -3467 0
c Var 'aux256' order represents '15' with '3471'
-3469 3471 0
c Var 'aux256' direct represents '15' with '3472'
3469 -3471 3472 0
-3472 3471 0
-3472 -3469 0
c Var 'aux256' order represents '16' with '3473'
-3471 3473 0
c Var 'aux256' direct represents '16' with '3474'
3471 -3473 3474 0
-3474 3473 0
-3474 -3471 0
c Var 'aux256' order represents '17' with '3475'
-3473 3475 0
c Var 'aux256' direct represents '17' with '3476'
3473 -3475 3476 0
-3476 3475 0
-3476 -3473 0
c Var 'aux256' order represents '18' with '3477'
-3475 3477 0
c Var 'aux256' direct represents '18' with '3478'
3475 -3477 3478 0
-3478 3477 0
-3478 -3475 0
c Var 'aux256' direct represents '19' with '-3477'
3442 3444 3446 3448 3450 3452 3454 3456 3458 3460 3462 3464 3466 3468 3470 3472 3474 3476 3478 -3477 0
c Encoding variable: aux257 with domain: int(0..10) (representing constraint (shift(variant_fields_00003_00008_00001, -5) + aux23))
c Both direct and order encoding.
c Var 'aux257' order represents '0' with '3479'
c Var 'aux257' direct represents '0' with '3479'
c Var 'aux257' order represents '1' with '3480'
-3479 3480 0
c Var 'aux257' direct represents '1' with '3481'
3479 -3480 3481 0
-3481 3480 0
-3481 -3479 0
c Var 'aux257' order represents '2' with '3482'
-3480 3482 0
c Var 'aux257' direct represents '2' with '3483'
3480 -3482 3483 0
-3483 3482 0
-3483 -3480 0
c Var 'aux257' order represents '3' with '3484'
-3482 3484 0
c Var 'aux257' direct represents '3' with '3485'
3482 -3484 3485 0
-3485 3484 0
-3485 -3482 0
c Var 'aux257' order represents '4' with '3486'
-3484 3486 0
c Var 'aux257' direct represents '4' with '3487'
3484 -3486 3487 0
-3487 3486 0
-3487 -3484 0
c Var 'aux257' order represents '5' with '3488'
-3486 3488 0
c Var 'aux257' direct represents '5' with '3489'
3486 -3488 3489 0
-3489 3488 0
-3489 -3486 0
c Var 'aux257' order represents '6' with '3490'
-3488 3490 0
c Var 'aux257' direct represents '6' with '3491'
3488 -3490 3491 0
-3491 3490 0
-3491 -3488 0
c Var 'aux257' order represents '7' with '3492'
-3490 3492 0
c Var 'aux257' direct represents '7' with '3493'
3490 -3492 3493 0
-3493 3492 0
-3493 -3490 0
c Var 'aux257' order represents '8' with '3494'
-3492 3494 0
c Var 'aux257' direct represents '8' with '3495'
3492 -3494 3495 0
-3495 3494 0
-3495 -3492 0
c Var 'aux257' order represents '9' with '3496'
-3494 3496 0
c Var 'aux257' direct represents '9' with '3497'
3494 -3496 3497 0
-3497 3496 0
-3497 -3494 0
c Var 'aux257' direct represents '10' with '-3496'
3479 3481 3483 3485 3487 3489 3491 3493 3495 3497 -3496 0
c Encoding variable: aux258 with domain: int(0..16) (representing constraint (shift(variant_fields_00003_00008_00002, -1) + shift(variant_fields_00003_00008_00003, -1)))
c Both direct and order encoding.
c Var 'aux258' order represents '0' with '3498'
c Var 'aux258' direct represents '0' with '3498'
c Var 'aux258' order represents '1' with '3499'
-3498 3499 0
c Var 'aux258' direct represents '1' with '3500'
3498 -3499 3500 0
-3500 3499 0
-3500 -3498 0
c Var 'aux258' order represents '2' with '3501'
-3499 3501 0
c Var 'aux258' direct represents '2' with '3502'
3499 -3501 3502 0
-3502 3501 0
-3502 -3499 0
c Var 'aux258' order represents '3' with '3503'
-3501 3503 0
c Var 'aux258' direct represents '3' with '3504'
3501 -3503 3504 0
-3504 3503 0
-3504 -3501 0
c Var 'aux258' order represents '4' with '3505'
-3503 3505 0
c Var 'aux258' direct represents '4' with '3506'
3503 -3505 3506 0
-3506 3505 0
-3506 -3503 0
c Var 'aux258' order represents '5' with '3507'
-3505 3507 0
c Var 'aux258' direct represents '5' with '3508'
3505 -3507 3508 0
-3508 3507 0
-3508 -3505 0
c Var 'aux258' order represents '6' with '3509'
-3507 3509 0
c Var 'aux258' direct represents '6' with '3510'
3507 -3509 3510 0
-3510 3509 0
-3510 -3507 0
c Var 'aux258' order represents '7' with '3511'
-3509 3511 0
c Var 'aux258' direct represents '7' with '3512'
3509 -3511 3512 0
-3512 3511 0
-3512 -3509 0
c Var 'aux258' order represents '8' with '3513'
-3511 3513 0
c Var 'aux258' direct represents '8' with '3514'
3511 -3513 3514 0
-3514 3513 0
-3514 -3511 0
c Var 'aux258' order represents '9' with '3515'
-3513 3515 0
c Var 'aux258' direct represents '9' with '3516'
3513 -3515 3516 0
-3516 3515 0
-3516 -3513 0
c Var 'aux258' order represents '10' with '3517'
-3515 3517 0
c Var 'aux258' direct represents '10' with '3518'
3515 -3517 3518 0
-3518 3517 0
-3518 -3515 0
c Var 'aux258' order represents '11' with '3519'
-3517 3519 0
c Var 'aux258' direct represents '11' with '3520'
3517 -3519 3520 0
-3520 3519 0
-3520 -3517 0
c Var 'aux258' order represents '12' with '3521'
-3519 3521 0
c Var 'aux258' direct represents '12' with '3522'
3519 -3521 3522 0
-3522 3521 0
-3522 -3519 0
c Var 'aux258' order represents '13' with '3523'
-3521 3523 0
c Var 'aux258' direct represents '13' with '3524'
3521 -3523 3524 0
-3524 3523 0
-3524 -3521 0
c Var 'aux258' order represents '14' with '3525'
-3523 3525 0
c Var 'aux258' direct represents '14' with '3526'
3523 -3525 3526 0
-3526 3525 0
-3526 -3523 0
c Var 'aux258' order represents '15' with '3527'
-3525 3527 0
c Var 'aux258' direct represents '15' with '3528'
3525 -3527 3528 0
-3528 3527 0
-3528 -3525 0
c Var 'aux258' direct represents '16' with '-3527'
3498 3500 3502 3504 3506 3508 3510 3512 3514 3516 3518 3520 3522 3524 3526 3528 -3527 0
c Encoding variable: aux259 with domain: int(0,2..14) (representing constraint (shift(variant_fields_00003_00008_00004, -2) + shift(variant_fields_00003_00008_00005, -2)))
c Both direct and order encoding.
c Var 'aux259' order represents '0' with '3529'
c Var 'aux259' direct represents '0' with '3529'
c Var 'aux259' order represents '2' with '3530'
-3529 3530 0
c Var 'aux259' direct represents '2' with '3531'
3529 -3530 3531 0
-3531 3530 0
-3531 -3529 0
c Var 'aux259' order represents '3' with '3532'
-3530 3532 0
c Var 'aux259' direct represents '3' with '3533'
3530 -3532 3533 0
-3533 3532 0
-3533 -3530 0
c Var 'aux259' order represents '4' with '3534'
-3532 3534 0
c Var 'aux259' direct represents '4' with '3535'
3532 -3534 3535 0
-3535 3534 0
-3535 -3532 0
c Var 'aux259' order represents '5' with '3536'
-3534 3536 0
c Var 'aux259' direct represents '5' with '3537'
3534 -3536 3537 0
-3537 3536 0
-3537 -3534 0
c Var 'aux259' order represents '6' with '3538'
-3536 3538 0
c Var 'aux259' direct represents '6' with '3539'
3536 -3538 3539 0
-3539 3538 0
-3539 -3536 0
c Var 'aux259' order represents '7' with '3540'
-3538 3540 0
c Var 'aux259' direct represents '7' with '3541'
3538 -3540 3541 0
-3541 3540 0
-3541 -3538 0
c Var 'aux259' order represents '8' with '3542'
-3540 3542 0
c Var 'aux259' direct represents '8' with '3543'
3540 -3542 3543 0
-3543 3542 0
-3543 -3540 0
c Var 'aux259' order represents '9' with '3544'
-3542 3544 0
c Var 'aux259' direct represents '9' with '3545'
3542 -3544 3545 0
-3545 3544 0
-3545 -3542 0
c Var 'aux259' order represents '10' with '3546'
-3544 3546 0
c Var 'aux259' direct represents '10' with '3547'
3544 -3546 3547 0
-3547 3546 0
-3547 -3544 0
c Var 'aux259' order represents '11' with '3548'
-3546 3548 0
c Var 'aux259' direct represents '11' with '3549'
3546 -3548 3549 0
-3549 3548 0
-3549 -3546 0
c Var 'aux259' order represents '12' with '3550'
-3548 3550 0
c Var 'aux259' direct represents '12' with '3551'
3548 -3550 3551 0
-3551 3550 0
-3551 -3548 0
c Var 'aux259' order represents '13' with '3552'
-3550 3552 0
c Var 'aux259' direct represents '13' with '3553'
3550 -3552 3553 0
-3553 3552 0
-3553 -3550 0
c Var 'aux259' direct represents '14' with '-3552'
3529 3531 3533 3535 3537 3539 3541 3543 3545 3547 3549 3551 3553 -3552 0
c Encoding variable: aux260 with domain: int(0,2..18) (representing constraint (aux24 + aux25))
c Both direct and order encoding.
c Var 'aux260' order represents '0' with '3554'
c Var 'aux260' direct represents '0' with '3554'
c Var 'aux260' order represents '2' with '3555'
-3554 3555 0
c Var 'aux260' direct represents '2' with '3556'
3554 -3555 3556 0
-3556 3555 0
-3556 -3554 0
c Var 'aux260' order represents '3' with '3557'
-3555 3557 0
c Var 'aux260' direct represents '3' with '3558'
3555 -3557 3558 0
-3558 3557 0
-3558 -3555 0
c Var 'aux260' order represents '4' with '3559'
-3557 3559 0
c Var 'aux260' direct represents '4' with '3560'
3557 -3559 3560 0
-3560 3559 0
-3560 -3557 0
c Var 'aux260' order represents '5' with '3561'
-3559 3561 0
c Var 'aux260' direct represents '5' with '3562'
3559 -3561 3562 0
-3562 3561 0
-3562 -3559 0
c Var 'aux260' order represents '6' with '3563'
-3561 3563 0
c Var 'aux260' direct represents '6' with '3564'
3561 -3563 3564 0
-3564 3563 0
-3564 -3561 0
c Var 'aux260' order represents '7' with '3565'
-3563 3565 0
c Var 'aux260' direct represents '7' with '3566'
3563 -3565 3566 0
-3566 3565 0
-3566 -3563 0
c Var 'aux260' order represents '8' with '3567'
-3565 3567 0
c Var 'aux260' direct represents '8' with '3568'
3565 -3567 3568 0
-3568 3567 0
-3568 -3565 0
c Var 'aux260' order represents '9' with '3569'
-3567 3569 0
c Var 'aux260' direct represents '9' with '3570'
3567 -3569 3570 0
-3570 3569 0
-3570 -3567 0
c Var 'aux260' order represents '10' with '3571'
-3569 3571 0
c Var 'aux260' direct represents '10' with '3572'
3569 -3571 3572 0
-3572 3571 0
-3572 -3569 0
c Var 'aux260' order represents '11' with '3573'
-3571 3573 0
c Var 'aux260' direct represents '11' with '3574'
3571 -3573 3574 0
-3574 3573 0
-3574 -3571 0
c Var 'aux260' order represents '12' with '3575'
-3573 3575 0
c Var 'aux260' direct represents '12' with '3576'
3573 -3575 3576 0
-3576 3575 0
-3576 -3573 0
c Var 'aux260' order represents '13' with '3577'
-3575 3577 0
c Var 'aux260' direct represents '13' with '3578'
3575 -3577 3578 0
-3578 3577 0
-3578 -3575 0
c Var 'aux260' order represents '14' with '3579'
-3577 3579 0
c Var 'aux260' direct represents '14' with '3580'
3577 -3579 3580 0
-3580 3579 0
-3580 -3577 0
c Var 'aux260' order represents '15' with '3581'
-3579 3581 0
c Var 'aux260' direct represents '15' with '3582'
3579 -3581 3582 0
-3582 3581 0
-3582 -3579 0
c Var 'aux260' order represents '16' with '3583'
-3581 3583 0
c Var 'aux260' direct represents '16' with '3584'
3581 -3583 3584 0
-3584 3583 0
-3584 -3581 0
c Var 'aux260' order represents '17' with '3585'
-3583 3585 0
c Var 'aux260' direct represents '17' with '3586'
3583 -3585 3586 0
-3586 3585 0
-3586 -3583 0
c Var 'aux260' direct represents '18' with '-3585'
3554 3556 3558 3560 3562 3564 3566 3568 3570 3572 3574 3576 3578 3580 3582 3584 3586 -3585 0
c Encoding variable: aux261 with domain: int(0..24) (representing constraint (aux257 + aux259))
c Both direct and order encoding.
c Var 'aux261' order represents '0' with '3587'
c Var 'aux261' direct represents '0' with '3587'
c Var 'aux261' order represents '1' with '3588'
-3587 3588 0
c Var 'aux261' direct represents '1' with '3589'
3587 -3588 3589 0
-3589 3588 0
-3589 -3587 0
c Var 'aux261' order represents '2' with '3590'
-3588 3590 0
c Var 'aux261' direct represents '2' with '3591'
3588 -3590 3591 0
-3591 3590 0
-3591 -3588 0
c Var 'aux261' order represents '3' with '3592'
-3590 3592 0
c Var 'aux261' direct represents '3' with '3593'
3590 -3592 3593 0
-3593 3592 0
-3593 -3590 0
c Var 'aux261' order represents '4' with '3594'
-3592 3594 0
c Var 'aux261' direct represents '4' with '3595'
3592 -3594 3595 0
-3595 3594 0
-3595 -3592 0
c Var 'aux261' order represents '5' with '3596'
-3594 3596 0
c Var 'aux261' direct represents '5' with '3597'
3594 -3596 3597 0
-3597 3596 0
-3597 -3594 0
c Var 'aux261' order represents '6' with '3598'
-3596 3598 0
c Var 'aux261' direct represents '6' with '3599'
3596 -3598 3599 0
-3599 3598 0
-3599 -3596 0
c Var 'aux261' order represents '7' with '3600'
-3598 3600 0
c Var 'aux261' direct represents '7' with '3601'
3598 -3600 3601 0
-3601 3600 0
-3601 -3598 0
c Var 'aux261' order represents '8' with '3602'
-3600 3602 0
c Var 'aux261' direct represents '8' with '3603'
3600 -3602 3603 0
-3603 3602 0
-3603 -3600 0
c Var 'aux261' order represents '9' with '3604'
-3602 3604 0
c Var 'aux261' direct represents '9' with '3605'
3602 -3604 3605 0
-3605 3604 0
-3605 -3602 0
c Var 'aux261' order represents '10' with '3606'
-3604 3606 0
c Var 'aux261' direct represents '10' with '3607'
3604 -3606 3607 0
-3607 3606 0
-3607 -3604 0
c Var 'aux261' order represents '11' with '3608'
-3606 3608 0
c Var 'aux261' direct represents '11' with '3609'
3606 -3608 3609 0
-3609 3608 0
-3609 -3606 0
c Var 'aux261' order represents '12' with '3610'
-3608 3610 0
c Var 'aux261' direct represents '12' with '3611'
3608 -3610 3611 0
-3611 3610 0
-3611 -3608 0
c Var 'aux261' order represents '13' with '3612'
-3610 3612 0
c Var 'aux261' direct represents '13' with '3613'
3610 -3612 3613 0
-3613 3612 0
-3613 -3610 0
c Var 'aux261' order represents '14' with '3614'
-3612 3614 0
c Var 'aux261' direct represents '14' with '3615'
3612 -3614 3615 0
-3615 3614 0
-3615 -3612 0
c Var 'aux261' order represents '15' with '3616'
-3614 3616 0
c Var 'aux261' direct represents '15' with '3617'
3614 -3616 3617 0
-3617 3616 0
-3617 -3614 0
c Var 'aux261' order represents '16' with '3618'
-3616 3618 0
c Var 'aux261' direct represents '16' with '3619'
3616 -3618 3619 0
-3619 3618 0
-3619 -3616 0
c Var 'aux261' order represents '17' with '3620'
-3618 3620 0
c Var 'aux261' direct represents '17' with '3621'
3618 -3620 3621 0
-3621 3620 0
-3621 -3618 0
c Var 'aux261' order represents '18' with '3622'
-3620 3622 0
c Var 'aux261' direct represents '18' with '3623'
3620 -3622 3623 0
-3623 3622 0
-3623 -3620 0
c Var 'aux261' order represents '19' with '3624'
-3622 3624 0
c Var 'aux261' direct represents '19' with '3625'
3622 -3624 3625 0
-3625 3624 0
-3625 -3622 0
c Var 'aux261' order represents '20' with '3626'
-3624 3626 0
c Var 'aux261' direct represents '20' with '3627'
3624 -3626 3627 0
-3627 3626 0
-3627 -3624 0
c Var 'aux261' order represents '21' with '3628'
-3626 3628 0
c Var 'aux261' direct represents '21' with '3629'
3626 -3628 3629 0
-3629 3628 0
-3629 -3626 0
c Var 'aux261' order represents '22' with '3630'
-3628 3630 0
c Var 'aux261' direct represents '22' with '3631'
3628 -3630 3631 0
-3631 3630 0
-3631 -3628 0
c Var 'aux261' order represents '23' with '3632'
-3630 3632 0
c Var 'aux261' direct represents '23' with '3633'
3630 -3632 3633 0
-3633 3632 0
-3633 -3630 0
c Var 'aux261' direct represents '24' with '-3632'
3587 3589 3591 3593 3595 3597 3599 3601 3603 3605 3607 3609 3611 3613 3615 3617 3619 3621 3623 3625 3627 3629 3631 3633 -3632 0
c Encoding variable: aux262 with domain: int(0..3,7..8) (representing constraint (shift(variant_fields_00004_00002_00001, -5) + aux27))
c Both direct and order encoding.
c Var 'aux262' order represents '0' with '3634'
c Var 'aux262' direct represents '0' with '3634'
c Var 'aux262' order represents '1' with '3635'
-3634 3635 0
c Var 'aux262' direct represents '1' with '3636'
3634 -3635 3636 0
-3636 3635 0
-3636 -3634 0
c Var 'aux262' order represents '2' with '3637'
-3635 3637 0
c Var 'aux262' direct represents '2' with '3638'
3635 -3637 3638 0
-3638 3637 0
-3638 -3635 0
c Var 'aux262' order represents '3' with '3639'
-3637 3639 0
c Var 'aux262' direct represents '3' with '3640'
3637 -3639 3640 0
-3640 3639 0
-3640 -3637 0
c Var 'aux262' order represents '7' with '3641'
-3639 3641 0
c Var 'aux262' direct represents '7' with '3642'
3639 -3641 3642 0
-3642 3641 0
-3642 -3639 0
c Var 'aux262' direct represents '8' with '-3641'
3634 3636 3638 3640 3642 -3641 0
c Encoding variable: aux263 with domain: int(0..15) (representing constraint (aux262 + shift(variant_fields_00004_00002_00004, -2)))
c Both direct and order encoding.
c Var 'aux263' order represents '0' with '3643'
c Var 'aux263' direct represents '0' with '3643'
c Var 'aux263' order represents '1' with '3644'
-3643 3644 0
c Var 'aux263' direct represents '1' with '3645'
3643 -3644 3645 0
-3645 3644 0
-3645 -3643 0
c Var 'aux263' order represents '2' with '3646'
-3644 3646 0
c Var 'aux263' direct represents '2' with '3647'
3644 -3646 3647 0
-3647 3646 0
-3647 -3644 0
c Var 'aux263' order represents '3' with '3648'
-3646 3648 0
c Var 'aux263' direct represents '3' with '3649'
3646 -3648 3649 0
-3649 3648 0
-3649 -3646 0
c Var 'aux263' order represents '4' with '3650'
-3648 3650 0
c Var 'aux263' direct represents '4' with '3651'
3648 -3650 3651 0
-3651 3650 0
-3651 -3648 0
c Var 'aux263' order represents '5' with '3652'
-3650 3652 0
c Var 'aux263' direct represents '5' with '3653'
3650 -3652 3653 0
-3653 3652 0
-3653 -3650 0
c Var 'aux263' order represents '6' with '3654'
-3652 3654 0
c Var 'aux263' direct represents '6' with '3655'
3652 -3654 3655 0
-3655 3654 0
-3655 -3652 0
c Var 'aux263' order represents '7' with '3656'
-3654 3656 0
c Var 'aux263' direct represents '7' with '3657'
3654 -3656 3657 0
-3657 3656 0
-3657 -3654 0
c Var 'aux263' order represents '8' with '3658'
-3656 3658 0
c Var 'aux263' direct represents '8' with '3659'
3656 -3658 3659 0
-3659 3658 0
-3659 -3656 0
c Var 'aux263' order represents '9' with '3660'
-3658 3660 0
c Var 'aux263' direct represents '9' with '3661'
3658 -3660 3661 0
-3661 3660 0
-3661 -3658 0
c Var 'aux263' order represents '10' with '3662'
-3660 3662 0
c Var 'aux263' direct represents '10' with '3663'
3660 -3662 3663 0
-3663 3662 0
-3663 -3660 0
c Var 'aux263' order represents '11' with '3664'
-3662 3664 0
c Var 'aux263' direct represents '11' with '3665'
3662 -3664 3665 0
-3665 3664 0
-3665 -3662 0
c Var 'aux263' order represents '12' with '3666'
-3664 3666 0
c Var 'aux263' direct represents '12' with '3667'
3664 -3666 3667 0
-3667 3666 0
-3667 -3664 0
c Var 'aux263' order represents '13' with '3668'
-3666 3668 0
c Var 'aux263' direct represents '13' with '3669'
3666 -3668 3669 0
-3669 3668 0
-3669 -3666 0
c Var 'aux263' order represents '14' with '3670'
-3668 3670 0
c Var 'aux263' direct represents '14' with '3671'
3668 -3670 3671 0
-3671 3670 0
-3671 -3668 0
c Var 'aux263' direct represents '15' with '-3670'
3643 3645 3647 3649 3651 3653 3655 3657 3659 3661 3663 3665 3667 3669 3671 -3670 0
c Encoding variable: aux264 with domain: int(0..14) (representing constraint (shift(variant_fields_00004_00002_00005, -2) + shift(variant_fields_00004_00002_00002, -2)))
c Both direct and order encoding.
c Var 'aux264' order represents '0' with '3672'
c Var 'aux264' direct represents '0' with '3672'
c Var 'aux264' order represents '1' with '3673'
-3672 3673 0
c Var 'aux264' direct represents '1' with '3674'
3672 -3673 3674 0
-3674 3673 0
-3674 -3672 0
c Var 'aux264' order represents '2' with '3675'
-3673 3675 0
c Var 'aux264' direct represents '2' with '3676'
3673 -3675 3676 0
-3676 3675 0
-3676 -3673 0
c Var 'aux264' order represents '3' with '3677'
-3675 3677 0
c Var 'aux264' direct represents '3' with '3678'
3675 -3677 3678 0
-3678 3677 0
-3678 -3675 0
c Var 'aux264' order represents '4' with '3679'
-3677 3679 0
c Var 'aux264' direct represents '4' with '3680'
3677 -3679 3680 0
-3680 3679 0
-3680 -3677 0
c Var 'aux264' order represents '5' with '3681'
-3679 3681 0
c Var 'aux264' direct represents '5' with '3682'
3679 -3681 3682 0
-3682 3681 0
-3682 -3679 0
c Var 'aux264' order represents '6' with '3683'
-3681 3683 0
c Var 'aux264' direct represents '6' with '3684'
3681 -3683 3684 0
-3684 3683 0
-3684 -3681 0
c Var 'aux264' order represents '7' with '3685'
-3683 3685 0
c Var 'aux264' direct represents '7' with '3686'
3683 -3685 3686 0
-3686 3685 0
-3686 -3683 0
c Var 'aux264' order represents '8' with '3687'
-3685 3687 0
c Var 'aux264' direct represents '8' with '3688'
3685 -3687 3688 0
-3688 3687 0
-3688 -3685 0
c Var 'aux264' order represents '9' with '3689'
-3687 3689 0
c Var 'aux264' direct represents '9' with '3690'
3687 -3689 3690 0
-3690 3689 0
-3690 -3687 0
c Var 'aux264' order represents '10' with '3691'
-3689 3691 0
c Var 'aux264' direct represents '10' with '3692'
3689 -3691 3692 0
-3692 3691 0
-3692 -3689 0
c Var 'aux264' order represents '11' with '3693'
-3691 3693 0
c Var 'aux264' direct represents '11' with '3694'
3691 -3693 3694 0
-3694 3693 0
-3694 -3691 0
c Var 'aux264' order represents '12' with '3695'
-3693 3695 0
c Var 'aux264' direct represents '12' with '3696'
3693 -3695 3696 0
-3696 3695 0
-3696 -3693 0
c Var 'aux264' order represents '13' with '3697'
-3695 3697 0
c Var 'aux264' direct represents '13' with '3698'
3695 -3697 3698 0
-3698 3697 0
-3698 -3695 0
c Var 'aux264' direct represents '14' with '-3697'
3672 3674 3676 3678 3680 3682 3684 3686 3688 3690 3692 3694 3696 3698 -3697 0
c Encoding variable: aux265 with domain: int(0..1,4,6,8) (representing constraint (shift(variant_fields_00004_00007_00001, -4) + shift(variant_fields_00004_00007_00004, -1)))
c Both direct and order encoding.
c Var 'aux265' order represents '0' with '3699'
c Var 'aux265' direct represents '0' with '3699'
c Var 'aux265' order represents '1' with '3700'
-3699 3700 0
c Var 'aux265' direct represents '1' with '3701'
3699 -3700 3701 0
-3701 3700 0
-3701 -3699 0
c Var 'aux265' order represents '4' with '3702'
-3700 3702 0
c Var 'aux265' direct represents '4' with '3703'
3700 -3702 3703 0
-3703 3702 0
-3703 -3700 0
c Var 'aux265' order represents '6' with '3704'
-3702 3704 0
c Var 'aux265' direct represents '6' with '3705'
3702 -3704 3705 0
-3705 3704 0
-3705 -3702 0
c Var 'aux265' direct represents '8' with '-3704'
3699 3701 3703 3705 -3704 0
c Encoding variable: aux266 with domain: int(0..2) (representing constraint ((field_00009_00001=2) + (field_00003_00001=2)))
c Both direct and order encoding.
c Var 'aux266' order represents '0' with '3706'
c Var 'aux266' direct represents '0' with '3706'
c Var 'aux266' order represents '1' with '3707'
-3706 3707 0
c Var 'aux266' direct represents '1' with '3708'
3706 -3707 3708 0
-3708 3707 0
-3708 -3706 0
c Var 'aux266' direct represents '2' with '-3707'
3706 3708 -3707 0
c Encoding variable: aux267 with domain: int(0..2) (representing constraint ((field_00009_00001=5) + (field_00006_00001=5)))
c Both direct and order encoding.
c Var 'aux267' order represents '0' with '3709'
c Var 'aux267' direct represents '0' with '3709'
c Var 'aux267' order represents '1' with '3710'
-3709 3710 0
c Var 'aux267' direct represents '1' with '3711'
3709 -3710 3711 0
-3711 3710 0
-3711 -3709 0
c Var 'aux267' direct represents '2' with '-3710'
3709 3711 -3710 0
c Encoding variable: aux268 with domain: int(0..2) (representing constraint ((field_00001_00001=5) + (field_00007_00001=5)))
c Both direct and order encoding.
c Var 'aux268' order represents '0' with '3712'
c Var 'aux268' direct represents '0' with '3712'
c Var 'aux268' order represents '1' with '3713'
-3712 3713 0
c Var 'aux268' direct represents '1' with '3714'
3712 -3713 3714 0
-3714 3713 0
-3714 -3712 0
c Var 'aux268' direct represents '2' with '-3713'
3712 3714 -3713 0
c Encoding variable: aux269 with domain: int(0..2) (representing constraint ((field_00008_00001=5) + (field_00003_00001=5)))
c Both direct and order encoding.
c Var 'aux269' order represents '0' with '3715'
c Var 'aux269' direct represents '0' with '3715'
c Var 'aux269' order represents '1' with '3716'
-3715 3716 0
c Var 'aux269' direct represents '1' with '3717'
3715 -3716 3717 0
-3717 3716 0
-3717 -3715 0
c Var 'aux269' direct represents '2' with '-3716'
3715 3717 -3716 0
c Encoding variable: aux270 with domain: int(0..3) (representing constraint ((field_00005_00001=5) + aux269))
c Both direct and order encoding.
c Var 'aux270' order represents '0' with '3718'
c Var 'aux270' direct represents '0' with '3718'
c Var 'aux270' order represents '1' with '3719'
-3718 3719 0
c Var 'aux270' direct represents '1' with '3720'
3718 -3719 3720 0
-3720 3719 0
-3720 -3718 0
c Var 'aux270' order represents '2' with '3721'
-3719 3721 0
c Var 'aux270' direct represents '2' with '3722'
3719 -3721 3722 0
-3722 3721 0
-3722 -3719 0
c Var 'aux270' direct represents '3' with '-3721'
3718 3720 3722 -3721 0
c Encoding variable: aux271 with domain: int(0..2) (representing constraint ((field_00009_00001=6) + (field_00006_00001=6)))
c Both direct and order encoding.
c Var 'aux271' order represents '0' with '3723'
c Var 'aux271' direct represents '0' with '3723'
c Var 'aux271' order represents '1' with '3724'
-3723 3724 0
c Var 'aux271' direct represents '1' with '3725'
3723 -3724 3725 0
-3725 3724 0
-3725 -3723 0
c Var 'aux271' direct represents '2' with '-3724'
3723 3725 -3724 0
c Encoding variable: aux272 with domain: int(0..2) (representing constraint ((field_00001_00001=6) + (field_00007_00001=6)))
c Both direct and order encoding.
c Var 'aux272' order represents '0' with '3726'
c Var 'aux272' direct represents '0' with '3726'
c Var 'aux272' order represents '1' with '3727'
-3726 3727 0
c Var 'aux272' direct represents '1' with '3728'
3726 -3727 3728 0
-3728 3727 0
-3728 -3726 0
c Var 'aux272' direct represents '2' with '-3727'
3726 3728 -3727 0
c Encoding variable: aux273 with domain: int(0..2) (representing constraint ((field_00008_00001=6) + (field_00003_00001=6)))
c Both direct and order encoding.
c Var 'aux273' order represents '0' with '3729'
c Var 'aux273' direct represents '0' with '3729'
c Var 'aux273' order represents '1' with '3730'
-3729 3730 0
c Var 'aux273' direct represents '1' with '3731'
3729 -3730 3731 0
-3731 3730 0
-3731 -3729 0
c Var 'aux273' direct represents '2' with '-3730'
3729 3731 -3730 0
c Encoding variable: aux274 with domain: int(0..3) (representing constraint ((field_00005_00001=6) + aux273))
c Both direct and order encoding.
c Var 'aux274' order represents '0' with '3732'
c Var 'aux274' direct represents '0' with '3732'
c Var 'aux274' order represents '1' with '3733'
-3732 3733 0
c Var 'aux274' direct represents '1' with '3734'
3732 -3733 3734 0
-3734 3733 0
-3734 -3732 0
c Var 'aux274' order represents '2' with '3735'
-3733 3735 0
c Var 'aux274' direct represents '2' with '3736'
3733 -3735 3736 0
-3736 3735 0
-3736 -3733 0
c Var 'aux274' direct represents '3' with '-3735'
3732 3734 3736 -3735 0
c Encoding variable: aux275 with domain: int(0..2) (representing constraint ((field_00009_00001=7) + (field_00006_00001=7)))
c Both direct and order encoding.
c Var 'aux275' order represents '0' with '3737'
c Var 'aux275' direct represents '0' with '3737'
c Var 'aux275' order represents '1' with '3738'
-3737 3738 0
c Var 'aux275' direct represents '1' with '3739'
3737 -3738 3739 0
-3739 3738 0
-3739 -3737 0
c Var 'aux275' direct represents '2' with '-3738'
3737 3739 -3738 0
c Encoding variable: aux276 with domain: int(0..2) (representing constraint ((field_00001_00001=7) + (field_00007_00001=7)))
c Both direct and order encoding.
c Var 'aux276' order represents '0' with '3740'
c Var 'aux276' direct represents '0' with '3740'
c Var 'aux276' order represents '1' with '3741'
-3740 3741 0
c Var 'aux276' direct represents '1' with '3742'
3740 -3741 3742 0
-3742 3741 0
-3742 -3740 0
c Var 'aux276' direct represents '2' with '-3741'
3740 3742 -3741 0
c Encoding variable: aux277 with domain: int(0..2) (representing constraint ((field_00008_00001=7) + (field_00003_00001=7)))
c Both direct and order encoding.
c Var 'aux277' order represents '0' with '3743'
c Var 'aux277' direct represents '0' with '3743'
c Var 'aux277' order represents '1' with '3744'
-3743 3744 0
c Var 'aux277' direct represents '1' with '3745'
3743 -3744 3745 0
-3745 3744 0
-3745 -3743 0
c Var 'aux277' direct represents '2' with '-3744'
3743 3745 -3744 0
c Encoding variable: aux278 with domain: int(0..3) (representing constraint ((field_00005_00001=7) + aux277))
c Both direct and order encoding.
c Var 'aux278' order represents '0' with '3746'
c Var 'aux278' direct represents '0' with '3746'
c Var 'aux278' order represents '1' with '3747'
-3746 3747 0
c Var 'aux278' direct represents '1' with '3748'
3746 -3747 3748 0
-3748 3747 0
-3748 -3746 0
c Var 'aux278' order represents '2' with '3749'
-3747 3749 0
c Var 'aux278' direct represents '2' with '3750'
3747 -3749 3750 0
-3750 3749 0
-3750 -3747 0
c Var 'aux278' direct represents '3' with '-3749'
3746 3748 3750 -3749 0
c Encoding variable: aux279 with domain: int(0..2) (representing constraint ((field_00009_00001=8) + (field_00006_00001=8)))
c Both direct and order encoding.
c Var 'aux279' order represents '0' with '3751'
c Var 'aux279' direct represents '0' with '3751'
c Var 'aux279' order represents '1' with '3752'
-3751 3752 0
c Var 'aux279' direct represents '1' with '3753'
3751 -3752 3753 0
-3753 3752 0
-3753 -3751 0
c Var 'aux279' direct represents '2' with '-3752'
3751 3753 -3752 0
c Encoding variable: aux280 with domain: int(0..2) (representing constraint ((field_00001_00001=8) + (field_00007_00001=8)))
c Both direct and order encoding.
c Var 'aux280' order represents '0' with '3754'
c Var 'aux280' direct represents '0' with '3754'
c Var 'aux280' order represents '1' with '3755'
-3754 3755 0
c Var 'aux280' direct represents '1' with '3756'
3754 -3755 3756 0
-3756 3755 0
-3756 -3754 0
c Var 'aux280' direct represents '2' with '-3755'
3754 3756 -3755 0
c Encoding variable: aux281 with domain: int(0..2) (representing constraint ((field_00008_00001=8) + (field_00003_00001=8)))
c Both direct and order encoding.
c Var 'aux281' order represents '0' with '3757'
c Var 'aux281' direct represents '0' with '3757'
c Var 'aux281' order represents '1' with '3758'
-3757 3758 0
c Var 'aux281' direct represents '1' with '3759'
3757 -3758 3759 0
-3759 3758 0
-3759 -3757 0
c Var 'aux281' direct represents '2' with '-3758'
3757 3759 -3758 0
c Encoding variable: aux282 with domain: int(0..3) (representing constraint ((field_00005_00001=8) + aux281))
c Both direct and order encoding.
c Var 'aux282' order represents '0' with '3760'
c Var 'aux282' direct represents '0' with '3760'
c Var 'aux282' order represents '1' with '3761'
-3760 3761 0
c Var 'aux282' direct represents '1' with '3762'
3760 -3761 3762 0
-3762 3761 0
-3762 -3760 0
c Var 'aux282' order represents '2' with '3763'
-3761 3763 0
c Var 'aux282' direct represents '2' with '3764'
3761 -3763 3764 0
-3764 3763 0
-3764 -3761 0
c Var 'aux282' direct represents '3' with '-3763'
3760 3762 3764 -3763 0
c Encoding variable: aux283 with domain: int(0..2) (representing constraint ((field_00009_00001=9) + (field_00001_00001=9)))
c Both direct and order encoding.
c Var 'aux283' order represents '0' with '3765'
c Var 'aux283' direct represents '0' with '3765'
c Var 'aux283' order represents '1' with '3766'
-3765 3766 0
c Var 'aux283' direct represents '1' with '3767'
3765 -3766 3767 0
-3767 3766 0
-3767 -3765 0
c Var 'aux283' direct represents '2' with '-3766'
3765 3767 -3766 0
c Encoding variable: aux284 with domain: int(0..2) (representing constraint ((field_00003_00001=9) + (field_00007_00001=9)))
c Both direct and order encoding.
c Var 'aux284' order represents '0' with '3768'
c Var 'aux284' direct represents '0' with '3768'
c Var 'aux284' order represents '1' with '3769'
-3768 3769 0
c Var 'aux284' direct represents '1' with '3770'
3768 -3769 3770 0
-3770 3769 0
-3770 -3768 0
c Var 'aux284' direct represents '2' with '-3769'
3768 3770 -3769 0
c Encoding variable: aux285 with domain: int(0..2) (representing constraint ((field_00004_00002=2) + (field_00006_00002=2)))
c Both direct and order encoding.
c Var 'aux285' order represents '0' with '3771'
c Var 'aux285' direct represents '0' with '3771'
c Var 'aux285' order represents '1' with '3772'
-3771 3772 0
c Var 'aux285' direct represents '1' with '3773'
3771 -3772 3773 0
-3773 3772 0
-3773 -3771 0
c Var 'aux285' direct represents '2' with '-3772'
3771 3773 -3772 0
c Encoding variable: aux286 with domain: int(0..2) (representing constraint ((field_00008_00002=2) + (field_00007_00002=2)))
c Both direct and order encoding.
c Var 'aux286' order represents '0' with '3774'
c Var 'aux286' direct represents '0' with '3774'
c Var 'aux286' order represents '1' with '3775'
-3774 3775 0
c Var 'aux286' direct represents '1' with '3776'
3774 -3775 3776 0
-3776 3775 0
-3776 -3774 0
c Var 'aux286' direct represents '2' with '-3775'
3774 3776 -3775 0
c Encoding variable: aux287 with domain: int(0..2) (representing constraint ((field_00003_00002=2) + (field_00005_00002=2)))
c Both direct and order encoding.
c Var 'aux287' order represents '0' with '3777'
c Var 'aux287' direct represents '0' with '3777'
c Var 'aux287' order represents '1' with '3778'
-3777 3778 0
c Var 'aux287' direct represents '1' with '3779'
3777 -3778 3779 0
-3779 3778 0
-3779 -3777 0
c Var 'aux287' direct represents '2' with '-3778'
3777 3779 -3778 0
c Encoding variable: aux288 with domain: int(0..2) (representing constraint ((field_00007_00002=3) + (field_00006_00002=3)))
c Both direct and order encoding.
c Var 'aux288' order represents '0' with '3780'
c Var 'aux288' direct represents '0' with '3780'
c Var 'aux288' order represents '1' with '3781'
-3780 3781 0
c Var 'aux288' direct represents '1' with '3782'
3780 -3781 3782 0
-3782 3781 0
-3782 -3780 0
c Var 'aux288' direct represents '2' with '-3781'
3780 3782 -3781 0
c Encoding variable: aux289 with domain: int(0..2) (representing constraint ((field_00009_00002=5) + (field_00006_00002=5)))
c Both direct and order encoding.
c Var 'aux289' order represents '0' with '3783'
c Var 'aux289' direct represents '0' with '3783'
c Var 'aux289' order represents '1' with '3784'
-3783 3784 0
c Var 'aux289' direct represents '1' with '3785'
3783 -3784 3785 0
-3785 3784 0
-3785 -3783 0
c Var 'aux289' direct represents '2' with '-3784'
3783 3785 -3784 0
c Encoding variable: aux290 with domain: int(0..2) (representing constraint ((field_00001_00002=5) + (field_00007_00002=5)))
c Both direct and order encoding.
c Var 'aux290' order represents '0' with '3786'
c Var 'aux290' direct represents '0' with '3786'
c Var 'aux290' order represents '1' with '3787'
-3786 3787 0
c Var 'aux290' direct represents '1' with '3788'
3786 -3787 3788 0
-3788 3787 0
-3788 -3786 0
c Var 'aux290' direct represents '2' with '-3787'
3786 3788 -3787 0
c Encoding variable: aux291 with domain: int(0..2) (representing constraint ((field_00008_00002=5) + (field_00003_00002=5)))
c Both direct and order encoding.
c Var 'aux291' order represents '0' with '3789'
c Var 'aux291' direct represents '0' with '3789'
c Var 'aux291' order represents '1' with '3790'
-3789 3790 0
c Var 'aux291' direct represents '1' with '3791'
3789 -3790 3791 0
-3791 3790 0
-3791 -3789 0
c Var 'aux291' direct represents '2' with '-3790'
3789 3791 -3790 0
c Encoding variable: aux292 with domain: int(0..3) (representing constraint ((field_00005_00002=5) + aux291))
c Both direct and order encoding.
c Var 'aux292' order represents '0' with '3792'
c Var 'aux292' direct represents '0' with '3792'
c Var 'aux292' order represents '1' with '3793'
-3792 3793 0
c Var 'aux292' direct represents '1' with '3794'
3792 -3793 3794 0
-3794 3793 0
-3794 -3792 0
c Var 'aux292' order represents '2' with '3795'
-3793 3795 0
c Var 'aux292' direct represents '2' with '3796'
3793 -3795 3796 0
-3796 3795 0
-3796 -3793 0
c Var 'aux292' direct represents '3' with '-3795'
3792 3794 3796 -3795 0
c Encoding variable: aux293 with domain: int(0..2) (representing constraint ((field_00009_00002=6) + (field_00006_00002=6)))
c Both direct and order encoding.
c Var 'aux293' order represents '0' with '3797'
c Var 'aux293' direct represents '0' with '3797'
c Var 'aux293' order represents '1' with '3798'
-3797 3798 0
c Var 'aux293' direct represents '1' with '3799'
3797 -3798 3799 0
-3799 3798 0
-3799 -3797 0
c Var 'aux293' direct represents '2' with '-3798'
3797 3799 -3798 0
c Encoding variable: aux294 with domain: int(0..2) (representing constraint ((field_00001_00002=6) + (field_00007_00002=6)))
c Both direct and order encoding.
c Var 'aux294' order represents '0' with '3800'
c Var 'aux294' direct represents '0' with '3800'
c Var 'aux294' order represents '1' with '3801'
-3800 3801 0
c Var 'aux294' direct represents '1' with '3802'
3800 -3801 3802 0
-3802 3801 0
-3802 -3800 0
c Var 'aux294' direct represents '2' with '-3801'
3800 3802 -3801 0
c Encoding variable: aux295 with domain: int(0..2) (representing constraint ((field_00008_00002=6) + (field_00003_00002=6)))
c Both direct and order encoding.
c Var 'aux295' order represents '0' with '3803'
c Var 'aux295' direct represents '0' with '3803'
c Var 'aux295' order represents '1' with '3804'
-3803 3804 0
c Var 'aux295' direct represents '1' with '3805'
3803 -3804 3805 0
-3805 3804 0
-3805 -3803 0
c Var 'aux295' direct represents '2' with '-3804'
3803 3805 -3804 0
c Encoding variable: aux296 with domain: int(0..3) (representing constraint ((field_00005_00002=6) + aux295))
c Both direct and order encoding.
c Var 'aux296' order represents '0' with '3806'
c Var 'aux296' direct represents '0' with '3806'
c Var 'aux296' order represents '1' with '3807'
-3806 3807 0
c Var 'aux296' direct represents '1' with '3808'
3806 -3807 3808 0
-3808 3807 0
-3808 -3806 0
c Var 'aux296' order represents '2' with '3809'
-3807 3809 0
c Var 'aux296' direct represents '2' with '3810'
3807 -3809 3810 0
-3810 3809 0
-3810 -3807 0
c Var 'aux296' direct represents '3' with '-3809'
3806 3808 3810 -3809 0
c Encoding variable: aux297 with domain: int(0..2) (representing constraint ((field_00004_00002=7) + (field_00006_00002=7)))
c Both direct and order encoding.
c Var 'aux297' order represents '0' with '3811'
c Var 'aux297' direct represents '0' with '3811'
c Var 'aux297' order represents '1' with '3812'
-3811 3812 0
c Var 'aux297' direct represents '1' with '3813'
3811 -3812 3813 0
-3813 3812 0
-3813 -3811 0
c Var 'aux297' direct represents '2' with '-3812'
3811 3813 -3812 0
c Encoding variable: aux298 with domain: int(0..2) (representing constraint ((field_00001_00002=7) + (field_00007_00002=7)))
c Both direct and order encoding.
c Var 'aux298' order represents '0' with '3814'
c Var 'aux298' direct represents '0' with '3814'
c Var 'aux298' order represents '1' with '3815'
-3814 3815 0
c Var 'aux298' direct represents '1' with '3816'
3814 -3815 3816 0
-3816 3815 0
-3816 -3814 0
c Var 'aux298' direct represents '2' with '-3815'
3814 3816 -3815 0
c Encoding variable: aux299 with domain: int(0..2) (representing constraint ((field_00008_00002=7) + (field_00003_00002=7)))
c Both direct and order encoding.
c Var 'aux299' order represents '0' with '3817'
c Var 'aux299' direct represents '0' with '3817'
c Var 'aux299' order represents '1' with '3818'
-3817 3818 0
c Var 'aux299' direct represents '1' with '3819'
3817 -3818 3819 0
-3819 3818 0
-3819 -3817 0
c Var 'aux299' direct represents '2' with '-3818'
3817 3819 -3818 0
c Encoding variable: aux300 with domain: int(0..3) (representing constraint ((field_00005_00002=7) + aux299))
c Both direct and order encoding.
c Var 'aux300' order represents '0' with '3820'
c Var 'aux300' direct represents '0' with '3820'
c Var 'aux300' order represents '1' with '3821'
-3820 3821 0
c Var 'aux300' direct represents '1' with '3822'
3820 -3821 3822 0
-3822 3821 0
-3822 -3820 0
c Var 'aux300' order represents '2' with '3823'
-3821 3823 0
c Var 'aux300' direct represents '2' with '3824'
3821 -3823 3824 0
-3824 3823 0
-3824 -3821 0
c Var 'aux300' direct represents '3' with '-3823'
3820 3822 3824 -3823 0
c Encoding variable: aux301 with domain: int(0..2) (representing constraint ((field_00007_00002=8) + (field_00006_00002=8)))
c Both direct and order encoding.
c Var 'aux301' order represents '0' with '3825'
c Var 'aux301' direct represents '0' with '3825'
c Var 'aux301' order represents '1' with '3826'
-3825 3826 0
c Var 'aux301' direct represents '1' with '3827'
3825 -3826 3827 0
-3827 3826 0
-3827 -3825 0
c Var 'aux301' direct represents '2' with '-3826'
3825 3827 -3826 0
c Encoding variable: aux302 with domain: int(0..2) (representing constraint ((field_00008_00002=8) + (field_00005_00002=8)))
c Both direct and order encoding.
c Var 'aux302' order represents '0' with '3828'
c Var 'aux302' direct represents '0' with '3828'
c Var 'aux302' order represents '1' with '3829'
-3828 3829 0
c Var 'aux302' direct represents '1' with '3830'
3828 -3829 3830 0
-3830 3829 0
-3830 -3828 0
c Var 'aux302' direct represents '2' with '-3829'
3828 3830 -3829 0
c Encoding variable: aux303 with domain: int(0..2) (representing constraint ((field_00007_00002=9) + (field_00006_00002=9)))
c Both direct and order encoding.
c Var 'aux303' order represents '0' with '3831'
c Var 'aux303' direct represents '0' with '3831'
c Var 'aux303' order represents '1' with '3832'
-3831 3832 0
c Var 'aux303' direct represents '1' with '3833'
3831 -3832 3833 0
-3833 3832 0
-3833 -3831 0
c Var 'aux303' direct represents '2' with '-3832'
3831 3833 -3832 0
c Encoding variable: aux304 with domain: int(0..2) (representing constraint ((field_00008_00002=9) + (field_00005_00002=9)))
c Both direct and order encoding.
c Var 'aux304' order represents '0' with '3834'
c Var 'aux304' direct represents '0' with '3834'
c Var 'aux304' order represents '1' with '3835'
-3834 3835 0
c Var 'aux304' direct represents '1' with '3836'
3834 -3835 3836 0
-3836 3835 0
-3836 -3834 0
c Var 'aux304' direct represents '2' with '-3835'
3834 3836 -3835 0
c Encoding variable: aux305 with domain: int(0..2) (representing constraint ((field_00004_00003=2) + (field_00006_00003=2)))
c Both direct and order encoding.
c Var 'aux305' order represents '0' with '3837'
c Var 'aux305' direct represents '0' with '3837'
c Var 'aux305' order represents '1' with '3838'
-3837 3838 0
c Var 'aux305' direct represents '1' with '3839'
3837 -3838 3839 0
-3839 3838 0
-3839 -3837 0
c Var 'aux305' direct represents '2' with '-3838'
3837 3839 -3838 0
c Encoding variable: aux306 with domain: int(0..2) (representing constraint ((field_00008_00003=2) + (field_00009_00003=2)))
c Both direct and order encoding.
c Var 'aux306' order represents '0' with '3840'
c Var 'aux306' direct represents '0' with '3840'
c Var 'aux306' order represents '1' with '3841'
-3840 3841 0
c Var 'aux306' direct represents '1' with '3842'
3840 -3841 3842 0
-3842 3841 0
-3842 -3840 0
c Var 'aux306' direct represents '2' with '-3841'
3840 3842 -3841 0
c Encoding variable: aux307 with domain: int(0..2) (representing constraint ((field_00003_00003=2) + (field_00005_00003=2)))
c Both direct and order encoding.
c Var 'aux307' order represents '0' with '3843'
c Var 'aux307' direct represents '0' with '3843'
c Var 'aux307' order represents '1' with '3844'
-3843 3844 0
c Var 'aux307' direct represents '1' with '3845'
3843 -3844 3845 0
-3845 3844 0
-3845 -3843 0
c Var 'aux307' direct represents '2' with '-3844'
3843 3845 -3844 0
c Encoding variable: aux308 with domain: int(0..3) (representing constraint ((field_00007_00003=2) + aux307))
c Both direct and order encoding.
c Var 'aux308' order represents '0' with '3846'
c Var 'aux308' direct represents '0' with '3846'
c Var 'aux308' order represents '1' with '3847'
-3846 3847 0
c Var 'aux308' direct represents '1' with '3848'
3846 -3847 3848 0
-3848 3847 0
-3848 -3846 0
c Var 'aux308' order represents '2' with '3849'
-3847 3849 0
c Var 'aux308' direct represents '2' with '3850'
3847 -3849 3850 0
-3850 3849 0
-3850 -3847 0
c Var 'aux308' direct represents '3' with '-3849'
3846 3848 3850 -3849 0
c Encoding variable: aux309 with domain: int(0..2) (representing constraint ((field_00007_00003=3) + (field_00006_00003=3)))
c Both direct and order encoding.
c Var 'aux309' order represents '0' with '3851'
c Var 'aux309' direct represents '0' with '3851'
c Var 'aux309' order represents '1' with '3852'
-3851 3852 0
c Var 'aux309' direct represents '1' with '3853'
3851 -3852 3853 0
-3853 3852 0
-3853 -3851 0
c Var 'aux309' direct represents '2' with '-3852'
3851 3853 -3852 0
c Encoding variable: aux310 with domain: int(0..2) (representing constraint ((field_00009_00003=5) + (field_00006_00003=5)))
c Both direct and order encoding.
c Var 'aux310' order represents '0' with '3854'
c Var 'aux310' direct represents '0' with '3854'
c Var 'aux310' order represents '1' with '3855'
-3854 3855 0
c Var 'aux310' direct represents '1' with '3856'
3854 -3855 3856 0
-3856 3855 0
-3856 -3854 0
c Var 'aux310' direct represents '2' with '-3855'
3854 3856 -3855 0
c Encoding variable: aux311 with domain: int(0..2) (representing constraint ((field_00001_00003=5) + (field_00007_00003=5)))
c Both direct and order encoding.
c Var 'aux311' order represents '0' with '3857'
c Var 'aux311' direct represents '0' with '3857'
c Var 'aux311' order represents '1' with '3858'
-3857 3858 0
c Var 'aux311' direct represents '1' with '3859'
3857 -3858 3859 0
-3859 3858 0
-3859 -3857 0
c Var 'aux311' direct represents '2' with '-3858'
3857 3859 -3858 0
c Encoding variable: aux312 with domain: int(0..2) (representing constraint ((field_00008_00003=5) + (field_00003_00003=5)))
c Both direct and order encoding.
c Var 'aux312' order represents '0' with '3860'
c Var 'aux312' direct represents '0' with '3860'
c Var 'aux312' order represents '1' with '3861'
-3860 3861 0
c Var 'aux312' direct represents '1' with '3862'
3860 -3861 3862 0
-3862 3861 0
-3862 -3860 0
c Var 'aux312' direct represents '2' with '-3861'
3860 3862 -3861 0
c Encoding variable: aux313 with domain: int(0..3) (representing constraint ((field_00005_00003=5) + aux312))
c Both direct and order encoding.
c Var 'aux313' order represents '0' with '3863'
c Var 'aux313' direct represents '0' with '3863'
c Var 'aux313' order represents '1' with '3864'
-3863 3864 0
c Var 'aux313' direct represents '1' with '3865'
3863 -3864 3865 0
-3865 3864 0
-3865 -3863 0
c Var 'aux313' order represents '2' with '3866'
-3864 3866 0
c Var 'aux313' direct represents '2' with '3867'
3864 -3866 3867 0
-3867 3866 0
-3867 -3864 0
c Var 'aux313' direct represents '3' with '-3866'
3863 3865 3867 -3866 0
c Encoding variable: aux314 with domain: int(0..2) (representing constraint ((field_00009_00003=6) + (field_00006_00003=6)))
c Both direct and order encoding.
c Var 'aux314' order represents '0' with '3868'
c Var 'aux314' direct represents '0' with '3868'
c Var 'aux314' order represents '1' with '3869'
-3868 3869 0
c Var 'aux314' direct represents '1' with '3870'
3868 -3869 3870 0
-3870 3869 0
-3870 -3868 0
c Var 'aux314' direct represents '2' with '-3869'
3868 3870 -3869 0
c Encoding variable: aux315 with domain: int(0..2) (representing constraint ((field_00001_00003=6) + (field_00007_00003=6)))
c Both direct and order encoding.
c Var 'aux315' order represents '0' with '3871'
c Var 'aux315' direct represents '0' with '3871'
c Var 'aux315' order represents '1' with '3872'
-3871 3872 0
c Var 'aux315' direct represents '1' with '3873'
3871 -3872 3873 0
-3873 3872 0
-3873 -3871 0
c Var 'aux315' direct represents '2' with '-3872'
3871 3873 -3872 0
c Encoding variable: aux316 with domain: int(0..2) (representing constraint ((field_00008_00003=6) + (field_00003_00003=6)))
c Both direct and order encoding.
c Var 'aux316' order represents '0' with '3874'
c Var 'aux316' direct represents '0' with '3874'
c Var 'aux316' order represents '1' with '3875'
-3874 3875 0
c Var 'aux316' direct represents '1' with '3876'
3874 -3875 3876 0
-3876 3875 0
-3876 -3874 0
c Var 'aux316' direct represents '2' with '-3875'
3874 3876 -3875 0
c Encoding variable: aux317 with domain: int(0..3) (representing constraint ((field_00005_00003=6) + aux316))
c Both direct and order encoding.
c Var 'aux317' order represents '0' with '3877'
c Var 'aux317' direct represents '0' with '3877'
c Var 'aux317' order represents '1' with '3878'
-3877 3878 0
c Var 'aux317' direct represents '1' with '3879'
3877 -3878 3879 0
-3879 3878 0
-3879 -3877 0
c Var 'aux317' order represents '2' with '3880'
-3878 3880 0
c Var 'aux317' direct represents '2' with '3881'
3878 -3880 3881 0
-3881 3880 0
-3881 -3878 0
c Var 'aux317' direct represents '3' with '-3880'
3877 3879 3881 -3880 0
c Encoding variable: aux318 with domain: int(0..2) (representing constraint ((field_00004_00003=7) + (field_00006_00003=7)))
c Both direct and order encoding.
c Var 'aux318' order represents '0' with '3882'
c Var 'aux318' direct represents '0' with '3882'
c Var 'aux318' order represents '1' with '3883'
-3882 3883 0
c Var 'aux318' direct represents '1' with '3884'
3882 -3883 3884 0
-3884 3883 0
-3884 -3882 0
c Var 'aux318' direct represents '2' with '-3883'
3882 3884 -3883 0
c Encoding variable: aux319 with domain: int(0..2) (representing constraint ((field_00001_00003=7) + (field_00009_00003=7)))
c Both direct and order encoding.
c Var 'aux319' order represents '0' with '3885'
c Var 'aux319' direct represents '0' with '3885'
c Var 'aux319' order represents '1' with '3886'
-3885 3886 0
c Var 'aux319' direct represents '1' with '3887'
3885 -3886 3887 0
-3887 3886 0
-3887 -3885 0
c Var 'aux319' direct represents '2' with '-3886'
3885 3887 -3886 0
c Encoding variable: aux320 with domain: int(0..2) (representing constraint ((field_00008_00003=7) + (field_00005_00003=7)))
c Both direct and order encoding.
c Var 'aux320' order represents '0' with '3888'
c Var 'aux320' direct represents '0' with '3888'
c Var 'aux320' order represents '1' with '3889'
-3888 3889 0
c Var 'aux320' direct represents '1' with '3890'
3888 -3889 3890 0
-3890 3889 0
-3890 -3888 0
c Var 'aux320' direct represents '2' with '-3889'
3888 3890 -3889 0
c Encoding variable: aux321 with domain: int(0..2) (representing constraint ((field_00003_00003=7) + (field_00007_00003=7)))
c Both direct and order encoding.
c Var 'aux321' order represents '0' with '3891'
c Var 'aux321' direct represents '0' with '3891'
c Var 'aux321' order represents '1' with '3892'
-3891 3892 0
c Var 'aux321' direct represents '1' with '3893'
3891 -3892 3893 0
-3893 3892 0
-3893 -3891 0
c Var 'aux321' direct represents '2' with '-3892'
3891 3893 -3892 0
c Encoding variable: aux322 with domain: int(0..4) (representing constraint (aux318 + aux321))
c Both direct and order encoding.
c Var 'aux322' order represents '0' with '3894'
c Var 'aux322' direct represents '0' with '3894'
c Var 'aux322' order represents '1' with '3895'
-3894 3895 0
c Var 'aux322' direct represents '1' with '3896'
3894 -3895 3896 0
-3896 3895 0
-3896 -3894 0
c Var 'aux322' order represents '2' with '3897'
-3895 3897 0
c Var 'aux322' direct represents '2' with '3898'
3895 -3897 3898 0
-3898 3897 0
-3898 -3895 0
c Var 'aux322' order represents '3' with '3899'
-3897 3899 0
c Var 'aux322' direct represents '3' with '3900'
3897 -3899 3900 0
-3900 3899 0
-3900 -3897 0
c Var 'aux322' direct represents '4' with '-3899'
3894 3896 3898 3900 -3899 0
c Encoding variable: aux323 with domain: int(0..2) (representing constraint ((field_00009_00003=8) + (field_00006_00003=8)))
c Both direct and order encoding.
c Var 'aux323' order represents '0' with '3901'
c Var 'aux323' direct represents '0' with '3901'
c Var 'aux323' order represents '1' with '3902'
-3901 3902 0
c Var 'aux323' direct represents '1' with '3903'
3901 -3902 3903 0
-3903 3902 0
-3903 -3901 0
c Var 'aux323' direct represents '2' with '-3902'
3901 3903 -3902 0
c Encoding variable: aux324 with domain: int(0..2) (representing constraint ((field_00001_00003=8) + (field_00007_00003=8)))
c Both direct and order encoding.
c Var 'aux324' order represents '0' with '3904'
c Var 'aux324' direct represents '0' with '3904'
c Var 'aux324' order represents '1' with '3905'
-3904 3905 0
c Var 'aux324' direct represents '1' with '3906'
3904 -3905 3906 0
-3906 3905 0
-3906 -3904 0
c Var 'aux324' direct represents '2' with '-3905'
3904 3906 -3905 0
c Encoding variable: aux325 with domain: int(0..2) (representing constraint ((field_00008_00003=8) + (field_00003_00003=8)))
c Both direct and order encoding.
c Var 'aux325' order represents '0' with '3907'
c Var 'aux325' direct represents '0' with '3907'
c Var 'aux325' order represents '1' with '3908'
-3907 3908 0
c Var 'aux325' direct represents '1' with '3909'
3907 -3908 3909 0
-3909 3908 0
-3909 -3907 0
c Var 'aux325' direct represents '2' with '-3908'
3907 3909 -3908 0
c Encoding variable: aux326 with domain: int(0..3) (representing constraint ((field_00005_00003=8) + aux325))
c Both direct and order encoding.
c Var 'aux326' order represents '0' with '3910'
c Var 'aux326' direct represents '0' with '3910'
c Var 'aux326' order represents '1' with '3911'
-3910 3911 0
c Var 'aux326' direct represents '1' with '3912'
3910 -3911 3912 0
-3912 3911 0
-3912 -3910 0
c Var 'aux326' order represents '2' with '3913'
-3911 3913 0
c Var 'aux326' direct represents '2' with '3914'
3911 -3913 3914 0
-3914 3913 0
-3914 -3911 0
c Var 'aux326' direct represents '3' with '-3913'
3910 3912 3914 -3913 0
c Encoding variable: aux327 with domain: int(0..2) (representing constraint ((field_00009_00003=9) + (field_00006_00003=9)))
c Both direct and order encoding.
c Var 'aux327' order represents '0' with '3915'
c Var 'aux327' direct represents '0' with '3915'
c Var 'aux327' order represents '1' with '3916'
-3915 3916 0
c Var 'aux327' direct represents '1' with '3917'
3915 -3916 3917 0
-3917 3916 0
-3917 -3915 0
c Var 'aux327' direct represents '2' with '-3916'
3915 3917 -3916 0
c Encoding variable: aux328 with domain: int(0..2) (representing constraint ((field_00001_00003=9) + (field_00007_00003=9)))
c Both direct and order encoding.
c Var 'aux328' order represents '0' with '3918'
c Var 'aux328' direct represents '0' with '3918'
c Var 'aux328' order represents '1' with '3919'
-3918 3919 0
c Var 'aux328' direct represents '1' with '3920'
3918 -3919 3920 0
-3920 3919 0
-3920 -3918 0
c Var 'aux328' direct represents '2' with '-3919'
3918 3920 -3919 0
c Encoding variable: aux329 with domain: int(0..2) (representing constraint ((field_00008_00003=9) + (field_00003_00003=9)))
c Both direct and order encoding.
c Var 'aux329' order represents '0' with '3921'
c Var 'aux329' direct represents '0' with '3921'
c Var 'aux329' order represents '1' with '3922'
-3921 3922 0
c Var 'aux329' direct represents '1' with '3923'
3921 -3922 3923 0
-3923 3922 0
-3923 -3921 0
c Var 'aux329' direct represents '2' with '-3922'
3921 3923 -3922 0
c Encoding variable: aux330 with domain: int(0..3) (representing constraint ((field_00005_00003=9) + aux329))
c Both direct and order encoding.
c Var 'aux330' order represents '0' with '3924'
c Var 'aux330' direct represents '0' with '3924'
c Var 'aux330' order represents '1' with '3925'
-3924 3925 0
c Var 'aux330' direct represents '1' with '3926'
3924 -3925 3926 0
-3926 3925 0
-3926 -3924 0
c Var 'aux330' order represents '2' with '3927'
-3925 3927 0
c Var 'aux330' direct represents '2' with '3928'
3925 -3927 3928 0
-3928 3927 0
-3928 -3925 0
c Var 'aux330' direct represents '3' with '-3927'
3924 3926 3928 -3927 0
c Encoding variable: aux331 with domain: int(0..2) (representing constraint ((field_00007_00004=4) + (field_00006_00004=4)))
c Both direct and order encoding.
c Var 'aux331' order represents '0' with '3929'
c Var 'aux331' direct represents '0' with '3929'
c Var 'aux331' order represents '1' with '3930'
-3929 3930 0
c Var 'aux331' direct represents '1' with '3931'
3929 -3930 3931 0
-3931 3930 0
-3931 -3929 0
c Var 'aux331' direct represents '2' with '-3930'
3929 3931 -3930 0
c Encoding variable: aux332 with domain: int(0..2) (representing constraint ((field_00008_00004=4) + (field_00005_00004=4)))
c Both direct and order encoding.
c Var 'aux332' order represents '0' with '3932'
c Var 'aux332' direct represents '0' with '3932'
c Var 'aux332' order represents '1' with '3933'
-3932 3933 0
c Var 'aux332' direct represents '1' with '3934'
3932 -3933 3934 0
-3934 3933 0
-3934 -3932 0
c Var 'aux332' direct represents '2' with '-3933'
3932 3934 -3933 0
c Encoding variable: aux333 with domain: int(0..2) (representing constraint ((field_00007_00004=6) + (field_00006_00004=6)))
c Both direct and order encoding.
c Var 'aux333' order represents '0' with '3935'
c Var 'aux333' direct represents '0' with '3935'
c Var 'aux333' order represents '1' with '3936'
-3935 3936 0
c Var 'aux333' direct represents '1' with '3937'
3935 -3936 3937 0
-3937 3936 0
-3937 -3935 0
c Var 'aux333' direct represents '2' with '-3936'
3935 3937 -3936 0
c Encoding variable: aux334 with domain: int(0..2) (representing constraint ((field_00008_00004=6) + (field_00005_00004=6)))
c Both direct and order encoding.
c Var 'aux334' order represents '0' with '3938'
c Var 'aux334' direct represents '0' with '3938'
c Var 'aux334' order represents '1' with '3939'
-3938 3939 0
c Var 'aux334' direct represents '1' with '3940'
3938 -3939 3940 0
-3940 3939 0
-3940 -3938 0
c Var 'aux334' direct represents '2' with '-3939'
3938 3940 -3939 0
c Encoding variable: aux335 with domain: int(0..2) (representing constraint ((field_00007_00004=7) + (field_00006_00004=7)))
c Both direct and order encoding.
c Var 'aux335' order represents '0' with '3941'
c Var 'aux335' direct represents '0' with '3941'
c Var 'aux335' order represents '1' with '3942'
-3941 3942 0
c Var 'aux335' direct represents '1' with '3943'
3941 -3942 3943 0
-3943 3942 0
-3943 -3941 0
c Var 'aux335' direct represents '2' with '-3942'
3941 3943 -3942 0
c Encoding variable: aux336 with domain: int(0..2) (representing constraint ((field_00008_00004=7) + (field_00005_00004=7)))
c Both direct and order encoding.
c Var 'aux336' order represents '0' with '3944'
c Var 'aux336' direct represents '0' with '3944'
c Var 'aux336' order represents '1' with '3945'
-3944 3945 0
c Var 'aux336' direct represents '1' with '3946'
3944 -3945 3946 0
-3946 3945 0
-3946 -3944 0
c Var 'aux336' direct represents '2' with '-3945'
3944 3946 -3945 0
c Encoding variable: aux337 with domain: int(0..2) (representing constraint ((field_00005_00005=1) + (field_00006_00005=1)))
c Both direct and order encoding.
c Var 'aux337' order represents '0' with '3947'
c Var 'aux337' direct represents '0' with '3947'
c Var 'aux337' order represents '1' with '3948'
-3947 3948 0
c Var 'aux337' direct represents '1' with '3949'
3947 -3948 3949 0
-3949 3948 0
-3949 -3947 0
c Var 'aux337' direct represents '2' with '-3948'
3947 3949 -3948 0
c Encoding variable: aux338 with domain: int(0..2) (representing constraint ((field_00004_00005=2) + (field_00006_00005=2)))
c Both direct and order encoding.
c Var 'aux338' order represents '0' with '3950'
c Var 'aux338' direct represents '0' with '3950'
c Var 'aux338' order represents '1' with '3951'
-3950 3951 0
c Var 'aux338' direct represents '1' with '3952'
3950 -3951 3952 0
-3952 3951 0
-3952 -3950 0
c Var 'aux338' direct represents '2' with '-3951'
3950 3952 -3951 0
c Encoding variable: aux339 with domain: int(0..2) (representing constraint ((field_00008_00005=2) + (field_00009_00005=2)))
c Both direct and order encoding.
c Var 'aux339' order represents '0' with '3953'
c Var 'aux339' direct represents '0' with '3953'
c Var 'aux339' order represents '1' with '3954'
-3953 3954 0
c Var 'aux339' direct represents '1' with '3955'
3953 -3954 3955 0
-3955 3954 0
-3955 -3953 0
c Var 'aux339' direct represents '2' with '-3954'
3953 3955 -3954 0
c Encoding variable: aux340 with domain: int(0..2) (representing constraint ((field_00005_00005=2) + (field_00007_00005=2)))
c Both direct and order encoding.
c Var 'aux340' order represents '0' with '3956'
c Var 'aux340' direct represents '0' with '3956'
c Var 'aux340' order represents '1' with '3957'
-3956 3957 0
c Var 'aux340' direct represents '1' with '3958'
3956 -3957 3958 0
-3958 3957 0
-3958 -3956 0
c Var 'aux340' direct represents '2' with '-3957'
3956 3958 -3957 0
c Encoding variable: aux341 with domain: int(0..2) (representing constraint ((field_00007_00005=4) + (field_00006_00005=4)))
c Both direct and order encoding.
c Var 'aux341' order represents '0' with '3959'
c Var 'aux341' direct represents '0' with '3959'
c Var 'aux341' order represents '1' with '3960'
-3959 3960 0
c Var 'aux341' direct represents '1' with '3961'
3959 -3960 3961 0
-3961 3960 0
-3961 -3959 0
c Var 'aux341' direct represents '2' with '-3960'
3959 3961 -3960 0
c Encoding variable: aux342 with domain: int(0..2) (representing constraint ((field_00001_00005=4) + (field_00005_00005=4)))
c Both direct and order encoding.
c Var 'aux342' order represents '0' with '3962'
c Var 'aux342' direct represents '0' with '3962'
c Var 'aux342' order represents '1' with '3963'
-3962 3963 0
c Var 'aux342' direct represents '1' with '3964'
3962 -3963 3964 0
-3964 3963 0
-3964 -3962 0
c Var 'aux342' direct represents '2' with '-3963'
3962 3964 -3963 0
c Encoding variable: aux343 with domain: int(0..2) (representing constraint ((field_00008_00005=4) + (field_00003_00005=4)))
c Both direct and order encoding.
c Var 'aux343' order represents '0' with '3965'
c Var 'aux343' direct represents '0' with '3965'
c Var 'aux343' order represents '1' with '3966'
-3965 3966 0
c Var 'aux343' direct represents '1' with '3967'
3965 -3966 3967 0
-3967 3966 0
-3967 -3965 0
c Var 'aux343' direct represents '2' with '-3966'
3965 3967 -3966 0
c Encoding variable: aux344 with domain: int(0..2) (representing constraint ((field_00009_00005=5) + (field_00001_00005=5)))
c Both direct and order encoding.
c Var 'aux344' order represents '0' with '3968'
c Var 'aux344' direct represents '0' with '3968'
c Var 'aux344' order represents '1' with '3969'
-3968 3969 0
c Var 'aux344' direct represents '1' with '3970'
3968 -3969 3970 0
-3970 3969 0
-3970 -3968 0
c Var 'aux344' direct represents '2' with '-3969'
3968 3970 -3969 0
c Encoding variable: aux345 with domain: int(0..2) (representing constraint ((field_00008_00005=5) + (field_00002_00005=5)))
c Both direct and order encoding.
c Var 'aux345' order represents '0' with '3971'
c Var 'aux345' direct represents '0' with '3971'
c Var 'aux345' order represents '1' with '3972'
-3971 3972 0
c Var 'aux345' direct represents '1' with '3973'
3971 -3972 3973 0
-3973 3972 0
-3973 -3971 0
c Var 'aux345' direct represents '2' with '-3972'
3971 3973 -3972 0
c Encoding variable: aux346 with domain: int(0..2) (representing constraint ((field_00003_00005=5) + (field_00007_00005=5)))
c Both direct and order encoding.
c Var 'aux346' order represents '0' with '3974'
c Var 'aux346' direct represents '0' with '3974'
c Var 'aux346' order represents '1' with '3975'
-3974 3975 0
c Var 'aux346' direct represents '1' with '3976'
3974 -3975 3976 0
-3976 3975 0
-3976 -3974 0
c Var 'aux346' direct represents '2' with '-3975'
3974 3976 -3975 0
c Encoding variable: aux347 with domain: int(0..2) (representing constraint ((field_00009_00005=6) + (field_00006_00005=6)))
c Both direct and order encoding.
c Var 'aux347' order represents '0' with '3977'
c Var 'aux347' direct represents '0' with '3977'
c Var 'aux347' order represents '1' with '3978'
-3977 3978 0
c Var 'aux347' direct represents '1' with '3979'
3977 -3978 3979 0
-3979 3978 0
-3979 -3977 0
c Var 'aux347' direct represents '2' with '-3978'
3977 3979 -3978 0
c Encoding variable: aux348 with domain: int(0..2) (representing constraint ((field_00001_00005=6) + (field_00007_00005=6)))
c Both direct and order encoding.
c Var 'aux348' order represents '0' with '3980'
c Var 'aux348' direct represents '0' with '3980'
c Var 'aux348' order represents '1' with '3981'
-3980 3981 0
c Var 'aux348' direct represents '1' with '3982'
3980 -3981 3982 0
-3982 3981 0
-3982 -3980 0
c Var 'aux348' direct represents '2' with '-3981'
3980 3982 -3981 0
c Encoding variable: aux349 with domain: int(0..2) (representing constraint ((field_00008_00005=6) + (field_00003_00005=6)))
c Both direct and order encoding.
c Var 'aux349' order represents '0' with '3983'
c Var 'aux349' direct represents '0' with '3983'
c Var 'aux349' order represents '1' with '3984'
-3983 3984 0
c Var 'aux349' direct represents '1' with '3985'
3983 -3984 3985 0
-3985 3984 0
-3985 -3983 0
c Var 'aux349' direct represents '2' with '-3984'
3983 3985 -3984 0
c Encoding variable: aux350 with domain: int(0..3) (representing constraint ((field_00005_00005=6) + aux349))
c Both direct and order encoding.
c Var 'aux350' order represents '0' with '3986'
c Var 'aux350' direct represents '0' with '3986'
c Var 'aux350' order represents '1' with '3987'
-3986 3987 0
c Var 'aux350' direct represents '1' with '3988'
3986 -3987 3988 0
-3988 3987 0
-3988 -3986 0
c Var 'aux350' order represents '2' with '3989'
-3987 3989 0
c Var 'aux350' direct represents '2' with '3990'
3987 -3989 3990 0
-3990 3989 0
-3990 -3987 0
c Var 'aux350' direct represents '3' with '-3989'
3986 3988 3990 -3989 0
c Encoding variable: aux351 with domain: int(0..2) (representing constraint ((field_00004_00005=7) + (field_00006_00005=7)))
c Both direct and order encoding.
c Var 'aux351' order represents '0' with '3991'
c Var 'aux351' direct represents '0' with '3991'
c Var 'aux351' order represents '1' with '3992'
-3991 3992 0
c Var 'aux351' direct represents '1' with '3993'
3991 -3992 3993 0
-3993 3992 0
-3993 -3991 0
c Var 'aux351' direct represents '2' with '-3992'
3991 3993 -3992 0
c Encoding variable: aux352 with domain: int(0..2) (representing constraint ((field_00001_00005=7) + (field_00009_00005=7)))
c Both direct and order encoding.
c Var 'aux352' order represents '0' with '3994'
c Var 'aux352' direct represents '0' with '3994'
c Var 'aux352' order represents '1' with '3995'
-3994 3995 0
c Var 'aux352' direct represents '1' with '3996'
3994 -3995 3996 0
-3996 3995 0
-3996 -3994 0
c Var 'aux352' direct represents '2' with '-3995'
3994 3996 -3995 0
c Encoding variable: aux353 with domain: int(0..2) (representing constraint ((field_00008_00005=7) + (field_00007_00005=7)))
c Both direct and order encoding.
c Var 'aux353' order represents '0' with '3997'
c Var 'aux353' direct represents '0' with '3997'
c Var 'aux353' order represents '1' with '3998'
-3997 3998 0
c Var 'aux353' direct represents '1' with '3999'
3997 -3998 3999 0
-3999 3998 0
-3999 -3997 0
c Var 'aux353' direct represents '2' with '-3998'
3997 3999 -3998 0
c Encoding variable: aux354 with domain: int(0..2) (representing constraint ((field_00003_00005=7) + (field_00005_00005=7)))
c Both direct and order encoding.
c Var 'aux354' order represents '0' with '4000'
c Var 'aux354' direct represents '0' with '4000'
c Var 'aux354' order represents '1' with '4001'
-4000 4001 0
c Var 'aux354' direct represents '1' with '4002'
4000 -4001 4002 0
-4002 4001 0
-4002 -4000 0
c Var 'aux354' direct represents '2' with '-4001'
4000 4002 -4001 0
c Encoding variable: aux355 with domain: int(0..3) (representing constraint ((field_00002_00005=7) + aux354))
c Both direct and order encoding.
c Var 'aux355' order represents '0' with '4003'
c Var 'aux355' direct represents '0' with '4003'
c Var 'aux355' order represents '1' with '4004'
-4003 4004 0
c Var 'aux355' direct represents '1' with '4005'
4003 -4004 4005 0
-4005 4004 0
-4005 -4003 0
c Var 'aux355' order represents '2' with '4006'
-4004 4006 0
c Var 'aux355' direct represents '2' with '4007'
4004 -4006 4007 0
-4007 4006 0
-4007 -4004 0
c Var 'aux355' direct represents '3' with '-4006'
4003 4005 4007 -4006 0
c Encoding variable: aux356 with domain: int(0..4) (representing constraint (aux351 + aux353))
c Both direct and order encoding.
c Var 'aux356' order represents '0' with '4008'
c Var 'aux356' direct represents '0' with '4008'
c Var 'aux356' order represents '1' with '4009'
-4008 4009 0
c Var 'aux356' direct represents '1' with '4010'
4008 -4009 4010 0
-4010 4009 0
-4010 -4008 0
c Var 'aux356' order represents '2' with '4011'
-4009 4011 0
c Var 'aux356' direct represents '2' with '4012'
4009 -4011 4012 0
-4012 4011 0
-4012 -4009 0
c Var 'aux356' order represents '3' with '4013'
-4011 4013 0
c Var 'aux356' direct represents '3' with '4014'
4011 -4013 4014 0
-4014 4013 0
-4014 -4011 0
c Var 'aux356' direct represents '4' with '-4013'
4008 4010 4012 4014 -4013 0
c Encoding variable: aux357 with domain: int(0..2) (representing constraint ((field_00009_00005=8) + (field_00006_00005=8)))
c Both direct and order encoding.
c Var 'aux357' order represents '0' with '4015'
c Var 'aux357' direct represents '0' with '4015'
c Var 'aux357' order represents '1' with '4016'
-4015 4016 0
c Var 'aux357' direct represents '1' with '4017'
4015 -4016 4017 0
-4017 4016 0
-4017 -4015 0
c Var 'aux357' direct represents '2' with '-4016'
4015 4017 -4016 0
c Encoding variable: aux358 with domain: int(0..2) (representing constraint ((field_00001_00005=8) + (field_00002_00005=8)))
c Both direct and order encoding.
c Var 'aux358' order represents '0' with '4018'
c Var 'aux358' direct represents '0' with '4018'
c Var 'aux358' order represents '1' with '4019'
-4018 4019 0
c Var 'aux358' direct represents '1' with '4020'
4018 -4019 4020 0
-4020 4019 0
-4020 -4018 0
c Var 'aux358' direct represents '2' with '-4019'
4018 4020 -4019 0
c Encoding variable: aux359 with domain: int(0..2) (representing constraint ((field_00008_00005=8) + (field_00005_00005=8)))
c Both direct and order encoding.
c Var 'aux359' order represents '0' with '4021'
c Var 'aux359' direct represents '0' with '4021'
c Var 'aux359' order represents '1' with '4022'
-4021 4022 0
c Var 'aux359' direct represents '1' with '4023'
4021 -4022 4023 0
-4023 4022 0
-4023 -4021 0
c Var 'aux359' direct represents '2' with '-4022'
4021 4023 -4022 0
c Encoding variable: aux360 with domain: int(0..2) (representing constraint ((field_00003_00005=8) + (field_00007_00005=8)))
c Both direct and order encoding.
c Var 'aux360' order represents '0' with '4024'
c Var 'aux360' direct represents '0' with '4024'
c Var 'aux360' order represents '1' with '4025'
-4024 4025 0
c Var 'aux360' direct represents '1' with '4026'
4024 -4025 4026 0
-4026 4025 0
-4026 -4024 0
c Var 'aux360' direct represents '2' with '-4025'
4024 4026 -4025 0
c Encoding variable: aux361 with domain: int(0..4) (representing constraint (aux357 + aux360))
c Both direct and order encoding.
c Var 'aux361' order represents '0' with '4027'
c Var 'aux361' direct represents '0' with '4027'
c Var 'aux361' order represents '1' with '4028'
-4027 4028 0
c Var 'aux361' direct represents '1' with '4029'
4027 -4028 4029 0
-4029 4028 0
-4029 -4027 0
c Var 'aux361' order represents '2' with '4030'
-4028 4030 0
c Var 'aux361' direct represents '2' with '4031'
4028 -4030 4031 0
-4031 4030 0
-4031 -4028 0
c Var 'aux361' order represents '3' with '4032'
-4030 4032 0
c Var 'aux361' direct represents '3' with '4033'
4030 -4032 4033 0
-4033 4032 0
-4033 -4030 0
c Var 'aux361' direct represents '4' with '-4032'
4027 4029 4031 4033 -4032 0
c Encoding variable: aux362 with domain: int(0..2) (representing constraint ((field_00004_00005=9) + (field_00008_00005=9)))
c Both direct and order encoding.
c Var 'aux362' order represents '0' with '4034'
c Var 'aux362' direct represents '0' with '4034'
c Var 'aux362' order represents '1' with '4035'
-4034 4035 0
c Var 'aux362' direct represents '1' with '4036'
4034 -4035 4036 0
-4036 4035 0
-4036 -4034 0
c Var 'aux362' direct represents '2' with '-4035'
4034 4036 -4035 0
c Encoding variable: aux363 with domain: int(0..2) (representing constraint ((field_00004_00006=2) + (field_00006_00006=2)))
c Both direct and order encoding.
c Var 'aux363' order represents '0' with '4037'
c Var 'aux363' direct represents '0' with '4037'
c Var 'aux363' order represents '1' with '4038'
-4037 4038 0
c Var 'aux363' direct represents '1' with '4039'
4037 -4038 4039 0
-4039 4038 0
-4039 -4037 0
c Var 'aux363' direct represents '2' with '-4038'
4037 4039 -4038 0
c Encoding variable: aux364 with domain: int(0..2) (representing constraint ((field_00008_00006=2) + (field_00009_00006=2)))
c Both direct and order encoding.
c Var 'aux364' order represents '0' with '4040'
c Var 'aux364' direct represents '0' with '4040'
c Var 'aux364' order represents '1' with '4041'
-4040 4041 0
c Var 'aux364' direct represents '1' with '4042'
4040 -4041 4042 0
-4042 4041 0
-4042 -4040 0
c Var 'aux364' direct represents '2' with '-4041'
4040 4042 -4041 0
c Encoding variable: aux365 with domain: int(0..2) (representing constraint ((field_00005_00006=2) + (field_00007_00006=2)))
c Both direct and order encoding.
c Var 'aux365' order represents '0' with '4043'
c Var 'aux365' direct represents '0' with '4043'
c Var 'aux365' order represents '1' with '4044'
-4043 4044 0
c Var 'aux365' direct represents '1' with '4045'
4043 -4044 4045 0
-4045 4044 0
-4045 -4043 0
c Var 'aux365' direct represents '2' with '-4044'
4043 4045 -4044 0
c Encoding variable: aux366 with domain: int(0..2) (representing constraint ((field_00007_00006=4) + (field_00006_00006=4)))
c Both direct and order encoding.
c Var 'aux366' order represents '0' with '4046'
c Var 'aux366' direct represents '0' with '4046'
c Var 'aux366' order represents '1' with '4047'
-4046 4047 0
c Var 'aux366' direct represents '1' with '4048'
4046 -4047 4048 0
-4048 4047 0
-4048 -4046 0
c Var 'aux366' direct represents '2' with '-4047'
4046 4048 -4047 0
c Encoding variable: aux367 with domain: int(0..2) (representing constraint ((field_00001_00006=4) + (field_00005_00006=4)))
c Both direct and order encoding.
c Var 'aux367' order represents '0' with '4049'
c Var 'aux367' direct represents '0' with '4049'
c Var 'aux367' order represents '1' with '4050'
-4049 4050 0
c Var 'aux367' direct represents '1' with '4051'
4049 -4050 4051 0
-4051 4050 0
-4051 -4049 0
c Var 'aux367' direct represents '2' with '-4050'
4049 4051 -4050 0
c Encoding variable: aux368 with domain: int(0..2) (representing constraint ((field_00008_00006=4) + (field_00003_00006=4)))
c Both direct and order encoding.
c Var 'aux368' order represents '0' with '4052'
c Var 'aux368' direct represents '0' with '4052'
c Var 'aux368' order represents '1' with '4053'
-4052 4053 0
c Var 'aux368' direct represents '1' with '4054'
4052 -4053 4054 0
-4054 4053 0
-4054 -4052 0
c Var 'aux368' direct represents '2' with '-4053'
4052 4054 -4053 0
c Encoding variable: aux369 with domain: int(0..2) (representing constraint ((field_00009_00006=5) + (field_00001_00006=5)))
c Both direct and order encoding.
c Var 'aux369' order represents '0' with '4055'
c Var 'aux369' direct represents '0' with '4055'
c Var 'aux369' order represents '1' with '4056'
-4055 4056 0
c Var 'aux369' direct represents '1' with '4057'
4055 -4056 4057 0
-4057 4056 0
-4057 -4055 0
c Var 'aux369' direct represents '2' with '-4056'
4055 4057 -4056 0
c Encoding variable: aux370 with domain: int(0..2) (representing constraint ((field_00008_00006=5) + (field_00002_00006=5)))
c Both direct and order encoding.
c Var 'aux370' order represents '0' with '4058'
c Var 'aux370' direct represents '0' with '4058'
c Var 'aux370' order represents '1' with '4059'
-4058 4059 0
c Var 'aux370' direct represents '1' with '4060'
4058 -4059 4060 0
-4060 4059 0
-4060 -4058 0
c Var 'aux370' direct represents '2' with '-4059'
4058 4060 -4059 0
c Encoding variable: aux371 with domain: int(0..2) (representing constraint ((field_00003_00006=5) + (field_00007_00006=5)))
c Both direct and order encoding.
c Var 'aux371' order represents '0' with '4061'
c Var 'aux371' direct represents '0' with '4061'
c Var 'aux371' order represents '1' with '4062'
-4061 4062 0
c Var 'aux371' direct represents '1' with '4063'
4061 -4062 4063 0
-4063 4062 0
-4063 -4061 0
c Var 'aux371' direct represents '2' with '-4062'
4061 4063 -4062 0
c Encoding variable: aux372 with domain: int(0..2) (representing constraint ((field_00009_00006=6) + (field_00006_00006=6)))
c Both direct and order encoding.
c Var 'aux372' order represents '0' with '4064'
c Var 'aux372' direct represents '0' with '4064'
c Var 'aux372' order represents '1' with '4065'
-4064 4065 0
c Var 'aux372' direct represents '1' with '4066'
4064 -4065 4066 0
-4066 4065 0
-4066 -4064 0
c Var 'aux372' direct represents '2' with '-4065'
4064 4066 -4065 0
c Encoding variable: aux373 with domain: int(0..2) (representing constraint ((field_00001_00006=6) + (field_00007_00006=6)))
c Both direct and order encoding.
c Var 'aux373' order represents '0' with '4067'
c Var 'aux373' direct represents '0' with '4067'
c Var 'aux373' order represents '1' with '4068'
-4067 4068 0
c Var 'aux373' direct represents '1' with '4069'
4067 -4068 4069 0
-4069 4068 0
-4069 -4067 0
c Var 'aux373' direct represents '2' with '-4068'
4067 4069 -4068 0
c Encoding variable: aux374 with domain: int(0..2) (representing constraint ((field_00008_00006=6) + (field_00003_00006=6)))
c Both direct and order encoding.
c Var 'aux374' order represents '0' with '4070'
c Var 'aux374' direct represents '0' with '4070'
c Var 'aux374' order represents '1' with '4071'
-4070 4071 0
c Var 'aux374' direct represents '1' with '4072'
4070 -4071 4072 0
-4072 4071 0
-4072 -4070 0
c Var 'aux374' direct represents '2' with '-4071'
4070 4072 -4071 0
c Encoding variable: aux375 with domain: int(0..3) (representing constraint ((field_00005_00006=6) + aux374))
c Both direct and order encoding.
c Var 'aux375' order represents '0' with '4073'
c Var 'aux375' direct represents '0' with '4073'
c Var 'aux375' order represents '1' with '4074'
-4073 4074 0
c Var 'aux375' direct represents '1' with '4075'
4073 -4074 4075 0
-4075 4074 0
-4075 -4073 0
c Var 'aux375' order represents '2' with '4076'
-4074 4076 0
c Var 'aux375' direct represents '2' with '4077'
4074 -4076 4077 0
-4077 4076 0
-4077 -4074 0
c Var 'aux375' direct represents '3' with '-4076'
4073 4075 4077 -4076 0
c Encoding variable: aux376 with domain: int(0..2) (representing constraint ((field_00004_00006=7) + (field_00006_00006=7)))
c Both direct and order encoding.
c Var 'aux376' order represents '0' with '4078'
c Var 'aux376' direct represents '0' with '4078'
c Var 'aux376' order represents '1' with '4079'
-4078 4079 0
c Var 'aux376' direct represents '1' with '4080'
4078 -4079 4080 0
-4080 4079 0
-4080 -4078 0
c Var 'aux376' direct represents '2' with '-4079'
4078 4080 -4079 0
c Encoding variable: aux377 with domain: int(0..2) (representing constraint ((field_00008_00006=7) + (field_00009_00006=7)))
c Both direct and order encoding.
c Var 'aux377' order represents '0' with '4081'
c Var 'aux377' direct represents '0' with '4081'
c Var 'aux377' order represents '1' with '4082'
-4081 4082 0
c Var 'aux377' direct represents '1' with '4083'
4081 -4082 4083 0
-4083 4082 0
-4083 -4081 0
c Var 'aux377' direct represents '2' with '-4082'
4081 4083 -4082 0
c Encoding variable: aux378 with domain: int(0..2) (representing constraint ((field_00003_00006=7) + (field_00007_00006=7)))
c Both direct and order encoding.
c Var 'aux378' order represents '0' with '4084'
c Var 'aux378' direct represents '0' with '4084'
c Var 'aux378' order represents '1' with '4085'
-4084 4085 0
c Var 'aux378' direct represents '1' with '4086'
4084 -4085 4086 0
-4086 4085 0
-4086 -4084 0
c Var 'aux378' direct represents '2' with '-4085'
4084 4086 -4085 0
c Encoding variable: aux379 with domain: int(0..2) (representing constraint ((field_00005_00006=7) + (field_00002_00006=7)))
c Both direct and order encoding.
c Var 'aux379' order represents '0' with '4087'
c Var 'aux379' direct represents '0' with '4087'
c Var 'aux379' order represents '1' with '4088'
-4087 4088 0
c Var 'aux379' direct represents '1' with '4089'
4087 -4088 4089 0
-4089 4088 0
-4089 -4087 0
c Var 'aux379' direct represents '2' with '-4088'
4087 4089 -4088 0
c Encoding variable: aux380 with domain: int(0..4) (representing constraint (aux376 + aux379))
c Both direct and order encoding.
c Var 'aux380' order represents '0' with '4090'
c Var 'aux380' direct represents '0' with '4090'
c Var 'aux380' order represents '1' with '4091'
-4090 4091 0
c Var 'aux380' direct represents '1' with '4092'
4090 -4091 4092 0
-4092 4091 0
-4092 -4090 0
c Var 'aux380' order represents '2' with '4093'
-4091 4093 0
c Var 'aux380' direct represents '2' with '4094'
4091 -4093 4094 0
-4094 4093 0
-4094 -4091 0
c Var 'aux380' order represents '3' with '4095'
-4093 4095 0
c Var 'aux380' direct represents '3' with '4096'
4093 -4095 4096 0
-4096 4095 0
-4096 -4093 0
c Var 'aux380' direct represents '4' with '-4095'
4090 4092 4094 4096 -4095 0
c Encoding variable: aux381 with domain: int(0..2) (representing constraint ((field_00009_00006=8) + (field_00006_00006=8)))
c Both direct and order encoding.
c Var 'aux381' order represents '0' with '4097'
c Var 'aux381' direct represents '0' with '4097'
c Var 'aux381' order represents '1' with '4098'
-4097 4098 0
c Var 'aux381' direct represents '1' with '4099'
4097 -4098 4099 0
-4099 4098 0
-4099 -4097 0
c Var 'aux381' direct represents '2' with '-4098'
4097 4099 -4098 0
c Encoding variable: aux382 with domain: int(0..2) (representing constraint ((field_00008_00006=8) + (field_00002_00006=8)))
c Both direct and order encoding.
c Var 'aux382' order represents '0' with '4100'
c Var 'aux382' direct represents '0' with '4100'
c Var 'aux382' order represents '1' with '4101'
-4100 4101 0
c Var 'aux382' direct represents '1' with '4102'
4100 -4101 4102 0
-4102 4101 0
-4102 -4100 0
c Var 'aux382' direct represents '2' with '-4101'
4100 4102 -4101 0
c Encoding variable: aux383 with domain: int(0..2) (representing constraint ((field_00003_00006=8) + (field_00005_00006=8)))
c Both direct and order encoding.
c Var 'aux383' order represents '0' with '4103'
c Var 'aux383' direct represents '0' with '4103'
c Var 'aux383' order represents '1' with '4104'
-4103 4104 0
c Var 'aux383' direct represents '1' with '4105'
4103 -4104 4105 0
-4105 4104 0
-4105 -4103 0
c Var 'aux383' direct represents '2' with '-4104'
4103 4105 -4104 0
c Encoding variable: aux384 with domain: int(0..3) (representing constraint ((field_00007_00006=8) + aux383))
c Both direct and order encoding.
c Var 'aux384' order represents '0' with '4106'
c Var 'aux384' direct represents '0' with '4106'
c Var 'aux384' order represents '1' with '4107'
-4106 4107 0
c Var 'aux384' direct represents '1' with '4108'
4106 -4107 4108 0
-4108 4107 0
-4108 -4106 0
c Var 'aux384' order represents '2' with '4109'
-4107 4109 0
c Var 'aux384' direct represents '2' with '4110'
4107 -4109 4110 0
-4110 4109 0
-4110 -4107 0
c Var 'aux384' direct represents '3' with '-4109'
4106 4108 4110 -4109 0
c Encoding variable: aux385 with domain: int(0..2) (representing constraint ((field_00004_00006=9) + (field_00008_00006=9)))
c Both direct and order encoding.
c Var 'aux385' order represents '0' with '4111'
c Var 'aux385' direct represents '0' with '4111'
c Var 'aux385' order represents '1' with '4112'
-4111 4112 0
c Var 'aux385' direct represents '1' with '4113'
4111 -4112 4113 0
-4113 4112 0
-4113 -4111 0
c Var 'aux385' direct represents '2' with '-4112'
4111 4113 -4112 0
c Encoding variable: aux386 with domain: int(0..2) (representing constraint ((field_00007_00007=2) + (field_00006_00007=2)))
c Both direct and order encoding.
c Var 'aux386' order represents '0' with '4114'
c Var 'aux386' direct represents '0' with '4114'
c Var 'aux386' order represents '1' with '4115'
-4114 4115 0
c Var 'aux386' direct represents '1' with '4116'
4114 -4115 4116 0
-4116 4115 0
-4116 -4114 0
c Var 'aux386' direct represents '2' with '-4115'
4114 4116 -4115 0
c Encoding variable: aux387 with domain: int(0..2) (representing constraint ((field_00002_00007=5) + (field_00006_00007=5)))
c Both direct and order encoding.
c Var 'aux387' order represents '0' with '4117'
c Var 'aux387' direct represents '0' with '4117'
c Var 'aux387' order represents '1' with '4118'
-4117 4118 0
c Var 'aux387' direct represents '1' with '4119'
4117 -4118 4119 0
-4119 4118 0
-4119 -4117 0
c Var 'aux387' direct represents '2' with '-4118'
4117 4119 -4118 0
c Encoding variable: aux388 with domain: int(0..2) (representing constraint ((field_00008_00007=5) + (field_00007_00007=5)))
c Both direct and order encoding.
c Var 'aux388' order represents '0' with '4120'
c Var 'aux388' direct represents '0' with '4120'
c Var 'aux388' order represents '1' with '4121'
-4120 4121 0
c Var 'aux388' direct represents '1' with '4122'
4120 -4121 4122 0
-4122 4121 0
-4122 -4120 0
c Var 'aux388' direct represents '2' with '-4121'
4120 4122 -4121 0
c Encoding variable: aux389 with domain: int(0..2) (representing constraint ((field_00003_00007=5) + (field_00005_00007=5)))
c Both direct and order encoding.
c Var 'aux389' order represents '0' with '4123'
c Var 'aux389' direct represents '0' with '4123'
c Var 'aux389' order represents '1' with '4124'
-4123 4124 0
c Var 'aux389' direct represents '1' with '4125'
4123 -4124 4125 0
-4125 4124 0
-4125 -4123 0
c Var 'aux389' direct represents '2' with '-4124'
4123 4125 -4124 0
c Encoding variable: aux390 with domain: int(0..2) (representing constraint ((field_00002_00007=7) + (field_00006_00007=7)))
c Both direct and order encoding.
c Var 'aux390' order represents '0' with '4126'
c Var 'aux390' direct represents '0' with '4126'
c Var 'aux390' order represents '1' with '4127'
-4126 4127 0
c Var 'aux390' direct represents '1' with '4128'
4126 -4127 4128 0
-4128 4127 0
-4128 -4126 0
c Var 'aux390' direct represents '2' with '-4127'
4126 4128 -4127 0
c Encoding variable: aux391 with domain: int(0..2) (representing constraint ((field_00008_00007=7) + (field_00007_00007=7)))
c Both direct and order encoding.
c Var 'aux391' order represents '0' with '4129'
c Var 'aux391' direct represents '0' with '4129'
c Var 'aux391' order represents '1' with '4130'
-4129 4130 0
c Var 'aux391' direct represents '1' with '4131'
4129 -4130 4131 0
-4131 4130 0
-4131 -4129 0
c Var 'aux391' direct represents '2' with '-4130'
4129 4131 -4130 0
c Encoding variable: aux392 with domain: int(0..2) (representing constraint ((field_00003_00007=7) + (field_00005_00007=7)))
c Both direct and order encoding.
c Var 'aux392' order represents '0' with '4132'
c Var 'aux392' direct represents '0' with '4132'
c Var 'aux392' order represents '1' with '4133'
-4132 4133 0
c Var 'aux392' direct represents '1' with '4134'
4132 -4133 4134 0
-4134 4133 0
-4134 -4132 0
c Var 'aux392' direct represents '2' with '-4133'
4132 4134 -4133 0
c Encoding variable: aux393 with domain: int(0..2) (representing constraint ((field_00002_00007=8) + (field_00008_00007=8)))
c Both direct and order encoding.
c Var 'aux393' order represents '0' with '4135'
c Var 'aux393' direct represents '0' with '4135'
c Var 'aux393' order represents '1' with '4136'
-4135 4136 0
c Var 'aux393' direct represents '1' with '4137'
4135 -4136 4137 0
-4137 4136 0
-4137 -4135 0
c Var 'aux393' direct represents '2' with '-4136'
4135 4137 -4136 0
c Encoding variable: aux394 with domain: int(0..2) (representing constraint ((field_00007_00007=9) + (field_00006_00007=9)))
c Both direct and order encoding.
c Var 'aux394' order represents '0' with '4138'
c Var 'aux394' direct represents '0' with '4138'
c Var 'aux394' order represents '1' with '4139'
-4138 4139 0
c Var 'aux394' direct represents '1' with '4140'
4138 -4139 4140 0
-4140 4139 0
-4140 -4138 0
c Var 'aux394' direct represents '2' with '-4139'
4138 4140 -4139 0
c Encoding variable: aux395 with domain: int(0..2) (representing constraint ((field_00009_00008=1) + (field_00006_00008=1)))
c Both direct and order encoding.
c Var 'aux395' order represents '0' with '4141'
c Var 'aux395' direct represents '0' with '4141'
c Var 'aux395' order represents '1' with '4142'
-4141 4142 0
c Var 'aux395' direct represents '1' with '4143'
4141 -4142 4143 0
-4143 4142 0
-4143 -4141 0
c Var 'aux395' direct represents '2' with '-4142'
4141 4143 -4142 0
c Encoding variable: aux396 with domain: int(0..2) (representing constraint ((field_00001_00008=1) + (field_00007_00008=1)))
c Both direct and order encoding.
c Var 'aux396' order represents '0' with '4144'
c Var 'aux396' direct represents '0' with '4144'
c Var 'aux396' order represents '1' with '4145'
-4144 4145 0
c Var 'aux396' direct represents '1' with '4146'
4144 -4145 4146 0
-4146 4145 0
-4146 -4144 0
c Var 'aux396' direct represents '2' with '-4145'
4144 4146 -4145 0
c Encoding variable: aux397 with domain: int(0..2) (representing constraint ((field_00008_00008=1) + (field_00003_00008=1)))
c Both direct and order encoding.
c Var 'aux397' order represents '0' with '4147'
c Var 'aux397' direct represents '0' with '4147'
c Var 'aux397' order represents '1' with '4148'
-4147 4148 0
c Var 'aux397' direct represents '1' with '4149'
4147 -4148 4149 0
-4149 4148 0
-4149 -4147 0
c Var 'aux397' direct represents '2' with '-4148'
4147 4149 -4148 0
c Encoding variable: aux398 with domain: int(0..3) (representing constraint ((field_00005_00008=1) + aux397))
c Both direct and order encoding.
c Var 'aux398' order represents '0' with '4150'
c Var 'aux398' direct represents '0' with '4150'
c Var 'aux398' order represents '1' with '4151'
-4150 4151 0
c Var 'aux398' direct represents '1' with '4152'
4150 -4151 4152 0
-4152 4151 0
-4152 -4150 0
c Var 'aux398' order represents '2' with '4153'
-4151 4153 0
c Var 'aux398' direct represents '2' with '4154'
4151 -4153 4154 0
-4154 4153 0
-4154 -4151 0
c Var 'aux398' direct represents '3' with '-4153'
4150 4152 4154 -4153 0
c Encoding variable: aux399 with domain: int(0..2) (representing constraint ((field_00009_00008=2) + (field_00006_00008=2)))
c Both direct and order encoding.
c Var 'aux399' order represents '0' with '4155'
c Var 'aux399' direct represents '0' with '4155'
c Var 'aux399' order represents '1' with '4156'
-4155 4156 0
c Var 'aux399' direct represents '1' with '4157'
4155 -4156 4157 0
-4157 4156 0
-4157 -4155 0
c Var 'aux399' direct represents '2' with '-4156'
4155 4157 -4156 0
c Encoding variable: aux400 with domain: int(0..2) (representing constraint ((field_00008_00008=2) + (field_00007_00008=2)))
c Both direct and order encoding.
c Var 'aux400' order represents '0' with '4158'
c Var 'aux400' direct represents '0' with '4158'
c Var 'aux400' order represents '1' with '4159'
-4158 4159 0
c Var 'aux400' direct represents '1' with '4160'
4158 -4159 4160 0
-4160 4159 0
-4160 -4158 0
c Var 'aux400' direct represents '2' with '-4159'
4158 4160 -4159 0
c Encoding variable: aux401 with domain: int(0..2) (representing constraint ((field_00005_00008=4) + (field_00006_00008=4)))
c Both direct and order encoding.
c Var 'aux401' order represents '0' with '4161'
c Var 'aux401' direct represents '0' with '4161'
c Var 'aux401' order represents '1' with '4162'
-4161 4162 0
c Var 'aux401' direct represents '1' with '4163'
4161 -4162 4163 0
-4163 4162 0
-4163 -4161 0
c Var 'aux401' direct represents '2' with '-4162'
4161 4163 -4162 0
c Encoding variable: aux402 with domain: int(0..2) (representing constraint ((field_00009_00008=5) + (field_00006_00008=5)))
c Both direct and order encoding.
c Var 'aux402' order represents '0' with '4164'
c Var 'aux402' direct represents '0' with '4164'
c Var 'aux402' order represents '1' with '4165'
-4164 4165 0
c Var 'aux402' direct represents '1' with '4166'
4164 -4165 4166 0
-4166 4165 0
-4166 -4164 0
c Var 'aux402' direct represents '2' with '-4165'
4164 4166 -4165 0
c Encoding variable: aux403 with domain: int(0..2) (representing constraint ((field_00001_00008=5) + (field_00007_00008=5)))
c Both direct and order encoding.
c Var 'aux403' order represents '0' with '4167'
c Var 'aux403' direct represents '0' with '4167'
c Var 'aux403' order represents '1' with '4168'
-4167 4168 0
c Var 'aux403' direct represents '1' with '4169'
4167 -4168 4169 0
-4169 4168 0
-4169 -4167 0
c Var 'aux403' direct represents '2' with '-4168'
4167 4169 -4168 0
c Encoding variable: aux404 with domain: int(0..2) (representing constraint ((field_00008_00008=5) + (field_00003_00008=5)))
c Both direct and order encoding.
c Var 'aux404' order represents '0' with '4170'
c Var 'aux404' direct represents '0' with '4170'
c Var 'aux404' order represents '1' with '4171'
-4170 4171 0
c Var 'aux404' direct represents '1' with '4172'
4170 -4171 4172 0
-4172 4171 0
-4172 -4170 0
c Var 'aux404' direct represents '2' with '-4171'
4170 4172 -4171 0
c Encoding variable: aux405 with domain: int(0..3) (representing constraint ((field_00005_00008=5) + aux404))
c Both direct and order encoding.
c Var 'aux405' order represents '0' with '4173'
c Var 'aux405' direct represents '0' with '4173'
c Var 'aux405' order represents '1' with '4174'
-4173 4174 0
c Var 'aux405' direct represents '1' with '4175'
4173 -4174 4175 0
-4175 4174 0
-4175 -4173 0
c Var 'aux405' order represents '2' with '4176'
-4174 4176 0
c Var 'aux405' direct represents '2' with '4177'
4174 -4176 4177 0
-4177 4176 0
-4177 -4174 0
c Var 'aux405' direct represents '3' with '-4176'
4173 4175 4177 -4176 0
c Encoding variable: aux406 with domain: int(0..2) (representing constraint ((field_00009_00008=7) + (field_00006_00008=7)))
c Both direct and order encoding.
c Var 'aux406' order represents '0' with '4178'
c Var 'aux406' direct represents '0' with '4178'
c Var 'aux406' order represents '1' with '4179'
-4178 4179 0
c Var 'aux406' direct represents '1' with '4180'
4178 -4179 4180 0
-4180 4179 0
-4180 -4178 0
c Var 'aux406' direct represents '2' with '-4179'
4178 4180 -4179 0
c Encoding variable: aux407 with domain: int(0..2) (representing constraint ((field_00001_00008=7) + (field_00007_00008=7)))
c Both direct and order encoding.
c Var 'aux407' order represents '0' with '4181'
c Var 'aux407' direct represents '0' with '4181'
c Var 'aux407' order represents '1' with '4182'
-4181 4182 0
c Var 'aux407' direct represents '1' with '4183'
4181 -4182 4183 0
-4183 4182 0
-4183 -4181 0
c Var 'aux407' direct represents '2' with '-4182'
4181 4183 -4182 0
c Encoding variable: aux408 with domain: int(0..2) (representing constraint ((field_00008_00008=7) + (field_00003_00008=7)))
c Both direct and order encoding.
c Var 'aux408' order represents '0' with '4184'
c Var 'aux408' direct represents '0' with '4184'
c Var 'aux408' order represents '1' with '4185'
-4184 4185 0
c Var 'aux408' direct represents '1' with '4186'
4184 -4185 4186 0
-4186 4185 0
-4186 -4184 0
c Var 'aux408' direct represents '2' with '-4185'
4184 4186 -4185 0
c Encoding variable: aux409 with domain: int(0..3) (representing constraint ((field_00005_00008=7) + aux408))
c Both direct and order encoding.
c Var 'aux409' order represents '0' with '4187'
c Var 'aux409' direct represents '0' with '4187'
c Var 'aux409' order represents '1' with '4188'
-4187 4188 0
c Var 'aux409' direct represents '1' with '4189'
4187 -4188 4189 0
-4189 4188 0
-4189 -4187 0
c Var 'aux409' order represents '2' with '4190'
-4188 4190 0
c Var 'aux409' direct represents '2' with '4191'
4188 -4190 4191 0
-4191 4190 0
-4191 -4188 0
c Var 'aux409' direct represents '3' with '-4190'
4187 4189 4191 -4190 0
c Encoding variable: aux410 with domain: int(0..2) (representing constraint ((field_00009_00008=9) + (field_00006_00008=9)))
c Both direct and order encoding.
c Var 'aux410' order represents '0' with '4192'
c Var 'aux410' direct represents '0' with '4192'
c Var 'aux410' order represents '1' with '4193'
-4192 4193 0
c Var 'aux410' direct represents '1' with '4194'
4192 -4193 4194 0
-4194 4193 0
-4194 -4192 0
c Var 'aux410' direct represents '2' with '-4193'
4192 4194 -4193 0
c Encoding variable: aux411 with domain: int(0..2) (representing constraint ((field_00001_00008=9) + (field_00007_00008=9)))
c Both direct and order encoding.
c Var 'aux411' order represents '0' with '4195'
c Var 'aux411' direct represents '0' with '4195'
c Var 'aux411' order represents '1' with '4196'
-4195 4196 0
c Var 'aux411' direct represents '1' with '4197'
4195 -4196 4197 0
-4197 4196 0
-4197 -4195 0
c Var 'aux411' direct represents '2' with '-4196'
4195 4197 -4196 0
c Encoding variable: aux412 with domain: int(0..2) (representing constraint ((field_00008_00008=9) + (field_00003_00008=9)))
c Both direct and order encoding.
c Var 'aux412' order represents '0' with '4198'
c Var 'aux412' direct represents '0' with '4198'
c Var 'aux412' order represents '1' with '4199'
-4198 4199 0
c Var 'aux412' direct represents '1' with '4200'
4198 -4199 4200 0
-4200 4199 0
-4200 -4198 0
c Var 'aux412' direct represents '2' with '-4199'
4198 4200 -4199 0
c Encoding variable: aux413 with domain: int(0..3) (representing constraint ((field_00005_00008=9) + aux412))
c Both direct and order encoding.
c Var 'aux413' order represents '0' with '4201'
c Var 'aux413' direct represents '0' with '4201'
c Var 'aux413' order represents '1' with '4202'
-4201 4202 0
c Var 'aux413' direct represents '1' with '4203'
4201 -4202 4203 0
-4203 4202 0
-4203 -4201 0
c Var 'aux413' order represents '2' with '4204'
-4202 4204 0
c Var 'aux413' direct represents '2' with '4205'
4202 -4204 4205 0
-4205 4204 0
-4205 -4202 0
c Var 'aux413' direct represents '3' with '-4204'
4201 4203 4205 -4204 0
c Encoding variable: aux414 with domain: int(0..2) (representing constraint ((field_00009_00009=1) + (field_00001_00009=1)))
c Both direct and order encoding.
c Var 'aux414' order represents '0' with '4206'
c Var 'aux414' direct represents '0' with '4206'
c Var 'aux414' order represents '1' with '4207'
-4206 4207 0
c Var 'aux414' direct represents '1' with '4208'
4206 -4207 4208 0
-4208 4207 0
-4208 -4206 0
c Var 'aux414' direct represents '2' with '-4207'
4206 4208 -4207 0
c Encoding variable: aux415 with domain: int(0..2) (representing constraint ((field_00003_00009=1) + (field_00007_00009=1)))
c Both direct and order encoding.
c Var 'aux415' order represents '0' with '4209'
c Var 'aux415' direct represents '0' with '4209'
c Var 'aux415' order represents '1' with '4210'
-4209 4210 0
c Var 'aux415' direct represents '1' with '4211'
4209 -4210 4211 0
-4211 4210 0
-4211 -4209 0
c Var 'aux415' direct represents '2' with '-4210'
4209 4211 -4210 0
c Encoding variable: aux416 with domain: int(0..2) (representing constraint ((field_00009_00009=5) + (field_00006_00009=5)))
c Both direct and order encoding.
c Var 'aux416' order represents '0' with '4212'
c Var 'aux416' direct represents '0' with '4212'
c Var 'aux416' order represents '1' with '4213'
-4212 4213 0
c Var 'aux416' direct represents '1' with '4214'
4212 -4213 4214 0
-4214 4213 0
-4214 -4212 0
c Var 'aux416' direct represents '2' with '-4213'
4212 4214 -4213 0
c Encoding variable: aux417 with domain: int(0..2) (representing constraint ((field_00001_00009=5) + (field_00007_00009=5)))
c Both direct and order encoding.
c Var 'aux417' order represents '0' with '4215'
c Var 'aux417' direct represents '0' with '4215'
c Var 'aux417' order represents '1' with '4216'
-4215 4216 0
c Var 'aux417' direct represents '1' with '4217'
4215 -4216 4217 0
-4217 4216 0
-4217 -4215 0
c Var 'aux417' direct represents '2' with '-4216'
4215 4217 -4216 0
c Encoding variable: aux418 with domain: int(0..2) (representing constraint ((field_00008_00009=5) + (field_00003_00009=5)))
c Both direct and order encoding.
c Var 'aux418' order represents '0' with '4218'
c Var 'aux418' direct represents '0' with '4218'
c Var 'aux418' order represents '1' with '4219'
-4218 4219 0
c Var 'aux418' direct represents '1' with '4220'
4218 -4219 4220 0
-4220 4219 0
-4220 -4218 0
c Var 'aux418' direct represents '2' with '-4219'
4218 4220 -4219 0
c Encoding variable: aux419 with domain: int(0..3) (representing constraint ((field_00005_00009=5) + aux418))
c Both direct and order encoding.
c Var 'aux419' order represents '0' with '4221'
c Var 'aux419' direct represents '0' with '4221'
c Var 'aux419' order represents '1' with '4222'
-4221 4222 0
c Var 'aux419' direct represents '1' with '4223'
4221 -4222 4223 0
-4223 4222 0
-4223 -4221 0
c Var 'aux419' order represents '2' with '4224'
-4222 4224 0
c Var 'aux419' direct represents '2' with '4225'
4222 -4224 4225 0
-4225 4224 0
-4225 -4222 0
c Var 'aux419' direct represents '3' with '-4224'
4221 4223 4225 -4224 0
c Encoding variable: aux420 with domain: int(0..2) (representing constraint ((field_00009_00009=7) + (field_00006_00009=7)))
c Both direct and order encoding.
c Var 'aux420' order represents '0' with '4226'
c Var 'aux420' direct represents '0' with '4226'
c Var 'aux420' order represents '1' with '4227'
-4226 4227 0
c Var 'aux420' direct represents '1' with '4228'
4226 -4227 4228 0
-4228 4227 0
-4228 -4226 0
c Var 'aux420' direct represents '2' with '-4227'
4226 4228 -4227 0
c Encoding variable: aux421 with domain: int(0..2) (representing constraint ((field_00001_00009=7) + (field_00007_00009=7)))
c Both direct and order encoding.
c Var 'aux421' order represents '0' with '4229'
c Var 'aux421' direct represents '0' with '4229'
c Var 'aux421' order represents '1' with '4230'
-4229 4230 0
c Var 'aux421' direct represents '1' with '4231'
4229 -4230 4231 0
-4231 4230 0
-4231 -4229 0
c Var 'aux421' direct represents '2' with '-4230'
4229 4231 -4230 0
c Encoding variable: aux422 with domain: int(0..2) (representing constraint ((field_00008_00009=7) + (field_00003_00009=7)))
c Both direct and order encoding.
c Var 'aux422' order represents '0' with '4232'
c Var 'aux422' direct represents '0' with '4232'
c Var 'aux422' order represents '1' with '4233'
-4232 4233 0
c Var 'aux422' direct represents '1' with '4234'
4232 -4233 4234 0
-4234 4233 0
-4234 -4232 0
c Var 'aux422' direct represents '2' with '-4233'
4232 4234 -4233 0
c Encoding variable: aux423 with domain: int(0..3) (representing constraint ((field_00005_00009=7) + aux422))
c Both direct and order encoding.
c Var 'aux423' order represents '0' with '4235'
c Var 'aux423' direct represents '0' with '4235'
c Var 'aux423' order represents '1' with '4236'
-4235 4236 0
c Var 'aux423' direct represents '1' with '4237'
4235 -4236 4237 0
-4237 4236 0
-4237 -4235 0
c Var 'aux423' order represents '2' with '4238'
-4236 4238 0
c Var 'aux423' direct represents '2' with '4239'
4236 -4238 4239 0
-4239 4238 0
-4239 -4236 0
c Var 'aux423' direct represents '3' with '-4238'
4235 4237 4239 -4238 0
c Encoding variable: aux424 with domain: int(0..2) (representing constraint ((field_00009_00009=8) + (field_00001_00009=8)))
c Both direct and order encoding.
c Var 'aux424' order represents '0' with '4240'
c Var 'aux424' direct represents '0' with '4240'
c Var 'aux424' order represents '1' with '4241'
-4240 4241 0
c Var 'aux424' direct represents '1' with '4242'
4240 -4241 4242 0
-4242 4241 0
-4242 -4240 0
c Var 'aux424' direct represents '2' with '-4241'
4240 4242 -4241 0
c Encoding variable: aux425 with domain: int(0..2) (representing constraint ((field_00008_00009=8) + (field_00007_00009=8)))
c Both direct and order encoding.
c Var 'aux425' order represents '0' with '4243'
c Var 'aux425' direct represents '0' with '4243'
c Var 'aux425' order represents '1' with '4244'
-4243 4244 0
c Var 'aux425' direct represents '1' with '4245'
4243 -4244 4245 0
-4245 4244 0
-4245 -4243 0
c Var 'aux425' direct represents '2' with '-4244'
4243 4245 -4244 0
c Encoding variable: aux426 with domain: int(0..2) (representing constraint ((field_00009_00009=9) + (field_00001_00009=9)))
c Both direct and order encoding.
c Var 'aux426' order represents '0' with '4246'
c Var 'aux426' direct represents '0' with '4246'
c Var 'aux426' order represents '1' with '4247'
-4246 4247 0
c Var 'aux426' direct represents '1' with '4248'
4246 -4247 4248 0
-4248 4247 0
-4248 -4246 0
c Var 'aux426' direct represents '2' with '-4247'
4246 4248 -4247 0
c Encoding variable: aux427 with domain: int(0..2) (representing constraint ((field_00003_00009=9) + (field_00007_00009=9)))
c Both direct and order encoding.
c Var 'aux427' order represents '0' with '4249'
c Var 'aux427' direct represents '0' with '4249'
c Var 'aux427' order represents '1' with '4250'
-4249 4250 0
c Var 'aux427' direct represents '1' with '4251'
4249 -4250 4251 0
-4251 4250 0
-4251 -4249 0
c Var 'aux427' direct represents '2' with '-4250'
4249 4251 -4250 0
c Encoding variable: aux428 with domain: int(0..2) (representing constraint ((field_00001_00005=4) + (field_00001_00009=4)))
c Both direct and order encoding.
c Var 'aux428' order represents '0' with '4252'
c Var 'aux428' direct represents '0' with '4252'
c Var 'aux428' order represents '1' with '4253'
-4252 4253 0
c Var 'aux428' direct represents '1' with '4254'
4252 -4253 4254 0
-4254 4253 0
-4254 -4252 0
c Var 'aux428' direct represents '2' with '-4253'
4252 4254 -4253 0
c Encoding variable: aux429 with domain: int(0..2) (representing constraint ((field_00001_00001=5) + (field_00001_00009=5)))
c Both direct and order encoding.
c Var 'aux429' order represents '0' with '4255'
c Var 'aux429' direct represents '0' with '4255'
c Var 'aux429' order represents '1' with '4256'
-4255 4256 0
c Var 'aux429' direct represents '1' with '4257'
4255 -4256 4257 0
-4257 4256 0
-4257 -4255 0
c Var 'aux429' direct represents '2' with '-4256'
4255 4257 -4256 0
c Encoding variable: aux430 with domain: int(0..2) (representing constraint ((field_00001_00008=5) + (field_00001_00002=5)))
c Both direct and order encoding.
c Var 'aux430' order represents '0' with '4258'
c Var 'aux430' direct represents '0' with '4258'
c Var 'aux430' order represents '1' with '4259'
-4258 4259 0
c Var 'aux430' direct represents '1' with '4260'
4258 -4259 4260 0
-4260 4259 0
-4260 -4258 0
c Var 'aux430' direct represents '2' with '-4259'
4258 4260 -4259 0
c Encoding variable: aux431 with domain: int(0..2) (representing constraint ((field_00001_00006=5) + (field_00001_00005=5)))
c Both direct and order encoding.
c Var 'aux431' order represents '0' with '4261'
c Var 'aux431' direct represents '0' with '4261'
c Var 'aux431' order represents '1' with '4262'
-4261 4262 0
c Var 'aux431' direct represents '1' with '4263'
4261 -4262 4263 0
-4263 4262 0
-4263 -4261 0
c Var 'aux431' direct represents '2' with '-4262'
4261 4263 -4262 0
c Encoding variable: aux432 with domain: int(0..3) (representing constraint ((field_00001_00003=5) + aux431))
c Both direct and order encoding.
c Var 'aux432' order represents '0' with '4264'
c Var 'aux432' direct represents '0' with '4264'
c Var 'aux432' order represents '1' with '4265'
-4264 4265 0
c Var 'aux432' direct represents '1' with '4266'
4264 -4265 4266 0
-4266 4265 0
-4266 -4264 0
c Var 'aux432' order represents '2' with '4267'
-4265 4267 0
c Var 'aux432' direct represents '2' with '4268'
4265 -4267 4268 0
-4268 4267 0
-4268 -4265 0
c Var 'aux432' direct represents '3' with '-4267'
4264 4266 4268 -4267 0
c Encoding variable: aux433 with domain: int(0..2) (representing constraint ((field_00001_00001=6) + (field_00001_00006=6)))
c Both direct and order encoding.
c Var 'aux433' order represents '0' with '4269'
c Var 'aux433' direct represents '0' with '4269'
c Var 'aux433' order represents '1' with '4270'
-4269 4270 0
c Var 'aux433' direct represents '1' with '4271'
4269 -4270 4271 0
-4271 4270 0
-4271 -4269 0
c Var 'aux433' direct represents '2' with '-4270'
4269 4271 -4270 0
c Encoding variable: aux434 with domain: int(0..2) (representing constraint ((field_00001_00005=6) + (field_00001_00002=6)))
c Both direct and order encoding.
c Var 'aux434' order represents '0' with '4272'
c Var 'aux434' direct represents '0' with '4272'
c Var 'aux434' order represents '1' with '4273'
-4272 4273 0
c Var 'aux434' direct represents '1' with '4274'
4272 -4273 4274 0
-4274 4273 0
-4274 -4272 0
c Var 'aux434' direct represents '2' with '-4273'
4272 4274 -4273 0
c Encoding variable: aux435 with domain: int(0..2) (representing constraint ((field_00001_00001=7) + (field_00001_00009=7)))
c Both direct and order encoding.
c Var 'aux435' order represents '0' with '4275'
c Var 'aux435' direct represents '0' with '4275'
c Var 'aux435' order represents '1' with '4276'
-4275 4276 0
c Var 'aux435' direct represents '1' with '4277'
4275 -4276 4277 0
-4277 4276 0
-4277 -4275 0
c Var 'aux435' direct represents '2' with '-4276'
4275 4277 -4276 0
c Encoding variable: aux436 with domain: int(0..2) (representing constraint ((field_00001_00008=7) + (field_00001_00002=7)))
c Both direct and order encoding.
c Var 'aux436' order represents '0' with '4278'
c Var 'aux436' direct represents '0' with '4278'
c Var 'aux436' order represents '1' with '4279'
-4278 4279 0
c Var 'aux436' direct represents '1' with '4280'
4278 -4279 4280 0
-4280 4279 0
-4280 -4278 0
c Var 'aux436' direct represents '2' with '-4279'
4278 4280 -4279 0
c Encoding variable: aux437 with domain: int(0..2) (representing constraint ((field_00001_00005=7) + (field_00001_00003=7)))
c Both direct and order encoding.
c Var 'aux437' order represents '0' with '4281'
c Var 'aux437' direct represents '0' with '4281'
c Var 'aux437' order represents '1' with '4282'
-4281 4282 0
c Var 'aux437' direct represents '1' with '4283'
4281 -4282 4283 0
-4283 4282 0
-4283 -4281 0
c Var 'aux437' direct represents '2' with '-4282'
4281 4283 -4282 0
c Encoding variable: aux438 with domain: int(0..2) (representing constraint ((field_00001_00001=8) + (field_00001_00009=8)))
c Both direct and order encoding.
c Var 'aux438' order represents '0' with '4284'
c Var 'aux438' direct represents '0' with '4284'
c Var 'aux438' order represents '1' with '4285'
-4284 4285 0
c Var 'aux438' direct represents '1' with '4286'
4284 -4285 4286 0
-4286 4285 0
-4286 -4284 0
c Var 'aux438' direct represents '2' with '-4285'
4284 4286 -4285 0
c Encoding variable: aux439 with domain: int(0..2) (representing constraint ((field_00001_00001=9) + (field_00001_00009=9)))
c Both direct and order encoding.
c Var 'aux439' order represents '0' with '4287'
c Var 'aux439' direct represents '0' with '4287'
c Var 'aux439' order represents '1' with '4288'
-4287 4288 0
c Var 'aux439' direct represents '1' with '4289'
4287 -4288 4289 0
-4289 4288 0
-4289 -4287 0
c Var 'aux439' direct represents '2' with '-4288'
4287 4289 -4288 0
c Encoding variable: aux440 with domain: int(0..2) (representing constraint ((field_00003_00005=1) + (field_00003_00009=1)))
c Both direct and order encoding.
c Var 'aux440' order represents '0' with '4290'
c Var 'aux440' direct represents '0' with '4290'
c Var 'aux440' order represents '1' with '4291'
-4290 4291 0
c Var 'aux440' direct represents '1' with '4292'
4290 -4291 4292 0
-4292 4291 0
-4292 -4290 0
c Var 'aux440' direct represents '2' with '-4291'
4290 4292 -4291 0
c Encoding variable: aux441 with domain: int(0..2) (representing constraint ((field_00003_00004=4) + (field_00003_00009=4)))
c Both direct and order encoding.
c Var 'aux441' order represents '0' with '4293'
c Var 'aux441' direct represents '0' with '4293'
c Var 'aux441' order represents '1' with '4294'
-4293 4294 0
c Var 'aux441' direct represents '1' with '4295'
4293 -4294 4295 0
-4295 4294 0
-4295 -4293 0
c Var 'aux441' direct represents '2' with '-4294'
4293 4295 -4294 0
c Encoding variable: aux442 with domain: int(0..2) (representing constraint ((field_00003_00008=4) + (field_00003_00005=4)))
c Both direct and order encoding.
c Var 'aux442' order represents '0' with '4296'
c Var 'aux442' direct represents '0' with '4296'
c Var 'aux442' order represents '1' with '4297'
-4296 4297 0
c Var 'aux442' direct represents '1' with '4298'
4296 -4297 4298 0
-4298 4297 0
-4298 -4296 0
c Var 'aux442' direct represents '2' with '-4297'
4296 4298 -4297 0
c Encoding variable: aux443 with domain: int(0..2) (representing constraint ((field_00003_00001=5) + (field_00003_00009=5)))
c Both direct and order encoding.
c Var 'aux443' order represents '0' with '4299'
c Var 'aux443' direct represents '0' with '4299'
c Var 'aux443' order represents '1' with '4300'
-4299 4300 0
c Var 'aux443' direct represents '1' with '4301'
4299 -4300 4301 0
-4301 4300 0
-4301 -4299 0
c Var 'aux443' direct represents '2' with '-4300'
4299 4301 -4300 0
c Encoding variable: aux444 with domain: int(0..2) (representing constraint ((field_00003_00008=5) + (field_00003_00002=5)))
c Both direct and order encoding.
c Var 'aux444' order represents '0' with '4302'
c Var 'aux444' direct represents '0' with '4302'
c Var 'aux444' order represents '1' with '4303'
-4302 4303 0
c Var 'aux444' direct represents '1' with '4304'
4302 -4303 4304 0
-4304 4303 0
-4304 -4302 0
c Var 'aux444' direct represents '2' with '-4303'
4302 4304 -4303 0
c Encoding variable: aux445 with domain: int(0..2) (representing constraint ((field_00003_00007=5) + (field_00003_00005=5)))
c Both direct and order encoding.
c Var 'aux445' order represents '0' with '4305'
c Var 'aux445' direct represents '0' with '4305'
c Var 'aux445' order represents '1' with '4306'
-4305 4306 0
c Var 'aux445' direct represents '1' with '4307'
4305 -4306 4307 0
-4307 4306 0
-4307 -4305 0
c Var 'aux445' direct represents '2' with '-4306'
4305 4307 -4306 0
c Encoding variable: aux446 with domain: int(0..2) (representing constraint ((field_00003_00006=5) + (field_00003_00003=5)))
c Both direct and order encoding.
c Var 'aux446' order represents '0' with '4308'
c Var 'aux446' direct represents '0' with '4308'
c Var 'aux446' order represents '1' with '4309'
-4308 4309 0
c Var 'aux446' direct represents '1' with '4310'
4308 -4309 4310 0
-4310 4309 0
-4310 -4308 0
c Var 'aux446' direct represents '2' with '-4309'
4308 4310 -4309 0
c Encoding variable: aux447 with domain: int(0..4) (representing constraint (aux443 + aux446))
c Both direct and order encoding.
c Var 'aux447' order represents '0' with '4311'
c Var 'aux447' direct represents '0' with '4311'
c Var 'aux447' order represents '1' with '4312'
-4311 4312 0
c Var 'aux447' direct represents '1' with '4313'
4311 -4312 4313 0
-4313 4312 0
-4313 -4311 0
c Var 'aux447' order represents '2' with '4314'
-4312 4314 0
c Var 'aux447' direct represents '2' with '4315'
4312 -4314 4315 0
-4315 4314 0
-4315 -4312 0
c Var 'aux447' order represents '3' with '4316'
-4314 4316 0
c Var 'aux447' direct represents '3' with '4317'
4314 -4316 4317 0
-4317 4316 0
-4317 -4314 0
c Var 'aux447' direct represents '4' with '-4316'
4311 4313 4315 4317 -4316 0
c Encoding variable: aux448 with domain: int(0..2) (representing constraint ((field_00003_00001=6) + (field_00003_00006=6)))
c Both direct and order encoding.
c Var 'aux448' order represents '0' with '4318'
c Var 'aux448' direct represents '0' with '4318'
c Var 'aux448' order represents '1' with '4319'
-4318 4319 0
c Var 'aux448' direct represents '1' with '4320'
4318 -4319 4320 0
-4320 4319 0
-4320 -4318 0
c Var 'aux448' direct represents '2' with '-4319'
4318 4320 -4319 0
c Encoding variable: aux449 with domain: int(0..2) (representing constraint ((field_00003_00005=6) + (field_00003_00002=6)))
c Both direct and order encoding.
c Var 'aux449' order represents '0' with '4321'
c Var 'aux449' direct represents '0' with '4321'
c Var 'aux449' order represents '1' with '4322'
-4321 4322 0
c Var 'aux449' direct represents '1' with '4323'
4321 -4322 4323 0
-4323 4322 0
-4323 -4321 0
c Var 'aux449' direct represents '2' with '-4322'
4321 4323 -4322 0
c Encoding variable: aux450 with domain: int(0..2) (representing constraint ((field_00003_00004=6) + (field_00003_00003=6)))
c Both direct and order encoding.
c Var 'aux450' order represents '0' with '4324'
c Var 'aux450' direct represents '0' with '4324'
c Var 'aux450' order represents '1' with '4325'
-4324 4325 0
c Var 'aux450' direct represents '1' with '4326'
4324 -4325 4326 0
-4326 4325 0
-4326 -4324 0
c Var 'aux450' direct represents '2' with '-4325'
4324 4326 -4325 0
c Encoding variable: aux451 with domain: int(0..2) (representing constraint ((field_00003_00001=7) + (field_00003_00009=7)))
c Both direct and order encoding.
c Var 'aux451' order represents '0' with '4327'
c Var 'aux451' direct represents '0' with '4327'
c Var 'aux451' order represents '1' with '4328'
-4327 4328 0
c Var 'aux451' direct represents '1' with '4329'
4327 -4328 4329 0
-4329 4328 0
-4329 -4327 0
c Var 'aux451' direct represents '2' with '-4328'
4327 4329 -4328 0
c Encoding variable: aux452 with domain: int(0..2) (representing constraint ((field_00003_00008=7) + (field_00003_00002=7)))
c Both direct and order encoding.
c Var 'aux452' order represents '0' with '4330'
c Var 'aux452' direct represents '0' with '4330'
c Var 'aux452' order represents '1' with '4331'
-4330 4331 0
c Var 'aux452' direct represents '1' with '4332'
4330 -4331 4332 0
-4332 4331 0
-4332 -4330 0
c Var 'aux452' direct represents '2' with '-4331'
4330 4332 -4331 0
c Encoding variable: aux453 with domain: int(0..2) (representing constraint ((field_00003_00007=7) + (field_00003_00004=7)))
c Both direct and order encoding.
c Var 'aux453' order represents '0' with '4333'
c Var 'aux453' direct represents '0' with '4333'
c Var 'aux453' order represents '1' with '4334'
-4333 4334 0
c Var 'aux453' direct represents '1' with '4335'
4333 -4334 4335 0
-4335 4334 0
-4335 -4333 0
c Var 'aux453' direct represents '2' with '-4334'
4333 4335 -4334 0
c Encoding variable: aux454 with domain: int(0..2) (representing constraint ((field_00003_00006=7) + (field_00003_00005=7)))
c Both direct and order encoding.
c Var 'aux454' order represents '0' with '4336'
c Var 'aux454' direct represents '0' with '4336'
c Var 'aux454' order represents '1' with '4337'
-4336 4337 0
c Var 'aux454' direct represents '1' with '4338'
4336 -4337 4338 0
-4338 4337 0
-4338 -4336 0
c Var 'aux454' direct represents '2' with '-4337'
4336 4338 -4337 0
c Encoding variable: aux455 with domain: int(0..3) (representing constraint ((field_00003_00003=7) + aux454))
c Both direct and order encoding.
c Var 'aux455' order represents '0' with '4339'
c Var 'aux455' direct represents '0' with '4339'
c Var 'aux455' order represents '1' with '4340'
-4339 4340 0
c Var 'aux455' direct represents '1' with '4341'
4339 -4340 4341 0
-4341 4340 0
-4341 -4339 0
c Var 'aux455' order represents '2' with '4342'
-4340 4342 0
c Var 'aux455' direct represents '2' with '4343'
4340 -4342 4343 0
-4343 4342 0
-4343 -4340 0
c Var 'aux455' direct represents '3' with '-4342'
4339 4341 4343 -4342 0
c Encoding variable: aux456 with domain: int(0..4) (representing constraint (aux451 + aux453))
c Both direct and order encoding.
c Var 'aux456' order represents '0' with '4344'
c Var 'aux456' direct represents '0' with '4344'
c Var 'aux456' order represents '1' with '4345'
-4344 4345 0
c Var 'aux456' direct represents '1' with '4346'
4344 -4345 4346 0
-4346 4345 0
-4346 -4344 0
c Var 'aux456' order represents '2' with '4347'
-4345 4347 0
c Var 'aux456' direct represents '2' with '4348'
4345 -4347 4348 0
-4348 4347 0
-4348 -4345 0
c Var 'aux456' order represents '3' with '4349'
-4347 4349 0
c Var 'aux456' direct represents '3' with '4350'
4347 -4349 4350 0
-4350 4349 0
-4350 -4347 0
c Var 'aux456' direct represents '4' with '-4349'
4344 4346 4348 4350 -4349 0
c Encoding variable: aux457 with domain: int(0..2) (representing constraint ((field_00003_00001=8) + (field_00003_00009=8)))
c Both direct and order encoding.
c Var 'aux457' order represents '0' with '4351'
c Var 'aux457' direct represents '0' with '4351'
c Var 'aux457' order represents '1' with '4352'
-4351 4352 0
c Var 'aux457' direct represents '1' with '4353'
4351 -4352 4353 0
-4353 4352 0
-4353 -4351 0
c Var 'aux457' direct represents '2' with '-4352'
4351 4353 -4352 0
c Encoding variable: aux458 with domain: int(0..2) (representing constraint ((field_00003_00007=8) + (field_00003_00002=8)))
c Both direct and order encoding.
c Var 'aux458' order represents '0' with '4354'
c Var 'aux458' direct represents '0' with '4354'
c Var 'aux458' order represents '1' with '4355'
-4354 4355 0
c Var 'aux458' direct represents '1' with '4356'
4354 -4355 4356 0
-4356 4355 0
-4356 -4354 0
c Var 'aux458' direct represents '2' with '-4355'
4354 4356 -4355 0
c Encoding variable: aux459 with domain: int(0..2) (representing constraint ((field_00003_00006=8) + (field_00003_00004=8)))
c Both direct and order encoding.
c Var 'aux459' order represents '0' with '4357'
c Var 'aux459' direct represents '0' with '4357'
c Var 'aux459' order represents '1' with '4358'
-4357 4358 0
c Var 'aux459' direct represents '1' with '4359'
4357 -4358 4359 0
-4359 4358 0
-4359 -4357 0
c Var 'aux459' direct represents '2' with '-4358'
4357 4359 -4358 0
c Encoding variable: aux460 with domain: int(0..2) (representing constraint ((field_00003_00005=8) + (field_00003_00003=8)))
c Both direct and order encoding.
c Var 'aux460' order represents '0' with '4360'
c Var 'aux460' direct represents '0' with '4360'
c Var 'aux460' order represents '1' with '4361'
-4360 4361 0
c Var 'aux460' direct represents '1' with '4362'
4360 -4361 4362 0
-4362 4361 0
-4362 -4360 0
c Var 'aux460' direct represents '2' with '-4361'
4360 4362 -4361 0
c Encoding variable: aux461 with domain: int(0..4) (representing constraint (aux457 + aux460))
c Both direct and order encoding.
c Var 'aux461' order represents '0' with '4363'
c Var 'aux461' direct represents '0' with '4363'
c Var 'aux461' order represents '1' with '4364'
-4363 4364 0
c Var 'aux461' direct represents '1' with '4365'
4363 -4364 4365 0
-4365 4364 0
-4365 -4363 0
c Var 'aux461' order represents '2' with '4366'
-4364 4366 0
c Var 'aux461' direct represents '2' with '4367'
4364 -4366 4367 0
-4367 4366 0
-4367 -4364 0
c Var 'aux461' order represents '3' with '4368'
-4366 4368 0
c Var 'aux461' direct represents '3' with '4369'
4366 -4368 4369 0
-4369 4368 0
-4369 -4366 0
c Var 'aux461' direct represents '4' with '-4368'
4363 4365 4367 4369 -4368 0
c Encoding variable: aux462 with domain: int(0..2) (representing constraint ((field_00003_00001=9) + (field_00003_00009=9)))
c Both direct and order encoding.
c Var 'aux462' order represents '0' with '4370'
c Var 'aux462' direct represents '0' with '4370'
c Var 'aux462' order represents '1' with '4371'
-4370 4371 0
c Var 'aux462' direct represents '1' with '4372'
4370 -4371 4372 0
-4372 4371 0
-4372 -4370 0
c Var 'aux462' direct represents '2' with '-4371'
4370 4372 -4371 0
c Encoding variable: aux463 with domain: int(0..2) (representing constraint ((field_00003_00008=9) + (field_00003_00002=9)))
c Both direct and order encoding.
c Var 'aux463' order represents '0' with '4373'
c Var 'aux463' direct represents '0' with '4373'
c Var 'aux463' order represents '1' with '4374'
-4373 4374 0
c Var 'aux463' direct represents '1' with '4375'
4373 -4374 4375 0
-4375 4374 0
-4375 -4373 0
c Var 'aux463' direct represents '2' with '-4374'
4373 4375 -4374 0
c Encoding variable: aux464 with domain: int(0..2) (representing constraint ((field_00004_00002=2) + (field_00004_00006=2)))
c Both direct and order encoding.
c Var 'aux464' order represents '0' with '4376'
c Var 'aux464' direct represents '0' with '4376'
c Var 'aux464' order represents '1' with '4377'
-4376 4377 0
c Var 'aux464' direct represents '1' with '4378'
4376 -4377 4378 0
-4378 4377 0
-4378 -4376 0
c Var 'aux464' direct represents '2' with '-4377'
4376 4378 -4377 0
c Encoding variable: aux465 with domain: int(0..2) (representing constraint ((field_00004_00002=7) + (field_00004_00006=7)))
c Both direct and order encoding.
c Var 'aux465' order represents '0' with '4379'
c Var 'aux465' direct represents '0' with '4379'
c Var 'aux465' order represents '1' with '4380'
-4379 4380 0
c Var 'aux465' direct represents '1' with '4381'
4379 -4380 4381 0
-4381 4380 0
-4381 -4379 0
c Var 'aux465' direct represents '2' with '-4380'
4379 4381 -4380 0
c Encoding variable: aux466 with domain: int(0..2) (representing constraint ((field_00005_00005=1) + (field_00005_00009=1)))
c Both direct and order encoding.
c Var 'aux466' order represents '0' with '4382'
c Var 'aux466' direct represents '0' with '4382'
c Var 'aux466' order represents '1' with '4383'
-4382 4383 0
c Var 'aux466' direct represents '1' with '4384'
4382 -4383 4384 0
-4384 4383 0
-4384 -4382 0
c Var 'aux466' direct represents '2' with '-4383'
4382 4384 -4383 0
c Encoding variable: aux467 with domain: int(0..2) (representing constraint ((field_00005_00001=2) + (field_00005_00008=2)))
c Both direct and order encoding.
c Var 'aux467' order represents '0' with '4385'
c Var 'aux467' direct represents '0' with '4385'
c Var 'aux467' order represents '1' with '4386'
-4385 4386 0
c Var 'aux467' direct represents '1' with '4387'
4385 -4386 4387 0
-4387 4386 0
-4387 -4385 0
c Var 'aux467' direct represents '2' with '-4386'
4385 4387 -4386 0
c Encoding variable: aux468 with domain: int(0..2) (representing constraint ((field_00005_00007=2) + (field_00005_00002=2)))
c Both direct and order encoding.
c Var 'aux468' order represents '0' with '4388'
c Var 'aux468' direct represents '0' with '4388'
c Var 'aux468' order represents '1' with '4389'
-4388 4389 0
c Var 'aux468' direct represents '1' with '4390'
4388 -4389 4390 0
-4390 4389 0
-4390 -4388 0
c Var 'aux468' direct represents '2' with '-4389'
4388 4390 -4389 0
c Encoding variable: aux469 with domain: int(0..2) (representing constraint ((field_00005_00006=2) + (field_00005_00005=2)))
c Both direct and order encoding.
c Var 'aux469' order represents '0' with '4391'
c Var 'aux469' direct represents '0' with '4391'
c Var 'aux469' order represents '1' with '4392'
-4391 4392 0
c Var 'aux469' direct represents '1' with '4393'
4391 -4392 4393 0
-4393 4392 0
-4393 -4391 0
c Var 'aux469' direct represents '2' with '-4392'
4391 4393 -4392 0
c Encoding variable: aux470 with domain: int(0..3) (representing constraint ((field_00005_00003=2) + aux469))
c Both direct and order encoding.
c Var 'aux470' order represents '0' with '4394'
c Var 'aux470' direct represents '0' with '4394'
c Var 'aux470' order represents '1' with '4395'
-4394 4395 0
c Var 'aux470' direct represents '1' with '4396'
4394 -4395 4396 0
-4396 4395 0
-4396 -4394 0
c Var 'aux470' order represents '2' with '4397'
-4395 4397 0
c Var 'aux470' direct represents '2' with '4398'
4395 -4397 4398 0
-4398 4397 0
-4398 -4395 0
c Var 'aux470' direct represents '3' with '-4397'
4394 4396 4398 -4397 0
c Encoding variable: aux471 with domain: int(0..2) (representing constraint ((field_00005_00002=3) + (field_00005_00006=3)))
c Both direct and order encoding.
c Var 'aux471' order represents '0' with '4399'
c Var 'aux471' direct represents '0' with '4399'
c Var 'aux471' order represents '1' with '4400'
-4399 4400 0
c Var 'aux471' direct represents '1' with '4401'
4399 -4400 4401 0
-4401 4400 0
-4401 -4399 0
c Var 'aux471' direct represents '2' with '-4400'
4399 4401 -4400 0
c Encoding variable: aux472 with domain: int(0..2) (representing constraint ((field_00005_00004=4) + (field_00005_00009=4)))
c Both direct and order encoding.
c Var 'aux472' order represents '0' with '4402'
c Var 'aux472' direct represents '0' with '4402'
c Var 'aux472' order represents '1' with '4403'
-4402 4403 0
c Var 'aux472' direct represents '1' with '4404'
4402 -4403 4404 0
-4404 4403 0
-4404 -4402 0
c Var 'aux472' direct represents '2' with '-4403'
4402 4404 -4403 0
c Encoding variable: aux473 with domain: int(0..2) (representing constraint ((field_00005_00008=4) + (field_00005_00005=4)))
c Both direct and order encoding.
c Var 'aux473' order represents '0' with '4405'
c Var 'aux473' direct represents '0' with '4405'
c Var 'aux473' order represents '1' with '4406'
-4405 4406 0
c Var 'aux473' direct represents '1' with '4407'
4405 -4406 4407 0
-4407 4406 0
-4407 -4405 0
c Var 'aux473' direct represents '2' with '-4406'
4405 4407 -4406 0
c Encoding variable: aux474 with domain: int(0..2) (representing constraint ((field_00005_00001=5) + (field_00005_00009=5)))
c Both direct and order encoding.
c Var 'aux474' order represents '0' with '4408'
c Var 'aux474' direct represents '0' with '4408'
c Var 'aux474' order represents '1' with '4409'
-4408 4409 0
c Var 'aux474' direct represents '1' with '4410'
4408 -4409 4410 0
-4410 4409 0
-4410 -4408 0
c Var 'aux474' direct represents '2' with '-4409'
4408 4410 -4409 0
c Encoding variable: aux475 with domain: int(0..2) (representing constraint ((field_00005_00008=5) + (field_00005_00002=5)))
c Both direct and order encoding.
c Var 'aux475' order represents '0' with '4411'
c Var 'aux475' direct represents '0' with '4411'
c Var 'aux475' order represents '1' with '4412'
-4411 4412 0
c Var 'aux475' direct represents '1' with '4413'
4411 -4412 4413 0
-4413 4412 0
-4413 -4411 0
c Var 'aux475' direct represents '2' with '-4412'
4411 4413 -4412 0
c Encoding variable: aux476 with domain: int(0..2) (representing constraint ((field_00005_00007=5) + (field_00005_00003=5)))
c Both direct and order encoding.
c Var 'aux476' order represents '0' with '4414'
c Var 'aux476' direct represents '0' with '4414'
c Var 'aux476' order represents '1' with '4415'
-4414 4415 0
c Var 'aux476' direct represents '1' with '4416'
4414 -4415 4416 0
-4416 4415 0
-4416 -4414 0
c Var 'aux476' direct represents '2' with '-4415'
4414 4416 -4415 0
c Encoding variable: aux477 with domain: int(0..2) (representing constraint ((field_00005_00001=6) + (field_00005_00006=6)))
c Both direct and order encoding.
c Var 'aux477' order represents '0' with '4417'
c Var 'aux477' direct represents '0' with '4417'
c Var 'aux477' order represents '1' with '4418'
-4417 4418 0
c Var 'aux477' direct represents '1' with '4419'
4417 -4418 4419 0
-4419 4418 0
-4419 -4417 0
c Var 'aux477' direct represents '2' with '-4418'
4417 4419 -4418 0
c Encoding variable: aux478 with domain: int(0..2) (representing constraint ((field_00005_00005=6) + (field_00005_00002=6)))
c Both direct and order encoding.
c Var 'aux478' order represents '0' with '4420'
c Var 'aux478' direct represents '0' with '4420'
c Var 'aux478' order represents '1' with '4421'
-4420 4421 0
c Var 'aux478' direct represents '1' with '4422'
4420 -4421 4422 0
-4422 4421 0
-4422 -4420 0
c Var 'aux478' direct represents '2' with '-4421'
4420 4422 -4421 0
c Encoding variable: aux479 with domain: int(0..2) (representing constraint ((field_00005_00004=6) + (field_00005_00003=6)))
c Both direct and order encoding.
c Var 'aux479' order represents '0' with '4423'
c Var 'aux479' direct represents '0' with '4423'
c Var 'aux479' order represents '1' with '4424'
-4423 4424 0
c Var 'aux479' direct represents '1' with '4425'
4423 -4424 4425 0
-4425 4424 0
-4425 -4423 0
c Var 'aux479' direct represents '2' with '-4424'
4423 4425 -4424 0
c Encoding variable: aux480 with domain: int(0..2) (representing constraint ((field_00005_00001=7) + (field_00005_00009=7)))
c Both direct and order encoding.
c Var 'aux480' order represents '0' with '4426'
c Var 'aux480' direct represents '0' with '4426'
c Var 'aux480' order represents '1' with '4427'
-4426 4427 0
c Var 'aux480' direct represents '1' with '4428'
4426 -4427 4428 0
-4428 4427 0
-4428 -4426 0
c Var 'aux480' direct represents '2' with '-4427'
4426 4428 -4427 0
c Encoding variable: aux481 with domain: int(0..2) (representing constraint ((field_00005_00008=7) + (field_00005_00002=7)))
c Both direct and order encoding.
c Var 'aux481' order represents '0' with '4429'
c Var 'aux481' direct represents '0' with '4429'
c Var 'aux481' order represents '1' with '4430'
-4429 4430 0
c Var 'aux481' direct represents '1' with '4431'
4429 -4430 4431 0
-4431 4430 0
-4431 -4429 0
c Var 'aux481' direct represents '2' with '-4430'
4429 4431 -4430 0
c Encoding variable: aux482 with domain: int(0..2) (representing constraint ((field_00005_00007=7) + (field_00005_00004=7)))
c Both direct and order encoding.
c Var 'aux482' order represents '0' with '4432'
c Var 'aux482' direct represents '0' with '4432'
c Var 'aux482' order represents '1' with '4433'
-4432 4433 0
c Var 'aux482' direct represents '1' with '4434'
4432 -4433 4434 0
-4434 4433 0
-4434 -4432 0
c Var 'aux482' direct represents '2' with '-4433'
4432 4434 -4433 0
c Encoding variable: aux483 with domain: int(0..2) (representing constraint ((field_00005_00006=7) + (field_00005_00005=7)))
c Both direct and order encoding.
c Var 'aux483' order represents '0' with '4435'
c Var 'aux483' direct represents '0' with '4435'
c Var 'aux483' order represents '1' with '4436'
-4435 4436 0
c Var 'aux483' direct represents '1' with '4437'
4435 -4436 4437 0
-4437 4436 0
-4437 -4435 0
c Var 'aux483' direct represents '2' with '-4436'
4435 4437 -4436 0
c Encoding variable: aux484 with domain: int(0..3) (representing constraint ((field_00005_00003=7) + aux483))
c Both direct and order encoding.
c Var 'aux484' order represents '0' with '4438'
c Var 'aux484' direct represents '0' with '4438'
c Var 'aux484' order represents '1' with '4439'
-4438 4439 0
c Var 'aux484' direct represents '1' with '4440'
4438 -4439 4440 0
-4440 4439 0
-4440 -4438 0
c Var 'aux484' order represents '2' with '4441'
-4439 4441 0
c Var 'aux484' direct represents '2' with '4442'
4439 -4441 4442 0
-4442 4441 0
-4442 -4439 0
c Var 'aux484' direct represents '3' with '-4441'
4438 4440 4442 -4441 0
c Encoding variable: aux485 with domain: int(0..4) (representing constraint (aux480 + aux482))
c Both direct and order encoding.
c Var 'aux485' order represents '0' with '4443'
c Var 'aux485' direct represents '0' with '4443'
c Var 'aux485' order represents '1' with '4444'
-4443 4444 0
c Var 'aux485' direct represents '1' with '4445'
4443 -4444 4445 0
-4445 4444 0
-4445 -4443 0
c Var 'aux485' order represents '2' with '4446'
-4444 4446 0
c Var 'aux485' direct represents '2' with '4447'
4444 -4446 4447 0
-4447 4446 0
-4447 -4444 0
c Var 'aux485' order represents '3' with '4448'
-4446 4448 0
c Var 'aux485' direct represents '3' with '4449'
4446 -4448 4449 0
-4449 4448 0
-4449 -4446 0
c Var 'aux485' direct represents '4' with '-4448'
4443 4445 4447 4449 -4448 0
c Encoding variable: aux486 with domain: int(0..2) (representing constraint ((field_00005_00001=8) + (field_00005_00006=8)))
c Both direct and order encoding.
c Var 'aux486' order represents '0' with '4450'
c Var 'aux486' direct represents '0' with '4450'
c Var 'aux486' order represents '1' with '4451'
-4450 4451 0
c Var 'aux486' direct represents '1' with '4452'
4450 -4451 4452 0
-4452 4451 0
-4452 -4450 0
c Var 'aux486' direct represents '2' with '-4451'
4450 4452 -4451 0
c Encoding variable: aux487 with domain: int(0..2) (representing constraint ((field_00005_00005=8) + (field_00005_00002=8)))
c Both direct and order encoding.
c Var 'aux487' order represents '0' with '4453'
c Var 'aux487' direct represents '0' with '4453'
c Var 'aux487' order represents '1' with '4454'
-4453 4454 0
c Var 'aux487' direct represents '1' with '4455'
4453 -4454 4455 0
-4455 4454 0
-4455 -4453 0
c Var 'aux487' direct represents '2' with '-4454'
4453 4455 -4454 0
c Encoding variable: aux488 with domain: int(0..2) (representing constraint ((field_00005_00004=8) + (field_00005_00003=8)))
c Both direct and order encoding.
c Var 'aux488' order represents '0' with '4456'
c Var 'aux488' direct represents '0' with '4456'
c Var 'aux488' order represents '1' with '4457'
-4456 4457 0
c Var 'aux488' direct represents '1' with '4458'
4456 -4457 4458 0
-4458 4457 0
-4458 -4456 0
c Var 'aux488' direct represents '2' with '-4457'
4456 4458 -4457 0
c Encoding variable: aux489 with domain: int(0..2) (representing constraint ((field_00005_00001=9) + (field_00005_00009=9)))
c Both direct and order encoding.
c Var 'aux489' order represents '0' with '4459'
c Var 'aux489' direct represents '0' with '4459'
c Var 'aux489' order represents '1' with '4460'
-4459 4460 0
c Var 'aux489' direct represents '1' with '4461'
4459 -4460 4461 0
-4461 4460 0
-4461 -4459 0
c Var 'aux489' direct represents '2' with '-4460'
4459 4461 -4460 0
c Encoding variable: aux490 with domain: int(0..2) (representing constraint ((field_00005_00008=9) + (field_00005_00002=9)))
c Both direct and order encoding.
c Var 'aux490' order represents '0' with '4462'
c Var 'aux490' direct represents '0' with '4462'
c Var 'aux490' order represents '1' with '4463'
-4462 4463 0
c Var 'aux490' direct represents '1' with '4464'
4462 -4463 4464 0
-4464 4463 0
-4464 -4462 0
c Var 'aux490' direct represents '2' with '-4463'
4462 4464 -4463 0
c Encoding variable: aux491 with domain: int(0..2) (representing constraint ((field_00005_00007=9) + (field_00005_00003=9)))
c Both direct and order encoding.
c Var 'aux491' order represents '0' with '4465'
c Var 'aux491' direct represents '0' with '4465'
c Var 'aux491' order represents '1' with '4466'
-4465 4466 0
c Var 'aux491' direct represents '1' with '4467'
4465 -4466 4467 0
-4467 4466 0
-4467 -4465 0
c Var 'aux491' direct represents '2' with '-4466'
4465 4467 -4466 0
c Encoding variable: aux492 with domain: int(0..2) (representing constraint ((field_00006_00005=1) + (field_00006_00008=1)))
c Both direct and order encoding.
c Var 'aux492' order represents '0' with '4468'
c Var 'aux492' direct represents '0' with '4468'
c Var 'aux492' order represents '1' with '4469'
-4468 4469 0
c Var 'aux492' direct represents '1' with '4470'
4468 -4469 4470 0
-4470 4469 0
-4470 -4468 0
c Var 'aux492' direct represents '2' with '-4469'
4468 4470 -4469 0
c Encoding variable: aux493 with domain: int(0..2) (representing constraint ((field_00006_00002=2) + (field_00006_00008=2)))
c Both direct and order encoding.
c Var 'aux493' order represents '0' with '4471'
c Var 'aux493' direct represents '0' with '4471'
c Var 'aux493' order represents '1' with '4472'
-4471 4472 0
c Var 'aux493' direct represents '1' with '4473'
4471 -4472 4473 0
-4473 4472 0
-4473 -4471 0
c Var 'aux493' direct represents '2' with '-4472'
4471 4473 -4472 0
c Encoding variable: aux494 with domain: int(0..2) (representing constraint ((field_00006_00007=2) + (field_00006_00003=2)))
c Both direct and order encoding.
c Var 'aux494' order represents '0' with '4474'
c Var 'aux494' direct represents '0' with '4474'
c Var 'aux494' order represents '1' with '4475'
-4474 4475 0
c Var 'aux494' direct represents '1' with '4476'
4474 -4475 4476 0
-4476 4475 0
-4476 -4474 0
c Var 'aux494' direct represents '2' with '-4475'
4474 4476 -4475 0
c Encoding variable: aux495 with domain: int(0..2) (representing constraint ((field_00006_00006=2) + (field_00006_00005=2)))
c Both direct and order encoding.
c Var 'aux495' order represents '0' with '4477'
c Var 'aux495' direct represents '0' with '4477'
c Var 'aux495' order represents '1' with '4478'
-4477 4478 0
c Var 'aux495' direct represents '1' with '4479'
4477 -4478 4479 0
-4479 4478 0
-4479 -4477 0
c Var 'aux495' direct represents '2' with '-4478'
4477 4479 -4478 0
c Encoding variable: aux496 with domain: int(0..2) (representing constraint ((field_00006_00002=3) + (field_00006_00006=3)))
c Both direct and order encoding.
c Var 'aux496' order represents '0' with '4480'
c Var 'aux496' direct represents '0' with '4480'
c Var 'aux496' order represents '1' with '4481'
-4480 4481 0
c Var 'aux496' direct represents '1' with '4482'
4480 -4481 4482 0
-4482 4481 0
-4482 -4480 0
c Var 'aux496' direct represents '2' with '-4481'
4480 4482 -4481 0
c Encoding variable: aux497 with domain: int(0..2) (representing constraint ((field_00006_00004=4) + (field_00006_00008=4)))
c Both direct and order encoding.
c Var 'aux497' order represents '0' with '4483'
c Var 'aux497' direct represents '0' with '4483'
c Var 'aux497' order represents '1' with '4484'
-4483 4484 0
c Var 'aux497' direct represents '1' with '4485'
4483 -4484 4485 0
-4485 4484 0
-4485 -4483 0
c Var 'aux497' direct represents '2' with '-4484'
4483 4485 -4484 0
c Encoding variable: aux498 with domain: int(0..2) (representing constraint ((field_00006_00001=5) + (field_00006_00009=5)))
c Both direct and order encoding.
c Var 'aux498' order represents '0' with '4486'
c Var 'aux498' direct represents '0' with '4486'
c Var 'aux498' order represents '1' with '4487'
-4486 4487 0
c Var 'aux498' direct represents '1' with '4488'
4486 -4487 4488 0
-4488 4487 0
-4488 -4486 0
c Var 'aux498' direct represents '2' with '-4487'
4486 4488 -4487 0
c Encoding variable: aux499 with domain: int(0..2) (representing constraint ((field_00006_00008=5) + (field_00006_00002=5)))
c Both direct and order encoding.
c Var 'aux499' order represents '0' with '4489'
c Var 'aux499' direct represents '0' with '4489'
c Var 'aux499' order represents '1' with '4490'
-4489 4490 0
c Var 'aux499' direct represents '1' with '4491'
4489 -4490 4491 0
-4491 4490 0
-4491 -4489 0
c Var 'aux499' direct represents '2' with '-4490'
4489 4491 -4490 0
c Encoding variable: aux500 with domain: int(0..2) (representing constraint ((field_00006_00007=5) + (field_00006_00003=5)))
c Both direct and order encoding.
c Var 'aux500' order represents '0' with '4492'
c Var 'aux500' direct represents '0' with '4492'
c Var 'aux500' order represents '1' with '4493'
-4492 4493 0
c Var 'aux500' direct represents '1' with '4494'
4492 -4493 4494 0
-4494 4493 0
-4494 -4492 0
c Var 'aux500' direct represents '2' with '-4493'
4492 4494 -4493 0
c Encoding variable: aux501 with domain: int(0..2) (representing constraint ((field_00006_00001=6) + (field_00006_00006=6)))
c Both direct and order encoding.
c Var 'aux501' order represents '0' with '4495'
c Var 'aux501' direct represents '0' with '4495'
c Var 'aux501' order represents '1' with '4496'
-4495 4496 0
c Var 'aux501' direct represents '1' with '4497'
4495 -4496 4497 0
-4497 4496 0
-4497 -4495 0
c Var 'aux501' direct represents '2' with '-4496'
4495 4497 -4496 0
c Encoding variable: aux502 with domain: int(0..2) (representing constraint ((field_00006_00005=6) + (field_00006_00002=6)))
c Both direct and order encoding.
c Var 'aux502' order represents '0' with '4498'
c Var 'aux502' direct represents '0' with '4498'
c Var 'aux502' order represents '1' with '4499'
-4498 4499 0
c Var 'aux502' direct represents '1' with '4500'
4498 -4499 4500 0
-4500 4499 0
-4500 -4498 0
c Var 'aux502' direct represents '2' with '-4499'
4498 4500 -4499 0
c Encoding variable: aux503 with domain: int(0..2) (representing constraint ((field_00006_00004=6) + (field_00006_00003=6)))
c Both direct and order encoding.
c Var 'aux503' order represents '0' with '4501'
c Var 'aux503' direct represents '0' with '4501'
c Var 'aux503' order represents '1' with '4502'
-4501 4502 0
c Var 'aux503' direct represents '1' with '4503'
4501 -4502 4503 0
-4503 4502 0
-4503 -4501 0
c Var 'aux503' direct represents '2' with '-4502'
4501 4503 -4502 0
c Encoding variable: aux504 with domain: int(0..2) (representing constraint ((field_00006_00001=7) + (field_00006_00009=7)))
c Both direct and order encoding.
c Var 'aux504' order represents '0' with '4504'
c Var 'aux504' direct represents '0' with '4504'
c Var 'aux504' order represents '1' with '4505'
-4504 4505 0
c Var 'aux504' direct represents '1' with '4506'
4504 -4505 4506 0
-4506 4505 0
-4506 -4504 0
c Var 'aux504' direct represents '2' with '-4505'
4504 4506 -4505 0
c Encoding variable: aux505 with domain: int(0..2) (representing constraint ((field_00006_00008=7) + (field_00006_00002=7)))
c Both direct and order encoding.
c Var 'aux505' order represents '0' with '4507'
c Var 'aux505' direct represents '0' with '4507'
c Var 'aux505' order represents '1' with '4508'
-4507 4508 0
c Var 'aux505' direct represents '1' with '4509'
4507 -4508 4509 0
-4509 4508 0
-4509 -4507 0
c Var 'aux505' direct represents '2' with '-4508'
4507 4509 -4508 0
c Encoding variable: aux506 with domain: int(0..2) (representing constraint ((field_00006_00007=7) + (field_00006_00004=7)))
c Both direct and order encoding.
c Var 'aux506' order represents '0' with '4510'
c Var 'aux506' direct represents '0' with '4510'
c Var 'aux506' order represents '1' with '4511'
-4510 4511 0
c Var 'aux506' direct represents '1' with '4512'
4510 -4511 4512 0
-4512 4511 0
-4512 -4510 0
c Var 'aux506' direct represents '2' with '-4511'
4510 4512 -4511 0
c Encoding variable: aux507 with domain: int(0..2) (representing constraint ((field_00006_00006=7) + (field_00006_00005=7)))
c Both direct and order encoding.
c Var 'aux507' order represents '0' with '4513'
c Var 'aux507' direct represents '0' with '4513'
c Var 'aux507' order represents '1' with '4514'
-4513 4514 0
c Var 'aux507' direct represents '1' with '4515'
4513 -4514 4515 0
-4515 4514 0
-4515 -4513 0
c Var 'aux507' direct represents '2' with '-4514'
4513 4515 -4514 0
c Encoding variable: aux508 with domain: int(0..3) (representing constraint ((field_00006_00003=7) + aux507))
c Both direct and order encoding.
c Var 'aux508' order represents '0' with '4516'
c Var 'aux508' direct represents '0' with '4516'
c Var 'aux508' order represents '1' with '4517'
-4516 4517 0
c Var 'aux508' direct represents '1' with '4518'
4516 -4517 4518 0
-4518 4517 0
-4518 -4516 0
c Var 'aux508' order represents '2' with '4519'
-4517 4519 0
c Var 'aux508' direct represents '2' with '4520'
4517 -4519 4520 0
-4520 4519 0
-4520 -4517 0
c Var 'aux508' direct represents '3' with '-4519'
4516 4518 4520 -4519 0
c Encoding variable: aux509 with domain: int(0..4) (representing constraint (aux504 + aux506))
c Both direct and order encoding.
c Var 'aux509' order represents '0' with '4521'
c Var 'aux509' direct represents '0' with '4521'
c Var 'aux509' order represents '1' with '4522'
-4521 4522 0
c Var 'aux509' direct represents '1' with '4523'
4521 -4522 4523 0
-4523 4522 0
-4523 -4521 0
c Var 'aux509' order represents '2' with '4524'
-4522 4524 0
c Var 'aux509' direct represents '2' with '4525'
4522 -4524 4525 0
-4525 4524 0
-4525 -4522 0
c Var 'aux509' order represents '3' with '4526'
-4524 4526 0
c Var 'aux509' direct represents '3' with '4527'
4524 -4526 4527 0
-4527 4526 0
-4527 -4524 0
c Var 'aux509' direct represents '4' with '-4526'
4521 4523 4525 4527 -4526 0
c Encoding variable: aux510 with domain: int(0..2) (representing constraint ((field_00006_00001=8) + (field_00006_00006=8)))
c Both direct and order encoding.
c Var 'aux510' order represents '0' with '4528'
c Var 'aux510' direct represents '0' with '4528'
c Var 'aux510' order represents '1' with '4529'
-4528 4529 0
c Var 'aux510' direct represents '1' with '4530'
4528 -4529 4530 0
-4530 4529 0
-4530 -4528 0
c Var 'aux510' direct represents '2' with '-4529'
4528 4530 -4529 0
c Encoding variable: aux511 with domain: int(0..2) (representing constraint ((field_00006_00005=8) + (field_00006_00002=8)))
c Both direct and order encoding.
c Var 'aux511' order represents '0' with '4531'
c Var 'aux511' direct represents '0' with '4531'
c Var 'aux511' order represents '1' with '4532'
-4531 4532 0
c Var 'aux511' direct represents '1' with '4533'
4531 -4532 4533 0
-4533 4532 0
-4533 -4531 0
c Var 'aux511' direct represents '2' with '-4532'
4531 4533 -4532 0
c Encoding variable: aux512 with domain: int(0..2) (representing constraint ((field_00006_00004=8) + (field_00006_00003=8)))
c Both direct and order encoding.
c Var 'aux512' order represents '0' with '4534'
c Var 'aux512' direct represents '0' with '4534'
c Var 'aux512' order represents '1' with '4535'
-4534 4535 0
c Var 'aux512' direct represents '1' with '4536'
4534 -4535 4536 0
-4536 4535 0
-4536 -4534 0
c Var 'aux512' direct represents '2' with '-4535'
4534 4536 -4535 0
c Encoding variable: aux513 with domain: int(0..2) (representing constraint ((field_00006_00002=9) + (field_00006_00008=9)))
c Both direct and order encoding.
c Var 'aux513' order represents '0' with '4537'
c Var 'aux513' direct represents '0' with '4537'
c Var 'aux513' order represents '1' with '4538'
-4537 4538 0
c Var 'aux513' direct represents '1' with '4539'
4537 -4538 4539 0
-4539 4538 0
-4539 -4537 0
c Var 'aux513' direct represents '2' with '-4538'
4537 4539 -4538 0
c Encoding variable: aux514 with domain: int(0..2) (representing constraint ((field_00007_00001=1) + (field_00007_00009=1)))
c Both direct and order encoding.
c Var 'aux514' order represents '0' with '4540'
c Var 'aux514' direct represents '0' with '4540'
c Var 'aux514' order represents '1' with '4541'
-4540 4541 0
c Var 'aux514' direct represents '1' with '4542'
4540 -4541 4542 0
-4542 4541 0
-4542 -4540 0
c Var 'aux514' direct represents '2' with '-4541'
4540 4542 -4541 0
c Encoding variable: aux515 with domain: int(0..2) (representing constraint ((field_00007_00008=1) + (field_00007_00004=1)))
c Both direct and order encoding.
c Var 'aux515' order represents '0' with '4543'
c Var 'aux515' direct represents '0' with '4543'
c Var 'aux515' order represents '1' with '4544'
-4543 4544 0
c Var 'aux515' direct represents '1' with '4545'
4543 -4544 4545 0
-4545 4544 0
-4545 -4543 0
c Var 'aux515' direct represents '2' with '-4544'
4543 4545 -4544 0
c Encoding variable: aux516 with domain: int(0..2) (representing constraint ((field_00007_00001=2) + (field_00007_00008=2)))
c Both direct and order encoding.
c Var 'aux516' order represents '0' with '4546'
c Var 'aux516' direct represents '0' with '4546'
c Var 'aux516' order represents '1' with '4547'
-4546 4547 0
c Var 'aux516' direct represents '1' with '4548'
4546 -4547 4548 0
-4548 4547 0
-4548 -4546 0
c Var 'aux516' direct represents '2' with '-4547'
4546 4548 -4547 0
c Encoding variable: aux517 with domain: int(0..2) (representing constraint ((field_00007_00007=2) + (field_00007_00002=2)))
c Both direct and order encoding.
c Var 'aux517' order represents '0' with '4549'
c Var 'aux517' direct represents '0' with '4549'
c Var 'aux517' order represents '1' with '4550'
-4549 4550 0
c Var 'aux517' direct represents '1' with '4551'
4549 -4550 4551 0
-4551 4550 0
-4551 -4549 0
c Var 'aux517' direct represents '2' with '-4550'
4549 4551 -4550 0
c Encoding variable: aux518 with domain: int(0..2) (representing constraint ((field_00007_00006=2) + (field_00007_00005=2)))
c Both direct and order encoding.
c Var 'aux518' order represents '0' with '4552'
c Var 'aux518' direct represents '0' with '4552'
c Var 'aux518' order represents '1' with '4553'
-4552 4553 0
c Var 'aux518' direct represents '1' with '4554'
4552 -4553 4554 0
-4554 4553 0
-4554 -4552 0
c Var 'aux518' direct represents '2' with '-4553'
4552 4554 -4553 0
c Encoding variable: aux519 with domain: int(0..3) (representing constraint ((field_00007_00003=2) + aux518))
c Both direct and order encoding.
c Var 'aux519' order represents '0' with '4555'
c Var 'aux519' direct represents '0' with '4555'
c Var 'aux519' order represents '1' with '4556'
-4555 4556 0
c Var 'aux519' direct represents '1' with '4557'
4555 -4556 4557 0
-4557 4556 0
-4557 -4555 0
c Var 'aux519' order represents '2' with '4558'
-4556 4558 0
c Var 'aux519' direct represents '2' with '4559'
4556 -4558 4559 0
-4559 4558 0
-4559 -4556 0
c Var 'aux519' direct represents '3' with '-4558'
4555 4557 4559 -4558 0
c Encoding variable: aux520 with domain: int(0..2) (representing constraint ((field_00007_00002=4) + (field_00007_00006=4)))
c Both direct and order encoding.
c Var 'aux520' order represents '0' with '4560'
c Var 'aux520' direct represents '0' with '4560'
c Var 'aux520' order represents '1' with '4561'
-4560 4561 0
c Var 'aux520' direct represents '1' with '4562'
4560 -4561 4562 0
-4562 4561 0
-4562 -4560 0
c Var 'aux520' direct represents '2' with '-4561'
4560 4562 -4561 0
c Encoding variable: aux521 with domain: int(0..2) (representing constraint ((field_00007_00005=4) + (field_00007_00003=4)))
c Both direct and order encoding.
c Var 'aux521' order represents '0' with '4563'
c Var 'aux521' direct represents '0' with '4563'
c Var 'aux521' order represents '1' with '4564'
-4563 4564 0
c Var 'aux521' direct represents '1' with '4565'
4563 -4564 4565 0
-4565 4564 0
-4565 -4563 0
c Var 'aux521' direct represents '2' with '-4564'
4563 4565 -4564 0
c Encoding variable: aux522 with domain: int(0..2) (representing constraint ((field_00007_00001=5) + (field_00007_00009=5)))
c Both direct and order encoding.
c Var 'aux522' order represents '0' with '4566'
c Var 'aux522' direct represents '0' with '4566'
c Var 'aux522' order represents '1' with '4567'
-4566 4567 0
c Var 'aux522' direct represents '1' with '4568'
4566 -4567 4568 0
-4568 4567 0
-4568 -4566 0
c Var 'aux522' direct represents '2' with '-4567'
4566 4568 -4567 0
c Encoding variable: aux523 with domain: int(0..2) (representing constraint ((field_00007_00008=5) + (field_00007_00002=5)))
c Both direct and order encoding.
c Var 'aux523' order represents '0' with '4569'
c Var 'aux523' direct represents '0' with '4569'
c Var 'aux523' order represents '1' with '4570'
-4569 4570 0
c Var 'aux523' direct represents '1' with '4571'
4569 -4570 4571 0
-4571 4570 0
-4571 -4569 0
c Var 'aux523' direct represents '2' with '-4570'
4569 4571 -4570 0
c Encoding variable: aux524 with domain: int(0..2) (representing constraint ((field_00007_00007=5) + (field_00007_00005=5)))
c Both direct and order encoding.
c Var 'aux524' order represents '0' with '4572'
c Var 'aux524' direct represents '0' with '4572'
c Var 'aux524' order represents '1' with '4573'
-4572 4573 0
c Var 'aux524' direct represents '1' with '4574'
4572 -4573 4574 0
-4574 4573 0
-4574 -4572 0
c Var 'aux524' direct represents '2' with '-4573'
4572 4574 -4573 0
c Encoding variable: aux525 with domain: int(0..2) (representing constraint ((field_00007_00006=5) + (field_00007_00003=5)))
c Both direct and order encoding.
c Var 'aux525' order represents '0' with '4575'
c Var 'aux525' direct represents '0' with '4575'
c Var 'aux525' order represents '1' with '4576'
-4575 4576 0
c Var 'aux525' direct represents '1' with '4577'
4575 -4576 4577 0
-4577 4576 0
-4577 -4575 0
c Var 'aux525' direct represents '2' with '-4576'
4575 4577 -4576 0
c Encoding variable: aux526 with domain: int(0..4) (representing constraint (aux522 + aux525))
c Both direct and order encoding.
c Var 'aux526' order represents '0' with '4578'
c Var 'aux526' direct represents '0' with '4578'
c Var 'aux526' order represents '1' with '4579'
-4578 4579 0
c Var 'aux526' direct represents '1' with '4580'
4578 -4579 4580 0
-4580 4579 0
-4580 -4578 0
c Var 'aux526' order represents '2' with '4581'
-4579 4581 0
c Var 'aux526' direct represents '2' with '4582'
4579 -4581 4582 0
-4582 4581 0
-4582 -4579 0
c Var 'aux526' order represents '3' with '4583'
-4581 4583 0
c Var 'aux526' direct represents '3' with '4584'
4581 -4583 4584 0
-4584 4583 0
-4584 -4581 0
c Var 'aux526' direct represents '4' with '-4583'
4578 4580 4582 4584 -4583 0
c Encoding variable: aux527 with domain: int(0..2) (representing constraint ((field_00007_00001=6) + (field_00007_00009=6)))
c Both direct and order encoding.
c Var 'aux527' order represents '0' with '4585'
c Var 'aux527' direct represents '0' with '4585'
c Var 'aux527' order represents '1' with '4586'
-4585 4586 0
c Var 'aux527' direct represents '1' with '4587'
4585 -4586 4587 0
-4587 4586 0
-4587 -4585 0
c Var 'aux527' direct represents '2' with '-4586'
4585 4587 -4586 0
c Encoding variable: aux528 with domain: int(0..2) (representing constraint ((field_00007_00006=6) + (field_00007_00002=6)))
c Both direct and order encoding.
c Var 'aux528' order represents '0' with '4588'
c Var 'aux528' direct represents '0' with '4588'
c Var 'aux528' order represents '1' with '4589'
-4588 4589 0
c Var 'aux528' direct represents '1' with '4590'
4588 -4589 4590 0
-4590 4589 0
-4590 -4588 0
c Var 'aux528' direct represents '2' with '-4589'
4588 4590 -4589 0
c Encoding variable: aux529 with domain: int(0..2) (representing constraint ((field_00007_00005=6) + (field_00007_00004=6)))
c Both direct and order encoding.
c Var 'aux529' order represents '0' with '4591'
c Var 'aux529' direct represents '0' with '4591'
c Var 'aux529' order represents '1' with '4592'
-4591 4592 0
c Var 'aux529' direct represents '1' with '4593'
4591 -4592 4593 0
-4593 4592 0
-4593 -4591 0
c Var 'aux529' direct represents '2' with '-4592'
4591 4593 -4592 0
c Encoding variable: aux530 with domain: int(0..3) (representing constraint ((field_00007_00003=6) + aux529))
c Both direct and order encoding.
c Var 'aux530' order represents '0' with '4594'
c Var 'aux530' direct represents '0' with '4594'
c Var 'aux530' order represents '1' with '4595'
-4594 4595 0
c Var 'aux530' direct represents '1' with '4596'
4594 -4595 4596 0
-4596 4595 0
-4596 -4594 0
c Var 'aux530' order represents '2' with '4597'
-4595 4597 0
c Var 'aux530' direct represents '2' with '4598'
4595 -4597 4598 0
-4598 4597 0
-4598 -4595 0
c Var 'aux530' direct represents '3' with '-4597'
4594 4596 4598 -4597 0
c Encoding variable: aux531 with domain: int(0..2) (representing constraint ((field_00007_00001=7) + (field_00007_00009=7)))
c Both direct and order encoding.
c Var 'aux531' order represents '0' with '4599'
c Var 'aux531' direct represents '0' with '4599'
c Var 'aux531' order represents '1' with '4600'
-4599 4600 0
c Var 'aux531' direct represents '1' with '4601'
4599 -4600 4601 0
-4601 4600 0
-4601 -4599 0
c Var 'aux531' direct represents '2' with '-4600'
4599 4601 -4600 0
c Encoding variable: aux532 with domain: int(0..2) (representing constraint ((field_00007_00008=7) + (field_00007_00002=7)))
c Both direct and order encoding.
c Var 'aux532' order represents '0' with '4602'
c Var 'aux532' direct represents '0' with '4602'
c Var 'aux532' order represents '1' with '4603'
-4602 4603 0
c Var 'aux532' direct represents '1' with '4604'
4602 -4603 4604 0
-4604 4603 0
-4604 -4602 0
c Var 'aux532' direct represents '2' with '-4603'
4602 4604 -4603 0
c Encoding variable: aux533 with domain: int(0..2) (representing constraint ((field_00007_00007=7) + (field_00007_00004=7)))
c Both direct and order encoding.
c Var 'aux533' order represents '0' with '4605'
c Var 'aux533' direct represents '0' with '4605'
c Var 'aux533' order represents '1' with '4606'
-4605 4606 0
c Var 'aux533' direct represents '1' with '4607'
4605 -4606 4607 0
-4607 4606 0
-4607 -4605 0
c Var 'aux533' direct represents '2' with '-4606'
4605 4607 -4606 0
c Encoding variable: aux534 with domain: int(0..2) (representing constraint ((field_00007_00006=7) + (field_00007_00005=7)))
c Both direct and order encoding.
c Var 'aux534' order represents '0' with '4608'
c Var 'aux534' direct represents '0' with '4608'
c Var 'aux534' order represents '1' with '4609'
-4608 4609 0
c Var 'aux534' direct represents '1' with '4610'
4608 -4609 4610 0
-4610 4609 0
-4610 -4608 0
c Var 'aux534' direct represents '2' with '-4609'
4608 4610 -4609 0
c Encoding variable: aux535 with domain: int(0..3) (representing constraint ((field_00007_00003=7) + aux534))
c Both direct and order encoding.
c Var 'aux535' order represents '0' with '4611'
c Var 'aux535' direct represents '0' with '4611'
c Var 'aux535' order represents '1' with '4612'
-4611 4612 0
c Var 'aux535' direct represents '1' with '4613'
4611 -4612 4613 0
-4613 4612 0
-4613 -4611 0
c Var 'aux535' order represents '2' with '4614'
-4612 4614 0
c Var 'aux535' direct represents '2' with '4615'
4612 -4614 4615 0
-4615 4614 0
-4615 -4612 0
c Var 'aux535' direct represents '3' with '-4614'
4611 4613 4615 -4614 0
c Encoding variable: aux536 with domain: int(0..4) (representing constraint (aux531 + aux533))
c Both direct and order encoding.
c Var 'aux536' order represents '0' with '4616'
c Var 'aux536' direct represents '0' with '4616'
c Var 'aux536' order represents '1' with '4617'
-4616 4617 0
c Var 'aux536' direct represents '1' with '4618'
4616 -4617 4618 0
-4618 4617 0
-4618 -4616 0
c Var 'aux536' order represents '2' with '4619'
-4617 4619 0
c Var 'aux536' direct represents '2' with '4620'
4617 -4619 4620 0
-4620 4619 0
-4620 -4617 0
c Var 'aux536' order represents '3' with '4621'
-4619 4621 0
c Var 'aux536' direct represents '3' with '4622'
4619 -4621 4622 0
-4622 4621 0
-4622 -4619 0
c Var 'aux536' direct represents '4' with '-4621'
4616 4618 4620 4622 -4621 0
c Encoding variable: aux537 with domain: int(0..2) (representing constraint ((field_00007_00001=8) + (field_00007_00009=8)))
c Both direct and order encoding.
c Var 'aux537' order represents '0' with '4623'
c Var 'aux537' direct represents '0' with '4623'
c Var 'aux537' order represents '1' with '4624'
-4623 4624 0
c Var 'aux537' direct represents '1' with '4625'
4623 -4624 4625 0
-4625 4624 0
-4625 -4623 0
c Var 'aux537' direct represents '2' with '-4624'
4623 4625 -4624 0
c Encoding variable: aux538 with domain: int(0..2) (representing constraint ((field_00007_00007=8) + (field_00007_00002=8)))
c Both direct and order encoding.
c Var 'aux538' order represents '0' with '4626'
c Var 'aux538' direct represents '0' with '4626'
c Var 'aux538' order represents '1' with '4627'
-4626 4627 0
c Var 'aux538' direct represents '1' with '4628'
4626 -4627 4628 0
-4628 4627 0
-4628 -4626 0
c Var 'aux538' direct represents '2' with '-4627'
4626 4628 -4627 0
c Encoding variable: aux539 with domain: int(0..2) (representing constraint ((field_00007_00006=8) + (field_00007_00005=8)))
c Both direct and order encoding.
c Var 'aux539' order represents '0' with '4629'
c Var 'aux539' direct represents '0' with '4629'
c Var 'aux539' order represents '1' with '4630'
-4629 4630 0
c Var 'aux539' direct represents '1' with '4631'
4629 -4630 4631 0
-4631 4630 0
-4631 -4629 0
c Var 'aux539' direct represents '2' with '-4630'
4629 4631 -4630 0
c Encoding variable: aux540 with domain: int(0..3) (representing constraint ((field_00007_00003=8) + aux539))
c Both direct and order encoding.
c Var 'aux540' order represents '0' with '4632'
c Var 'aux540' direct represents '0' with '4632'
c Var 'aux540' order represents '1' with '4633'
-4632 4633 0
c Var 'aux540' direct represents '1' with '4634'
4632 -4633 4634 0
-4634 4633 0
-4634 -4632 0
c Var 'aux540' order represents '2' with '4635'
-4633 4635 0
c Var 'aux540' direct represents '2' with '4636'
4633 -4635 4636 0
-4636 4635 0
-4636 -4633 0
c Var 'aux540' direct represents '3' with '-4635'
4632 4634 4636 -4635 0
c Encoding variable: aux541 with domain: int(0..2) (representing constraint ((field_00007_00001=9) + (field_00007_00009=9)))
c Both direct and order encoding.
c Var 'aux541' order represents '0' with '4637'
c Var 'aux541' direct represents '0' with '4637'
c Var 'aux541' order represents '1' with '4638'
-4637 4638 0
c Var 'aux541' direct represents '1' with '4639'
4637 -4638 4639 0
-4639 4638 0
-4639 -4637 0
c Var 'aux541' direct represents '2' with '-4638'
4637 4639 -4638 0
c Encoding variable: aux542 with domain: int(0..2) (representing constraint ((field_00007_00008=9) + (field_00007_00002=9)))
c Both direct and order encoding.
c Var 'aux542' order represents '0' with '4640'
c Var 'aux542' direct represents '0' with '4640'
c Var 'aux542' order represents '1' with '4641'
-4640 4641 0
c Var 'aux542' direct represents '1' with '4642'
4640 -4641 4642 0
-4642 4641 0
-4642 -4640 0
c Var 'aux542' direct represents '2' with '-4641'
4640 4642 -4641 0
c Encoding variable: aux543 with domain: int(0..2) (representing constraint ((field_00007_00007=9) + (field_00007_00005=9)))
c Both direct and order encoding.
c Var 'aux543' order represents '0' with '4643'
c Var 'aux543' direct represents '0' with '4643'
c Var 'aux543' order represents '1' with '4644'
-4643 4644 0
c Var 'aux543' direct represents '1' with '4645'
4643 -4644 4645 0
-4645 4644 0
-4645 -4643 0
c Var 'aux543' direct represents '2' with '-4644'
4643 4645 -4644 0
c Encoding variable: aux544 with domain: int(0..2) (representing constraint ((field_00007_00006=9) + (field_00007_00003=9)))
c Both direct and order encoding.
c Var 'aux544' order represents '0' with '4646'
c Var 'aux544' direct represents '0' with '4646'
c Var 'aux544' order represents '1' with '4647'
-4646 4647 0
c Var 'aux544' direct represents '1' with '4648'
4646 -4647 4648 0
-4648 4647 0
-4648 -4646 0
c Var 'aux544' direct represents '2' with '-4647'
4646 4648 -4647 0
c Encoding variable: aux545 with domain: int(0..4) (representing constraint (aux541 + aux544))
c Both direct and order encoding.
c Var 'aux545' order represents '0' with '4649'
c Var 'aux545' direct represents '0' with '4649'
c Var 'aux545' order represents '1' with '4650'
-4649 4650 0
c Var 'aux545' direct represents '1' with '4651'
4649 -4650 4651 0
-4651 4650 0
-4651 -4649 0
c Var 'aux545' order represents '2' with '4652'
-4650 4652 0
c Var 'aux545' direct represents '2' with '4653'
4650 -4652 4653 0
-4653 4652 0
-4653 -4650 0
c Var 'aux545' order represents '3' with '4654'
-4652 4654 0
c Var 'aux545' direct represents '3' with '4655'
4652 -4654 4655 0
-4655 4654 0
-4655 -4652 0
c Var 'aux545' direct represents '4' with '-4654'
4649 4651 4653 4655 -4654 0
c Encoding variable: aux546 with domain: int(0..2) (representing constraint ((field_00008_00002=2) + (field_00008_00008=2)))
c Both direct and order encoding.
c Var 'aux546' order represents '0' with '4656'
c Var 'aux546' direct represents '0' with '4656'
c Var 'aux546' order represents '1' with '4657'
-4656 4657 0
c Var 'aux546' direct represents '1' with '4658'
4656 -4657 4658 0
-4658 4657 0
-4658 -4656 0
c Var 'aux546' direct represents '2' with '-4657'
4656 4658 -4657 0
c Encoding variable: aux547 with domain: int(0..2) (representing constraint ((field_00008_00007=2) + (field_00008_00003=2)))
c Both direct and order encoding.
c Var 'aux547' order represents '0' with '4659'
c Var 'aux547' direct represents '0' with '4659'
c Var 'aux547' order represents '1' with '4660'
-4659 4660 0
c Var 'aux547' direct represents '1' with '4661'
4659 -4660 4661 0
-4661 4660 0
-4661 -4659 0
c Var 'aux547' direct represents '2' with '-4660'
4659 4661 -4660 0
c Encoding variable: aux548 with domain: int(0..2) (representing constraint ((field_00008_00006=2) + (field_00008_00005=2)))
c Both direct and order encoding.
c Var 'aux548' order represents '0' with '4662'
c Var 'aux548' direct represents '0' with '4662'
c Var 'aux548' order represents '1' with '4663'
-4662 4663 0
c Var 'aux548' direct represents '1' with '4664'
4662 -4663 4664 0
-4664 4663 0
-4664 -4662 0
c Var 'aux548' direct represents '2' with '-4663'
4662 4664 -4663 0
c Encoding variable: aux549 with domain: int(0..2) (representing constraint ((field_00008_00002=4) + (field_00008_00006=4)))
c Both direct and order encoding.
c Var 'aux549' order represents '0' with '4665'
c Var 'aux549' direct represents '0' with '4665'
c Var 'aux549' order represents '1' with '4666'
-4665 4666 0
c Var 'aux549' direct represents '1' with '4667'
4665 -4666 4667 0
-4667 4666 0
-4667 -4665 0
c Var 'aux549' direct represents '2' with '-4666'
4665 4667 -4666 0
c Encoding variable: aux550 with domain: int(0..2) (representing constraint ((field_00008_00005=4) + (field_00008_00003=4)))
c Both direct and order encoding.
c Var 'aux550' order represents '0' with '4668'
c Var 'aux550' direct represents '0' with '4668'
c Var 'aux550' order represents '1' with '4669'
-4668 4669 0
c Var 'aux550' direct represents '1' with '4670'
4668 -4669 4670 0
-4670 4669 0
-4670 -4668 0
c Var 'aux550' direct represents '2' with '-4669'
4668 4670 -4669 0
c Encoding variable: aux551 with domain: int(0..2) (representing constraint ((field_00008_00001=5) + (field_00008_00009=5)))
c Both direct and order encoding.
c Var 'aux551' order represents '0' with '4671'
c Var 'aux551' direct represents '0' with '4671'
c Var 'aux551' order represents '1' with '4672'
-4671 4672 0
c Var 'aux551' direct represents '1' with '4673'
4671 -4672 4673 0
-4673 4672 0
-4673 -4671 0
c Var 'aux551' direct represents '2' with '-4672'
4671 4673 -4672 0
c Encoding variable: aux552 with domain: int(0..2) (representing constraint ((field_00008_00008=5) + (field_00008_00002=5)))
c Both direct and order encoding.
c Var 'aux552' order represents '0' with '4674'
c Var 'aux552' direct represents '0' with '4674'
c Var 'aux552' order represents '1' with '4675'
-4674 4675 0
c Var 'aux552' direct represents '1' with '4676'
4674 -4675 4676 0
-4676 4675 0
-4676 -4674 0
c Var 'aux552' direct represents '2' with '-4675'
4674 4676 -4675 0
c Encoding variable: aux553 with domain: int(0..2) (representing constraint ((field_00008_00007=5) + (field_00008_00005=5)))
c Both direct and order encoding.
c Var 'aux553' order represents '0' with '4677'
c Var 'aux553' direct represents '0' with '4677'
c Var 'aux553' order represents '1' with '4678'
-4677 4678 0
c Var 'aux553' direct represents '1' with '4679'
4677 -4678 4679 0
-4679 4678 0
-4679 -4677 0
c Var 'aux553' direct represents '2' with '-4678'
4677 4679 -4678 0
c Encoding variable: aux554 with domain: int(0..2) (representing constraint ((field_00008_00006=5) + (field_00008_00003=5)))
c Both direct and order encoding.
c Var 'aux554' order represents '0' with '4680'
c Var 'aux554' direct represents '0' with '4680'
c Var 'aux554' order represents '1' with '4681'
-4680 4681 0
c Var 'aux554' direct represents '1' with '4682'
4680 -4681 4682 0
-4682 4681 0
-4682 -4680 0
c Var 'aux554' direct represents '2' with '-4681'
4680 4682 -4681 0
c Encoding variable: aux555 with domain: int(0..4) (representing constraint (aux551 + aux554))
c Both direct and order encoding.
c Var 'aux555' order represents '0' with '4683'
c Var 'aux555' direct represents '0' with '4683'
c Var 'aux555' order represents '1' with '4684'
-4683 4684 0
c Var 'aux555' direct represents '1' with '4685'
4683 -4684 4685 0
-4685 4684 0
-4685 -4683 0
c Var 'aux555' order represents '2' with '4686'
-4684 4686 0
c Var 'aux555' direct represents '2' with '4687'
4684 -4686 4687 0
-4687 4686 0
-4687 -4684 0
c Var 'aux555' order represents '3' with '4688'
-4686 4688 0
c Var 'aux555' direct represents '3' with '4689'
4686 -4688 4689 0
-4689 4688 0
-4689 -4686 0
c Var 'aux555' direct represents '4' with '-4688'
4683 4685 4687 4689 -4688 0
c Encoding variable: aux556 with domain: int(0..2) (representing constraint ((field_00008_00001=6) + (field_00008_00009=6)))
c Both direct and order encoding.
c Var 'aux556' order represents '0' with '4690'
c Var 'aux556' direct represents '0' with '4690'
c Var 'aux556' order represents '1' with '4691'
-4690 4691 0
c Var 'aux556' direct represents '1' with '4692'
4690 -4691 4692 0
-4692 4691 0
-4692 -4690 0
c Var 'aux556' direct represents '2' with '-4691'
4690 4692 -4691 0
c Encoding variable: aux557 with domain: int(0..2) (representing constraint ((field_00008_00006=6) + (field_00008_00002=6)))
c Both direct and order encoding.
c Var 'aux557' order represents '0' with '4693'
c Var 'aux557' direct represents '0' with '4693'
c Var 'aux557' order represents '1' with '4694'
-4693 4694 0
c Var 'aux557' direct represents '1' with '4695'
4693 -4694 4695 0
-4695 4694 0
-4695 -4693 0
c Var 'aux557' direct represents '2' with '-4694'
4693 4695 -4694 0
c Encoding variable: aux558 with domain: int(0..2) (representing constraint ((field_00008_00005=6) + (field_00008_00004=6)))
c Both direct and order encoding.
c Var 'aux558' order represents '0' with '4696'
c Var 'aux558' direct represents '0' with '4696'
c Var 'aux558' order represents '1' with '4697'
-4696 4697 0
c Var 'aux558' direct represents '1' with '4698'
4696 -4697 4698 0
-4698 4697 0
-4698 -4696 0
c Var 'aux558' direct represents '2' with '-4697'
4696 4698 -4697 0
c Encoding variable: aux559 with domain: int(0..3) (representing constraint ((field_00008_00003=6) + aux558))
c Both direct and order encoding.
c Var 'aux559' order represents '0' with '4699'
c Var 'aux559' direct represents '0' with '4699'
c Var 'aux559' order represents '1' with '4700'
-4699 4700 0
c Var 'aux559' direct represents '1' with '4701'
4699 -4700 4701 0
-4701 4700 0
-4701 -4699 0
c Var 'aux559' order represents '2' with '4702'
-4700 4702 0
c Var 'aux559' direct represents '2' with '4703'
4700 -4702 4703 0
-4703 4702 0
-4703 -4700 0
c Var 'aux559' direct represents '3' with '-4702'
4699 4701 4703 -4702 0
c Encoding variable: aux560 with domain: int(0..2) (representing constraint ((field_00008_00001=7) + (field_00008_00009=7)))
c Both direct and order encoding.
c Var 'aux560' order represents '0' with '4704'
c Var 'aux560' direct represents '0' with '4704'
c Var 'aux560' order represents '1' with '4705'
-4704 4705 0
c Var 'aux560' direct represents '1' with '4706'
4704 -4705 4706 0
-4706 4705 0
-4706 -4704 0
c Var 'aux560' direct represents '2' with '-4705'
4704 4706 -4705 0
c Encoding variable: aux561 with domain: int(0..2) (representing constraint ((field_00008_00008=7) + (field_00008_00002=7)))
c Both direct and order encoding.
c Var 'aux561' order represents '0' with '4707'
c Var 'aux561' direct represents '0' with '4707'
c Var 'aux561' order represents '1' with '4708'
-4707 4708 0
c Var 'aux561' direct represents '1' with '4709'
4707 -4708 4709 0
-4709 4708 0
-4709 -4707 0
c Var 'aux561' direct represents '2' with '-4708'
4707 4709 -4708 0
c Encoding variable: aux562 with domain: int(0..2) (representing constraint ((field_00008_00007=7) + (field_00008_00004=7)))
c Both direct and order encoding.
c Var 'aux562' order represents '0' with '4710'
c Var 'aux562' direct represents '0' with '4710'
c Var 'aux562' order represents '1' with '4711'
-4710 4711 0
c Var 'aux562' direct represents '1' with '4712'
4710 -4711 4712 0
-4712 4711 0
-4712 -4710 0
c Var 'aux562' direct represents '2' with '-4711'
4710 4712 -4711 0
c Encoding variable: aux563 with domain: int(0..2) (representing constraint ((field_00008_00006=7) + (field_00008_00005=7)))
c Both direct and order encoding.
c Var 'aux563' order represents '0' with '4713'
c Var 'aux563' direct represents '0' with '4713'
c Var 'aux563' order represents '1' with '4714'
-4713 4714 0
c Var 'aux563' direct represents '1' with '4715'
4713 -4714 4715 0
-4715 4714 0
-4715 -4713 0
c Var 'aux563' direct represents '2' with '-4714'
4713 4715 -4714 0
c Encoding variable: aux564 with domain: int(0..3) (representing constraint ((field_00008_00003=7) + aux563))
c Both direct and order encoding.
c Var 'aux564' order represents '0' with '4716'
c Var 'aux564' direct represents '0' with '4716'
c Var 'aux564' order represents '1' with '4717'
-4716 4717 0
c Var 'aux564' direct represents '1' with '4718'
4716 -4717 4718 0
-4718 4717 0
-4718 -4716 0
c Var 'aux564' order represents '2' with '4719'
-4717 4719 0
c Var 'aux564' direct represents '2' with '4720'
4717 -4719 4720 0
-4720 4719 0
-4720 -4717 0
c Var 'aux564' direct represents '3' with '-4719'
4716 4718 4720 -4719 0
c Encoding variable: aux565 with domain: int(0..4) (representing constraint (aux560 + aux562))
c Both direct and order encoding.
c Var 'aux565' order represents '0' with '4721'
c Var 'aux565' direct represents '0' with '4721'
c Var 'aux565' order represents '1' with '4722'
-4721 4722 0
c Var 'aux565' direct represents '1' with '4723'
4721 -4722 4723 0
-4723 4722 0
-4723 -4721 0
c Var 'aux565' order represents '2' with '4724'
-4722 4724 0
c Var 'aux565' direct represents '2' with '4725'
4722 -4724 4725 0
-4725 4724 0
-4725 -4722 0
c Var 'aux565' order represents '3' with '4726'
-4724 4726 0
c Var 'aux565' direct represents '3' with '4727'
4724 -4726 4727 0
-4727 4726 0
-4727 -4724 0
c Var 'aux565' direct represents '4' with '-4726'
4721 4723 4725 4727 -4726 0
c Encoding variable: aux566 with domain: int(0..2) (representing constraint ((field_00008_00001=8) + (field_00008_00009=8)))
c Both direct and order encoding.
c Var 'aux566' order represents '0' with '4728'
c Var 'aux566' direct represents '0' with '4728'
c Var 'aux566' order represents '1' with '4729'
-4728 4729 0
c Var 'aux566' direct represents '1' with '4730'
4728 -4729 4730 0
-4730 4729 0
-4730 -4728 0
c Var 'aux566' direct represents '2' with '-4729'
4728 4730 -4729 0
c Encoding variable: aux567 with domain: int(0..2) (representing constraint ((field_00008_00007=8) + (field_00008_00002=8)))
c Both direct and order encoding.
c Var 'aux567' order represents '0' with '4731'
c Var 'aux567' direct represents '0' with '4731'
c Var 'aux567' order represents '1' with '4732'
-4731 4732 0
c Var 'aux567' direct represents '1' with '4733'
4731 -4732 4733 0
-4733 4732 0
-4733 -4731 0
c Var 'aux567' direct represents '2' with '-4732'
4731 4733 -4732 0
c Encoding variable: aux568 with domain: int(0..2) (representing constraint ((field_00008_00006=8) + (field_00008_00005=8)))
c Both direct and order encoding.
c Var 'aux568' order represents '0' with '4734'
c Var 'aux568' direct represents '0' with '4734'
c Var 'aux568' order represents '1' with '4735'
-4734 4735 0
c Var 'aux568' direct represents '1' with '4736'
4734 -4735 4736 0
-4736 4735 0
-4736 -4734 0
c Var 'aux568' direct represents '2' with '-4735'
4734 4736 -4735 0
c Encoding variable: aux569 with domain: int(0..3) (representing constraint ((field_00008_00003=8) + aux568))
c Both direct and order encoding.
c Var 'aux569' order represents '0' with '4737'
c Var 'aux569' direct represents '0' with '4737'
c Var 'aux569' order represents '1' with '4738'
-4737 4738 0
c Var 'aux569' direct represents '1' with '4739'
4737 -4738 4739 0
-4739 4738 0
-4739 -4737 0
c Var 'aux569' order represents '2' with '4740'
-4738 4740 0
c Var 'aux569' direct represents '2' with '4741'
4738 -4740 4741 0
-4741 4740 0
-4741 -4738 0
c Var 'aux569' direct represents '3' with '-4740'
4737 4739 4741 -4740 0
c Encoding variable: aux570 with domain: int(0..2) (representing constraint ((field_00008_00002=9) + (field_00008_00008=9)))
c Both direct and order encoding.
c Var 'aux570' order represents '0' with '4742'
c Var 'aux570' direct represents '0' with '4742'
c Var 'aux570' order represents '1' with '4743'
-4742 4743 0
c Var 'aux570' direct represents '1' with '4744'
4742 -4743 4744 0
-4744 4743 0
-4744 -4742 0
c Var 'aux570' direct represents '2' with '-4743'
4742 4744 -4743 0
c Encoding variable: aux571 with domain: int(0..2) (representing constraint ((field_00008_00007=9) + (field_00008_00003=9)))
c Both direct and order encoding.
c Var 'aux571' order represents '0' with '4745'
c Var 'aux571' direct represents '0' with '4745'
c Var 'aux571' order represents '1' with '4746'
-4745 4746 0
c Var 'aux571' direct represents '1' with '4747'
4745 -4746 4747 0
-4747 4746 0
-4747 -4745 0
c Var 'aux571' direct represents '2' with '-4746'
4745 4747 -4746 0
c Encoding variable: aux572 with domain: int(0..2) (representing constraint ((field_00008_00006=9) + (field_00008_00005=9)))
c Both direct and order encoding.
c Var 'aux572' order represents '0' with '4748'
c Var 'aux572' direct represents '0' with '4748'
c Var 'aux572' order represents '1' with '4749'
-4748 4749 0
c Var 'aux572' direct represents '1' with '4750'
4748 -4749 4750 0
-4750 4749 0
-4750 -4748 0
c Var 'aux572' direct represents '2' with '-4749'
4748 4750 -4749 0
c Encoding variable: aux573 with domain: int(0..2) (representing constraint ((field_00009_00001=2) + (field_00009_00008=2)))
c Both direct and order encoding.
c Var 'aux573' order represents '0' with '4751'
c Var 'aux573' direct represents '0' with '4751'
c Var 'aux573' order represents '1' with '4752'
-4751 4752 0
c Var 'aux573' direct represents '1' with '4753'
4751 -4752 4753 0
-4753 4752 0
-4753 -4751 0
c Var 'aux573' direct represents '2' with '-4752'
4751 4753 -4752 0
c Encoding variable: aux574 with domain: int(0..2) (representing constraint ((field_00009_00006=2) + (field_00009_00003=2)))
c Both direct and order encoding.
c Var 'aux574' order represents '0' with '4754'
c Var 'aux574' direct represents '0' with '4754'
c Var 'aux574' order represents '1' with '4755'
-4754 4755 0
c Var 'aux574' direct represents '1' with '4756'
4754 -4755 4756 0
-4756 4755 0
-4756 -4754 0
c Var 'aux574' direct represents '2' with '-4755'
4754 4756 -4755 0
c Encoding variable: aux575 with domain: int(0..2) (representing constraint ((field_00009_00001=5) + (field_00009_00009=5)))
c Both direct and order encoding.
c Var 'aux575' order represents '0' with '4757'
c Var 'aux575' direct represents '0' with '4757'
c Var 'aux575' order represents '1' with '4758'
-4757 4758 0
c Var 'aux575' direct represents '1' with '4759'
4757 -4758 4759 0
-4759 4758 0
-4759 -4757 0
c Var 'aux575' direct represents '2' with '-4758'
4757 4759 -4758 0
c Encoding variable: aux576 with domain: int(0..2) (representing constraint ((field_00009_00008=5) + (field_00009_00002=5)))
c Both direct and order encoding.
c Var 'aux576' order represents '0' with '4760'
c Var 'aux576' direct represents '0' with '4760'
c Var 'aux576' order represents '1' with '4761'
-4760 4761 0
c Var 'aux576' direct represents '1' with '4762'
4760 -4761 4762 0
-4762 4761 0
-4762 -4760 0
c Var 'aux576' direct represents '2' with '-4761'
4760 4762 -4761 0
c Encoding variable: aux577 with domain: int(0..2) (representing constraint ((field_00009_00006=5) + (field_00009_00005=5)))
c Both direct and order encoding.
c Var 'aux577' order represents '0' with '4763'
c Var 'aux577' direct represents '0' with '4763'
c Var 'aux577' order represents '1' with '4764'
-4763 4764 0
c Var 'aux577' direct represents '1' with '4765'
4763 -4764 4765 0
-4765 4764 0
-4765 -4763 0
c Var 'aux577' direct represents '2' with '-4764'
4763 4765 -4764 0
c Encoding variable: aux578 with domain: int(0..3) (representing constraint ((field_00009_00003=5) + aux577))
c Both direct and order encoding.
c Var 'aux578' order represents '0' with '4766'
c Var 'aux578' direct represents '0' with '4766'
c Var 'aux578' order represents '1' with '4767'
-4766 4767 0
c Var 'aux578' direct represents '1' with '4768'
4766 -4767 4768 0
-4768 4767 0
-4768 -4766 0
c Var 'aux578' order represents '2' with '4769'
-4767 4769 0
c Var 'aux578' direct represents '2' with '4770'
4767 -4769 4770 0
-4770 4769 0
-4770 -4767 0
c Var 'aux578' direct represents '3' with '-4769'
4766 4768 4770 -4769 0
c Encoding variable: aux579 with domain: int(0..2) (representing constraint ((field_00009_00001=6) + (field_00009_00009=6)))
c Both direct and order encoding.
c Var 'aux579' order represents '0' with '4771'
c Var 'aux579' direct represents '0' with '4771'
c Var 'aux579' order represents '1' with '4772'
-4771 4772 0
c Var 'aux579' direct represents '1' with '4773'
4771 -4772 4773 0
-4773 4772 0
-4773 -4771 0
c Var 'aux579' direct represents '2' with '-4772'
4771 4773 -4772 0
c Encoding variable: aux580 with domain: int(0..2) (representing constraint ((field_00009_00006=6) + (field_00009_00002=6)))
c Both direct and order encoding.
c Var 'aux580' order represents '0' with '4774'
c Var 'aux580' direct represents '0' with '4774'
c Var 'aux580' order represents '1' with '4775'
-4774 4775 0
c Var 'aux580' direct represents '1' with '4776'
4774 -4775 4776 0
-4776 4775 0
-4776 -4774 0
c Var 'aux580' direct represents '2' with '-4775'
4774 4776 -4775 0
c Encoding variable: aux581 with domain: int(0..2) (representing constraint ((field_00009_00005=6) + (field_00009_00003=6)))
c Both direct and order encoding.
c Var 'aux581' order represents '0' with '4777'
c Var 'aux581' direct represents '0' with '4777'
c Var 'aux581' order represents '1' with '4778'
-4777 4778 0
c Var 'aux581' direct represents '1' with '4779'
4777 -4778 4779 0
-4779 4778 0
-4779 -4777 0
c Var 'aux581' direct represents '2' with '-4778'
4777 4779 -4778 0
c Encoding variable: aux582 with domain: int(0..2) (representing constraint ((field_00009_00001=7) + (field_00009_00009=7)))
c Both direct and order encoding.
c Var 'aux582' order represents '0' with '4780'
c Var 'aux582' direct represents '0' with '4780'
c Var 'aux582' order represents '1' with '4781'
-4780 4781 0
c Var 'aux582' direct represents '1' with '4782'
4780 -4781 4782 0
-4782 4781 0
-4782 -4780 0
c Var 'aux582' direct represents '2' with '-4781'
4780 4782 -4781 0
c Encoding variable: aux583 with domain: int(0..2) (representing constraint ((field_00009_00008=7) + (field_00009_00003=7)))
c Both direct and order encoding.
c Var 'aux583' order represents '0' with '4783'
c Var 'aux583' direct represents '0' with '4783'
c Var 'aux583' order represents '1' with '4784'
-4783 4784 0
c Var 'aux583' direct represents '1' with '4785'
4783 -4784 4785 0
-4785 4784 0
-4785 -4783 0
c Var 'aux583' direct represents '2' with '-4784'
4783 4785 -4784 0
c Encoding variable: aux584 with domain: int(0..2) (representing constraint ((field_00009_00006=7) + (field_00009_00005=7)))
c Both direct and order encoding.
c Var 'aux584' order represents '0' with '4786'
c Var 'aux584' direct represents '0' with '4786'
c Var 'aux584' order represents '1' with '4787'
-4786 4787 0
c Var 'aux584' direct represents '1' with '4788'
4786 -4787 4788 0
-4788 4787 0
-4788 -4786 0
c Var 'aux584' direct represents '2' with '-4787'
4786 4788 -4787 0
c Encoding variable: aux585 with domain: int(0..2) (representing constraint ((field_00009_00001=8) + (field_00009_00009=8)))
c Both direct and order encoding.
c Var 'aux585' order represents '0' with '4789'
c Var 'aux585' direct represents '0' with '4789'
c Var 'aux585' order represents '1' with '4790'
-4789 4790 0
c Var 'aux585' direct represents '1' with '4791'
4789 -4790 4791 0
-4791 4790 0
-4791 -4789 0
c Var 'aux585' direct represents '2' with '-4790'
4789 4791 -4790 0
c Encoding variable: aux586 with domain: int(0..2) (representing constraint ((field_00009_00006=8) + (field_00009_00003=8)))
c Both direct and order encoding.
c Var 'aux586' order represents '0' with '4792'
c Var 'aux586' direct represents '0' with '4792'
c Var 'aux586' order represents '1' with '4793'
-4792 4793 0
c Var 'aux586' direct represents '1' with '4794'
4792 -4793 4794 0
-4794 4793 0
-4794 -4792 0
c Var 'aux586' direct represents '2' with '-4793'
4792 4794 -4793 0
c Encoding variable: aux587 with domain: int(0..2) (representing constraint ((field_00009_00001=9) + (field_00009_00009=9)))
c Both direct and order encoding.
c Var 'aux587' order represents '0' with '4795'
c Var 'aux587' direct represents '0' with '4795'
c Var 'aux587' order represents '1' with '4796'
-4795 4796 0
c Var 'aux587' direct represents '1' with '4797'
4795 -4796 4797 0
-4797 4796 0
-4797 -4795 0
c Var 'aux587' direct represents '2' with '-4796'
4795 4797 -4796 0
c Encoding variable: aux588 with domain: int(0..2) (representing constraint ((field_00009_00008=9) + (field_00009_00003=9)))
c Both direct and order encoding.
c Var 'aux588' order represents '0' with '4798'
c Var 'aux588' direct represents '0' with '4798'
c Var 'aux588' order represents '1' with '4799'
-4798 4799 0
c Var 'aux588' direct represents '1' with '4800'
4798 -4799 4800 0
-4800 4799 0
-4800 -4798 0
c Var 'aux588' direct represents '2' with '-4799'
4798 4800 -4799 0
c Encoding variable: aux589 with domain: int(0..2) (representing constraint ((field_00009_00006=9) + (field_00009_00005=9)))
c Both direct and order encoding.
c Var 'aux589' order represents '0' with '4801'
c Var 'aux589' direct represents '0' with '4801'
c Var 'aux589' order represents '1' with '4802'
-4801 4802 0
c Var 'aux589' direct represents '1' with '4803'
4801 -4802 4803 0
-4803 4802 0
-4803 -4801 0
c Var 'aux589' direct represents '2' with '-4802'
4801 4803 -4802 0
c Encoding variable: aux590 with domain: int(0..2) (representing constraint ((field_00003_00001=5) + (field_00001_00003=5)))
c Both direct and order encoding.
c Var 'aux590' order represents '0' with '4804'
c Var 'aux590' direct represents '0' with '4804'
c Var 'aux590' order represents '1' with '4805'
-4804 4805 0
c Var 'aux590' direct represents '1' with '4806'
4804 -4805 4806 0
-4806 4805 0
-4806 -4804 0
c Var 'aux590' direct represents '2' with '-4805'
4804 4806 -4805 0
c Encoding variable: aux591 with domain: int(0..2) (representing constraint ((field_00001_00002=5) + (field_00003_00002=5)))
c Both direct and order encoding.
c Var 'aux591' order represents '0' with '4807'
c Var 'aux591' direct represents '0' with '4807'
c Var 'aux591' order represents '1' with '4808'
-4807 4808 0
c Var 'aux591' direct represents '1' with '4809'
4807 -4808 4809 0
-4809 4808 0
-4809 -4807 0
c Var 'aux591' direct represents '2' with '-4808'
4807 4809 -4808 0
c Encoding variable: aux592 with domain: int(0..2) (representing constraint ((field_00001_00001=5) + (field_00003_00003=5)))
c Both direct and order encoding.
c Var 'aux592' order represents '0' with '4810'
c Var 'aux592' direct represents '0' with '4810'
c Var 'aux592' order represents '1' with '4811'
-4810 4811 0
c Var 'aux592' direct represents '1' with '4812'
4810 -4811 4812 0
-4812 4811 0
-4812 -4810 0
c Var 'aux592' direct represents '2' with '-4811'
4810 4812 -4811 0
c Encoding variable: aux593 with domain: int(0..2) (representing constraint ((field_00003_00001=6) + (field_00001_00003=6)))
c Both direct and order encoding.
c Var 'aux593' order represents '0' with '4813'
c Var 'aux593' direct represents '0' with '4813'
c Var 'aux593' order represents '1' with '4814'
-4813 4814 0
c Var 'aux593' direct represents '1' with '4815'
4813 -4814 4815 0
-4815 4814 0
-4815 -4813 0
c Var 'aux593' direct represents '2' with '-4814'
4813 4815 -4814 0
c Encoding variable: aux594 with domain: int(0..2) (representing constraint ((field_00001_00002=6) + (field_00003_00002=6)))
c Both direct and order encoding.
c Var 'aux594' order represents '0' with '4816'
c Var 'aux594' direct represents '0' with '4816'
c Var 'aux594' order represents '1' with '4817'
-4816 4817 0
c Var 'aux594' direct represents '1' with '4818'
4816 -4817 4818 0
-4818 4817 0
-4818 -4816 0
c Var 'aux594' direct represents '2' with '-4817'
4816 4818 -4817 0
c Encoding variable: aux595 with domain: int(0..2) (representing constraint ((field_00001_00001=6) + (field_00003_00003=6)))
c Both direct and order encoding.
c Var 'aux595' order represents '0' with '4819'
c Var 'aux595' direct represents '0' with '4819'
c Var 'aux595' order represents '1' with '4820'
-4819 4820 0
c Var 'aux595' direct represents '1' with '4821'
4819 -4820 4821 0
-4821 4820 0
-4821 -4819 0
c Var 'aux595' direct represents '2' with '-4820'
4819 4821 -4820 0
c Encoding variable: aux596 with domain: int(0..2) (representing constraint ((field_00003_00001=7) + (field_00001_00003=7)))
c Both direct and order encoding.
c Var 'aux596' order represents '0' with '4822'
c Var 'aux596' direct represents '0' with '4822'
c Var 'aux596' order represents '1' with '4823'
-4822 4823 0
c Var 'aux596' direct represents '1' with '4824'
4822 -4823 4824 0
-4824 4823 0
-4824 -4822 0
c Var 'aux596' direct represents '2' with '-4823'
4822 4824 -4823 0
c Encoding variable: aux597 with domain: int(0..2) (representing constraint ((field_00001_00002=7) + (field_00003_00002=7)))
c Both direct and order encoding.
c Var 'aux597' order represents '0' with '4825'
c Var 'aux597' direct represents '0' with '4825'
c Var 'aux597' order represents '1' with '4826'
-4825 4826 0
c Var 'aux597' direct represents '1' with '4827'
4825 -4826 4827 0
-4827 4826 0
-4827 -4825 0
c Var 'aux597' direct represents '2' with '-4826'
4825 4827 -4826 0
c Encoding variable: aux598 with domain: int(0..2) (representing constraint ((field_00001_00001=7) + (field_00003_00003=7)))
c Both direct and order encoding.
c Var 'aux598' order represents '0' with '4828'
c Var 'aux598' direct represents '0' with '4828'
c Var 'aux598' order represents '1' with '4829'
-4828 4829 0
c Var 'aux598' direct represents '1' with '4830'
4828 -4829 4830 0
-4830 4829 0
-4830 -4828 0
c Var 'aux598' direct represents '2' with '-4829'
4828 4830 -4829 0
c Encoding variable: aux599 with domain: int(0..2) (representing constraint ((field_00003_00001=8) + (field_00001_00003=8)))
c Both direct and order encoding.
c Var 'aux599' order represents '0' with '4831'
c Var 'aux599' direct represents '0' with '4831'
c Var 'aux599' order represents '1' with '4832'
-4831 4832 0
c Var 'aux599' direct represents '1' with '4833'
4831 -4832 4833 0
-4833 4832 0
-4833 -4831 0
c Var 'aux599' direct represents '2' with '-4832'
4831 4833 -4832 0
c Encoding variable: aux600 with domain: int(0..2) (representing constraint ((field_00001_00001=8) + (field_00003_00002=8)))
c Both direct and order encoding.
c Var 'aux600' order represents '0' with '4834'
c Var 'aux600' direct represents '0' with '4834'
c Var 'aux600' order represents '1' with '4835'
-4834 4835 0
c Var 'aux600' direct represents '1' with '4836'
4834 -4835 4836 0
-4836 4835 0
-4836 -4834 0
c Var 'aux600' direct represents '2' with '-4835'
4834 4836 -4835 0
c Encoding variable: aux601 with domain: int(0..2) (representing constraint ((field_00003_00001=9) + (field_00001_00003=9)))
c Both direct and order encoding.
c Var 'aux601' order represents '0' with '4837'
c Var 'aux601' direct represents '0' with '4837'
c Var 'aux601' order represents '1' with '4838'
-4837 4838 0
c Var 'aux601' direct represents '1' with '4839'
4837 -4838 4839 0
-4839 4838 0
-4839 -4837 0
c Var 'aux601' direct represents '2' with '-4838'
4837 4839 -4838 0
c Encoding variable: aux602 with domain: int(0..2) (representing constraint ((field_00001_00001=9) + (field_00003_00002=9)))
c Both direct and order encoding.
c Var 'aux602' order represents '0' with '4840'
c Var 'aux602' direct represents '0' with '4840'
c Var 'aux602' order represents '1' with '4841'
-4840 4841 0
c Var 'aux602' direct represents '1' with '4842'
4840 -4841 4842 0
-4842 4841 0
-4842 -4840 0
c Var 'aux602' direct represents '2' with '-4841'
4840 4842 -4841 0
c Encoding variable: aux603 with domain: int(0..2) (representing constraint ((field_00003_00004=4) + (field_00001_00006=4)))
c Both direct and order encoding.
c Var 'aux603' order represents '0' with '4843'
c Var 'aux603' direct represents '0' with '4843'
c Var 'aux603' order represents '1' with '4844'
-4843 4844 0
c Var 'aux603' direct represents '1' with '4845'
4843 -4844 4845 0
-4845 4844 0
-4845 -4843 0
c Var 'aux603' direct represents '2' with '-4844'
4843 4845 -4844 0
c Encoding variable: aux604 with domain: int(0..2) (representing constraint ((field_00001_00005=4) + (field_00003_00005=4)))
c Both direct and order encoding.
c Var 'aux604' order represents '0' with '4846'
c Var 'aux604' direct represents '0' with '4846'
c Var 'aux604' order represents '1' with '4847'
-4846 4847 0
c Var 'aux604' direct represents '1' with '4848'
4846 -4847 4848 0
-4848 4847 0
-4848 -4846 0
c Var 'aux604' direct represents '2' with '-4847'
4846 4848 -4847 0
c Encoding variable: aux605 with domain: int(0..2) (representing constraint ((field_00002_00005=5) + (field_00001_00006=5)))
c Both direct and order encoding.
c Var 'aux605' order represents '0' with '4849'
c Var 'aux605' direct represents '0' with '4849'
c Var 'aux605' order represents '1' with '4850'
-4849 4850 0
c Var 'aux605' direct represents '1' with '4851'
4849 -4850 4851 0
-4851 4850 0
-4851 -4849 0
c Var 'aux605' direct represents '2' with '-4850'
4849 4851 -4850 0
c Encoding variable: aux606 with domain: int(0..2) (representing constraint ((field_00001_00005=5) + (field_00002_00006=5)))
c Both direct and order encoding.
c Var 'aux606' order represents '0' with '4852'
c Var 'aux606' direct represents '0' with '4852'
c Var 'aux606' order represents '1' with '4853'
-4852 4853 0
c Var 'aux606' direct represents '1' with '4854'
4852 -4853 4854 0
-4854 4853 0
-4854 -4852 0
c Var 'aux606' direct represents '2' with '-4853'
4852 4854 -4853 0
c Encoding variable: aux607 with domain: int(0..2) (representing constraint ((field_00003_00006=5) + (field_00003_00005=5)))
c Both direct and order encoding.
c Var 'aux607' order represents '0' with '4855'
c Var 'aux607' direct represents '0' with '4855'
c Var 'aux607' order represents '1' with '4856'
-4855 4856 0
c Var 'aux607' direct represents '1' with '4857'
4855 -4856 4857 0
-4857 4856 0
-4857 -4855 0
c Var 'aux607' direct represents '2' with '-4856'
4855 4857 -4856 0
c Encoding variable: aux608 with domain: int(0..2) (representing constraint ((field_00003_00004=6) + (field_00001_00006=6)))
c Both direct and order encoding.
c Var 'aux608' order represents '0' with '4858'
c Var 'aux608' direct represents '0' with '4858'
c Var 'aux608' order represents '1' with '4859'
-4858 4859 0
c Var 'aux608' direct represents '1' with '4860'
4858 -4859 4860 0
-4860 4859 0
-4860 -4858 0
c Var 'aux608' direct represents '2' with '-4859'
4858 4860 -4859 0
c Encoding variable: aux609 with domain: int(0..2) (representing constraint ((field_00001_00005=6) + (field_00003_00005=6)))
c Both direct and order encoding.
c Var 'aux609' order represents '0' with '4861'
c Var 'aux609' direct represents '0' with '4861'
c Var 'aux609' order represents '1' with '4862'
-4861 4862 0
c Var 'aux609' direct represents '1' with '4863'
4861 -4862 4863 0
-4863 4862 0
-4863 -4861 0
c Var 'aux609' direct represents '2' with '-4862'
4861 4863 -4862 0
c Encoding variable: aux610 with domain: int(0..2) (representing constraint ((field_00002_00005=7) + (field_00001_00005=7)))
c Both direct and order encoding.
c Var 'aux610' order represents '0' with '4864'
c Var 'aux610' direct represents '0' with '4864'
c Var 'aux610' order represents '1' with '4865'
-4864 4865 0
c Var 'aux610' direct represents '1' with '4866'
4864 -4865 4866 0
-4866 4865 0
-4866 -4864 0
c Var 'aux610' direct represents '2' with '-4865'
4864 4866 -4865 0
c Encoding variable: aux611 with domain: int(0..2) (representing constraint ((field_00003_00006=7) + (field_00002_00006=7)))
c Both direct and order encoding.
c Var 'aux611' order represents '0' with '4867'
c Var 'aux611' direct represents '0' with '4867'
c Var 'aux611' order represents '1' with '4868'
-4867 4868 0
c Var 'aux611' direct represents '1' with '4869'
4867 -4868 4869 0
-4869 4868 0
-4869 -4867 0
c Var 'aux611' direct represents '2' with '-4868'
4867 4869 -4868 0
c Encoding variable: aux612 with domain: int(0..2) (representing constraint ((field_00003_00005=7) + (field_00003_00004=7)))
c Both direct and order encoding.
c Var 'aux612' order represents '0' with '4870'
c Var 'aux612' direct represents '0' with '4870'
c Var 'aux612' order represents '1' with '4871'
-4870 4871 0
c Var 'aux612' direct represents '1' with '4872'
4870 -4871 4872 0
-4872 4871 0
-4872 -4870 0
c Var 'aux612' direct represents '2' with '-4871'
4870 4872 -4871 0
c Encoding variable: aux613 with domain: int(0..2) (representing constraint ((field_00002_00005=8) + (field_00001_00005=8)))
c Both direct and order encoding.
c Var 'aux613' order represents '0' with '4873'
c Var 'aux613' direct represents '0' with '4873'
c Var 'aux613' order represents '1' with '4874'
-4873 4874 0
c Var 'aux613' direct represents '1' with '4875'
4873 -4874 4875 0
-4875 4874 0
-4875 -4873 0
c Var 'aux613' direct represents '2' with '-4874'
4873 4875 -4874 0
c Encoding variable: aux614 with domain: int(0..2) (representing constraint ((field_00003_00006=8) + (field_00002_00006=8)))
c Both direct and order encoding.
c Var 'aux614' order represents '0' with '4876'
c Var 'aux614' direct represents '0' with '4876'
c Var 'aux614' order represents '1' with '4877'
-4876 4877 0
c Var 'aux614' direct represents '1' with '4878'
4876 -4877 4878 0
-4878 4877 0
-4878 -4876 0
c Var 'aux614' direct represents '2' with '-4877'
4876 4878 -4877 0
c Encoding variable: aux615 with domain: int(0..2) (representing constraint ((field_00003_00005=8) + (field_00003_00004=8)))
c Both direct and order encoding.
c Var 'aux615' order represents '0' with '4879'
c Var 'aux615' direct represents '0' with '4879'
c Var 'aux615' order represents '1' with '4880'
-4879 4880 0
c Var 'aux615' direct represents '1' with '4881'
4879 -4880 4881 0
-4881 4880 0
-4881 -4879 0
c Var 'aux615' direct represents '2' with '-4880'
4879 4881 -4880 0
c Encoding variable: aux616 with domain: int(0..2) (representing constraint ((field_00003_00008=1) + (field_00001_00009=1)))
c Both direct and order encoding.
c Var 'aux616' order represents '0' with '4882'
c Var 'aux616' direct represents '0' with '4882'
c Var 'aux616' order represents '1' with '4883'
-4882 4883 0
c Var 'aux616' direct represents '1' with '4884'
4882 -4883 4884 0
-4884 4883 0
-4884 -4882 0
c Var 'aux616' direct represents '2' with '-4883'
4882 4884 -4883 0
c Encoding variable: aux617 with domain: int(0..2) (representing constraint ((field_00003_00008=4) + (field_00001_00009=4)))
c Both direct and order encoding.
c Var 'aux617' order represents '0' with '4885'
c Var 'aux617' direct represents '0' with '4885'
c Var 'aux617' order represents '1' with '4886'
-4885 4886 0
c Var 'aux617' direct represents '1' with '4887'
4885 -4886 4887 0
-4887 4886 0
-4887 -4885 0
c Var 'aux617' direct represents '2' with '-4886'
4885 4887 -4886 0
c Encoding variable: aux618 with domain: int(0..2) (representing constraint ((field_00002_00007=5) + (field_00001_00009=5)))
c Both direct and order encoding.
c Var 'aux618' order represents '0' with '4888'
c Var 'aux618' direct represents '0' with '4888'
c Var 'aux618' order represents '1' with '4889'
-4888 4889 0
c Var 'aux618' direct represents '1' with '4890'
4888 -4889 4890 0
-4890 4889 0
-4890 -4888 0
c Var 'aux618' direct represents '2' with '-4889'
4888 4890 -4889 0
c Encoding variable: aux619 with domain: int(0..2) (representing constraint ((field_00001_00008=5) + (field_00003_00007=5)))
c Both direct and order encoding.
c Var 'aux619' order represents '0' with '4891'
c Var 'aux619' direct represents '0' with '4891'
c Var 'aux619' order represents '1' with '4892'
-4891 4892 0
c Var 'aux619' direct represents '1' with '4893'
4891 -4892 4893 0
-4893 4892 0
-4893 -4891 0
c Var 'aux619' direct represents '2' with '-4892'
4891 4893 -4892 0
c Encoding variable: aux620 with domain: int(0..2) (representing constraint ((field_00003_00009=5) + (field_00003_00008=5)))
c Both direct and order encoding.
c Var 'aux620' order represents '0' with '4894'
c Var 'aux620' direct represents '0' with '4894'
c Var 'aux620' order represents '1' with '4895'
-4894 4895 0
c Var 'aux620' direct represents '1' with '4896'
4894 -4895 4896 0
-4896 4895 0
-4896 -4894 0
c Var 'aux620' direct represents '2' with '-4895'
4894 4896 -4895 0
c Encoding variable: aux621 with domain: int(0..2) (representing constraint ((field_00002_00007=7) + (field_00001_00009=7)))
c Both direct and order encoding.
c Var 'aux621' order represents '0' with '4897'
c Var 'aux621' direct represents '0' with '4897'
c Var 'aux621' order represents '1' with '4898'
-4897 4898 0
c Var 'aux621' direct represents '1' with '4899'
4897 -4898 4899 0
-4899 4898 0
-4899 -4897 0
c Var 'aux621' direct represents '2' with '-4898'
4897 4899 -4898 0
c Encoding variable: aux622 with domain: int(0..2) (representing constraint ((field_00001_00008=7) + (field_00003_00007=7)))
c Both direct and order encoding.
c Var 'aux622' order represents '0' with '4900'
c Var 'aux622' direct represents '0' with '4900'
c Var 'aux622' order represents '1' with '4901'
-4900 4901 0
c Var 'aux622' direct represents '1' with '4902'
4900 -4901 4902 0
-4902 4901 0
-4902 -4900 0
c Var 'aux622' direct represents '2' with '-4901'
4900 4902 -4901 0
c Encoding variable: aux623 with domain: int(0..2) (representing constraint ((field_00003_00009=7) + (field_00003_00008=7)))
c Both direct and order encoding.
c Var 'aux623' order represents '0' with '4903'
c Var 'aux623' direct represents '0' with '4903'
c Var 'aux623' order represents '1' with '4904'
-4903 4904 0
c Var 'aux623' direct represents '1' with '4905'
4903 -4904 4905 0
-4905 4904 0
-4905 -4903 0
c Var 'aux623' direct represents '2' with '-4904'
4903 4905 -4904 0
c Encoding variable: aux624 with domain: int(0..2) (representing constraint ((field_00002_00007=8) + (field_00001_00009=8)))
c Both direct and order encoding.
c Var 'aux624' order represents '0' with '4906'
c Var 'aux624' direct represents '0' with '4906'
c Var 'aux624' order represents '1' with '4907'
-4906 4907 0
c Var 'aux624' direct represents '1' with '4908'
4906 -4907 4908 0
-4908 4907 0
-4908 -4906 0
c Var 'aux624' direct represents '2' with '-4907'
4906 4908 -4907 0
c Encoding variable: aux625 with domain: int(0..2) (representing constraint ((field_00003_00008=9) + (field_00001_00009=9)))
c Both direct and order encoding.
c Var 'aux625' order represents '0' with '4909'
c Var 'aux625' direct represents '0' with '4909'
c Var 'aux625' order represents '1' with '4910'
-4909 4910 0
c Var 'aux625' direct represents '1' with '4911'
4909 -4910 4911 0
-4911 4910 0
-4911 -4909 0
c Var 'aux625' direct represents '2' with '-4910'
4909 4911 -4910 0
c Encoding variable: aux626 with domain: int(0..2) (representing constraint ((field_00004_00002=2) + (field_00006_00003=2)))
c Both direct and order encoding.
c Var 'aux626' order represents '0' with '4912'
c Var 'aux626' direct represents '0' with '4912'
c Var 'aux626' order represents '1' with '4913'
-4912 4913 0
c Var 'aux626' direct represents '1' with '4914'
4912 -4913 4914 0
-4914 4913 0
-4914 -4912 0
c Var 'aux626' direct represents '2' with '-4913'
4912 4914 -4913 0
c Encoding variable: aux627 with domain: int(0..2) (representing constraint ((field_00006_00002=2) + (field_00004_00003=2)))
c Both direct and order encoding.
c Var 'aux627' order represents '0' with '4915'
c Var 'aux627' direct represents '0' with '4915'
c Var 'aux627' order represents '1' with '4916'
-4915 4916 0
c Var 'aux627' direct represents '1' with '4917'
4915 -4916 4917 0
-4917 4916 0
-4917 -4915 0
c Var 'aux627' direct represents '2' with '-4916'
4915 4917 -4916 0
c Encoding variable: aux628 with domain: int(0..2) (representing constraint ((field_00005_00003=2) + (field_00005_00002=2)))
c Both direct and order encoding.
c Var 'aux628' order represents '0' with '4918'
c Var 'aux628' direct represents '0' with '4918'
c Var 'aux628' order represents '1' with '4919'
-4918 4919 0
c Var 'aux628' direct represents '1' with '4920'
4918 -4919 4920 0
-4920 4919 0
-4920 -4918 0
c Var 'aux628' direct represents '2' with '-4919'
4918 4920 -4919 0
c Encoding variable: aux629 with domain: int(0..3) (representing constraint ((field_00005_00001=2) + aux628))
c Both direct and order encoding.
c Var 'aux629' order represents '0' with '4921'
c Var 'aux629' direct represents '0' with '4921'
c Var 'aux629' order represents '1' with '4922'
-4921 4922 0
c Var 'aux629' direct represents '1' with '4923'
4921 -4922 4923 0
-4923 4922 0
-4923 -4921 0
c Var 'aux629' order represents '2' with '4924'
-4922 4924 0
c Var 'aux629' direct represents '2' with '4925'
4922 -4924 4925 0
-4925 4924 0
-4925 -4922 0
c Var 'aux629' direct represents '3' with '-4924'
4921 4923 4925 -4924 0
c Encoding variable: aux630 with domain: int(0..2) (representing constraint ((field_00005_00002=3) + (field_00006_00003=3)))
c Both direct and order encoding.
c Var 'aux630' order represents '0' with '4926'
c Var 'aux630' direct represents '0' with '4926'
c Var 'aux630' order represents '1' with '4927'
-4926 4927 0
c Var 'aux630' direct represents '1' with '4928'
4926 -4927 4928 0
-4928 4927 0
-4928 -4926 0
c Var 'aux630' direct represents '2' with '-4927'
4926 4928 -4927 0
c Encoding variable: aux631 with domain: int(0..2) (representing constraint ((field_00005_00001=5) + (field_00006_00003=5)))
c Both direct and order encoding.
c Var 'aux631' order represents '0' with '4929'
c Var 'aux631' direct represents '0' with '4929'
c Var 'aux631' order represents '1' with '4930'
-4929 4930 0
c Var 'aux631' direct represents '1' with '4931'
4929 -4930 4931 0
-4931 4930 0
-4931 -4929 0
c Var 'aux631' direct represents '2' with '-4930'
4929 4931 -4930 0
c Encoding variable: aux632 with domain: int(0..2) (representing constraint ((field_00006_00002=5) + (field_00005_00002=5)))
c Both direct and order encoding.
c Var 'aux632' order represents '0' with '4932'
c Var 'aux632' direct represents '0' with '4932'
c Var 'aux632' order represents '1' with '4933'
-4932 4933 0
c Var 'aux632' direct represents '1' with '4934'
4932 -4933 4934 0
-4934 4933 0
-4934 -4932 0
c Var 'aux632' direct represents '2' with '-4933'
4932 4934 -4933 0
c Encoding variable: aux633 with domain: int(0..2) (representing constraint ((field_00006_00001=5) + (field_00005_00003=5)))
c Both direct and order encoding.
c Var 'aux633' order represents '0' with '4935'
c Var 'aux633' direct represents '0' with '4935'
c Var 'aux633' order represents '1' with '4936'
-4935 4936 0
c Var 'aux633' direct represents '1' with '4937'
4935 -4936 4937 0
-4937 4936 0
-4937 -4935 0
c Var 'aux633' direct represents '2' with '-4936'
4935 4937 -4936 0
c Encoding variable: aux634 with domain: int(0..2) (representing constraint ((field_00005_00001=6) + (field_00006_00003=6)))
c Both direct and order encoding.
c Var 'aux634' order represents '0' with '4938'
c Var 'aux634' direct represents '0' with '4938'
c Var 'aux634' order represents '1' with '4939'
-4938 4939 0
c Var 'aux634' direct represents '1' with '4940'
4938 -4939 4940 0
-4940 4939 0
-4940 -4938 0
c Var 'aux634' direct represents '2' with '-4939'
4938 4940 -4939 0
c Encoding variable: aux635 with domain: int(0..2) (representing constraint ((field_00006_00002=6) + (field_00005_00002=6)))
c Both direct and order encoding.
c Var 'aux635' order represents '0' with '4941'
c Var 'aux635' direct represents '0' with '4941'
c Var 'aux635' order represents '1' with '4942'
-4941 4942 0
c Var 'aux635' direct represents '1' with '4943'
4941 -4942 4943 0
-4943 4942 0
-4943 -4941 0
c Var 'aux635' direct represents '2' with '-4942'
4941 4943 -4942 0
c Encoding variable: aux636 with domain: int(0..2) (representing constraint ((field_00006_00001=6) + (field_00005_00003=6)))
c Both direct and order encoding.
c Var 'aux636' order represents '0' with '4944'
c Var 'aux636' direct represents '0' with '4944'
c Var 'aux636' order represents '1' with '4945'
-4944 4945 0
c Var 'aux636' direct represents '1' with '4946'
4944 -4945 4946 0
-4946 4945 0
-4946 -4944 0
c Var 'aux636' direct represents '2' with '-4945'
4944 4946 -4945 0
c Encoding variable: aux637 with domain: int(0..2) (representing constraint ((field_00004_00002=7) + (field_00006_00003=7)))
c Both direct and order encoding.
c Var 'aux637' order represents '0' with '4947'
c Var 'aux637' direct represents '0' with '4947'
c Var 'aux637' order represents '1' with '4948'
-4947 4948 0
c Var 'aux637' direct represents '1' with '4949'
4947 -4948 4949 0
-4949 4948 0
-4949 -4947 0
c Var 'aux637' direct represents '2' with '-4948'
4947 4949 -4948 0
c Encoding variable: aux638 with domain: int(0..2) (representing constraint ((field_00006_00002=7) + (field_00004_00003=7)))
c Both direct and order encoding.
c Var 'aux638' order represents '0' with '4950'
c Var 'aux638' direct represents '0' with '4950'
c Var 'aux638' order represents '1' with '4951'
-4950 4951 0
c Var 'aux638' direct represents '1' with '4952'
4950 -4951 4952 0
-4952 4951 0
-4952 -4950 0
c Var 'aux638' direct represents '2' with '-4951'
4950 4952 -4951 0
c Encoding variable: aux639 with domain: int(0..2) (representing constraint ((field_00006_00001=7) + (field_00005_00002=7)))
c Both direct and order encoding.
c Var 'aux639' order represents '0' with '4953'
c Var 'aux639' direct represents '0' with '4953'
c Var 'aux639' order represents '1' with '4954'
-4953 4954 0
c Var 'aux639' direct represents '1' with '4955'
4953 -4954 4955 0
-4955 4954 0
-4955 -4953 0
c Var 'aux639' direct represents '2' with '-4954'
4953 4955 -4954 0
c Encoding variable: aux640 with domain: int(0..2) (representing constraint ((field_00005_00003=7) + (field_00005_00001=7)))
c Both direct and order encoding.
c Var 'aux640' order represents '0' with '4956'
c Var 'aux640' direct represents '0' with '4956'
c Var 'aux640' order represents '1' with '4957'
-4956 4957 0
c Var 'aux640' direct represents '1' with '4958'
4956 -4957 4958 0
-4958 4957 0
-4958 -4956 0
c Var 'aux640' direct represents '2' with '-4957'
4956 4958 -4957 0
c Encoding variable: aux641 with domain: int(0..4) (representing constraint (aux637 + aux640))
c Both direct and order encoding.
c Var 'aux641' order represents '0' with '4959'
c Var 'aux641' direct represents '0' with '4959'
c Var 'aux641' order represents '1' with '4960'
-4959 4960 0
c Var 'aux641' direct represents '1' with '4961'
4959 -4960 4961 0
-4961 4960 0
-4961 -4959 0
c Var 'aux641' order represents '2' with '4962'
-4960 4962 0
c Var 'aux641' direct represents '2' with '4963'
4960 -4962 4963 0
-4963 4962 0
-4963 -4960 0
c Var 'aux641' order represents '3' with '4964'
-4962 4964 0
c Var 'aux641' direct represents '3' with '4965'
4962 -4964 4965 0
-4965 4964 0
-4965 -4962 0
c Var 'aux641' direct represents '4' with '-4964'
4959 4961 4963 4965 -4964 0
c Encoding variable: aux642 with domain: int(0..2) (representing constraint ((field_00005_00001=8) + (field_00006_00003=8)))
c Both direct and order encoding.
c Var 'aux642' order represents '0' with '4966'
c Var 'aux642' direct represents '0' with '4966'
c Var 'aux642' order represents '1' with '4967'
-4966 4967 0
c Var 'aux642' direct represents '1' with '4968'
4966 -4967 4968 0
-4968 4967 0
-4968 -4966 0
c Var 'aux642' direct represents '2' with '-4967'
4966 4968 -4967 0
c Encoding variable: aux643 with domain: int(0..2) (representing constraint ((field_00006_00002=8) + (field_00005_00002=8)))
c Both direct and order encoding.
c Var 'aux643' order represents '0' with '4969'
c Var 'aux643' direct represents '0' with '4969'
c Var 'aux643' order represents '1' with '4970'
-4969 4970 0
c Var 'aux643' direct represents '1' with '4971'
4969 -4970 4971 0
-4971 4970 0
-4971 -4969 0
c Var 'aux643' direct represents '2' with '-4970'
4969 4971 -4970 0
c Encoding variable: aux644 with domain: int(0..2) (representing constraint ((field_00006_00001=8) + (field_00005_00003=8)))
c Both direct and order encoding.
c Var 'aux644' order represents '0' with '4972'
c Var 'aux644' direct represents '0' with '4972'
c Var 'aux644' order represents '1' with '4973'
-4972 4973 0
c Var 'aux644' direct represents '1' with '4974'
4972 -4973 4974 0
-4974 4973 0
-4974 -4972 0
c Var 'aux644' direct represents '2' with '-4973'
4972 4974 -4973 0
c Encoding variable: aux645 with domain: int(0..2) (representing constraint ((field_00005_00001=9) + (field_00006_00003=9)))
c Both direct and order encoding.
c Var 'aux645' order represents '0' with '4975'
c Var 'aux645' direct represents '0' with '4975'
c Var 'aux645' order represents '1' with '4976'
-4975 4976 0
c Var 'aux645' direct represents '1' with '4977'
4975 -4976 4977 0
-4977 4976 0
-4977 -4975 0
c Var 'aux645' direct represents '2' with '-4976'
4975 4977 -4976 0
c Encoding variable: aux646 with domain: int(0..2) (representing constraint ((field_00006_00002=9) + (field_00005_00002=9)))
c Both direct and order encoding.
c Var 'aux646' order represents '0' with '4978'
c Var 'aux646' direct represents '0' with '4978'
c Var 'aux646' order represents '1' with '4979'
-4978 4979 0
c Var 'aux646' direct represents '1' with '4980'
4978 -4979 4980 0
-4980 4979 0
-4980 -4978 0
c Var 'aux646' direct represents '2' with '-4979'
4978 4980 -4979 0
c Encoding variable: aux647 with domain: int(0..2) (representing constraint ((field_00005_00005=1) + (field_00006_00006=1)))
c Both direct and order encoding.
c Var 'aux647' order represents '0' with '4981'
c Var 'aux647' direct represents '0' with '4981'
c Var 'aux647' order represents '1' with '4982'
-4981 4982 0
c Var 'aux647' direct represents '1' with '4983'
4981 -4982 4983 0
-4983 4982 0
-4983 -4981 0
c Var 'aux647' direct represents '2' with '-4982'
4981 4983 -4982 0
c Encoding variable: aux648 with domain: int(0..2) (representing constraint ((field_00004_00005=2) + (field_00006_00006=2)))
c Both direct and order encoding.
c Var 'aux648' order represents '0' with '4984'
c Var 'aux648' direct represents '0' with '4984'
c Var 'aux648' order represents '1' with '4985'
-4984 4985 0
c Var 'aux648' direct represents '1' with '4986'
4984 -4985 4986 0
-4986 4985 0
-4986 -4984 0
c Var 'aux648' direct represents '2' with '-4985'
4984 4986 -4985 0
c Encoding variable: aux649 with domain: int(0..2) (representing constraint ((field_00006_00005=2) + (field_00004_00006=2)))
c Both direct and order encoding.
c Var 'aux649' order represents '0' with '4987'
c Var 'aux649' direct represents '0' with '4987'
c Var 'aux649' order represents '1' with '4988'
-4987 4988 0
c Var 'aux649' direct represents '1' with '4989'
4987 -4988 4989 0
-4989 4988 0
-4989 -4987 0
c Var 'aux649' direct represents '2' with '-4988'
4987 4989 -4988 0
c Encoding variable: aux650 with domain: int(0..2) (representing constraint ((field_00005_00006=2) + (field_00005_00005=2)))
c Both direct and order encoding.
c Var 'aux650' order represents '0' with '4990'
c Var 'aux650' direct represents '0' with '4990'
c Var 'aux650' order represents '1' with '4991'
-4990 4991 0
c Var 'aux650' direct represents '1' with '4992'
4990 -4991 4992 0
-4992 4991 0
-4992 -4990 0
c Var 'aux650' direct represents '2' with '-4991'
4990 4992 -4991 0
c Encoding variable: aux651 with domain: int(0..2) (representing constraint ((field_00005_00005=3) + (field_00006_00006=3)))
c Both direct and order encoding.
c Var 'aux651' order represents '0' with '4993'
c Var 'aux651' direct represents '0' with '4993'
c Var 'aux651' order represents '1' with '4994'
-4993 4994 0
c Var 'aux651' direct represents '1' with '4995'
4993 -4994 4995 0
-4995 4994 0
-4995 -4993 0
c Var 'aux651' direct represents '2' with '-4994'
4993 4995 -4994 0
c Encoding variable: aux652 with domain: int(0..2) (representing constraint ((field_00005_00004=4) + (field_00006_00006=4)))
c Both direct and order encoding.
c Var 'aux652' order represents '0' with '4996'
c Var 'aux652' direct represents '0' with '4996'
c Var 'aux652' order represents '1' with '4997'
-4996 4997 0
c Var 'aux652' direct represents '1' with '4998'
4996 -4997 4998 0
-4998 4997 0
-4998 -4996 0
c Var 'aux652' direct represents '2' with '-4997'
4996 4998 -4997 0
c Encoding variable: aux653 with domain: int(0..2) (representing constraint ((field_00006_00005=4) + (field_00005_00005=4)))
c Both direct and order encoding.
c Var 'aux653' order represents '0' with '4999'
c Var 'aux653' direct represents '0' with '4999'
c Var 'aux653' order represents '1' with '5000'
-4999 5000 0
c Var 'aux653' direct represents '1' with '5001'
4999 -5000 5001 0
-5001 5000 0
-5001 -4999 0
c Var 'aux653' direct represents '2' with '-5000'
4999 5001 -5000 0
c Encoding variable: aux654 with domain: int(0..2) (representing constraint ((field_00006_00004=4) + (field_00005_00006=4)))
c Both direct and order encoding.
c Var 'aux654' order represents '0' with '5002'
c Var 'aux654' direct represents '0' with '5002'
c Var 'aux654' order represents '1' with '5003'
-5002 5003 0
c Var 'aux654' direct represents '1' with '5004'
5002 -5003 5004 0
-5004 5003 0
-5004 -5002 0
c Var 'aux654' direct represents '2' with '-5003'
5002 5004 -5003 0
c Encoding variable: aux655 with domain: int(0..2) (representing constraint ((field_00005_00004=6) + (field_00006_00006=6)))
c Both direct and order encoding.
c Var 'aux655' order represents '0' with '5005'
c Var 'aux655' direct represents '0' with '5005'
c Var 'aux655' order represents '1' with '5006'
-5005 5006 0
c Var 'aux655' direct represents '1' with '5007'
5005 -5006 5007 0
-5007 5006 0
-5007 -5005 0
c Var 'aux655' direct represents '2' with '-5006'
5005 5007 -5006 0
c Encoding variable: aux656 with domain: int(0..2) (representing constraint ((field_00006_00005=6) + (field_00005_00005=6)))
c Both direct and order encoding.
c Var 'aux656' order represents '0' with '5008'
c Var 'aux656' direct represents '0' with '5008'
c Var 'aux656' order represents '1' with '5009'
-5008 5009 0
c Var 'aux656' direct represents '1' with '5010'
5008 -5009 5010 0
-5010 5009 0
-5010 -5008 0
c Var 'aux656' direct represents '2' with '-5009'
5008 5010 -5009 0
c Encoding variable: aux657 with domain: int(0..2) (representing constraint ((field_00006_00004=6) + (field_00005_00006=6)))
c Both direct and order encoding.
c Var 'aux657' order represents '0' with '5011'
c Var 'aux657' direct represents '0' with '5011'
c Var 'aux657' order represents '1' with '5012'
-5011 5012 0
c Var 'aux657' direct represents '1' with '5013'
5011 -5012 5013 0
-5013 5012 0
-5013 -5011 0
c Var 'aux657' direct represents '2' with '-5012'
5011 5013 -5012 0
c Encoding variable: aux658 with domain: int(0..2) (representing constraint ((field_00004_00005=7) + (field_00006_00006=7)))
c Both direct and order encoding.
c Var 'aux658' order represents '0' with '5014'
c Var 'aux658' direct represents '0' with '5014'
c Var 'aux658' order represents '1' with '5015'
-5014 5015 0
c Var 'aux658' direct represents '1' with '5016'
5014 -5015 5016 0
-5016 5015 0
-5016 -5014 0
c Var 'aux658' direct represents '2' with '-5015'
5014 5016 -5015 0
c Encoding variable: aux659 with domain: int(0..2) (representing constraint ((field_00006_00005=7) + (field_00004_00006=7)))
c Both direct and order encoding.
c Var 'aux659' order represents '0' with '5017'
c Var 'aux659' direct represents '0' with '5017'
c Var 'aux659' order represents '1' with '5018'
-5017 5018 0
c Var 'aux659' direct represents '1' with '5019'
5017 -5018 5019 0
-5019 5018 0
-5019 -5017 0
c Var 'aux659' direct represents '2' with '-5018'
5017 5019 -5018 0
c Encoding variable: aux660 with domain: int(0..2) (representing constraint ((field_00006_00004=7) + (field_00005_00005=7)))
c Both direct and order encoding.
c Var 'aux660' order represents '0' with '5020'
c Var 'aux660' direct represents '0' with '5020'
c Var 'aux660' order represents '1' with '5021'
-5020 5021 0
c Var 'aux660' direct represents '1' with '5022'
5020 -5021 5022 0
-5022 5021 0
-5022 -5020 0
c Var 'aux660' direct represents '2' with '-5021'
5020 5022 -5021 0
c Encoding variable: aux661 with domain: int(0..2) (representing constraint ((field_00005_00006=7) + (field_00005_00004=7)))
c Both direct and order encoding.
c Var 'aux661' order represents '0' with '5023'
c Var 'aux661' direct represents '0' with '5023'
c Var 'aux661' order represents '1' with '5024'
-5023 5024 0
c Var 'aux661' direct represents '1' with '5025'
5023 -5024 5025 0
-5025 5024 0
-5025 -5023 0
c Var 'aux661' direct represents '2' with '-5024'
5023 5025 -5024 0
c Encoding variable: aux662 with domain: int(0..4) (representing constraint (aux658 + aux661))
c Both direct and order encoding.
c Var 'aux662' order represents '0' with '5026'
c Var 'aux662' direct represents '0' with '5026'
c Var 'aux662' order represents '1' with '5027'
-5026 5027 0
c Var 'aux662' direct represents '1' with '5028'
5026 -5027 5028 0
-5028 5027 0
-5028 -5026 0
c Var 'aux662' order represents '2' with '5029'
-5027 5029 0
c Var 'aux662' direct represents '2' with '5030'
5027 -5029 5030 0
-5030 5029 0
-5030 -5027 0
c Var 'aux662' order represents '3' with '5031'
-5029 5031 0
c Var 'aux662' direct represents '3' with '5032'
5029 -5031 5032 0
-5032 5031 0
-5032 -5029 0
c Var 'aux662' direct represents '4' with '-5031'
5026 5028 5030 5032 -5031 0
c Encoding variable: aux663 with domain: int(0..2) (representing constraint ((field_00005_00004=8) + (field_00006_00006=8)))
c Both direct and order encoding.
c Var 'aux663' order represents '0' with '5033'
c Var 'aux663' direct represents '0' with '5033'
c Var 'aux663' order represents '1' with '5034'
-5033 5034 0
c Var 'aux663' direct represents '1' with '5035'
5033 -5034 5035 0
-5035 5034 0
-5035 -5033 0
c Var 'aux663' direct represents '2' with '-5034'
5033 5035 -5034 0
c Encoding variable: aux664 with domain: int(0..2) (representing constraint ((field_00006_00005=8) + (field_00005_00005=8)))
c Both direct and order encoding.
c Var 'aux664' order represents '0' with '5036'
c Var 'aux664' direct represents '0' with '5036'
c Var 'aux664' order represents '1' with '5037'
-5036 5037 0
c Var 'aux664' direct represents '1' with '5038'
5036 -5037 5038 0
-5038 5037 0
-5038 -5036 0
c Var 'aux664' direct represents '2' with '-5037'
5036 5038 -5037 0
c Encoding variable: aux665 with domain: int(0..2) (representing constraint ((field_00006_00004=8) + (field_00005_00006=8)))
c Both direct and order encoding.
c Var 'aux665' order represents '0' with '5039'
c Var 'aux665' direct represents '0' with '5039'
c Var 'aux665' order represents '1' with '5040'
-5039 5040 0
c Var 'aux665' direct represents '1' with '5041'
5039 -5040 5041 0
-5041 5040 0
-5041 -5039 0
c Var 'aux665' direct represents '2' with '-5040'
5039 5041 -5040 0
c Encoding variable: aux666 with domain: int(0..2) (representing constraint ((field_00005_00008=1) + (field_00006_00008=1)))
c Both direct and order encoding.
c Var 'aux666' order represents '0' with '5042'
c Var 'aux666' direct represents '0' with '5042'
c Var 'aux666' order represents '1' with '5043'
-5042 5043 0
c Var 'aux666' direct represents '1' with '5044'
5042 -5043 5044 0
-5044 5043 0
-5044 -5042 0
c Var 'aux666' direct represents '2' with '-5043'
5042 5044 -5043 0
c Encoding variable: aux667 with domain: int(0..2) (representing constraint ((field_00005_00007=2) + (field_00006_00008=2)))
c Both direct and order encoding.
c Var 'aux667' order represents '0' with '5045'
c Var 'aux667' direct represents '0' with '5045'
c Var 'aux667' order represents '1' with '5046'
-5045 5046 0
c Var 'aux667' direct represents '1' with '5047'
5045 -5046 5047 0
-5047 5046 0
-5047 -5045 0
c Var 'aux667' direct represents '2' with '-5046'
5045 5047 -5046 0
c Encoding variable: aux668 with domain: int(0..2) (representing constraint ((field_00005_00007=5) + (field_00006_00009=5)))
c Both direct and order encoding.
c Var 'aux668' order represents '0' with '5048'
c Var 'aux668' direct represents '0' with '5048'
c Var 'aux668' order represents '1' with '5049'
-5048 5049 0
c Var 'aux668' direct represents '1' with '5050'
5048 -5049 5050 0
-5050 5049 0
-5050 -5048 0
c Var 'aux668' direct represents '2' with '-5049'
5048 5050 -5049 0
c Encoding variable: aux669 with domain: int(0..2) (representing constraint ((field_00006_00008=5) + (field_00005_00008=5)))
c Both direct and order encoding.
c Var 'aux669' order represents '0' with '5051'
c Var 'aux669' direct represents '0' with '5051'
c Var 'aux669' order represents '1' with '5052'
-5051 5052 0
c Var 'aux669' direct represents '1' with '5053'
5051 -5052 5053 0
-5053 5052 0
-5053 -5051 0
c Var 'aux669' direct represents '2' with '-5052'
5051 5053 -5052 0
c Encoding variable: aux670 with domain: int(0..2) (representing constraint ((field_00006_00007=5) + (field_00005_00009=5)))
c Both direct and order encoding.
c Var 'aux670' order represents '0' with '5054'
c Var 'aux670' direct represents '0' with '5054'
c Var 'aux670' order represents '1' with '5055'
-5054 5055 0
c Var 'aux670' direct represents '1' with '5056'
5054 -5055 5056 0
-5056 5055 0
-5056 -5054 0
c Var 'aux670' direct represents '2' with '-5055'
5054 5056 -5055 0
c Encoding variable: aux671 with domain: int(0..2) (representing constraint ((field_00005_00007=7) + (field_00006_00009=7)))
c Both direct and order encoding.
c Var 'aux671' order represents '0' with '5057'
c Var 'aux671' direct represents '0' with '5057'
c Var 'aux671' order represents '1' with '5058'
-5057 5058 0
c Var 'aux671' direct represents '1' with '5059'
5057 -5058 5059 0
-5059 5058 0
-5059 -5057 0
c Var 'aux671' direct represents '2' with '-5058'
5057 5059 -5058 0
c Encoding variable: aux672 with domain: int(0..2) (representing constraint ((field_00006_00008=7) + (field_00005_00008=7)))
c Both direct and order encoding.
c Var 'aux672' order represents '0' with '5060'
c Var 'aux672' direct represents '0' with '5060'
c Var 'aux672' order represents '1' with '5061'
-5060 5061 0
c Var 'aux672' direct represents '1' with '5062'
5060 -5061 5062 0
-5062 5061 0
-5062 -5060 0
c Var 'aux672' direct represents '2' with '-5061'
5060 5062 -5061 0
c Encoding variable: aux673 with domain: int(0..2) (representing constraint ((field_00006_00007=7) + (field_00005_00009=7)))
c Both direct and order encoding.
c Var 'aux673' order represents '0' with '5063'
c Var 'aux673' direct represents '0' with '5063'
c Var 'aux673' order represents '1' with '5064'
-5063 5064 0
c Var 'aux673' direct represents '1' with '5065'
5063 -5064 5065 0
-5065 5064 0
-5065 -5063 0
c Var 'aux673' direct represents '2' with '-5064'
5063 5065 -5064 0
c Encoding variable: aux674 with domain: int(0..2) (representing constraint ((field_00005_00007=9) + (field_00006_00008=9)))
c Both direct and order encoding.
c Var 'aux674' order represents '0' with '5066'
c Var 'aux674' direct represents '0' with '5066'
c Var 'aux674' order represents '1' with '5067'
-5066 5067 0
c Var 'aux674' direct represents '1' with '5068'
5066 -5067 5068 0
-5068 5067 0
-5068 -5066 0
c Var 'aux674' direct represents '2' with '-5067'
5066 5068 -5067 0
c Encoding variable: aux675 with domain: int(0..2) (representing constraint ((field_00006_00007=9) + (field_00005_00008=9)))
c Both direct and order encoding.
c Var 'aux675' order represents '0' with '5069'
c Var 'aux675' direct represents '0' with '5069'
c Var 'aux675' order represents '1' with '5070'
-5069 5070 0
c Var 'aux675' direct represents '1' with '5071'
5069 -5070 5071 0
-5071 5070 0
-5071 -5069 0
c Var 'aux675' direct represents '2' with '-5070'
5069 5071 -5070 0
c Encoding variable: aux676 with domain: int(0..2) (representing constraint ((field_00009_00001=2) + (field_00008_00003=2)))
c Both direct and order encoding.
c Var 'aux676' order represents '0' with '5072'
c Var 'aux676' direct represents '0' with '5072'
c Var 'aux676' order represents '1' with '5073'
-5072 5073 0
c Var 'aux676' direct represents '1' with '5074'
5072 -5073 5074 0
-5074 5073 0
-5074 -5072 0
c Var 'aux676' direct represents '2' with '-5073'
5072 5074 -5073 0
c Encoding variable: aux677 with domain: int(0..2) (representing constraint ((field_00008_00002=2) + (field_00009_00003=2)))
c Both direct and order encoding.
c Var 'aux677' order represents '0' with '5075'
c Var 'aux677' direct represents '0' with '5075'
c Var 'aux677' order represents '1' with '5076'
-5075 5076 0
c Var 'aux677' direct represents '1' with '5077'
5075 -5076 5077 0
-5077 5076 0
-5077 -5075 0
c Var 'aux677' direct represents '2' with '-5076'
5075 5077 -5076 0
c Encoding variable: aux678 with domain: int(0..2) (representing constraint ((field_00007_00003=2) + (field_00007_00002=2)))
c Both direct and order encoding.
c Var 'aux678' order represents '0' with '5078'
c Var 'aux678' direct represents '0' with '5078'
c Var 'aux678' order represents '1' with '5079'
-5078 5079 0
c Var 'aux678' direct represents '1' with '5080'
5078 -5079 5080 0
-5080 5079 0
-5080 -5078 0
c Var 'aux678' direct represents '2' with '-5079'
5078 5080 -5079 0
c Encoding variable: aux679 with domain: int(0..3) (representing constraint ((field_00007_00001=2) + aux678))
c Both direct and order encoding.
c Var 'aux679' order represents '0' with '5081'
c Var 'aux679' direct represents '0' with '5081'
c Var 'aux679' order represents '1' with '5082'
-5081 5082 0
c Var 'aux679' direct represents '1' with '5083'
5081 -5082 5083 0
-5083 5082 0
-5083 -5081 0
c Var 'aux679' order represents '2' with '5084'
-5082 5084 0
c Var 'aux679' direct represents '2' with '5085'
5082 -5084 5085 0
-5085 5084 0
-5085 -5082 0
c Var 'aux679' direct represents '3' with '-5084'
5081 5083 5085 -5084 0
c Encoding variable: aux680 with domain: int(0..2) (representing constraint ((field_00007_00002=3) + (field_00008_00003=3)))
c Both direct and order encoding.
c Var 'aux680' order represents '0' with '5086'
c Var 'aux680' direct represents '0' with '5086'
c Var 'aux680' order represents '1' with '5087'
-5086 5087 0
c Var 'aux680' direct represents '1' with '5088'
5086 -5087 5088 0
-5088 5087 0
-5088 -5086 0
c Var 'aux680' direct represents '2' with '-5087'
5086 5088 -5087 0
c Encoding variable: aux681 with domain: int(0..2) (representing constraint ((field_00007_00002=4) + (field_00008_00003=4)))
c Both direct and order encoding.
c Var 'aux681' order represents '0' with '5089'
c Var 'aux681' direct represents '0' with '5089'
c Var 'aux681' order represents '1' with '5090'
-5089 5090 0
c Var 'aux681' direct represents '1' with '5091'
5089 -5090 5091 0
-5091 5090 0
-5091 -5089 0
c Var 'aux681' direct represents '2' with '-5090'
5089 5091 -5090 0
c Encoding variable: aux682 with domain: int(0..2) (representing constraint ((field_00009_00001=5) + (field_00008_00003=5)))
c Both direct and order encoding.
c Var 'aux682' order represents '0' with '5092'
c Var 'aux682' direct represents '0' with '5092'
c Var 'aux682' order represents '1' with '5093'
-5092 5093 0
c Var 'aux682' direct represents '1' with '5094'
5092 -5093 5094 0
-5094 5093 0
-5094 -5092 0
c Var 'aux682' direct represents '2' with '-5093'
5092 5094 -5093 0
c Encoding variable: aux683 with domain: int(0..2) (representing constraint ((field_00008_00002=5) + (field_00009_00002=5)))
c Both direct and order encoding.
c Var 'aux683' order represents '0' with '5095'
c Var 'aux683' direct represents '0' with '5095'
c Var 'aux683' order represents '1' with '5096'
-5095 5096 0
c Var 'aux683' direct represents '1' with '5097'
5095 -5096 5097 0
-5097 5096 0
-5097 -5095 0
c Var 'aux683' direct represents '2' with '-5096'
5095 5097 -5096 0
c Encoding variable: aux684 with domain: int(0..2) (representing constraint ((field_00008_00001=5) + (field_00007_00001=5)))
c Both direct and order encoding.
c Var 'aux684' order represents '0' with '5098'
c Var 'aux684' direct represents '0' with '5098'
c Var 'aux684' order represents '1' with '5099'
-5098 5099 0
c Var 'aux684' direct represents '1' with '5100'
5098 -5099 5100 0
-5100 5099 0
-5100 -5098 0
c Var 'aux684' direct represents '2' with '-5099'
5098 5100 -5099 0
c Encoding variable: aux685 with domain: int(0..2) (representing constraint ((field_00007_00003=5) + (field_00007_00002=5)))
c Both direct and order encoding.
c Var 'aux685' order represents '0' with '5101'
c Var 'aux685' direct represents '0' with '5101'
c Var 'aux685' order represents '1' with '5102'
-5101 5102 0
c Var 'aux685' direct represents '1' with '5103'
5101 -5102 5103 0
-5103 5102 0
-5103 -5101 0
c Var 'aux685' direct represents '2' with '-5102'
5101 5103 -5102 0
c Encoding variable: aux686 with domain: int(0..3) (representing constraint ((field_00009_00003=5) + aux685))
c Both direct and order encoding.
c Var 'aux686' order represents '0' with '5104'
c Var 'aux686' direct represents '0' with '5104'
c Var 'aux686' order represents '1' with '5105'
-5104 5105 0
c Var 'aux686' direct represents '1' with '5106'
5104 -5105 5106 0
-5106 5105 0
-5106 -5104 0
c Var 'aux686' order represents '2' with '5107'
-5105 5107 0
c Var 'aux686' direct represents '2' with '5108'
5105 -5107 5108 0
-5108 5107 0
-5108 -5105 0
c Var 'aux686' direct represents '3' with '-5107'
5104 5106 5108 -5107 0
c Encoding variable: aux687 with domain: int(0..4) (representing constraint (aux682 + aux684))
c Both direct and order encoding.
c Var 'aux687' order represents '0' with '5109'
c Var 'aux687' direct represents '0' with '5109'
c Var 'aux687' order represents '1' with '5110'
-5109 5110 0
c Var 'aux687' direct represents '1' with '5111'
5109 -5110 5111 0
-5111 5110 0
-5111 -5109 0
c Var 'aux687' order represents '2' with '5112'
-5110 5112 0
c Var 'aux687' direct represents '2' with '5113'
5110 -5112 5113 0
-5113 5112 0
-5113 -5110 0
c Var 'aux687' order represents '3' with '5114'
-5112 5114 0
c Var 'aux687' direct represents '3' with '5115'
5112 -5114 5115 0
-5115 5114 0
-5115 -5112 0
c Var 'aux687' direct represents '4' with '-5114'
5109 5111 5113 5115 -5114 0
c Encoding variable: aux688 with domain: int(0..2) (representing constraint ((field_00009_00001=6) + (field_00008_00003=6)))
c Both direct and order encoding.
c Var 'aux688' order represents '0' with '5116'
c Var 'aux688' direct represents '0' with '5116'
c Var 'aux688' order represents '1' with '5117'
-5116 5117 0
c Var 'aux688' direct represents '1' with '5118'
5116 -5117 5118 0
-5118 5117 0
-5118 -5116 0
c Var 'aux688' direct represents '2' with '-5117'
5116 5118 -5117 0
c Encoding variable: aux689 with domain: int(0..2) (representing constraint ((field_00008_00002=6) + (field_00009_00002=6)))
c Both direct and order encoding.
c Var 'aux689' order represents '0' with '5119'
c Var 'aux689' direct represents '0' with '5119'
c Var 'aux689' order represents '1' with '5120'
-5119 5120 0
c Var 'aux689' direct represents '1' with '5121'
5119 -5120 5121 0
-5121 5120 0
-5121 -5119 0
c Var 'aux689' direct represents '2' with '-5120'
5119 5121 -5120 0
c Encoding variable: aux690 with domain: int(0..2) (representing constraint ((field_00008_00001=6) + (field_00007_00001=6)))
c Both direct and order encoding.
c Var 'aux690' order represents '0' with '5122'
c Var 'aux690' direct represents '0' with '5122'
c Var 'aux690' order represents '1' with '5123'
-5122 5123 0
c Var 'aux690' direct represents '1' with '5124'
5122 -5123 5124 0
-5124 5123 0
-5124 -5122 0
c Var 'aux690' direct represents '2' with '-5123'
5122 5124 -5123 0
c Encoding variable: aux691 with domain: int(0..2) (representing constraint ((field_00007_00003=6) + (field_00007_00002=6)))
c Both direct and order encoding.
c Var 'aux691' order represents '0' with '5125'
c Var 'aux691' direct represents '0' with '5125'
c Var 'aux691' order represents '1' with '5126'
-5125 5126 0
c Var 'aux691' direct represents '1' with '5127'
5125 -5126 5127 0
-5127 5126 0
-5127 -5125 0
c Var 'aux691' direct represents '2' with '-5126'
5125 5127 -5126 0
c Encoding variable: aux692 with domain: int(0..3) (representing constraint ((field_00009_00003=6) + aux691))
c Both direct and order encoding.
c Var 'aux692' order represents '0' with '5128'
c Var 'aux692' direct represents '0' with '5128'
c Var 'aux692' order represents '1' with '5129'
-5128 5129 0
c Var 'aux692' direct represents '1' with '5130'
5128 -5129 5130 0
-5130 5129 0
-5130 -5128 0
c Var 'aux692' order represents '2' with '5131'
-5129 5131 0
c Var 'aux692' direct represents '2' with '5132'
5129 -5131 5132 0
-5132 5131 0
-5132 -5129 0
c Var 'aux692' direct represents '3' with '-5131'
5128 5130 5132 -5131 0
c Encoding variable: aux693 with domain: int(0..4) (representing constraint (aux688 + aux690))
c Both direct and order encoding.
c Var 'aux693' order represents '0' with '5133'
c Var 'aux693' direct represents '0' with '5133'
c Var 'aux693' order represents '1' with '5134'
-5133 5134 0
c Var 'aux693' direct represents '1' with '5135'
5133 -5134 5135 0
-5135 5134 0
-5135 -5133 0
c Var 'aux693' order represents '2' with '5136'
-5134 5136 0
c Var 'aux693' direct represents '2' with '5137'
5134 -5136 5137 0
-5137 5136 0
-5137 -5134 0
c Var 'aux693' order represents '3' with '5138'
-5136 5138 0
c Var 'aux693' direct represents '3' with '5139'
5136 -5138 5139 0
-5139 5138 0
-5139 -5136 0
c Var 'aux693' direct represents '4' with '-5138'
5133 5135 5137 5139 -5138 0
c Encoding variable: aux694 with domain: int(0..2) (representing constraint ((field_00009_00001=7) + (field_00008_00003=7)))
c Both direct and order encoding.
c Var 'aux694' order represents '0' with '5140'
c Var 'aux694' direct represents '0' with '5140'
c Var 'aux694' order represents '1' with '5141'
-5140 5141 0
c Var 'aux694' direct represents '1' with '5142'
5140 -5141 5142 0
-5142 5141 0
-5142 -5140 0
c Var 'aux694' direct represents '2' with '-5141'
5140 5142 -5141 0
c Encoding variable: aux695 with domain: int(0..2) (representing constraint ((field_00008_00002=7) + (field_00009_00003=7)))
c Both direct and order encoding.
c Var 'aux695' order represents '0' with '5143'
c Var 'aux695' direct represents '0' with '5143'
c Var 'aux695' order represents '1' with '5144'
-5143 5144 0
c Var 'aux695' direct represents '1' with '5145'
5143 -5144 5145 0
-5145 5144 0
-5145 -5143 0
c Var 'aux695' direct represents '2' with '-5144'
5143 5145 -5144 0
c Encoding variable: aux696 with domain: int(0..2) (representing constraint ((field_00008_00001=7) + (field_00007_00002=7)))
c Both direct and order encoding.
c Var 'aux696' order represents '0' with '5146'
c Var 'aux696' direct represents '0' with '5146'
c Var 'aux696' order represents '1' with '5147'
-5146 5147 0
c Var 'aux696' direct represents '1' with '5148'
5146 -5147 5148 0
-5148 5147 0
-5148 -5146 0
c Var 'aux696' direct represents '2' with '-5147'
5146 5148 -5147 0
c Encoding variable: aux697 with domain: int(0..2) (representing constraint ((field_00007_00003=7) + (field_00007_00001=7)))
c Both direct and order encoding.
c Var 'aux697' order represents '0' with '5149'
c Var 'aux697' direct represents '0' with '5149'
c Var 'aux697' order represents '1' with '5150'
-5149 5150 0
c Var 'aux697' direct represents '1' with '5151'
5149 -5150 5151 0
-5151 5150 0
-5151 -5149 0
c Var 'aux697' direct represents '2' with '-5150'
5149 5151 -5150 0
c Encoding variable: aux698 with domain: int(0..4) (representing constraint (aux694 + aux697))
c Both direct and order encoding.
c Var 'aux698' order represents '0' with '5152'
c Var 'aux698' direct represents '0' with '5152'
c Var 'aux698' order represents '1' with '5153'
-5152 5153 0
c Var 'aux698' direct represents '1' with '5154'
5152 -5153 5154 0
-5154 5153 0
-5154 -5152 0
c Var 'aux698' order represents '2' with '5155'
-5153 5155 0
c Var 'aux698' direct represents '2' with '5156'
5153 -5155 5156 0
-5156 5155 0
-5156 -5153 0
c Var 'aux698' order represents '3' with '5157'
-5155 5157 0
c Var 'aux698' direct represents '3' with '5158'
5155 -5157 5158 0
-5158 5157 0
-5158 -5155 0
c Var 'aux698' direct represents '4' with '-5157'
5152 5154 5156 5158 -5157 0
c Encoding variable: aux699 with domain: int(0..2) (representing constraint ((field_00009_00001=8) + (field_00008_00003=8)))
c Both direct and order encoding.
c Var 'aux699' order represents '0' with '5159'
c Var 'aux699' direct represents '0' with '5159'
c Var 'aux699' order represents '1' with '5160'
-5159 5160 0
c Var 'aux699' direct represents '1' with '5161'
5159 -5160 5161 0
-5161 5160 0
-5161 -5159 0
c Var 'aux699' direct represents '2' with '-5160'
5159 5161 -5160 0
c Encoding variable: aux700 with domain: int(0..2) (representing constraint ((field_00008_00002=8) + (field_00009_00003=8)))
c Both direct and order encoding.
c Var 'aux700' order represents '0' with '5162'
c Var 'aux700' direct represents '0' with '5162'
c Var 'aux700' order represents '1' with '5163'
-5162 5163 0
c Var 'aux700' direct represents '1' with '5164'
5162 -5163 5164 0
-5164 5163 0
-5164 -5162 0
c Var 'aux700' direct represents '2' with '-5163'
5162 5164 -5163 0
c Encoding variable: aux701 with domain: int(0..2) (representing constraint ((field_00008_00001=8) + (field_00007_00002=8)))
c Both direct and order encoding.
c Var 'aux701' order represents '0' with '5165'
c Var 'aux701' direct represents '0' with '5165'
c Var 'aux701' order represents '1' with '5166'
-5165 5166 0
c Var 'aux701' direct represents '1' with '5167'
5165 -5166 5167 0
-5167 5166 0
-5167 -5165 0
c Var 'aux701' direct represents '2' with '-5166'
5165 5167 -5166 0
c Encoding variable: aux702 with domain: int(0..2) (representing constraint ((field_00007_00003=8) + (field_00007_00001=8)))
c Both direct and order encoding.
c Var 'aux702' order represents '0' with '5168'
c Var 'aux702' direct represents '0' with '5168'
c Var 'aux702' order represents '1' with '5169'
-5168 5169 0
c Var 'aux702' direct represents '1' with '5170'
5168 -5169 5170 0
-5170 5169 0
-5170 -5168 0
c Var 'aux702' direct represents '2' with '-5169'
5168 5170 -5169 0
c Encoding variable: aux703 with domain: int(0..4) (representing constraint (aux699 + aux702))
c Both direct and order encoding.
c Var 'aux703' order represents '0' with '5171'
c Var 'aux703' direct represents '0' with '5171'
c Var 'aux703' order represents '1' with '5172'
-5171 5172 0
c Var 'aux703' direct represents '1' with '5173'
5171 -5172 5173 0
-5173 5172 0
-5173 -5171 0
c Var 'aux703' order represents '2' with '5174'
-5172 5174 0
c Var 'aux703' direct represents '2' with '5175'
5172 -5174 5175 0
-5175 5174 0
-5175 -5172 0
c Var 'aux703' order represents '3' with '5176'
-5174 5176 0
c Var 'aux703' direct represents '3' with '5177'
5174 -5176 5177 0
-5177 5176 0
-5177 -5174 0
c Var 'aux703' direct represents '4' with '-5176'
5171 5173 5175 5177 -5176 0
c Encoding variable: aux704 with domain: int(0..2) (representing constraint ((field_00009_00001=9) + (field_00008_00003=9)))
c Both direct and order encoding.
c Var 'aux704' order represents '0' with '5178'
c Var 'aux704' direct represents '0' with '5178'
c Var 'aux704' order represents '1' with '5179'
-5178 5179 0
c Var 'aux704' direct represents '1' with '5180'
5178 -5179 5180 0
-5180 5179 0
-5180 -5178 0
c Var 'aux704' direct represents '2' with '-5179'
5178 5180 -5179 0
c Encoding variable: aux705 with domain: int(0..2) (representing constraint ((field_00008_00002=9) + (field_00009_00003=9)))
c Both direct and order encoding.
c Var 'aux705' order represents '0' with '5181'
c Var 'aux705' direct represents '0' with '5181'
c Var 'aux705' order represents '1' with '5182'
-5181 5182 0
c Var 'aux705' direct represents '1' with '5183'
5181 -5182 5183 0
-5183 5182 0
-5183 -5181 0
c Var 'aux705' direct represents '2' with '-5182'
5181 5183 -5182 0
c Encoding variable: aux706 with domain: int(0..2) (representing constraint ((field_00007_00003=9) + (field_00007_00002=9)))
c Both direct and order encoding.
c Var 'aux706' order represents '0' with '5184'
c Var 'aux706' direct represents '0' with '5184'
c Var 'aux706' order represents '1' with '5185'
-5184 5185 0
c Var 'aux706' direct represents '1' with '5186'
5184 -5185 5186 0
-5186 5185 0
-5186 -5184 0
c Var 'aux706' direct represents '2' with '-5185'
5184 5186 -5185 0
c Encoding variable: aux707 with domain: int(0..3) (representing constraint ((field_00007_00001=9) + aux706))
c Both direct and order encoding.
c Var 'aux707' order represents '0' with '5187'
c Var 'aux707' direct represents '0' with '5187'
c Var 'aux707' order represents '1' with '5188'
-5187 5188 0
c Var 'aux707' direct represents '1' with '5189'
5187 -5188 5189 0
-5189 5188 0
-5189 -5187 0
c Var 'aux707' order represents '2' with '5190'
-5188 5190 0
c Var 'aux707' direct represents '2' with '5191'
5188 -5190 5191 0
-5191 5190 0
-5191 -5188 0
c Var 'aux707' direct represents '3' with '-5190'
5187 5189 5191 -5190 0
c Encoding variable: aux708 with domain: int(0..2) (representing constraint ((field_00009_00005=2) + (field_00008_00006=2)))
c Both direct and order encoding.
c Var 'aux708' order represents '0' with '5192'
c Var 'aux708' direct represents '0' with '5192'
c Var 'aux708' order represents '1' with '5193'
-5192 5193 0
c Var 'aux708' direct represents '1' with '5194'
5192 -5193 5194 0
-5194 5193 0
-5194 -5192 0
c Var 'aux708' direct represents '2' with '-5193'
5192 5194 -5193 0
c Encoding variable: aux709 with domain: int(0..2) (representing constraint ((field_00008_00005=2) + (field_00009_00006=2)))
c Both direct and order encoding.
c Var 'aux709' order represents '0' with '5195'
c Var 'aux709' direct represents '0' with '5195'
c Var 'aux709' order represents '1' with '5196'
-5195 5196 0
c Var 'aux709' direct represents '1' with '5197'
5195 -5196 5197 0
-5197 5196 0
-5197 -5195 0
c Var 'aux709' direct represents '2' with '-5196'
5195 5197 -5196 0
c Encoding variable: aux710 with domain: int(0..2) (representing constraint ((field_00007_00006=2) + (field_00007_00005=2)))
c Both direct and order encoding.
c Var 'aux710' order represents '0' with '5198'
c Var 'aux710' direct represents '0' with '5198'
c Var 'aux710' order represents '1' with '5199'
-5198 5199 0
c Var 'aux710' direct represents '1' with '5200'
5198 -5199 5200 0
-5200 5199 0
-5200 -5198 0
c Var 'aux710' direct represents '2' with '-5199'
5198 5200 -5199 0
c Encoding variable: aux711 with domain: int(0..2) (representing constraint ((field_00007_00004=4) + (field_00008_00006=4)))
c Both direct and order encoding.
c Var 'aux711' order represents '0' with '5201'
c Var 'aux711' direct represents '0' with '5201'
c Var 'aux711' order represents '1' with '5202'
-5201 5202 0
c Var 'aux711' direct represents '1' with '5203'
5201 -5202 5203 0
-5203 5202 0
-5203 -5201 0
c Var 'aux711' direct represents '2' with '-5202'
5201 5203 -5202 0
c Encoding variable: aux712 with domain: int(0..2) (representing constraint ((field_00008_00005=4) + (field_00007_00005=4)))
c Both direct and order encoding.
c Var 'aux712' order represents '0' with '5204'
c Var 'aux712' direct represents '0' with '5204'
c Var 'aux712' order represents '1' with '5205'
-5204 5205 0
c Var 'aux712' direct represents '1' with '5206'
5204 -5205 5206 0
-5206 5205 0
-5206 -5204 0
c Var 'aux712' direct represents '2' with '-5205'
5204 5206 -5205 0
c Encoding variable: aux713 with domain: int(0..2) (representing constraint ((field_00008_00004=4) + (field_00007_00006=4)))
c Both direct and order encoding.
c Var 'aux713' order represents '0' with '5207'
c Var 'aux713' direct represents '0' with '5207'
c Var 'aux713' order represents '1' with '5208'
-5207 5208 0
c Var 'aux713' direct represents '1' with '5209'
5207 -5208 5209 0
-5209 5208 0
-5209 -5207 0
c Var 'aux713' direct represents '2' with '-5208'
5207 5209 -5208 0
c Encoding variable: aux714 with domain: int(0..2) (representing constraint ((field_00009_00005=5) + (field_00008_00006=5)))
c Both direct and order encoding.
c Var 'aux714' order represents '0' with '5210'
c Var 'aux714' direct represents '0' with '5210'
c Var 'aux714' order represents '1' with '5211'
-5210 5211 0
c Var 'aux714' direct represents '1' with '5212'
5210 -5211 5212 0
-5212 5211 0
-5212 -5210 0
c Var 'aux714' direct represents '2' with '-5211'
5210 5212 -5211 0
c Encoding variable: aux715 with domain: int(0..2) (representing constraint ((field_00008_00005=5) + (field_00009_00006=5)))
c Both direct and order encoding.
c Var 'aux715' order represents '0' with '5213'
c Var 'aux715' direct represents '0' with '5213'
c Var 'aux715' order represents '1' with '5214'
-5213 5214 0
c Var 'aux715' direct represents '1' with '5215'
5213 -5214 5215 0
-5215 5214 0
-5215 -5213 0
c Var 'aux715' direct represents '2' with '-5214'
5213 5215 -5214 0
c Encoding variable: aux716 with domain: int(0..2) (representing constraint ((field_00007_00006=5) + (field_00007_00005=5)))
c Both direct and order encoding.
c Var 'aux716' order represents '0' with '5216'
c Var 'aux716' direct represents '0' with '5216'
c Var 'aux716' order represents '1' with '5217'
-5216 5217 0
c Var 'aux716' direct represents '1' with '5218'
5216 -5217 5218 0
-5218 5217 0
-5218 -5216 0
c Var 'aux716' direct represents '2' with '-5217'
5216 5218 -5217 0
c Encoding variable: aux717 with domain: int(0..2) (representing constraint ((field_00009_00005=6) + (field_00008_00006=6)))
c Both direct and order encoding.
c Var 'aux717' order represents '0' with '5219'
c Var 'aux717' direct represents '0' with '5219'
c Var 'aux717' order represents '1' with '5220'
-5219 5220 0
c Var 'aux717' direct represents '1' with '5221'
5219 -5220 5221 0
-5221 5220 0
-5221 -5219 0
c Var 'aux717' direct represents '2' with '-5220'
5219 5221 -5220 0
c Encoding variable: aux718 with domain: int(0..2) (representing constraint ((field_00008_00005=6) + (field_00009_00006=6)))
c Both direct and order encoding.
c Var 'aux718' order represents '0' with '5222'
c Var 'aux718' direct represents '0' with '5222'
c Var 'aux718' order represents '1' with '5223'
-5222 5223 0
c Var 'aux718' direct represents '1' with '5224'
5222 -5223 5224 0
-5224 5223 0
-5224 -5222 0
c Var 'aux718' direct represents '2' with '-5223'
5222 5224 -5223 0
c Encoding variable: aux719 with domain: int(0..2) (representing constraint ((field_00008_00004=6) + (field_00007_00005=6)))
c Both direct and order encoding.
c Var 'aux719' order represents '0' with '5225'
c Var 'aux719' direct represents '0' with '5225'
c Var 'aux719' order represents '1' with '5226'
-5225 5226 0
c Var 'aux719' direct represents '1' with '5227'
5225 -5226 5227 0
-5227 5226 0
-5227 -5225 0
c Var 'aux719' direct represents '2' with '-5226'
5225 5227 -5226 0
c Encoding variable: aux720 with domain: int(0..2) (representing constraint ((field_00007_00006=6) + (field_00007_00004=6)))
c Both direct and order encoding.
c Var 'aux720' order represents '0' with '5228'
c Var 'aux720' direct represents '0' with '5228'
c Var 'aux720' order represents '1' with '5229'
-5228 5229 0
c Var 'aux720' direct represents '1' with '5230'
5228 -5229 5230 0
-5230 5229 0
-5230 -5228 0
c Var 'aux720' direct represents '2' with '-5229'
5228 5230 -5229 0
c Encoding variable: aux721 with domain: int(0..4) (representing constraint (aux717 + aux720))
c Both direct and order encoding.
c Var 'aux721' order represents '0' with '5231'
c Var 'aux721' direct represents '0' with '5231'
c Var 'aux721' order represents '1' with '5232'
-5231 5232 0
c Var 'aux721' direct represents '1' with '5233'
5231 -5232 5233 0
-5233 5232 0
-5233 -5231 0
c Var 'aux721' order represents '2' with '5234'
-5232 5234 0
c Var 'aux721' direct represents '2' with '5235'
5232 -5234 5235 0
-5235 5234 0
-5235 -5232 0
c Var 'aux721' order represents '3' with '5236'
-5234 5236 0
c Var 'aux721' direct represents '3' with '5237'
5234 -5236 5237 0
-5237 5236 0
-5237 -5234 0
c Var 'aux721' direct represents '4' with '-5236'
5231 5233 5235 5237 -5236 0
c Encoding variable: aux722 with domain: int(0..2) (representing constraint ((field_00009_00005=7) + (field_00008_00006=7)))
c Both direct and order encoding.
c Var 'aux722' order represents '0' with '5238'
c Var 'aux722' direct represents '0' with '5238'
c Var 'aux722' order represents '1' with '5239'
-5238 5239 0
c Var 'aux722' direct represents '1' with '5240'
5238 -5239 5240 0
-5240 5239 0
-5240 -5238 0
c Var 'aux722' direct represents '2' with '-5239'
5238 5240 -5239 0
c Encoding variable: aux723 with domain: int(0..2) (representing constraint ((field_00008_00005=7) + (field_00009_00006=7)))
c Both direct and order encoding.
c Var 'aux723' order represents '0' with '5241'
c Var 'aux723' direct represents '0' with '5241'
c Var 'aux723' order represents '1' with '5242'
-5241 5242 0
c Var 'aux723' direct represents '1' with '5243'
5241 -5242 5243 0
-5243 5242 0
-5243 -5241 0
c Var 'aux723' direct represents '2' with '-5242'
5241 5243 -5242 0
c Encoding variable: aux724 with domain: int(0..2) (representing constraint ((field_00008_00004=7) + (field_00007_00005=7)))
c Both direct and order encoding.
c Var 'aux724' order represents '0' with '5244'
c Var 'aux724' direct represents '0' with '5244'
c Var 'aux724' order represents '1' with '5245'
-5244 5245 0
c Var 'aux724' direct represents '1' with '5246'
5244 -5245 5246 0
-5246 5245 0
-5246 -5244 0
c Var 'aux724' direct represents '2' with '-5245'
5244 5246 -5245 0
c Encoding variable: aux725 with domain: int(0..2) (representing constraint ((field_00007_00006=7) + (field_00007_00004=7)))
c Both direct and order encoding.
c Var 'aux725' order represents '0' with '5247'
c Var 'aux725' direct represents '0' with '5247'
c Var 'aux725' order represents '1' with '5248'
-5247 5248 0
c Var 'aux725' direct represents '1' with '5249'
5247 -5248 5249 0
-5249 5248 0
-5249 -5247 0
c Var 'aux725' direct represents '2' with '-5248'
5247 5249 -5248 0
c Encoding variable: aux726 with domain: int(0..4) (representing constraint (aux722 + aux725))
c Both direct and order encoding.
c Var 'aux726' order represents '0' with '5250'
c Var 'aux726' direct represents '0' with '5250'
c Var 'aux726' order represents '1' with '5251'
-5250 5251 0
c Var 'aux726' direct represents '1' with '5252'
5250 -5251 5252 0
-5252 5251 0
-5252 -5250 0
c Var 'aux726' order represents '2' with '5253'
-5251 5253 0
c Var 'aux726' direct represents '2' with '5254'
5251 -5253 5254 0
-5254 5253 0
-5254 -5251 0
c Var 'aux726' order represents '3' with '5255'
-5253 5255 0
c Var 'aux726' direct represents '3' with '5256'
5253 -5255 5256 0
-5256 5255 0
-5256 -5253 0
c Var 'aux726' direct represents '4' with '-5255'
5250 5252 5254 5256 -5255 0
c Encoding variable: aux727 with domain: int(0..2) (representing constraint ((field_00009_00005=8) + (field_00008_00006=8)))
c Both direct and order encoding.
c Var 'aux727' order represents '0' with '5257'
c Var 'aux727' direct represents '0' with '5257'
c Var 'aux727' order represents '1' with '5258'
-5257 5258 0
c Var 'aux727' direct represents '1' with '5259'
5257 -5258 5259 0
-5259 5258 0
-5259 -5257 0
c Var 'aux727' direct represents '2' with '-5258'
5257 5259 -5258 0
c Encoding variable: aux728 with domain: int(0..2) (representing constraint ((field_00008_00005=8) + (field_00009_00006=8)))
c Both direct and order encoding.
c Var 'aux728' order represents '0' with '5260'
c Var 'aux728' direct represents '0' with '5260'
c Var 'aux728' order represents '1' with '5261'
-5260 5261 0
c Var 'aux728' direct represents '1' with '5262'
5260 -5261 5262 0
-5262 5261 0
-5262 -5260 0
c Var 'aux728' direct represents '2' with '-5261'
5260 5262 -5261 0
c Encoding variable: aux729 with domain: int(0..2) (representing constraint ((field_00007_00006=8) + (field_00007_00005=8)))
c Both direct and order encoding.
c Var 'aux729' order represents '0' with '5263'
c Var 'aux729' direct represents '0' with '5263'
c Var 'aux729' order represents '1' with '5264'
-5263 5264 0
c Var 'aux729' direct represents '1' with '5265'
5263 -5264 5265 0
-5265 5264 0
-5265 -5263 0
c Var 'aux729' direct represents '2' with '-5264'
5263 5265 -5264 0
c Encoding variable: aux730 with domain: int(0..2) (representing constraint ((field_00009_00005=9) + (field_00008_00006=9)))
c Both direct and order encoding.
c Var 'aux730' order represents '0' with '5266'
c Var 'aux730' direct represents '0' with '5266'
c Var 'aux730' order represents '1' with '5267'
-5266 5267 0
c Var 'aux730' direct represents '1' with '5268'
5266 -5267 5268 0
-5268 5267 0
-5268 -5266 0
c Var 'aux730' direct represents '2' with '-5267'
5266 5268 -5267 0
c Encoding variable: aux731 with domain: int(0..2) (representing constraint ((field_00008_00005=9) + (field_00009_00006=9)))
c Both direct and order encoding.
c Var 'aux731' order represents '0' with '5269'
c Var 'aux731' direct represents '0' with '5269'
c Var 'aux731' order represents '1' with '5270'
-5269 5270 0
c Var 'aux731' direct represents '1' with '5271'
5269 -5270 5271 0
-5271 5270 0
-5271 -5269 0
c Var 'aux731' direct represents '2' with '-5270'
5269 5271 -5270 0
c Encoding variable: aux732 with domain: int(0..2) (representing constraint ((field_00007_00006=9) + (field_00007_00005=9)))
c Both direct and order encoding.
c Var 'aux732' order represents '0' with '5272'
c Var 'aux732' direct represents '0' with '5272'
c Var 'aux732' order represents '1' with '5273'
-5272 5273 0
c Var 'aux732' direct represents '1' with '5274'
5272 -5273 5274 0
-5274 5273 0
-5274 -5272 0
c Var 'aux732' direct represents '2' with '-5273'
5272 5274 -5273 0
c Encoding variable: aux733 with domain: int(0..2) (representing constraint ((field_00009_00008=1) + (field_00008_00008=1)))
c Both direct and order encoding.
c Var 'aux733' order represents '0' with '5275'
c Var 'aux733' direct represents '0' with '5275'
c Var 'aux733' order represents '1' with '5276'
-5275 5276 0
c Var 'aux733' direct represents '1' with '5277'
5275 -5276 5277 0
-5277 5276 0
-5277 -5275 0
c Var 'aux733' direct represents '2' with '-5276'
5275 5277 -5276 0
c Encoding variable: aux734 with domain: int(0..2) (representing constraint ((field_00008_00007=1) + (field_00009_00009=1)))
c Both direct and order encoding.
c Var 'aux734' order represents '0' with '5278'
c Var 'aux734' direct represents '0' with '5278'
c Var 'aux734' order represents '1' with '5279'
-5278 5279 0
c Var 'aux734' direct represents '1' with '5280'
5278 -5279 5280 0
-5280 5279 0
-5280 -5278 0
c Var 'aux734' direct represents '2' with '-5279'
5278 5280 -5279 0
c Encoding variable: aux735 with domain: int(0..2) (representing constraint ((field_00007_00009=1) + (field_00007_00008=1)))
c Both direct and order encoding.
c Var 'aux735' order represents '0' with '5281'
c Var 'aux735' direct represents '0' with '5281'
c Var 'aux735' order represents '1' with '5282'
-5281 5282 0
c Var 'aux735' direct represents '1' with '5283'
5281 -5282 5283 0
-5283 5282 0
-5283 -5281 0
c Var 'aux735' direct represents '2' with '-5282'
5281 5283 -5282 0
c Encoding variable: aux736 with domain: int(0..3) (representing constraint ((field_00007_00007=1) + aux735))
c Both direct and order encoding.
c Var 'aux736' order represents '0' with '5284'
c Var 'aux736' direct represents '0' with '5284'
c Var 'aux736' order represents '1' with '5285'
-5284 5285 0
c Var 'aux736' direct represents '1' with '5286'
5284 -5285 5286 0
-5286 5285 0
-5286 -5284 0
c Var 'aux736' order represents '2' with '5287'
-5285 5287 0
c Var 'aux736' direct represents '2' with '5288'
5285 -5287 5288 0
-5288 5287 0
-5288 -5285 0
c Var 'aux736' direct represents '3' with '-5287'
5284 5286 5288 -5287 0
c Encoding variable: aux737 with domain: int(0..2) (representing constraint ((field_00009_00008=2) + (field_00008_00008=2)))
c Both direct and order encoding.
c Var 'aux737' order represents '0' with '5289'
c Var 'aux737' direct represents '0' with '5289'
c Var 'aux737' order represents '1' with '5290'
-5289 5290 0
c Var 'aux737' direct represents '1' with '5291'
5289 -5290 5291 0
-5291 5290 0
-5291 -5289 0
c Var 'aux737' direct represents '2' with '-5290'
5289 5291 -5290 0
c Encoding variable: aux738 with domain: int(0..2) (representing constraint ((field_00008_00007=2) + (field_00007_00007=2)))
c Both direct and order encoding.
c Var 'aux738' order represents '0' with '5292'
c Var 'aux738' direct represents '0' with '5292'
c Var 'aux738' order represents '1' with '5293'
-5292 5293 0
c Var 'aux738' direct represents '1' with '5294'
5292 -5293 5294 0
-5294 5293 0
-5294 -5292 0
c Var 'aux738' direct represents '2' with '-5293'
5292 5294 -5293 0
c Encoding variable: aux739 with domain: int(0..2) (representing constraint ((field_00009_00008=5) + (field_00008_00009=5)))
c Both direct and order encoding.
c Var 'aux739' order represents '0' with '5295'
c Var 'aux739' direct represents '0' with '5295'
c Var 'aux739' order represents '1' with '5296'
-5295 5296 0
c Var 'aux739' direct represents '1' with '5297'
5295 -5296 5297 0
-5297 5296 0
-5297 -5295 0
c Var 'aux739' direct represents '2' with '-5296'
5295 5297 -5296 0
c Encoding variable: aux740 with domain: int(0..2) (representing constraint ((field_00008_00008=5) + (field_00009_00009=5)))
c Both direct and order encoding.
c Var 'aux740' order represents '0' with '5298'
c Var 'aux740' direct represents '0' with '5298'
c Var 'aux740' order represents '1' with '5299'
-5298 5299 0
c Var 'aux740' direct represents '1' with '5300'
5298 -5299 5300 0
-5300 5299 0
-5300 -5298 0
c Var 'aux740' direct represents '2' with '-5299'
5298 5300 -5299 0
c Encoding variable: aux741 with domain: int(0..2) (representing constraint ((field_00008_00007=5) + (field_00007_00008=5)))
c Both direct and order encoding.
c Var 'aux741' order represents '0' with '5301'
c Var 'aux741' direct represents '0' with '5301'
c Var 'aux741' order represents '1' with '5302'
-5301 5302 0
c Var 'aux741' direct represents '1' with '5303'
5301 -5302 5303 0
-5303 5302 0
-5303 -5301 0
c Var 'aux741' direct represents '2' with '-5302'
5301 5303 -5302 0
c Encoding variable: aux742 with domain: int(0..2) (representing constraint ((field_00007_00009=5) + (field_00007_00007=5)))
c Both direct and order encoding.
c Var 'aux742' order represents '0' with '5304'
c Var 'aux742' direct represents '0' with '5304'
c Var 'aux742' order represents '1' with '5305'
-5304 5305 0
c Var 'aux742' direct represents '1' with '5306'
5304 -5305 5306 0
-5306 5305 0
-5306 -5304 0
c Var 'aux742' direct represents '2' with '-5305'
5304 5306 -5305 0
c Encoding variable: aux743 with domain: int(0..4) (representing constraint (aux739 + aux742))
c Both direct and order encoding.
c Var 'aux743' order represents '0' with '5307'
c Var 'aux743' direct represents '0' with '5307'
c Var 'aux743' order represents '1' with '5308'
-5307 5308 0
c Var 'aux743' direct represents '1' with '5309'
5307 -5308 5309 0
-5309 5308 0
-5309 -5307 0
c Var 'aux743' order represents '2' with '5310'
-5308 5310 0
c Var 'aux743' direct represents '2' with '5311'
5308 -5310 5311 0
-5311 5310 0
-5311 -5308 0
c Var 'aux743' order represents '3' with '5312'
-5310 5312 0
c Var 'aux743' direct represents '3' with '5313'
5310 -5312 5313 0
-5313 5312 0
-5313 -5310 0
c Var 'aux743' direct represents '4' with '-5312'
5307 5309 5311 5313 -5312 0
c Encoding variable: aux744 with domain: int(0..2) (representing constraint ((field_00009_00008=7) + (field_00008_00009=7)))
c Both direct and order encoding.
c Var 'aux744' order represents '0' with '5314'
c Var 'aux744' direct represents '0' with '5314'
c Var 'aux744' order represents '1' with '5315'
-5314 5315 0
c Var 'aux744' direct represents '1' with '5316'
5314 -5315 5316 0
-5316 5315 0
-5316 -5314 0
c Var 'aux744' direct represents '2' with '-5315'
5314 5316 -5315 0
c Encoding variable: aux745 with domain: int(0..2) (representing constraint ((field_00008_00008=7) + (field_00009_00009=7)))
c Both direct and order encoding.
c Var 'aux745' order represents '0' with '5317'
c Var 'aux745' direct represents '0' with '5317'
c Var 'aux745' order represents '1' with '5318'
-5317 5318 0
c Var 'aux745' direct represents '1' with '5319'
5317 -5318 5319 0
-5319 5318 0
-5319 -5317 0
c Var 'aux745' direct represents '2' with '-5318'
5317 5319 -5318 0
c Encoding variable: aux746 with domain: int(0..2) (representing constraint ((field_00008_00007=7) + (field_00007_00008=7)))
c Both direct and order encoding.
c Var 'aux746' order represents '0' with '5320'
c Var 'aux746' direct represents '0' with '5320'
c Var 'aux746' order represents '1' with '5321'
-5320 5321 0
c Var 'aux746' direct represents '1' with '5322'
5320 -5321 5322 0
-5322 5321 0
-5322 -5320 0
c Var 'aux746' direct represents '2' with '-5321'
5320 5322 -5321 0
c Encoding variable: aux747 with domain: int(0..2) (representing constraint ((field_00007_00009=7) + (field_00007_00007=7)))
c Both direct and order encoding.
c Var 'aux747' order represents '0' with '5323'
c Var 'aux747' direct represents '0' with '5323'
c Var 'aux747' order represents '1' with '5324'
-5323 5324 0
c Var 'aux747' direct represents '1' with '5325'
5323 -5324 5325 0
-5325 5324 0
-5325 -5323 0
c Var 'aux747' direct represents '2' with '-5324'
5323 5325 -5324 0
c Encoding variable: aux748 with domain: int(0..4) (representing constraint (aux744 + aux747))
c Both direct and order encoding.
c Var 'aux748' order represents '0' with '5326'
c Var 'aux748' direct represents '0' with '5326'
c Var 'aux748' order represents '1' with '5327'
-5326 5327 0
c Var 'aux748' direct represents '1' with '5328'
5326 -5327 5328 0
-5328 5327 0
-5328 -5326 0
c Var 'aux748' order represents '2' with '5329'
-5327 5329 0
c Var 'aux748' direct represents '2' with '5330'
5327 -5329 5330 0
-5330 5329 0
-5330 -5327 0
c Var 'aux748' order represents '3' with '5331'
-5329 5331 0
c Var 'aux748' direct represents '3' with '5332'
5329 -5331 5332 0
-5332 5331 0
-5332 -5329 0
c Var 'aux748' direct represents '4' with '-5331'
5326 5328 5330 5332 -5331 0
c Encoding variable: aux749 with domain: int(0..2) (representing constraint ((field_00009_00009=8) + (field_00008_00009=8)))
c Both direct and order encoding.
c Var 'aux749' order represents '0' with '5333'
c Var 'aux749' direct represents '0' with '5333'
c Var 'aux749' order represents '1' with '5334'
-5333 5334 0
c Var 'aux749' direct represents '1' with '5335'
5333 -5334 5335 0
-5335 5334 0
-5335 -5333 0
c Var 'aux749' direct represents '2' with '-5334'
5333 5335 -5334 0
c Encoding variable: aux750 with domain: int(0..2) (representing constraint ((field_00008_00007=8) + (field_00007_00007=8)))
c Both direct and order encoding.
c Var 'aux750' order represents '0' with '5336'
c Var 'aux750' direct represents '0' with '5336'
c Var 'aux750' order represents '1' with '5337'
-5336 5337 0
c Var 'aux750' direct represents '1' with '5338'
5336 -5337 5338 0
-5338 5337 0
-5338 -5336 0
c Var 'aux750' direct represents '2' with '-5337'
5336 5338 -5337 0
c Encoding variable: aux751 with domain: int(0..2) (representing constraint ((field_00009_00008=9) + (field_00008_00008=9)))
c Both direct and order encoding.
c Var 'aux751' order represents '0' with '5339'
c Var 'aux751' direct represents '0' with '5339'
c Var 'aux751' order represents '1' with '5340'
-5339 5340 0
c Var 'aux751' direct represents '1' with '5341'
5339 -5340 5341 0
-5341 5340 0
-5341 -5339 0
c Var 'aux751' direct represents '2' with '-5340'
5339 5341 -5340 0
c Encoding variable: aux752 with domain: int(0..2) (representing constraint ((field_00008_00007=9) + (field_00009_00009=9)))
c Both direct and order encoding.
c Var 'aux752' order represents '0' with '5342'
c Var 'aux752' direct represents '0' with '5342'
c Var 'aux752' order represents '1' with '5343'
-5342 5343 0
c Var 'aux752' direct represents '1' with '5344'
5342 -5343 5344 0
-5344 5343 0
-5344 -5342 0
c Var 'aux752' direct represents '2' with '-5343'
5342 5344 -5343 0
c Encoding variable: aux753 with domain: int(0..2) (representing constraint ((field_00007_00009=9) + (field_00007_00008=9)))
c Both direct and order encoding.
c Var 'aux753' order represents '0' with '5345'
c Var 'aux753' direct represents '0' with '5345'
c Var 'aux753' order represents '1' with '5346'
-5345 5346 0
c Var 'aux753' direct represents '1' with '5347'
5345 -5346 5347 0
-5347 5346 0
-5347 -5345 0
c Var 'aux753' direct represents '2' with '-5346'
5345 5347 -5346 0
c Encoding variable: aux754 with domain: int(0..3) (representing constraint ((field_00007_00007=9) + aux753))
c Both direct and order encoding.
c Var 'aux754' order represents '0' with '5348'
c Var 'aux754' direct represents '0' with '5348'
c Var 'aux754' order represents '1' with '5349'
-5348 5349 0
c Var 'aux754' direct represents '1' with '5350'
5348 -5349 5350 0
-5350 5349 0
-5350 -5348 0
c Var 'aux754' order represents '2' with '5351'
-5349 5351 0
c Var 'aux754' direct represents '2' with '5352'
5349 -5351 5352 0
-5352 5351 0
-5352 -5349 0
c Var 'aux754' direct represents '3' with '-5351'
5348 5350 5352 -5351 0
c Encoding variable: aux755 with domain: bool (representing constraint ((variant_fields_00001_00002_00001 + variant_fields_00001_00002_00002 + variant_fields_00001_00002_00003)<=8))
c Var 'aux755' direct represents '0' with '-5353'
c Var 'aux755' direct represents '1' with '5353'
c Var 'aux755' order represents '1' with '1'
c Var 'aux755' order represents '0' with '-5353'
c Encoding variable: aux756 with domain: bool (representing constraint (8<=(variant_fields_00001_00002_00001 + variant_fields_00001_00002_00002 + variant_fields_00001_00002_00003)))
c Var 'aux756' direct represents '0' with '-5354'
c Var 'aux756' direct represents '1' with '5354'
c Var 'aux756' order represents '1' with '1'
c Var 'aux756' order represents '0' with '-5354'
c Encoding variable: aux757 with domain: bool (representing constraint ((aux235 + shift(variant_fields_00001_00004_00002, -1) + shift(variant_fields_00001_00004_00003, -1))<=6))
c Var 'aux757' direct represents '0' with '-5355'
c Var 'aux757' direct represents '1' with '5355'
c Var 'aux757' order represents '1' with '1'
c Var 'aux757' order represents '0' with '-5355'
c Encoding variable: aux758 with domain: bool (representing constraint (6<=(aux235 + shift(variant_fields_00001_00004_00002, -1) + shift(variant_fields_00001_00004_00003, -1))))
c Var 'aux758' direct represents '0' with '-5356'
c Var 'aux758' direct represents '1' with '5356'
c Var 'aux758' order represents '1' with '1'
c Var 'aux758' order represents '0' with '-5356'
c Encoding variable: aux759 with domain: bool (representing constraint ((aux237 + aux239 + aux240)<=16))
c Var 'aux759' direct represents '0' with '-5357'
c Var 'aux759' direct represents '1' with '5357'
c Var 'aux759' order represents '1' with '1'
c Var 'aux759' order represents '0' with '-5357'
c Encoding variable: aux760 with domain: bool (representing constraint (16<=(aux237 + aux239 + aux240)))
c Var 'aux760' direct represents '0' with '-5358'
c Var 'aux760' direct represents '1' with '5358'
c Var 'aux760' order represents '1' with '1'
c Var 'aux760' order represents '0' with '-5358'
c Encoding variable: aux761 with domain: bool (representing constraint ((aux242 + aux243 + aux245)<=16))
c Var 'aux761' direct represents '0' with '-5359'
c Var 'aux761' direct represents '1' with '5359'
c Var 'aux761' order represents '1' with '1'
c Var 'aux761' order represents '0' with '-5359'
c Encoding variable: aux762 with domain: bool (representing constraint (16<=(aux242 + aux243 + aux245)))
c Var 'aux762' direct represents '0' with '-5360'
c Var 'aux762' direct represents '1' with '5360'
c Var 'aux762' order represents '1' with '1'
c Var 'aux762' order represents '0' with '-5360'
c Encoding variable: aux763 with domain: bool (representing constraint ((aux247 + aux248 + aux249)<=16))
c Var 'aux763' direct represents '0' with '-5361'
c Var 'aux763' direct represents '1' with '5361'
c Var 'aux763' order represents '1' with '1'
c Var 'aux763' order represents '0' with '-5361'
c Encoding variable: aux764 with domain: bool (representing constraint (16<=(aux247 + aux248 + aux249)))
c Var 'aux764' direct represents '0' with '-5362'
c Var 'aux764' direct represents '1' with '5362'
c Var 'aux764' order represents '1' with '1'
c Var 'aux764' order represents '0' with '-5362'
c Encoding variable: aux765 with domain: bool (representing constraint ((aux251 + aux252 + aux15)<=9))
c Var 'aux765' direct represents '0' with '-5363'
c Var 'aux765' direct represents '1' with '5363'
c Var 'aux765' order represents '1' with '1'
c Var 'aux765' order represents '0' with '-5363'
c Encoding variable: aux766 with domain: bool (representing constraint (9<=(aux251 + aux252 + aux15)))
c Var 'aux766' direct represents '0' with '-5364'
c Var 'aux766' direct represents '1' with '5364'
c Var 'aux766' order represents '1' with '1'
c Var 'aux766' order represents '0' with '-5364'
c Encoding variable: aux767 with domain: bool (representing constraint ((variant_fields_00002_00007_00001 + variant_fields_00002_00007_00002 + variant_fields_00002_00007_00003)<=16))
c Var 'aux767' direct represents '0' with '-5365'
c Var 'aux767' direct represents '1' with '5365'
c Var 'aux767' order represents '1' with '1'
c Var 'aux767' order represents '0' with '-5365'
c Encoding variable: aux768 with domain: bool (representing constraint (16<=(variant_fields_00002_00007_00001 + variant_fields_00002_00007_00002 + variant_fields_00002_00007_00003)))
c Var 'aux768' direct represents '0' with '-5366'
c Var 'aux768' direct represents '1' with '5366'
c Var 'aux768' order represents '1' with '1'
c Var 'aux768' order represents '0' with '-5366'
c Encoding variable: aux769 with domain: bool (representing constraint ((aux254 + aux255 + aux256)<=21))
c Var 'aux769' direct represents '0' with '-5367'
c Var 'aux769' direct represents '1' with '5367'
c Var 'aux769' order represents '1' with '1'
c Var 'aux769' order represents '0' with '-5367'
c Encoding variable: aux770 with domain: bool (representing constraint (21<=(aux254 + aux255 + aux256)))
c Var 'aux770' direct represents '0' with '-5368'
c Var 'aux770' direct represents '1' with '5368'
c Var 'aux770' order represents '1' with '1'
c Var 'aux770' order represents '0' with '-5368'
c Encoding variable: aux771 with domain: bool (representing constraint ((aux258 + aux260 + aux261)<=17))
c Var 'aux771' direct represents '0' with '-5369'
c Var 'aux771' direct represents '1' with '5369'
c Var 'aux771' order represents '1' with '1'
c Var 'aux771' order represents '0' with '-5369'
c Encoding variable: aux772 with domain: bool (representing constraint (17<=(aux258 + aux260 + aux261)))
c Var 'aux772' direct represents '0' with '-5370'
c Var 'aux772' direct represents '1' with '5370'
c Var 'aux772' order represents '1' with '1'
c Var 'aux772' order represents '0' with '-5370'
c Encoding variable: aux773 with domain: bool (representing constraint ((aux263 + aux264 + shift(variant_fields_00004_00002_00003, -2))<=14))
c Var 'aux773' direct represents '0' with '-5371'
c Var 'aux773' direct represents '1' with '5371'
c Var 'aux773' order represents '1' with '1'
c Var 'aux773' order represents '0' with '-5371'
c Encoding variable: aux774 with domain: bool (representing constraint (14<=(aux263 + aux264 + shift(variant_fields_00004_00002_00003, -2))))
c Var 'aux774' direct represents '0' with '-5372'
c Var 'aux774' direct represents '1' with '5372'
c Var 'aux774' order represents '1' with '1'
c Var 'aux774' order represents '0' with '-5372'
c Encoding variable: aux775 with domain: bool (representing constraint ((variant_fields_00004_00004_00001 + variant_fields_00004_00004_00002 + variant_fields_00004_00004_00003)<=11))
c Var 'aux775' direct represents '0' with '-5373'
c Var 'aux775' direct represents '1' with '5373'
c Var 'aux775' order represents '1' with '1'
c Var 'aux775' order represents '0' with '-5373'
c Encoding variable: aux776 with domain: bool (representing constraint (11<=(variant_fields_00004_00004_00001 + variant_fields_00004_00004_00002 + variant_fields_00004_00004_00003)))
c Var 'aux776' direct represents '0' with '-5374'
c Var 'aux776' direct represents '1' with '5374'
c Var 'aux776' order represents '1' with '1'
c Var 'aux776' order represents '0' with '-5374'
c Encoding variable: aux777 with domain: bool (representing constraint ((aux265 + shift(variant_fields_00004_00007_00002, -1) + shift(variant_fields_00004_00007_00003, -1))<=9))
c Var 'aux777' direct represents '0' with '-5375'
c Var 'aux777' direct represents '1' with '5375'
c Var 'aux777' order represents '1' with '1'
c Var 'aux777' order represents '0' with '-5375'
c Encoding variable: aux778 with domain: bool (representing constraint (9<=(aux265 + shift(variant_fields_00004_00007_00002, -1) + shift(variant_fields_00004_00007_00003, -1))))
c Var 'aux778' direct represents '0' with '-5376'
c Var 'aux778' direct represents '1' with '5376'
c Var 'aux778' order represents '1' with '1'
c Var 'aux778' order represents '0' with '-5376'
c Encoding variable: aux779 with domain: bool (representing constraint (((field_00009_00001=1) + (field_00007_00001=1))<=1))
c Var 'aux779' direct represents '0' with '-5377'
c Var 'aux779' direct represents '1' with '5377'
c Var 'aux779' order represents '1' with '1'
c Var 'aux779' order represents '0' with '-5377'
c Encoding variable: aux780 with domain: bool (representing constraint (1<=((field_00009_00001=1) + (field_00007_00001=1))))
c Var 'aux780' direct represents '0' with '-5378'
c Var 'aux780' direct represents '1' with '5378'
c Var 'aux780' order represents '1' with '1'
c Var 'aux780' order represents '0' with '-5378'
c Encoding variable: aux781 with domain: bool (representing constraint ((aux266 + (field_00007_00001=2) + (field_00005_00001=2))<=1))
c Var 'aux781' direct represents '0' with '-5379'
c Var 'aux781' direct represents '1' with '5379'
c Var 'aux781' order represents '1' with '1'
c Var 'aux781' order represents '0' with '-5379'
c Encoding variable: aux782 with domain: bool (representing constraint (1<=(aux266 + (field_00007_00001=2) + (field_00005_00001=2))))
c Var 'aux782' direct represents '0' with '-5380'
c Var 'aux782' direct represents '1' with '5380'
c Var 'aux782' order represents '1' with '1'
c Var 'aux782' order represents '0' with '-5380'
c Encoding variable: aux783 with domain: bool (representing constraint ((aux267 + aux268 + aux270)<=1))
c Var 'aux783' direct represents '0' with '-5381'
c Var 'aux783' direct represents '1' with '5381'
c Var 'aux783' order represents '1' with '1'
c Var 'aux783' order represents '0' with '-5381'
c Encoding variable: aux784 with domain: bool (representing constraint (1<=(aux267 + aux268 + aux270)))
c Var 'aux784' direct represents '0' with '-5382'
c Var 'aux784' direct represents '1' with '5382'
c Var 'aux784' order represents '1' with '1'
c Var 'aux784' order represents '0' with '-5382'
c Encoding variable: aux785 with domain: bool (representing constraint ((aux271 + aux272 + aux274)<=1))
c Var 'aux785' direct represents '0' with '-5383'
c Var 'aux785' direct represents '1' with '5383'
c Var 'aux785' order represents '1' with '1'
c Var 'aux785' order represents '0' with '-5383'
c Encoding variable: aux786 with domain: bool (representing constraint (1<=(aux271 + aux272 + aux274)))
c Var 'aux786' direct represents '0' with '-5384'
c Var 'aux786' direct represents '1' with '5384'
c Var 'aux786' order represents '1' with '1'
c Var 'aux786' order represents '0' with '-5384'
c Encoding variable: aux787 with domain: bool (representing constraint ((aux275 + aux276 + aux278)<=1))
c Var 'aux787' direct represents '0' with '-5385'
c Var 'aux787' direct represents '1' with '5385'
c Var 'aux787' order represents '1' with '1'
c Var 'aux787' order represents '0' with '-5385'
c Encoding variable: aux788 with domain: bool (representing constraint (1<=(aux275 + aux276 + aux278)))
c Var 'aux788' direct represents '0' with '-5386'
c Var 'aux788' direct represents '1' with '5386'
c Var 'aux788' order represents '1' with '1'
c Var 'aux788' order represents '0' with '-5386'
c Encoding variable: aux789 with domain: bool (representing constraint ((aux279 + aux280 + aux282)<=1))
c Var 'aux789' direct represents '0' with '-5387'
c Var 'aux789' direct represents '1' with '5387'
c Var 'aux789' order represents '1' with '1'
c Var 'aux789' order represents '0' with '-5387'
c Encoding variable: aux790 with domain: bool (representing constraint (1<=(aux279 + aux280 + aux282)))
c Var 'aux790' direct represents '0' with '-5388'
c Var 'aux790' direct represents '1' with '5388'
c Var 'aux790' order represents '1' with '1'
c Var 'aux790' order represents '0' with '-5388'
c Encoding variable: aux791 with domain: bool (representing constraint ((aux283 + aux284 + (field_00005_00001=9))<=1))
c Var 'aux791' direct represents '0' with '-5389'
c Var 'aux791' direct represents '1' with '5389'
c Var 'aux791' order represents '1' with '1'
c Var 'aux791' order represents '0' with '-5389'
c Encoding variable: aux792 with domain: bool (representing constraint (1<=(aux283 + aux284 + (field_00005_00001=9))))
c Var 'aux792' direct represents '0' with '-5390'
c Var 'aux792' direct represents '1' with '5390'
c Var 'aux792' order represents '1' with '1'
c Var 'aux792' order represents '0' with '-5390'
c Encoding variable: aux793 with domain: bool (representing constraint (((field_00004_00002=1) + (field_00002_00002=1))<=1))
c Var 'aux793' direct represents '0' with '-5391'
c Var 'aux793' direct represents '1' with '5391'
c Var 'aux793' order represents '1' with '1'
c Var 'aux793' order represents '0' with '-5391'
c Encoding variable: aux794 with domain: bool (representing constraint (1<=((field_00004_00002=1) + (field_00002_00002=1))))
c Var 'aux794' direct represents '0' with '-5392'
c Var 'aux794' direct represents '1' with '5392'
c Var 'aux794' order represents '1' with '1'
c Var 'aux794' order represents '0' with '-5392'
c Encoding variable: aux795 with domain: bool (representing constraint ((aux285 + aux286 + aux287)<=1))
c Var 'aux795' direct represents '0' with '-5393'
c Var 'aux795' direct represents '1' with '5393'
c Var 'aux795' order represents '1' with '1'
c Var 'aux795' order represents '0' with '-5393'
c Encoding variable: aux796 with domain: bool (representing constraint (1<=(aux285 + aux286 + aux287)))
c Var 'aux796' direct represents '0' with '-5394'
c Var 'aux796' direct represents '1' with '5394'
c Var 'aux796' order represents '1' with '1'
c Var 'aux796' order represents '0' with '-5394'
c Encoding variable: aux797 with domain: bool (representing constraint ((aux288 + (field_00005_00002=3) + (field_00008_00002=3))<=1))
c Var 'aux797' direct represents '0' with '-5395'
c Var 'aux797' direct represents '1' with '5395'
c Var 'aux797' order represents '1' with '1'
c Var 'aux797' order represents '0' with '-5395'
c Encoding variable: aux798 with domain: bool (representing constraint (1<=(aux288 + (field_00005_00002=3) + (field_00008_00002=3))))
c Var 'aux798' direct represents '0' with '-5396'
c Var 'aux798' direct represents '1' with '5396'
c Var 'aux798' order represents '1' with '1'
c Var 'aux798' order represents '0' with '-5396'
c Encoding variable: aux799 with domain: bool (representing constraint (((field_00002_00002=4) + (field_00007_00002=4) + (field_00008_00002=4))<=1))
c Var 'aux799' direct represents '0' with '-5397'
c Var 'aux799' direct represents '1' with '5397'
c Var 'aux799' order represents '1' with '1'
c Var 'aux799' order represents '0' with '-5397'
c Encoding variable: aux800 with domain: bool (representing constraint (1<=((field_00002_00002=4) + (field_00007_00002=4) + (field_00008_00002=4))))
c Var 'aux800' direct represents '0' with '-5398'
c Var 'aux800' direct represents '1' with '5398'
c Var 'aux800' order represents '1' with '1'
c Var 'aux800' order represents '0' with '-5398'
c Encoding variable: aux801 with domain: bool (representing constraint ((aux289 + aux290 + aux292)<=1))
c Var 'aux801' direct represents '0' with '-5399'
c Var 'aux801' direct represents '1' with '5399'
c Var 'aux801' order represents '1' with '1'
c Var 'aux801' order represents '0' with '-5399'
c Encoding variable: aux802 with domain: bool (representing constraint (1<=(aux289 + aux290 + aux292)))
c Var 'aux802' direct represents '0' with '-5400'
c Var 'aux802' direct represents '1' with '5400'
c Var 'aux802' order represents '1' with '1'
c Var 'aux802' order represents '0' with '-5400'
c Encoding variable: aux803 with domain: bool (representing constraint ((aux293 + aux294 + aux296)<=1))
c Var 'aux803' direct represents '0' with '-5401'
c Var 'aux803' direct represents '1' with '5401'
c Var 'aux803' order represents '1' with '1'
c Var 'aux803' order represents '0' with '-5401'
c Encoding variable: aux804 with domain: bool (representing constraint (1<=(aux293 + aux294 + aux296)))
c Var 'aux804' direct represents '0' with '-5402'
c Var 'aux804' direct represents '1' with '5402'
c Var 'aux804' order represents '1' with '1'
c Var 'aux804' order represents '0' with '-5402'
c Encoding variable: aux805 with domain: bool (representing constraint ((aux297 + aux298 + aux300)<=1))
c Var 'aux805' direct represents '0' with '-5403'
c Var 'aux805' direct represents '1' with '5403'
c Var 'aux805' order represents '1' with '1'
c Var 'aux805' order represents '0' with '-5403'
c Encoding variable: aux806 with domain: bool (representing constraint (1<=(aux297 + aux298 + aux300)))
c Var 'aux806' direct represents '0' with '-5404'
c Var 'aux806' direct represents '1' with '5404'
c Var 'aux806' order represents '1' with '1'
c Var 'aux806' order represents '0' with '-5404'
c Encoding variable: aux807 with domain: bool (representing constraint ((aux301 + aux302 + (field_00003_00002=8))<=1))
c Var 'aux807' direct represents '0' with '-5405'
c Var 'aux807' direct represents '1' with '5405'
c Var 'aux807' order represents '1' with '1'
c Var 'aux807' order represents '0' with '-5405'
c Encoding variable: aux808 with domain: bool (representing constraint (1<=(aux301 + aux302 + (field_00003_00002=8))))
c Var 'aux808' direct represents '0' with '-5406'
c Var 'aux808' direct represents '1' with '5406'
c Var 'aux808' order represents '1' with '1'
c Var 'aux808' order represents '0' with '-5406'
c Encoding variable: aux809 with domain: bool (representing constraint ((aux303 + aux304 + (field_00003_00002=9))<=1))
c Var 'aux809' direct represents '0' with '-5407'
c Var 'aux809' direct represents '1' with '5407'
c Var 'aux809' order represents '1' with '1'
c Var 'aux809' order represents '0' with '-5407'
c Encoding variable: aux810 with domain: bool (representing constraint (1<=(aux303 + aux304 + (field_00003_00002=9))))
c Var 'aux810' direct represents '0' with '-5408'
c Var 'aux810' direct represents '1' with '5408'
c Var 'aux810' order represents '1' with '1'
c Var 'aux810' order represents '0' with '-5408'
c Encoding variable: aux811 with domain: bool (representing constraint (((field_00004_00003=1) + (field_00002_00003=1))<=1))
c Var 'aux811' direct represents '0' with '-5409'
c Var 'aux811' direct represents '1' with '5409'
c Var 'aux811' order represents '1' with '1'
c Var 'aux811' order represents '0' with '-5409'
c Encoding variable: aux812 with domain: bool (representing constraint (1<=((field_00004_00003=1) + (field_00002_00003=1))))
c Var 'aux812' direct represents '0' with '-5410'
c Var 'aux812' direct represents '1' with '5410'
c Var 'aux812' order represents '1' with '1'
c Var 'aux812' order represents '0' with '-5410'
c Encoding variable: aux813 with domain: bool (representing constraint ((aux305 + aux306 + aux308)<=1))
c Var 'aux813' direct represents '0' with '-5411'
c Var 'aux813' direct represents '1' with '5411'
c Var 'aux813' order represents '1' with '1'
c Var 'aux813' order represents '0' with '-5411'
c Encoding variable: aux814 with domain: bool (representing constraint (1<=(aux305 + aux306 + aux308)))
c Var 'aux814' direct represents '0' with '-5412'
c Var 'aux814' direct represents '1' with '5412'
c Var 'aux814' order represents '1' with '1'
c Var 'aux814' order represents '0' with '-5412'
c Encoding variable: aux815 with domain: bool (representing constraint ((aux309 + (field_00005_00003=3) + (field_00008_00003=3))<=1))
c Var 'aux815' direct represents '0' with '-5413'
c Var 'aux815' direct represents '1' with '5413'
c Var 'aux815' order represents '1' with '1'
c Var 'aux815' order represents '0' with '-5413'
c Encoding variable: aux816 with domain: bool (representing constraint (1<=(aux309 + (field_00005_00003=3) + (field_00008_00003=3))))
c Var 'aux816' direct represents '0' with '-5414'
c Var 'aux816' direct represents '1' with '5414'
c Var 'aux816' order represents '1' with '1'
c Var 'aux816' order represents '0' with '-5414'
c Encoding variable: aux817 with domain: bool (representing constraint (((field_00002_00003=4) + (field_00007_00003=4) + (field_00008_00003=4))<=1))
c Var 'aux817' direct represents '0' with '-5415'
c Var 'aux817' direct represents '1' with '5415'
c Var 'aux817' order represents '1' with '1'
c Var 'aux817' order represents '0' with '-5415'
c Encoding variable: aux818 with domain: bool (representing constraint (1<=((field_00002_00003=4) + (field_00007_00003=4) + (field_00008_00003=4))))
c Var 'aux818' direct represents '0' with '-5416'
c Var 'aux818' direct represents '1' with '5416'
c Var 'aux818' order represents '1' with '1'
c Var 'aux818' order represents '0' with '-5416'
c Encoding variable: aux819 with domain: bool (representing constraint ((aux310 + aux311 + aux313)<=1))
c Var 'aux819' direct represents '0' with '-5417'
c Var 'aux819' direct represents '1' with '5417'
c Var 'aux819' order represents '1' with '1'
c Var 'aux819' order represents '0' with '-5417'
c Encoding variable: aux820 with domain: bool (representing constraint (1<=(aux310 + aux311 + aux313)))
c Var 'aux820' direct represents '0' with '-5418'
c Var 'aux820' direct represents '1' with '5418'
c Var 'aux820' order represents '1' with '1'
c Var 'aux820' order represents '0' with '-5418'
c Encoding variable: aux821 with domain: bool (representing constraint ((aux314 + aux315 + aux317)<=1))
c Var 'aux821' direct represents '0' with '-5419'
c Var 'aux821' direct represents '1' with '5419'
c Var 'aux821' order represents '1' with '1'
c Var 'aux821' order represents '0' with '-5419'
c Encoding variable: aux822 with domain: bool (representing constraint (1<=(aux314 + aux315 + aux317)))
c Var 'aux822' direct represents '0' with '-5420'
c Var 'aux822' direct represents '1' with '5420'
c Var 'aux822' order represents '1' with '1'
c Var 'aux822' order represents '0' with '-5420'
c Encoding variable: aux823 with domain: bool (representing constraint ((aux319 + aux320 + aux322)<=1))
c Var 'aux823' direct represents '0' with '-5421'
c Var 'aux823' direct represents '1' with '5421'
c Var 'aux823' order represents '1' with '1'
c Var 'aux823' order represents '0' with '-5421'
c Encoding variable: aux824 with domain: bool (representing constraint (1<=(aux319 + aux320 + aux322)))
c Var 'aux824' direct represents '0' with '-5422'
c Var 'aux824' direct represents '1' with '5422'
c Var 'aux824' order represents '1' with '1'
c Var 'aux824' order represents '0' with '-5422'
c Encoding variable: aux825 with domain: bool (representing constraint ((aux323 + aux324 + aux326)<=1))
c Var 'aux825' direct represents '0' with '-5423'
c Var 'aux825' direct represents '1' with '5423'
c Var 'aux825' order represents '1' with '1'
c Var 'aux825' order represents '0' with '-5423'
c Encoding variable: aux826 with domain: bool (representing constraint (1<=(aux323 + aux324 + aux326)))
c Var 'aux826' direct represents '0' with '-5424'
c Var 'aux826' direct represents '1' with '5424'
c Var 'aux826' order represents '1' with '1'
c Var 'aux826' order represents '0' with '-5424'
c Encoding variable: aux827 with domain: bool (representing constraint ((aux327 + aux328 + aux330)<=1))
c Var 'aux827' direct represents '0' with '-5425'
c Var 'aux827' direct represents '1' with '5425'
c Var 'aux827' order represents '1' with '1'
c Var 'aux827' order represents '0' with '-5425'
c Encoding variable: aux828 with domain: bool (representing constraint (1<=(aux327 + aux328 + aux330)))
c Var 'aux828' direct represents '0' with '-5426'
c Var 'aux828' direct represents '1' with '5426'
c Var 'aux828' order represents '1' with '1'
c Var 'aux828' order represents '0' with '-5426'
c Encoding variable: aux829 with domain: bool (representing constraint (((field_00007_00004=1) + (field_00008_00004=1))<=1))
c Var 'aux829' direct represents '0' with '-5427'
c Var 'aux829' direct represents '1' with '5427'
c Var 'aux829' order represents '1' with '1'
c Var 'aux829' order represents '0' with '-5427'
c Encoding variable: aux830 with domain: bool (representing constraint (1<=((field_00007_00004=1) + (field_00008_00004=1))))
c Var 'aux830' direct represents '0' with '-5428'
c Var 'aux830' direct represents '1' with '5428'
c Var 'aux830' order represents '1' with '1'
c Var 'aux830' order represents '0' with '-5428'
c Encoding variable: aux831 with domain: bool (representing constraint ((aux331 + aux332 + (field_00003_00004=4))<=1))
c Var 'aux831' direct represents '0' with '-5429'
c Var 'aux831' direct represents '1' with '5429'
c Var 'aux831' order represents '1' with '1'
c Var 'aux831' order represents '0' with '-5429'
c Encoding variable: aux832 with domain: bool (representing constraint (1<=(aux331 + aux332 + (field_00003_00004=4))))
c Var 'aux832' direct represents '0' with '-5430'
c Var 'aux832' direct represents '1' with '5430'
c Var 'aux832' order represents '1' with '1'
c Var 'aux832' order represents '0' with '-5430'
c Encoding variable: aux833 with domain: bool (representing constraint ((aux333 + aux334 + (field_00003_00004=6))<=1))
c Var 'aux833' direct represents '0' with '-5431'
c Var 'aux833' direct represents '1' with '5431'
c Var 'aux833' order represents '1' with '1'
c Var 'aux833' order represents '0' with '-5431'
c Encoding variable: aux834 with domain: bool (representing constraint (1<=(aux333 + aux334 + (field_00003_00004=6))))
c Var 'aux834' direct represents '0' with '-5432'
c Var 'aux834' direct represents '1' with '5432'
c Var 'aux834' order represents '1' with '1'
c Var 'aux834' order represents '0' with '-5432'
c Encoding variable: aux835 with domain: bool (representing constraint ((aux335 + aux336 + (field_00003_00004=7))<=1))
c Var 'aux835' direct represents '0' with '-5433'
c Var 'aux835' direct represents '1' with '5433'
c Var 'aux835' order represents '1' with '1'
c Var 'aux835' order represents '0' with '-5433'
c Encoding variable: aux836 with domain: bool (representing constraint (1<=(aux335 + aux336 + (field_00003_00004=7))))
c Var 'aux836' direct represents '0' with '-5434'
c Var 'aux836' direct represents '1' with '5434'
c Var 'aux836' order represents '1' with '1'
c Var 'aux836' order represents '0' with '-5434'
c Encoding variable: aux837 with domain: bool (representing constraint (((field_00005_00004=8) + (field_00003_00004=8) + (field_00006_00004=8))<=1))
c Var 'aux837' direct represents '0' with '-5435'
c Var 'aux837' direct represents '1' with '5435'
c Var 'aux837' order represents '1' with '1'
c Var 'aux837' order represents '0' with '-5435'
c Encoding variable: aux838 with domain: bool (representing constraint (1<=((field_00005_00004=8) + (field_00003_00004=8) + (field_00006_00004=8))))
c Var 'aux838' direct represents '0' with '-5436'
c Var 'aux838' direct represents '1' with '5436'
c Var 'aux838' order represents '1' with '1'
c Var 'aux838' order represents '0' with '-5436'
c Encoding variable: aux839 with domain: bool (representing constraint ((aux337 + (field_00003_00005=1) + (field_00001_00005=1))<=1))
c Var 'aux839' direct represents '0' with '-5437'
c Var 'aux839' direct represents '1' with '5437'
c Var 'aux839' order represents '1' with '1'
c Var 'aux839' order represents '0' with '-5437'
c Encoding variable: aux840 with domain: bool (representing constraint (1<=(aux337 + (field_00003_00005=1) + (field_00001_00005=1))))
c Var 'aux840' direct represents '0' with '-5438'
c Var 'aux840' direct represents '1' with '5438'
c Var 'aux840' order represents '1' with '1'
c Var 'aux840' order represents '0' with '-5438'
c Encoding variable: aux841 with domain: bool (representing constraint ((aux338 + aux339 + aux340)<=1))
c Var 'aux841' direct represents '0' with '-5439'
c Var 'aux841' direct represents '1' with '5439'
c Var 'aux841' order represents '1' with '1'
c Var 'aux841' order represents '0' with '-5439'
c Encoding variable: aux842 with domain: bool (representing constraint (1<=(aux338 + aux339 + aux340)))
c Var 'aux842' direct represents '0' with '-5440'
c Var 'aux842' direct represents '1' with '5440'
c Var 'aux842' order represents '1' with '1'
c Var 'aux842' order represents '0' with '-5440'
c Encoding variable: aux843 with domain: bool (representing constraint (((field_00005_00005=3) + (field_00003_00005=3) + (field_00006_00005=3))<=1))
c Var 'aux843' direct represents '0' with '-5441'
c Var 'aux843' direct represents '1' with '5441'
c Var 'aux843' order represents '1' with '1'
c Var 'aux843' order represents '0' with '-5441'
c Encoding variable: aux844 with domain: bool (representing constraint (1<=((field_00005_00005=3) + (field_00003_00005=3) + (field_00006_00005=3))))
c Var 'aux844' direct represents '0' with '-5442'
c Var 'aux844' direct represents '1' with '5442'
c Var 'aux844' order represents '1' with '1'
c Var 'aux844' order represents '0' with '-5442'
c Encoding variable: aux845 with domain: bool (representing constraint ((aux341 + aux342 + aux343)<=1))
c Var 'aux845' direct represents '0' with '-5443'
c Var 'aux845' direct represents '1' with '5443'
c Var 'aux845' order represents '1' with '1'
c Var 'aux845' order represents '0' with '-5443'
c Encoding variable: aux846 with domain: bool (representing constraint (1<=(aux341 + aux342 + aux343)))
c Var 'aux846' direct represents '0' with '-5444'
c Var 'aux846' direct represents '1' with '5444'
c Var 'aux846' order represents '1' with '1'
c Var 'aux846' order represents '0' with '-5444'
c Encoding variable: aux847 with domain: bool (representing constraint ((aux344 + aux345 + aux346)<=1))
c Var 'aux847' direct represents '0' with '-5445'
c Var 'aux847' direct represents '1' with '5445'
c Var 'aux847' order represents '1' with '1'
c Var 'aux847' order represents '0' with '-5445'
c Encoding variable: aux848 with domain: bool (representing constraint (1<=(aux344 + aux345 + aux346)))
c Var 'aux848' direct represents '0' with '-5446'
c Var 'aux848' direct represents '1' with '5446'
c Var 'aux848' order represents '1' with '1'
c Var 'aux848' order represents '0' with '-5446'
c Encoding variable: aux849 with domain: bool (representing constraint ((aux347 + aux348 + aux350)<=1))
c Var 'aux849' direct represents '0' with '-5447'
c Var 'aux849' direct represents '1' with '5447'
c Var 'aux849' order represents '1' with '1'
c Var 'aux849' order represents '0' with '-5447'
c Encoding variable: aux850 with domain: bool (representing constraint (1<=(aux347 + aux348 + aux350)))
c Var 'aux850' direct represents '0' with '-5448'
c Var 'aux850' direct represents '1' with '5448'
c Var 'aux850' order represents '1' with '1'
c Var 'aux850' order represents '0' with '-5448'
c Encoding variable: aux851 with domain: bool (representing constraint ((aux352 + aux355 + aux356)<=1))
c Var 'aux851' direct represents '0' with '-5449'
c Var 'aux851' direct represents '1' with '5449'
c Var 'aux851' order represents '1' with '1'
c Var 'aux851' order represents '0' with '-5449'
c Encoding variable: aux852 with domain: bool (representing constraint (1<=(aux352 + aux355 + aux356)))
c Var 'aux852' direct represents '0' with '-5450'
c Var 'aux852' direct represents '1' with '5450'
c Var 'aux852' order represents '1' with '1'
c Var 'aux852' order represents '0' with '-5450'
c Encoding variable: aux853 with domain: bool (representing constraint ((aux358 + aux359 + aux361)<=1))
c Var 'aux853' direct represents '0' with '-5451'
c Var 'aux853' direct represents '1' with '5451'
c Var 'aux853' order represents '1' with '1'
c Var 'aux853' order represents '0' with '-5451'
c Encoding variable: aux854 with domain: bool (representing constraint (1<=(aux358 + aux359 + aux361)))
c Var 'aux854' direct represents '0' with '-5452'
c Var 'aux854' direct represents '1' with '5452'
c Var 'aux854' order represents '1' with '1'
c Var 'aux854' order represents '0' with '-5452'
c Encoding variable: aux855 with domain: bool (representing constraint (((field_00009_00005=9) + aux362 + (field_00007_00005=9))<=1))
c Var 'aux855' direct represents '0' with '-5453'
c Var 'aux855' direct represents '1' with '5453'
c Var 'aux855' order represents '1' with '1'
c Var 'aux855' order represents '0' with '-5453'
c Encoding variable: aux856 with domain: bool (representing constraint (1<=((field_00009_00005=9) + aux362 + (field_00007_00005=9))))
c Var 'aux856' direct represents '0' with '-5454'
c Var 'aux856' direct represents '1' with '5454'
c Var 'aux856' order represents '1' with '1'
c Var 'aux856' order represents '0' with '-5454'
c Encoding variable: aux857 with domain: bool (representing constraint (((field_00005_00006=1) + (field_00003_00006=1) + (field_00006_00006=1))<=1))
c Var 'aux857' direct represents '0' with '-5455'
c Var 'aux857' direct represents '1' with '5455'
c Var 'aux857' order represents '1' with '1'
c Var 'aux857' order represents '0' with '-5455'
c Encoding variable: aux858 with domain: bool (representing constraint (1<=((field_00005_00006=1) + (field_00003_00006=1) + (field_00006_00006=1))))
c Var 'aux858' direct represents '0' with '-5456'
c Var 'aux858' direct represents '1' with '5456'
c Var 'aux858' order represents '1' with '1'
c Var 'aux858' order represents '0' with '-5456'
c Encoding variable: aux859 with domain: bool (representing constraint ((aux363 + aux364 + aux365)<=1))
c Var 'aux859' direct represents '0' with '-5457'
c Var 'aux859' direct represents '1' with '5457'
c Var 'aux859' order represents '1' with '1'
c Var 'aux859' order represents '0' with '-5457'
c Encoding variable: aux860 with domain: bool (representing constraint (1<=(aux363 + aux364 + aux365)))
c Var 'aux860' direct represents '0' with '-5458'
c Var 'aux860' direct represents '1' with '5458'
c Var 'aux860' order represents '1' with '1'
c Var 'aux860' order represents '0' with '-5458'
c Encoding variable: aux861 with domain: bool (representing constraint (((field_00005_00006=3) + (field_00003_00006=3) + (field_00006_00006=3))<=1))
c Var 'aux861' direct represents '0' with '-5459'
c Var 'aux861' direct represents '1' with '5459'
c Var 'aux861' order represents '1' with '1'
c Var 'aux861' order represents '0' with '-5459'
c Encoding variable: aux862 with domain: bool (representing constraint (1<=((field_00005_00006=3) + (field_00003_00006=3) + (field_00006_00006=3))))
c Var 'aux862' direct represents '0' with '-5460'
c Var 'aux862' direct represents '1' with '5460'
c Var 'aux862' order represents '1' with '1'
c Var 'aux862' order represents '0' with '-5460'
c Encoding variable: aux863 with domain: bool (representing constraint ((aux366 + aux367 + aux368)<=1))
c Var 'aux863' direct represents '0' with '-5461'
c Var 'aux863' direct represents '1' with '5461'
c Var 'aux863' order represents '1' with '1'
c Var 'aux863' order represents '0' with '-5461'
c Encoding variable: aux864 with domain: bool (representing constraint (1<=(aux366 + aux367 + aux368)))
c Var 'aux864' direct represents '0' with '-5462'
c Var 'aux864' direct represents '1' with '5462'
c Var 'aux864' order represents '1' with '1'
c Var 'aux864' order represents '0' with '-5462'
c Encoding variable: aux865 with domain: bool (representing constraint ((aux369 + aux370 + aux371)<=1))
c Var 'aux865' direct represents '0' with '-5463'
c Var 'aux865' direct represents '1' with '5463'
c Var 'aux865' order represents '1' with '1'
c Var 'aux865' order represents '0' with '-5463'
c Encoding variable: aux866 with domain: bool (representing constraint (1<=(aux369 + aux370 + aux371)))
c Var 'aux866' direct represents '0' with '-5464'
c Var 'aux866' direct represents '1' with '5464'
c Var 'aux866' order represents '1' with '1'
c Var 'aux866' order represents '0' with '-5464'
c Encoding variable: aux867 with domain: bool (representing constraint ((aux372 + aux373 + aux375)<=1))
c Var 'aux867' direct represents '0' with '-5465'
c Var 'aux867' direct represents '1' with '5465'
c Var 'aux867' order represents '1' with '1'
c Var 'aux867' order represents '0' with '-5465'
c Encoding variable: aux868 with domain: bool (representing constraint (1<=(aux372 + aux373 + aux375)))
c Var 'aux868' direct represents '0' with '-5466'
c Var 'aux868' direct represents '1' with '5466'
c Var 'aux868' order represents '1' with '1'
c Var 'aux868' order represents '0' with '-5466'
c Encoding variable: aux869 with domain: bool (representing constraint ((aux377 + aux378 + aux380)<=1))
c Var 'aux869' direct represents '0' with '-5467'
c Var 'aux869' direct represents '1' with '5467'
c Var 'aux869' order represents '1' with '1'
c Var 'aux869' order represents '0' with '-5467'
c Encoding variable: aux870 with domain: bool (representing constraint (1<=(aux377 + aux378 + aux380)))
c Var 'aux870' direct represents '0' with '-5468'
c Var 'aux870' direct represents '1' with '5468'
c Var 'aux870' order represents '1' with '1'
c Var 'aux870' order represents '0' with '-5468'
c Encoding variable: aux871 with domain: bool (representing constraint ((aux381 + aux382 + aux384)<=1))
c Var 'aux871' direct represents '0' with '-5469'
c Var 'aux871' direct represents '1' with '5469'
c Var 'aux871' order represents '1' with '1'
c Var 'aux871' order represents '0' with '-5469'
c Encoding variable: aux872 with domain: bool (representing constraint (1<=(aux381 + aux382 + aux384)))
c Var 'aux872' direct represents '0' with '-5470'
c Var 'aux872' direct represents '1' with '5470'
c Var 'aux872' order represents '1' with '1'
c Var 'aux872' order represents '0' with '-5470'
c Encoding variable: aux873 with domain: bool (representing constraint (((field_00009_00006=9) + aux385 + (field_00007_00006=9))<=1))
c Var 'aux873' direct represents '0' with '-5471'
c Var 'aux873' direct represents '1' with '5471'
c Var 'aux873' order represents '1' with '1'
c Var 'aux873' order represents '0' with '-5471'
c Encoding variable: aux874 with domain: bool (representing constraint (1<=((field_00009_00006=9) + aux385 + (field_00007_00006=9))))
c Var 'aux874' direct represents '0' with '-5472'
c Var 'aux874' direct represents '1' with '5472'
c Var 'aux874' order represents '1' with '1'
c Var 'aux874' order represents '0' with '-5472'
c Encoding variable: aux875 with domain: bool (representing constraint (((field_00007_00007=1) + (field_00008_00007=1) + (field_00006_00007=1))<=1))
c Var 'aux875' direct represents '0' with '-5473'
c Var 'aux875' direct represents '1' with '5473'
c Var 'aux875' order represents '1' with '1'
c Var 'aux875' order represents '0' with '-5473'
c Encoding variable: aux876 with domain: bool (representing constraint (1<=((field_00007_00007=1) + (field_00008_00007=1) + (field_00006_00007=1))))
c Var 'aux876' direct represents '0' with '-5474'
c Var 'aux876' direct represents '1' with '5474'
c Var 'aux876' order represents '1' with '1'
c Var 'aux876' order represents '0' with '-5474'
c Encoding variable: aux877 with domain: bool (representing constraint ((aux386 + (field_00005_00007=2) + (field_00008_00007=2))<=1))
c Var 'aux877' direct represents '0' with '-5475'
c Var 'aux877' direct represents '1' with '5475'
c Var 'aux877' order represents '1' with '1'
c Var 'aux877' order represents '0' with '-5475'
c Encoding variable: aux878 with domain: bool (representing constraint (1<=(aux386 + (field_00005_00007=2) + (field_00008_00007=2))))
c Var 'aux878' direct represents '0' with '-5476'
c Var 'aux878' direct represents '1' with '5476'
c Var 'aux878' order represents '1' with '1'
c Var 'aux878' order represents '0' with '-5476'
c Encoding variable: aux879 with domain: bool (representing constraint ((aux387 + aux388 + aux389)<=1))
c Var 'aux879' direct represents '0' with '-5477'
c Var 'aux879' direct represents '1' with '5477'
c Var 'aux879' order represents '1' with '1'
c Var 'aux879' order represents '0' with '-5477'
c Encoding variable: aux880 with domain: bool (representing constraint (1<=(aux387 + aux388 + aux389)))
c Var 'aux880' direct represents '0' with '-5478'
c Var 'aux880' direct represents '1' with '5478'
c Var 'aux880' order represents '1' with '1'
c Var 'aux880' order represents '0' with '-5478'
c Encoding variable: aux881 with domain: bool (representing constraint ((aux390 + aux391 + aux392)<=1))
c Var 'aux881' direct represents '0' with '-5479'
c Var 'aux881' direct represents '1' with '5479'
c Var 'aux881' order represents '1' with '1'
c Var 'aux881' order represents '0' with '-5479'
c Encoding variable: aux882 with domain: bool (representing constraint (1<=(aux390 + aux391 + aux392)))
c Var 'aux882' direct represents '0' with '-5480'
c Var 'aux882' direct represents '1' with '5480'
c Var 'aux882' order represents '1' with '1'
c Var 'aux882' order represents '0' with '-5480'
c Encoding variable: aux883 with domain: bool (representing constraint ((aux393 + (field_00007_00007=8) + (field_00003_00007=8))<=1))
c Var 'aux883' direct represents '0' with '-5481'
c Var 'aux883' direct represents '1' with '5481'
c Var 'aux883' order represents '1' with '1'
c Var 'aux883' order represents '0' with '-5481'
c Encoding variable: aux884 with domain: bool (representing constraint (1<=(aux393 + (field_00007_00007=8) + (field_00003_00007=8))))
c Var 'aux884' direct represents '0' with '-5482'
c Var 'aux884' direct represents '1' with '5482'
c Var 'aux884' order represents '1' with '1'
c Var 'aux884' order represents '0' with '-5482'
c Encoding variable: aux885 with domain: bool (representing constraint ((aux394 + (field_00005_00007=9) + (field_00008_00007=9))<=1))
c Var 'aux885' direct represents '0' with '-5483'
c Var 'aux885' direct represents '1' with '5483'
c Var 'aux885' order represents '1' with '1'
c Var 'aux885' order represents '0' with '-5483'
c Encoding variable: aux886 with domain: bool (representing constraint (1<=(aux394 + (field_00005_00007=9) + (field_00008_00007=9))))
c Var 'aux886' direct represents '0' with '-5484'
c Var 'aux886' direct represents '1' with '5484'
c Var 'aux886' order represents '1' with '1'
c Var 'aux886' order represents '0' with '-5484'
c Encoding variable: aux887 with domain: bool (representing constraint ((aux395 + aux396 + aux398)<=1))
c Var 'aux887' direct represents '0' with '-5485'
c Var 'aux887' direct represents '1' with '5485'
c Var 'aux887' order represents '1' with '1'
c Var 'aux887' order represents '0' with '-5485'
c Encoding variable: aux888 with domain: bool (representing constraint (1<=(aux395 + aux396 + aux398)))
c Var 'aux888' direct represents '0' with '-5486'
c Var 'aux888' direct represents '1' with '5486'
c Var 'aux888' order represents '1' with '1'
c Var 'aux888' order represents '0' with '-5486'
c Encoding variable: aux889 with domain: bool (representing constraint ((aux399 + aux400 + (field_00005_00008=2))<=1))
c Var 'aux889' direct represents '0' with '-5487'
c Var 'aux889' direct represents '1' with '5487'
c Var 'aux889' order represents '1' with '1'
c Var 'aux889' order represents '0' with '-5487'
c Encoding variable: aux890 with domain: bool (representing constraint (1<=(aux399 + aux400 + (field_00005_00008=2))))
c Var 'aux890' direct represents '0' with '-5488'
c Var 'aux890' direct represents '1' with '5488'
c Var 'aux890' order represents '1' with '1'
c Var 'aux890' order represents '0' with '-5488'
c Encoding variable: aux891 with domain: bool (representing constraint (((field_00007_00008=3) + (field_00008_00008=3))<=1))
c Var 'aux891' direct represents '0' with '-5489'
c Var 'aux891' direct represents '1' with '5489'
c Var 'aux891' order represents '1' with '1'
c Var 'aux891' order represents '0' with '-5489'
c Encoding variable: aux892 with domain: bool (representing constraint (1<=((field_00007_00008=3) + (field_00008_00008=3))))
c Var 'aux892' direct represents '0' with '-5490'
c Var 'aux892' direct represents '1' with '5490'
c Var 'aux892' order represents '1' with '1'
c Var 'aux892' order represents '0' with '-5490'
c Encoding variable: aux893 with domain: bool (representing constraint ((aux401 + (field_00003_00008=4) + (field_00001_00008=4))<=1))
c Var 'aux893' direct represents '0' with '-5491'
c Var 'aux893' direct represents '1' with '5491'
c Var 'aux893' order represents '1' with '1'
c Var 'aux893' order represents '0' with '-5491'
c Encoding variable: aux894 with domain: bool (representing constraint (1<=(aux401 + (field_00003_00008=4) + (field_00001_00008=4))))
c Var 'aux894' direct represents '0' with '-5492'
c Var 'aux894' direct represents '1' with '5492'
c Var 'aux894' order represents '1' with '1'
c Var 'aux894' order represents '0' with '-5492'
c Encoding variable: aux895 with domain: bool (representing constraint ((aux402 + aux403 + aux405)<=1))
c Var 'aux895' direct represents '0' with '-5493'
c Var 'aux895' direct represents '1' with '5493'
c Var 'aux895' order represents '1' with '1'
c Var 'aux895' order represents '0' with '-5493'
c Encoding variable: aux896 with domain: bool (representing constraint (1<=(aux402 + aux403 + aux405)))
c Var 'aux896' direct represents '0' with '-5494'
c Var 'aux896' direct represents '1' with '5494'
c Var 'aux896' order represents '1' with '1'
c Var 'aux896' order represents '0' with '-5494'
c Encoding variable: aux897 with domain: bool (representing constraint ((aux406 + aux407 + aux409)<=1))
c Var 'aux897' direct represents '0' with '-5495'
c Var 'aux897' direct represents '1' with '5495'
c Var 'aux897' order represents '1' with '1'
c Var 'aux897' order represents '0' with '-5495'
c Encoding variable: aux898 with domain: bool (representing constraint (1<=(aux406 + aux407 + aux409)))
c Var 'aux898' direct represents '0' with '-5496'
c Var 'aux898' direct represents '1' with '5496'
c Var 'aux898' order represents '1' with '1'
c Var 'aux898' order represents '0' with '-5496'
c Encoding variable: aux899 with domain: bool (representing constraint ((aux410 + aux411 + aux413)<=1))
c Var 'aux899' direct represents '0' with '-5497'
c Var 'aux899' direct represents '1' with '5497'
c Var 'aux899' order represents '1' with '1'
c Var 'aux899' order represents '0' with '-5497'
c Encoding variable: aux900 with domain: bool (representing constraint (1<=(aux410 + aux411 + aux413)))
c Var 'aux900' direct represents '0' with '-5498'
c Var 'aux900' direct represents '1' with '5498'
c Var 'aux900' order represents '1' with '1'
c Var 'aux900' order represents '0' with '-5498'
c Encoding variable: aux901 with domain: bool (representing constraint ((aux414 + aux415 + (field_00005_00009=1))<=1))
c Var 'aux901' direct represents '0' with '-5499'
c Var 'aux901' direct represents '1' with '5499'
c Var 'aux901' order represents '1' with '1'
c Var 'aux901' order represents '0' with '-5499'
c Encoding variable: aux902 with domain: bool (representing constraint (1<=(aux414 + aux415 + (field_00005_00009=1))))
c Var 'aux902' direct represents '0' with '-5500'
c Var 'aux902' direct represents '1' with '5500'
c Var 'aux902' order represents '1' with '1'
c Var 'aux902' order represents '0' with '-5500'
c Encoding variable: aux903 with domain: bool (representing constraint (((field_00005_00009=4) + (field_00003_00009=4) + (field_00001_00009=4))<=1))
c Var 'aux903' direct represents '0' with '-5501'
c Var 'aux903' direct represents '1' with '5501'
c Var 'aux903' order represents '1' with '1'
c Var 'aux903' order represents '0' with '-5501'
c Encoding variable: aux904 with domain: bool (representing constraint (1<=((field_00005_00009=4) + (field_00003_00009=4) + (field_00001_00009=4))))
c Var 'aux904' direct represents '0' with '-5502'
c Var 'aux904' direct represents '1' with '5502'
c Var 'aux904' order represents '1' with '1'
c Var 'aux904' order represents '0' with '-5502'
c Encoding variable: aux905 with domain: bool (representing constraint ((aux416 + aux417 + aux419)<=1))
c Var 'aux905' direct represents '0' with '-5503'
c Var 'aux905' direct represents '1' with '5503'
c Var 'aux905' order represents '1' with '1'
c Var 'aux905' order represents '0' with '-5503'
c Encoding variable: aux906 with domain: bool (representing constraint (1<=(aux416 + aux417 + aux419)))
c Var 'aux906' direct represents '0' with '-5504'
c Var 'aux906' direct represents '1' with '5504'
c Var 'aux906' order represents '1' with '1'
c Var 'aux906' order represents '0' with '-5504'
c Encoding variable: aux907 with domain: bool (representing constraint (((field_00009_00009=6) + (field_00007_00009=6) + (field_00008_00009=6))<=1))
c Var 'aux907' direct represents '0' with '-5505'
c Var 'aux907' direct represents '1' with '5505'
c Var 'aux907' order represents '1' with '1'
c Var 'aux907' order represents '0' with '-5505'
c Encoding variable: aux908 with domain: bool (representing constraint (1<=((field_00009_00009=6) + (field_00007_00009=6) + (field_00008_00009=6))))
c Var 'aux908' direct represents '0' with '-5506'
c Var 'aux908' direct represents '1' with '5506'
c Var 'aux908' order represents '1' with '1'
c Var 'aux908' order represents '0' with '-5506'
c Encoding variable: aux909 with domain: bool (representing constraint ((aux420 + aux421 + aux423)<=1))
c Var 'aux909' direct represents '0' with '-5507'
c Var 'aux909' direct represents '1' with '5507'
c Var 'aux909' order represents '1' with '1'
c Var 'aux909' order represents '0' with '-5507'
c Encoding variable: aux910 with domain: bool (representing constraint (1<=(aux420 + aux421 + aux423)))
c Var 'aux910' direct represents '0' with '-5508'
c Var 'aux910' direct represents '1' with '5508'
c Var 'aux910' order represents '1' with '1'
c Var 'aux910' order represents '0' with '-5508'
c Encoding variable: aux911 with domain: bool (representing constraint ((aux424 + aux425 + (field_00003_00009=8))<=1))
c Var 'aux911' direct represents '0' with '-5509'
c Var 'aux911' direct represents '1' with '5509'
c Var 'aux911' order represents '1' with '1'
c Var 'aux911' order represents '0' with '-5509'
c Encoding variable: aux912 with domain: bool (representing constraint (1<=(aux424 + aux425 + (field_00003_00009=8))))
c Var 'aux912' direct represents '0' with '-5510'
c Var 'aux912' direct represents '1' with '5510'
c Var 'aux912' order represents '1' with '1'
c Var 'aux912' order represents '0' with '-5510'
c Encoding variable: aux913 with domain: bool (representing constraint ((aux426 + aux427 + (field_00005_00009=9))<=1))
c Var 'aux913' direct represents '0' with '-5511'
c Var 'aux913' direct represents '1' with '5511'
c Var 'aux913' order represents '1' with '1'
c Var 'aux913' order represents '0' with '-5511'
c Encoding variable: aux914 with domain: bool (representing constraint (1<=(aux426 + aux427 + (field_00005_00009=9))))
c Var 'aux914' direct represents '0' with '-5512'
c Var 'aux914' direct represents '1' with '5512'
c Var 'aux914' order represents '1' with '1'
c Var 'aux914' order represents '0' with '-5512'
c Encoding variable: aux915 with domain: bool (representing constraint (((field_00001_00005=1) + (field_00001_00008=1) + (field_00001_00009=1))<=1))
c Var 'aux915' direct represents '0' with '-5513'
c Var 'aux915' direct represents '1' with '5513'
c Var 'aux915' order represents '1' with '1'
c Var 'aux915' order represents '0' with '-5513'
c Encoding variable: aux916 with domain: bool (representing constraint (1<=((field_00001_00005=1) + (field_00001_00008=1) + (field_00001_00009=1))))
c Var 'aux916' direct represents '0' with '-5514'
c Var 'aux916' direct represents '1' with '5514'
c Var 'aux916' order represents '1' with '1'
c Var 'aux916' order represents '0' with '-5514'
c Encoding variable: aux917 with domain: bool (representing constraint ((aux428 + (field_00001_00006=4) + (field_00001_00008=4))<=1))
c Var 'aux917' direct represents '0' with '-5515'
c Var 'aux917' direct represents '1' with '5515'
c Var 'aux917' order represents '1' with '1'
c Var 'aux917' order represents '0' with '-5515'
c Encoding variable: aux918 with domain: bool (representing constraint (1<=(aux428 + (field_00001_00006=4) + (field_00001_00008=4))))
c Var 'aux918' direct represents '0' with '-5516'
c Var 'aux918' direct represents '1' with '5516'
c Var 'aux918' order represents '1' with '1'
c Var 'aux918' order represents '0' with '-5516'
c Encoding variable: aux919 with domain: bool (representing constraint ((aux429 + aux430 + aux432)<=1))
c Var 'aux919' direct represents '0' with '-5517'
c Var 'aux919' direct represents '1' with '5517'
c Var 'aux919' order represents '1' with '1'
c Var 'aux919' order represents '0' with '-5517'
c Encoding variable: aux920 with domain: bool (representing constraint (1<=(aux429 + aux430 + aux432)))
c Var 'aux920' direct represents '0' with '-5518'
c Var 'aux920' direct represents '1' with '5518'
c Var 'aux920' order represents '1' with '1'
c Var 'aux920' order represents '0' with '-5518'
c Encoding variable: aux921 with domain: bool (representing constraint ((aux433 + aux434 + (field_00001_00003=6))<=1))
c Var 'aux921' direct represents '0' with '-5519'
c Var 'aux921' direct represents '1' with '5519'
c Var 'aux921' order represents '1' with '1'
c Var 'aux921' order represents '0' with '-5519'
c Encoding variable: aux922 with domain: bool (representing constraint (1<=(aux433 + aux434 + (field_00001_00003=6))))
c Var 'aux922' direct represents '0' with '-5520'
c Var 'aux922' direct represents '1' with '5520'
c Var 'aux922' order represents '1' with '1'
c Var 'aux922' order represents '0' with '-5520'
c Encoding variable: aux923 with domain: bool (representing constraint ((aux435 + aux436 + aux437)<=1))
c Var 'aux923' direct represents '0' with '-5521'
c Var 'aux923' direct represents '1' with '5521'
c Var 'aux923' order represents '1' with '1'
c Var 'aux923' order represents '0' with '-5521'
c Encoding variable: aux924 with domain: bool (representing constraint (1<=(aux435 + aux436 + aux437)))
c Var 'aux924' direct represents '0' with '-5522'
c Var 'aux924' direct represents '1' with '5522'
c Var 'aux924' order represents '1' with '1'
c Var 'aux924' order represents '0' with '-5522'
c Encoding variable: aux925 with domain: bool (representing constraint ((aux438 + (field_00001_00003=8) + (field_00001_00005=8))<=1))
c Var 'aux925' direct represents '0' with '-5523'
c Var 'aux925' direct represents '1' with '5523'
c Var 'aux925' order represents '1' with '1'
c Var 'aux925' order represents '0' with '-5523'
c Encoding variable: aux926 with domain: bool (representing constraint (1<=(aux438 + (field_00001_00003=8) + (field_00001_00005=8))))
c Var 'aux926' direct represents '0' with '-5524'
c Var 'aux926' direct represents '1' with '5524'
c Var 'aux926' order represents '1' with '1'
c Var 'aux926' order represents '0' with '-5524'
c Encoding variable: aux927 with domain: bool (representing constraint ((aux439 + (field_00001_00003=9) + (field_00001_00008=9))<=1))
c Var 'aux927' direct represents '0' with '-5525'
c Var 'aux927' direct represents '1' with '5525'
c Var 'aux927' order represents '1' with '1'
c Var 'aux927' order represents '0' with '-5525'
c Encoding variable: aux928 with domain: bool (representing constraint (1<=(aux439 + (field_00001_00003=9) + (field_00001_00008=9))))
c Var 'aux928' direct represents '0' with '-5526'
c Var 'aux928' direct represents '1' with '5526'
c Var 'aux928' order represents '1' with '1'
c Var 'aux928' order represents '0' with '-5526'
c Encoding variable: aux929 with domain: bool (representing constraint (((field_00002_00002=1) + (field_00002_00003=1))<=1))
c Var 'aux929' direct represents '0' with '-5527'
c Var 'aux929' direct represents '1' with '5527'
c Var 'aux929' order represents '1' with '1'
c Var 'aux929' order represents '0' with '-5527'
c Encoding variable: aux930 with domain: bool (representing constraint (1<=((field_00002_00002=1) + (field_00002_00003=1))))
c Var 'aux930' direct represents '0' with '-5528'
c Var 'aux930' direct represents '1' with '5528'
c Var 'aux930' order represents '1' with '1'
c Var 'aux930' order represents '0' with '-5528'
c Encoding variable: aux931 with domain: bool (representing constraint (((field_00002_00002=4) + (field_00002_00003=4))<=1))
c Var 'aux931' direct represents '0' with '-5529'
c Var 'aux931' direct represents '1' with '5529'
c Var 'aux931' order represents '1' with '1'
c Var 'aux931' order represents '0' with '-5529'
c Encoding variable: aux932 with domain: bool (representing constraint (1<=((field_00002_00002=4) + (field_00002_00003=4))))
c Var 'aux932' direct represents '0' with '-5530'
c Var 'aux932' direct represents '1' with '5530'
c Var 'aux932' order represents '1' with '1'
c Var 'aux932' order represents '0' with '-5530'
c Encoding variable: aux933 with domain: bool (representing constraint (((field_00002_00005=5) + (field_00002_00006=5) + (field_00002_00007=5))<=1))
c Var 'aux933' direct represents '0' with '-5531'
c Var 'aux933' direct represents '1' with '5531'
c Var 'aux933' order represents '1' with '1'
c Var 'aux933' order represents '0' with '-5531'
c Encoding variable: aux934 with domain: bool (representing constraint (1<=((field_00002_00005=5) + (field_00002_00006=5) + (field_00002_00007=5))))
c Var 'aux934' direct represents '0' with '-5532'
c Var 'aux934' direct represents '1' with '5532'
c Var 'aux934' order represents '1' with '1'
c Var 'aux934' order represents '0' with '-5532'
c Encoding variable: aux935 with domain: bool (representing constraint (((field_00002_00005=7) + (field_00002_00006=7) + (field_00002_00007=7))<=1))
c Var 'aux935' direct represents '0' with '-5533'
c Var 'aux935' direct represents '1' with '5533'
c Var 'aux935' order represents '1' with '1'
c Var 'aux935' order represents '0' with '-5533'
c Encoding variable: aux936 with domain: bool (representing constraint (1<=((field_00002_00005=7) + (field_00002_00006=7) + (field_00002_00007=7))))
c Var 'aux936' direct represents '0' with '-5534'
c Var 'aux936' direct represents '1' with '5534'
c Var 'aux936' order represents '1' with '1'
c Var 'aux936' order represents '0' with '-5534'
c Encoding variable: aux937 with domain: bool (representing constraint (((field_00002_00005=8) + (field_00002_00006=8) + (field_00002_00007=8))<=1))
c Var 'aux937' direct represents '0' with '-5535'
c Var 'aux937' direct represents '1' with '5535'
c Var 'aux937' order represents '1' with '1'
c Var 'aux937' order represents '0' with '-5535'
c Encoding variable: aux938 with domain: bool (representing constraint (1<=((field_00002_00005=8) + (field_00002_00006=8) + (field_00002_00007=8))))
c Var 'aux938' direct represents '0' with '-5536'
c Var 'aux938' direct represents '1' with '5536'
c Var 'aux938' order represents '1' with '1'
c Var 'aux938' order represents '0' with '-5536'
c Encoding variable: aux939 with domain: bool (representing constraint ((aux440 + (field_00003_00006=1) + (field_00003_00008=1))<=1))
c Var 'aux939' direct represents '0' with '-5537'
c Var 'aux939' direct represents '1' with '5537'
c Var 'aux939' order represents '1' with '1'
c Var 'aux939' order represents '0' with '-5537'
c Encoding variable: aux940 with domain: bool (representing constraint (1<=(aux440 + (field_00003_00006=1) + (field_00003_00008=1))))
c Var 'aux940' direct represents '0' with '-5538'
c Var 'aux940' direct represents '1' with '5538'
c Var 'aux940' order represents '1' with '1'
c Var 'aux940' order represents '0' with '-5538'
c Encoding variable: aux941 with domain: bool (representing constraint (((field_00003_00001=2) + (field_00003_00002=2) + (field_00003_00003=2))<=1))
c Var 'aux941' direct represents '0' with '-5539'
c Var 'aux941' direct represents '1' with '5539'
c Var 'aux941' order represents '1' with '1'
c Var 'aux941' order represents '0' with '-5539'
c Encoding variable: aux942 with domain: bool (representing constraint (1<=((field_00003_00001=2) + (field_00003_00002=2) + (field_00003_00003=2))))
c Var 'aux942' direct represents '0' with '-5540'
c Var 'aux942' direct represents '1' with '5540'
c Var 'aux942' order represents '1' with '1'
c Var 'aux942' order represents '0' with '-5540'
c Encoding variable: aux943 with domain: bool (representing constraint (((field_00003_00005=3) + (field_00003_00006=3))<=1))
c Var 'aux943' direct represents '0' with '-5541'
c Var 'aux943' direct represents '1' with '5541'
c Var 'aux943' order represents '1' with '1'
c Var 'aux943' order represents '0' with '-5541'
c Encoding variable: aux944 with domain: bool (representing constraint (1<=((field_00003_00005=3) + (field_00003_00006=3))))
c Var 'aux944' direct represents '0' with '-5542'
c Var 'aux944' direct represents '1' with '5542'
c Var 'aux944' order represents '1' with '1'
c Var 'aux944' order represents '0' with '-5542'
c Encoding variable: aux945 with domain: bool (representing constraint ((aux441 + aux442 + (field_00003_00006=4))<=1))
c Var 'aux945' direct represents '0' with '-5543'
c Var 'aux945' direct represents '1' with '5543'
c Var 'aux945' order represents '1' with '1'
c Var 'aux945' order represents '0' with '-5543'
c Encoding variable: aux946 with domain: bool (representing constraint (1<=(aux441 + aux442 + (field_00003_00006=4))))
c Var 'aux946' direct represents '0' with '-5544'
c Var 'aux946' direct represents '1' with '5544'
c Var 'aux946' order represents '1' with '1'
c Var 'aux946' order represents '0' with '-5544'
c Encoding variable: aux947 with domain: bool (representing constraint ((aux444 + aux445 + aux447)<=1))
c Var 'aux947' direct represents '0' with '-5545'
c Var 'aux947' direct represents '1' with '5545'
c Var 'aux947' order represents '1' with '1'
c Var 'aux947' order represents '0' with '-5545'
c Encoding variable: aux948 with domain: bool (representing constraint (1<=(aux444 + aux445 + aux447)))
c Var 'aux948' direct represents '0' with '-5546'
c Var 'aux948' direct represents '1' with '5546'
c Var 'aux948' order represents '1' with '1'
c Var 'aux948' order represents '0' with '-5546'
c Encoding variable: aux949 with domain: bool (representing constraint ((aux448 + aux449 + aux450)<=1))
c Var 'aux949' direct represents '0' with '-5547'
c Var 'aux949' direct represents '1' with '5547'
c Var 'aux949' order represents '1' with '1'
c Var 'aux949' order represents '0' with '-5547'
c Encoding variable: aux950 with domain: bool (representing constraint (1<=(aux448 + aux449 + aux450)))
c Var 'aux950' direct represents '0' with '-5548'
c Var 'aux950' direct represents '1' with '5548'
c Var 'aux950' order represents '1' with '1'
c Var 'aux950' order represents '0' with '-5548'
c Encoding variable: aux951 with domain: bool (representing constraint ((aux452 + aux455 + aux456)<=1))
c Var 'aux951' direct represents '0' with '-5549'
c Var 'aux951' direct represents '1' with '5549'
c Var 'aux951' order represents '1' with '1'
c Var 'aux951' order represents '0' with '-5549'
c Encoding variable: aux952 with domain: bool (representing constraint (1<=(aux452 + aux455 + aux456)))
c Var 'aux952' direct represents '0' with '-5550'
c Var 'aux952' direct represents '1' with '5550'
c Var 'aux952' order represents '1' with '1'
c Var 'aux952' order represents '0' with '-5550'
c Encoding variable: aux953 with domain: bool (representing constraint ((aux458 + aux459 + aux461)<=1))
c Var 'aux953' direct represents '0' with '-5551'
c Var 'aux953' direct represents '1' with '5551'
c Var 'aux953' order represents '1' with '1'
c Var 'aux953' order represents '0' with '-5551'
c Encoding variable: aux954 with domain: bool (representing constraint (1<=(aux458 + aux459 + aux461)))
c Var 'aux954' direct represents '0' with '-5552'
c Var 'aux954' direct represents '1' with '5552'
c Var 'aux954' order represents '1' with '1'
c Var 'aux954' order represents '0' with '-5552'
c Encoding variable: aux955 with domain: bool (representing constraint ((aux462 + aux463 + (field_00003_00003=9))<=1))
c Var 'aux955' direct represents '0' with '-5553'
c Var 'aux955' direct represents '1' with '5553'
c Var 'aux955' order represents '1' with '1'
c Var 'aux955' order represents '0' with '-5553'
c Encoding variable: aux956 with domain: bool (representing constraint (1<=(aux462 + aux463 + (field_00003_00003=9))))
c Var 'aux956' direct represents '0' with '-5554'
c Var 'aux956' direct represents '1' with '5554'
c Var 'aux956' order represents '1' with '1'
c Var 'aux956' order represents '0' with '-5554'
c Encoding variable: aux957 with domain: bool (representing constraint (((field_00004_00002=1) + (field_00004_00003=1))<=1))
c Var 'aux957' direct represents '0' with '-5555'
c Var 'aux957' direct represents '1' with '5555'
c Var 'aux957' order represents '1' with '1'
c Var 'aux957' order represents '0' with '-5555'
c Encoding variable: aux958 with domain: bool (representing constraint (1<=((field_00004_00002=1) + (field_00004_00003=1))))
c Var 'aux958' direct represents '0' with '-5556'
c Var 'aux958' direct represents '1' with '5556'
c Var 'aux958' order represents '1' with '1'
c Var 'aux958' order represents '0' with '-5556'
c Encoding variable: aux959 with domain: bool (representing constraint (((field_00004_00003=2) + (field_00004_00005=2) + aux464)<=1))
c Var 'aux959' direct represents '0' with '-5557'
c Var 'aux959' direct represents '1' with '5557'
c Var 'aux959' order represents '1' with '1'
c Var 'aux959' order represents '0' with '-5557'
c Encoding variable: aux960 with domain: bool (representing constraint (1<=((field_00004_00003=2) + (field_00004_00005=2) + aux464)))
c Var 'aux960' direct represents '0' with '-5558'
c Var 'aux960' direct represents '1' with '5558'
c Var 'aux960' order represents '1' with '1'
c Var 'aux960' order represents '0' with '-5558'
c Encoding variable: aux961 with domain: bool (representing constraint (((field_00004_00003=7) + (field_00004_00005=7) + aux465)<=1))
c Var 'aux961' direct represents '0' with '-5559'
c Var 'aux961' direct represents '1' with '5559'
c Var 'aux961' order represents '1' with '1'
c Var 'aux961' order represents '0' with '-5559'
c Encoding variable: aux962 with domain: bool (representing constraint (1<=((field_00004_00003=7) + (field_00004_00005=7) + aux465)))
c Var 'aux962' direct represents '0' with '-5560'
c Var 'aux962' direct represents '1' with '5560'
c Var 'aux962' order represents '1' with '1'
c Var 'aux962' order represents '0' with '-5560'
c Encoding variable: aux963 with domain: bool (representing constraint (((field_00004_00005=9) + (field_00004_00006=9))<=1))
c Var 'aux963' direct represents '0' with '-5561'
c Var 'aux963' direct represents '1' with '5561'
c Var 'aux963' order represents '1' with '1'
c Var 'aux963' order represents '0' with '-5561'
c Encoding variable: aux964 with domain: bool (representing constraint (1<=((field_00004_00005=9) + (field_00004_00006=9))))
c Var 'aux964' direct represents '0' with '-5562'
c Var 'aux964' direct represents '1' with '5562'
c Var 'aux964' order represents '1' with '1'
c Var 'aux964' order represents '0' with '-5562'
c Encoding variable: aux965 with domain: bool (representing constraint ((aux466 + (field_00005_00006=1) + (field_00005_00008=1))<=1))
c Var 'aux965' direct represents '0' with '-5563'
c Var 'aux965' direct represents '1' with '5563'
c Var 'aux965' order represents '1' with '1'
c Var 'aux965' order represents '0' with '-5563'
c Encoding variable: aux966 with domain: bool (representing constraint (1<=(aux466 + (field_00005_00006=1) + (field_00005_00008=1))))
c Var 'aux966' direct represents '0' with '-5564'
c Var 'aux966' direct represents '1' with '5564'
c Var 'aux966' order represents '1' with '1'
c Var 'aux966' order represents '0' with '-5564'
c Encoding variable: aux967 with domain: bool (representing constraint ((aux467 + aux468 + aux470)<=1))
c Var 'aux967' direct represents '0' with '-5565'
c Var 'aux967' direct represents '1' with '5565'
c Var 'aux967' order represents '1' with '1'
c Var 'aux967' order represents '0' with '-5565'
c Encoding variable: aux968 with domain: bool (representing constraint (1<=(aux467 + aux468 + aux470)))
c Var 'aux968' direct represents '0' with '-5566'
c Var 'aux968' direct represents '1' with '5566'
c Var 'aux968' order represents '1' with '1'
c Var 'aux968' order represents '0' with '-5566'
c Encoding variable: aux969 with domain: bool (representing constraint ((aux471 + (field_00005_00003=3) + (field_00005_00005=3))<=1))
c Var 'aux969' direct represents '0' with '-5567'
c Var 'aux969' direct represents '1' with '5567'
c Var 'aux969' order represents '1' with '1'
c Var 'aux969' order represents '0' with '-5567'
c Encoding variable: aux970 with domain: bool (representing constraint (1<=(aux471 + (field_00005_00003=3) + (field_00005_00005=3))))
c Var 'aux970' direct represents '0' with '-5568'
c Var 'aux970' direct represents '1' with '5568'
c Var 'aux970' order represents '1' with '1'
c Var 'aux970' order represents '0' with '-5568'
c Encoding variable: aux971 with domain: bool (representing constraint ((aux472 + aux473 + (field_00005_00006=4))<=1))
c Var 'aux971' direct represents '0' with '-5569'
c Var 'aux971' direct represents '1' with '5569'
c Var 'aux971' order represents '1' with '1'
c Var 'aux971' order represents '0' with '-5569'
c Encoding variable: aux972 with domain: bool (representing constraint (1<=(aux472 + aux473 + (field_00005_00006=4))))
c Var 'aux972' direct represents '0' with '-5570'
c Var 'aux972' direct represents '1' with '5570'
c Var 'aux972' order represents '1' with '1'
c Var 'aux972' order represents '0' with '-5570'
c Encoding variable: aux973 with domain: bool (representing constraint ((aux474 + aux475 + aux476)<=1))
c Var 'aux973' direct represents '0' with '-5571'
c Var 'aux973' direct represents '1' with '5571'
c Var 'aux973' order represents '1' with '1'
c Var 'aux973' order represents '0' with '-5571'
c Encoding variable: aux974 with domain: bool (representing constraint (1<=(aux474 + aux475 + aux476)))
c Var 'aux974' direct represents '0' with '-5572'
c Var 'aux974' direct represents '1' with '5572'
c Var 'aux974' order represents '1' with '1'
c Var 'aux974' order represents '0' with '-5572'
c Encoding variable: aux975 with domain: bool (representing constraint ((aux477 + aux478 + aux479)<=1))
c Var 'aux975' direct represents '0' with '-5573'
c Var 'aux975' direct represents '1' with '5573'
c Var 'aux975' order represents '1' with '1'
c Var 'aux975' order represents '0' with '-5573'
c Encoding variable: aux976 with domain: bool (representing constraint (1<=(aux477 + aux478 + aux479)))
c Var 'aux976' direct represents '0' with '-5574'
c Var 'aux976' direct represents '1' with '5574'
c Var 'aux976' order represents '1' with '1'
c Var 'aux976' order represents '0' with '-5574'
c Encoding variable: aux977 with domain: bool (representing constraint ((aux481 + aux484 + aux485)<=1))
c Var 'aux977' direct represents '0' with '-5575'
c Var 'aux977' direct represents '1' with '5575'
c Var 'aux977' order represents '1' with '1'
c Var 'aux977' order represents '0' with '-5575'
c Encoding variable: aux978 with domain: bool (representing constraint (1<=(aux481 + aux484 + aux485)))
c Var 'aux978' direct represents '0' with '-5576'
c Var 'aux978' direct represents '1' with '5576'
c Var 'aux978' order represents '1' with '1'
c Var 'aux978' order represents '0' with '-5576'
c Encoding variable: aux979 with domain: bool (representing constraint ((aux486 + aux487 + aux488)<=1))
c Var 'aux979' direct represents '0' with '-5577'
c Var 'aux979' direct represents '1' with '5577'
c Var 'aux979' order represents '1' with '1'
c Var 'aux979' order represents '0' with '-5577'
c Encoding variable: aux980 with domain: bool (representing constraint (1<=(aux486 + aux487 + aux488)))
c Var 'aux980' direct represents '0' with '-5578'
c Var 'aux980' direct represents '1' with '5578'
c Var 'aux980' order represents '1' with '1'
c Var 'aux980' order represents '0' with '-5578'
c Encoding variable: aux981 with domain: bool (representing constraint ((aux489 + aux490 + aux491)<=1))
c Var 'aux981' direct represents '0' with '-5579'
c Var 'aux981' direct represents '1' with '5579'
c Var 'aux981' order represents '1' with '1'
c Var 'aux981' order represents '0' with '-5579'
c Encoding variable: aux982 with domain: bool (representing constraint (1<=(aux489 + aux490 + aux491)))
c Var 'aux982' direct represents '0' with '-5580'
c Var 'aux982' direct represents '1' with '5580'
c Var 'aux982' order represents '1' with '1'
c Var 'aux982' order represents '0' with '-5580'
c Encoding variable: aux983 with domain: bool (representing constraint ((aux492 + (field_00006_00006=1) + (field_00006_00007=1))<=1))
c Var 'aux983' direct represents '0' with '-5581'
c Var 'aux983' direct represents '1' with '5581'
c Var 'aux983' order represents '1' with '1'
c Var 'aux983' order represents '0' with '-5581'
c Encoding variable: aux984 with domain: bool (representing constraint (1<=(aux492 + (field_00006_00006=1) + (field_00006_00007=1))))
c Var 'aux984' direct represents '0' with '-5582'
c Var 'aux984' direct represents '1' with '5582'
c Var 'aux984' order represents '1' with '1'
c Var 'aux984' order represents '0' with '-5582'
c Encoding variable: aux985 with domain: bool (representing constraint ((aux493 + aux494 + aux495)<=1))
c Var 'aux985' direct represents '0' with '-5583'
c Var 'aux985' direct represents '1' with '5583'
c Var 'aux985' order represents '1' with '1'
c Var 'aux985' order represents '0' with '-5583'
c Encoding variable: aux986 with domain: bool (representing constraint (1<=(aux493 + aux494 + aux495)))
c Var 'aux986' direct represents '0' with '-5584'
c Var 'aux986' direct represents '1' with '5584'
c Var 'aux986' order represents '1' with '1'
c Var 'aux986' order represents '0' with '-5584'
c Encoding variable: aux987 with domain: bool (representing constraint ((aux496 + (field_00006_00003=3) + (field_00006_00005=3))<=1))
c Var 'aux987' direct represents '0' with '-5585'
c Var 'aux987' direct represents '1' with '5585'
c Var 'aux987' order represents '1' with '1'
c Var 'aux987' order represents '0' with '-5585'
c Encoding variable: aux988 with domain: bool (representing constraint (1<=(aux496 + (field_00006_00003=3) + (field_00006_00005=3))))
c Var 'aux988' direct represents '0' with '-5586'
c Var 'aux988' direct represents '1' with '5586'
c Var 'aux988' order represents '1' with '1'
c Var 'aux988' order represents '0' with '-5586'
c Encoding variable: aux989 with domain: bool (representing constraint ((aux497 + (field_00006_00005=4) + (field_00006_00006=4))<=1))
c Var 'aux989' direct represents '0' with '-5587'
c Var 'aux989' direct represents '1' with '5587'
c Var 'aux989' order represents '1' with '1'
c Var 'aux989' order represents '0' with '-5587'
c Encoding variable: aux990 with domain: bool (representing constraint (1<=(aux497 + (field_00006_00005=4) + (field_00006_00006=4))))
c Var 'aux990' direct represents '0' with '-5588'
c Var 'aux990' direct represents '1' with '5588'
c Var 'aux990' order represents '1' with '1'
c Var 'aux990' order represents '0' with '-5588'
c Encoding variable: aux991 with domain: bool (representing constraint ((aux498 + aux499 + aux500)<=1))
c Var 'aux991' direct represents '0' with '-5589'
c Var 'aux991' direct represents '1' with '5589'
c Var 'aux991' order represents '1' with '1'
c Var 'aux991' order represents '0' with '-5589'
c Encoding variable: aux992 with domain: bool (representing constraint (1<=(aux498 + aux499 + aux500)))
c Var 'aux992' direct represents '0' with '-5590'
c Var 'aux992' direct represents '1' with '5590'
c Var 'aux992' order represents '1' with '1'
c Var 'aux992' order represents '0' with '-5590'
c Encoding variable: aux993 with domain: bool (representing constraint ((aux501 + aux502 + aux503)<=1))
c Var 'aux993' direct represents '0' with '-5591'
c Var 'aux993' direct represents '1' with '5591'
c Var 'aux993' order represents '1' with '1'
c Var 'aux993' order represents '0' with '-5591'
c Encoding variable: aux994 with domain: bool (representing constraint (1<=(aux501 + aux502 + aux503)))
c Var 'aux994' direct represents '0' with '-5592'
c Var 'aux994' direct represents '1' with '5592'
c Var 'aux994' order represents '1' with '1'
c Var 'aux994' order represents '0' with '-5592'
c Encoding variable: aux995 with domain: bool (representing constraint ((aux505 + aux508 + aux509)<=1))
c Var 'aux995' direct represents '0' with '-5593'
c Var 'aux995' direct represents '1' with '5593'
c Var 'aux995' order represents '1' with '1'
c Var 'aux995' order represents '0' with '-5593'
c Encoding variable: aux996 with domain: bool (representing constraint (1<=(aux505 + aux508 + aux509)))
c Var 'aux996' direct represents '0' with '-5594'
c Var 'aux996' direct represents '1' with '5594'
c Var 'aux996' order represents '1' with '1'
c Var 'aux996' order represents '0' with '-5594'
c Encoding variable: aux997 with domain: bool (representing constraint ((aux510 + aux511 + aux512)<=1))
c Var 'aux997' direct represents '0' with '-5595'
c Var 'aux997' direct represents '1' with '5595'
c Var 'aux997' order represents '1' with '1'
c Var 'aux997' order represents '0' with '-5595'
c Encoding variable: aux998 with domain: bool (representing constraint (1<=(aux510 + aux511 + aux512)))
c Var 'aux998' direct represents '0' with '-5596'
c Var 'aux998' direct represents '1' with '5596'
c Var 'aux998' order represents '1' with '1'
c Var 'aux998' order represents '0' with '-5596'
c Encoding variable: aux999 with domain: bool (representing constraint ((aux513 + (field_00006_00003=9) + (field_00006_00007=9))<=1))
c Var 'aux999' direct represents '0' with '-5597'
c Var 'aux999' direct represents '1' with '5597'
c Var 'aux999' order represents '1' with '1'
c Var 'aux999' order represents '0' with '-5597'
c Encoding variable: aux1000 with domain: bool (representing constraint (1<=(aux513 + (field_00006_00003=9) + (field_00006_00007=9))))
c Var 'aux1000' direct represents '0' with '-5598'
c Var 'aux1000' direct represents '1' with '5598'
c Var 'aux1000' order represents '1' with '1'
c Var 'aux1000' order represents '0' with '-5598'
c Encoding variable: aux1001 with domain: bool (representing constraint ((aux514 + aux515 + (field_00007_00007=1))<=1))
c Var 'aux1001' direct represents '0' with '-5599'
c Var 'aux1001' direct represents '1' with '5599'
c Var 'aux1001' order represents '1' with '1'
c Var 'aux1001' order represents '0' with '-5599'
c Encoding variable: aux1002 with domain: bool (representing constraint (1<=(aux514 + aux515 + (field_00007_00007=1))))
c Var 'aux1002' direct represents '0' with '-5600'
c Var 'aux1002' direct represents '1' with '5600'
c Var 'aux1002' order represents '1' with '1'
c Var 'aux1002' order represents '0' with '-5600'
c Encoding variable: aux1003 with domain: bool (representing constraint ((aux516 + aux517 + aux519)<=1))
c Var 'aux1003' direct represents '0' with '-5601'
c Var 'aux1003' direct represents '1' with '5601'
c Var 'aux1003' order represents '1' with '1'
c Var 'aux1003' order represents '0' with '-5601'
c Encoding variable: aux1004 with domain: bool (representing constraint (1<=(aux516 + aux517 + aux519)))
c Var 'aux1004' direct represents '0' with '-5602'
c Var 'aux1004' direct represents '1' with '5602'
c Var 'aux1004' order represents '1' with '1'
c Var 'aux1004' order represents '0' with '-5602'
c Encoding variable: aux1005 with domain: bool (representing constraint (((field_00007_00002=3) + (field_00007_00003=3) + (field_00007_00008=3))<=1))
c Var 'aux1005' direct represents '0' with '-5603'
c Var 'aux1005' direct represents '1' with '5603'
c Var 'aux1005' order represents '1' with '1'
c Var 'aux1005' order represents '0' with '-5603'
c Encoding variable: aux1006 with domain: bool (representing constraint (1<=((field_00007_00002=3) + (field_00007_00003=3) + (field_00007_00008=3))))
c Var 'aux1006' direct represents '0' with '-5604'
c Var 'aux1006' direct represents '1' with '5604'
c Var 'aux1006' order represents '1' with '1'
c Var 'aux1006' order represents '0' with '-5604'
c Encoding variable: aux1007 with domain: bool (representing constraint ((aux520 + aux521 + (field_00007_00004=4))<=1))
c Var 'aux1007' direct represents '0' with '-5605'
c Var 'aux1007' direct represents '1' with '5605'
c Var 'aux1007' order represents '1' with '1'
c Var 'aux1007' order represents '0' with '-5605'
c Encoding variable: aux1008 with domain: bool (representing constraint (1<=(aux520 + aux521 + (field_00007_00004=4))))
c Var 'aux1008' direct represents '0' with '-5606'
c Var 'aux1008' direct represents '1' with '5606'
c Var 'aux1008' order represents '1' with '1'
c Var 'aux1008' order represents '0' with '-5606'
c Encoding variable: aux1009 with domain: bool (representing constraint ((aux523 + aux524 + aux526)<=1))
c Var 'aux1009' direct represents '0' with '-5607'
c Var 'aux1009' direct represents '1' with '5607'
c Var 'aux1009' order represents '1' with '1'
c Var 'aux1009' order represents '0' with '-5607'
c Encoding variable: aux1010 with domain: bool (representing constraint (1<=(aux523 + aux524 + aux526)))
c Var 'aux1010' direct represents '0' with '-5608'
c Var 'aux1010' direct represents '1' with '5608'
c Var 'aux1010' order represents '1' with '1'
c Var 'aux1010' order represents '0' with '-5608'
c Encoding variable: aux1011 with domain: bool (representing constraint ((aux527 + aux528 + aux530)<=1))
c Var 'aux1011' direct represents '0' with '-5609'
c Var 'aux1011' direct represents '1' with '5609'
c Var 'aux1011' order represents '1' with '1'
c Var 'aux1011' order represents '0' with '-5609'
c Encoding variable: aux1012 with domain: bool (representing constraint (1<=(aux527 + aux528 + aux530)))
c Var 'aux1012' direct represents '0' with '-5610'
c Var 'aux1012' direct represents '1' with '5610'
c Var 'aux1012' order represents '1' with '1'
c Var 'aux1012' order represents '0' with '-5610'
c Encoding variable: aux1013 with domain: bool (representing constraint ((aux532 + aux535 + aux536)<=1))
c Var 'aux1013' direct represents '0' with '-5611'
c Var 'aux1013' direct represents '1' with '5611'
c Var 'aux1013' order represents '1' with '1'
c Var 'aux1013' order represents '0' with '-5611'
c Encoding variable: aux1014 with domain: bool (representing constraint (1<=(aux532 + aux535 + aux536)))
c Var 'aux1014' direct represents '0' with '-5612'
c Var 'aux1014' direct represents '1' with '5612'
c Var 'aux1014' order represents '1' with '1'
c Var 'aux1014' order represents '0' with '-5612'
c Encoding variable: aux1015 with domain: bool (representing constraint ((aux537 + aux538 + aux540)<=1))
c Var 'aux1015' direct represents '0' with '-5613'
c Var 'aux1015' direct represents '1' with '5613'
c Var 'aux1015' order represents '1' with '1'
c Var 'aux1015' order represents '0' with '-5613'
c Encoding variable: aux1016 with domain: bool (representing constraint (1<=(aux537 + aux538 + aux540)))
c Var 'aux1016' direct represents '0' with '-5614'
c Var 'aux1016' direct represents '1' with '5614'
c Var 'aux1016' order represents '1' with '1'
c Var 'aux1016' order represents '0' with '-5614'
c Encoding variable: aux1017 with domain: bool (representing constraint ((aux542 + aux543 + aux545)<=1))
c Var 'aux1017' direct represents '0' with '-5615'
c Var 'aux1017' direct represents '1' with '5615'
c Var 'aux1017' order represents '1' with '1'
c Var 'aux1017' order represents '0' with '-5615'
c Encoding variable: aux1018 with domain: bool (representing constraint (1<=(aux542 + aux543 + aux545)))
c Var 'aux1018' direct represents '0' with '-5616'
c Var 'aux1018' direct represents '1' with '5616'
c Var 'aux1018' order represents '1' with '1'
c Var 'aux1018' order represents '0' with '-5616'
c Encoding variable: aux1019 with domain: bool (representing constraint (((field_00008_00004=1) + (field_00008_00007=1) + (field_00008_00008=1))<=1))
c Var 'aux1019' direct represents '0' with '-5617'
c Var 'aux1019' direct represents '1' with '5617'
c Var 'aux1019' order represents '1' with '1'
c Var 'aux1019' order represents '0' with '-5617'
c Encoding variable: aux1020 with domain: bool (representing constraint (1<=((field_00008_00004=1) + (field_00008_00007=1) + (field_00008_00008=1))))
c Var 'aux1020' direct represents '0' with '-5618'
c Var 'aux1020' direct represents '1' with '5618'
c Var 'aux1020' order represents '1' with '1'
c Var 'aux1020' order represents '0' with '-5618'
c Encoding variable: aux1021 with domain: bool (representing constraint ((aux546 + aux547 + aux548)<=1))
c Var 'aux1021' direct represents '0' with '-5619'
c Var 'aux1021' direct represents '1' with '5619'
c Var 'aux1021' order represents '1' with '1'
c Var 'aux1021' order represents '0' with '-5619'
c Encoding variable: aux1022 with domain: bool (representing constraint (1<=(aux546 + aux547 + aux548)))
c Var 'aux1022' direct represents '0' with '-5620'
c Var 'aux1022' direct represents '1' with '5620'
c Var 'aux1022' order represents '1' with '1'
c Var 'aux1022' order represents '0' with '-5620'
c Encoding variable: aux1023 with domain: bool (representing constraint (((field_00008_00002=3) + (field_00008_00003=3) + (field_00008_00008=3))<=1))
c Var 'aux1023' direct represents '0' with '-5621'
c Var 'aux1023' direct represents '1' with '5621'
c Var 'aux1023' order represents '1' with '1'
c Var 'aux1023' order represents '0' with '-5621'
c Encoding variable: aux1024 with domain: bool (representing constraint (1<=((field_00008_00002=3) + (field_00008_00003=3) + (field_00008_00008=3))))
c Var 'aux1024' direct represents '0' with '-5622'
c Var 'aux1024' direct represents '1' with '5622'
c Var 'aux1024' order represents '1' with '1'
c Var 'aux1024' order represents '0' with '-5622'
c Encoding variable: aux1025 with domain: bool (representing constraint ((aux549 + aux550 + (field_00008_00004=4))<=1))
c Var 'aux1025' direct represents '0' with '-5623'
c Var 'aux1025' direct represents '1' with '5623'
c Var 'aux1025' order represents '1' with '1'
c Var 'aux1025' order represents '0' with '-5623'
c Encoding variable: aux1026 with domain: bool (representing constraint (1<=(aux549 + aux550 + (field_00008_00004=4))))
c Var 'aux1026' direct represents '0' with '-5624'
c Var 'aux1026' direct represents '1' with '5624'
c Var 'aux1026' order represents '1' with '1'
c Var 'aux1026' order represents '0' with '-5624'
c Encoding variable: aux1027 with domain: bool (representing constraint ((aux552 + aux553 + aux555)<=1))
c Var 'aux1027' direct represents '0' with '-5625'
c Var 'aux1027' direct represents '1' with '5625'
c Var 'aux1027' order represents '1' with '1'
c Var 'aux1027' order represents '0' with '-5625'
c Encoding variable: aux1028 with domain: bool (representing constraint (1<=(aux552 + aux553 + aux555)))
c Var 'aux1028' direct represents '0' with '-5626'
c Var 'aux1028' direct represents '1' with '5626'
c Var 'aux1028' order represents '1' with '1'
c Var 'aux1028' order represents '0' with '-5626'
c Encoding variable: aux1029 with domain: bool (representing constraint ((aux556 + aux557 + aux559)<=1))
c Var 'aux1029' direct represents '0' with '-5627'
c Var 'aux1029' direct represents '1' with '5627'
c Var 'aux1029' order represents '1' with '1'
c Var 'aux1029' order represents '0' with '-5627'
c Encoding variable: aux1030 with domain: bool (representing constraint (1<=(aux556 + aux557 + aux559)))
c Var 'aux1030' direct represents '0' with '-5628'
c Var 'aux1030' direct represents '1' with '5628'
c Var 'aux1030' order represents '1' with '1'
c Var 'aux1030' order represents '0' with '-5628'
c Encoding variable: aux1031 with domain: bool (representing constraint ((aux561 + aux564 + aux565)<=1))
c Var 'aux1031' direct represents '0' with '-5629'
c Var 'aux1031' direct represents '1' with '5629'
c Var 'aux1031' order represents '1' with '1'
c Var 'aux1031' order represents '0' with '-5629'
c Encoding variable: aux1032 with domain: bool (representing constraint (1<=(aux561 + aux564 + aux565)))
c Var 'aux1032' direct represents '0' with '-5630'
c Var 'aux1032' direct represents '1' with '5630'
c Var 'aux1032' order represents '1' with '1'
c Var 'aux1032' order represents '0' with '-5630'
c Encoding variable: aux1033 with domain: bool (representing constraint ((aux566 + aux567 + aux569)<=1))
c Var 'aux1033' direct represents '0' with '-5631'
c Var 'aux1033' direct represents '1' with '5631'
c Var 'aux1033' order represents '1' with '1'
c Var 'aux1033' order represents '0' with '-5631'
c Encoding variable: aux1034 with domain: bool (representing constraint (1<=(aux566 + aux567 + aux569)))
c Var 'aux1034' direct represents '0' with '-5632'
c Var 'aux1034' direct represents '1' with '5632'
c Var 'aux1034' order represents '1' with '1'
c Var 'aux1034' order represents '0' with '-5632'
c Encoding variable: aux1035 with domain: bool (representing constraint ((aux570 + aux571 + aux572)<=1))
c Var 'aux1035' direct represents '0' with '-5633'
c Var 'aux1035' direct represents '1' with '5633'
c Var 'aux1035' order represents '1' with '1'
c Var 'aux1035' order represents '0' with '-5633'
c Encoding variable: aux1036 with domain: bool (representing constraint (1<=(aux570 + aux571 + aux572)))
c Var 'aux1036' direct represents '0' with '-5634'
c Var 'aux1036' direct represents '1' with '5634'
c Var 'aux1036' order represents '1' with '1'
c Var 'aux1036' order represents '0' with '-5634'
c Encoding variable: aux1037 with domain: bool (representing constraint (((field_00009_00001=1) + (field_00009_00008=1) + (field_00009_00009=1))<=1))
c Var 'aux1037' direct represents '0' with '-5635'
c Var 'aux1037' direct represents '1' with '5635'
c Var 'aux1037' order represents '1' with '1'
c Var 'aux1037' order represents '0' with '-5635'
c Encoding variable: aux1038 with domain: bool (representing constraint (1<=((field_00009_00001=1) + (field_00009_00008=1) + (field_00009_00009=1))))
c Var 'aux1038' direct represents '0' with '-5636'
c Var 'aux1038' direct represents '1' with '5636'
c Var 'aux1038' order represents '1' with '1'
c Var 'aux1038' order represents '0' with '-5636'
c Encoding variable: aux1039 with domain: bool (representing constraint (((field_00009_00005=2) + aux573 + aux574)<=1))
c Var 'aux1039' direct represents '0' with '-5637'
c Var 'aux1039' direct represents '1' with '5637'
c Var 'aux1039' order represents '1' with '1'
c Var 'aux1039' order represents '0' with '-5637'
c Encoding variable: aux1040 with domain: bool (representing constraint (1<=((field_00009_00005=2) + aux573 + aux574)))
c Var 'aux1040' direct represents '0' with '-5638'
c Var 'aux1040' direct represents '1' with '5638'
c Var 'aux1040' order represents '1' with '1'
c Var 'aux1040' order represents '0' with '-5638'
c Encoding variable: aux1041 with domain: bool (representing constraint ((aux575 + aux576 + aux578)<=1))
c Var 'aux1041' direct represents '0' with '-5639'
c Var 'aux1041' direct represents '1' with '5639'
c Var 'aux1041' order represents '1' with '1'
c Var 'aux1041' order represents '0' with '-5639'
c Encoding variable: aux1042 with domain: bool (representing constraint (1<=(aux575 + aux576 + aux578)))
c Var 'aux1042' direct represents '0' with '-5640'
c Var 'aux1042' direct represents '1' with '5640'
c Var 'aux1042' order represents '1' with '1'
c Var 'aux1042' order represents '0' with '-5640'
c Encoding variable: aux1043 with domain: bool (representing constraint ((aux579 + aux580 + aux581)<=1))
c Var 'aux1043' direct represents '0' with '-5641'
c Var 'aux1043' direct represents '1' with '5641'
c Var 'aux1043' order represents '1' with '1'
c Var 'aux1043' order represents '0' with '-5641'
c Encoding variable: aux1044 with domain: bool (representing constraint (1<=(aux579 + aux580 + aux581)))
c Var 'aux1044' direct represents '0' with '-5642'
c Var 'aux1044' direct represents '1' with '5642'
c Var 'aux1044' order represents '1' with '1'
c Var 'aux1044' order represents '0' with '-5642'
c Encoding variable: aux1045 with domain: bool (representing constraint ((aux582 + aux583 + aux584)<=1))
c Var 'aux1045' direct represents '0' with '-5643'
c Var 'aux1045' direct represents '1' with '5643'
c Var 'aux1045' order represents '1' with '1'
c Var 'aux1045' order represents '0' with '-5643'
c Encoding variable: aux1046 with domain: bool (representing constraint (1<=(aux582 + aux583 + aux584)))
c Var 'aux1046' direct represents '0' with '-5644'
c Var 'aux1046' direct represents '1' with '5644'
c Var 'aux1046' order represents '1' with '1'
c Var 'aux1046' order represents '0' with '-5644'
c Encoding variable: aux1047 with domain: bool (representing constraint (((field_00009_00005=8) + aux585 + aux586)<=1))
c Var 'aux1047' direct represents '0' with '-5645'
c Var 'aux1047' direct represents '1' with '5645'
c Var 'aux1047' order represents '1' with '1'
c Var 'aux1047' order represents '0' with '-5645'
c Encoding variable: aux1048 with domain: bool (representing constraint (1<=((field_00009_00005=8) + aux585 + aux586)))
c Var 'aux1048' direct represents '0' with '-5646'
c Var 'aux1048' direct represents '1' with '5646'
c Var 'aux1048' order represents '1' with '1'
c Var 'aux1048' order represents '0' with '-5646'
c Encoding variable: aux1049 with domain: bool (representing constraint ((aux587 + aux588 + aux589)<=1))
c Var 'aux1049' direct represents '0' with '-5647'
c Var 'aux1049' direct represents '1' with '5647'
c Var 'aux1049' order represents '1' with '1'
c Var 'aux1049' order represents '0' with '-5647'
c Encoding variable: aux1050 with domain: bool (representing constraint (1<=(aux587 + aux588 + aux589)))
c Var 'aux1050' direct represents '0' with '-5648'
c Var 'aux1050' direct represents '1' with '5648'
c Var 'aux1050' order represents '1' with '1'
c Var 'aux1050' order represents '0' with '-5648'
c Encoding variable: aux1051 with domain: bool (representing constraint (((field_00002_00002=1) + (field_00002_00003=1))<=1))
c Var 'aux1051' direct represents '0' with '-5649'
c Var 'aux1051' direct represents '1' with '5649'
c Var 'aux1051' order represents '1' with '1'
c Var 'aux1051' order represents '0' with '-5649'
c Encoding variable: aux1052 with domain: bool (representing constraint (1<=((field_00002_00002=1) + (field_00002_00003=1))))
c Var 'aux1052' direct represents '0' with '-5650'
c Var 'aux1052' direct represents '1' with '5650'
c Var 'aux1052' order represents '1' with '1'
c Var 'aux1052' order represents '0' with '-5650'
c Encoding variable: aux1053 with domain: bool (representing constraint (((field_00003_00001=2) + (field_00003_00002=2) + (field_00003_00003=2))<=1))
c Var 'aux1053' direct represents '0' with '-5651'
c Var 'aux1053' direct represents '1' with '5651'
c Var 'aux1053' order represents '1' with '1'
c Var 'aux1053' order represents '0' with '-5651'
c Encoding variable: aux1054 with domain: bool (representing constraint (1<=((field_00003_00001=2) + (field_00003_00002=2) + (field_00003_00003=2))))
c Var 'aux1054' direct represents '0' with '-5652'
c Var 'aux1054' direct represents '1' with '5652'
c Var 'aux1054' order represents '1' with '1'
c Var 'aux1054' order represents '0' with '-5652'
c Encoding variable: aux1055 with domain: bool (representing constraint (((field_00002_00002=4) + (field_00002_00003=4))<=1))
c Var 'aux1055' direct represents '0' with '-5653'
c Var 'aux1055' direct represents '1' with '5653'
c Var 'aux1055' order represents '1' with '1'
c Var 'aux1055' order represents '0' with '-5653'
c Encoding variable: aux1056 with domain: bool (representing constraint (1<=((field_00002_00002=4) + (field_00002_00003=4))))
c Var 'aux1056' direct represents '0' with '-5654'
c Var 'aux1056' direct represents '1' with '5654'
c Var 'aux1056' order represents '1' with '1'
c Var 'aux1056' order represents '0' with '-5654'
c Encoding variable: aux1057 with domain: bool (representing constraint ((aux590 + aux591 + aux592)<=1))
c Var 'aux1057' direct represents '0' with '-5655'
c Var 'aux1057' direct represents '1' with '5655'
c Var 'aux1057' order represents '1' with '1'
c Var 'aux1057' order represents '0' with '-5655'
c Encoding variable: aux1058 with domain: bool (representing constraint (1<=(aux590 + aux591 + aux592)))
c Var 'aux1058' direct represents '0' with '-5656'
c Var 'aux1058' direct represents '1' with '5656'
c Var 'aux1058' order represents '1' with '1'
c Var 'aux1058' order represents '0' with '-5656'
c Encoding variable: aux1059 with domain: bool (representing constraint ((aux593 + aux594 + aux595)<=1))
c Var 'aux1059' direct represents '0' with '-5657'
c Var 'aux1059' direct represents '1' with '5657'
c Var 'aux1059' order represents '1' with '1'
c Var 'aux1059' order represents '0' with '-5657'
c Encoding variable: aux1060 with domain: bool (representing constraint (1<=(aux593 + aux594 + aux595)))
c Var 'aux1060' direct represents '0' with '-5658'
c Var 'aux1060' direct represents '1' with '5658'
c Var 'aux1060' order represents '1' with '1'
c Var 'aux1060' order represents '0' with '-5658'
c Encoding variable: aux1061 with domain: bool (representing constraint ((aux596 + aux597 + aux598)<=1))
c Var 'aux1061' direct represents '0' with '-5659'
c Var 'aux1061' direct represents '1' with '5659'
c Var 'aux1061' order represents '1' with '1'
c Var 'aux1061' order represents '0' with '-5659'
c Encoding variable: aux1062 with domain: bool (representing constraint (1<=(aux596 + aux597 + aux598)))
c Var 'aux1062' direct represents '0' with '-5660'
c Var 'aux1062' direct represents '1' with '5660'
c Var 'aux1062' order represents '1' with '1'
c Var 'aux1062' order represents '0' with '-5660'
c Encoding variable: aux1063 with domain: bool (representing constraint ((aux599 + aux600 + (field_00003_00003=8))<=1))
c Var 'aux1063' direct represents '0' with '-5661'
c Var 'aux1063' direct represents '1' with '5661'
c Var 'aux1063' order represents '1' with '1'
c Var 'aux1063' order represents '0' with '-5661'
c Encoding variable: aux1064 with domain: bool (representing constraint (1<=(aux599 + aux600 + (field_00003_00003=8))))
c Var 'aux1064' direct represents '0' with '-5662'
c Var 'aux1064' direct represents '1' with '5662'
c Var 'aux1064' order represents '1' with '1'
c Var 'aux1064' order represents '0' with '-5662'
c Encoding variable: aux1065 with domain: bool (representing constraint ((aux601 + aux602 + (field_00003_00003=9))<=1))
c Var 'aux1065' direct represents '0' with '-5663'
c Var 'aux1065' direct represents '1' with '5663'
c Var 'aux1065' order represents '1' with '1'
c Var 'aux1065' order represents '0' with '-5663'
c Encoding variable: aux1066 with domain: bool (representing constraint (1<=(aux601 + aux602 + (field_00003_00003=9))))
c Var 'aux1066' direct represents '0' with '-5664'
c Var 'aux1066' direct represents '1' with '5664'
c Var 'aux1066' order represents '1' with '1'
c Var 'aux1066' order represents '0' with '-5664'
c Encoding variable: aux1067 with domain: bool (representing constraint (((field_00003_00005=1) + (field_00003_00006=1) + (field_00001_00005=1))<=1))
c Var 'aux1067' direct represents '0' with '-5665'
c Var 'aux1067' direct represents '1' with '5665'
c Var 'aux1067' order represents '1' with '1'
c Var 'aux1067' order represents '0' with '-5665'
c Encoding variable: aux1068 with domain: bool (representing constraint (1<=((field_00003_00005=1) + (field_00003_00006=1) + (field_00001_00005=1))))
c Var 'aux1068' direct represents '0' with '-5666'
c Var 'aux1068' direct represents '1' with '5666'
c Var 'aux1068' order represents '1' with '1'
c Var 'aux1068' order represents '0' with '-5666'
c Encoding variable: aux1069 with domain: bool (representing constraint (((field_00003_00005=3) + (field_00003_00006=3))<=1))
c Var 'aux1069' direct represents '0' with '-5667'
c Var 'aux1069' direct represents '1' with '5667'
c Var 'aux1069' order represents '1' with '1'
c Var 'aux1069' order represents '0' with '-5667'
c Encoding variable: aux1070 with domain: bool (representing constraint (1<=((field_00003_00005=3) + (field_00003_00006=3))))
c Var 'aux1070' direct represents '0' with '-5668'
c Var 'aux1070' direct represents '1' with '5668'
c Var 'aux1070' order represents '1' with '1'
c Var 'aux1070' order represents '0' with '-5668'
c Encoding variable: aux1071 with domain: bool (representing constraint ((aux603 + aux604 + (field_00003_00006=4))<=1))
c Var 'aux1071' direct represents '0' with '-5669'
c Var 'aux1071' direct represents '1' with '5669'
c Var 'aux1071' order represents '1' with '1'
c Var 'aux1071' order represents '0' with '-5669'
c Encoding variable: aux1072 with domain: bool (representing constraint (1<=(aux603 + aux604 + (field_00003_00006=4))))
c Var 'aux1072' direct represents '0' with '-5670'
c Var 'aux1072' direct represents '1' with '5670'
c Var 'aux1072' order represents '1' with '1'
c Var 'aux1072' order represents '0' with '-5670'
c Encoding variable: aux1073 with domain: bool (representing constraint ((aux605 + aux606 + aux607)<=1))
c Var 'aux1073' direct represents '0' with '-5671'
c Var 'aux1073' direct represents '1' with '5671'
c Var 'aux1073' order represents '1' with '1'
c Var 'aux1073' order represents '0' with '-5671'
c Encoding variable: aux1074 with domain: bool (representing constraint (1<=(aux605 + aux606 + aux607)))
c Var 'aux1074' direct represents '0' with '-5672'
c Var 'aux1074' direct represents '1' with '5672'
c Var 'aux1074' order represents '1' with '1'
c Var 'aux1074' order represents '0' with '-5672'
c Encoding variable: aux1075 with domain: bool (representing constraint ((aux608 + aux609 + (field_00003_00006=6))<=1))
c Var 'aux1075' direct represents '0' with '-5673'
c Var 'aux1075' direct represents '1' with '5673'
c Var 'aux1075' order represents '1' with '1'
c Var 'aux1075' order represents '0' with '-5673'
c Encoding variable: aux1076 with domain: bool (representing constraint (1<=(aux608 + aux609 + (field_00003_00006=6))))
c Var 'aux1076' direct represents '0' with '-5674'
c Var 'aux1076' direct represents '1' with '5674'
c Var 'aux1076' order represents '1' with '1'
c Var 'aux1076' order represents '0' with '-5674'
c Encoding variable: aux1077 with domain: bool (representing constraint ((aux610 + aux611 + aux612)<=1))
c Var 'aux1077' direct represents '0' with '-5675'
c Var 'aux1077' direct represents '1' with '5675'
c Var 'aux1077' order represents '1' with '1'
c Var 'aux1077' order represents '0' with '-5675'
c Encoding variable: aux1078 with domain: bool (representing constraint (1<=(aux610 + aux611 + aux612)))
c Var 'aux1078' direct represents '0' with '-5676'
c Var 'aux1078' direct represents '1' with '5676'
c Var 'aux1078' order represents '1' with '1'
c Var 'aux1078' order represents '0' with '-5676'
c Encoding variable: aux1079 with domain: bool (representing constraint ((aux613 + aux614 + aux615)<=1))
c Var 'aux1079' direct represents '0' with '-5677'
c Var 'aux1079' direct represents '1' with '5677'
c Var 'aux1079' order represents '1' with '1'
c Var 'aux1079' order represents '0' with '-5677'
c Encoding variable: aux1080 with domain: bool (representing constraint (1<=(aux613 + aux614 + aux615)))
c Var 'aux1080' direct represents '0' with '-5678'
c Var 'aux1080' direct represents '1' with '5678'
c Var 'aux1080' order represents '1' with '1'
c Var 'aux1080' order represents '0' with '-5678'
c Encoding variable: aux1081 with domain: bool (representing constraint ((aux616 + (field_00003_00009=1) + (field_00001_00008=1))<=1))
c Var 'aux1081' direct represents '0' with '-5679'
c Var 'aux1081' direct represents '1' with '5679'
c Var 'aux1081' order represents '1' with '1'
c Var 'aux1081' order represents '0' with '-5679'
c Encoding variable: aux1082 with domain: bool (representing constraint (1<=(aux616 + (field_00003_00009=1) + (field_00001_00008=1))))
c Var 'aux1082' direct represents '0' with '-5680'
c Var 'aux1082' direct represents '1' with '5680'
c Var 'aux1082' order represents '1' with '1'
c Var 'aux1082' order represents '0' with '-5680'
c Encoding variable: aux1083 with domain: bool (representing constraint ((aux617 + (field_00003_00009=4) + (field_00001_00008=4))<=1))
c Var 'aux1083' direct represents '0' with '-5681'
c Var 'aux1083' direct represents '1' with '5681'
c Var 'aux1083' order represents '1' with '1'
c Var 'aux1083' order represents '0' with '-5681'
c Encoding variable: aux1084 with domain: bool (representing constraint (1<=(aux617 + (field_00003_00009=4) + (field_00001_00008=4))))
c Var 'aux1084' direct represents '0' with '-5682'
c Var 'aux1084' direct represents '1' with '5682'
c Var 'aux1084' order represents '1' with '1'
c Var 'aux1084' order represents '0' with '-5682'
c Encoding variable: aux1085 with domain: bool (representing constraint ((aux618 + aux619 + aux620)<=1))
c Var 'aux1085' direct represents '0' with '-5683'
c Var 'aux1085' direct represents '1' with '5683'
c Var 'aux1085' order represents '1' with '1'
c Var 'aux1085' order represents '0' with '-5683'
c Encoding variable: aux1086 with domain: bool (representing constraint (1<=(aux618 + aux619 + aux620)))
c Var 'aux1086' direct represents '0' with '-5684'
c Var 'aux1086' direct represents '1' with '5684'
c Var 'aux1086' order represents '1' with '1'
c Var 'aux1086' order represents '0' with '-5684'
c Encoding variable: aux1087 with domain: bool (representing constraint ((aux621 + aux622 + aux623)<=1))
c Var 'aux1087' direct represents '0' with '-5685'
c Var 'aux1087' direct represents '1' with '5685'
c Var 'aux1087' order represents '1' with '1'
c Var 'aux1087' order represents '0' with '-5685'
c Encoding variable: aux1088 with domain: bool (representing constraint (1<=(aux621 + aux622 + aux623)))
c Var 'aux1088' direct represents '0' with '-5686'
c Var 'aux1088' direct represents '1' with '5686'
c Var 'aux1088' order represents '1' with '1'
c Var 'aux1088' order represents '0' with '-5686'
c Encoding variable: aux1089 with domain: bool (representing constraint ((aux624 + (field_00003_00007=8) + (field_00003_00009=8))<=1))
c Var 'aux1089' direct represents '0' with '-5687'
c Var 'aux1089' direct represents '1' with '5687'
c Var 'aux1089' order represents '1' with '1'
c Var 'aux1089' order represents '0' with '-5687'
c Encoding variable: aux1090 with domain: bool (representing constraint (1<=(aux624 + (field_00003_00007=8) + (field_00003_00009=8))))
c Var 'aux1090' direct represents '0' with '-5688'
c Var 'aux1090' direct represents '1' with '5688'
c Var 'aux1090' order represents '1' with '1'
c Var 'aux1090' order represents '0' with '-5688'
c Encoding variable: aux1091 with domain: bool (representing constraint ((aux625 + (field_00003_00009=9) + (field_00001_00008=9))<=1))
c Var 'aux1091' direct represents '0' with '-5689'
c Var 'aux1091' direct represents '1' with '5689'
c Var 'aux1091' order represents '1' with '1'
c Var 'aux1091' order represents '0' with '-5689'
c Encoding variable: aux1092 with domain: bool (representing constraint (1<=(aux625 + (field_00003_00009=9) + (field_00001_00008=9))))
c Var 'aux1092' direct represents '0' with '-5690'
c Var 'aux1092' direct represents '1' with '5690'
c Var 'aux1092' order represents '1' with '1'
c Var 'aux1092' order represents '0' with '-5690'
c Encoding variable: aux1093 with domain: bool (representing constraint (((field_00004_00002=1) + (field_00004_00003=1))<=1))
c Var 'aux1093' direct represents '0' with '-5691'
c Var 'aux1093' direct represents '1' with '5691'
c Var 'aux1093' order represents '1' with '1'
c Var 'aux1093' order represents '0' with '-5691'
c Encoding variable: aux1094 with domain: bool (representing constraint (1<=((field_00004_00002=1) + (field_00004_00003=1))))
c Var 'aux1094' direct represents '0' with '-5692'
c Var 'aux1094' direct represents '1' with '5692'
c Var 'aux1094' order represents '1' with '1'
c Var 'aux1094' order represents '0' with '-5692'
c Encoding variable: aux1095 with domain: bool (representing constraint ((aux626 + aux627 + aux629)<=1))
c Var 'aux1095' direct represents '0' with '-5693'
c Var 'aux1095' direct represents '1' with '5693'
c Var 'aux1095' order represents '1' with '1'
c Var 'aux1095' order represents '0' with '-5693'
c Encoding variable: aux1096 with domain: bool (representing constraint (1<=(aux626 + aux627 + aux629)))
c Var 'aux1096' direct represents '0' with '-5694'
c Var 'aux1096' direct represents '1' with '5694'
c Var 'aux1096' order represents '1' with '1'
c Var 'aux1096' order represents '0' with '-5694'
c Encoding variable: aux1097 with domain: bool (representing constraint ((aux630 + (field_00005_00003=3) + (field_00006_00002=3))<=1))
c Var 'aux1097' direct represents '0' with '-5695'
c Var 'aux1097' direct represents '1' with '5695'
c Var 'aux1097' order represents '1' with '1'
c Var 'aux1097' order represents '0' with '-5695'
c Encoding variable: aux1098 with domain: bool (representing constraint (1<=(aux630 + (field_00005_00003=3) + (field_00006_00002=3))))
c Var 'aux1098' direct represents '0' with '-5696'
c Var 'aux1098' direct represents '1' with '5696'
c Var 'aux1098' order represents '1' with '1'
c Var 'aux1098' order represents '0' with '-5696'
c Encoding variable: aux1099 with domain: bool (representing constraint ((aux631 + aux632 + aux633)<=1))
c Var 'aux1099' direct represents '0' with '-5697'
c Var 'aux1099' direct represents '1' with '5697'
c Var 'aux1099' order represents '1' with '1'
c Var 'aux1099' order represents '0' with '-5697'
c Encoding variable: aux1100 with domain: bool (representing constraint (1<=(aux631 + aux632 + aux633)))
c Var 'aux1100' direct represents '0' with '-5698'
c Var 'aux1100' direct represents '1' with '5698'
c Var 'aux1100' order represents '1' with '1'
c Var 'aux1100' order represents '0' with '-5698'
c Encoding variable: aux1101 with domain: bool (representing constraint ((aux634 + aux635 + aux636)<=1))
c Var 'aux1101' direct represents '0' with '-5699'
c Var 'aux1101' direct represents '1' with '5699'
c Var 'aux1101' order represents '1' with '1'
c Var 'aux1101' order represents '0' with '-5699'
c Encoding variable: aux1102 with domain: bool (representing constraint (1<=(aux634 + aux635 + aux636)))
c Var 'aux1102' direct represents '0' with '-5700'
c Var 'aux1102' direct represents '1' with '5700'
c Var 'aux1102' order represents '1' with '1'
c Var 'aux1102' order represents '0' with '-5700'
c Encoding variable: aux1103 with domain: bool (representing constraint ((aux638 + aux639 + aux641)<=1))
c Var 'aux1103' direct represents '0' with '-5701'
c Var 'aux1103' direct represents '1' with '5701'
c Var 'aux1103' order represents '1' with '1'
c Var 'aux1103' order represents '0' with '-5701'
c Encoding variable: aux1104 with domain: bool (representing constraint (1<=(aux638 + aux639 + aux641)))
c Var 'aux1104' direct represents '0' with '-5702'
c Var 'aux1104' direct represents '1' with '5702'
c Var 'aux1104' order represents '1' with '1'
c Var 'aux1104' order represents '0' with '-5702'
c Encoding variable: aux1105 with domain: bool (representing constraint ((aux642 + aux643 + aux644)<=1))
c Var 'aux1105' direct represents '0' with '-5703'
c Var 'aux1105' direct represents '1' with '5703'
c Var 'aux1105' order represents '1' with '1'
c Var 'aux1105' order represents '0' with '-5703'
c Encoding variable: aux1106 with domain: bool (representing constraint (1<=(aux642 + aux643 + aux644)))
c Var 'aux1106' direct represents '0' with '-5704'
c Var 'aux1106' direct represents '1' with '5704'
c Var 'aux1106' order represents '1' with '1'
c Var 'aux1106' order represents '0' with '-5704'
c Encoding variable: aux1107 with domain: bool (representing constraint ((aux645 + aux646 + (field_00005_00003=9))<=1))
c Var 'aux1107' direct represents '0' with '-5705'
c Var 'aux1107' direct represents '1' with '5705'
c Var 'aux1107' order represents '1' with '1'
c Var 'aux1107' order represents '0' with '-5705'
c Encoding variable: aux1108 with domain: bool (representing constraint (1<=(aux645 + aux646 + (field_00005_00003=9))))
c Var 'aux1108' direct represents '0' with '-5706'
c Var 'aux1108' direct represents '1' with '5706'
c Var 'aux1108' order represents '1' with '1'
c Var 'aux1108' order represents '0' with '-5706'
c Encoding variable: aux1109 with domain: bool (representing constraint ((aux647 + (field_00005_00006=1) + (field_00006_00005=1))<=1))
c Var 'aux1109' direct represents '0' with '-5707'
c Var 'aux1109' direct represents '1' with '5707'
c Var 'aux1109' order represents '1' with '1'
c Var 'aux1109' order represents '0' with '-5707'
c Encoding variable: aux1110 with domain: bool (representing constraint (1<=(aux647 + (field_00005_00006=1) + (field_00006_00005=1))))
c Var 'aux1110' direct represents '0' with '-5708'
c Var 'aux1110' direct represents '1' with '5708'
c Var 'aux1110' order represents '1' with '1'
c Var 'aux1110' order represents '0' with '-5708'
c Encoding variable: aux1111 with domain: bool (representing constraint ((aux648 + aux649 + aux650)<=1))
c Var 'aux1111' direct represents '0' with '-5709'
c Var 'aux1111' direct represents '1' with '5709'
c Var 'aux1111' order represents '1' with '1'
c Var 'aux1111' order represents '0' with '-5709'
c Encoding variable: aux1112 with domain: bool (representing constraint (1<=(aux648 + aux649 + aux650)))
c Var 'aux1112' direct represents '0' with '-5710'
c Var 'aux1112' direct represents '1' with '5710'
c Var 'aux1112' order represents '1' with '1'
c Var 'aux1112' order represents '0' with '-5710'
c Encoding variable: aux1113 with domain: bool (representing constraint ((aux651 + (field_00005_00006=3) + (field_00006_00005=3))<=1))
c Var 'aux1113' direct represents '0' with '-5711'
c Var 'aux1113' direct represents '1' with '5711'
c Var 'aux1113' order represents '1' with '1'
c Var 'aux1113' order represents '0' with '-5711'
c Encoding variable: aux1114 with domain: bool (representing constraint (1<=(aux651 + (field_00005_00006=3) + (field_00006_00005=3))))
c Var 'aux1114' direct represents '0' with '-5712'
c Var 'aux1114' direct represents '1' with '5712'
c Var 'aux1114' order represents '1' with '1'
c Var 'aux1114' order represents '0' with '-5712'
c Encoding variable: aux1115 with domain: bool (representing constraint ((aux652 + aux653 + aux654)<=1))
c Var 'aux1115' direct represents '0' with '-5713'
c Var 'aux1115' direct represents '1' with '5713'
c Var 'aux1115' order represents '1' with '1'
c Var 'aux1115' order represents '0' with '-5713'
c Encoding variable: aux1116 with domain: bool (representing constraint (1<=(aux652 + aux653 + aux654)))
c Var 'aux1116' direct represents '0' with '-5714'
c Var 'aux1116' direct represents '1' with '5714'
c Var 'aux1116' order represents '1' with '1'
c Var 'aux1116' order represents '0' with '-5714'
c Encoding variable: aux1117 with domain: bool (representing constraint ((aux655 + aux656 + aux657)<=1))
c Var 'aux1117' direct represents '0' with '-5715'
c Var 'aux1117' direct represents '1' with '5715'
c Var 'aux1117' order represents '1' with '1'
c Var 'aux1117' order represents '0' with '-5715'
c Encoding variable: aux1118 with domain: bool (representing constraint (1<=(aux655 + aux656 + aux657)))
c Var 'aux1118' direct represents '0' with '-5716'
c Var 'aux1118' direct represents '1' with '5716'
c Var 'aux1118' order represents '1' with '1'
c Var 'aux1118' order represents '0' with '-5716'
c Encoding variable: aux1119 with domain: bool (representing constraint ((aux659 + aux660 + aux662)<=1))
c Var 'aux1119' direct represents '0' with '-5717'
c Var 'aux1119' direct represents '1' with '5717'
c Var 'aux1119' order represents '1' with '1'
c Var 'aux1119' order represents '0' with '-5717'
c Encoding variable: aux1120 with domain: bool (representing constraint (1<=(aux659 + aux660 + aux662)))
c Var 'aux1120' direct represents '0' with '-5718'
c Var 'aux1120' direct represents '1' with '5718'
c Var 'aux1120' order represents '1' with '1'
c Var 'aux1120' order represents '0' with '-5718'
c Encoding variable: aux1121 with domain: bool (representing constraint ((aux663 + aux664 + aux665)<=1))
c Var 'aux1121' direct represents '0' with '-5719'
c Var 'aux1121' direct represents '1' with '5719'
c Var 'aux1121' order represents '1' with '1'
c Var 'aux1121' order represents '0' with '-5719'
c Encoding variable: aux1122 with domain: bool (representing constraint (1<=(aux663 + aux664 + aux665)))
c Var 'aux1122' direct represents '0' with '-5720'
c Var 'aux1122' direct represents '1' with '5720'
c Var 'aux1122' order represents '1' with '1'
c Var 'aux1122' order represents '0' with '-5720'
c Encoding variable: aux1123 with domain: bool (representing constraint (((field_00004_00005=9) + (field_00004_00006=9))<=1))
c Var 'aux1123' direct represents '0' with '-5721'
c Var 'aux1123' direct represents '1' with '5721'
c Var 'aux1123' order represents '1' with '1'
c Var 'aux1123' order represents '0' with '-5721'
c Encoding variable: aux1124 with domain: bool (representing constraint (1<=((field_00004_00005=9) + (field_00004_00006=9))))
c Var 'aux1124' direct represents '0' with '-5722'
c Var 'aux1124' direct represents '1' with '5722'
c Var 'aux1124' order represents '1' with '1'
c Var 'aux1124' order represents '0' with '-5722'
c Encoding variable: aux1125 with domain: bool (representing constraint ((aux666 + (field_00005_00009=1) + (field_00006_00007=1))<=1))
c Var 'aux1125' direct represents '0' with '-5723'
c Var 'aux1125' direct represents '1' with '5723'
c Var 'aux1125' order represents '1' with '1'
c Var 'aux1125' order represents '0' with '-5723'
c Encoding variable: aux1126 with domain: bool (representing constraint (1<=(aux666 + (field_00005_00009=1) + (field_00006_00007=1))))
c Var 'aux1126' direct represents '0' with '-5724'
c Var 'aux1126' direct represents '1' with '5724'
c Var 'aux1126' order represents '1' with '1'
c Var 'aux1126' order represents '0' with '-5724'
c Encoding variable: aux1127 with domain: bool (representing constraint ((aux667 + (field_00005_00008=2) + (field_00006_00007=2))<=1))
c Var 'aux1127' direct represents '0' with '-5725'
c Var 'aux1127' direct represents '1' with '5725'
c Var 'aux1127' order represents '1' with '1'
c Var 'aux1127' order represents '0' with '-5725'
c Encoding variable: aux1128 with domain: bool (representing constraint (1<=(aux667 + (field_00005_00008=2) + (field_00006_00007=2))))
c Var 'aux1128' direct represents '0' with '-5726'
c Var 'aux1128' direct represents '1' with '5726'
c Var 'aux1128' order represents '1' with '1'
c Var 'aux1128' order represents '0' with '-5726'
c Encoding variable: aux1129 with domain: bool (representing constraint (((field_00005_00008=4) + (field_00005_00009=4) + (field_00006_00008=4))<=1))
c Var 'aux1129' direct represents '0' with '-5727'
c Var 'aux1129' direct represents '1' with '5727'
c Var 'aux1129' order represents '1' with '1'
c Var 'aux1129' order represents '0' with '-5727'
c Encoding variable: aux1130 with domain: bool (representing constraint (1<=((field_00005_00008=4) + (field_00005_00009=4) + (field_00006_00008=4))))
c Var 'aux1130' direct represents '0' with '-5728'
c Var 'aux1130' direct represents '1' with '5728'
c Var 'aux1130' order represents '1' with '1'
c Var 'aux1130' order represents '0' with '-5728'
c Encoding variable: aux1131 with domain: bool (representing constraint ((aux668 + aux669 + aux670)<=1))
c Var 'aux1131' direct represents '0' with '-5729'
c Var 'aux1131' direct represents '1' with '5729'
c Var 'aux1131' order represents '1' with '1'
c Var 'aux1131' order represents '0' with '-5729'
c Encoding variable: aux1132 with domain: bool (representing constraint (1<=(aux668 + aux669 + aux670)))
c Var 'aux1132' direct represents '0' with '-5730'
c Var 'aux1132' direct represents '1' with '5730'
c Var 'aux1132' order represents '1' with '1'
c Var 'aux1132' order represents '0' with '-5730'
c Encoding variable: aux1133 with domain: bool (representing constraint ((aux671 + aux672 + aux673)<=1))
c Var 'aux1133' direct represents '0' with '-5731'
c Var 'aux1133' direct represents '1' with '5731'
c Var 'aux1133' order represents '1' with '1'
c Var 'aux1133' order represents '0' with '-5731'
c Encoding variable: aux1134 with domain: bool (representing constraint (1<=(aux671 + aux672 + aux673)))
c Var 'aux1134' direct represents '0' with '-5732'
c Var 'aux1134' direct represents '1' with '5732'
c Var 'aux1134' order represents '1' with '1'
c Var 'aux1134' order represents '0' with '-5732'
c Encoding variable: aux1135 with domain: bool (representing constraint ((aux674 + aux675 + (field_00005_00009=9))<=1))
c Var 'aux1135' direct represents '0' with '-5733'
c Var 'aux1135' direct represents '1' with '5733'
c Var 'aux1135' order represents '1' with '1'
c Var 'aux1135' order represents '0' with '-5733'
c Encoding variable: aux1136 with domain: bool (representing constraint (1<=(aux674 + aux675 + (field_00005_00009=9))))
c Var 'aux1136' direct represents '0' with '-5734'
c Var 'aux1136' direct represents '1' with '5734'
c Var 'aux1136' order represents '1' with '1'
c Var 'aux1136' order represents '0' with '-5734'
c Encoding variable: aux1137 with domain: bool (representing constraint (((field_00009_00001=1) + (field_00007_00001=1))<=1))
c Var 'aux1137' direct represents '0' with '-5735'
c Var 'aux1137' direct represents '1' with '5735'
c Var 'aux1137' order represents '1' with '1'
c Var 'aux1137' order represents '0' with '-5735'
c Encoding variable: aux1138 with domain: bool (representing constraint (1<=((field_00009_00001=1) + (field_00007_00001=1))))
c Var 'aux1138' direct represents '0' with '-5736'
c Var 'aux1138' direct represents '1' with '5736'
c Var 'aux1138' order represents '1' with '1'
c Var 'aux1138' order represents '0' with '-5736'
c Encoding variable: aux1139 with domain: bool (representing constraint ((aux676 + aux677 + aux679)<=1))
c Var 'aux1139' direct represents '0' with '-5737'
c Var 'aux1139' direct represents '1' with '5737'
c Var 'aux1139' order represents '1' with '1'
c Var 'aux1139' order represents '0' with '-5737'
c Encoding variable: aux1140 with domain: bool (representing constraint (1<=(aux676 + aux677 + aux679)))
c Var 'aux1140' direct represents '0' with '-5738'
c Var 'aux1140' direct represents '1' with '5738'
c Var 'aux1140' order represents '1' with '1'
c Var 'aux1140' order represents '0' with '-5738'
c Encoding variable: aux1141 with domain: bool (representing constraint ((aux680 + (field_00007_00003=3) + (field_00008_00002=3))<=1))
c Var 'aux1141' direct represents '0' with '-5739'
c Var 'aux1141' direct represents '1' with '5739'
c Var 'aux1141' order represents '1' with '1'
c Var 'aux1141' order represents '0' with '-5739'
c Encoding variable: aux1142 with domain: bool (representing constraint (1<=(aux680 + (field_00007_00003=3) + (field_00008_00002=3))))
c Var 'aux1142' direct represents '0' with '-5740'
c Var 'aux1142' direct represents '1' with '5740'
c Var 'aux1142' order represents '1' with '1'
c Var 'aux1142' order represents '0' with '-5740'
c Encoding variable: aux1143 with domain: bool (representing constraint ((aux681 + (field_00007_00003=4) + (field_00008_00002=4))<=1))
c Var 'aux1143' direct represents '0' with '-5741'
c Var 'aux1143' direct represents '1' with '5741'
c Var 'aux1143' order represents '1' with '1'
c Var 'aux1143' order represents '0' with '-5741'
c Encoding variable: aux1144 with domain: bool (representing constraint (1<=(aux681 + (field_00007_00003=4) + (field_00008_00002=4))))
c Var 'aux1144' direct represents '0' with '-5742'
c Var 'aux1144' direct represents '1' with '5742'
c Var 'aux1144' order represents '1' with '1'
c Var 'aux1144' order represents '0' with '-5742'
c Encoding variable: aux1145 with domain: bool (representing constraint ((aux683 + aux686 + aux687)<=1))
c Var 'aux1145' direct represents '0' with '-5743'
c Var 'aux1145' direct represents '1' with '5743'
c Var 'aux1145' order represents '1' with '1'
c Var 'aux1145' order represents '0' with '-5743'
c Encoding variable: aux1146 with domain: bool (representing constraint (1<=(aux683 + aux686 + aux687)))
c Var 'aux1146' direct represents '0' with '-5744'
c Var 'aux1146' direct represents '1' with '5744'
c Var 'aux1146' order represents '1' with '1'
c Var 'aux1146' order represents '0' with '-5744'
c Encoding variable: aux1147 with domain: bool (representing constraint ((aux689 + aux692 + aux693)<=1))
c Var 'aux1147' direct represents '0' with '-5745'
c Var 'aux1147' direct represents '1' with '5745'
c Var 'aux1147' order represents '1' with '1'
c Var 'aux1147' order represents '0' with '-5745'
c Encoding variable: aux1148 with domain: bool (representing constraint (1<=(aux689 + aux692 + aux693)))
c Var 'aux1148' direct represents '0' with '-5746'
c Var 'aux1148' direct represents '1' with '5746'
c Var 'aux1148' order represents '1' with '1'
c Var 'aux1148' order represents '0' with '-5746'
c Encoding variable: aux1149 with domain: bool (representing constraint ((aux695 + aux696 + aux698)<=1))
c Var 'aux1149' direct represents '0' with '-5747'
c Var 'aux1149' direct represents '1' with '5747'
c Var 'aux1149' order represents '1' with '1'
c Var 'aux1149' order represents '0' with '-5747'
c Encoding variable: aux1150 with domain: bool (representing constraint (1<=(aux695 + aux696 + aux698)))
c Var 'aux1150' direct represents '0' with '-5748'
c Var 'aux1150' direct represents '1' with '5748'
c Var 'aux1150' order represents '1' with '1'
c Var 'aux1150' order represents '0' with '-5748'
c Encoding variable: aux1151 with domain: bool (representing constraint ((aux700 + aux701 + aux703)<=1))
c Var 'aux1151' direct represents '0' with '-5749'
c Var 'aux1151' direct represents '1' with '5749'
c Var 'aux1151' order represents '1' with '1'
c Var 'aux1151' order represents '0' with '-5749'
c Encoding variable: aux1152 with domain: bool (representing constraint (1<=(aux700 + aux701 + aux703)))
c Var 'aux1152' direct represents '0' with '-5750'
c Var 'aux1152' direct represents '1' with '5750'
c Var 'aux1152' order represents '1' with '1'
c Var 'aux1152' order represents '0' with '-5750'
c Encoding variable: aux1153 with domain: bool (representing constraint ((aux704 + aux705 + aux707)<=1))
c Var 'aux1153' direct represents '0' with '-5751'
c Var 'aux1153' direct represents '1' with '5751'
c Var 'aux1153' order represents '1' with '1'
c Var 'aux1153' order represents '0' with '-5751'
c Encoding variable: aux1154 with domain: bool (representing constraint (1<=(aux704 + aux705 + aux707)))
c Var 'aux1154' direct represents '0' with '-5752'
c Var 'aux1154' direct represents '1' with '5752'
c Var 'aux1154' order represents '1' with '1'
c Var 'aux1154' order represents '0' with '-5752'
c Encoding variable: aux1155 with domain: bool (representing constraint (((field_00007_00004=1) + (field_00008_00004=1))<=1))
c Var 'aux1155' direct represents '0' with '-5753'
c Var 'aux1155' direct represents '1' with '5753'
c Var 'aux1155' order represents '1' with '1'
c Var 'aux1155' order represents '0' with '-5753'
c Encoding variable: aux1156 with domain: bool (representing constraint (1<=((field_00007_00004=1) + (field_00008_00004=1))))
c Var 'aux1156' direct represents '0' with '-5754'
c Var 'aux1156' direct represents '1' with '5754'
c Var 'aux1156' order represents '1' with '1'
c Var 'aux1156' order represents '0' with '-5754'
c Encoding variable: aux1157 with domain: bool (representing constraint ((aux708 + aux709 + aux710)<=1))
c Var 'aux1157' direct represents '0' with '-5755'
c Var 'aux1157' direct represents '1' with '5755'
c Var 'aux1157' order represents '1' with '1'
c Var 'aux1157' order represents '0' with '-5755'
c Encoding variable: aux1158 with domain: bool (representing constraint (1<=(aux708 + aux709 + aux710)))
c Var 'aux1158' direct represents '0' with '-5756'
c Var 'aux1158' direct represents '1' with '5756'
c Var 'aux1158' order represents '1' with '1'
c Var 'aux1158' order represents '0' with '-5756'
c Encoding variable: aux1159 with domain: bool (representing constraint ((aux711 + aux712 + aux713)<=1))
c Var 'aux1159' direct represents '0' with '-5757'
c Var 'aux1159' direct represents '1' with '5757'
c Var 'aux1159' order represents '1' with '1'
c Var 'aux1159' order represents '0' with '-5757'
c Encoding variable: aux1160 with domain: bool (representing constraint (1<=(aux711 + aux712 + aux713)))
c Var 'aux1160' direct represents '0' with '-5758'
c Var 'aux1160' direct represents '1' with '5758'
c Var 'aux1160' order represents '1' with '1'
c Var 'aux1160' order represents '0' with '-5758'
c Encoding variable: aux1161 with domain: bool (representing constraint ((aux714 + aux715 + aux716)<=1))
c Var 'aux1161' direct represents '0' with '-5759'
c Var 'aux1161' direct represents '1' with '5759'
c Var 'aux1161' order represents '1' with '1'
c Var 'aux1161' order represents '0' with '-5759'
c Encoding variable: aux1162 with domain: bool (representing constraint (1<=(aux714 + aux715 + aux716)))
c Var 'aux1162' direct represents '0' with '-5760'
c Var 'aux1162' direct represents '1' with '5760'
c Var 'aux1162' order represents '1' with '1'
c Var 'aux1162' order represents '0' with '-5760'
c Encoding variable: aux1163 with domain: bool (representing constraint ((aux718 + aux719 + aux721)<=1))
c Var 'aux1163' direct represents '0' with '-5761'
c Var 'aux1163' direct represents '1' with '5761'
c Var 'aux1163' order represents '1' with '1'
c Var 'aux1163' order represents '0' with '-5761'
c Encoding variable: aux1164 with domain: bool (representing constraint (1<=(aux718 + aux719 + aux721)))
c Var 'aux1164' direct represents '0' with '-5762'
c Var 'aux1164' direct represents '1' with '5762'
c Var 'aux1164' order represents '1' with '1'
c Var 'aux1164' order represents '0' with '-5762'
c Encoding variable: aux1165 with domain: bool (representing constraint ((aux723 + aux724 + aux726)<=1))
c Var 'aux1165' direct represents '0' with '-5763'
c Var 'aux1165' direct represents '1' with '5763'
c Var 'aux1165' order represents '1' with '1'
c Var 'aux1165' order represents '0' with '-5763'
c Encoding variable: aux1166 with domain: bool (representing constraint (1<=(aux723 + aux724 + aux726)))
c Var 'aux1166' direct represents '0' with '-5764'
c Var 'aux1166' direct represents '1' with '5764'
c Var 'aux1166' order represents '1' with '1'
c Var 'aux1166' order represents '0' with '-5764'
c Encoding variable: aux1167 with domain: bool (representing constraint ((aux727 + aux728 + aux729)<=1))
c Var 'aux1167' direct represents '0' with '-5765'
c Var 'aux1167' direct represents '1' with '5765'
c Var 'aux1167' order represents '1' with '1'
c Var 'aux1167' order represents '0' with '-5765'
c Encoding variable: aux1168 with domain: bool (representing constraint (1<=(aux727 + aux728 + aux729)))
c Var 'aux1168' direct represents '0' with '-5766'
c Var 'aux1168' direct represents '1' with '5766'
c Var 'aux1168' order represents '1' with '1'
c Var 'aux1168' order represents '0' with '-5766'
c Encoding variable: aux1169 with domain: bool (representing constraint ((aux730 + aux731 + aux732)<=1))
c Var 'aux1169' direct represents '0' with '-5767'
c Var 'aux1169' direct represents '1' with '5767'
c Var 'aux1169' order represents '1' with '1'
c Var 'aux1169' order represents '0' with '-5767'
c Encoding variable: aux1170 with domain: bool (representing constraint (1<=(aux730 + aux731 + aux732)))
c Var 'aux1170' direct represents '0' with '-5768'
c Var 'aux1170' direct represents '1' with '5768'
c Var 'aux1170' order represents '1' with '1'
c Var 'aux1170' order represents '0' with '-5768'
c Encoding variable: aux1171 with domain: bool (representing constraint ((aux733 + aux734 + aux736)<=1))
c Var 'aux1171' direct represents '0' with '-5769'
c Var 'aux1171' direct represents '1' with '5769'
c Var 'aux1171' order represents '1' with '1'
c Var 'aux1171' order represents '0' with '-5769'
c Encoding variable: aux1172 with domain: bool (representing constraint (1<=(aux733 + aux734 + aux736)))
c Var 'aux1172' direct represents '0' with '-5770'
c Var 'aux1172' direct represents '1' with '5770'
c Var 'aux1172' order represents '1' with '1'
c Var 'aux1172' order represents '0' with '-5770'
c Encoding variable: aux1173 with domain: bool (representing constraint ((aux737 + aux738 + (field_00007_00008=2))<=1))
c Var 'aux1173' direct represents '0' with '-5771'
c Var 'aux1173' direct represents '1' with '5771'
c Var 'aux1173' order represents '1' with '1'
c Var 'aux1173' order represents '0' with '-5771'
c Encoding variable: aux1174 with domain: bool (representing constraint (1<=(aux737 + aux738 + (field_00007_00008=2))))
c Var 'aux1174' direct represents '0' with '-5772'
c Var 'aux1174' direct represents '1' with '5772'
c Var 'aux1174' order represents '1' with '1'
c Var 'aux1174' order represents '0' with '-5772'
c Encoding variable: aux1175 with domain: bool (representing constraint (((field_00007_00008=3) + (field_00008_00008=3))<=1))
c Var 'aux1175' direct represents '0' with '-5773'
c Var 'aux1175' direct represents '1' with '5773'
c Var 'aux1175' order represents '1' with '1'
c Var 'aux1175' order represents '0' with '-5773'
c Encoding variable: aux1176 with domain: bool (representing constraint (1<=((field_00007_00008=3) + (field_00008_00008=3))))
c Var 'aux1176' direct represents '0' with '-5774'
c Var 'aux1176' direct represents '1' with '5774'
c Var 'aux1176' order represents '1' with '1'
c Var 'aux1176' order represents '0' with '-5774'
c Encoding variable: aux1177 with domain: bool (representing constraint ((aux740 + aux741 + aux743)<=1))
c Var 'aux1177' direct represents '0' with '-5775'
c Var 'aux1177' direct represents '1' with '5775'
c Var 'aux1177' order represents '1' with '1'
c Var 'aux1177' order represents '0' with '-5775'
c Encoding variable: aux1178 with domain: bool (representing constraint (1<=(aux740 + aux741 + aux743)))
c Var 'aux1178' direct represents '0' with '-5776'
c Var 'aux1178' direct represents '1' with '5776'
c Var 'aux1178' order represents '1' with '1'
c Var 'aux1178' order represents '0' with '-5776'
c Encoding variable: aux1179 with domain: bool (representing constraint (((field_00009_00009=6) + (field_00007_00009=6) + (field_00008_00009=6))<=1))
c Var 'aux1179' direct represents '0' with '-5777'
c Var 'aux1179' direct represents '1' with '5777'
c Var 'aux1179' order represents '1' with '1'
c Var 'aux1179' order represents '0' with '-5777'
c Encoding variable: aux1180 with domain: bool (representing constraint (1<=((field_00009_00009=6) + (field_00007_00009=6) + (field_00008_00009=6))))
c Var 'aux1180' direct represents '0' with '-5778'
c Var 'aux1180' direct represents '1' with '5778'
c Var 'aux1180' order represents '1' with '1'
c Var 'aux1180' order represents '0' with '-5778'
c Encoding variable: aux1181 with domain: bool (representing constraint ((aux745 + aux746 + aux748)<=1))
c Var 'aux1181' direct represents '0' with '-5779'
c Var 'aux1181' direct represents '1' with '5779'
c Var 'aux1181' order represents '1' with '1'
c Var 'aux1181' order represents '0' with '-5779'
c Encoding variable: aux1182 with domain: bool (representing constraint (1<=(aux745 + aux746 + aux748)))
c Var 'aux1182' direct represents '0' with '-5780'
c Var 'aux1182' direct represents '1' with '5780'
c Var 'aux1182' order represents '1' with '1'
c Var 'aux1182' order represents '0' with '-5780'
c Encoding variable: aux1183 with domain: bool (representing constraint ((aux749 + aux750 + (field_00007_00009=8))<=1))
c Var 'aux1183' direct represents '0' with '-5781'
c Var 'aux1183' direct represents '1' with '5781'
c Var 'aux1183' order represents '1' with '1'
c Var 'aux1183' order represents '0' with '-5781'
c Encoding variable: aux1184 with domain: bool (representing constraint (1<=(aux749 + aux750 + (field_00007_00009=8))))
c Var 'aux1184' direct represents '0' with '-5782'
c Var 'aux1184' direct represents '1' with '5782'
c Var 'aux1184' order represents '1' with '1'
c Var 'aux1184' order represents '0' with '-5782'
c Encoding variable: aux1185 with domain: bool (representing constraint ((aux751 + aux752 + aux754)<=1))
c Var 'aux1185' direct represents '0' with '-5783'
c Var 'aux1185' direct represents '1' with '5783'
c Var 'aux1185' order represents '1' with '1'
c Var 'aux1185' order represents '0' with '-5783'
c Encoding variable: aux1186 with domain: bool (representing constraint (1<=(aux751 + aux752 + aux754)))
c Var 'aux1186' direct represents '0' with '-5784'
c Var 'aux1186' direct represents '1' with '5784'
c Var 'aux1186' order represents '1' with '1'
c Var 'aux1186' order represents '0' with '-5784'
c (((variant_fields_00001_00002_00001 + variant_fields_00001_00002_00002 + variant_fields_00001_00002_00003)<=8)=tv=SATLiteral(5353))
-5353 -528 -529 0
5353 529 0
5353 528 0
c ((8<=(variant_fields_00001_00002_00001 + variant_fields_00001_00002_00002 + variant_fields_00001_00002_00003))=tv=SATLiteral(5354))
-5354 528 529 0
5354 -529 0
5354 -528 0
c (((aux235 + shift(variant_fields_00001_00004_00002, -1) + shift(variant_fields_00001_00004_00003, -1))<=6)=tv=SATLiteral(5355))
-5355 605 609 0
-5355 606 608 0
5355 -608 0
5355 -606 -609 0
5355 -605 0
c ((6<=(aux235 + shift(variant_fields_00001_00004_00002, -1) + shift(variant_fields_00001_00004_00003, -1)))=tv=SATLiteral(5356))
-5356 -606 -609 0
-5356 -605 -609 0
5356 609 0
5356 605 609 0
5356 606 0
c (((aux237 + aux239 + aux240)<=16)=tv=SATLiteral(5357))
-5357 3053 0
-5357 2991 3051 0
-5357 2992 3049 0
-5357 2994 3047 0
-5357 2996 3045 0
-5357 2998 3043 0
-5357 3000 3041 0
-5357 3002 3039 0
-5357 3004 3037 0
-5357 3006 3035 0
-5357 3008 3033 0
-5357 3010 3031 0
-5357 3012 3029 0
-5357 3014 3027 0
-5357 3016 3025 0
-5357 3018 3023 0
-5357 3020 3022 0
-5357 2933 3051 0
-5357 2933 2991 3049 0
-5357 2933 2992 3047 0
-5357 2933 2994 3045 0
-5357 2933 2996 3043 0
-5357 2933 2998 3041 0
-5357 2933 3000 3039 0
-5357 2933 3002 3037 0
-5357 2933 3004 3035 0
-5357 2933 3006 3033 0
-5357 2933 3008 3031 0
-5357 2933 3010 3029 0
-5357 2933 3012 3027 0
-5357 2933 3014 3025 0
-5357 2933 3016 3023 0
-5357 2933 3018 3022 0
-5357 2933 3020 0
-5357 2934 3049 0
-5357 2934 2991 3047 0
-5357 2934 2992 3045 0
-5357 2934 2994 3043 0
-5357 2934 2996 3041 0
-5357 2934 2998 3039 0
-5357 2934 3000 3037 0
-5357 2934 3002 3035 0
-5357 2934 3004 3033 0
-5357 2934 3006 3031 0
-5357 2934 3008 3029 0
-5357 2934 3010 3027 0
-5357 2934 3012 3025 0
-5357 2934 3014 3023 0
-5357 2934 3016 3022 0
-5357 2934 3018 0
-5357 2934 3020 0
-5357 2936 3047 0
-5357 2936 2991 3045 0
-5357 2936 2992 3043 0
-5357 2936 2994 3041 0
-5357 2936 2996 3039 0
-5357 2936 2998 3037 0
-5357 2936 3000 3035 0
-5357 2936 3002 3033 0
-5357 2936 3004 3031 0
-5357 2936 3006 3029 0
-5357 2936 3008 3027 0
-5357 2936 3010 3025 0
-5357 2936 3012 3023 0
-5357 2936 3014 3022 0
-5357 2936 3016 0
-5357 2936 3018 0
-5357 2936 3020 0
-5357 2938 3045 0
-5357 2938 2991 3043 0
-5357 2938 2992 3041 0
-5357 2938 2994 3039 0
-5357 2938 2996 3037 0
-5357 2938 2998 3035 0
-5357 2938 3000 3033 0
-5357 2938 3002 3031 0
-5357 2938 3004 3029 0
-5357 2938 3006 3027 0
-5357 2938 3008 3025 0
-5357 2938 3010 3023 0
-5357 2938 3012 3022 0
-5357 2938 3014 0
-5357 2938 3016 0
-5357 2938 3018 0
-5357 2938 3020 0
-5357 2940 3043 0
-5357 2940 2991 3041 0
-5357 2940 2992 3039 0
-5357 2940 2994 3037 0
-5357 2940 2996 3035 0
-5357 2940 2998 3033 0
-5357 2940 3000 3031 0
-5357 2940 3002 3029 0
-5357 2940 3004 3027 0
-5357 2940 3006 3025 0
-5357 2940 3008 3023 0
-5357 2940 3010 3022 0
-5357 2940 3012 0
-5357 2940 3014 0
-5357 2940 3016 0
-5357 2940 3018 0
-5357 2940 3020 0
-5357 2942 3041 0
-5357 2942 2991 3039 0
-5357 2942 2992 3037 0
-5357 2942 2994 3035 0
-5357 2942 2996 3033 0
-5357 2942 2998 3031 0
-5357 2942 3000 3029 0
-5357 2942 3002 3027 0
-5357 2942 3004 3025 0
-5357 2942 3006 3023 0
-5357 2942 3008 3022 0
-5357 2942 3010 0
-5357 2942 3012 0
-5357 2942 3014 0
-5357 2942 3016 0
-5357 2942 3018 0
-5357 2942 3020 0
-5357 2944 3039 0
-5357 2944 2991 3037 0
-5357 2944 2992 3035 0
-5357 2944 2994 3033 0
-5357 2944 2996 3031 0
-5357 2944 2998 3029 0
-5357 2944 3000 3027 0
-5357 2944 3002 3025 0
-5357 2944 3004 3023 0
-5357 2944 3006 3022 0
-5357 2944 3008 0
-5357 2944 3010 0
-5357 2944 3012 0
-5357 2944 3014 0
-5357 2944 3016 0
-5357 2944 3018 0
-5357 2944 3020 0
-5357 2946 3037 0
-5357 2946 2991 3035 0
-5357 2946 2992 3033 0
-5357 2946 2994 3031 0
-5357 2946 2996 3029 0
-5357 2946 2998 3027 0
-5357 2946 3000 3025 0
-5357 2946 3002 3023 0
-5357 2946 3004 3022 0
-5357 2946 3006 0
-5357 2946 3008 0
-5357 2946 3010 0
-5357 2946 3012 0
-5357 2946 3014 0
-5357 2946 3016 0
-5357 2946 3018 0
-5357 2946 3020 0
-5357 2948 3035 0
-5357 2948 2991 3033 0
-5357 2948 2992 3031 0
-5357 2948 2994 3029 0
-5357 2948 2996 3027 0
-5357 2948 2998 3025 0
-5357 2948 3000 3023 0
-5357 2948 3002 3022 0
-5357 2948 3004 0
-5357 2948 3006 0
-5357 2948 3008 0
-5357 2948 3010 0
-5357 2948 3012 0
-5357 2948 3014 0
-5357 2948 3016 0
-5357 2948 3018 0
-5357 2948 3020 0
-5357 2950 3033 0
-5357 2950 2991 3031 0
-5357 2950 2992 3029 0
-5357 2950 2994 3027 0
-5357 2950 2996 3025 0
-5357 2950 2998 3023 0
-5357 2950 3000 3022 0
-5357 2950 3002 0
-5357 2950 3004 0
-5357 2950 3006 0
-5357 2950 3008 0
-5357 2950 3010 0
-5357 2950 3012 0
-5357 2950 3014 0
-5357 2950 3016 0
-5357 2950 3018 0
-5357 2950 3020 0
-5357 2952 3031 0
-5357 2952 2991 3029 0
-5357 2952 2992 3027 0
-5357 2952 2994 3025 0
-5357 2952 2996 3023 0
-5357 2952 2998 3022 0
-5357 2952 3000 0
-5357 2952 3002 0
-5357 2952 3004 0
-5357 2952 3006 0
-5357 2952 3008 0
-5357 2952 3010 0
-5357 2952 3012 0
-5357 2952 3014 0
-5357 2952 3016 0
-5357 2952 3018 0
-5357 2952 3020 0
-5357 2954 3029 0
-5357 2954 2991 3027 0
-5357 2954 2992 3025 0
-5357 2954 2994 3023 0
-5357 2954 2996 3022 0
-5357 2954 2998 0
-5357 2954 3000 0
-5357 2954 3002 0
-5357 2954 3004 0
-5357 2954 3006 0
-5357 2954 3008 0
-5357 2954 3010 0
-5357 2954 3012 0
-5357 2954 3014 0
-5357 2954 3016 0
-5357 2954 3018 0
-5357 2954 3020 0
-5357 2956 3027 0
-5357 2956 2991 3025 0
-5357 2956 2992 3023 0
-5357 2956 2994 3022 0
-5357 2956 2996 0
-5357 2956 2998 0
-5357 2956 3000 0
-5357 2956 3002 0
-5357 2956 3004 0
-5357 2956 3006 0
-5357 2956 3008 0
-5357 2956 3010 0
-5357 2956 3012 0
-5357 2956 3014 0
-5357 2956 3016 0
-5357 2956 3018 0
-5357 2956 3020 0
-5357 2958 3025 0
-5357 2958 2991 3023 0
-5357 2958 2992 3022 0
-5357 2958 2994 0
-5357 2958 2996 0
-5357 2958 2998 0
-5357 2958 3000 0
-5357 2958 3002 0
-5357 2958 3004 0
-5357 2958 3006 0
-5357 2958 3008 0
-5357 2958 3010 0
-5357 2958 3012 0
-5357 2958 3014 0
-5357 2958 3016 0
-5357 2958 3018 0
-5357 2958 3020 0
-5357 2960 3023 0
-5357 2960 2991 3022 0
-5357 2960 2992 0
-5357 2960 2994 0
-5357 2960 2996 0
-5357 2960 2998 0
-5357 2960 3000 0
-5357 2960 3002 0
-5357 2960 3004 0
-5357 2960 3006 0
-5357 2960 3008 0
-5357 2960 3010 0
-5357 2960 3012 0
-5357 2960 3014 0
-5357 2960 3016 0
-5357 2960 3018 0
-5357 2960 3020 0
-5357 2962 3022 0
-5357 2962 2991 0
-5357 2962 2992 0
-5357 2962 2994 0
-5357 2962 2996 0
-5357 2962 2998 0
-5357 2962 3000 0
-5357 2962 3002 0
-5357 2962 3004 0
-5357 2962 3006 0
-5357 2962 3008 0
-5357 2962 3010 0
-5357 2962 3012 0
-5357 2962 3014 0
-5357 2962 3016 0
-5357 2962 3018 0
-5357 2962 3020 0
5357 -2991 -3022 0
5357 -2962 -2992 -3022 0
5357 -2962 -2991 -3023 0
5357 -2960 -2994 -3022 0
5357 -2960 -2992 -3023 0
5357 -2960 -2991 -3025 0
5357 -2958 -2996 -3022 0
5357 -2958 -2994 -3023 0
5357 -2958 -2992 -3025 0
5357 -2958 -2991 -3027 0
5357 -2956 -2998 -3022 0
5357 -2956 -2996 -3023 0
5357 -2956 -2994 -3025 0
5357 -2956 -2992 -3027 0
5357 -2956 -2991 -3029 0
5357 -2954 -3000 -3022 0
5357 -2954 -2998 -3023 0
5357 -2954 -2996 -3025 0
5357 -2954 -2994 -3027 0
5357 -2954 -2992 -3029 0
5357 -2954 -2991 -3031 0
5357 -2952 -3002 -3022 0
5357 -2952 -3000 -3023 0
5357 -2952 -2998 -3025 0
5357 -2952 -2996 -3027 0
5357 -2952 -2994 -3029 0
5357 -2952 -2992 -3031 0
5357 -2952 -2991 -3033 0
5357 -2950 -3004 -3022 0
5357 -2950 -3002 -3023 0
5357 -2950 -3000 -3025 0
5357 -2950 -2998 -3027 0
5357 -2950 -2996 -3029 0
5357 -2950 -2994 -3031 0
5357 -2950 -2992 -3033 0
5357 -2950 -2991 -3035 0
5357 -2948 -3006 -3022 0
5357 -2948 -3004 -3023 0
5357 -2948 -3002 -3025 0
5357 -2948 -3000 -3027 0
5357 -2948 -2998 -3029 0
5357 -2948 -2996 -3031 0
5357 -2948 -2994 -3033 0
5357 -2948 -2992 -3035 0
5357 -2948 -2991 -3037 0
5357 -2946 -3008 -3022 0
5357 -2946 -3006 -3023 0
5357 -2946 -3004 -3025 0
5357 -2946 -3002 -3027 0
5357 -2946 -3000 -3029 0
5357 -2946 -2998 -3031 0
5357 -2946 -2996 -3033 0
5357 -2946 -2994 -3035 0
5357 -2946 -2992 -3037 0
5357 -2946 -2991 -3039 0
5357 -2944 -3010 -3022 0
5357 -2944 -3008 -3023 0
5357 -2944 -3006 -3025 0
5357 -2944 -3004 -3027 0
5357 -2944 -3002 -3029 0
5357 -2944 -3000 -3031 0
5357 -2944 -2998 -3033 0
5357 -2944 -2996 -3035 0
5357 -2944 -2994 -3037 0
5357 -2944 -2992 -3039 0
5357 -2944 -2991 -3041 0
5357 -2942 -3012 -3022 0
5357 -2942 -3010 -3023 0
5357 -2942 -3008 -3025 0
5357 -2942 -3006 -3027 0
5357 -2942 -3004 -3029 0
5357 -2942 -3002 -3031 0
5357 -2942 -3000 -3033 0
5357 -2942 -2998 -3035 0
5357 -2942 -2996 -3037 0
5357 -2942 -2994 -3039 0
5357 -2942 -2992 -3041 0
5357 -2942 -2991 -3043 0
5357 -2940 -3014 -3022 0
5357 -2940 -3012 -3023 0
5357 -2940 -3010 -3025 0
5357 -2940 -3008 -3027 0
5357 -2940 -3006 -3029 0
5357 -2940 -3004 -3031 0
5357 -2940 -3002 -3033 0
5357 -2940 -3000 -3035 0
5357 -2940 -2998 -3037 0
5357 -2940 -2996 -3039 0
5357 -2940 -2994 -3041 0
5357 -2940 -2992 -3043 0
5357 -2940 -2991 -3045 0
5357 -2938 -3016 -3022 0
5357 -2938 -3014 -3023 0
5357 -2938 -3012 -3025 0
5357 -2938 -3010 -3027 0
5357 -2938 -3008 -3029 0
5357 -2938 -3006 -3031 0
5357 -2938 -3004 -3033 0
5357 -2938 -3002 -3035 0
5357 -2938 -3000 -3037 0
5357 -2938 -2998 -3039 0
5357 -2938 -2996 -3041 0
5357 -2938 -2994 -3043 0
5357 -2938 -2992 -3045 0
5357 -2938 -2991 -3047 0
5357 -2936 -3018 -3022 0
5357 -2936 -3016 -3023 0
5357 -2936 -3014 -3025 0
5357 -2936 -3012 -3027 0
5357 -2936 -3010 -3029 0
5357 -2936 -3008 -3031 0
5357 -2936 -3006 -3033 0
5357 -2936 -3004 -3035 0
5357 -2936 -3002 -3037 0
5357 -2936 -3000 -3039 0
5357 -2936 -2998 -3041 0
5357 -2936 -2996 -3043 0
5357 -2936 -2994 -3045 0
5357 -2936 -2992 -3047 0
5357 -2936 -2991 -3049 0
5357 -2934 -3020 -3022 0
5357 -2934 -3018 -3023 0
5357 -2934 -3016 -3025 0
5357 -2934 -3014 -3027 0
5357 -2934 -3012 -3029 0
5357 -2934 -3010 -3031 0
5357 -2934 -3008 -3033 0
5357 -2934 -3006 -3035 0
5357 -2934 -3004 -3037 0
5357 -2934 -3002 -3039 0
5357 -2934 -3000 -3041 0
5357 -2934 -2998 -3043 0
5357 -2934 -2996 -3045 0
5357 -2934 -2994 -3047 0
5357 -2934 -2992 -3049 0
5357 -2934 -2991 -3051 0
5357 -2933 -3022 0
5357 -2933 -3020 -3023 0
5357 -2933 -3018 -3025 0
5357 -2933 -3016 -3027 0
5357 -2933 -3014 -3029 0
5357 -2933 -3012 -3031 0
5357 -2933 -3010 -3033 0
5357 -2933 -3008 -3035 0
5357 -2933 -3006 -3037 0
5357 -2933 -3004 -3039 0
5357 -2933 -3002 -3041 0
5357 -2933 -3000 -3043 0
5357 -2933 -2998 -3045 0
5357 -2933 -2996 -3047 0
5357 -2933 -2994 -3049 0
5357 -2933 -2992 -3051 0
5357 -2933 -2991 -3053 0
c ((16<=(aux237 + aux239 + aux240))=tv=SATLiteral(5358))
-5358 -2962 -2991 -3022 0
-5358 -2960 -2992 -3022 0
-5358 -2960 -2991 -3023 0
-5358 -2958 -2994 -3022 0
-5358 -2958 -2992 -3023 0
-5358 -2958 -2991 -3025 0
-5358 -2956 -2996 -3022 0
-5358 -2956 -2994 -3023 0
-5358 -2956 -2992 -3025 0
-5358 -2956 -2991 -3027 0
-5358 -2954 -2998 -3022 0
-5358 -2954 -2996 -3023 0
-5358 -2954 -2994 -3025 0
-5358 -2954 -2992 -3027 0
-5358 -2954 -2991 -3029 0
-5358 -2952 -3000 -3022 0
-5358 -2952 -2998 -3023 0
-5358 -2952 -2996 -3025 0
-5358 -2952 -2994 -3027 0
-5358 -2952 -2992 -3029 0
-5358 -2952 -2991 -3031 0
-5358 -2950 -3002 -3022 0
-5358 -2950 -3000 -3023 0
-5358 -2950 -2998 -3025 0
-5358 -2950 -2996 -3027 0
-5358 -2950 -2994 -3029 0
-5358 -2950 -2992 -3031 0
-5358 -2950 -2991 -3033 0
-5358 -2948 -3004 -3022 0
-5358 -2948 -3002 -3023 0
-5358 -2948 -3000 -3025 0
-5358 -2948 -2998 -3027 0
-5358 -2948 -2996 -3029 0
-5358 -2948 -2994 -3031 0
-5358 -2948 -2992 -3033 0
-5358 -2948 -2991 -3035 0
-5358 -2946 -3006 -3022 0
-5358 -2946 -3004 -3023 0
-5358 -2946 -3002 -3025 0
-5358 -2946 -3000 -3027 0
-5358 -2946 -2998 -3029 0
-5358 -2946 -2996 -3031 0
-5358 -2946 -2994 -3033 0
-5358 -2946 -2992 -3035 0
-5358 -2946 -2991 -3037 0
-5358 -2944 -3008 -3022 0
-5358 -2944 -3006 -3023 0
-5358 -2944 -3004 -3025 0
-5358 -2944 -3002 -3027 0
-5358 -2944 -3000 -3029 0
-5358 -2944 -2998 -3031 0
-5358 -2944 -2996 -3033 0
-5358 -2944 -2994 -3035 0
-5358 -2944 -2992 -3037 0
-5358 -2944 -2991 -3039 0
-5358 -2942 -3010 -3022 0
-5358 -2942 -3008 -3023 0
-5358 -2942 -3006 -3025 0
-5358 -2942 -3004 -3027 0
-5358 -2942 -3002 -3029 0
-5358 -2942 -3000 -3031 0
-5358 -2942 -2998 -3033 0
-5358 -2942 -2996 -3035 0
-5358 -2942 -2994 -3037 0
-5358 -2942 -2992 -3039 0
-5358 -2942 -2991 -3041 0
-5358 -2940 -3012 -3022 0
-5358 -2940 -3010 -3023 0
-5358 -2940 -3008 -3025 0
-5358 -2940 -3006 -3027 0
-5358 -2940 -3004 -3029 0
-5358 -2940 -3002 -3031 0
-5358 -2940 -3000 -3033 0
-5358 -2940 -2998 -3035 0
-5358 -2940 -2996 -3037 0
-5358 -2940 -2994 -3039 0
-5358 -2940 -2992 -3041 0
-5358 -2940 -2991 -3043 0
-5358 -2938 -3014 -3022 0
-5358 -2938 -3012 -3023 0
-5358 -2938 -3010 -3025 0
-5358 -2938 -3008 -3027 0
-5358 -2938 -3006 -3029 0
-5358 -2938 -3004 -3031 0
-5358 -2938 -3002 -3033 0
-5358 -2938 -3000 -3035 0
-5358 -2938 -2998 -3037 0
-5358 -2938 -2996 -3039 0
-5358 -2938 -2994 -3041 0
-5358 -2938 -2992 -3043 0
-5358 -2938 -2991 -3045 0
-5358 -2936 -3016 -3022 0
-5358 -2936 -3014 -3023 0
-5358 -2936 -3012 -3025 0
-5358 -2936 -3010 -3027 0
-5358 -2936 -3008 -3029 0
-5358 -2936 -3006 -3031 0
-5358 -2936 -3004 -3033 0
-5358 -2936 -3002 -3035 0
-5358 -2936 -3000 -3037 0
-5358 -2936 -2998 -3039 0
-5358 -2936 -2996 -3041 0
-5358 -2936 -2994 -3043 0
-5358 -2936 -2992 -3045 0
-5358 -2936 -2991 -3047 0
-5358 -2934 -3018 -3022 0
-5358 -2934 -3016 -3023 0
-5358 -2934 -3014 -3025 0
-5358 -2934 -3012 -3027 0
-5358 -2934 -3010 -3029 0
-5358 -2934 -3008 -3031 0
-5358 -2934 -3006 -3033 0
-5358 -2934 -3004 -3035 0
-5358 -2934 -3002 -3037 0
-5358 -2934 -3000 -3039 0
-5358 -2934 -2998 -3041 0
-5358 -2934 -2996 -3043 0
-5358 -2934 -2994 -3045 0
-5358 -2934 -2992 -3047 0
-5358 -2934 -2991 -3049 0
-5358 -2933 -3020 -3022 0
-5358 -2933 -3018 -3023 0
-5358 -2933 -3016 -3025 0
-5358 -2933 -3014 -3027 0
-5358 -2933 -3012 -3029 0
-5358 -2933 -3010 -3031 0
-5358 -2933 -3008 -3033 0
-5358 -2933 -3006 -3035 0
-5358 -2933 -3004 -3037 0
-5358 -2933 -3002 -3039 0
-5358 -2933 -3000 -3041 0
-5358 -2933 -2998 -3043 0
-5358 -2933 -2996 -3045 0
-5358 -2933 -2994 -3047 0
-5358 -2933 -2992 -3049 0
-5358 -2933 -2991 -3051 0
5358 3051 0
5358 2991 3049 0
5358 2992 3047 0
5358 2994 3045 0
5358 2996 3043 0
5358 2998 3041 0
5358 3000 3039 0
5358 3002 3037 0
5358 3004 3035 0
5358 3006 3033 0
5358 3008 3031 0
5358 3010 3029 0
5358 3012 3027 0
5358 3014 3025 0
5358 3016 3023 0
5358 3018 3022 0
5358 3020 0
5358 2933 3049 0
5358 2933 2991 3047 0
5358 2933 2992 3045 0
5358 2933 2994 3043 0
5358 2933 2996 3041 0
5358 2933 2998 3039 0
5358 2933 3000 3037 0
5358 2933 3002 3035 0
5358 2933 3004 3033 0
5358 2933 3006 3031 0
5358 2933 3008 3029 0
5358 2933 3010 3027 0
5358 2933 3012 3025 0
5358 2933 3014 3023 0
5358 2933 3016 3022 0
5358 2933 3018 0
5358 2933 3020 0
5358 2934 3047 0
5358 2934 2991 3045 0
5358 2934 2992 3043 0
5358 2934 2994 3041 0
5358 2934 2996 3039 0
5358 2934 2998 3037 0
5358 2934 3000 3035 0
5358 2934 3002 3033 0
5358 2934 3004 3031 0
5358 2934 3006 3029 0
5358 2934 3008 3027 0
5358 2934 3010 3025 0
5358 2934 3012 3023 0
5358 2934 3014 3022 0
5358 2934 3016 0
5358 2934 3018 0
5358 2934 3020 0
5358 2936 3045 0
5358 2936 2991 3043 0
5358 2936 2992 3041 0
5358 2936 2994 3039 0
5358 2936 2996 3037 0
5358 2936 2998 3035 0
5358 2936 3000 3033 0
5358 2936 3002 3031 0
5358 2936 3004 3029 0
5358 2936 3006 3027 0
5358 2936 3008 3025 0
5358 2936 3010 3023 0
5358 2936 3012 3022 0
5358 2936 3014 0
5358 2936 3016 0
5358 2936 3018 0
5358 2936 3020 0
5358 2938 3043 0
5358 2938 2991 3041 0
5358 2938 2992 3039 0
5358 2938 2994 3037 0
5358 2938 2996 3035 0
5358 2938 2998 3033 0
5358 2938 3000 3031 0
5358 2938 3002 3029 0
5358 2938 3004 3027 0
5358 2938 3006 3025 0
5358 2938 3008 3023 0
5358 2938 3010 3022 0
5358 2938 3012 0
5358 2938 3014 0
5358 2938 3016 0
5358 2938 3018 0
5358 2938 3020 0
5358 2940 3041 0
5358 2940 2991 3039 0
5358 2940 2992 3037 0
5358 2940 2994 3035 0
5358 2940 2996 3033 0
5358 2940 2998 3031 0
5358 2940 3000 3029 0
5358 2940 3002 3027 0
5358 2940 3004 3025 0
5358 2940 3006 3023 0
5358 2940 3008 3022 0
5358 2940 3010 0
5358 2940 3012 0
5358 2940 3014 0
5358 2940 3016 0
5358 2940 3018 0
5358 2940 3020 0
5358 2942 3039 0
5358 2942 2991 3037 0
5358 2942 2992 3035 0
5358 2942 2994 3033 0
5358 2942 2996 3031 0
5358 2942 2998 3029 0
5358 2942 3000 3027 0
5358 2942 3002 3025 0
5358 2942 3004 3023 0
5358 2942 3006 3022 0
5358 2942 3008 0
5358 2942 3010 0
5358 2942 3012 0
5358 2942 3014 0
5358 2942 3016 0
5358 2942 3018 0
5358 2942 3020 0
5358 2944 3037 0
5358 2944 2991 3035 0
5358 2944 2992 3033 0
5358 2944 2994 3031 0
5358 2944 2996 3029 0
5358 2944 2998 3027 0
5358 2944 3000 3025 0
5358 2944 3002 3023 0
5358 2944 3004 3022 0
5358 2944 3006 0
5358 2944 3008 0
5358 2944 3010 0
5358 2944 3012 0
5358 2944 3014 0
5358 2944 3016 0
5358 2944 3018 0
5358 2944 3020 0
5358 2946 3035 0
5358 2946 2991 3033 0
5358 2946 2992 3031 0
5358 2946 2994 3029 0
5358 2946 2996 3027 0
5358 2946 2998 3025 0
5358 2946 3000 3023 0
5358 2946 3002 3022 0
5358 2946 3004 0
5358 2946 3006 0
5358 2946 3008 0
5358 2946 3010 0
5358 2946 3012 0
5358 2946 3014 0
5358 2946 3016 0
5358 2946 3018 0
5358 2946 3020 0
5358 2948 3033 0
5358 2948 2991 3031 0
5358 2948 2992 3029 0
5358 2948 2994 3027 0
5358 2948 2996 3025 0
5358 2948 2998 3023 0
5358 2948 3000 3022 0
5358 2948 3002 0
5358 2948 3004 0
5358 2948 3006 0
5358 2948 3008 0
5358 2948 3010 0
5358 2948 3012 0
5358 2948 3014 0
5358 2948 3016 0
5358 2948 3018 0
5358 2948 3020 0
5358 2950 3031 0
5358 2950 2991 3029 0
5358 2950 2992 3027 0
5358 2950 2994 3025 0
5358 2950 2996 3023 0
5358 2950 2998 3022 0
5358 2950 3000 0
5358 2950 3002 0
5358 2950 3004 0
5358 2950 3006 0
5358 2950 3008 0
5358 2950 3010 0
5358 2950 3012 0
5358 2950 3014 0
5358 2950 3016 0
5358 2950 3018 0
5358 2950 3020 0
5358 2952 3029 0
5358 2952 2991 3027 0
5358 2952 2992 3025 0
5358 2952 2994 3023 0
5358 2952 2996 3022 0
5358 2952 2998 0
5358 2952 3000 0
5358 2952 3002 0
5358 2952 3004 0
5358 2952 3006 0
5358 2952 3008 0
5358 2952 3010 0
5358 2952 3012 0
5358 2952 3014 0
5358 2952 3016 0
5358 2952 3018 0
5358 2952 3020 0
5358 2954 3027 0
5358 2954 2991 3025 0
5358 2954 2992 3023 0
5358 2954 2994 3022 0
5358 2954 2996 0
5358 2954 2998 0
5358 2954 3000 0
5358 2954 3002 0
5358 2954 3004 0
5358 2954 3006 0
5358 2954 3008 0
5358 2954 3010 0
5358 2954 3012 0
5358 2954 3014 0
5358 2954 3016 0
5358 2954 3018 0
5358 2954 3020 0
5358 2956 3025 0
5358 2956 2991 3023 0
5358 2956 2992 3022 0
5358 2956 2994 0
5358 2956 2996 0
5358 2956 2998 0
5358 2956 3000 0
5358 2956 3002 0
5358 2956 3004 0
5358 2956 3006 0
5358 2956 3008 0
5358 2956 3010 0
5358 2956 3012 0
5358 2956 3014 0
5358 2956 3016 0
5358 2956 3018 0
5358 2956 3020 0
5358 2958 3023 0
5358 2958 2991 3022 0
5358 2958 2992 0
5358 2958 2994 0
5358 2958 2996 0
5358 2958 2998 0
5358 2958 3000 0
5358 2958 3002 0
5358 2958 3004 0
5358 2958 3006 0
5358 2958 3008 0
5358 2958 3010 0
5358 2958 3012 0
5358 2958 3014 0
5358 2958 3016 0
5358 2958 3018 0
5358 2958 3020 0
5358 2960 3022 0
5358 2960 2991 0
5358 2960 2992 0
5358 2960 2994 0
5358 2960 2996 0
5358 2960 2998 0
5358 2960 3000 0
5358 2960 3002 0
5358 2960 3004 0
5358 2960 3006 0
5358 2960 3008 0
5358 2960 3010 0
5358 2960 3012 0
5358 2960 3014 0
5358 2960 3016 0
5358 2960 3018 0
5358 2960 3020 0
5358 2962 0
5358 2962 2991 0
5358 2962 2992 0
5358 2962 2994 0
5358 2962 2996 0
5358 2962 2998 0
5358 2962 3000 0
5358 2962 3002 0
5358 2962 3004 0
5358 2962 3006 0
5358 2962 3008 0
5358 2962 3010 0
5358 2962 3012 0
5358 2962 3014 0
5358 2962 3016 0
5358 2962 3018 0
5358 2962 3020 0
c (((aux242 + aux243 + aux245)<=16)=tv=SATLiteral(5359))
-5359 3206 0
-5359 3113 3204 0
-5359 3114 3202 0
-5359 3116 3200 0
-5359 3118 3198 0
-5359 3120 3196 0
-5359 3122 3194 0
-5359 3124 3192 0
-5359 3126 3190 0
-5359 3128 3188 0
-5359 3130 3186 0
-5359 3132 3184 0
-5359 3134 3182 0
-5359 3136 3180 0
-5359 3138 3178 0
-5359 3140 3176 0
-5359 3142 3175 0
-5359 3082 3204 0
-5359 3082 3113 3202 0
-5359 3082 3114 3200 0
-5359 3082 3116 3198 0
-5359 3082 3118 3196 0
-5359 3082 3120 3194 0
-5359 3082 3122 3192 0
-5359 3082 3124 3190 0
-5359 3082 3126 3188 0
-5359 3082 3128 3186 0
-5359 3082 3130 3184 0
-5359 3082 3132 3182 0
-5359 3082 3134 3180 0
-5359 3082 3136 3178 0
-5359 3082 3138 3176 0
-5359 3082 3140 3175 0
-5359 3082 3142 0
-5359 3083 3202 0
-5359 3083 3113 3200 0
-5359 3083 3114 3198 0
-5359 3083 3116 3196 0
-5359 3083 3118 3194 0
-5359 3083 3120 3192 0
-5359 3083 3122 3190 0
-5359 3083 3124 3188 0
-5359 3083 3126 3186 0
-5359 3083 3128 3184 0
-5359 3083 3130 3182 0
-5359 3083 3132 3180 0
-5359 3083 3134 3178 0
-5359 3083 3136 3176 0
-5359 3083 3138 3175 0
-5359 3083 3140 0
-5359 3083 3142 0
-5359 3085 3200 0
-5359 3085 3113 3198 0
-5359 3085 3114 3196 0
-5359 3085 3116 3194 0
-5359 3085 3118 3192 0
-5359 3085 3120 3190 0
-5359 3085 3122 3188 0
-5359 3085 3124 3186 0
-5359 3085 3126 3184 0
-5359 3085 3128 3182 0
-5359 3085 3130 3180 0
-5359 3085 3132 3178 0
-5359 3085 3134 3176 0
-5359 3085 3136 3175 0
-5359 3085 3138 0
-5359 3085 3140 0
-5359 3085 3142 0
-5359 3087 3198 0
-5359 3087 3113 3196 0
-5359 3087 3114 3194 0
-5359 3087 3116 3192 0
-5359 3087 3118 3190 0
-5359 3087 3120 3188 0
-5359 3087 3122 3186 0
-5359 3087 3124 3184 0
-5359 3087 3126 3182 0
-5359 3087 3128 3180 0
-5359 3087 3130 3178 0
-5359 3087 3132 3176 0
-5359 3087 3134 3175 0
-5359 3087 3136 0
-5359 3087 3138 0
-5359 3087 3140 0
-5359 3087 3142 0
-5359 3089 3196 0
-5359 3089 3113 3194 0
-5359 3089 3114 3192 0
-5359 3089 3116 3190 0
-5359 3089 3118 3188 0
-5359 3089 3120 3186 0
-5359 3089 3122 3184 0
-5359 3089 3124 3182 0
-5359 3089 3126 3180 0
-5359 3089 3128 3178 0
-5359 3089 3130 3176 0
-5359 3089 3132 3175 0
-5359 3089 3134 0
-5359 3089 3136 0
-5359 3089 3138 0
-5359 3089 3140 0
-5359 3089 3142 0
-5359 3091 3194 0
-5359 3091 3113 3192 0
-5359 3091 3114 3190 0
-5359 3091 3116 3188 0
-5359 3091 3118 3186 0
-5359 3091 3120 3184 0
-5359 3091 3122 3182 0
-5359 3091 3124 3180 0
-5359 3091 3126 3178 0
-5359 3091 3128 3176 0
-5359 3091 3130 3175 0
-5359 3091 3132 0
-5359 3091 3134 0
-5359 3091 3136 0
-5359 3091 3138 0
-5359 3091 3140 0
-5359 3091 3142 0
-5359 3093 3192 0
-5359 3093 3113 3190 0
-5359 3093 3114 3188 0
-5359 3093 3116 3186 0
-5359 3093 3118 3184 0
-5359 3093 3120 3182 0
-5359 3093 3122 3180 0
-5359 3093 3124 3178 0
-5359 3093 3126 3176 0
-5359 3093 3128 3175 0
-5359 3093 3130 0
-5359 3093 3132 0
-5359 3093 3134 0
-5359 3093 3136 0
-5359 3093 3138 0
-5359 3093 3140 0
-5359 3093 3142 0
-5359 3095 3190 0
-5359 3095 3113 3188 0
-5359 3095 3114 3186 0
-5359 3095 3116 3184 0
-5359 3095 3118 3182 0
-5359 3095 3120 3180 0
-5359 3095 3122 3178 0
-5359 3095 3124 3176 0
-5359 3095 3126 3175 0
-5359 3095 3128 0
-5359 3095 3130 0
-5359 3095 3132 0
-5359 3095 3134 0
-5359 3095 3136 0
-5359 3095 3138 0
-5359 3095 3140 0
-5359 3095 3142 0
-5359 3097 3188 0
-5359 3097 3113 3186 0
-5359 3097 3114 3184 0
-5359 3097 3116 3182 0
-5359 3097 3118 3180 0
-5359 3097 3120 3178 0
-5359 3097 3122 3176 0
-5359 3097 3124 3175 0
-5359 3097 3126 0
-5359 3097 3128 0
-5359 3097 3130 0
-5359 3097 3132 0
-5359 3097 3134 0
-5359 3097 3136 0
-5359 3097 3138 0
-5359 3097 3140 0
-5359 3097 3142 0
-5359 3099 3186 0
-5359 3099 3113 3184 0
-5359 3099 3114 3182 0
-5359 3099 3116 3180 0
-5359 3099 3118 3178 0
-5359 3099 3120 3176 0
-5359 3099 3122 3175 0
-5359 3099 3124 0
-5359 3099 3126 0
-5359 3099 3128 0
-5359 3099 3130 0
-5359 3099 3132 0
-5359 3099 3134 0
-5359 3099 3136 0
-5359 3099 3138 0
-5359 3099 3140 0
-5359 3099 3142 0
-5359 3101 3184 0
-5359 3101 3113 3182 0
-5359 3101 3114 3180 0
-5359 3101 3116 3178 0
-5359 3101 3118 3176 0
-5359 3101 3120 3175 0
-5359 3101 3122 0
-5359 3101 3124 0
-5359 3101 3126 0
-5359 3101 3128 0
-5359 3101 3130 0
-5359 3101 3132 0
-5359 3101 3134 0
-5359 3101 3136 0
-5359 3101 3138 0
-5359 3101 3140 0
-5359 3101 3142 0
-5359 3103 3182 0
-5359 3103 3113 3180 0
-5359 3103 3114 3178 0
-5359 3103 3116 3176 0
-5359 3103 3118 3175 0
-5359 3103 3120 0
-5359 3103 3122 0
-5359 3103 3124 0
-5359 3103 3126 0
-5359 3103 3128 0
-5359 3103 3130 0
-5359 3103 3132 0
-5359 3103 3134 0
-5359 3103 3136 0
-5359 3103 3138 0
-5359 3103 3140 0
-5359 3103 3142 0
-5359 3105 3180 0
-5359 3105 3113 3178 0
-5359 3105 3114 3176 0
-5359 3105 3116 3175 0
-5359 3105 3118 0
-5359 3105 3120 0
-5359 3105 3122 0
-5359 3105 3124 0
-5359 3105 3126 0
-5359 3105 3128 0
-5359 3105 3130 0
-5359 3105 3132 0
-5359 3105 3134 0
-5359 3105 3136 0
-5359 3105 3138 0
-5359 3105 3140 0
-5359 3105 3142 0
-5359 3107 3178 0
-5359 3107 3113 3176 0
-5359 3107 3114 3175 0
-5359 3107 3116 0
-5359 3107 3118 0
-5359 3107 3120 0
-5359 3107 3122 0
-5359 3107 3124 0
-5359 3107 3126 0
-5359 3107 3128 0
-5359 3107 3130 0
-5359 3107 3132 0
-5359 3107 3134 0
-5359 3107 3136 0
-5359 3107 3138 0
-5359 3107 3140 0
-5359 3107 3142 0
-5359 3109 3176 0
-5359 3109 3113 3175 0
-5359 3109 3114 0
-5359 3109 3116 0
-5359 3109 3118 0
-5359 3109 3120 0
-5359 3109 3122 0
-5359 3109 3124 0
-5359 3109 3126 0
-5359 3109 3128 0
-5359 3109 3130 0
-5359 3109 3132 0
-5359 3109 3134 0
-5359 3109 3136 0
-5359 3109 3138 0
-5359 3109 3140 0
-5359 3109 3142 0
-5359 3111 3175 0
-5359 3111 3113 0
-5359 3111 3114 0
-5359 3111 3116 0
-5359 3111 3118 0
-5359 3111 3120 0
-5359 3111 3122 0
-5359 3111 3124 0
-5359 3111 3126 0
-5359 3111 3128 0
-5359 3111 3130 0
-5359 3111 3132 0
-5359 3111 3134 0
-5359 3111 3136 0
-5359 3111 3138 0
-5359 3111 3140 0
-5359 3111 3142 0
5359 -3113 -3175 0
5359 -3111 -3114 -3175 0
5359 -3111 -3113 -3176 0
5359 -3109 -3116 -3175 0
5359 -3109 -3114 -3176 0
5359 -3109 -3113 -3178 0
5359 -3107 -3118 -3175 0
5359 -3107 -3116 -3176 0
5359 -3107 -3114 -3178 0
5359 -3107 -3113 -3180 0
5359 -3105 -3120 -3175 0
5359 -3105 -3118 -3176 0
5359 -3105 -3116 -3178 0
5359 -3105 -3114 -3180 0
5359 -3105 -3113 -3182 0
5359 -3103 -3122 -3175 0
5359 -3103 -3120 -3176 0
5359 -3103 -3118 -3178 0
5359 -3103 -3116 -3180 0
5359 -3103 -3114 -3182 0
5359 -3103 -3113 -3184 0
5359 -3101 -3124 -3175 0
5359 -3101 -3122 -3176 0
5359 -3101 -3120 -3178 0
5359 -3101 -3118 -3180 0
5359 -3101 -3116 -3182 0
5359 -3101 -3114 -3184 0
5359 -3101 -3113 -3186 0
5359 -3099 -3126 -3175 0
5359 -3099 -3124 -3176 0
5359 -3099 -3122 -3178 0
5359 -3099 -3120 -3180 0
5359 -3099 -3118 -3182 0
5359 -3099 -3116 -3184 0
5359 -3099 -3114 -3186 0
5359 -3099 -3113 -3188 0
5359 -3097 -3128 -3175 0
5359 -3097 -3126 -3176 0
5359 -3097 -3124 -3178 0
5359 -3097 -3122 -3180 0
5359 -3097 -3120 -3182 0
5359 -3097 -3118 -3184 0
5359 -3097 -3116 -3186 0
5359 -3097 -3114 -3188 0
5359 -3097 -3113 -3190 0
5359 -3095 -3130 -3175 0
5359 -3095 -3128 -3176 0
5359 -3095 -3126 -3178 0
5359 -3095 -3124 -3180 0
5359 -3095 -3122 -3182 0
5359 -3095 -3120 -3184 0
5359 -3095 -3118 -3186 0
5359 -3095 -3116 -3188 0
5359 -3095 -3114 -3190 0
5359 -3095 -3113 -3192 0
5359 -3093 -3132 -3175 0
5359 -3093 -3130 -3176 0
5359 -3093 -3128 -3178 0
5359 -3093 -3126 -3180 0
5359 -3093 -3124 -3182 0
5359 -3093 -3122 -3184 0
5359 -3093 -3120 -3186 0
5359 -3093 -3118 -3188 0
5359 -3093 -3116 -3190 0
5359 -3093 -3114 -3192 0
5359 -3093 -3113 -3194 0
5359 -3091 -3134 -3175 0
5359 -3091 -3132 -3176 0
5359 -3091 -3130 -3178 0
5359 -3091 -3128 -3180 0
5359 -3091 -3126 -3182 0
5359 -3091 -3124 -3184 0
5359 -3091 -3122 -3186 0
5359 -3091 -3120 -3188 0
5359 -3091 -3118 -3190 0
5359 -3091 -3116 -3192 0
5359 -3091 -3114 -3194 0
5359 -3091 -3113 -3196 0
5359 -3089 -3136 -3175 0
5359 -3089 -3134 -3176 0
5359 -3089 -3132 -3178 0
5359 -3089 -3130 -3180 0
5359 -3089 -3128 -3182 0
5359 -3089 -3126 -3184 0
5359 -3089 -3124 -3186 0
5359 -3089 -3122 -3188 0
5359 -3089 -3120 -3190 0
5359 -3089 -3118 -3192 0
5359 -3089 -3116 -3194 0
5359 -3089 -3114 -3196 0
5359 -3089 -3113 -3198 0
5359 -3087 -3138 -3175 0
5359 -3087 -3136 -3176 0
5359 -3087 -3134 -3178 0
5359 -3087 -3132 -3180 0
5359 -3087 -3130 -3182 0
5359 -3087 -3128 -3184 0
5359 -3087 -3126 -3186 0
5359 -3087 -3124 -3188 0
5359 -3087 -3122 -3190 0
5359 -3087 -3120 -3192 0
5359 -3087 -3118 -3194 0
5359 -3087 -3116 -3196 0
5359 -3087 -3114 -3198 0
5359 -3087 -3113 -3200 0
5359 -3085 -3140 -3175 0
5359 -3085 -3138 -3176 0
5359 -3085 -3136 -3178 0
5359 -3085 -3134 -3180 0
5359 -3085 -3132 -3182 0
5359 -3085 -3130 -3184 0
5359 -3085 -3128 -3186 0
5359 -3085 -3126 -3188 0
5359 -3085 -3124 -3190 0
5359 -3085 -3122 -3192 0
5359 -3085 -3120 -3194 0
5359 -3085 -3118 -3196 0
5359 -3085 -3116 -3198 0
5359 -3085 -3114 -3200 0
5359 -3085 -3113 -3202 0
5359 -3083 -3142 -3175 0
5359 -3083 -3140 -3176 0
5359 -3083 -3138 -3178 0
5359 -3083 -3136 -3180 0
5359 -3083 -3134 -3182 0
5359 -3083 -3132 -3184 0
5359 -3083 -3130 -3186 0
5359 -3083 -3128 -3188 0
5359 -3083 -3126 -3190 0
5359 -3083 -3124 -3192 0
5359 -3083 -3122 -3194 0
5359 -3083 -3120 -3196 0
5359 -3083 -3118 -3198 0
5359 -3083 -3116 -3200 0
5359 -3083 -3114 -3202 0
5359 -3083 -3113 -3204 0
5359 -3082 -3175 0
5359 -3082 -3142 -3176 0
5359 -3082 -3140 -3178 0
5359 -3082 -3138 -3180 0
5359 -3082 -3136 -3182 0
5359 -3082 -3134 -3184 0
5359 -3082 -3132 -3186 0
5359 -3082 -3130 -3188 0
5359 -3082 -3128 -3190 0
5359 -3082 -3126 -3192 0
5359 -3082 -3124 -3194 0
5359 -3082 -3122 -3196 0
5359 -3082 -3120 -3198 0
5359 -3082 -3118 -3200 0
5359 -3082 -3116 -3202 0
5359 -3082 -3114 -3204 0
5359 -3082 -3113 -3206 0
c ((16<=(aux242 + aux243 + aux245))=tv=SATLiteral(5360))
-5360 -3111 -3113 -3175 0
-5360 -3109 -3114 -3175 0
-5360 -3109 -3113 -3176 0
-5360 -3107 -3116 -3175 0
-5360 -3107 -3114 -3176 0
-5360 -3107 -3113 -3178 0
-5360 -3105 -3118 -3175 0
-5360 -3105 -3116 -3176 0
-5360 -3105 -3114 -3178 0
-5360 -3105 -3113 -3180 0
-5360 -3103 -3120 -3175 0
-5360 -3103 -3118 -3176 0
-5360 -3103 -3116 -3178 0
-5360 -3103 -3114 -3180 0
-5360 -3103 -3113 -3182 0
-5360 -3101 -3122 -3175 0
-5360 -3101 -3120 -3176 0
-5360 -3101 -3118 -3178 0
-5360 -3101 -3116 -3180 0
-5360 -3101 -3114 -3182 0
-5360 -3101 -3113 -3184 0
-5360 -3099 -3124 -3175 0
-5360 -3099 -3122 -3176 0
-5360 -3099 -3120 -3178 0
-5360 -3099 -3118 -3180 0
-5360 -3099 -3116 -3182 0
-5360 -3099 -3114 -3184 0
-5360 -3099 -3113 -3186 0
-5360 -3097 -3126 -3175 0
-5360 -3097 -3124 -3176 0
-5360 -3097 -3122 -3178 0
-5360 -3097 -3120 -3180 0
-5360 -3097 -3118 -3182 0
-5360 -3097 -3116 -3184 0
-5360 -3097 -3114 -3186 0
-5360 -3097 -3113 -3188 0
-5360 -3095 -3128 -3175 0
-5360 -3095 -3126 -3176 0
-5360 -3095 -3124 -3178 0
-5360 -3095 -3122 -3180 0
-5360 -3095 -3120 -3182 0
-5360 -3095 -3118 -3184 0
-5360 -3095 -3116 -3186 0
-5360 -3095 -3114 -3188 0
-5360 -3095 -3113 -3190 0
-5360 -3093 -3130 -3175 0
-5360 -3093 -3128 -3176 0
-5360 -3093 -3126 -3178 0
-5360 -3093 -3124 -3180 0
-5360 -3093 -3122 -3182 0
-5360 -3093 -3120 -3184 0
-5360 -3093 -3118 -3186 0
-5360 -3093 -3116 -3188 0
-5360 -3093 -3114 -3190 0
-5360 -3093 -3113 -3192 0
-5360 -3091 -3132 -3175 0
-5360 -3091 -3130 -3176 0
-5360 -3091 -3128 -3178 0
-5360 -3091 -3126 -3180 0
-5360 -3091 -3124 -3182 0
-5360 -3091 -3122 -3184 0
-5360 -3091 -3120 -3186 0
-5360 -3091 -3118 -3188 0
-5360 -3091 -3116 -3190 0
-5360 -3091 -3114 -3192 0
-5360 -3091 -3113 -3194 0
-5360 -3089 -3134 -3175 0
-5360 -3089 -3132 -3176 0
-5360 -3089 -3130 -3178 0
-5360 -3089 -3128 -3180 0
-5360 -3089 -3126 -3182 0
-5360 -3089 -3124 -3184 0
-5360 -3089 -3122 -3186 0
-5360 -3089 -3120 -3188 0
-5360 -3089 -3118 -3190 0
-5360 -3089 -3116 -3192 0
-5360 -3089 -3114 -3194 0
-5360 -3089 -3113 -3196 0
-5360 -3087 -3136 -3175 0
-5360 -3087 -3134 -3176 0
-5360 -3087 -3132 -3178 0
-5360 -3087 -3130 -3180 0
-5360 -3087 -3128 -3182 0
-5360 -3087 -3126 -3184 0
-5360 -3087 -3124 -3186 0
-5360 -3087 -3122 -3188 0
-5360 -3087 -3120 -3190 0
-5360 -3087 -3118 -3192 0
-5360 -3087 -3116 -3194 0
-5360 -3087 -3114 -3196 0
-5360 -3087 -3113 -3198 0
-5360 -3085 -3138 -3175 0
-5360 -3085 -3136 -3176 0
-5360 -3085 -3134 -3178 0
-5360 -3085 -3132 -3180 0
-5360 -3085 -3130 -3182 0
-5360 -3085 -3128 -3184 0
-5360 -3085 -3126 -3186 0
-5360 -3085 -3124 -3188 0
-5360 -3085 -3122 -3190 0
-5360 -3085 -3120 -3192 0
-5360 -3085 -3118 -3194 0
-5360 -3085 -3116 -3196 0
-5360 -3085 -3114 -3198 0
-5360 -3085 -3113 -3200 0
-5360 -3083 -3140 -3175 0
-5360 -3083 -3138 -3176 0
-5360 -3083 -3136 -3178 0
-5360 -3083 -3134 -3180 0
-5360 -3083 -3132 -3182 0
-5360 -3083 -3130 -3184 0
-5360 -3083 -3128 -3186 0
-5360 -3083 -3126 -3188 0
-5360 -3083 -3124 -3190 0
-5360 -3083 -3122 -3192 0
-5360 -3083 -3120 -3194 0
-5360 -3083 -3118 -3196 0
-5360 -3083 -3116 -3198 0
-5360 -3083 -3114 -3200 0
-5360 -3083 -3113 -3202 0
-5360 -3082 -3142 -3175 0
-5360 -3082 -3140 -3176 0
-5360 -3082 -3138 -3178 0
-5360 -3082 -3136 -3180 0
-5360 -3082 -3134 -3182 0
-5360 -3082 -3132 -3184 0
-5360 -3082 -3130 -3186 0
-5360 -3082 -3128 -3188 0
-5360 -3082 -3126 -3190 0
-5360 -3082 -3124 -3192 0
-5360 -3082 -3122 -3194 0
-5360 -3082 -3120 -3196 0
-5360 -3082 -3118 -3198 0
-5360 -3082 -3116 -3200 0
-5360 -3082 -3114 -3202 0
-5360 -3082 -3113 -3204 0
5360 3204 0
5360 3113 3202 0
5360 3114 3200 0
5360 3116 3198 0
5360 3118 3196 0
5360 3120 3194 0
5360 3122 3192 0
5360 3124 3190 0
5360 3126 3188 0
5360 3128 3186 0
5360 3130 3184 0
5360 3132 3182 0
5360 3134 3180 0
5360 3136 3178 0
5360 3138 3176 0
5360 3140 3175 0
5360 3142 0
5360 3082 3202 0
5360 3082 3113 3200 0
5360 3082 3114 3198 0
5360 3082 3116 3196 0
5360 3082 3118 3194 0
5360 3082 3120 3192 0
5360 3082 3122 3190 0
5360 3082 3124 3188 0
5360 3082 3126 3186 0
5360 3082 3128 3184 0
5360 3082 3130 3182 0
5360 3082 3132 3180 0
5360 3082 3134 3178 0
5360 3082 3136 3176 0
5360 3082 3138 3175 0
5360 3082 3140 0
5360 3082 3142 0
5360 3083 3200 0
5360 3083 3113 3198 0
5360 3083 3114 3196 0
5360 3083 3116 3194 0
5360 3083 3118 3192 0
5360 3083 3120 3190 0
5360 3083 3122 3188 0
5360 3083 3124 3186 0
5360 3083 3126 3184 0
5360 3083 3128 3182 0
5360 3083 3130 3180 0
5360 3083 3132 3178 0
5360 3083 3134 3176 0
5360 3083 3136 3175 0
5360 3083 3138 0
5360 3083 3140 0
5360 3083 3142 0
5360 3085 3198 0
5360 3085 3113 3196 0
5360 3085 3114 3194 0
5360 3085 3116 3192 0
5360 3085 3118 3190 0
5360 3085 3120 3188 0
5360 3085 3122 3186 0
5360 3085 3124 3184 0
5360 3085 3126 3182 0
5360 3085 3128 3180 0
5360 3085 3130 3178 0
5360 3085 3132 3176 0
5360 3085 3134 3175 0
5360 3085 3136 0
5360 3085 3138 0
5360 3085 3140 0
5360 3085 3142 0
5360 3087 3196 0
5360 3087 3113 3194 0
5360 3087 3114 3192 0
5360 3087 3116 3190 0
5360 3087 3118 3188 0
5360 3087 3120 3186 0
5360 3087 3122 3184 0
5360 3087 3124 3182 0
5360 3087 3126 3180 0
5360 3087 3128 3178 0
5360 3087 3130 3176 0
5360 3087 3132 3175 0
5360 3087 3134 0
5360 3087 3136 0
5360 3087 3138 0
5360 3087 3140 0
5360 3087 3142 0
5360 3089 3194 0
5360 3089 3113 3192 0
5360 3089 3114 3190 0
5360 3089 3116 3188 0
5360 3089 3118 3186 0
5360 3089 3120 3184 0
5360 3089 3122 3182 0
5360 3089 3124 3180 0
5360 3089 3126 3178 0
5360 3089 3128 3176 0
5360 3089 3130 3175 0
5360 3089 3132 0
5360 3089 3134 0
5360 3089 3136 0
5360 3089 3138 0
5360 3089 3140 0
5360 3089 3142 0
5360 3091 3192 0
5360 3091 3113 3190 0
5360 3091 3114 3188 0
5360 3091 3116 3186 0
5360 3091 3118 3184 0
5360 3091 3120 3182 0
5360 3091 3122 3180 0
5360 3091 3124 3178 0
5360 3091 3126 3176 0
5360 3091 3128 3175 0
5360 3091 3130 0
5360 3091 3132 0
5360 3091 3134 0
5360 3091 3136 0
5360 3091 3138 0
5360 3091 3140 0
5360 3091 3142 0
5360 3093 3190 0
5360 3093 3113 3188 0
5360 3093 3114 3186 0
5360 3093 3116 3184 0
5360 3093 3118 3182 0
5360 3093 3120 3180 0
5360 3093 3122 3178 0
5360 3093 3124 3176 0
5360 3093 3126 3175 0
5360 3093 3128 0
5360 3093 3130 0
5360 3093 3132 0
5360 3093 3134 0
5360 3093 3136 0
5360 3093 3138 0
5360 3093 3140 0
5360 3093 3142 0
5360 3095 3188 0
5360 3095 3113 3186 0
5360 3095 3114 3184 0
5360 3095 3116 3182 0
5360 3095 3118 3180 0
5360 3095 3120 3178 0
5360 3095 3122 3176 0
5360 3095 3124 3175 0
5360 3095 3126 0
5360 3095 3128 0
5360 3095 3130 0
5360 3095 3132 0
5360 3095 3134 0
5360 3095 3136 0
5360 3095 3138 0
5360 3095 3140 0
5360 3095 3142 0
5360 3097 3186 0
5360 3097 3113 3184 0
5360 3097 3114 3182 0
5360 3097 3116 3180 0
5360 3097 3118 3178 0
5360 3097 3120 3176 0
5360 3097 3122 3175 0
5360 3097 3124 0
5360 3097 3126 0
5360 3097 3128 0
5360 3097 3130 0
5360 3097 3132 0
5360 3097 3134 0
5360 3097 3136 0
5360 3097 3138 0
5360 3097 3140 0
5360 3097 3142 0
5360 3099 3184 0
5360 3099 3113 3182 0
5360 3099 3114 3180 0
5360 3099 3116 3178 0
5360 3099 3118 3176 0
5360 3099 3120 3175 0
5360 3099 3122 0
5360 3099 3124 0
5360 3099 3126 0
5360 3099 3128 0
5360 3099 3130 0
5360 3099 3132 0
5360 3099 3134 0
5360 3099 3136 0
5360 3099 3138 0
5360 3099 3140 0
5360 3099 3142 0
5360 3101 3182 0
5360 3101 3113 3180 0
5360 3101 3114 3178 0
5360 3101 3116 3176 0
5360 3101 3118 3175 0
5360 3101 3120 0
5360 3101 3122 0
5360 3101 3124 0
5360 3101 3126 0
5360 3101 3128 0
5360 3101 3130 0
5360 3101 3132 0
5360 3101 3134 0
5360 3101 3136 0
5360 3101 3138 0
5360 3101 3140 0
5360 3101 3142 0
5360 3103 3180 0
5360 3103 3113 3178 0
5360 3103 3114 3176 0
5360 3103 3116 3175 0
5360 3103 3118 0
5360 3103 3120 0
5360 3103 3122 0
5360 3103 3124 0
5360 3103 3126 0
5360 3103 3128 0
5360 3103 3130 0
5360 3103 3132 0
5360 3103 3134 0
5360 3103 3136 0
5360 3103 3138 0
5360 3103 3140 0
5360 3103 3142 0
5360 3105 3178 0
5360 3105 3113 3176 0
5360 3105 3114 3175 0
5360 3105 3116 0
5360 3105 3118 0
5360 3105 3120 0
5360 3105 3122 0
5360 3105 3124 0
5360 3105 3126 0
5360 3105 3128 0
5360 3105 3130 0
5360 3105 3132 0
5360 3105 3134 0
5360 3105 3136 0
5360 3105 3138 0
5360 3105 3140 0
5360 3105 3142 0
5360 3107 3176 0
5360 3107 3113 3175 0
5360 3107 3114 0
5360 3107 3116 0
5360 3107 3118 0
5360 3107 3120 0
5360 3107 3122 0
5360 3107 3124 0
5360 3107 3126 0
5360 3107 3128 0
5360 3107 3130 0
5360 3107 3132 0
5360 3107 3134 0
5360 3107 3136 0
5360 3107 3138 0
5360 3107 3140 0
5360 3107 3142 0
5360 3109 3175 0
5360 3109 3113 0
5360 3109 3114 0
5360 3109 3116 0
5360 3109 3118 0
5360 3109 3120 0
5360 3109 3122 0
5360 3109 3124 0
5360 3109 3126 0
5360 3109 3128 0
5360 3109 3130 0
5360 3109 3132 0
5360 3109 3134 0
5360 3109 3136 0
5360 3109 3138 0
5360 3109 3140 0
5360 3109 3142 0
5360 3111 0
5360 3111 3113 0
5360 3111 3114 0
5360 3111 3116 0
5360 3111 3118 0
5360 3111 3120 0
5360 3111 3122 0
5360 3111 3124 0
5360 3111 3126 0
5360 3111 3128 0
5360 3111 3130 0
5360 3111 3132 0
5360 3111 3134 0
5360 3111 3136 0
5360 3111 3138 0
5360 3111 3140 0
5360 3111 3142 0
c (((aux247 + aux248 + aux249)<=16)=tv=SATLiteral(5361))
-5361 3308 0
-5361 3254 3306 0
-5361 3255 3302 0
-5361 3257 3300 0
-5361 3259 3298 0
-5361 3261 3296 0
-5361 3263 3294 0
-5361 3265 3292 0
-5361 3267 3290 0
-5361 3269 3288 0
-5361 3271 3286 0
-5361 3273 3284 0
-5361 3275 3282 0
-5361 3277 3280 0
-5361 3233 3306 0
-5361 3233 3254 3304 0
-5361 3233 3255 3300 0
-5361 3233 3257 3298 0
-5361 3233 3259 3296 0
-5361 3233 3261 3294 0
-5361 3233 3263 3292 0
-5361 3233 3265 3290 0
-5361 3233 3267 3288 0
-5361 3233 3269 3286 0
-5361 3233 3271 3284 0
-5361 3233 3273 3282 0
-5361 3233 3275 3280 0
-5361 3233 3277 3279 0
-5361 3234 3304 0
-5361 3234 3254 3302 0
-5361 3234 3255 3298 0
-5361 3234 3257 3296 0
-5361 3234 3259 3294 0
-5361 3234 3261 3292 0
-5361 3234 3263 3290 0
-5361 3234 3265 3288 0
-5361 3234 3267 3286 0
-5361 3234 3269 3284 0
-5361 3234 3271 3282 0
-5361 3234 3273 3280 0
-5361 3234 3275 3279 0
-5361 3234 3277 3279 0
-5361 3236 3302 0
-5361 3236 3254 3300 0
-5361 3236 3255 3296 0
-5361 3236 3257 3294 0
-5361 3236 3259 3292 0
-5361 3236 3261 3290 0
-5361 3236 3263 3288 0
-5361 3236 3265 3286 0
-5361 3236 3267 3284 0
-5361 3236 3269 3282 0
-5361 3236 3271 3280 0
-5361 3236 3273 3279 0
-5361 3236 3275 3279 0
-5361 3236 3277 0
-5361 3238 3300 0
-5361 3238 3254 3298 0
-5361 3238 3255 3294 0
-5361 3238 3257 3292 0
-5361 3238 3259 3290 0
-5361 3238 3261 3288 0
-5361 3238 3263 3286 0
-5361 3238 3265 3284 0
-5361 3238 3267 3282 0
-5361 3238 3269 3280 0
-5361 3238 3271 3279 0
-5361 3238 3273 3279 0
-5361 3238 3275 0
-5361 3238 3277 0
-5361 3240 3298 0
-5361 3240 3254 3296 0
-5361 3240 3255 3292 0
-5361 3240 3257 3290 0
-5361 3240 3259 3288 0
-5361 3240 3261 3286 0
-5361 3240 3263 3284 0
-5361 3240 3265 3282 0
-5361 3240 3267 3280 0
-5361 3240 3269 3279 0
-5361 3240 3271 3279 0
-5361 3240 3273 0
-5361 3240 3275 0
-5361 3240 3277 0
-5361 3242 3296 0
-5361 3242 3254 3294 0
-5361 3242 3255 3290 0
-5361 3242 3257 3288 0
-5361 3242 3259 3286 0
-5361 3242 3261 3284 0
-5361 3242 3263 3282 0
-5361 3242 3265 3280 0
-5361 3242 3267 3279 0
-5361 3242 3269 3279 0
-5361 3242 3271 0
-5361 3242 3273 0
-5361 3242 3275 0
-5361 3242 3277 0
-5361 3244 3294 0
-5361 3244 3254 3292 0
-5361 3244 3255 3288 0
-5361 3244 3257 3286 0
-5361 3244 3259 3284 0
-5361 3244 3261 3282 0
-5361 3244 3263 3280 0
-5361 3244 3265 3279 0
-5361 3244 3267 3279 0
-5361 3244 3269 0
-5361 3244 3271 0
-5361 3244 3273 0
-5361 3244 3275 0
-5361 3244 3277 0
-5361 3246 3292 0
-5361 3246 3254 3290 0
-5361 3246 3255 3286 0
-5361 3246 3257 3284 0
-5361 3246 3259 3282 0
-5361 3246 3261 3280 0
-5361 3246 3263 3279 0
-5361 3246 3265 3279 0
-5361 3246 3267 0
-5361 3246 3269 0
-5361 3246 3271 0
-5361 3246 3273 0
-5361 3246 3275 0
-5361 3246 3277 0
-5361 3248 3290 0
-5361 3248 3254 3288 0
-5361 3248 3255 3284 0
-5361 3248 3257 3282 0
-5361 3248 3259 3280 0
-5361 3248 3261 3279 0
-5361 3248 3263 3279 0
-5361 3248 3265 0
-5361 3248 3267 0
-5361 3248 3269 0
-5361 3248 3271 0
-5361 3248 3273 0
-5361 3248 3275 0
-5361 3248 3277 0
-5361 3250 3288 0
-5361 3250 3254 3286 0
-5361 3250 3255 3282 0
-5361 3250 3257 3280 0
-5361 3250 3259 3279 0
-5361 3250 3261 3279 0
-5361 3250 3263 0
-5361 3250 3265 0
-5361 3250 3267 0
-5361 3250 3269 0
-5361 3250 3271 0
-5361 3250 3273 0
-5361 3250 3275 0
-5361 3250 3277 0
-5361 3252 3286 0
-5361 3252 3254 3284 0
-5361 3252 3255 3280 0
-5361 3252 3257 3279 0
-5361 3252 3259 3279 0
-5361 3252 3261 0
-5361 3252 3263 0
-5361 3252 3265 0
-5361 3252 3267 0
-5361 3252 3269 0
-5361 3252 3271 0
-5361 3252 3273 0
-5361 3252 3275 0
-5361 3252 3277 0
5361 -3261 -3279 0
5361 -3259 -3279 0
5361 -3257 -3280 0
5361 -3255 -3284 0
5361 -3254 -3286 0
5361 -3252 -3263 -3279 0
5361 -3252 -3261 -3279 0
5361 -3252 -3259 -3280 0
5361 -3252 -3257 -3282 0
5361 -3252 -3255 -3286 0
5361 -3252 -3254 -3288 0
5361 -3250 -3265 -3279 0
5361 -3250 -3263 -3279 0
5361 -3250 -3261 -3280 0
5361 -3250 -3259 -3282 0
5361 -3250 -3257 -3284 0
5361 -3250 -3255 -3288 0
5361 -3250 -3254 -3290 0
5361 -3248 -3267 -3279 0
5361 -3248 -3265 -3279 0
5361 -3248 -3263 -3280 0
5361 -3248 -3261 -3282 0
5361 -3248 -3259 -3284 0
5361 -3248 -3257 -3286 0
5361 -3248 -3255 -3290 0
5361 -3248 -3254 -3292 0
5361 -3246 -3269 -3279 0
5361 -3246 -3267 -3279 0
5361 -3246 -3265 -3280 0
5361 -3246 -3263 -3282 0
5361 -3246 -3261 -3284 0
5361 -3246 -3259 -3286 0
5361 -3246 -3257 -3288 0
5361 -3246 -3255 -3292 0
5361 -3246 -3254 -3294 0
5361 -3244 -3271 -3279 0
5361 -3244 -3269 -3279 0
5361 -3244 -3267 -3280 0
5361 -3244 -3265 -3282 0
5361 -3244 -3263 -3284 0
5361 -3244 -3261 -3286 0
5361 -3244 -3259 -3288 0
5361 -3244 -3257 -3290 0
5361 -3244 -3255 -3294 0
5361 -3244 -3254 -3296 0
5361 -3242 -3273 -3279 0
5361 -3242 -3271 -3279 0
5361 -3242 -3269 -3280 0
5361 -3242 -3267 -3282 0
5361 -3242 -3265 -3284 0
5361 -3242 -3263 -3286 0
5361 -3242 -3261 -3288 0
5361 -3242 -3259 -3290 0
5361 -3242 -3257 -3292 0
5361 -3242 -3255 -3296 0
5361 -3242 -3254 -3298 0
5361 -3240 -3275 -3279 0
5361 -3240 -3273 -3279 0
5361 -3240 -3271 -3280 0
5361 -3240 -3269 -3282 0
5361 -3240 -3267 -3284 0
5361 -3240 -3265 -3286 0
5361 -3240 -3263 -3288 0
5361 -3240 -3261 -3290 0
5361 -3240 -3259 -3292 0
5361 -3240 -3257 -3294 0
5361 -3240 -3255 -3298 0
5361 -3240 -3254 -3300 0
5361 -3238 -3277 -3279 0
5361 -3238 -3275 -3279 0
5361 -3238 -3273 -3280 0
5361 -3238 -3271 -3282 0
5361 -3238 -3269 -3284 0
5361 -3238 -3267 -3286 0
5361 -3238 -3265 -3288 0
5361 -3238 -3263 -3290 0
5361 -3238 -3261 -3292 0
5361 -3238 -3259 -3294 0
5361 -3238 -3257 -3296 0
5361 -3238 -3255 -3300 0
5361 -3238 -3254 -3302 0
5361 -3236 -3279 0
5361 -3236 -3277 -3279 0
5361 -3236 -3275 -3280 0
5361 -3236 -3273 -3282 0
5361 -3236 -3271 -3284 0
5361 -3236 -3269 -3286 0
5361 -3236 -3267 -3288 0
5361 -3236 -3265 -3290 0
5361 -3236 -3263 -3292 0
5361 -3236 -3261 -3294 0
5361 -3236 -3259 -3296 0
5361 -3236 -3257 -3298 0
5361 -3236 -3255 -3302 0
5361 -3236 -3254 -3304 0
5361 -3234 -3279 0
5361 -3234 -3277 -3280 0
5361 -3234 -3275 -3282 0
5361 -3234 -3273 -3284 0
5361 -3234 -3271 -3286 0
5361 -3234 -3269 -3288 0
5361 -3234 -3267 -3290 0
5361 -3234 -3265 -3292 0
5361 -3234 -3263 -3294 0
5361 -3234 -3261 -3296 0
5361 -3234 -3259 -3298 0
5361 -3234 -3257 -3300 0
5361 -3234 -3255 -3304 0
5361 -3234 -3254 -3306 0
5361 -3233 -3280 0
5361 -3233 -3277 -3282 0
5361 -3233 -3275 -3284 0
5361 -3233 -3273 -3286 0
5361 -3233 -3271 -3288 0
5361 -3233 -3269 -3290 0
5361 -3233 -3267 -3292 0
5361 -3233 -3265 -3294 0
5361 -3233 -3263 -3296 0
5361 -3233 -3261 -3298 0
5361 -3233 -3259 -3300 0
5361 -3233 -3257 -3302 0
5361 -3233 -3255 -3306 0
5361 -3233 -3254 -3308 0
c ((16<=(aux247 + aux248 + aux249))=tv=SATLiteral(5362))
-5362 -3259 -3279 0
-5362 -3257 -3279 0
-5362 -3255 -3282 0
-5362 -3254 -3284 0
-5362 -3252 -3261 -3279 0
-5362 -3252 -3259 -3279 0
-5362 -3252 -3257 -3280 0
-5362 -3252 -3255 -3284 0
-5362 -3252 -3254 -3286 0
-5362 -3250 -3263 -3279 0
-5362 -3250 -3261 -3279 0
-5362 -3250 -3259 -3280 0
-5362 -3250 -3257 -3282 0
-5362 -3250 -3255 -3286 0
-5362 -3250 -3254 -3288 0
-5362 -3248 -3265 -3279 0
-5362 -3248 -3263 -3279 0
-5362 -3248 -3261 -3280 0
-5362 -3248 -3259 -3282 0
-5362 -3248 -3257 -3284 0
-5362 -3248 -3255 -3288 0
-5362 -3248 -3254 -3290 0
-5362 -3246 -3267 -3279 0
-5362 -3246 -3265 -3279 0
-5362 -3246 -3263 -3280 0
-5362 -3246 -3261 -3282 0
-5362 -3246 -3259 -3284 0
-5362 -3246 -3257 -3286 0
-5362 -3246 -3255 -3290 0
-5362 -3246 -3254 -3292 0
-5362 -3244 -3269 -3279 0
-5362 -3244 -3267 -3279 0
-5362 -3244 -3265 -3280 0
-5362 -3244 -3263 -3282 0
-5362 -3244 -3261 -3284 0
-5362 -3244 -3259 -3286 0
-5362 -3244 -3257 -3288 0
-5362 -3244 -3255 -3292 0
-5362 -3244 -3254 -3294 0
-5362 -3242 -3271 -3279 0
-5362 -3242 -3269 -3279 0
-5362 -3242 -3267 -3280 0
-5362 -3242 -3265 -3282 0
-5362 -3242 -3263 -3284 0
-5362 -3242 -3261 -3286 0
-5362 -3242 -3259 -3288 0
-5362 -3242 -3257 -3290 0
-5362 -3242 -3255 -3294 0
-5362 -3242 -3254 -3296 0
-5362 -3240 -3273 -3279 0
-5362 -3240 -3271 -3279 0
-5362 -3240 -3269 -3280 0
-5362 -3240 -3267 -3282 0
-5362 -3240 -3265 -3284 0
-5362 -3240 -3263 -3286 0
-5362 -3240 -3261 -3288 0
-5362 -3240 -3259 -3290 0
-5362 -3240 -3257 -3292 0
-5362 -3240 -3255 -3296 0
-5362 -3240 -3254 -3298 0
-5362 -3238 -3275 -3279 0
-5362 -3238 -3273 -3279 0
-5362 -3238 -3271 -3280 0
-5362 -3238 -3269 -3282 0
-5362 -3238 -3267 -3284 0
-5362 -3238 -3265 -3286 0
-5362 -3238 -3263 -3288 0
-5362 -3238 -3261 -3290 0
-5362 -3238 -3259 -3292 0
-5362 -3238 -3257 -3294 0
-5362 -3238 -3255 -3298 0
-5362 -3238 -3254 -3300 0
-5362 -3236 -3277 -3279 0
-5362 -3236 -3275 -3279 0
-5362 -3236 -3273 -3280 0
-5362 -3236 -3271 -3282 0
-5362 -3236 -3269 -3284 0
-5362 -3236 -3267 -3286 0
-5362 -3236 -3265 -3288 0
-5362 -3236 -3263 -3290 0
-5362 -3236 -3261 -3292 0
-5362 -3236 -3259 -3294 0
-5362 -3236 -3257 -3296 0
-5362 -3236 -3255 -3300 0
-5362 -3236 -3254 -3302 0
-5362 -3234 -3279 0
-5362 -3234 -3277 -3279 0
-5362 -3234 -3275 -3280 0
-5362 -3234 -3273 -3282 0
-5362 -3234 -3271 -3284 0
-5362 -3234 -3269 -3286 0
-5362 -3234 -3267 -3288 0
-5362 -3234 -3265 -3290 0
-5362 -3234 -3263 -3292 0
-5362 -3234 -3261 -3294 0
-5362 -3234 -3259 -3296 0
-5362 -3234 -3257 -3298 0
-5362 -3234 -3255 -3302 0
-5362 -3234 -3254 -3304 0
-5362 -3233 -3279 0
-5362 -3233 -3277 -3280 0
-5362 -3233 -3275 -3282 0
-5362 -3233 -3273 -3284 0
-5362 -3233 -3271 -3286 0
-5362 -3233 -3269 -3288 0
-5362 -3233 -3267 -3290 0
-5362 -3233 -3265 -3292 0
-5362 -3233 -3263 -3294 0
-5362 -3233 -3261 -3296 0
-5362 -3233 -3259 -3298 0
-5362 -3233 -3257 -3300 0
-5362 -3233 -3255 -3304 0
-5362 -3233 -3254 -3306 0
5362 3306 0
5362 3254 3304 0
5362 3255 3300 0
5362 3257 3298 0
5362 3259 3296 0
5362 3261 3294 0
5362 3263 3292 0
5362 3265 3290 0
5362 3267 3288 0
5362 3269 3286 0
5362 3271 3284 0
5362 3273 3282 0
5362 3275 3280 0
5362 3277 3279 0
5362 3233 3304 0
5362 3233 3254 3302 0
5362 3233 3255 3298 0
5362 3233 3257 3296 0
5362 3233 3259 3294 0
5362 3233 3261 3292 0
5362 3233 3263 3290 0
5362 3233 3265 3288 0
5362 3233 3267 3286 0
5362 3233 3269 3284 0
5362 3233 3271 3282 0
5362 3233 3273 3280 0
5362 3233 3275 3279 0
5362 3233 3277 3279 0
5362 3234 3302 0
5362 3234 3254 3300 0
5362 3234 3255 3296 0
5362 3234 3257 3294 0
5362 3234 3259 3292 0
5362 3234 3261 3290 0
5362 3234 3263 3288 0
5362 3234 3265 3286 0
5362 3234 3267 3284 0
5362 3234 3269 3282 0
5362 3234 3271 3280 0
5362 3234 3273 3279 0
5362 3234 3275 3279 0
5362 3234 3277 0
5362 3236 3300 0
5362 3236 3254 3298 0
5362 3236 3255 3294 0
5362 3236 3257 3292 0
5362 3236 3259 3290 0
5362 3236 3261 3288 0
5362 3236 3263 3286 0
5362 3236 3265 3284 0
5362 3236 3267 3282 0
5362 3236 3269 3280 0
5362 3236 3271 3279 0
5362 3236 3273 3279 0
5362 3236 3275 0
5362 3236 3277 0
5362 3238 3298 0
5362 3238 3254 3296 0
5362 3238 3255 3292 0
5362 3238 3257 3290 0
5362 3238 3259 3288 0
5362 3238 3261 3286 0
5362 3238 3263 3284 0
5362 3238 3265 3282 0
5362 3238 3267 3280 0
5362 3238 3269 3279 0
5362 3238 3271 3279 0
5362 3238 3273 0
5362 3238 3275 0
5362 3238 3277 0
5362 3240 3296 0
5362 3240 3254 3294 0
5362 3240 3255 3290 0
5362 3240 3257 3288 0
5362 3240 3259 3286 0
5362 3240 3261 3284 0
5362 3240 3263 3282 0
5362 3240 3265 3280 0
5362 3240 3267 3279 0
5362 3240 3269 3279 0
5362 3240 3271 0
5362 3240 3273 0
5362 3240 3275 0
5362 3240 3277 0
5362 3242 3294 0
5362 3242 3254 3292 0
5362 3242 3255 3288 0
5362 3242 3257 3286 0
5362 3242 3259 3284 0
5362 3242 3261 3282 0
5362 3242 3263 3280 0
5362 3242 3265 3279 0
5362 3242 3267 3279 0
5362 3242 3269 0
5362 3242 3271 0
5362 3242 3273 0
5362 3242 3275 0
5362 3242 3277 0
5362 3244 3292 0
5362 3244 3254 3290 0
5362 3244 3255 3286 0
5362 3244 3257 3284 0
5362 3244 3259 3282 0
5362 3244 3261 3280 0
5362 3244 3263 3279 0
5362 3244 3265 3279 0
5362 3244 3267 0
5362 3244 3269 0
5362 3244 3271 0
5362 3244 3273 0
5362 3244 3275 0
5362 3244 3277 0
5362 3246 3290 0
5362 3246 3254 3288 0
5362 3246 3255 3284 0
5362 3246 3257 3282 0
5362 3246 3259 3280 0
5362 3246 3261 3279 0
5362 3246 3263 3279 0
5362 3246 3265 0
5362 3246 3267 0
5362 3246 3269 0
5362 3246 3271 0
5362 3246 3273 0
5362 3246 3275 0
5362 3246 3277 0
5362 3248 3288 0
5362 3248 3254 3286 0
5362 3248 3255 3282 0
5362 3248 3257 3280 0
5362 3248 3259 3279 0
5362 3248 3261 3279 0
5362 3248 3263 0
5362 3248 3265 0
5362 3248 3267 0
5362 3248 3269 0
5362 3248 3271 0
5362 3248 3273 0
5362 3248 3275 0
5362 3248 3277 0
5362 3250 3286 0
5362 3250 3254 3284 0
5362 3250 3255 3280 0
5362 3250 3257 3279 0
5362 3250 3259 3279 0
5362 3250 3261 0
5362 3250 3263 0
5362 3250 3265 0
5362 3250 3267 0
5362 3250 3269 0
5362 3250 3271 0
5362 3250 3273 0
5362 3250 3275 0
5362 3250 3277 0
5362 3252 3284 0
5362 3252 3254 3282 0
5362 3252 3255 3279 0
5362 3252 3257 3279 0
5362 3252 3259 0
5362 3252 3261 0
5362 3252 3263 0
5362 3252 3265 0
5362 3252 3267 0
5362 3252 3269 0
5362 3252 3271 0
5362 3252 3273 0
5362 3252 3275 0
5362 3252 3277 0
c (((aux251 + aux252 + aux15)<=9)=tv=SATLiteral(5363))
-5363 3361 0
-5363 3321 3359 0
-5363 3322 3357 0
-5363 3324 3355 0
-5363 3326 3353 0
-5363 3328 3351 0
-5363 3330 3349 0
-5363 3332 3347 0
-5363 3334 3345 0
-5363 3336 3344 0
-5363 3338 0
-5363 3340 0
-5363 3342 0
-5363 2631 3359 0
-5363 2631 3321 3357 0
-5363 2631 3322 3355 0
-5363 2631 3324 3353 0
-5363 2631 3326 3351 0
-5363 2631 3328 3349 0
-5363 2631 3330 3347 0
-5363 2631 3332 3345 0
-5363 2631 3334 3344 0
-5363 2631 3336 0
-5363 2631 3338 0
-5363 2631 3340 0
-5363 2631 3342 0
-5363 2632 3357 0
-5363 2632 3321 3355 0
-5363 2632 3322 3353 0
-5363 2632 3324 3351 0
-5363 2632 3326 3349 0
-5363 2632 3328 3347 0
-5363 2632 3330 3345 0
-5363 2632 3332 3344 0
-5363 2632 3334 0
-5363 2632 3336 0
-5363 2632 3338 0
-5363 2632 3340 0
-5363 2632 3342 0
-5363 2634 3355 0
-5363 2634 3321 3353 0
-5363 2634 3322 3351 0
-5363 2634 3324 3349 0
-5363 2634 3326 3347 0
-5363 2634 3328 3345 0
-5363 2634 3330 3344 0
-5363 2634 3332 0
-5363 2634 3334 0
-5363 2634 3336 0
-5363 2634 3338 0
-5363 2634 3340 0
-5363 2634 3342 0
-5363 2636 3353 0
-5363 2636 3321 3351 0
-5363 2636 3322 3349 0
-5363 2636 3324 3347 0
-5363 2636 3326 3345 0
-5363 2636 3328 3344 0
-5363 2636 3330 0
-5363 2636 3332 0
-5363 2636 3334 0
-5363 2636 3336 0
-5363 2636 3338 0
-5363 2636 3340 0
-5363 2636 3342 0
-5363 2638 3349 0
-5363 2638 3321 3347 0
-5363 2638 3322 3345 0
-5363 2638 3324 3344 0
-5363 2638 3326 0
-5363 2638 3328 0
-5363 2638 3330 0
-5363 2638 3332 0
-5363 2638 3334 0
-5363 2638 3336 0
-5363 2638 3338 0
-5363 2638 3340 0
-5363 2638 3342 0
-5363 2640 3347 0
-5363 2640 3321 3345 0
-5363 2640 3322 3344 0
-5363 2640 3324 0
-5363 2640 3326 0
-5363 2640 3328 0
-5363 2640 3330 0
-5363 2640 3332 0
-5363 2640 3334 0
-5363 2640 3336 0
-5363 2640 3338 0
-5363 2640 3340 0
-5363 2640 3342 0
-5363 2642 3345 0
-5363 2642 3321 3344 0
-5363 2642 3322 0
-5363 2642 3324 0
-5363 2642 3326 0
-5363 2642 3328 0
-5363 2642 3330 0
-5363 2642 3332 0
-5363 2642 3334 0
-5363 2642 3336 0
-5363 2642 3338 0
-5363 2642 3340 0
-5363 2642 3342 0
5363 -3322 -3344 0
5363 -3321 -3345 0
5363 -2642 -3324 -3344 0
5363 -2642 -3322 -3345 0
5363 -2642 -3321 -3347 0
5363 -2640 -3326 -3344 0
5363 -2640 -3324 -3345 0
5363 -2640 -3322 -3347 0
5363 -2640 -3321 -3349 0
5363 -2638 -3330 -3344 0
5363 -2638 -3328 -3345 0
5363 -2638 -3326 -3347 0
5363 -2638 -3324 -3349 0
5363 -2638 -3322 -3351 0
5363 -2638 -3321 -3353 0
5363 -2636 -3332 -3344 0
5363 -2636 -3330 -3345 0
5363 -2636 -3328 -3347 0
5363 -2636 -3326 -3349 0
5363 -2636 -3324 -3351 0
5363 -2636 -3322 -3353 0
5363 -2636 -3321 -3355 0
5363 -2634 -3334 -3344 0
5363 -2634 -3332 -3345 0
5363 -2634 -3330 -3347 0
5363 -2634 -3328 -3349 0
5363 -2634 -3326 -3351 0
5363 -2634 -3324 -3353 0
5363 -2634 -3322 -3355 0
5363 -2634 -3321 -3357 0
5363 -2632 -3336 -3344 0
5363 -2632 -3334 -3345 0
5363 -2632 -3332 -3347 0
5363 -2632 -3330 -3349 0
5363 -2632 -3328 -3351 0
5363 -2632 -3326 -3353 0
5363 -2632 -3324 -3355 0
5363 -2632 -3322 -3357 0
5363 -2632 -3321 -3359 0
5363 -2631 -3338 -3344 0
5363 -2631 -3336 -3345 0
5363 -2631 -3334 -3347 0
5363 -2631 -3332 -3349 0
5363 -2631 -3330 -3351 0
5363 -2631 -3328 -3353 0
5363 -2631 -3326 -3355 0
5363 -2631 -3324 -3357 0
5363 -2631 -3322 -3359 0
5363 -2631 -3321 -3361 0
c ((9<=(aux251 + aux252 + aux15))=tv=SATLiteral(5364))
-5364 -3321 -3344 0
-5364 -2642 -3322 -3344 0
-5364 -2642 -3321 -3345 0
-5364 -2640 -3324 -3344 0
-5364 -2640 -3322 -3345 0
-5364 -2640 -3321 -3347 0
-5364 -2638 -3328 -3344 0
-5364 -2638 -3326 -3345 0
-5364 -2638 -3324 -3347 0
-5364 -2638 -3322 -3349 0
-5364 -2638 -3321 -3351 0
-5364 -2636 -3330 -3344 0
-5364 -2636 -3328 -3345 0
-5364 -2636 -3326 -3347 0
-5364 -2636 -3324 -3349 0
-5364 -2636 -3322 -3351 0
-5364 -2636 -3321 -3353 0
-5364 -2634 -3332 -3344 0
-5364 -2634 -3330 -3345 0
-5364 -2634 -3328 -3347 0
-5364 -2634 -3326 -3349 0
-5364 -2634 -3324 -3351 0
-5364 -2634 -3322 -3353 0
-5364 -2634 -3321 -3355 0
-5364 -2632 -3334 -3344 0
-5364 -2632 -3332 -3345 0
-5364 -2632 -3330 -3347 0
-5364 -2632 -3328 -3349 0
-5364 -2632 -3326 -3351 0
-5364 -2632 -3324 -3353 0
-5364 -2632 -3322 -3355 0
-5364 -2632 -3321 -3357 0
-5364 -2631 -3336 -3344 0
-5364 -2631 -3334 -3345 0
-5364 -2631 -3332 -3347 0
-5364 -2631 -3330 -3349 0
-5364 -2631 -3328 -3351 0
-5364 -2631 -3326 -3353 0
-5364 -2631 -3324 -3355 0
-5364 -2631 -3322 -3357 0
-5364 -2631 -3321 -3359 0
5364 3359 0
5364 3321 3357 0
5364 3322 3355 0
5364 3324 3353 0
5364 3326 3351 0
5364 3328 3349 0
5364 3330 3347 0
5364 3332 3345 0
5364 3334 3344 0
5364 3336 0
5364 3338 0
5364 3340 0
5364 3342 0
5364 2631 3357 0
5364 2631 3321 3355 0
5364 2631 3322 3353 0
5364 2631 3324 3351 0
5364 2631 3326 3349 0
5364 2631 3328 3347 0
5364 2631 3330 3345 0
5364 2631 3332 3344 0
5364 2631 3334 0
5364 2631 3336 0
5364 2631 3338 0
5364 2631 3340 0
5364 2631 3342 0
5364 2632 3355 0
5364 2632 3321 3353 0
5364 2632 3322 3351 0
5364 2632 3324 3349 0
5364 2632 3326 3347 0
5364 2632 3328 3345 0
5364 2632 3330 3344 0
5364 2632 3332 0
5364 2632 3334 0
5364 2632 3336 0
5364 2632 3338 0
5364 2632 3340 0
5364 2632 3342 0
5364 2634 3353 0
5364 2634 3321 3351 0
5364 2634 3322 3349 0
5364 2634 3324 3347 0
5364 2634 3326 3345 0
5364 2634 3328 3344 0
5364 2634 3330 0
5364 2634 3332 0
5364 2634 3334 0
5364 2634 3336 0
5364 2634 3338 0
5364 2634 3340 0
5364 2634 3342 0
5364 2636 3351 0
5364 2636 3321 3349 0
5364 2636 3322 3347 0
5364 2636 3324 3345 0
5364 2636 3326 3344 0
5364 2636 3328 0
5364 2636 3330 0
5364 2636 3332 0
5364 2636 3334 0
5364 2636 3336 0
5364 2636 3338 0
5364 2636 3340 0
5364 2636 3342 0
5364 2638 3347 0
5364 2638 3321 3345 0
5364 2638 3322 3344 0
5364 2638 3324 0
5364 2638 3326 0
5364 2638 3328 0
5364 2638 3330 0
5364 2638 3332 0
5364 2638 3334 0
5364 2638 3336 0
5364 2638 3338 0
5364 2638 3340 0
5364 2638 3342 0
5364 2640 3345 0
5364 2640 3321 3344 0
5364 2640 3322 0
5364 2640 3324 0
5364 2640 3326 0
5364 2640 3328 0
5364 2640 3330 0
5364 2640 3332 0
5364 2640 3334 0
5364 2640 3336 0
5364 2640 3338 0
5364 2640 3340 0
5364 2640 3342 0
5364 2642 3344 0
5364 2642 3321 0
5364 2642 3322 0
5364 2642 3324 0
5364 2642 3326 0
5364 2642 3328 0
5364 2642 3330 0
5364 2642 3332 0
5364 2642 3334 0
5364 2642 3336 0
5364 2642 3338 0
5364 2642 3340 0
5364 2642 3342 0
c (((variant_fields_00002_00007_00001 + variant_fields_00002_00007_00002 + variant_fields_00002_00007_00003)<=16)=tv=SATLiteral(5365))
-5365 1359 1362 0
-5365 1360 1362 0
5365 -1362 0
5365 -1360 -1362 0
5365 -1359 0
c ((16<=(variant_fields_00002_00007_00001 + variant_fields_00002_00007_00002 + variant_fields_00002_00007_00003))=tv=SATLiteral(5366))
-5366 -1360 -1362 0
-5366 -1359 -1363 0
5366 1363 0
5366 1359 1362 0
5366 1360 0
c (((aux254 + aux255 + aux256)<=21)=tv=SATLiteral(5367))
-5367 3387 3477 0
-5367 3389 3475 0
-5367 3391 3473 0
-5367 3393 3471 0
-5367 3395 3469 0
-5367 3397 3467 0
-5367 3399 3465 0
-5367 3401 3463 0
-5367 3403 3461 0
-5367 3405 3459 0
-5367 3407 3457 0
-5367 3409 3455 0
-5367 3411 3453 0
-5367 3413 3451 0
-5367 3415 3387 3475 0
-5367 3415 3389 3473 0
-5367 3415 3391 3471 0
-5367 3415 3393 3469 0
-5367 3415 3395 3467 0
-5367 3415 3397 3465 0
-5367 3415 3399 3463 0
-5367 3415 3401 3461 0
-5367 3415 3403 3459 0
-5367 3415 3405 3457 0
-5367 3415 3407 3455 0
-5367 3415 3409 3453 0
-5367 3415 3411 3451 0
-5367 3415 3413 3449 0
-5367 3416 3386 3477 0
-5367 3416 3387 3473 0
-5367 3416 3389 3471 0
-5367 3416 3391 3469 0
-5367 3416 3393 3467 0
-5367 3416 3395 3465 0
-5367 3416 3397 3463 0
-5367 3416 3399 3461 0
-5367 3416 3401 3459 0
-5367 3416 3403 3457 0
-5367 3416 3405 3455 0
-5367 3416 3407 3453 0
-5367 3416 3409 3451 0
-5367 3416 3411 3449 0
-5367 3416 3413 3447 0
-5367 3418 3477 0
-5367 3418 3386 3475 0
-5367 3418 3387 3471 0
-5367 3418 3389 3469 0
-5367 3418 3391 3467 0
-5367 3418 3393 3465 0
-5367 3418 3395 3463 0
-5367 3418 3397 3461 0
-5367 3418 3399 3459 0
-5367 3418 3401 3457 0
-5367 3418 3403 3455 0
-5367 3418 3405 3453 0
-5367 3418 3407 3451 0
-5367 3418 3409 3449 0
-5367 3418 3411 3447 0
-5367 3418 3413 3445 0
-5367 3420 3475 0
-5367 3420 3386 3473 0
-5367 3420 3387 3469 0
-5367 3420 3389 3467 0
-5367 3420 3391 3465 0
-5367 3420 3393 3463 0
-5367 3420 3395 3461 0
-5367 3420 3397 3459 0
-5367 3420 3399 3457 0
-5367 3420 3401 3455 0
-5367 3420 3403 3453 0
-5367 3420 3405 3451 0
-5367 3420 3407 3449 0
-5367 3420 3409 3447 0
-5367 3420 3411 3445 0
-5367 3420 3413 3443 0
-5367 3422 3473 0
-5367 3422 3386 3471 0
-5367 3422 3387 3467 0
-5367 3422 3389 3465 0
-5367 3422 3391 3463 0
-5367 3422 3393 3461 0
-5367 3422 3395 3459 0
-5367 3422 3397 3457 0
-5367 3422 3399 3455 0
-5367 3422 3401 3453 0
-5367 3422 3403 3451 0
-5367 3422 3405 3449 0
-5367 3422 3407 3447 0
-5367 3422 3409 3445 0
-5367 3422 3411 3443 0
-5367 3422 3413 3442 0
-5367 3424 3471 0
-5367 3424 3386 3469 0
-5367 3424 3387 3465 0
-5367 3424 3389 3463 0
-5367 3424 3391 3461 0
-5367 3424 3393 3459 0
-5367 3424 3395 3457 0
-5367 3424 3397 3455 0
-5367 3424 3399 3453 0
-5367 3424 3401 3451 0
-5367 3424 3403 3449 0
-5367 3424 3405 3447 0
-5367 3424 3407 3445 0
-5367 3424 3409 3443 0
-5367 3424 3411 3442 0
-5367 3424 3413 0
-5367 3426 3469 0
-5367 3426 3386 3467 0
-5367 3426 3387 3463 0
-5367 3426 3389 3461 0
-5367 3426 3391 3459 0
-5367 3426 3393 3457 0
-5367 3426 3395 3455 0
-5367 3426 3397 3453 0
-5367 3426 3399 3451 0
-5367 3426 3401 3449 0
-5367 3426 3403 3447 0
-5367 3426 3405 3445 0
-5367 3426 3407 3443 0
-5367 3426 3409 3442 0
-5367 3426 3411 0
-5367 3426 3413 0
-5367 3428 3467 0
-5367 3428 3386 3465 0
-5367 3428 3387 3461 0
-5367 3428 3389 3459 0
-5367 3428 3391 3457 0
-5367 3428 3393 3455 0
-5367 3428 3395 3453 0
-5367 3428 3397 3451 0
-5367 3428 3399 3449 0
-5367 3428 3401 3447 0
-5367 3428 3403 3445 0
-5367 3428 3405 3443 0
-5367 3428 3407 3442 0
-5367 3428 3409 0
-5367 3428 3411 0
-5367 3428 3413 0
-5367 3430 3465 0
-5367 3430 3386 3463 0
-5367 3430 3387 3459 0
-5367 3430 3389 3457 0
-5367 3430 3391 3455 0
-5367 3430 3393 3453 0
-5367 3430 3395 3451 0
-5367 3430 3397 3449 0
-5367 3430 3399 3447 0
-5367 3430 3401 3445 0
-5367 3430 3403 3443 0
-5367 3430 3405 3442 0
-5367 3430 3407 0
-5367 3430 3409 0
-5367 3430 3411 0
-5367 3430 3413 0
-5367 3432 3463 0
-5367 3432 3386 3461 0
-5367 3432 3387 3457 0
-5367 3432 3389 3455 0
-5367 3432 3391 3453 0
-5367 3432 3393 3451 0
-5367 3432 3395 3449 0
-5367 3432 3397 3447 0
-5367 3432 3399 3445 0
-5367 3432 3401 3443 0
-5367 3432 3403 3442 0
-5367 3432 3405 0
-5367 3432 3407 0
-5367 3432 3409 0
-5367 3432 3411 0
-5367 3432 3413 0
-5367 3434 3461 0
-5367 3434 3386 3459 0
-5367 3434 3387 3455 0
-5367 3434 3389 3453 0
-5367 3434 3391 3451 0
-5367 3434 3393 3449 0
-5367 3434 3395 3447 0
-5367 3434 3397 3445 0
-5367 3434 3399 3443 0
-5367 3434 3401 3442 0
-5367 3434 3403 0
-5367 3434 3405 0
-5367 3434 3407 0
-5367 3434 3409 0
-5367 3434 3411 0
-5367 3434 3413 0
-5367 3436 3459 0
-5367 3436 3386 3457 0
-5367 3436 3387 3453 0
-5367 3436 3389 3451 0
-5367 3436 3391 3449 0
-5367 3436 3393 3447 0
-5367 3436 3395 3445 0
-5367 3436 3397 3443 0
-5367 3436 3399 3442 0
-5367 3436 3401 0
-5367 3436 3403 0
-5367 3436 3405 0
-5367 3436 3407 0
-5367 3436 3409 0
-5367 3436 3411 0
-5367 3436 3413 0
-5367 3438 3457 0
-5367 3438 3386 3455 0
-5367 3438 3387 3451 0
-5367 3438 3389 3449 0
-5367 3438 3391 3447 0
-5367 3438 3393 3445 0
-5367 3438 3395 3443 0
-5367 3438 3397 3442 0
-5367 3438 3399 0
-5367 3438 3401 0
-5367 3438 3403 0
-5367 3438 3405 0
-5367 3438 3407 0
-5367 3438 3409 0
-5367 3438 3411 0
-5367 3438 3413 0
-5367 3440 3455 0
-5367 3440 3386 3453 0
-5367 3440 3387 3449 0
-5367 3440 3389 3447 0
-5367 3440 3391 3445 0
-5367 3440 3393 3443 0
-5367 3440 3395 3442 0
-5367 3440 3397 0
-5367 3440 3399 0
-5367 3440 3401 0
-5367 3440 3403 0
-5367 3440 3405 0
-5367 3440 3407 0
-5367 3440 3409 0
-5367 3440 3411 0
-5367 3440 3413 0
5367 -3397 -3442 0
5367 -3395 -3443 0
5367 -3393 -3445 0
5367 -3391 -3447 0
5367 -3389 -3449 0
5367 -3387 -3453 0
5367 -3386 -3455 0
5367 -3440 -3399 -3442 0
5367 -3440 -3397 -3443 0
5367 -3440 -3395 -3445 0
5367 -3440 -3393 -3447 0
5367 -3440 -3391 -3449 0
5367 -3440 -3389 -3451 0
5367 -3440 -3387 -3455 0
5367 -3440 -3386 -3457 0
5367 -3438 -3401 -3442 0
5367 -3438 -3399 -3443 0
5367 -3438 -3397 -3445 0
5367 -3438 -3395 -3447 0
5367 -3438 -3393 -3449 0
5367 -3438 -3391 -3451 0
5367 -3438 -3389 -3453 0
5367 -3438 -3387 -3457 0
5367 -3438 -3386 -3459 0
5367 -3436 -3403 -3442 0
5367 -3436 -3401 -3443 0
5367 -3436 -3399 -3445 0
5367 -3436 -3397 -3447 0
5367 -3436 -3395 -3449 0
5367 -3436 -3393 -3451 0
5367 -3436 -3391 -3453 0
5367 -3436 -3389 -3455 0
5367 -3436 -3387 -3459 0
5367 -3436 -3386 -3461 0
5367 -3434 -3405 -3442 0
5367 -3434 -3403 -3443 0
5367 -3434 -3401 -3445 0
5367 -3434 -3399 -3447 0
5367 -3434 -3397 -3449 0
5367 -3434 -3395 -3451 0
5367 -3434 -3393 -3453 0
5367 -3434 -3391 -3455 0
5367 -3434 -3389 -3457 0
5367 -3434 -3387 -3461 0
5367 -3434 -3386 -3463 0
5367 -3432 -3407 -3442 0
5367 -3432 -3405 -3443 0
5367 -3432 -3403 -3445 0
5367 -3432 -3401 -3447 0
5367 -3432 -3399 -3449 0
5367 -3432 -3397 -3451 0
5367 -3432 -3395 -3453 0
5367 -3432 -3393 -3455 0
5367 -3432 -3391 -3457 0
5367 -3432 -3389 -3459 0
5367 -3432 -3387 -3463 0
5367 -3432 -3386 -3465 0
5367 -3430 -3409 -3442 0
5367 -3430 -3407 -3443 0
5367 -3430 -3405 -3445 0
5367 -3430 -3403 -3447 0
5367 -3430 -3401 -3449 0
5367 -3430 -3399 -3451 0
5367 -3430 -3397 -3453 0
5367 -3430 -3395 -3455 0
5367 -3430 -3393 -3457 0
5367 -3430 -3391 -3459 0
5367 -3430 -3389 -3461 0
5367 -3430 -3387 -3465 0
5367 -3430 -3386 -3467 0
5367 -3428 -3411 -3442 0
5367 -3428 -3409 -3443 0
5367 -3428 -3407 -3445 0
5367 -3428 -3405 -3447 0
5367 -3428 -3403 -3449 0
5367 -3428 -3401 -3451 0
5367 -3428 -3399 -3453 0
5367 -3428 -3397 -3455 0
5367 -3428 -3395 -3457 0
5367 -3428 -3393 -3459 0
5367 -3428 -3391 -3461 0
5367 -3428 -3389 -3463 0
5367 -3428 -3387 -3467 0
5367 -3428 -3386 -3469 0
5367 -3426 -3413 -3442 0
5367 -3426 -3411 -3443 0
5367 -3426 -3409 -3445 0
5367 -3426 -3407 -3447 0
5367 -3426 -3405 -3449 0
5367 -3426 -3403 -3451 0
5367 -3426 -3401 -3453 0
5367 -3426 -3399 -3455 0
5367 -3426 -3397 -3457 0
5367 -3426 -3395 -3459 0
5367 -3426 -3393 -3461 0
5367 -3426 -3391 -3463 0
5367 -3426 -3389 -3465 0
5367 -3426 -3387 -3469 0
5367 -3426 -3386 -3471 0
5367 -3424 -3442 0
5367 -3424 -3413 -3443 0
5367 -3424 -3411 -3445 0
5367 -3424 -3409 -3447 0
5367 -3424 -3407 -3449 0
5367 -3424 -3405 -3451 0
5367 -3424 -3403 -3453 0
5367 -3424 -3401 -3455 0
5367 -3424 -3399 -3457 0
5367 -3424 -3397 -3459 0
5367 -3424 -3395 -3461 0
5367 -3424 -3393 -3463 0
5367 -3424 -3391 -3465 0
5367 -3424 -3389 -3467 0
5367 -3424 -3387 -3471 0
5367 -3424 -3386 -3473 0
5367 -3422 -3443 0
5367 -3422 -3413 -3445 0
5367 -3422 -3411 -3447 0
5367 -3422 -3409 -3449 0
5367 -3422 -3407 -3451 0
5367 -3422 -3405 -3453 0
5367 -3422 -3403 -3455 0
5367 -3422 -3401 -3457 0
5367 -3422 -3399 -3459 0
5367 -3422 -3397 -3461 0
5367 -3422 -3395 -3463 0
5367 -3422 -3393 -3465 0
5367 -3422 -3391 -3467 0
5367 -3422 -3389 -3469 0
5367 -3422 -3387 -3473 0
5367 -3422 -3386 -3475 0
5367 -3420 -3445 0
5367 -3420 -3413 -3447 0
5367 -3420 -3411 -3449 0
5367 -3420 -3409 -3451 0
5367 -3420 -3407 -3453 0
5367 -3420 -3405 -3455 0
5367 -3420 -3403 -3457 0
5367 -3420 -3401 -3459 0
5367 -3420 -3399 -3461 0
5367 -3420 -3397 -3463 0
5367 -3420 -3395 -3465 0
5367 -3420 -3393 -3467 0
5367 -3420 -3391 -3469 0
5367 -3420 -3389 -3471 0
5367 -3420 -3387 -3475 0
5367 -3420 -3386 -3477 0
5367 -3418 -3447 0
5367 -3418 -3413 -3449 0
5367 -3418 -3411 -3451 0
5367 -3418 -3409 -3453 0
5367 -3418 -3407 -3455 0
5367 -3418 -3405 -3457 0
5367 -3418 -3403 -3459 0
5367 -3418 -3401 -3461 0
5367 -3418 -3399 -3463 0
5367 -3418 -3397 -3465 0
5367 -3418 -3395 -3467 0
5367 -3418 -3393 -3469 0
5367 -3418 -3391 -3471 0
5367 -3418 -3389 -3473 0
5367 -3418 -3387 -3477 0
5367 -3418 -3386 0
5367 -3416 -3449 0
5367 -3416 -3413 -3451 0
5367 -3416 -3411 -3453 0
5367 -3416 -3409 -3455 0
5367 -3416 -3407 -3457 0
5367 -3416 -3405 -3459 0
5367 -3416 -3403 -3461 0
5367 -3416 -3401 -3463 0
5367 -3416 -3399 -3465 0
5367 -3416 -3397 -3467 0
5367 -3416 -3395 -3469 0
5367 -3416 -3393 -3471 0
5367 -3416 -3391 -3473 0
5367 -3416 -3389 -3475 0
5367 -3416 -3387 0
5367 -3416 -3386 0
5367 -3415 -3451 0
5367 -3415 -3413 -3453 0
5367 -3415 -3411 -3455 0
5367 -3415 -3409 -3457 0
5367 -3415 -3407 -3459 0
5367 -3415 -3405 -3461 0
5367 -3415 -3403 -3463 0
5367 -3415 -3401 -3465 0
5367 -3415 -3399 -3467 0
5367 -3415 -3397 -3469 0
5367 -3415 -3395 -3471 0
5367 -3415 -3393 -3473 0
5367 -3415 -3391 -3475 0
5367 -3415 -3389 -3477 0
5367 -3415 -3387 0
5367 -3415 -3386 0
c ((21<=(aux254 + aux255 + aux256))=tv=SATLiteral(5368))
-5368 -3395 -3442 0
-5368 -3393 -3443 0
-5368 -3391 -3445 0
-5368 -3389 -3447 0
-5368 -3387 -3451 0
-5368 -3386 -3453 0
-5368 -3440 -3397 -3442 0
-5368 -3440 -3395 -3443 0
-5368 -3440 -3393 -3445 0
-5368 -3440 -3391 -3447 0
-5368 -3440 -3389 -3449 0
-5368 -3440 -3387 -3453 0
-5368 -3440 -3386 -3455 0
-5368 -3438 -3399 -3442 0
-5368 -3438 -3397 -3443 0
-5368 -3438 -3395 -3445 0
-5368 -3438 -3393 -3447 0
-5368 -3438 -3391 -3449 0
-5368 -3438 -3389 -3451 0
-5368 -3438 -3387 -3455 0
-5368 -3438 -3386 -3457 0
-5368 -3436 -3401 -3442 0
-5368 -3436 -3399 -3443 0
-5368 -3436 -3397 -3445 0
-5368 -3436 -3395 -3447 0
-5368 -3436 -3393 -3449 0
-5368 -3436 -3391 -3451 0
-5368 -3436 -3389 -3453 0
-5368 -3436 -3387 -3457 0
-5368 -3436 -3386 -3459 0
-5368 -3434 -3403 -3442 0
-5368 -3434 -3401 -3443 0
-5368 -3434 -3399 -3445 0
-5368 -3434 -3397 -3447 0
-5368 -3434 -3395 -3449 0
-5368 -3434 -3393 -3451 0
-5368 -3434 -3391 -3453 0
-5368 -3434 -3389 -3455 0
-5368 -3434 -3387 -3459 0
-5368 -3434 -3386 -3461 0
-5368 -3432 -3405 -3442 0
-5368 -3432 -3403 -3443 0
-5368 -3432 -3401 -3445 0
-5368 -3432 -3399 -3447 0
-5368 -3432 -3397 -3449 0
-5368 -3432 -3395 -3451 0
-5368 -3432 -3393 -3453 0
-5368 -3432 -3391 -3455 0
-5368 -3432 -3389 -3457 0
-5368 -3432 -3387 -3461 0
-5368 -3432 -3386 -3463 0
-5368 -3430 -3407 -3442 0
-5368 -3430 -3405 -3443 0
-5368 -3430 -3403 -3445 0
-5368 -3430 -3401 -3447 0
-5368 -3430 -3399 -3449 0
-5368 -3430 -3397 -3451 0
-5368 -3430 -3395 -3453 0
-5368 -3430 -3393 -3455 0
-5368 -3430 -3391 -3457 0
-5368 -3430 -3389 -3459 0
-5368 -3430 -3387 -3463 0
-5368 -3430 -3386 -3465 0
-5368 -3428 -3409 -3442 0
-5368 -3428 -3407 -3443 0
-5368 -3428 -3405 -3445 0
-5368 -3428 -3403 -3447 0
-5368 -3428 -3401 -3449 0
-5368 -3428 -3399 -3451 0
-5368 -3428 -3397 -3453 0
-5368 -3428 -3395 -3455 0
-5368 -3428 -3393 -3457 0
-5368 -3428 -3391 -3459 0
-5368 -3428 -3389 -3461 0
-5368 -3428 -3387 -3465 0
-5368 -3428 -3386 -3467 0
-5368 -3426 -3411 -3442 0
-5368 -3426 -3409 -3443 0
-5368 -3426 -3407 -3445 0
-5368 -3426 -3405 -3447 0
-5368 -3426 -3403 -3449 0
-5368 -3426 -3401 -3451 0
-5368 -3426 -3399 -3453 0
-5368 -3426 -3397 -3455 0
-5368 -3426 -3395 -3457 0
-5368 -3426 -3393 -3459 0
-5368 -3426 -3391 -3461 0
-5368 -3426 -3389 -3463 0
-5368 -3426 -3387 -3467 0
-5368 -3426 -3386 -3469 0
-5368 -3424 -3413 -3442 0
-5368 -3424 -3411 -3443 0
-5368 -3424 -3409 -3445 0
-5368 -3424 -3407 -3447 0
-5368 -3424 -3405 -3449 0
-5368 -3424 -3403 -3451 0
-5368 -3424 -3401 -3453 0
-5368 -3424 -3399 -3455 0
-5368 -3424 -3397 -3457 0
-5368 -3424 -3395 -3459 0
-5368 -3424 -3393 -3461 0
-5368 -3424 -3391 -3463 0
-5368 -3424 -3389 -3465 0
-5368 -3424 -3387 -3469 0
-5368 -3424 -3386 -3471 0
-5368 -3422 -3442 0
-5368 -3422 -3413 -3443 0
-5368 -3422 -3411 -3445 0
-5368 -3422 -3409 -3447 0
-5368 -3422 -3407 -3449 0
-5368 -3422 -3405 -3451 0
-5368 -3422 -3403 -3453 0
-5368 -3422 -3401 -3455 0
-5368 -3422 -3399 -3457 0
-5368 -3422 -3397 -3459 0
-5368 -3422 -3395 -3461 0
-5368 -3422 -3393 -3463 0
-5368 -3422 -3391 -3465 0
-5368 -3422 -3389 -3467 0
-5368 -3422 -3387 -3471 0
-5368 -3422 -3386 -3473 0
-5368 -3420 -3443 0
-5368 -3420 -3413 -3445 0
-5368 -3420 -3411 -3447 0
-5368 -3420 -3409 -3449 0
-5368 -3420 -3407 -3451 0
-5368 -3420 -3405 -3453 0
-5368 -3420 -3403 -3455 0
-5368 -3420 -3401 -3457 0
-5368 -3420 -3399 -3459 0
-5368 -3420 -3397 -3461 0
-5368 -3420 -3395 -3463 0
-5368 -3420 -3393 -3465 0
-5368 -3420 -3391 -3467 0
-5368 -3420 -3389 -3469 0
-5368 -3420 -3387 -3473 0
-5368 -3420 -3386 -3475 0
-5368 -3418 -3445 0
-5368 -3418 -3413 -3447 0
-5368 -3418 -3411 -3449 0
-5368 -3418 -3409 -3451 0
-5368 -3418 -3407 -3453 0
-5368 -3418 -3405 -3455 0
-5368 -3418 -3403 -3457 0
-5368 -3418 -3401 -3459 0
-5368 -3418 -3399 -3461 0
-5368 -3418 -3397 -3463 0
-5368 -3418 -3395 -3465 0
-5368 -3418 -3393 -3467 0
-5368 -3418 -3391 -3469 0
-5368 -3418 -3389 -3471 0
-5368 -3418 -3387 -3475 0
-5368 -3418 -3386 -3477 0
-5368 -3416 -3447 0
-5368 -3416 -3413 -3449 0
-5368 -3416 -3411 -3451 0
-5368 -3416 -3409 -3453 0
-5368 -3416 -3407 -3455 0
-5368 -3416 -3405 -3457 0
-5368 -3416 -3403 -3459 0
-5368 -3416 -3401 -3461 0
-5368 -3416 -3399 -3463 0
-5368 -3416 -3397 -3465 0
-5368 -3416 -3395 -3467 0
-5368 -3416 -3393 -3469 0
-5368 -3416 -3391 -3471 0
-5368 -3416 -3389 -3473 0
-5368 -3416 -3387 -3477 0
-5368 -3416 -3386 0
-5368 -3415 -3449 0
-5368 -3415 -3413 -3451 0
-5368 -3415 -3411 -3453 0
-5368 -3415 -3409 -3455 0
-5368 -3415 -3407 -3457 0
-5368 -3415 -3405 -3459 0
-5368 -3415 -3403 -3461 0
-5368 -3415 -3401 -3463 0
-5368 -3415 -3399 -3465 0
-5368 -3415 -3397 -3467 0
-5368 -3415 -3395 -3469 0
-5368 -3415 -3393 -3471 0
-5368 -3415 -3391 -3473 0
-5368 -3415 -3389 -3475 0
-5368 -3415 -3387 0
-5368 -3415 -3386 0
5368 3387 3475 0
5368 3389 3473 0
5368 3391 3471 0
5368 3393 3469 0
5368 3395 3467 0
5368 3397 3465 0
5368 3399 3463 0
5368 3401 3461 0
5368 3403 3459 0
5368 3405 3457 0
5368 3407 3455 0
5368 3409 3453 0
5368 3411 3451 0
5368 3413 3449 0
5368 3415 3386 3477 0
5368 3415 3387 3473 0
5368 3415 3389 3471 0
5368 3415 3391 3469 0
5368 3415 3393 3467 0
5368 3415 3395 3465 0
5368 3415 3397 3463 0
5368 3415 3399 3461 0
5368 3415 3401 3459 0
5368 3415 3403 3457 0
5368 3415 3405 3455 0
5368 3415 3407 3453 0
5368 3415 3409 3451 0
5368 3415 3411 3449 0
5368 3415 3413 3447 0
5368 3416 3477 0
5368 3416 3386 3475 0
5368 3416 3387 3471 0
5368 3416 3389 3469 0
5368 3416 3391 3467 0
5368 3416 3393 3465 0
5368 3416 3395 3463 0
5368 3416 3397 3461 0
5368 3416 3399 3459 0
5368 3416 3401 3457 0
5368 3416 3403 3455 0
5368 3416 3405 3453 0
5368 3416 3407 3451 0
5368 3416 3409 3449 0
5368 3416 3411 3447 0
5368 3416 3413 3445 0
5368 3418 3475 0
5368 3418 3386 3473 0
5368 3418 3387 3469 0
5368 3418 3389 3467 0
5368 3418 3391 3465 0
5368 3418 3393 3463 0
5368 3418 3395 3461 0
5368 3418 3397 3459 0
5368 3418 3399 3457 0
5368 3418 3401 3455 0
5368 3418 3403 3453 0
5368 3418 3405 3451 0
5368 3418 3407 3449 0
5368 3418 3409 3447 0
5368 3418 3411 3445 0
5368 3418 3413 3443 0
5368 3420 3473 0
5368 3420 3386 3471 0
5368 3420 3387 3467 0
5368 3420 3389 3465 0
5368 3420 3391 3463 0
5368 3420 3393 3461 0
5368 3420 3395 3459 0
5368 3420 3397 3457 0
5368 3420 3399 3455 0
5368 3420 3401 3453 0
5368 3420 3403 3451 0
5368 3420 3405 3449 0
5368 3420 3407 3447 0
5368 3420 3409 3445 0
5368 3420 3411 3443 0
5368 3420 3413 3442 0
5368 3422 3471 0
5368 3422 3386 3469 0
5368 3422 3387 3465 0
5368 3422 3389 3463 0
5368 3422 3391 3461 0
5368 3422 3393 3459 0
5368 3422 3395 3457 0
5368 3422 3397 3455 0
5368 3422 3399 3453 0
5368 3422 3401 3451 0
5368 3422 3403 3449 0
5368 3422 3405 3447 0
5368 3422 3407 3445 0
5368 3422 3409 3443 0
5368 3422 3411 3442 0
5368 3422 3413 0
5368 3424 3469 0
5368 3424 3386 3467 0
5368 3424 3387 3463 0
5368 3424 3389 3461 0
5368 3424 3391 3459 0
5368 3424 3393 3457 0
5368 3424 3395 3455 0
5368 3424 3397 3453 0
5368 3424 3399 3451 0
5368 3424 3401 3449 0
5368 3424 3403 3447 0
5368 3424 3405 3445 0
5368 3424 3407 3443 0
5368 3424 3409 3442 0
5368 3424 3411 0
5368 3424 3413 0
5368 3426 3467 0
5368 3426 3386 3465 0
5368 3426 3387 3461 0
5368 3426 3389 3459 0
5368 3426 3391 3457 0
5368 3426 3393 3455 0
5368 3426 3395 3453 0
5368 3426 3397 3451 0
5368 3426 3399 3449 0
5368 3426 3401 3447 0
5368 3426 3403 3445 0
5368 3426 3405 3443 0
5368 3426 3407 3442 0
5368 3426 3409 0
5368 3426 3411 0
5368 3426 3413 0
5368 3428 3465 0
5368 3428 3386 3463 0
5368 3428 3387 3459 0
5368 3428 3389 3457 0
5368 3428 3391 3455 0
5368 3428 3393 3453 0
5368 3428 3395 3451 0
5368 3428 3397 3449 0
5368 3428 3399 3447 0
5368 3428 3401 3445 0
5368 3428 3403 3443 0
5368 3428 3405 3442 0
5368 3428 3407 0
5368 3428 3409 0
5368 3428 3411 0
5368 3428 3413 0
5368 3430 3463 0
5368 3430 3386 3461 0
5368 3430 3387 3457 0
5368 3430 3389 3455 0
5368 3430 3391 3453 0
5368 3430 3393 3451 0
5368 3430 3395 3449 0
5368 3430 3397 3447 0
5368 3430 3399 3445 0
5368 3430 3401 3443 0
5368 3430 3403 3442 0
5368 3430 3405 0
5368 3430 3407 0
5368 3430 3409 0
5368 3430 3411 0
5368 3430 3413 0
5368 3432 3461 0
5368 3432 3386 3459 0
5368 3432 3387 3455 0
5368 3432 3389 3453 0
5368 3432 3391 3451 0
5368 3432 3393 3449 0
5368 3432 3395 3447 0
5368 3432 3397 3445 0
5368 3432 3399 3443 0
5368 3432 3401 3442 0
5368 3432 3403 0
5368 3432 3405 0
5368 3432 3407 0
5368 3432 3409 0
5368 3432 3411 0
5368 3432 3413 0
5368 3434 3459 0
5368 3434 3386 3457 0
5368 3434 3387 3453 0
5368 3434 3389 3451 0
5368 3434 3391 3449 0
5368 3434 3393 3447 0
5368 3434 3395 3445 0
5368 3434 3397 3443 0
5368 3434 3399 3442 0
5368 3434 3401 0
5368 3434 3403 0
5368 3434 3405 0
5368 3434 3407 0
5368 3434 3409 0
5368 3434 3411 0
5368 3434 3413 0
5368 3436 3457 0
5368 3436 3386 3455 0
5368 3436 3387 3451 0
5368 3436 3389 3449 0
5368 3436 3391 3447 0
5368 3436 3393 3445 0
5368 3436 3395 3443 0
5368 3436 3397 3442 0
5368 3436 3399 0
5368 3436 3401 0
5368 3436 3403 0
5368 3436 3405 0
5368 3436 3407 0
5368 3436 3409 0
5368 3436 3411 0
5368 3436 3413 0
5368 3438 3455 0
5368 3438 3386 3453 0
5368 3438 3387 3449 0
5368 3438 3389 3447 0
5368 3438 3391 3445 0
5368 3438 3393 3443 0
5368 3438 3395 3442 0
5368 3438 3397 0
5368 3438 3399 0
5368 3438 3401 0
5368 3438 3403 0
5368 3438 3405 0
5368 3438 3407 0
5368 3438 3409 0
5368 3438 3411 0
5368 3438 3413 0
5368 3440 3453 0
5368 3440 3386 3451 0
5368 3440 3387 3447 0
5368 3440 3389 3445 0
5368 3440 3391 3443 0
5368 3440 3393 3442 0
5368 3440 3395 0
5368 3440 3397 0
5368 3440 3399 0
5368 3440 3401 0
5368 3440 3403 0
5368 3440 3405 0
5368 3440 3407 0
5368 3440 3409 0
5368 3440 3411 0
5368 3440 3413 0
c (((aux258 + aux260 + aux261)<=17)=tv=SATLiteral(5369))
-5369 3620 0
-5369 3554 3616 0
-5369 3555 3614 0
-5369 3557 3612 0
-5369 3559 3610 0
-5369 3561 3608 0
-5369 3563 3606 0
-5369 3565 3604 0
-5369 3567 3602 0
-5369 3569 3600 0
-5369 3571 3598 0
-5369 3573 3596 0
-5369 3575 3594 0
-5369 3577 3592 0
-5369 3579 3590 0
-5369 3581 3588 0
-5369 3583 3587 0
-5369 3585 0
-5369 3498 3618 0
-5369 3498 3554 3614 0
-5369 3498 3555 3612 0
-5369 3498 3557 3610 0
-5369 3498 3559 3608 0
-5369 3498 3561 3606 0
-5369 3498 3563 3604 0
-5369 3498 3565 3602 0
-5369 3498 3567 3600 0
-5369 3498 3569 3598 0
-5369 3498 3571 3596 0
-5369 3498 3573 3594 0
-5369 3498 3575 3592 0
-5369 3498 3577 3590 0
-5369 3498 3579 3588 0
-5369 3498 3581 3587 0
-5369 3498 3583 0
-5369 3498 3585 0
-5369 3499 3616 0
-5369 3499 3554 3612 0
-5369 3499 3555 3610 0
-5369 3499 3557 3608 0
-5369 3499 3559 3606 0
-5369 3499 3561 3604 0
-5369 3499 3563 3602 0
-5369 3499 3565 3600 0
-5369 3499 3567 3598 0
-5369 3499 3569 3596 0
-5369 3499 3571 3594 0
-5369 3499 3573 3592 0
-5369 3499 3575 3590 0
-5369 3499 3577 3588 0
-5369 3499 3579 3587 0
-5369 3499 3581 0
-5369 3499 3583 0
-5369 3499 3585 0
-5369 3501 3614 0
-5369 3501 3554 3610 0
-5369 3501 3555 3608 0
-5369 3501 3557 3606 0
-5369 3501 3559 3604 0
-5369 3501 3561 3602 0
-5369 3501 3563 3600 0
-5369 3501 3565 3598 0
-5369 3501 3567 3596 0
-5369 3501 3569 3594 0
-5369 3501 3571 3592 0
-5369 3501 3573 3590 0
-5369 3501 3575 3588 0
-5369 3501 3577 3587 0
-5369 3501 3579 0
-5369 3501 3581 0
-5369 3501 3583 0
-5369 3501 3585 0
-5369 3503 3612 0
-5369 3503 3554 3608 0
-5369 3503 3555 3606 0
-5369 3503 3557 3604 0
-5369 3503 3559 3602 0
-5369 3503 3561 3600 0
-5369 3503 3563 3598 0
-5369 3503 3565 3596 0
-5369 3503 3567 3594 0
-5369 3503 3569 3592 0
-5369 3503 3571 3590 0
-5369 3503 3573 3588 0
-5369 3503 3575 3587 0
-5369 3503 3577 0
-5369 3503 3579 0
-5369 3503 3581 0
-5369 3503 3583 0
-5369 3503 3585 0
-5369 3505 3610 0
-5369 3505 3554 3606 0
-5369 3505 3555 3604 0
-5369 3505 3557 3602 0
-5369 3505 3559 3600 0
-5369 3505 3561 3598 0
-5369 3505 3563 3596 0
-5369 3505 3565 3594 0
-5369 3505 3567 3592 0
-5369 3505 3569 3590 0
-5369 3505 3571 3588 0
-5369 3505 3573 3587 0
-5369 3505 3575 0
-5369 3505 3577 0
-5369 3505 3579 0
-5369 3505 3581 0
-5369 3505 3583 0
-5369 3505 3585 0
-5369 3507 3608 0
-5369 3507 3554 3604 0
-5369 3507 3555 3602 0
-5369 3507 3557 3600 0
-5369 3507 3559 3598 0
-5369 3507 3561 3596 0
-5369 3507 3563 3594 0
-5369 3507 3565 3592 0
-5369 3507 3567 3590 0
-5369 3507 3569 3588 0
-5369 3507 3571 3587 0
-5369 3507 3573 0
-5369 3507 3575 0
-5369 3507 3577 0
-5369 3507 3579 0
-5369 3507 3581 0
-5369 3507 3583 0
-5369 3507 3585 0
-5369 3509 3606 0
-5369 3509 3554 3602 0
-5369 3509 3555 3600 0
-5369 3509 3557 3598 0
-5369 3509 3559 3596 0
-5369 3509 3561 3594 0
-5369 3509 3563 3592 0
-5369 3509 3565 3590 0
-5369 3509 3567 3588 0
-5369 3509 3569 3587 0
-5369 3509 3571 0
-5369 3509 3573 0
-5369 3509 3575 0
-5369 3509 3577 0
-5369 3509 3579 0
-5369 3509 3581 0
-5369 3509 3583 0
-5369 3509 3585 0
-5369 3511 3604 0
-5369 3511 3554 3600 0
-5369 3511 3555 3598 0
-5369 3511 3557 3596 0
-5369 3511 3559 3594 0
-5369 3511 3561 3592 0
-5369 3511 3563 3590 0
-5369 3511 3565 3588 0
-5369 3511 3567 3587 0
-5369 3511 3569 0
-5369 3511 3571 0
-5369 3511 3573 0
-5369 3511 3575 0
-5369 3511 3577 0
-5369 3511 3579 0
-5369 3511 3581 0
-5369 3511 3583 0
-5369 3511 3585 0
-5369 3513 3602 0
-5369 3513 3554 3598 0
-5369 3513 3555 3596 0
-5369 3513 3557 3594 0
-5369 3513 3559 3592 0
-5369 3513 3561 3590 0
-5369 3513 3563 3588 0
-5369 3513 3565 3587 0
-5369 3513 3567 0
-5369 3513 3569 0
-5369 3513 3571 0
-5369 3513 3573 0
-5369 3513 3575 0
-5369 3513 3577 0
-5369 3513 3579 0
-5369 3513 3581 0
-5369 3513 3583 0
-5369 3513 3585 0
-5369 3515 3600 0
-5369 3515 3554 3596 0
-5369 3515 3555 3594 0
-5369 3515 3557 3592 0
-5369 3515 3559 3590 0
-5369 3515 3561 3588 0
-5369 3515 3563 3587 0
-5369 3515 3565 0
-5369 3515 3567 0
-5369 3515 3569 0
-5369 3515 3571 0
-5369 3515 3573 0
-5369 3515 3575 0
-5369 3515 3577 0
-5369 3515 3579 0
-5369 3515 3581 0
-5369 3515 3583 0
-5369 3515 3585 0
-5369 3517 3598 0
-5369 3517 3554 3594 0
-5369 3517 3555 3592 0
-5369 3517 3557 3590 0
-5369 3517 3559 3588 0
-5369 3517 3561 3587 0
-5369 3517 3563 0
-5369 3517 3565 0
-5369 3517 3567 0
-5369 3517 3569 0
-5369 3517 3571 0
-5369 3517 3573 0
-5369 3517 3575 0
-5369 3517 3577 0
-5369 3517 3579 0
-5369 3517 3581 0
-5369 3517 3583 0
-5369 3517 3585 0
-5369 3519 3596 0
-5369 3519 3554 3592 0
-5369 3519 3555 3590 0
-5369 3519 3557 3588 0
-5369 3519 3559 3587 0
-5369 3519 3561 0
-5369 3519 3563 0
-5369 3519 3565 0
-5369 3519 3567 0
-5369 3519 3569 0
-5369 3519 3571 0
-5369 3519 3573 0
-5369 3519 3575 0
-5369 3519 3577 0
-5369 3519 3579 0
-5369 3519 3581 0
-5369 3519 3583 0
-5369 3519 3585 0
-5369 3521 3594 0
-5369 3521 3554 3590 0
-5369 3521 3555 3588 0
-5369 3521 3557 3587 0
-5369 3521 3559 0
-5369 3521 3561 0
-5369 3521 3563 0
-5369 3521 3565 0
-5369 3521 3567 0
-5369 3521 3569 0
-5369 3521 3571 0
-5369 3521 3573 0
-5369 3521 3575 0
-5369 3521 3577 0
-5369 3521 3579 0
-5369 3521 3581 0
-5369 3521 3583 0
-5369 3521 3585 0
-5369 3523 3592 0
-5369 3523 3554 3588 0
-5369 3523 3555 3587 0
-5369 3523 3557 0
-5369 3523 3559 0
-5369 3523 3561 0
-5369 3523 3563 0
-5369 3523 3565 0
-5369 3523 3567 0
-5369 3523 3569 0
-5369 3523 3571 0
-5369 3523 3573 0
-5369 3523 3575 0
-5369 3523 3577 0
-5369 3523 3579 0
-5369 3523 3581 0
-5369 3523 3583 0
-5369 3523 3585 0
-5369 3525 3590 0
-5369 3525 3554 3587 0
-5369 3525 3555 0
-5369 3525 3557 0
-5369 3525 3559 0
-5369 3525 3561 0
-5369 3525 3563 0
-5369 3525 3565 0
-5369 3525 3567 0
-5369 3525 3569 0
-5369 3525 3571 0
-5369 3525 3573 0
-5369 3525 3575 0
-5369 3525 3577 0
-5369 3525 3579 0
-5369 3525 3581 0
-5369 3525 3583 0
-5369 3525 3585 0
-5369 3527 3588 0
-5369 3527 3554 0
-5369 3527 3555 0
-5369 3527 3557 0
-5369 3527 3559 0
-5369 3527 3561 0
-5369 3527 3563 0
-5369 3527 3565 0
-5369 3527 3567 0
-5369 3527 3569 0
-5369 3527 3571 0
-5369 3527 3573 0
-5369 3527 3575 0
-5369 3527 3577 0
-5369 3527 3579 0
-5369 3527 3581 0
-5369 3527 3583 0
-5369 3527 3585 0
5369 -3554 -3588 0
5369 -3527 -3555 -3587 0
5369 -3527 -3554 -3590 0
5369 -3525 -3557 -3587 0
5369 -3525 -3555 -3588 0
5369 -3525 -3554 -3592 0
5369 -3523 -3559 -3587 0
5369 -3523 -3557 -3588 0
5369 -3523 -3555 -3590 0
5369 -3523 -3554 -3594 0
5369 -3521 -3561 -3587 0
5369 -3521 -3559 -3588 0
5369 -3521 -3557 -3590 0
5369 -3521 -3555 -3592 0
5369 -3521 -3554 -3596 0
5369 -3519 -3563 -3587 0
5369 -3519 -3561 -3588 0
5369 -3519 -3559 -3590 0
5369 -3519 -3557 -3592 0
5369 -3519 -3555 -3594 0
5369 -3519 -3554 -3598 0
5369 -3517 -3565 -3587 0
5369 -3517 -3563 -3588 0
5369 -3517 -3561 -3590 0
5369 -3517 -3559 -3592 0
5369 -3517 -3557 -3594 0
5369 -3517 -3555 -3596 0
5369 -3517 -3554 -3600 0
5369 -3515 -3567 -3587 0
5369 -3515 -3565 -3588 0
5369 -3515 -3563 -3590 0
5369 -3515 -3561 -3592 0
5369 -3515 -3559 -3594 0
5369 -3515 -3557 -3596 0
5369 -3515 -3555 -3598 0
5369 -3515 -3554 -3602 0
5369 -3513 -3569 -3587 0
5369 -3513 -3567 -3588 0
5369 -3513 -3565 -3590 0
5369 -3513 -3563 -3592 0
5369 -3513 -3561 -3594 0
5369 -3513 -3559 -3596 0
5369 -3513 -3557 -3598 0
5369 -3513 -3555 -3600 0
5369 -3513 -3554 -3604 0
5369 -3511 -3571 -3587 0
5369 -3511 -3569 -3588 0
5369 -3511 -3567 -3590 0
5369 -3511 -3565 -3592 0
5369 -3511 -3563 -3594 0
5369 -3511 -3561 -3596 0
5369 -3511 -3559 -3598 0
5369 -3511 -3557 -3600 0
5369 -3511 -3555 -3602 0
5369 -3511 -3554 -3606 0
5369 -3509 -3573 -3587 0
5369 -3509 -3571 -3588 0
5369 -3509 -3569 -3590 0
5369 -3509 -3567 -3592 0
5369 -3509 -3565 -3594 0
5369 -3509 -3563 -3596 0
5369 -3509 -3561 -3598 0
5369 -3509 -3559 -3600 0
5369 -3509 -3557 -3602 0
5369 -3509 -3555 -3604 0
5369 -3509 -3554 -3608 0
5369 -3507 -3575 -3587 0
5369 -3507 -3573 -3588 0
5369 -3507 -3571 -3590 0
5369 -3507 -3569 -3592 0
5369 -3507 -3567 -3594 0
5369 -3507 -3565 -3596 0
5369 -3507 -3563 -3598 0
5369 -3507 -3561 -3600 0
5369 -3507 -3559 -3602 0
5369 -3507 -3557 -3604 0
5369 -3507 -3555 -3606 0
5369 -3507 -3554 -3610 0
5369 -3505 -3577 -3587 0
5369 -3505 -3575 -3588 0
5369 -3505 -3573 -3590 0
5369 -3505 -3571 -3592 0
5369 -3505 -3569 -3594 0
5369 -3505 -3567 -3596 0
5369 -3505 -3565 -3598 0
5369 -3505 -3563 -3600 0
5369 -3505 -3561 -3602 0
5369 -3505 -3559 -3604 0
5369 -3505 -3557 -3606 0
5369 -3505 -3555 -3608 0
5369 -3505 -3554 -3612 0
5369 -3503 -3579 -3587 0
5369 -3503 -3577 -3588 0
5369 -3503 -3575 -3590 0
5369 -3503 -3573 -3592 0
5369 -3503 -3571 -3594 0
5369 -3503 -3569 -3596 0
5369 -3503 -3567 -3598 0
5369 -3503 -3565 -3600 0
5369 -3503 -3563 -3602 0
5369 -3503 -3561 -3604 0
5369 -3503 -3559 -3606 0
5369 -3503 -3557 -3608 0
5369 -3503 -3555 -3610 0
5369 -3503 -3554 -3614 0
5369 -3501 -3581 -3587 0
5369 -3501 -3579 -3588 0
5369 -3501 -3577 -3590 0
5369 -3501 -3575 -3592 0
5369 -3501 -3573 -3594 0
5369 -3501 -3571 -3596 0
5369 -3501 -3569 -3598 0
5369 -3501 -3567 -3600 0
5369 -3501 -3565 -3602 0
5369 -3501 -3563 -3604 0
5369 -3501 -3561 -3606 0
5369 -3501 -3559 -3608 0
5369 -3501 -3557 -3610 0
5369 -3501 -3555 -3612 0
5369 -3501 -3554 -3616 0
5369 -3499 -3583 -3587 0
5369 -3499 -3581 -3588 0
5369 -3499 -3579 -3590 0
5369 -3499 -3577 -3592 0
5369 -3499 -3575 -3594 0
5369 -3499 -3573 -3596 0
5369 -3499 -3571 -3598 0
5369 -3499 -3569 -3600 0
5369 -3499 -3567 -3602 0
5369 -3499 -3565 -3604 0
5369 -3499 -3563 -3606 0
5369 -3499 -3561 -3608 0
5369 -3499 -3559 -3610 0
5369 -3499 -3557 -3612 0
5369 -3499 -3555 -3614 0
5369 -3499 -3554 -3618 0
5369 -3498 -3585 -3587 0
5369 -3498 -3583 -3588 0
5369 -3498 -3581 -3590 0
5369 -3498 -3579 -3592 0
5369 -3498 -3577 -3594 0
5369 -3498 -3575 -3596 0
5369 -3498 -3573 -3598 0
5369 -3498 -3571 -3600 0
5369 -3498 -3569 -3602 0
5369 -3498 -3567 -3604 0
5369 -3498 -3565 -3606 0
5369 -3498 -3563 -3608 0
5369 -3498 -3561 -3610 0
5369 -3498 -3559 -3612 0
5369 -3498 -3557 -3614 0
5369 -3498 -3555 -3616 0
5369 -3498 -3554 -3620 0
c ((17<=(aux258 + aux260 + aux261))=tv=SATLiteral(5370))
-5370 -3554 -3587 0
-5370 -3527 -3554 -3588 0
-5370 -3525 -3555 -3587 0
-5370 -3525 -3554 -3590 0
-5370 -3523 -3557 -3587 0
-5370 -3523 -3555 -3588 0
-5370 -3523 -3554 -3592 0
-5370 -3521 -3559 -3587 0
-5370 -3521 -3557 -3588 0
-5370 -3521 -3555 -3590 0
-5370 -3521 -3554 -3594 0
-5370 -3519 -3561 -3587 0
-5370 -3519 -3559 -3588 0
-5370 -3519 -3557 -3590 0
-5370 -3519 -3555 -3592 0
-5370 -3519 -3554 -3596 0
-5370 -3517 -3563 -3587 0
-5370 -3517 -3561 -3588 0
-5370 -3517 -3559 -3590 0
-5370 -3517 -3557 -3592 0
-5370 -3517 -3555 -3594 0
-5370 -3517 -3554 -3598 0
-5370 -3515 -3565 -3587 0
-5370 -3515 -3563 -3588 0
-5370 -3515 -3561 -3590 0
-5370 -3515 -3559 -3592 0
-5370 -3515 -3557 -3594 0
-5370 -3515 -3555 -3596 0
-5370 -3515 -3554 -3600 0
-5370 -3513 -3567 -3587 0
-5370 -3513 -3565 -3588 0
-5370 -3513 -3563 -3590 0
-5370 -3513 -3561 -3592 0
-5370 -3513 -3559 -3594 0
-5370 -3513 -3557 -3596 0
-5370 -3513 -3555 -3598 0
-5370 -3513 -3554 -3602 0
-5370 -3511 -3569 -3587 0
-5370 -3511 -3567 -3588 0
-5370 -3511 -3565 -3590 0
-5370 -3511 -3563 -3592 0
-5370 -3511 -3561 -3594 0
-5370 -3511 -3559 -3596 0
-5370 -3511 -3557 -3598 0
-5370 -3511 -3555 -3600 0
-5370 -3511 -3554 -3604 0
-5370 -3509 -3571 -3587 0
-5370 -3509 -3569 -3588 0
-5370 -3509 -3567 -3590 0
-5370 -3509 -3565 -3592 0
-5370 -3509 -3563 -3594 0
-5370 -3509 -3561 -3596 0
-5370 -3509 -3559 -3598 0
-5370 -3509 -3557 -3600 0
-5370 -3509 -3555 -3602 0
-5370 -3509 -3554 -3606 0
-5370 -3507 -3573 -3587 0
-5370 -3507 -3571 -3588 0
-5370 -3507 -3569 -3590 0
-5370 -3507 -3567 -3592 0
-5370 -3507 -3565 -3594 0
-5370 -3507 -3563 -3596 0
-5370 -3507 -3561 -3598 0
-5370 -3507 -3559 -3600 0
-5370 -3507 -3557 -3602 0
-5370 -3507 -3555 -3604 0
-5370 -3507 -3554 -3608 0
-5370 -3505 -3575 -3587 0
-5370 -3505 -3573 -3588 0
-5370 -3505 -3571 -3590 0
-5370 -3505 -3569 -3592 0
-5370 -3505 -3567 -3594 0
-5370 -3505 -3565 -3596 0
-5370 -3505 -3563 -3598 0
-5370 -3505 -3561 -3600 0
-5370 -3505 -3559 -3602 0
-5370 -3505 -3557 -3604 0
-5370 -3505 -3555 -3606 0
-5370 -3505 -3554 -3610 0
-5370 -3503 -3577 -3587 0
-5370 -3503 -3575 -3588 0
-5370 -3503 -3573 -3590 0
-5370 -3503 -3571 -3592 0
-5370 -3503 -3569 -3594 0
-5370 -3503 -3567 -3596 0
-5370 -3503 -3565 -3598 0
-5370 -3503 -3563 -3600 0
-5370 -3503 -3561 -3602 0
-5370 -3503 -3559 -3604 0
-5370 -3503 -3557 -3606 0
-5370 -3503 -3555 -3608 0
-5370 -3503 -3554 -3612 0
-5370 -3501 -3579 -3587 0
-5370 -3501 -3577 -3588 0
-5370 -3501 -3575 -3590 0
-5370 -3501 -3573 -3592 0
-5370 -3501 -3571 -3594 0
-5370 -3501 -3569 -3596 0
-5370 -3501 -3567 -3598 0
-5370 -3501 -3565 -3600 0
-5370 -3501 -3563 -3602 0
-5370 -3501 -3561 -3604 0
-5370 -3501 -3559 -3606 0
-5370 -3501 -3557 -3608 0
-5370 -3501 -3555 -3610 0
-5370 -3501 -3554 -3614 0
-5370 -3499 -3581 -3587 0
-5370 -3499 -3579 -3588 0
-5370 -3499 -3577 -3590 0
-5370 -3499 -3575 -3592 0
-5370 -3499 -3573 -3594 0
-5370 -3499 -3571 -3596 0
-5370 -3499 -3569 -3598 0
-5370 -3499 -3567 -3600 0
-5370 -3499 -3565 -3602 0
-5370 -3499 -3563 -3604 0
-5370 -3499 -3561 -3606 0
-5370 -3499 -3559 -3608 0
-5370 -3499 -3557 -3610 0
-5370 -3499 -3555 -3612 0
-5370 -3499 -3554 -3616 0
-5370 -3498 -3583 -3587 0
-5370 -3498 -3581 -3588 0
-5370 -3498 -3579 -3590 0
-5370 -3498 -3577 -3592 0
-5370 -3498 -3575 -3594 0
-5370 -3498 -3573 -3596 0
-5370 -3498 -3571 -3598 0
-5370 -3498 -3569 -3600 0
-5370 -3498 -3567 -3602 0
-5370 -3498 -3565 -3604 0
-5370 -3498 -3563 -3606 0
-5370 -3498 -3561 -3608 0
-5370 -3498 -3559 -3610 0
-5370 -3498 -3557 -3612 0
-5370 -3498 -3555 -3614 0
-5370 -3498 -3554 -3618 0
5370 3618 0
5370 3554 3614 0
5370 3555 3612 0
5370 3557 3610 0
5370 3559 3608 0
5370 3561 3606 0
5370 3563 3604 0
5370 3565 3602 0
5370 3567 3600 0
5370 3569 3598 0
5370 3571 3596 0
5370 3573 3594 0
5370 3575 3592 0
5370 3577 3590 0
5370 3579 3588 0
5370 3581 3587 0
5370 3583 0
5370 3585 0
5370 3498 3616 0
5370 3498 3554 3612 0
5370 3498 3555 3610 0
5370 3498 3557 3608 0
5370 3498 3559 3606 0
5370 3498 3561 3604 0
5370 3498 3563 3602 0
5370 3498 3565 3600 0
5370 3498 3567 3598 0
5370 3498 3569 3596 0
5370 3498 3571 3594 0
5370 3498 3573 3592 0
5370 3498 3575 3590 0
5370 3498 3577 3588 0
5370 3498 3579 3587 0
5370 3498 3581 0
5370 3498 3583 0
5370 3498 3585 0
5370 3499 3614 0
5370 3499 3554 3610 0
5370 3499 3555 3608 0
5370 3499 3557 3606 0
5370 3499 3559 3604 0
5370 3499 3561 3602 0
5370 3499 3563 3600 0
5370 3499 3565 3598 0
5370 3499 3567 3596 0
5370 3499 3569 3594 0
5370 3499 3571 3592 0
5370 3499 3573 3590 0
5370 3499 3575 3588 0
5370 3499 3577 3587 0
5370 3499 3579 0
5370 3499 3581 0
5370 3499 3583 0
5370 3499 3585 0
5370 3501 3612 0
5370 3501 3554 3608 0
5370 3501 3555 3606 0
5370 3501 3557 3604 0
5370 3501 3559 3602 0
5370 3501 3561 3600 0
5370 3501 3563 3598 0
5370 3501 3565 3596 0
5370 3501 3567 3594 0
5370 3501 3569 3592 0
5370 3501 3571 3590 0
5370 3501 3573 3588 0
5370 3501 3575 3587 0
5370 3501 3577 0
5370 3501 3579 0
5370 3501 3581 0
5370 3501 3583 0
5370 3501 3585 0
5370 3503 3610 0
5370 3503 3554 3606 0
5370 3503 3555 3604 0
5370 3503 3557 3602 0
5370 3503 3559 3600 0
5370 3503 3561 3598 0
5370 3503 3563 3596 0
5370 3503 3565 3594 0
5370 3503 3567 3592 0
5370 3503 3569 3590 0
5370 3503 3571 3588 0
5370 3503 3573 3587 0
5370 3503 3575 0
5370 3503 3577 0
5370 3503 3579 0
5370 3503 3581 0
5370 3503 3583 0
5370 3503 3585 0
5370 3505 3608 0
5370 3505 3554 3604 0
5370 3505 3555 3602 0
5370 3505 3557 3600 0
5370 3505 3559 3598 0
5370 3505 3561 3596 0
5370 3505 3563 3594 0
5370 3505 3565 3592 0
5370 3505 3567 3590 0
5370 3505 3569 3588 0
5370 3505 3571 3587 0
5370 3505 3573 0
5370 3505 3575 0
5370 3505 3577 0
5370 3505 3579 0
5370 3505 3581 0
5370 3505 3583 0
5370 3505 3585 0
5370 3507 3606 0
5370 3507 3554 3602 0
5370 3507 3555 3600 0
5370 3507 3557 3598 0
5370 3507 3559 3596 0
5370 3507 3561 3594 0
5370 3507 3563 3592 0
5370 3507 3565 3590 0
5370 3507 3567 3588 0
5370 3507 3569 3587 0
5370 3507 3571 0
5370 3507 3573 0
5370 3507 3575 0
5370 3507 3577 0
5370 3507 3579 0
5370 3507 3581 0
5370 3507 3583 0
5370 3507 3585 0
5370 3509 3604 0
5370 3509 3554 3600 0
5370 3509 3555 3598 0
5370 3509 3557 3596 0
5370 3509 3559 3594 0
5370 3509 3561 3592 0
5370 3509 3563 3590 0
5370 3509 3565 3588 0
5370 3509 3567 3587 0
5370 3509 3569 0
5370 3509 3571 0
5370 3509 3573 0
5370 3509 3575 0
5370 3509 3577 0
5370 3509 3579 0
5370 3509 3581 0
5370 3509 3583 0
5370 3509 3585 0
5370 3511 3602 0
5370 3511 3554 3598 0
5370 3511 3555 3596 0
5370 3511 3557 3594 0
5370 3511 3559 3592 0
5370 3511 3561 3590 0
5370 3511 3563 3588 0
5370 3511 3565 3587 0
5370 3511 3567 0
5370 3511 3569 0
5370 3511 3571 0
5370 3511 3573 0
5370 3511 3575 0
5370 3511 3577 0
5370 3511 3579 0
5370 3511 3581 0
5370 3511 3583 0
5370 3511 3585 0
5370 3513 3600 0
5370 3513 3554 3596 0
5370 3513 3555 3594 0
5370 3513 3557 3592 0
5370 3513 3559 3590 0
5370 3513 3561 3588 0
5370 3513 3563 3587 0
5370 3513 3565 0
5370 3513 3567 0
5370 3513 3569 0
5370 3513 3571 0
5370 3513 3573 0
5370 3513 3575 0
5370 3513 3577 0
5370 3513 3579 0
5370 3513 3581 0
5370 3513 3583 0
5370 3513 3585 0
5370 3515 3598 0
5370 3515 3554 3594 0
5370 3515 3555 3592 0
5370 3515 3557 3590 0
5370 3515 3559 3588 0
5370 3515 3561 3587 0
5370 3515 3563 0
5370 3515 3565 0
5370 3515 3567 0
5370 3515 3569 0
5370 3515 3571 0
5370 3515 3573 0
5370 3515 3575 0
5370 3515 3577 0
5370 3515 3579 0
5370 3515 3581 0
5370 3515 3583 0
5370 3515 3585 0
5370 3517 3596 0
5370 3517 3554 3592 0
5370 3517 3555 3590 0
5370 3517 3557 3588 0
5370 3517 3559 3587 0
5370 3517 3561 0
5370 3517 3563 0
5370 3517 3565 0
5370 3517 3567 0
5370 3517 3569 0
5370 3517 3571 0
5370 3517 3573 0
5370 3517 3575 0
5370 3517 3577 0
5370 3517 3579 0
5370 3517 3581 0
5370 3517 3583 0
5370 3517 3585 0
5370 3519 3594 0
5370 3519 3554 3590 0
5370 3519 3555 3588 0
5370 3519 3557 3587 0
5370 3519 3559 0
5370 3519 3561 0
5370 3519 3563 0
5370 3519 3565 0
5370 3519 3567 0
5370 3519 3569 0
5370 3519 3571 0
5370 3519 3573 0
5370 3519 3575 0
5370 3519 3577 0
5370 3519 3579 0
5370 3519 3581 0
5370 3519 3583 0
5370 3519 3585 0
5370 3521 3592 0
5370 3521 3554 3588 0
5370 3521 3555 3587 0
5370 3521 3557 0
5370 3521 3559 0
5370 3521 3561 0
5370 3521 3563 0
5370 3521 3565 0
5370 3521 3567 0
5370 3521 3569 0
5370 3521 3571 0
5370 3521 3573 0
5370 3521 3575 0
5370 3521 3577 0
5370 3521 3579 0
5370 3521 3581 0
5370 3521 3583 0
5370 3521 3585 0
5370 3523 3590 0
5370 3523 3554 3587 0
5370 3523 3555 0
5370 3523 3557 0
5370 3523 3559 0
5370 3523 3561 0
5370 3523 3563 0
5370 3523 3565 0
5370 3523 3567 0
5370 3523 3569 0
5370 3523 3571 0
5370 3523 3573 0
5370 3523 3575 0
5370 3523 3577 0
5370 3523 3579 0
5370 3523 3581 0
5370 3523 3583 0
5370 3523 3585 0
5370 3525 3588 0
5370 3525 3554 0
5370 3525 3555 0
5370 3525 3557 0
5370 3525 3559 0
5370 3525 3561 0
5370 3525 3563 0
5370 3525 3565 0
5370 3525 3567 0
5370 3525 3569 0
5370 3525 3571 0
5370 3525 3573 0
5370 3525 3575 0
5370 3525 3577 0
5370 3525 3579 0
5370 3525 3581 0
5370 3525 3583 0
5370 3525 3585 0
5370 3527 3587 0
5370 3527 3554 0
5370 3527 3555 0
5370 3527 3557 0
5370 3527 3559 0
5370 3527 3561 0
5370 3527 3563 0
5370 3527 3565 0
5370 3527 3567 0
5370 3527 3569 0
5370 3527 3571 0
5370 3527 3573 0
5370 3527 3575 0
5370 3527 3577 0
5370 3527 3579 0
5370 3527 3581 0
5370 3527 3583 0
5370 3527 3585 0
c (((aux263 + aux264 + shift(variant_fields_00004_00002_00003, -2))<=14)=tv=SATLiteral(5371))
-5371 3670 0
-5371 3672 3668 0
-5371 3673 3666 0
-5371 3675 3664 0
-5371 3677 3662 0
-5371 3679 3660 0
-5371 3681 3658 0
-5371 3683 3656 0
-5371 3685 3654 0
-5371 3687 3652 0
-5371 3689 3650 0
-5371 3691 3648 0
-5371 3693 3646 0
-5371 3695 3644 0
-5371 3697 3643 0
-5371 2026 3668 0
-5371 2026 3672 3666 0
-5371 2026 3673 3664 0
-5371 2026 3675 3662 0
-5371 2026 3677 3660 0
-5371 2026 3679 3658 0
-5371 2026 3681 3656 0
-5371 2026 3683 3654 0
-5371 2026 3685 3652 0
-5371 2026 3687 3650 0
-5371 2026 3689 3648 0
-5371 2026 3691 3646 0
-5371 2026 3693 3644 0
-5371 2026 3695 3643 0
-5371 2026 3697 0
-5371 2027 3666 0
-5371 2027 3672 3664 0
-5371 2027 3673 3662 0
-5371 2027 3675 3660 0
-5371 2027 3677 3658 0
-5371 2027 3679 3656 0
-5371 2027 3681 3654 0
-5371 2027 3683 3652 0
-5371 2027 3685 3650 0
-5371 2027 3687 3648 0
-5371 2027 3689 3646 0
-5371 2027 3691 3644 0
-5371 2027 3693 3643 0
-5371 2027 3695 0
-5371 2027 3697 0
-5371 2029 3664 0
-5371 2029 3672 3662 0
-5371 2029 3673 3660 0
-5371 2029 3675 3658 0
-5371 2029 3677 3656 0
-5371 2029 3679 3654 0
-5371 2029 3681 3652 0
-5371 2029 3683 3650 0
-5371 2029 3685 3648 0
-5371 2029 3687 3646 0
-5371 2029 3689 3644 0
-5371 2029 3691 3643 0
-5371 2029 3693 0
-5371 2029 3695 0
-5371 2029 3697 0
-5371 2031 3662 0
-5371 2031 3672 3660 0
-5371 2031 3673 3658 0
-5371 2031 3675 3656 0
-5371 2031 3677 3654 0
-5371 2031 3679 3652 0
-5371 2031 3681 3650 0
-5371 2031 3683 3648 0
-5371 2031 3685 3646 0
-5371 2031 3687 3644 0
-5371 2031 3689 3643 0
-5371 2031 3691 0
-5371 2031 3693 0
-5371 2031 3695 0
-5371 2031 3697 0
-5371 2033 3660 0
-5371 2033 3672 3658 0
-5371 2033 3673 3656 0
-5371 2033 3675 3654 0
-5371 2033 3677 3652 0
-5371 2033 3679 3650 0
-5371 2033 3681 3648 0
-5371 2033 3683 3646 0
-5371 2033 3685 3644 0
-5371 2033 3687 3643 0
-5371 2033 3689 0
-5371 2033 3691 0
-5371 2033 3693 0
-5371 2033 3695 0
-5371 2033 3697 0
-5371 2035 3658 0
-5371 2035 3672 3656 0
-5371 2035 3673 3654 0
-5371 2035 3675 3652 0
-5371 2035 3677 3650 0
-5371 2035 3679 3648 0
-5371 2035 3681 3646 0
-5371 2035 3683 3644 0
-5371 2035 3685 3643 0
-5371 2035 3687 0
-5371 2035 3689 0
-5371 2035 3691 0
-5371 2035 3693 0
-5371 2035 3695 0
-5371 2035 3697 0
-5371 2037 3656 0
-5371 2037 3672 3654 0
-5371 2037 3673 3652 0
-5371 2037 3675 3650 0
-5371 2037 3677 3648 0
-5371 2037 3679 3646 0
-5371 2037 3681 3644 0
-5371 2037 3683 3643 0
-5371 2037 3685 0
-5371 2037 3687 0
-5371 2037 3689 0
-5371 2037 3691 0
-5371 2037 3693 0
-5371 2037 3695 0
-5371 2037 3697 0
5371 -3685 -3643 0
5371 -3683 -3644 0
5371 -3681 -3646 0
5371 -3679 -3648 0
5371 -3677 -3650 0
5371 -3675 -3652 0
5371 -3673 -3654 0
5371 -3672 -3656 0
5371 -2037 -3687 -3643 0
5371 -2037 -3685 -3644 0
5371 -2037 -3683 -3646 0
5371 -2037 -3681 -3648 0
5371 -2037 -3679 -3650 0
5371 -2037 -3677 -3652 0
5371 -2037 -3675 -3654 0
5371 -2037 -3673 -3656 0
5371 -2037 -3672 -3658 0
5371 -2035 -3689 -3643 0
5371 -2035 -3687 -3644 0
5371 -2035 -3685 -3646 0
5371 -2035 -3683 -3648 0
5371 -2035 -3681 -3650 0
5371 -2035 -3679 -3652 0
5371 -2035 -3677 -3654 0
5371 -2035 -3675 -3656 0
5371 -2035 -3673 -3658 0
5371 -2035 -3672 -3660 0
5371 -2033 -3691 -3643 0
5371 -2033 -3689 -3644 0
5371 -2033 -3687 -3646 0
5371 -2033 -3685 -3648 0
5371 -2033 -3683 -3650 0
5371 -2033 -3681 -3652 0
5371 -2033 -3679 -3654 0
5371 -2033 -3677 -3656 0
5371 -2033 -3675 -3658 0
5371 -2033 -3673 -3660 0
5371 -2033 -3672 -3662 0
5371 -2031 -3693 -3643 0
5371 -2031 -3691 -3644 0
5371 -2031 -3689 -3646 0
5371 -2031 -3687 -3648 0
5371 -2031 -3685 -3650 0
5371 -2031 -3683 -3652 0
5371 -2031 -3681 -3654 0
5371 -2031 -3679 -3656 0
5371 -2031 -3677 -3658 0
5371 -2031 -3675 -3660 0
5371 -2031 -3673 -3662 0
5371 -2031 -3672 -3664 0
5371 -2029 -3695 -3643 0
5371 -2029 -3693 -3644 0
5371 -2029 -3691 -3646 0
5371 -2029 -3689 -3648 0
5371 -2029 -3687 -3650 0
5371 -2029 -3685 -3652 0
5371 -2029 -3683 -3654 0
5371 -2029 -3681 -3656 0
5371 -2029 -3679 -3658 0
5371 -2029 -3677 -3660 0
5371 -2029 -3675 -3662 0
5371 -2029 -3673 -3664 0
5371 -2029 -3672 -3666 0
5371 -2027 -3697 -3643 0
5371 -2027 -3695 -3644 0
5371 -2027 -3693 -3646 0
5371 -2027 -3691 -3648 0
5371 -2027 -3689 -3650 0
5371 -2027 -3687 -3652 0
5371 -2027 -3685 -3654 0
5371 -2027 -3683 -3656 0
5371 -2027 -3681 -3658 0
5371 -2027 -3679 -3660 0
5371 -2027 -3677 -3662 0
5371 -2027 -3675 -3664 0
5371 -2027 -3673 -3666 0
5371 -2027 -3672 -3668 0
5371 -2026 -3643 0
5371 -2026 -3697 -3644 0
5371 -2026 -3695 -3646 0
5371 -2026 -3693 -3648 0
5371 -2026 -3691 -3650 0
5371 -2026 -3689 -3652 0
5371 -2026 -3687 -3654 0
5371 -2026 -3685 -3656 0
5371 -2026 -3683 -3658 0
5371 -2026 -3681 -3660 0
5371 -2026 -3679 -3662 0
5371 -2026 -3677 -3664 0
5371 -2026 -3675 -3666 0
5371 -2026 -3673 -3668 0
5371 -2026 -3672 -3670 0
c ((14<=(aux263 + aux264 + shift(variant_fields_00004_00002_00003, -2)))=tv=SATLiteral(5372))
-5372 -3683 -3643 0
-5372 -3681 -3644 0
-5372 -3679 -3646 0
-5372 -3677 -3648 0
-5372 -3675 -3650 0
-5372 -3673 -3652 0
-5372 -3672 -3654 0
-5372 -2037 -3685 -3643 0
-5372 -2037 -3683 -3644 0
-5372 -2037 -3681 -3646 0
-5372 -2037 -3679 -3648 0
-5372 -2037 -3677 -3650 0
-5372 -2037 -3675 -3652 0
-5372 -2037 -3673 -3654 0
-5372 -2037 -3672 -3656 0
-5372 -2035 -3687 -3643 0
-5372 -2035 -3685 -3644 0
-5372 -2035 -3683 -3646 0
-5372 -2035 -3681 -3648 0
-5372 -2035 -3679 -3650 0
-5372 -2035 -3677 -3652 0
-5372 -2035 -3675 -3654 0
-5372 -2035 -3673 -3656 0
-5372 -2035 -3672 -3658 0
-5372 -2033 -3689 -3643 0
-5372 -2033 -3687 -3644 0
-5372 -2033 -3685 -3646 0
-5372 -2033 -3683 -3648 0
-5372 -2033 -3681 -3650 0
-5372 -2033 -3679 -3652 0
-5372 -2033 -3677 -3654 0
-5372 -2033 -3675 -3656 0
-5372 -2033 -3673 -3658 0
-5372 -2033 -3672 -3660 0
-5372 -2031 -3691 -3643 0
-5372 -2031 -3689 -3644 0
-5372 -2031 -3687 -3646 0
-5372 -2031 -3685 -3648 0
-5372 -2031 -3683 -3650 0
-5372 -2031 -3681 -3652 0
-5372 -2031 -3679 -3654 0
-5372 -2031 -3677 -3656 0
-5372 -2031 -3675 -3658 0
-5372 -2031 -3673 -3660 0
-5372 -2031 -3672 -3662 0
-5372 -2029 -3693 -3643 0
-5372 -2029 -3691 -3644 0
-5372 -2029 -3689 -3646 0
-5372 -2029 -3687 -3648 0
-5372 -2029 -3685 -3650 0
-5372 -2029 -3683 -3652 0
-5372 -2029 -3681 -3654 0
-5372 -2029 -3679 -3656 0
-5372 -2029 -3677 -3658 0
-5372 -2029 -3675 -3660 0
-5372 -2029 -3673 -3662 0
-5372 -2029 -3672 -3664 0
-5372 -2027 -3695 -3643 0
-5372 -2027 -3693 -3644 0
-5372 -2027 -3691 -3646 0
-5372 -2027 -3689 -3648 0
-5372 -2027 -3687 -3650 0
-5372 -2027 -3685 -3652 0
-5372 -2027 -3683 -3654 0
-5372 -2027 -3681 -3656 0
-5372 -2027 -3679 -3658 0
-5372 -2027 -3677 -3660 0
-5372 -2027 -3675 -3662 0
-5372 -2027 -3673 -3664 0
-5372 -2027 -3672 -3666 0
-5372 -2026 -3697 -3643 0
-5372 -2026 -3695 -3644 0
-5372 -2026 -3693 -3646 0
-5372 -2026 -3691 -3648 0
-5372 -2026 -3689 -3650 0
-5372 -2026 -3687 -3652 0
-5372 -2026 -3685 -3654 0
-5372 -2026 -3683 -3656 0
-5372 -2026 -3681 -3658 0
-5372 -2026 -3679 -3660 0
-5372 -2026 -3677 -3662 0
-5372 -2026 -3675 -3664 0
-5372 -2026 -3673 -3666 0
-5372 -2026 -3672 -3668 0
5372 3668 0
5372 3672 3666 0
5372 3673 3664 0
5372 3675 3662 0
5372 3677 3660 0
5372 3679 3658 0
5372 3681 3656 0
5372 3683 3654 0
5372 3685 3652 0
5372 3687 3650 0
5372 3689 3648 0
5372 3691 3646 0
5372 3693 3644 0
5372 3695 3643 0
5372 3697 0
5372 2026 3666 0
5372 2026 3672 3664 0
5372 2026 3673 3662 0
5372 2026 3675 3660 0
5372 2026 3677 3658 0
5372 2026 3679 3656 0
5372 2026 3681 3654 0
5372 2026 3683 3652 0
5372 2026 3685 3650 0
5372 2026 3687 3648 0
5372 2026 3689 3646 0
5372 2026 3691 3644 0
5372 2026 3693 3643 0
5372 2026 3695 0
5372 2026 3697 0
5372 2027 3664 0
5372 2027 3672 3662 0
5372 2027 3673 3660 0
5372 2027 3675 3658 0
5372 2027 3677 3656 0
5372 2027 3679 3654 0
5372 2027 3681 3652 0
5372 2027 3683 3650 0
5372 2027 3685 3648 0
5372 2027 3687 3646 0
5372 2027 3689 3644 0
5372 2027 3691 3643 0
5372 2027 3693 0
5372 2027 3695 0
5372 2027 3697 0
5372 2029 3662 0
5372 2029 3672 3660 0
5372 2029 3673 3658 0
5372 2029 3675 3656 0
5372 2029 3677 3654 0
5372 2029 3679 3652 0
5372 2029 3681 3650 0
5372 2029 3683 3648 0
5372 2029 3685 3646 0
5372 2029 3687 3644 0
5372 2029 3689 3643 0
5372 2029 3691 0
5372 2029 3693 0
5372 2029 3695 0
5372 2029 3697 0
5372 2031 3660 0
5372 2031 3672 3658 0
5372 2031 3673 3656 0
5372 2031 3675 3654 0
5372 2031 3677 3652 0
5372 2031 3679 3650 0
5372 2031 3681 3648 0
5372 2031 3683 3646 0
5372 2031 3685 3644 0
5372 2031 3687 3643 0
5372 2031 3689 0
5372 2031 3691 0
5372 2031 3693 0
5372 2031 3695 0
5372 2031 3697 0
5372 2033 3658 0
5372 2033 3672 3656 0
5372 2033 3673 3654 0
5372 2033 3675 3652 0
5372 2033 3677 3650 0
5372 2033 3679 3648 0
5372 2033 3681 3646 0
5372 2033 3683 3644 0
5372 2033 3685 3643 0
5372 2033 3687 0
5372 2033 3689 0
5372 2033 3691 0
5372 2033 3693 0
5372 2033 3695 0
5372 2033 3697 0
5372 2035 3656 0
5372 2035 3672 3654 0
5372 2035 3673 3652 0
5372 2035 3675 3650 0
5372 2035 3677 3648 0
5372 2035 3679 3646 0
5372 2035 3681 3644 0
5372 2035 3683 3643 0
5372 2035 3685 0
5372 2035 3687 0
5372 2035 3689 0
5372 2035 3691 0
5372 2035 3693 0
5372 2035 3695 0
5372 2035 3697 0
5372 2037 3654 0
5372 2037 3672 3652 0
5372 2037 3673 3650 0
5372 2037 3675 3648 0
5372 2037 3677 3646 0
5372 2037 3679 3644 0
5372 2037 3681 3643 0
5372 2037 3683 0
5372 2037 3685 0
5372 2037 3687 0
5372 2037 3689 0
5372 2037 3691 0
5372 2037 3693 0
5372 2037 3695 0
5372 2037 3697 0
c (((variant_fields_00004_00004_00001 + variant_fields_00004_00004_00002 + variant_fields_00004_00004_00003)<=11)=tv=SATLiteral(5373))
-5373 2150 2156 0
-5373 2151 2155 0
-5373 2153 2155 0
5373 -2155 0
5373 -2153 -2155 0
5373 -2151 -2156 0
5373 -2150 0
c ((11<=(variant_fields_00004_00004_00001 + variant_fields_00004_00004_00002 + variant_fields_00004_00004_00003))=tv=SATLiteral(5374))
-5374 -2153 -2155 0
-5374 -2151 -2155 0
-5374 -2150 -2158 0
5374 2158 0
5374 2150 2155 0
5374 2151 2155 0
5374 2153 0
c (((aux265 + shift(variant_fields_00004_00007_00002, -1) + shift(variant_fields_00004_00007_00003, -1))<=9)=tv=SATLiteral(5375))
-5375 2340 2351 0
-5375 2342 2349 0
-5375 2344 2349 0
-5375 2346 2349 0
-5375 3699 2339 2355 0
-5375 3699 2340 2351 0
-5375 3699 2342 2349 0
-5375 3699 2344 2349 0
-5375 3699 2346 2348 0
-5375 3700 2351 0
-5375 3700 2339 2351 0
-5375 3700 2340 2349 0
-5375 3700 2342 0
-5375 3700 2344 0
-5375 3700 2346 0
-5375 3702 2349 0
-5375 3702 2339 2349 0
-5375 3702 2340 0
-5375 3702 2342 0
-5375 3702 2344 0
-5375 3702 2346 0
-5375 3704 2349 0
-5375 3704 2339 2348 0
-5375 3704 2340 0
-5375 3704 2342 0
-5375 3704 2344 0
-5375 3704 2346 0
5375 -2340 -2348 0
5375 -2339 -2349 0
5375 -3704 -2340 -2349 0
5375 -3704 -2339 -2349 0
5375 -3702 -2342 -2349 0
5375 -3702 -2340 -2351 0
5375 -3702 -2339 -2351 0
5375 -3700 -2348 0
5375 -3700 -2346 -2349 0
5375 -3700 -2344 -2349 0
5375 -3700 -2342 -2351 0
5375 -3700 -2340 -2355 0
5375 -3700 -2339 0
5375 -3699 -2349 0
5375 -3699 -2346 -2349 0
5375 -3699 -2344 -2349 0
5375 -3699 -2342 -2351 0
5375 -3699 -2340 0
5375 -3699 -2339 0
c ((9<=(aux265 + shift(variant_fields_00004_00007_00002, -1) + shift(variant_fields_00004_00007_00003, -1)))=tv=SATLiteral(5376))
-5376 -2339 -2348 0
-5376 -3704 -2340 -2349 0
-5376 -3704 -2339 -2349 0
-5376 -3702 -2342 -2348 0
-5376 -3702 -2340 -2349 0
-5376 -3702 -2339 -2351 0
-5376 -3700 -2346 -2348 0
-5376 -3700 -2344 -2349 0
-5376 -3700 -2342 -2349 0
-5376 -3700 -2340 -2353 0
-5376 -3700 -2339 -2355 0
-5376 -3699 -2348 0
-5376 -3699 -2346 -2349 0
-5376 -3699 -2344 -2349 0
-5376 -3699 -2342 -2351 0
-5376 -3699 -2340 -2355 0
-5376 -3699 -2339 0
5376 2339 2355 0
5376 2340 2351 0
5376 2342 2349 0
5376 2344 2349 0
5376 2346 2348 0
5376 3699 2355 0
5376 3699 2339 2353 0
5376 3699 2340 2349 0
5376 3699 2342 2349 0
5376 3699 2344 2348 0
5376 3699 2346 0
5376 3700 2351 0
5376 3700 2339 2349 0
5376 3700 2340 2348 0
5376 3700 2342 0
5376 3700 2344 0
5376 3700 2346 0
5376 3702 2349 0
5376 3702 2339 2349 0
5376 3702 2340 0
5376 3702 2342 0
5376 3702 2344 0
5376 3702 2346 0
5376 3704 2348 0
5376 3704 2339 0
5376 3704 2340 0
5376 3704 2342 0
5376 3704 2344 0
5376 3704 2346 0
c (((SATLiteral(447) + SATLiteral(280))<=1)=tv=SATLiteral(5377))
-5377 -447 -280 0
5377 280 0
5377 447 0
c ((1<=(SATLiteral(447) + SATLiteral(280)))=tv=SATLiteral(5378))
-5378 447 280 0
5378 -280 0
5378 -447 0
c (((aux266 + SATLiteral(281) + SATLiteral(131))<=1)=tv=SATLiteral(5379))
-5379 3707 0
-5379 -131 3706 0
-5379 -281 3706 0
-5379 -281 -131 0
5379 131 -3706 0
5379 281 -3706 0
5379 281 131 -3707 0
c ((1<=(aux266 + SATLiteral(281) + SATLiteral(131)))=tv=SATLiteral(5380))
-5380 281 131 -3706 0
5380 3706 0
5380 -131 0
5380 -281 0
5380 -281 -131 0
c (((aux267 + aux268 + aux270)<=1)=tv=SATLiteral(5381))
-5381 3719 0
-5381 3712 3718 0
-5381 3713 0
-5381 3709 3718 0
-5381 3709 3712 0
-5381 3709 3713 0
-5381 3710 0
-5381 3710 3712 0
-5381 3710 3713 0
5381 -3710 -3712 -3718 0
5381 -3709 -3713 -3718 0
5381 -3709 -3712 -3719 0
c ((1<=(aux267 + aux268 + aux270))=tv=SATLiteral(5382))
-5382 -3709 -3712 -3718 0
5382 3718 0
5382 3712 0
5382 3713 0
5382 3709 0
5382 3709 3712 0
5382 3709 3713 0
5382 3710 0
5382 3710 3712 0
5382 3710 3713 0
c (((aux271 + aux272 + aux274)<=1)=tv=SATLiteral(5383))
-5383 3733 0
-5383 3726 3732 0
-5383 3727 0
-5383 3723 3732 0
-5383 3723 3726 0
-5383 3723 3727 0
-5383 3724 0
-5383 3724 3726 0
-5383 3724 3727 0
5383 -3724 -3726 -3732 0
5383 -3723 -3727 -3732 0
5383 -3723 -3726 -3733 0
c ((1<=(aux271 + aux272 + aux274))=tv=SATLiteral(5384))
-5384 -3723 -3726 -3732 0
5384 3732 0
5384 3726 0
5384 3727 0
5384 3723 0
5384 3723 3726 0
5384 3723 3727 0
5384 3724 0
5384 3724 3726 0
5384 3724 3727 0
c (((aux275 + aux276 + aux278)<=1)=tv=SATLiteral(5385))
-5385 3747 0
-5385 3740 3746 0
-5385 3741 0
-5385 3737 3746 0
-5385 3737 3740 0
-5385 3737 3741 0
-5385 3738 0
-5385 3738 3740 0
-5385 3738 3741 0
5385 -3738 -3740 -3746 0
5385 -3737 -3741 -3746 0
5385 -3737 -3740 -3747 0
c ((1<=(aux275 + aux276 + aux278))=tv=SATLiteral(5386))
-5386 -3737 -3740 -3746 0
5386 3746 0
5386 3740 0
5386 3741 0
5386 3737 0
5386 3737 3740 0
5386 3737 3741 0
5386 3738 0
5386 3738 3740 0
5386 3738 3741 0
c (((aux279 + aux280 + aux282)<=1)=tv=SATLiteral(5387))
-5387 3761 0
-5387 3754 3760 0
-5387 3755 0
-5387 3751 3760 0
-5387 3751 3754 0
-5387 3751 3755 0
-5387 3752 0
-5387 3752 3754 0
-5387 3752 3755 0
5387 -3752 -3754 -3760 0
5387 -3751 -3755 -3760 0
5387 -3751 -3754 -3761 0
c ((1<=(aux279 + aux280 + aux282))=tv=SATLiteral(5388))
-5388 -3751 -3754 -3760 0
5388 3760 0
5388 3754 0
5388 3755 0
5388 3751 0
5388 3751 3754 0
5388 3751 3755 0
5388 3752 0
5388 3752 3754 0
5388 3752 3755 0
c (((aux283 + aux284 + SATLiteral(136))<=1)=tv=SATLiteral(5389))
-5389 3769 0
-5389 3765 3768 0
-5389 3766 0
-5389 -136 3768 0
-5389 -136 3765 0
-5389 -136 3766 0
5389 -3765 -3768 0
5389 136 -3766 -3768 0
5389 136 -3765 -3769 0
c ((1<=(aux283 + aux284 + SATLiteral(136)))=tv=SATLiteral(5390))
-5390 136 -3765 -3768 0
5390 3768 0
5390 3765 0
5390 3766 0
5390 -136 0
5390 -136 3765 0
5390 -136 3766 0
c (((SATLiteral(115) + SATLiteral(-38))<=1)=tv=SATLiteral(5391))
-5391 -115 38 0
5391 -38 0
5391 115 0
c ((1<=(SATLiteral(115) + SATLiteral(-38)))=tv=SATLiteral(5392))
-5392 115 -38 0
5392 38 0
5392 -115 0
c (((aux285 + aux286 + aux287)<=1)=tv=SATLiteral(5393))
-5393 3778 0
-5393 3774 3777 0
-5393 3775 0
-5393 3771 3777 0
-5393 3771 3774 0
-5393 3771 3775 0
-5393 3772 0
-5393 3772 3774 0
-5393 3772 3775 0
5393 -3772 -3774 -3777 0
5393 -3771 -3775 -3777 0
5393 -3771 -3774 -3778 0
c ((1<=(aux285 + aux286 + aux287))=tv=SATLiteral(5394))
-5394 -3771 -3774 -3777 0
5394 3777 0
5394 3774 0
5394 3775 0
5394 3771 0
5394 3771 3774 0
5394 3771 3775 0
5394 3772 0
5394 3772 3774 0
5394 3772 3775 0
c (((aux288 + SATLiteral(138) + SATLiteral(374))<=1)=tv=SATLiteral(5395))
-5395 3781 0
-5395 -374 3780 0
-5395 -138 3780 0
-5395 -138 -374 0
5395 374 -3780 0
5395 138 -3780 0
5395 138 374 -3781 0
c ((1<=(aux288 + SATLiteral(138) + SATLiteral(374)))=tv=SATLiteral(5396))
-5396 138 374 -3780 0
5396 3780 0
5396 -374 0
5396 -138 0
5396 -138 -374 0
c (((SATLiteral(38) + SATLiteral(295) + SATLiteral(375))<=1)=tv=SATLiteral(5397))
-5397 -295 -375 0
-5397 -38 -375 0
-5397 -38 -295 0
5397 295 375 0
5397 38 375 0
5397 38 295 0
c ((1<=(SATLiteral(38) + SATLiteral(295) + SATLiteral(375)))=tv=SATLiteral(5398))
-5398 38 295 375 0
5398 -375 0
5398 -295 0
5398 -38 0
5398 -38 -295 0
c (((aux289 + aux290 + aux292)<=1)=tv=SATLiteral(5399))
-5399 3793 0
-5399 3786 3792 0
-5399 3787 0
-5399 3783 3792 0
-5399 3783 3786 0
-5399 3783 3787 0
-5399 3784 0
-5399 3784 3786 0
-5399 3784 3787 0
5399 -3784 -3786 -3792 0
5399 -3783 -3787 -3792 0
5399 -3783 -3786 -3793 0
c ((1<=(aux289 + aux290 + aux292))=tv=SATLiteral(5400))
-5400 -3783 -3786 -3792 0
5400 3792 0
5400 3786 0
5400 3787 0
5400 3783 0
5400 3783 3786 0
5400 3783 3787 0
5400 3784 0
5400 3784 3786 0
5400 3784 3787 0
c (((aux293 + aux294 + aux296)<=1)=tv=SATLiteral(5401))
-5401 3807 0
-5401 3800 3806 0
-5401 3801 0
-5401 3797 3806 0
-5401 3797 3800 0
-5401 3797 3801 0
-5401 3798 0
-5401 3798 3800 0
-5401 3798 3801 0
5401 -3798 -3800 -3806 0
5401 -3797 -3801 -3806 0
5401 -3797 -3800 -3807 0
c ((1<=(aux293 + aux294 + aux296))=tv=SATLiteral(5402))
-5402 -3797 -3800 -3806 0
5402 3806 0
5402 3800 0
5402 3801 0
5402 3797 0
5402 3797 3800 0
5402 3797 3801 0
5402 3798 0
5402 3798 3800 0
5402 3798 3801 0
c (((aux297 + aux298 + aux300)<=1)=tv=SATLiteral(5403))
-5403 3821 0
-5403 3814 3820 0
-5403 3815 0
-5403 3811 3820 0
-5403 3811 3814 0
-5403 3811 3815 0
-5403 3812 0
-5403 3812 3814 0
-5403 3812 3815 0
5403 -3812 -3814 -3820 0
5403 -3811 -3815 -3820 0
5403 -3811 -3814 -3821 0
c ((1<=(aux297 + aux298 + aux300))=tv=SATLiteral(5404))
-5404 -3811 -3814 -3820 0
5404 3820 0
5404 3814 0
5404 3815 0
5404 3811 0
5404 3811 3814 0
5404 3811 3815 0
5404 3812 0
5404 3812 3814 0
5404 3812 3815 0
c (((aux301 + aux302 + SATLiteral(62))<=1)=tv=SATLiteral(5405))
-5405 3829 0
-5405 3825 3828 0
-5405 3826 0
-5405 -62 3828 0
-5405 -62 3825 0
-5405 -62 3826 0
5405 -3825 -3828 0
5405 62 -3826 -3828 0
5405 62 -3825 -3829 0
c ((1<=(aux301 + aux302 + SATLiteral(62)))=tv=SATLiteral(5406))
-5406 62 -3825 -3828 0
5406 3828 0
5406 3825 0
5406 3826 0
5406 -62 0
5406 -62 3825 0
5406 -62 3826 0
c (((aux303 + aux304 + SATLiteral(63))<=1)=tv=SATLiteral(5407))
-5407 3835 0
-5407 3831 3834 0
-5407 3832 0
-5407 -63 3834 0
-5407 -63 3831 0
-5407 -63 3832 0
5407 -3831 -3834 0
5407 63 -3832 -3834 0
5407 63 -3831 -3835 0
c ((1<=(aux303 + aux304 + SATLiteral(63)))=tv=SATLiteral(5408))
-5408 63 -3831 -3834 0
5408 3834 0
5408 3831 0
5408 3832 0
5408 -63 0
5408 -63 3831 0
5408 -63 3832 0
c (((SATLiteral(118) + SATLiteral(-39))<=1)=tv=SATLiteral(5409))
-5409 -118 39 0
5409 -39 0
5409 118 0
c ((1<=(SATLiteral(118) + SATLiteral(-39)))=tv=SATLiteral(5410))
-5410 118 -39 0
5410 39 0
5410 -118 0
c (((aux305 + aux306 + aux308)<=1)=tv=SATLiteral(5411))
-5411 3847 0
-5411 3840 3846 0
-5411 3841 0
-5411 3837 3846 0
-5411 3837 3840 0
-5411 3837 3841 0
-5411 3838 0
-5411 3838 3840 0
-5411 3838 3841 0
5411 -3838 -3840 -3846 0
5411 -3837 -3841 -3846 0
5411 -3837 -3840 -3847 0
c ((1<=(aux305 + aux306 + aux308))=tv=SATLiteral(5412))
-5412 -3837 -3840 -3846 0
5412 3846 0
5412 3840 0
5412 3841 0
5412 3837 0
5412 3837 3840 0
5412 3837 3841 0
5412 3838 0
5412 3838 3840 0
5412 3838 3841 0
c (((aux309 + SATLiteral(151) + SATLiteral(388))<=1)=tv=SATLiteral(5413))
-5413 3852 0
-5413 -388 3851 0
-5413 -151 3851 0
-5413 -151 -388 0
5413 388 -3851 0
5413 151 -3851 0
5413 151 388 -3852 0
c ((1<=(aux309 + SATLiteral(151) + SATLiteral(388)))=tv=SATLiteral(5414))
-5414 151 388 -3851 0
5414 3851 0
5414 -388 0
5414 -151 0
5414 -151 -388 0
c (((SATLiteral(39) + SATLiteral(309) + SATLiteral(389))<=1)=tv=SATLiteral(5415))
-5415 -309 -389 0
-5415 -39 -389 0
-5415 -39 -309 0
5415 309 389 0
5415 39 389 0
5415 39 309 0
c ((1<=(SATLiteral(39) + SATLiteral(309) + SATLiteral(389)))=tv=SATLiteral(5416))
-5416 39 309 389 0
5416 -389 0
5416 -309 0
5416 -39 0
5416 -39 -309 0
c (((aux310 + aux311 + aux313)<=1)=tv=SATLiteral(5417))
-5417 3864 0
-5417 3857 3863 0
-5417 3858 0
-5417 3854 3863 0
-5417 3854 3857 0
-5417 3854 3858 0
-5417 3855 0
-5417 3855 3857 0
-5417 3855 3858 0
5417 -3855 -3857 -3863 0
5417 -3854 -3858 -3863 0
5417 -3854 -3857 -3864 0
c ((1<=(aux310 + aux311 + aux313))=tv=SATLiteral(5418))
-5418 -3854 -3857 -3863 0
5418 3863 0
5418 3857 0
5418 3858 0
5418 3854 0
5418 3854 3857 0
5418 3854 3858 0
5418 3855 0
5418 3855 3857 0
5418 3855 3858 0
c (((aux314 + aux315 + aux317)<=1)=tv=SATLiteral(5419))
-5419 3878 0
-5419 3871 3877 0
-5419 3872 0
-5419 3868 3877 0
-5419 3868 3871 0
-5419 3868 3872 0
-5419 3869 0
-5419 3869 3871 0
-5419 3869 3872 0
5419 -3869 -3871 -3877 0
5419 -3868 -3872 -3877 0
5419 -3868 -3871 -3878 0
c ((1<=(aux314 + aux315 + aux317))=tv=SATLiteral(5420))
-5420 -3868 -3871 -3877 0
5420 3877 0
5420 3871 0
5420 3872 0
5420 3868 0
5420 3868 3871 0
5420 3868 3872 0
5420 3869 0
5420 3869 3871 0
5420 3869 3872 0
c (((aux319 + aux320 + aux322)<=1)=tv=SATLiteral(5421))
-5421 3895 0
-5421 3888 3894 0
-5421 3889 0
-5421 3885 3894 0
-5421 3885 3888 0
-5421 3885 3889 0
-5421 3886 0
-5421 3886 3888 0
-5421 3886 3889 0
5421 -3886 -3888 -3894 0
5421 -3885 -3889 -3894 0
5421 -3885 -3888 -3895 0
c ((1<=(aux319 + aux320 + aux322))=tv=SATLiteral(5422))
-5422 -3885 -3888 -3894 0
5422 3894 0
5422 3888 0
5422 3889 0
5422 3885 0
5422 3885 3888 0
5422 3885 3889 0
5422 3886 0
5422 3886 3888 0
5422 3886 3889 0
c (((aux323 + aux324 + aux326)<=1)=tv=SATLiteral(5423))
-5423 3911 0
-5423 3904 3910 0
-5423 3905 0
-5423 3901 3910 0
-5423 3901 3904 0
-5423 3901 3905 0
-5423 3902 0
-5423 3902 3904 0
-5423 3902 3905 0
5423 -3902 -3904 -3910 0
5423 -3901 -3905 -3910 0
5423 -3901 -3904 -3911 0
c ((1<=(aux323 + aux324 + aux326))=tv=SATLiteral(5424))
-5424 -3901 -3904 -3910 0
5424 3910 0
5424 3904 0
5424 3905 0
5424 3901 0
5424 3901 3904 0
5424 3901 3905 0
5424 3902 0
5424 3902 3904 0
5424 3902 3905 0
c (((aux327 + aux328 + aux330)<=1)=tv=SATLiteral(5425))
-5425 3925 0
-5425 3918 3924 0
-5425 3919 0
-5425 3915 3924 0
-5425 3915 3918 0
-5425 3915 3919 0
-5425 3916 0
-5425 3916 3918 0
-5425 3916 3919 0
5425 -3916 -3918 -3924 0
5425 -3915 -3919 -3924 0
5425 -3915 -3918 -3925 0
c ((1<=(aux327 + aux328 + aux330))=tv=SATLiteral(5426))
-5426 -3915 -3918 -3924 0
5426 3924 0
5426 3918 0
5426 3919 0
5426 3915 0
5426 3915 3918 0
5426 3915 3919 0
5426 3916 0
5426 3916 3918 0
5426 3916 3919 0
c (((SATLiteral(321) + SATLiteral(401))<=1)=tv=SATLiteral(5427))
-5427 -321 -401 0
5427 401 0
5427 321 0
c ((1<=(SATLiteral(321) + SATLiteral(401)))=tv=SATLiteral(5428))
-5428 321 401 0
5428 -401 0
5428 -321 0
c (((aux331 + aux332 + SATLiteral(70))<=1)=tv=SATLiteral(5429))
-5429 3933 0
-5429 3929 3932 0
-5429 3930 0
-5429 -70 3932 0
-5429 -70 3929 0
-5429 -70 3930 0
5429 -3929 -3932 0
5429 70 -3930 -3932 0
5429 70 -3929 -3933 0
c ((1<=(aux331 + aux332 + SATLiteral(70)))=tv=SATLiteral(5430))
-5430 70 -3929 -3932 0
5430 3932 0
5430 3929 0
5430 3930 0
5430 -70 0
5430 -70 3929 0
5430 -70 3930 0
c (((aux333 + aux334 + SATLiteral(71))<=1)=tv=SATLiteral(5431))
-5431 3939 0
-5431 3935 3938 0
-5431 3936 0
-5431 -71 3938 0
-5431 -71 3935 0
-5431 -71 3936 0
5431 -3935 -3938 0
5431 71 -3936 -3938 0
5431 71 -3935 -3939 0
c ((1<=(aux333 + aux334 + SATLiteral(71)))=tv=SATLiteral(5432))
-5432 71 -3935 -3938 0
5432 3938 0
5432 3935 0
5432 3936 0
5432 -71 0
5432 -71 3935 0
5432 -71 3936 0
c (((aux335 + aux336 + SATLiteral(72))<=1)=tv=SATLiteral(5433))
-5433 3945 0
-5433 3941 3944 0
-5433 3942 0
-5433 -72 3944 0
-5433 -72 3941 0
-5433 -72 3942 0
5433 -3941 -3944 0
5433 72 -3942 -3944 0
5433 72 -3941 -3945 0
c ((1<=(aux335 + aux336 + SATLiteral(72)))=tv=SATLiteral(5434))
-5434 72 -3941 -3944 0
5434 3944 0
5434 3941 0
5434 3942 0
5434 -72 0
5434 -72 3941 0
5434 -72 3942 0
c (((SATLiteral(166) + SATLiteral(73) + SATLiteral(241))<=1)=tv=SATLiteral(5435))
-5435 -73 -241 0
-5435 -166 -241 0
-5435 -166 -73 0
5435 73 241 0
5435 166 241 0
5435 166 73 0
c ((1<=(SATLiteral(166) + SATLiteral(73) + SATLiteral(241)))=tv=SATLiteral(5436))
-5436 166 73 241 0
5436 -241 0
5436 -73 0
5436 -166 0
5436 -166 -73 0
c (((aux337 + SATLiteral(74) + SATLiteral(16))<=1)=tv=SATLiteral(5437))
-5437 3948 0
-5437 -16 3947 0
-5437 -74 3947 0
-5437 -74 -16 0
5437 16 -3947 0
5437 74 -3947 0
5437 74 16 -3948 0
c ((1<=(aux337 + SATLiteral(74) + SATLiteral(16)))=tv=SATLiteral(5438))
-5438 74 16 -3947 0
5438 3947 0
5438 -16 0
5438 -74 0
5438 -74 -16 0
c (((aux338 + aux339 + aux340)<=1)=tv=SATLiteral(5439))
-5439 3957 0
-5439 3953 3956 0
-5439 3954 0
-5439 3950 3956 0
-5439 3950 3953 0
-5439 3950 3954 0
-5439 3951 0
-5439 3951 3953 0
-5439 3951 3954 0
5439 -3951 -3953 -3956 0
5439 -3950 -3954 -3956 0
5439 -3950 -3953 -3957 0
c ((1<=(aux338 + aux339 + aux340))=tv=SATLiteral(5440))
-5440 -3950 -3953 -3956 0
5440 3956 0
5440 3953 0
5440 3954 0
5440 3950 0
5440 3950 3953 0
5440 3950 3954 0
5440 3951 0
5440 3951 3953 0
5440 3951 3954 0
c (((SATLiteral(169) + SATLiteral(75) + SATLiteral(244))<=1)=tv=SATLiteral(5441))
-5441 -75 -244 0
-5441 -169 -244 0
-5441 -169 -75 0
5441 75 244 0
5441 169 244 0
5441 169 75 0
c ((1<=(SATLiteral(169) + SATLiteral(75) + SATLiteral(244)))=tv=SATLiteral(5442))
-5442 169 75 244 0
5442 -244 0
5442 -75 0
5442 -169 0
5442 -169 -75 0
c (((aux341 + aux342 + aux343)<=1)=tv=SATLiteral(5443))
-5443 3966 0
-5443 3962 3965 0
-5443 3963 0
-5443 3959 3965 0
-5443 3959 3962 0
-5443 3959 3963 0
-5443 3960 0
-5443 3960 3962 0
-5443 3960 3963 0
5443 -3960 -3962 -3965 0
5443 -3959 -3963 -3965 0
5443 -3959 -3962 -3966 0
c ((1<=(aux341 + aux342 + aux343))=tv=SATLiteral(5444))
-5444 -3959 -3962 -3965 0
5444 3965 0
5444 3962 0
5444 3963 0
5444 3959 0
5444 3959 3962 0
5444 3959 3963 0
5444 3960 0
5444 3960 3962 0
5444 3960 3963 0
c (((aux344 + aux345 + aux346)<=1)=tv=SATLiteral(5445))
-5445 3975 0
-5445 3971 3974 0
-5445 3972 0
-5445 3968 3974 0
-5445 3968 3971 0
-5445 3968 3972 0
-5445 3969 0
-5445 3969 3971 0
-5445 3969 3972 0
5445 -3969 -3971 -3974 0
5445 -3968 -3972 -3974 0
5445 -3968 -3971 -3975 0
c ((1<=(aux344 + aux345 + aux346))=tv=SATLiteral(5446))
-5446 -3968 -3971 -3974 0
5446 3974 0
5446 3971 0
5446 3972 0
5446 3968 0
5446 3968 3971 0
5446 3968 3972 0
5446 3969 0
5446 3969 3971 0
5446 3969 3972 0
c (((aux347 + aux348 + aux350)<=1)=tv=SATLiteral(5447))
-5447 3987 0
-5447 3980 3986 0
-5447 3981 0
-5447 3977 3986 0
-5447 3977 3980 0
-5447 3977 3981 0
-5447 3978 0
-5447 3978 3980 0
-5447 3978 3981 0
5447 -3978 -3980 -3986 0
5447 -3977 -3981 -3986 0
5447 -3977 -3980 -3987 0
c ((1<=(aux347 + aux348 + aux350))=tv=SATLiteral(5448))
-5448 -3977 -3980 -3986 0
5448 3986 0
5448 3980 0
5448 3981 0
5448 3977 0
5448 3977 3980 0
5448 3977 3981 0
5448 3978 0
5448 3978 3980 0
5448 3978 3981 0
c (((aux352 + aux355 + aux356)<=1)=tv=SATLiteral(5449))
-5449 4009 0
-5449 4003 4008 0
-5449 4004 0
-5449 4006 0
-5449 3994 4008 0
-5449 3994 4003 0
-5449 3994 4004 0
-5449 3994 4006 0
-5449 3995 0
-5449 3995 4003 0
-5449 3995 4004 0
-5449 3995 4006 0
5449 -3995 -4003 -4008 0
5449 -3994 -4004 -4008 0
5449 -3994 -4003 -4009 0
c ((1<=(aux352 + aux355 + aux356))=tv=SATLiteral(5450))
-5450 -3994 -4003 -4008 0
5450 4008 0
5450 4003 0
5450 4004 0
5450 4006 0
5450 3994 0
5450 3994 4003 0
5450 3994 4004 0
5450 3994 4006 0
5450 3995 0
5450 3995 4003 0
5450 3995 4004 0
5450 3995 4006 0
c (((aux358 + aux359 + aux361)<=1)=tv=SATLiteral(5451))
-5451 4028 0
-5451 4021 4027 0
-5451 4022 0
-5451 4018 4027 0
-5451 4018 4021 0
-5451 4018 4022 0
-5451 4019 0
-5451 4019 4021 0
-5451 4019 4022 0
5451 -4019 -4021 -4027 0
5451 -4018 -4022 -4027 0
5451 -4018 -4021 -4028 0
c ((1<=(aux358 + aux359 + aux361))=tv=SATLiteral(5452))
-5452 -4018 -4021 -4027 0
5452 4027 0
5452 4021 0
5452 4022 0
5452 4018 0
5452 4018 4021 0
5452 4018 4022 0
5452 4019 0
5452 4019 4021 0
5452 4019 4022 0
c (((SATLiteral(473) + aux362 + SATLiteral(331))<=1)=tv=SATLiteral(5453))
-5453 4035 0
-5453 -331 4034 0
-5453 -473 4034 0
-5453 -473 -331 0
5453 331 -4034 0
5453 473 -4034 0
5453 473 331 -4035 0
c ((1<=(SATLiteral(473) + aux362 + SATLiteral(331)))=tv=SATLiteral(5454))
-5454 473 331 -4034 0
5454 4034 0
5454 -331 0
5454 -473 0
5454 -473 -331 0
c (((SATLiteral(180) + SATLiteral(87) + SATLiteral(255))<=1)=tv=SATLiteral(5455))
-5455 -87 -255 0
-5455 -180 -255 0
-5455 -180 -87 0
5455 87 255 0
5455 180 255 0
5455 180 87 0
c ((1<=(SATLiteral(180) + SATLiteral(87) + SATLiteral(255)))=tv=SATLiteral(5456))
-5456 180 87 255 0
5456 -255 0
5456 -87 0
5456 -180 0
5456 -180 -87 0
c (((aux363 + aux364 + aux365)<=1)=tv=SATLiteral(5457))
-5457 4044 0
-5457 4040 4043 0
-5457 4041 0
-5457 4037 4043 0
-5457 4037 4040 0
-5457 4037 4041 0
-5457 4038 0
-5457 4038 4040 0
-5457 4038 4041 0
5457 -4038 -4040 -4043 0
5457 -4037 -4041 -4043 0
5457 -4037 -4040 -4044 0
c ((1<=(aux363 + aux364 + aux365))=tv=SATLiteral(5458))
-5458 -4037 -4040 -4043 0
5458 4043 0
5458 4040 0
5458 4041 0
5458 4037 0
5458 4037 4040 0
5458 4037 4041 0
5458 4038 0
5458 4038 4040 0
5458 4038 4041 0
c (((SATLiteral(182) + SATLiteral(88) + SATLiteral(257))<=1)=tv=SATLiteral(5459))
-5459 -88 -257 0
-5459 -182 -257 0
-5459 -182 -88 0
5459 88 257 0
5459 182 257 0
5459 182 88 0
c ((1<=(SATLiteral(182) + SATLiteral(88) + SATLiteral(257)))=tv=SATLiteral(5460))
-5460 182 88 257 0
5460 -257 0
5460 -88 0
5460 -182 0
5460 -182 -88 0
c (((aux366 + aux367 + aux368)<=1)=tv=SATLiteral(5461))
-5461 4053 0
-5461 4049 4052 0
-5461 4050 0
-5461 4046 4052 0
-5461 4046 4049 0
-5461 4046 4050 0
-5461 4047 0
-5461 4047 4049 0
-5461 4047 4050 0
5461 -4047 -4049 -4052 0
5461 -4046 -4050 -4052 0
5461 -4046 -4049 -4053 0
c ((1<=(aux366 + aux367 + aux368))=tv=SATLiteral(5462))
-5462 -4046 -4049 -4052 0
5462 4052 0
5462 4049 0
5462 4050 0
5462 4046 0
5462 4046 4049 0
5462 4046 4050 0
5462 4047 0
5462 4047 4049 0
5462 4047 4050 0
c (((aux369 + aux370 + aux371)<=1)=tv=SATLiteral(5463))
-5463 4062 0
-5463 4058 4061 0
-5463 4059 0
-5463 4055 4061 0
-5463 4055 4058 0
-5463 4055 4059 0
-5463 4056 0
-5463 4056 4058 0
-5463 4056 4059 0
5463 -4056 -4058 -4061 0
5463 -4055 -4059 -4061 0
5463 -4055 -4058 -4062 0
c ((1<=(aux369 + aux370 + aux371))=tv=SATLiteral(5464))
-5464 -4055 -4058 -4061 0
5464 4061 0
5464 4058 0
5464 4059 0
5464 4055 0
5464 4055 4058 0
5464 4055 4059 0
5464 4056 0
5464 4056 4058 0
5464 4056 4059 0
c (((aux372 + aux373 + aux375)<=1)=tv=SATLiteral(5465))
-5465 4074 0
-5465 4067 4073 0
-5465 4068 0
-5465 4064 4073 0
-5465 4064 4067 0
-5465 4064 4068 0
-5465 4065 0
-5465 4065 4067 0
-5465 4065 4068 0
5465 -4065 -4067 -4073 0
5465 -4064 -4068 -4073 0
5465 -4064 -4067 -4074 0
c ((1<=(aux372 + aux373 + aux375))=tv=SATLiteral(5466))
-5466 -4064 -4067 -4073 0
5466 4073 0
5466 4067 0
5466 4068 0
5466 4064 0
5466 4064 4067 0
5466 4064 4068 0
5466 4065 0
5466 4065 4067 0
5466 4065 4068 0
c (((aux377 + aux378 + aux380)<=1)=tv=SATLiteral(5467))
-5467 4091 0
-5467 4084 4090 0
-5467 4085 0
-5467 4081 4090 0
-5467 4081 4084 0
-5467 4081 4085 0
-5467 4082 0
-5467 4082 4084 0
-5467 4082 4085 0
5467 -4082 -4084 -4090 0
5467 -4081 -4085 -4090 0
5467 -4081 -4084 -4091 0
c ((1<=(aux377 + aux378 + aux380))=tv=SATLiteral(5468))
-5468 -4081 -4084 -4090 0
5468 4090 0
5468 4084 0
5468 4085 0
5468 4081 0
5468 4081 4084 0
5468 4081 4085 0
5468 4082 0
5468 4082 4084 0
5468 4082 4085 0
c (((aux381 + aux382 + aux384)<=1)=tv=SATLiteral(5469))
-5469 4107 0
-5469 4100 4106 0
-5469 4101 0
-5469 4097 4106 0
-5469 4097 4100 0
-5469 4097 4101 0
-5469 4098 0
-5469 4098 4100 0
-5469 4098 4101 0
5469 -4098 -4100 -4106 0
5469 -4097 -4101 -4106 0
5469 -4097 -4100 -4107 0
c ((1<=(aux381 + aux382 + aux384))=tv=SATLiteral(5470))
-5470 -4097 -4100 -4106 0
5470 4106 0
5470 4100 0
5470 4101 0
5470 4097 0
5470 4097 4100 0
5470 4097 4101 0
5470 4098 0
5470 4098 4100 0
5470 4098 4101 0
c (((SATLiteral(479) + aux385 + SATLiteral(344))<=1)=tv=SATLiteral(5471))
-5471 4112 0
-5471 -344 4111 0
-5471 -479 4111 0
-5471 -479 -344 0
5471 344 -4111 0
5471 479 -4111 0
5471 479 344 -4112 0
c ((1<=(SATLiteral(479) + aux385 + SATLiteral(344)))=tv=SATLiteral(5472))
-5472 479 344 -4111 0
5472 4111 0
5472 -344 0
5472 -479 0
5472 -479 -344 0
c (((SATLiteral(351) + SATLiteral(431) + SATLiteral(268))<=1)=tv=SATLiteral(5473))
-5473 -431 -268 0
-5473 -351 -268 0
-5473 -351 -431 0
5473 431 268 0
5473 351 268 0
5473 351 431 0
c ((1<=(SATLiteral(351) + SATLiteral(431) + SATLiteral(268)))=tv=SATLiteral(5474))
-5474 351 431 268 0
5474 -268 0
5474 -431 0
5474 -351 0
5474 -351 -431 0
c (((aux386 + SATLiteral(193) + SATLiteral(432))<=1)=tv=SATLiteral(5475))
-5475 4115 0
-5475 -432 4114 0
-5475 -193 4114 0
-5475 -193 -432 0
5475 432 -4114 0
5475 193 -4114 0
5475 193 432 -4115 0
c ((1<=(aux386 + SATLiteral(193) + SATLiteral(432)))=tv=SATLiteral(5476))
-5476 193 432 -4114 0
5476 4114 0
5476 -432 0
5476 -193 0
5476 -193 -432 0
c (((aux387 + aux388 + aux389)<=1)=tv=SATLiteral(5477))
-5477 4124 0
-5477 4120 4123 0
-5477 4121 0
-5477 4117 4123 0
-5477 4117 4120 0
-5477 4117 4121 0
-5477 4118 0
-5477 4118 4120 0
-5477 4118 4121 0
5477 -4118 -4120 -4123 0
5477 -4117 -4121 -4123 0
5477 -4117 -4120 -4124 0
c ((1<=(aux387 + aux388 + aux389))=tv=SATLiteral(5478))
-5478 -4117 -4120 -4123 0
5478 4123 0
5478 4120 0
5478 4121 0
5478 4117 0
5478 4117 4120 0
5478 4117 4121 0
5478 4118 0
5478 4118 4120 0
5478 4118 4121 0
c (((aux390 + aux391 + aux392)<=1)=tv=SATLiteral(5479))
-5479 4133 0
-5479 4129 4132 0
-5479 4130 0
-5479 4126 4132 0
-5479 4126 4129 0
-5479 4126 4130 0
-5479 4127 0
-5479 4127 4129 0
-5479 4127 4130 0
5479 -4127 -4129 -4132 0
5479 -4126 -4130 -4132 0
5479 -4126 -4129 -4133 0
c ((1<=(aux390 + aux391 + aux392))=tv=SATLiteral(5480))
-5480 -4126 -4129 -4132 0
5480 4132 0
5480 4129 0
5480 4130 0
5480 4126 0
5480 4126 4129 0
5480 4126 4130 0
5480 4127 0
5480 4127 4129 0
5480 4127 4130 0
c (((aux393 + SATLiteral(355) + SATLiteral(102))<=1)=tv=SATLiteral(5481))
-5481 4136 0
-5481 -102 4135 0
-5481 -355 4135 0
-5481 -355 -102 0
5481 102 -4135 0
5481 355 -4135 0
5481 355 102 -4136 0
c ((1<=(aux393 + SATLiteral(355) + SATLiteral(102)))=tv=SATLiteral(5482))
-5482 355 102 -4135 0
5482 4135 0
5482 -102 0
5482 -355 0
5482 -355 -102 0
c (((aux394 + SATLiteral(196) + SATLiteral(436))<=1)=tv=SATLiteral(5483))
-5483 4139 0
-5483 -436 4138 0
-5483 -196 4138 0
-5483 -196 -436 0
5483 436 -4138 0
5483 196 -4138 0
5483 196 436 -4139 0
c ((1<=(aux394 + SATLiteral(196) + SATLiteral(436)))=tv=SATLiteral(5484))
-5484 196 436 -4138 0
5484 4138 0
5484 -436 0
5484 -196 0
5484 -196 -436 0
c (((aux395 + aux396 + aux398)<=1)=tv=SATLiteral(5485))
-5485 4151 0
-5485 4144 4150 0
-5485 4145 0
-5485 4141 4150 0
-5485 4141 4144 0
-5485 4141 4145 0
-5485 4142 0
-5485 4142 4144 0
-5485 4142 4145 0
5485 -4142 -4144 -4150 0
5485 -4141 -4145 -4150 0
5485 -4141 -4144 -4151 0
c ((1<=(aux395 + aux396 + aux398))=tv=SATLiteral(5486))
-5486 -4141 -4144 -4150 0
5486 4150 0
5486 4144 0
5486 4145 0
5486 4141 0
5486 4141 4144 0
5486 4141 4145 0
5486 4142 0
5486 4142 4144 0
5486 4142 4145 0
c (((aux399 + aux400 + SATLiteral(198))<=1)=tv=SATLiteral(5487))
-5487 4159 0
-5487 4155 4158 0
-5487 4156 0
-5487 -198 4158 0
-5487 -198 4155 0
-5487 -198 4156 0
5487 -4155 -4158 0
5487 198 -4156 -4158 0
5487 198 -4155 -4159 0
c ((1<=(aux399 + aux400 + SATLiteral(198)))=tv=SATLiteral(5488))
-5488 198 -4155 -4158 0
5488 4158 0
5488 4155 0
5488 4156 0
5488 -198 0
5488 -198 4155 0
5488 -198 4156 0
c (((SATLiteral(359) + SATLiteral(439))<=1)=tv=SATLiteral(5489))
-5489 -359 -439 0
5489 439 0
5489 359 0
c ((1<=(SATLiteral(359) + SATLiteral(439)))=tv=SATLiteral(5490))
-5490 359 439 0
5490 -439 0
5490 -359 0
c (((aux401 + SATLiteral(104) + SATLiteral(27))<=1)=tv=SATLiteral(5491))
-5491 4162 0
-5491 -27 4161 0
-5491 -104 4161 0
-5491 -104 -27 0
5491 27 -4161 0
5491 104 -4161 0
5491 104 27 -4162 0
c ((1<=(aux401 + SATLiteral(104) + SATLiteral(27)))=tv=SATLiteral(5492))
-5492 104 27 -4161 0
5492 4161 0
5492 -27 0
5492 -104 0
5492 -104 -27 0
c (((aux402 + aux403 + aux405)<=1)=tv=SATLiteral(5493))
-5493 4174 0
-5493 4167 4173 0
-5493 4168 0
-5493 4164 4173 0
-5493 4164 4167 0
-5493 4164 4168 0
-5493 4165 0
-5493 4165 4167 0
-5493 4165 4168 0
5493 -4165 -4167 -4173 0
5493 -4164 -4168 -4173 0
5493 -4164 -4167 -4174 0
c ((1<=(aux402 + aux403 + aux405))=tv=SATLiteral(5494))
-5494 -4164 -4167 -4173 0
5494 4173 0
5494 4167 0
5494 4168 0
5494 4164 0
5494 4164 4167 0
5494 4164 4168 0
5494 4165 0
5494 4165 4167 0
5494 4165 4168 0
c (((aux406 + aux407 + aux409)<=1)=tv=SATLiteral(5495))
-5495 4188 0
-5495 4181 4187 0
-5495 4182 0
-5495 4178 4187 0
-5495 4178 4181 0
-5495 4178 4182 0
-5495 4179 0
-5495 4179 4181 0
-5495 4179 4182 0
5495 -4179 -4181 -4187 0
5495 -4178 -4182 -4187 0
5495 -4178 -4181 -4188 0
c ((1<=(aux406 + aux407 + aux409))=tv=SATLiteral(5496))
-5496 -4178 -4181 -4187 0
5496 4187 0
5496 4181 0
5496 4182 0
5496 4178 0
5496 4178 4181 0
5496 4178 4182 0
5496 4179 0
5496 4179 4181 0
5496 4179 4182 0
c (((aux410 + aux411 + aux413)<=1)=tv=SATLiteral(5497))
-5497 4202 0
-5497 4195 4201 0
-5497 4196 0
-5497 4192 4201 0
-5497 4192 4195 0
-5497 4192 4196 0
-5497 4193 0
-5497 4193 4195 0
-5497 4193 4196 0
5497 -4193 -4195 -4201 0
5497 -4192 -4196 -4201 0
5497 -4192 -4195 -4202 0
c ((1<=(aux410 + aux411 + aux413))=tv=SATLiteral(5498))
-5498 -4192 -4195 -4201 0
5498 4201 0
5498 4195 0
5498 4196 0
5498 4192 0
5498 4192 4195 0
5498 4192 4196 0
5498 4193 0
5498 4193 4195 0
5498 4193 4196 0
c (((aux414 + aux415 + SATLiteral(203))<=1)=tv=SATLiteral(5499))
-5499 4210 0
-5499 4206 4209 0
-5499 4207 0
-5499 -203 4209 0
-5499 -203 4206 0
-5499 -203 4207 0
5499 -4206 -4209 0
5499 203 -4207 -4209 0
5499 203 -4206 -4210 0
c ((1<=(aux414 + aux415 + SATLiteral(203)))=tv=SATLiteral(5500))
-5500 203 -4206 -4209 0
5500 4209 0
5500 4206 0
5500 4207 0
5500 -203 0
5500 -203 4206 0
5500 -203 4207 0
c (((SATLiteral(204) + SATLiteral(109) + SATLiteral(32))<=1)=tv=SATLiteral(5501))
-5501 -109 -32 0
-5501 -204 -32 0
-5501 -204 -109 0
5501 109 32 0
5501 204 32 0
5501 204 109 0
c ((1<=(SATLiteral(204) + SATLiteral(109) + SATLiteral(32)))=tv=SATLiteral(5502))
-5502 204 109 32 0
5502 -32 0
5502 -109 0
5502 -204 0
5502 -204 -109 0
c (((aux416 + aux417 + aux419)<=1)=tv=SATLiteral(5503))
-5503 4222 0
-5503 4215 4221 0
-5503 4216 0
-5503 4212 4221 0
-5503 4212 4215 0
-5503 4212 4216 0
-5503 4213 0
-5503 4213 4215 0
-5503 4213 4216 0
5503 -4213 -4215 -4221 0
5503 -4212 -4216 -4221 0
5503 -4212 -4215 -4222 0
c ((1<=(aux416 + aux417 + aux419))=tv=SATLiteral(5504))
-5504 -4212 -4215 -4221 0
5504 4221 0
5504 4215 0
5504 4216 0
5504 4212 0
5504 4212 4215 0
5504 4212 4216 0
5504 4213 0
5504 4213 4215 0
5504 4213 4216 0
c (((SATLiteral(488) + SATLiteral(365) + SATLiteral(444))<=1)=tv=SATLiteral(5505))
-5505 -365 -444 0
-5505 -488 -444 0
-5505 -488 -365 0
5505 365 444 0
5505 488 444 0
5505 488 365 0
c ((1<=(SATLiteral(488) + SATLiteral(365) + SATLiteral(444)))=tv=SATLiteral(5506))
-5506 488 365 444 0
5506 -444 0
5506 -365 0
5506 -488 0
5506 -488 -365 0
c (((aux420 + aux421 + aux423)<=1)=tv=SATLiteral(5507))
-5507 4236 0
-5507 4229 4235 0
-5507 4230 0
-5507 4226 4235 0
-5507 4226 4229 0
-5507 4226 4230 0
-5507 4227 0
-5507 4227 4229 0
-5507 4227 4230 0
5507 -4227 -4229 -4235 0
5507 -4226 -4230 -4235 0
5507 -4226 -4229 -4236 0
c ((1<=(aux420 + aux421 + aux423))=tv=SATLiteral(5508))
-5508 -4226 -4229 -4235 0
5508 4235 0
5508 4229 0
5508 4230 0
5508 4226 0
5508 4226 4229 0
5508 4226 4230 0
5508 4227 0
5508 4227 4229 0
5508 4227 4230 0
c (((aux424 + aux425 + SATLiteral(112))<=1)=tv=SATLiteral(5509))
-5509 4244 0
-5509 4240 4243 0
-5509 4241 0
-5509 -112 4243 0
-5509 -112 4240 0
-5509 -112 4241 0
5509 -4240 -4243 0
5509 112 -4241 -4243 0
5509 112 -4240 -4244 0
c ((1<=(aux424 + aux425 + SATLiteral(112)))=tv=SATLiteral(5510))
-5510 112 -4240 -4243 0
5510 4243 0
5510 4240 0
5510 4241 0
5510 -112 0
5510 -112 4240 0
5510 -112 4241 0
c (((aux426 + aux427 + SATLiteral(207))<=1)=tv=SATLiteral(5511))
-5511 4250 0
-5511 4246 4249 0
-5511 4247 0
-5511 -207 4249 0
-5511 -207 4246 0
-5511 -207 4247 0
5511 -4246 -4249 0
5511 207 -4247 -4249 0
5511 207 -4246 -4250 0
c ((1<=(aux426 + aux427 + SATLiteral(207)))=tv=SATLiteral(5512))
-5512 207 -4246 -4249 0
5512 4249 0
5512 4246 0
5512 4247 0
5512 -207 0
5512 -207 4246 0
5512 -207 4247 0
c (((SATLiteral(16) + SATLiteral(26) + SATLiteral(31))<=1)=tv=SATLiteral(5513))
-5513 -26 -31 0
-5513 -16 -31 0
-5513 -16 -26 0
5513 26 31 0
5513 16 31 0
5513 16 26 0
c ((1<=(SATLiteral(16) + SATLiteral(26) + SATLiteral(31)))=tv=SATLiteral(5514))
-5514 16 26 31 0
5514 -31 0
5514 -26 0
5514 -16 0
5514 -16 -26 0
c (((aux428 + SATLiteral(22) + SATLiteral(27))<=1)=tv=SATLiteral(5515))
-5515 4253 0
-5515 -27 4252 0
-5515 -22 4252 0
-5515 -22 -27 0
5515 27 -4252 0
5515 22 -4252 0
5515 22 27 -4253 0
c ((1<=(aux428 + SATLiteral(22) + SATLiteral(27)))=tv=SATLiteral(5516))
-5516 22 27 -4252 0
5516 4252 0
5516 -27 0
5516 -22 0
5516 -22 -27 0
c (((aux429 + aux430 + aux432)<=1)=tv=SATLiteral(5517))
-5517 4265 0
-5517 4258 4264 0
-5517 4259 0
-5517 4255 4264 0
-5517 4255 4258 0
-5517 4255 4259 0
-5517 4256 0
-5517 4256 4258 0
-5517 4256 4259 0
5517 -4256 -4258 -4264 0
5517 -4255 -4259 -4264 0
5517 -4255 -4258 -4265 0
c ((1<=(aux429 + aux430 + aux432))=tv=SATLiteral(5518))
-5518 -4255 -4258 -4264 0
5518 4264 0
5518 4258 0
5518 4259 0
5518 4255 0
5518 4255 4258 0
5518 4255 4259 0
5518 4256 0
5518 4256 4258 0
5518 4256 4259 0
c (((aux433 + aux434 + SATLiteral(11))<=1)=tv=SATLiteral(5519))
-5519 4273 0
-5519 4269 4272 0
-5519 4270 0
-5519 -11 4272 0
-5519 -11 4269 0
-5519 -11 4270 0
5519 -4269 -4272 0
5519 11 -4270 -4272 0
5519 11 -4269 -4273 0
c ((1<=(aux433 + aux434 + SATLiteral(11)))=tv=SATLiteral(5520))
-5520 11 -4269 -4272 0
5520 4272 0
5520 4269 0
5520 4270 0
5520 -11 0
5520 -11 4269 0
5520 -11 4270 0
c (((aux435 + aux436 + aux437)<=1)=tv=SATLiteral(5521))
-5521 4282 0
-5521 4278 4281 0
-5521 4279 0
-5521 4275 4281 0
-5521 4275 4278 0
-5521 4275 4279 0
-5521 4276 0
-5521 4276 4278 0
-5521 4276 4279 0
5521 -4276 -4278 -4281 0
5521 -4275 -4279 -4281 0
5521 -4275 -4278 -4282 0
c ((1<=(aux435 + aux436 + aux437))=tv=SATLiteral(5522))
-5522 -4275 -4278 -4281 0
5522 4281 0
5522 4278 0
5522 4279 0
5522 4275 0
5522 4275 4278 0
5522 4275 4279 0
5522 4276 0
5522 4276 4278 0
5522 4276 4279 0
c (((aux438 + SATLiteral(13) + SATLiteral(21))<=1)=tv=SATLiteral(5523))
-5523 4285 0
-5523 -21 4284 0
-5523 -13 4284 0
-5523 -13 -21 0
5523 21 -4284 0
5523 13 -4284 0
5523 13 21 -4285 0
c ((1<=(aux438 + SATLiteral(13) + SATLiteral(21)))=tv=SATLiteral(5524))
-5524 13 21 -4284 0
5524 4284 0
5524 -21 0
5524 -13 0
5524 -13 -21 0
c (((aux439 + SATLiteral(14) + SATLiteral(30))<=1)=tv=SATLiteral(5525))
-5525 4288 0
-5525 -30 4287 0
-5525 -14 4287 0
-5525 -14 -30 0
5525 30 -4287 0
5525 14 -4287 0
5525 14 30 -4288 0
c ((1<=(aux439 + SATLiteral(14) + SATLiteral(30)))=tv=SATLiteral(5526))
-5526 14 30 -4287 0
5526 4287 0
5526 -30 0
5526 -14 0
5526 -14 -30 0
c (((SATLiteral(-38) + SATLiteral(-39))<=1)=tv=SATLiteral(5527))
-5527 38 39 0
5527 -39 0
5527 -38 0
c ((1<=(SATLiteral(-38) + SATLiteral(-39)))=tv=SATLiteral(5528))
-5528 -38 -39 0
5528 39 0
5528 38 0
c (((SATLiteral(38) + SATLiteral(39))<=1)=tv=SATLiteral(5529))
-5529 -38 -39 0
5529 39 0
5529 38 0
c ((1<=(SATLiteral(38) + SATLiteral(39)))=tv=SATLiteral(5530))
-5530 38 39 0
5530 -39 0
5530 -38 0
c (((SATLiteral(41) + SATLiteral(44) + SATLiteral(47))<=1)=tv=SATLiteral(5531))
-5531 -44 -47 0
-5531 -41 -47 0
-5531 -41 -44 0
5531 44 47 0
5531 41 47 0
5531 41 44 0
c ((1<=(SATLiteral(41) + SATLiteral(44) + SATLiteral(47)))=tv=SATLiteral(5532))
-5532 41 44 47 0
5532 -47 0
5532 -44 0
5532 -41 0
5532 -41 -44 0
c (((SATLiteral(42) + SATLiteral(45) + SATLiteral(48))<=1)=tv=SATLiteral(5533))
-5533 -45 -48 0
-5533 -42 -48 0
-5533 -42 -45 0
5533 45 48 0
5533 42 48 0
5533 42 45 0
c ((1<=(SATLiteral(42) + SATLiteral(45) + SATLiteral(48)))=tv=SATLiteral(5534))
-5534 42 45 48 0
5534 -48 0
5534 -45 0
5534 -42 0
5534 -42 -45 0
c (((SATLiteral(43) + SATLiteral(46) + SATLiteral(49))<=1)=tv=SATLiteral(5535))
-5535 -46 -49 0
-5535 -43 -49 0
-5535 -43 -46 0
5535 46 49 0
5535 43 49 0
5535 43 46 0
c ((1<=(SATLiteral(43) + SATLiteral(46) + SATLiteral(49)))=tv=SATLiteral(5536))
-5536 43 46 49 0
5536 -49 0
5536 -46 0
5536 -43 0
5536 -43 -46 0
c (((aux440 + SATLiteral(87) + SATLiteral(103))<=1)=tv=SATLiteral(5537))
-5537 4291 0
-5537 -103 4290 0
-5537 -87 4290 0
-5537 -87 -103 0
5537 103 -4290 0
5537 87 -4290 0
5537 87 103 -4291 0
c ((1<=(aux440 + SATLiteral(87) + SATLiteral(103)))=tv=SATLiteral(5538))
-5538 87 103 -4290 0
5538 4290 0
5538 -103 0
5538 -87 0
5538 -87 -103 0
c (((SATLiteral(52) + SATLiteral(58) + SATLiteral(64))<=1)=tv=SATLiteral(5539))
-5539 -58 -64 0
-5539 -52 -64 0
-5539 -52 -58 0
5539 58 64 0
5539 52 64 0
5539 52 58 0
c ((1<=(SATLiteral(52) + SATLiteral(58) + SATLiteral(64)))=tv=SATLiteral(5540))
-5540 52 58 64 0
5540 -64 0
5540 -58 0
5540 -52 0
5540 -52 -58 0
c (((SATLiteral(75) + SATLiteral(88))<=1)=tv=SATLiteral(5541))
-5541 -75 -88 0
5541 88 0
5541 75 0
c ((1<=(SATLiteral(75) + SATLiteral(88)))=tv=SATLiteral(5542))
-5542 75 88 0
5542 -88 0
5542 -75 0
c (((aux441 + aux442 + SATLiteral(89))<=1)=tv=SATLiteral(5543))
-5543 4297 0
-5543 4293 4296 0
-5543 4294 0
-5543 -89 4296 0
-5543 -89 4293 0
-5543 -89 4294 0
5543 -4293 -4296 0
5543 89 -4294 -4296 0
5543 89 -4293 -4297 0
c ((1<=(aux441 + aux442 + SATLiteral(89)))=tv=SATLiteral(5544))
-5544 89 -4293 -4296 0
5544 4296 0
5544 4293 0
5544 4294 0
5544 -89 0
5544 -89 4293 0
5544 -89 4294 0
c (((aux444 + aux445 + aux447)<=1)=tv=SATLiteral(5545))
-5545 4312 0
-5545 4305 4311 0
-5545 4306 0
-5545 4302 4311 0
-5545 4302 4305 0
-5545 4302 4306 0
-5545 4303 0
-5545 4303 4305 0
-5545 4303 4306 0
5545 -4303 -4305 -4311 0
5545 -4302 -4306 -4311 0
5545 -4302 -4305 -4312 0
c ((1<=(aux444 + aux445 + aux447))=tv=SATLiteral(5546))
-5546 -4302 -4305 -4311 0
5546 4311 0
5546 4305 0
5546 4306 0
5546 4302 0
5546 4302 4305 0
5546 4302 4306 0
5546 4303 0
5546 4303 4305 0
5546 4303 4306 0
c (((aux448 + aux449 + aux450)<=1)=tv=SATLiteral(5547))
-5547 4325 0
-5547 4321 4324 0
-5547 4322 0
-5547 4318 4324 0
-5547 4318 4321 0
-5547 4318 4322 0
-5547 4319 0
-5547 4319 4321 0
-5547 4319 4322 0
5547 -4319 -4321 -4324 0
5547 -4318 -4322 -4324 0
5547 -4318 -4321 -4325 0
c ((1<=(aux448 + aux449 + aux450))=tv=SATLiteral(5548))
-5548 -4318 -4321 -4324 0
5548 4324 0
5548 4321 0
5548 4322 0
5548 4318 0
5548 4318 4321 0
5548 4318 4322 0
5548 4319 0
5548 4319 4321 0
5548 4319 4322 0
c (((aux452 + aux455 + aux456)<=1)=tv=SATLiteral(5549))
-5549 4345 0
-5549 4339 4344 0
-5549 4340 0
-5549 4342 0
-5549 4330 4344 0
-5549 4330 4339 0
-5549 4330 4340 0
-5549 4330 4342 0
-5549 4331 0
-5549 4331 4339 0
-5549 4331 4340 0
-5549 4331 4342 0
5549 -4331 -4339 -4344 0
5549 -4330 -4340 -4344 0
5549 -4330 -4339 -4345 0
c ((1<=(aux452 + aux455 + aux456))=tv=SATLiteral(5550))
-5550 -4330 -4339 -4344 0
5550 4344 0
5550 4339 0
5550 4340 0
5550 4342 0
5550 4330 0
5550 4330 4339 0
5550 4330 4340 0
5550 4330 4342 0
5550 4331 0
5550 4331 4339 0
5550 4331 4340 0
5550 4331 4342 0
c (((aux458 + aux459 + aux461)<=1)=tv=SATLiteral(5551))
-5551 4364 0
-5551 4357 4363 0
-5551 4358 0
-5551 4354 4363 0
-5551 4354 4357 0
-5551 4354 4358 0
-5551 4355 0
-5551 4355 4357 0
-5551 4355 4358 0
5551 -4355 -4357 -4363 0
5551 -4354 -4358 -4363 0
5551 -4354 -4357 -4364 0
c ((1<=(aux458 + aux459 + aux461))=tv=SATLiteral(5552))
-5552 -4354 -4357 -4363 0
5552 4363 0
5552 4357 0
5552 4358 0
5552 4354 0
5552 4354 4357 0
5552 4354 4358 0
5552 4355 0
5552 4355 4357 0
5552 4355 4358 0
c (((aux462 + aux463 + SATLiteral(69))<=1)=tv=SATLiteral(5553))
-5553 4374 0
-5553 4370 4373 0
-5553 4371 0
-5553 -69 4373 0
-5553 -69 4370 0
-5553 -69 4371 0
5553 -4370 -4373 0
5553 69 -4371 -4373 0
5553 69 -4370 -4374 0
c ((1<=(aux462 + aux463 + SATLiteral(69)))=tv=SATLiteral(5554))
-5554 69 -4370 -4373 0
5554 4373 0
5554 4370 0
5554 4371 0
5554 -69 0
5554 -69 4370 0
5554 -69 4371 0
c (((SATLiteral(115) + SATLiteral(118))<=1)=tv=SATLiteral(5555))
-5555 -115 -118 0
5555 118 0
5555 115 0
c ((1<=(SATLiteral(115) + SATLiteral(118)))=tv=SATLiteral(5556))
-5556 115 118 0
5556 -118 0
5556 -115 0
c (((SATLiteral(119) + SATLiteral(122) + aux464)<=1)=tv=SATLiteral(5557))
-5557 4377 0
-5557 -122 4376 0
-5557 -119 4376 0
-5557 -119 -122 0
5557 122 -4376 0
5557 119 -4376 0
5557 119 122 -4377 0
c ((1<=(SATLiteral(119) + SATLiteral(122) + aux464))=tv=SATLiteral(5558))
-5558 119 122 -4376 0
5558 4376 0
5558 -122 0
5558 -119 0
5558 -119 -122 0
c (((SATLiteral(120) + SATLiteral(123) + aux465)<=1)=tv=SATLiteral(5559))
-5559 4380 0
-5559 -123 4379 0
-5559 -120 4379 0
-5559 -120 -123 0
5559 123 -4379 0
5559 120 -4379 0
5559 120 123 -4380 0
c ((1<=(SATLiteral(120) + SATLiteral(123) + aux465))=tv=SATLiteral(5560))
-5560 120 123 -4379 0
5560 4379 0
5560 -123 0
5560 -120 0
5560 -120 -123 0
c (((SATLiteral(124) + SATLiteral(127))<=1)=tv=SATLiteral(5561))
-5561 -124 -127 0
5561 127 0
5561 124 0
c ((1<=(SATLiteral(124) + SATLiteral(127)))=tv=SATLiteral(5562))
-5562 124 127 0
5562 -127 0
5562 -124 0
c (((aux466 + SATLiteral(180) + SATLiteral(197))<=1)=tv=SATLiteral(5563))
-5563 4383 0
-5563 -197 4382 0
-5563 -180 4382 0
-5563 -180 -197 0
5563 197 -4382 0
5563 180 -4382 0
5563 180 197 -4383 0
c ((1<=(aux466 + SATLiteral(180) + SATLiteral(197)))=tv=SATLiteral(5564))
-5564 180 197 -4382 0
5564 4382 0
5564 -197 0
5564 -180 0
5564 -180 -197 0
c (((aux467 + aux468 + aux470)<=1)=tv=SATLiteral(5565))
-5565 4395 0
-5565 4388 4394 0
-5565 4389 0
-5565 4385 4394 0
-5565 4385 4388 0
-5565 4385 4389 0
-5565 4386 0
-5565 4386 4388 0
-5565 4386 4389 0
5565 -4386 -4388 -4394 0
5565 -4385 -4389 -4394 0
5565 -4385 -4388 -4395 0
c ((1<=(aux467 + aux468 + aux470))=tv=SATLiteral(5566))
-5566 -4385 -4388 -4394 0
5566 4394 0
5566 4388 0
5566 4389 0
5566 4385 0
5566 4385 4388 0
5566 4385 4389 0
5566 4386 0
5566 4386 4388 0
5566 4386 4389 0
c (((aux471 + SATLiteral(151) + SATLiteral(169))<=1)=tv=SATLiteral(5567))
-5567 4400 0
-5567 -169 4399 0
-5567 -151 4399 0
-5567 -151 -169 0
5567 169 -4399 0
5567 151 -4399 0
5567 151 169 -4400 0
c ((1<=(aux471 + SATLiteral(151) + SATLiteral(169)))=tv=SATLiteral(5568))
-5568 151 169 -4399 0
5568 4399 0
5568 -169 0
5568 -151 0
5568 -151 -169 0
c (((aux472 + aux473 + SATLiteral(183))<=1)=tv=SATLiteral(5569))
-5569 4406 0
-5569 4402 4405 0
-5569 4403 0
-5569 -183 4405 0
-5569 -183 4402 0
-5569 -183 4403 0
5569 -4402 -4405 0
5569 183 -4403 -4405 0
5569 183 -4402 -4406 0
c ((1<=(aux472 + aux473 + SATLiteral(183)))=tv=SATLiteral(5570))
-5570 183 -4402 -4405 0
5570 4405 0
5570 4402 0
5570 4403 0
5570 -183 0
5570 -183 4402 0
5570 -183 4403 0
c (((aux474 + aux475 + aux476)<=1)=tv=SATLiteral(5571))
-5571 4415 0
-5571 4411 4414 0
-5571 4412 0
-5571 4408 4414 0
-5571 4408 4411 0
-5571 4408 4412 0
-5571 4409 0
-5571 4409 4411 0
-5571 4409 4412 0
5571 -4409 -4411 -4414 0
5571 -4408 -4412 -4414 0
5571 -4408 -4411 -4415 0
c ((1<=(aux474 + aux475 + aux476))=tv=SATLiteral(5572))
-5572 -4408 -4411 -4414 0
5572 4414 0
5572 4411 0
5572 4412 0
5572 4408 0
5572 4408 4411 0
5572 4408 4412 0
5572 4409 0
5572 4409 4411 0
5572 4409 4412 0
c (((aux477 + aux478 + aux479)<=1)=tv=SATLiteral(5573))
-5573 4424 0
-5573 4420 4423 0
-5573 4421 0
-5573 4417 4423 0
-5573 4417 4420 0
-5573 4417 4421 0
-5573 4418 0
-5573 4418 4420 0
-5573 4418 4421 0
5573 -4418 -4420 -4423 0
5573 -4417 -4421 -4423 0
5573 -4417 -4420 -4424 0
c ((1<=(aux477 + aux478 + aux479))=tv=SATLiteral(5574))
-5574 -4417 -4420 -4423 0
5574 4423 0
5574 4420 0
5574 4421 0
5574 4417 0
5574 4417 4420 0
5574 4417 4421 0
5574 4418 0
5574 4418 4420 0
5574 4418 4421 0
c (((aux481 + aux484 + aux485)<=1)=tv=SATLiteral(5575))
-5575 4444 0
-5575 4438 4443 0
-5575 4439 0
-5575 4441 0
-5575 4429 4443 0
-5575 4429 4438 0
-5575 4429 4439 0
-5575 4429 4441 0
-5575 4430 0
-5575 4430 4438 0
-5575 4430 4439 0
-5575 4430 4441 0
5575 -4430 -4438 -4443 0
5575 -4429 -4439 -4443 0
5575 -4429 -4438 -4444 0
c ((1<=(aux481 + aux484 + aux485))=tv=SATLiteral(5576))
-5576 -4429 -4438 -4443 0
5576 4443 0
5576 4438 0
5576 4439 0
5576 4441 0
5576 4429 0
5576 4429 4438 0
5576 4429 4439 0
5576 4429 4441 0
5576 4430 0
5576 4430 4438 0
5576 4430 4439 0
5576 4430 4441 0
c (((aux486 + aux487 + aux488)<=1)=tv=SATLiteral(5577))
-5577 4457 0
-5577 4453 4456 0
-5577 4454 0
-5577 4450 4456 0
-5577 4450 4453 0
-5577 4450 4454 0
-5577 4451 0
-5577 4451 4453 0
-5577 4451 4454 0
5577 -4451 -4453 -4456 0
5577 -4450 -4454 -4456 0
5577 -4450 -4453 -4457 0
c ((1<=(aux486 + aux487 + aux488))=tv=SATLiteral(5578))
-5578 -4450 -4453 -4456 0
5578 4456 0
5578 4453 0
5578 4454 0
5578 4450 0
5578 4450 4453 0
5578 4450 4454 0
5578 4451 0
5578 4451 4453 0
5578 4451 4454 0
c (((aux489 + aux490 + aux491)<=1)=tv=SATLiteral(5579))
-5579 4466 0
-5579 4462 4465 0
-5579 4463 0
-5579 4459 4465 0
-5579 4459 4462 0
-5579 4459 4463 0
-5579 4460 0
-5579 4460 4462 0
-5579 4460 4463 0
5579 -4460 -4462 -4465 0
5579 -4459 -4463 -4465 0
5579 -4459 -4462 -4466 0
c ((1<=(aux489 + aux490 + aux491))=tv=SATLiteral(5580))
-5580 -4459 -4462 -4465 0
5580 4465 0
5580 4462 0
5580 4463 0
5580 4459 0
5580 4459 4462 0
5580 4459 4463 0
5580 4460 0
5580 4460 4462 0
5580 4460 4463 0
c (((aux492 + SATLiteral(255) + SATLiteral(268))<=1)=tv=SATLiteral(5581))
-5581 4469 0
-5581 -268 4468 0
-5581 -255 4468 0
-5581 -255 -268 0
5581 268 -4468 0
5581 255 -4468 0
5581 255 268 -4469 0
c ((1<=(aux492 + SATLiteral(255) + SATLiteral(268)))=tv=SATLiteral(5582))
-5582 255 268 -4468 0
5582 4468 0
5582 -268 0
5582 -255 0
5582 -255 -268 0
c (((aux493 + aux494 + aux495)<=1)=tv=SATLiteral(5583))
-5583 4478 0
-5583 4474 4477 0
-5583 4475 0
-5583 4471 4477 0
-5583 4471 4474 0
-5583 4471 4475 0
-5583 4472 0
-5583 4472 4474 0
-5583 4472 4475 0
5583 -4472 -4474 -4477 0
5583 -4471 -4475 -4477 0
5583 -4471 -4474 -4478 0
c ((1<=(aux493 + aux494 + aux495))=tv=SATLiteral(5584))
-5584 -4471 -4474 -4477 0
5584 4477 0
5584 4474 0
5584 4475 0
5584 4471 0
5584 4471 4474 0
5584 4471 4475 0
5584 4472 0
5584 4472 4474 0
5584 4472 4475 0
c (((aux496 + SATLiteral(226) + SATLiteral(244))<=1)=tv=SATLiteral(5585))
-5585 4481 0
-5585 -244 4480 0
-5585 -226 4480 0
-5585 -226 -244 0
5585 244 -4480 0
5585 226 -4480 0
5585 226 244 -4481 0
c ((1<=(aux496 + SATLiteral(226) + SATLiteral(244)))=tv=SATLiteral(5586))
-5586 226 244 -4480 0
5586 4480 0
5586 -244 0
5586 -226 0
5586 -226 -244 0
c (((aux497 + SATLiteral(245) + SATLiteral(258))<=1)=tv=SATLiteral(5587))
-5587 4484 0
-5587 -258 4483 0
-5587 -245 4483 0
-5587 -245 -258 0
5587 258 -4483 0
5587 245 -4483 0
5587 245 258 -4484 0
c ((1<=(aux497 + SATLiteral(245) + SATLiteral(258)))=tv=SATLiteral(5588))
-5588 245 258 -4483 0
5588 4483 0
5588 -258 0
5588 -245 0
5588 -245 -258 0
c (((aux498 + aux499 + aux500)<=1)=tv=SATLiteral(5589))
-5589 4493 0
-5589 4489 4492 0
-5589 4490 0
-5589 4486 4492 0
-5589 4486 4489 0
-5589 4486 4490 0
-5589 4487 0
-5589 4487 4489 0
-5589 4487 4490 0
5589 -4487 -4489 -4492 0
5589 -4486 -4490 -4492 0
5589 -4486 -4489 -4493 0
c ((1<=(aux498 + aux499 + aux500))=tv=SATLiteral(5590))
-5590 -4486 -4489 -4492 0
5590 4492 0
5590 4489 0
5590 4490 0
5590 4486 0
5590 4486 4489 0
5590 4486 4490 0
5590 4487 0
5590 4487 4489 0
5590 4487 4490 0
c (((aux501 + aux502 + aux503)<=1)=tv=SATLiteral(5591))
-5591 4502 0
-5591 4498 4501 0
-5591 4499 0
-5591 4495 4501 0
-5591 4495 4498 0
-5591 4495 4499 0
-5591 4496 0
-5591 4496 4498 0
-5591 4496 4499 0
5591 -4496 -4498 -4501 0
5591 -4495 -4499 -4501 0
5591 -4495 -4498 -4502 0
c ((1<=(aux501 + aux502 + aux503))=tv=SATLiteral(5592))
-5592 -4495 -4498 -4501 0
5592 4501 0
5592 4498 0
5592 4499 0
5592 4495 0
5592 4495 4498 0
5592 4495 4499 0
5592 4496 0
5592 4496 4498 0
5592 4496 4499 0
c (((aux505 + aux508 + aux509)<=1)=tv=SATLiteral(5593))
-5593 4522 0
-5593 4516 4521 0
-5593 4517 0
-5593 4519 0
-5593 4507 4521 0
-5593 4507 4516 0
-5593 4507 4517 0
-5593 4507 4519 0
-5593 4508 0
-5593 4508 4516 0
-5593 4508 4517 0
-5593 4508 4519 0
5593 -4508 -4516 -4521 0
5593 -4507 -4517 -4521 0
5593 -4507 -4516 -4522 0
c ((1<=(aux505 + aux508 + aux509))=tv=SATLiteral(5594))
-5594 -4507 -4516 -4521 0
5594 4521 0
5594 4516 0
5594 4517 0
5594 4519 0
5594 4507 0
5594 4507 4516 0
5594 4507 4517 0
5594 4507 4519 0
5594 4508 0
5594 4508 4516 0
5594 4508 4517 0
5594 4508 4519 0
c (((aux510 + aux511 + aux512)<=1)=tv=SATLiteral(5595))
-5595 4535 0
-5595 4531 4534 0
-5595 4532 0
-5595 4528 4534 0
-5595 4528 4531 0
-5595 4528 4532 0
-5595 4529 0
-5595 4529 4531 0
-5595 4529 4532 0
5595 -4529 -4531 -4534 0
5595 -4528 -4532 -4534 0
5595 -4528 -4531 -4535 0
c ((1<=(aux510 + aux511 + aux512))=tv=SATLiteral(5596))
-5596 -4528 -4531 -4534 0
5596 4534 0
5596 4531 0
5596 4532 0
5596 4528 0
5596 4528 4531 0
5596 4528 4532 0
5596 4529 0
5596 4529 4531 0
5596 4529 4532 0
c (((aux513 + SATLiteral(231) + SATLiteral(272))<=1)=tv=SATLiteral(5597))
-5597 4538 0
-5597 -272 4537 0
-5597 -231 4537 0
-5597 -231 -272 0
5597 272 -4537 0
5597 231 -4537 0
5597 231 272 -4538 0
c ((1<=(aux513 + SATLiteral(231) + SATLiteral(272)))=tv=SATLiteral(5598))
-5598 231 272 -4537 0
5598 4537 0
5598 -272 0
5598 -231 0
5598 -231 -272 0
c (((aux514 + aux515 + SATLiteral(351))<=1)=tv=SATLiteral(5599))
-5599 4544 0
-5599 4540 4543 0
-5599 4541 0
-5599 -351 4543 0
-5599 -351 4540 0
-5599 -351 4541 0
5599 -4540 -4543 0
5599 351 -4541 -4543 0
5599 351 -4540 -4544 0
c ((1<=(aux514 + aux515 + SATLiteral(351)))=tv=SATLiteral(5600))
-5600 351 -4540 -4543 0
5600 4543 0
5600 4540 0
5600 4541 0
5600 -351 0
5600 -351 4540 0
5600 -351 4541 0
c (((aux516 + aux517 + aux519)<=1)=tv=SATLiteral(5601))
-5601 4556 0
-5601 4549 4555 0
-5601 4550 0
-5601 4546 4555 0
-5601 4546 4549 0
-5601 4546 4550 0
-5601 4547 0
-5601 4547 4549 0
-5601 4547 4550 0
5601 -4547 -4549 -4555 0
5601 -4546 -4550 -4555 0
5601 -4546 -4549 -4556 0
c ((1<=(aux516 + aux517 + aux519))=tv=SATLiteral(5602))
-5602 -4546 -4549 -4555 0
5602 4555 0
5602 4549 0
5602 4550 0
5602 4546 0
5602 4546 4549 0
5602 4546 4550 0
5602 4547 0
5602 4547 4549 0
5602 4547 4550 0
c (((SATLiteral(294) + SATLiteral(308) + SATLiteral(359))<=1)=tv=SATLiteral(5603))
-5603 -308 -359 0
-5603 -294 -359 0
-5603 -294 -308 0
5603 308 359 0
5603 294 359 0
5603 294 308 0
c ((1<=(SATLiteral(294) + SATLiteral(308) + SATLiteral(359)))=tv=SATLiteral(5604))
-5604 294 308 359 0
5604 -359 0
5604 -308 0
5604 -294 0
5604 -294 -308 0
c (((aux520 + aux521 + SATLiteral(322))<=1)=tv=SATLiteral(5605))
-5605 4564 0
-5605 4560 4563 0
-5605 4561 0
-5605 -322 4563 0
-5605 -322 4560 0
-5605 -322 4561 0
5605 -4560 -4563 0
5605 322 -4561 -4563 0
5605 322 -4560 -4564 0
c ((1<=(aux520 + aux521 + SATLiteral(322)))=tv=SATLiteral(5606))
-5606 322 -4560 -4563 0
5606 4563 0
5606 4560 0
5606 4561 0
5606 -322 0
5606 -322 4560 0
5606 -322 4561 0
c (((aux523 + aux524 + aux526)<=1)=tv=SATLiteral(5607))
-5607 4579 0
-5607 4572 4578 0
-5607 4573 0
-5607 4569 4578 0
-5607 4569 4572 0
-5607 4569 4573 0
-5607 4570 0
-5607 4570 4572 0
-5607 4570 4573 0
5607 -4570 -4572 -4578 0
5607 -4569 -4573 -4578 0
5607 -4569 -4572 -4579 0
c ((1<=(aux523 + aux524 + aux526))=tv=SATLiteral(5608))
-5608 -4569 -4572 -4578 0
5608 4578 0
5608 4572 0
5608 4573 0
5608 4569 0
5608 4569 4572 0
5608 4569 4573 0
5608 4570 0
5608 4570 4572 0
5608 4570 4573 0
c (((aux527 + aux528 + aux530)<=1)=tv=SATLiteral(5609))
-5609 4595 0
-5609 4588 4594 0
-5609 4589 0
-5609 4585 4594 0
-5609 4585 4588 0
-5609 4585 4589 0
-5609 4586 0
-5609 4586 4588 0
-5609 4586 4589 0
5609 -4586 -4588 -4594 0
5609 -4585 -4589 -4594 0
5609 -4585 -4588 -4595 0
c ((1<=(aux527 + aux528 + aux530))=tv=SATLiteral(5610))
-5610 -4585 -4588 -4594 0
5610 4594 0
5610 4588 0
5610 4589 0
5610 4585 0
5610 4585 4588 0
5610 4585 4589 0
5610 4586 0
5610 4586 4588 0
5610 4586 4589 0
c (((aux532 + aux535 + aux536)<=1)=tv=SATLiteral(5611))
-5611 4617 0
-5611 4611 4616 0
-5611 4612 0
-5611 4614 0
-5611 4602 4616 0
-5611 4602 4611 0
-5611 4602 4612 0
-5611 4602 4614 0
-5611 4603 0
-5611 4603 4611 0
-5611 4603 4612 0
-5611 4603 4614 0
5611 -4603 -4611 -4616 0
5611 -4602 -4612 -4616 0
5611 -4602 -4611 -4617 0
c ((1<=(aux532 + aux535 + aux536))=tv=SATLiteral(5612))
-5612 -4602 -4611 -4616 0
5612 4616 0
5612 4611 0
5612 4612 0
5612 4614 0
5612 4602 0
5612 4602 4611 0
5612 4602 4612 0
5612 4602 4614 0
5612 4603 0
5612 4603 4611 0
5612 4603 4612 0
5612 4603 4614 0
c (((aux537 + aux538 + aux540)<=1)=tv=SATLiteral(5613))
-5613 4633 0
-5613 4626 4632 0
-5613 4627 0
-5613 4623 4632 0
-5613 4623 4626 0
-5613 4623 4627 0
-5613 4624 0
-5613 4624 4626 0
-5613 4624 4627 0
5613 -4624 -4626 -4632 0
5613 -4623 -4627 -4632 0
5613 -4623 -4626 -4633 0
c ((1<=(aux537 + aux538 + aux540))=tv=SATLiteral(5614))
-5614 -4623 -4626 -4632 0
5614 4632 0
5614 4626 0
5614 4627 0
5614 4623 0
5614 4623 4626 0
5614 4623 4627 0
5614 4624 0
5614 4624 4626 0
5614 4624 4627 0
c (((aux542 + aux543 + aux545)<=1)=tv=SATLiteral(5615))
-5615 4650 0
-5615 4643 4649 0
-5615 4644 0
-5615 4640 4649 0
-5615 4640 4643 0
-5615 4640 4644 0
-5615 4641 0
-5615 4641 4643 0
-5615 4641 4644 0
5615 -4641 -4643 -4649 0
5615 -4640 -4644 -4649 0
5615 -4640 -4643 -4650 0
c ((1<=(aux542 + aux543 + aux545))=tv=SATLiteral(5616))
-5616 -4640 -4643 -4649 0
5616 4649 0
5616 4643 0
5616 4644 0
5616 4640 0
5616 4640 4643 0
5616 4640 4644 0
5616 4641 0
5616 4641 4643 0
5616 4641 4644 0
c (((SATLiteral(401) + SATLiteral(431) + SATLiteral(437))<=1)=tv=SATLiteral(5617))
-5617 -431 -437 0
-5617 -401 -437 0
-5617 -401 -431 0
5617 431 437 0
5617 401 437 0
5617 401 431 0
c ((1<=(SATLiteral(401) + SATLiteral(431) + SATLiteral(437)))=tv=SATLiteral(5618))
-5618 401 431 437 0
5618 -437 0
5618 -431 0
5618 -401 0
5618 -401 -431 0
c (((aux546 + aux547 + aux548)<=1)=tv=SATLiteral(5619))
-5619 4663 0
-5619 4659 4662 0
-5619 4660 0
-5619 4656 4662 0
-5619 4656 4659 0
-5619 4656 4660 0
-5619 4657 0
-5619 4657 4659 0
-5619 4657 4660 0
5619 -4657 -4659 -4662 0
5619 -4656 -4660 -4662 0
5619 -4656 -4659 -4663 0
c ((1<=(aux546 + aux547 + aux548))=tv=SATLiteral(5620))
-5620 -4656 -4659 -4662 0
5620 4662 0
5620 4659 0
5620 4660 0
5620 4656 0
5620 4656 4659 0
5620 4656 4660 0
5620 4657 0
5620 4657 4659 0
5620 4657 4660 0
c (((SATLiteral(374) + SATLiteral(388) + SATLiteral(439))<=1)=tv=SATLiteral(5621))
-5621 -388 -439 0
-5621 -374 -439 0
-5621 -374 -388 0
5621 388 439 0
5621 374 439 0
5621 374 388 0
c ((1<=(SATLiteral(374) + SATLiteral(388) + SATLiteral(439)))=tv=SATLiteral(5622))
-5622 374 388 439 0
5622 -439 0
5622 -388 0
5622 -374 0
5622 -374 -388 0
c (((aux549 + aux550 + SATLiteral(402))<=1)=tv=SATLiteral(5623))
-5623 4669 0
-5623 4665 4668 0
-5623 4666 0
-5623 -402 4668 0
-5623 -402 4665 0
-5623 -402 4666 0
5623 -4665 -4668 0
5623 402 -4666 -4668 0
5623 402 -4665 -4669 0
c ((1<=(aux549 + aux550 + SATLiteral(402)))=tv=SATLiteral(5624))
-5624 402 -4665 -4668 0
5624 4668 0
5624 4665 0
5624 4666 0
5624 -402 0
5624 -402 4665 0
5624 -402 4666 0
c (((aux552 + aux553 + aux555)<=1)=tv=SATLiteral(5625))
-5625 4684 0
-5625 4677 4683 0
-5625 4678 0
-5625 4674 4683 0
-5625 4674 4677 0
-5625 4674 4678 0
-5625 4675 0
-5625 4675 4677 0
-5625 4675 4678 0
5625 -4675 -4677 -4683 0
5625 -4674 -4678 -4683 0
5625 -4674 -4677 -4684 0
c ((1<=(aux552 + aux553 + aux555))=tv=SATLiteral(5626))
-5626 -4674 -4677 -4683 0
5626 4683 0
5626 4677 0
5626 4678 0
5626 4674 0
5626 4674 4677 0
5626 4674 4678 0
5626 4675 0
5626 4675 4677 0
5626 4675 4678 0
c (((aux556 + aux557 + aux559)<=1)=tv=SATLiteral(5627))
-5627 4700 0
-5627 4693 4699 0
-5627 4694 0
-5627 4690 4699 0
-5627 4690 4693 0
-5627 4690 4694 0
-5627 4691 0
-5627 4691 4693 0
-5627 4691 4694 0
5627 -4691 -4693 -4699 0
5627 -4690 -4694 -4699 0
5627 -4690 -4693 -4700 0
c ((1<=(aux556 + aux557 + aux559))=tv=SATLiteral(5628))
-5628 -4690 -4693 -4699 0
5628 4699 0
5628 4693 0
5628 4694 0
5628 4690 0
5628 4690 4693 0
5628 4690 4694 0
5628 4691 0
5628 4691 4693 0
5628 4691 4694 0
c (((aux561 + aux564 + aux565)<=1)=tv=SATLiteral(5629))
-5629 4722 0
-5629 4716 4721 0
-5629 4717 0
-5629 4719 0
-5629 4707 4721 0
-5629 4707 4716 0
-5629 4707 4717 0
-5629 4707 4719 0
-5629 4708 0
-5629 4708 4716 0
-5629 4708 4717 0
-5629 4708 4719 0
5629 -4708 -4716 -4721 0
5629 -4707 -4717 -4721 0
5629 -4707 -4716 -4722 0
c ((1<=(aux561 + aux564 + aux565))=tv=SATLiteral(5630))
-5630 -4707 -4716 -4721 0
5630 4721 0
5630 4716 0
5630 4717 0
5630 4719 0
5630 4707 0
5630 4707 4716 0
5630 4707 4717 0
5630 4707 4719 0
5630 4708 0
5630 4708 4716 0
5630 4708 4717 0
5630 4708 4719 0
c (((aux566 + aux567 + aux569)<=1)=tv=SATLiteral(5631))
-5631 4738 0
-5631 4731 4737 0
-5631 4732 0
-5631 4728 4737 0
-5631 4728 4731 0
-5631 4728 4732 0
-5631 4729 0
-5631 4729 4731 0
-5631 4729 4732 0
5631 -4729 -4731 -4737 0
5631 -4728 -4732 -4737 0
5631 -4728 -4731 -4738 0
c ((1<=(aux566 + aux567 + aux569))=tv=SATLiteral(5632))
-5632 -4728 -4731 -4737 0
5632 4737 0
5632 4731 0
5632 4732 0
5632 4728 0
5632 4728 4731 0
5632 4728 4732 0
5632 4729 0
5632 4729 4731 0
5632 4729 4732 0
c (((aux570 + aux571 + aux572)<=1)=tv=SATLiteral(5633))
-5633 4749 0
-5633 4745 4748 0
-5633 4746 0
-5633 4742 4748 0
-5633 4742 4745 0
-5633 4742 4746 0
-5633 4743 0
-5633 4743 4745 0
-5633 4743 4746 0
5633 -4743 -4745 -4748 0
5633 -4742 -4746 -4748 0
5633 -4742 -4745 -4749 0
c ((1<=(aux570 + aux571 + aux572))=tv=SATLiteral(5634))
-5634 -4742 -4745 -4748 0
5634 4748 0
5634 4745 0
5634 4746 0
5634 4742 0
5634 4742 4745 0
5634 4742 4746 0
5634 4743 0
5634 4743 4745 0
5634 4743 4746 0
c (((SATLiteral(447) + SATLiteral(481) + SATLiteral(486))<=1)=tv=SATLiteral(5635))
-5635 -481 -486 0
-5635 -447 -486 0
-5635 -447 -481 0
5635 481 486 0
5635 447 486 0
5635 447 481 0
c ((1<=(SATLiteral(447) + SATLiteral(481) + SATLiteral(486)))=tv=SATLiteral(5636))
-5636 447 481 486 0
5636 -486 0
5636 -481 0
5636 -447 0
5636 -447 -481 0
c (((SATLiteral(468) + aux573 + aux574)<=1)=tv=SATLiteral(5637))
-5637 4755 0
-5637 4751 4754 0
-5637 4752 0
-5637 -468 4754 0
-5637 -468 4751 0
-5637 -468 4752 0
5637 -4751 -4754 0
5637 468 -4752 -4754 0
5637 468 -4751 -4755 0
c ((1<=(SATLiteral(468) + aux573 + aux574))=tv=SATLiteral(5638))
-5638 468 -4751 -4754 0
5638 4754 0
5638 4751 0
5638 4752 0
5638 -468 0
5638 -468 4751 0
5638 -468 4752 0
c (((aux575 + aux576 + aux578)<=1)=tv=SATLiteral(5639))
-5639 4767 0
-5639 4760 4766 0
-5639 4761 0
-5639 4757 4766 0
-5639 4757 4760 0
-5639 4757 4761 0
-5639 4758 0
-5639 4758 4760 0
-5639 4758 4761 0
5639 -4758 -4760 -4766 0
5639 -4757 -4761 -4766 0
5639 -4757 -4760 -4767 0
c ((1<=(aux575 + aux576 + aux578))=tv=SATLiteral(5640))
-5640 -4757 -4760 -4766 0
5640 4766 0
5640 4760 0
5640 4761 0
5640 4757 0
5640 4757 4760 0
5640 4757 4761 0
5640 4758 0
5640 4758 4760 0
5640 4758 4761 0
c (((aux579 + aux580 + aux581)<=1)=tv=SATLiteral(5641))
-5641 4778 0
-5641 4774 4777 0
-5641 4775 0
-5641 4771 4777 0
-5641 4771 4774 0
-5641 4771 4775 0
-5641 4772 0
-5641 4772 4774 0
-5641 4772 4775 0
5641 -4772 -4774 -4777 0
5641 -4771 -4775 -4777 0
5641 -4771 -4774 -4778 0
c ((1<=(aux579 + aux580 + aux581))=tv=SATLiteral(5642))
-5642 -4771 -4774 -4777 0
5642 4777 0
5642 4774 0
5642 4775 0
5642 4771 0
5642 4771 4774 0
5642 4771 4775 0
5642 4772 0
5642 4772 4774 0
5642 4772 4775 0
c (((aux582 + aux583 + aux584)<=1)=tv=SATLiteral(5643))
-5643 4787 0
-5643 4783 4786 0
-5643 4784 0
-5643 4780 4786 0
-5643 4780 4783 0
-5643 4780 4784 0
-5643 4781 0
-5643 4781 4783 0
-5643 4781 4784 0
5643 -4781 -4783 -4786 0
5643 -4780 -4784 -4786 0
5643 -4780 -4783 -4787 0
c ((1<=(aux582 + aux583 + aux584))=tv=SATLiteral(5644))
-5644 -4780 -4783 -4786 0
5644 4786 0
5644 4783 0
5644 4784 0
5644 4780 0
5644 4780 4783 0
5644 4780 4784 0
5644 4781 0
5644 4781 4783 0
5644 4781 4784 0
c (((SATLiteral(472) + aux585 + aux586)<=1)=tv=SATLiteral(5645))
-5645 4793 0
-5645 4789 4792 0
-5645 4790 0
-5645 -472 4792 0
-5645 -472 4789 0
-5645 -472 4790 0
5645 -4789 -4792 0
5645 472 -4790 -4792 0
5645 472 -4789 -4793 0
c ((1<=(SATLiteral(472) + aux585 + aux586))=tv=SATLiteral(5646))
-5646 472 -4789 -4792 0
5646 4792 0
5646 4789 0
5646 4790 0
5646 -472 0
5646 -472 4789 0
5646 -472 4790 0
c (((aux587 + aux588 + aux589)<=1)=tv=SATLiteral(5647))
-5647 4802 0
-5647 4798 4801 0
-5647 4799 0
-5647 4795 4801 0
-5647 4795 4798 0
-5647 4795 4799 0
-5647 4796 0
-5647 4796 4798 0
-5647 4796 4799 0
5647 -4796 -4798 -4801 0
5647 -4795 -4799 -4801 0
5647 -4795 -4798 -4802 0
c ((1<=(aux587 + aux588 + aux589))=tv=SATLiteral(5648))
-5648 -4795 -4798 -4801 0
5648 4801 0
5648 4798 0
5648 4799 0
5648 4795 0
5648 4795 4798 0
5648 4795 4799 0
5648 4796 0
5648 4796 4798 0
5648 4796 4799 0
c (((SATLiteral(-38) + SATLiteral(-39))<=1)=tv=SATLiteral(5649))
-5649 38 39 0
5649 -39 0
5649 -38 0
c ((1<=(SATLiteral(-38) + SATLiteral(-39)))=tv=SATLiteral(5650))
-5650 -38 -39 0
5650 39 0
5650 38 0
c (((SATLiteral(52) + SATLiteral(58) + SATLiteral(64))<=1)=tv=SATLiteral(5651))
-5651 -58 -64 0
-5651 -52 -64 0
-5651 -52 -58 0
5651 58 64 0
5651 52 64 0
5651 52 58 0
c ((1<=(SATLiteral(52) + SATLiteral(58) + SATLiteral(64)))=tv=SATLiteral(5652))
-5652 52 58 64 0
5652 -64 0
5652 -58 0
5652 -52 0
5652 -52 -58 0
c (((SATLiteral(38) + SATLiteral(39))<=1)=tv=SATLiteral(5653))
-5653 -38 -39 0
5653 39 0
5653 38 0
c ((1<=(SATLiteral(38) + SATLiteral(39)))=tv=SATLiteral(5654))
-5654 38 39 0
5654 -39 0
5654 -38 0
c (((aux590 + aux591 + aux592)<=1)=tv=SATLiteral(5655))
-5655 4811 0
-5655 4807 4810 0
-5655 4808 0
-5655 4804 4810 0
-5655 4804 4807 0
-5655 4804 4808 0
-5655 4805 0
-5655 4805 4807 0
-5655 4805 4808 0
5655 -4805 -4807 -4810 0
5655 -4804 -4808 -4810 0
5655 -4804 -4807 -4811 0
c ((1<=(aux590 + aux591 + aux592))=tv=SATLiteral(5656))
-5656 -4804 -4807 -4810 0
5656 4810 0
5656 4807 0
5656 4808 0
5656 4804 0
5656 4804 4807 0
5656 4804 4808 0
5656 4805 0
5656 4805 4807 0
5656 4805 4808 0
c (((aux593 + aux594 + aux595)<=1)=tv=SATLiteral(5657))
-5657 4820 0
-5657 4816 4819 0
-5657 4817 0
-5657 4813 4819 0
-5657 4813 4816 0
-5657 4813 4817 0
-5657 4814 0
-5657 4814 4816 0
-5657 4814 4817 0
5657 -4814 -4816 -4819 0
5657 -4813 -4817 -4819 0
5657 -4813 -4816 -4820 0
c ((1<=(aux593 + aux594 + aux595))=tv=SATLiteral(5658))
-5658 -4813 -4816 -4819 0
5658 4819 0
5658 4816 0
5658 4817 0
5658 4813 0
5658 4813 4816 0
5658 4813 4817 0
5658 4814 0
5658 4814 4816 0
5658 4814 4817 0
c (((aux596 + aux597 + aux598)<=1)=tv=SATLiteral(5659))
-5659 4829 0
-5659 4825 4828 0
-5659 4826 0
-5659 4822 4828 0
-5659 4822 4825 0
-5659 4822 4826 0
-5659 4823 0
-5659 4823 4825 0
-5659 4823 4826 0
5659 -4823 -4825 -4828 0
5659 -4822 -4826 -4828 0
5659 -4822 -4825 -4829 0
c ((1<=(aux596 + aux597 + aux598))=tv=SATLiteral(5660))
-5660 -4822 -4825 -4828 0
5660 4828 0
5660 4825 0
5660 4826 0
5660 4822 0
5660 4822 4825 0
5660 4822 4826 0
5660 4823 0
5660 4823 4825 0
5660 4823 4826 0
c (((aux599 + aux600 + SATLiteral(68))<=1)=tv=SATLiteral(5661))
-5661 4835 0
-5661 4831 4834 0
-5661 4832 0
-5661 -68 4834 0
-5661 -68 4831 0
-5661 -68 4832 0
5661 -4831 -4834 0
5661 68 -4832 -4834 0
5661 68 -4831 -4835 0
c ((1<=(aux599 + aux600 + SATLiteral(68)))=tv=SATLiteral(5662))
-5662 68 -4831 -4834 0
5662 4834 0
5662 4831 0
5662 4832 0
5662 -68 0
5662 -68 4831 0
5662 -68 4832 0
c (((aux601 + aux602 + SATLiteral(69))<=1)=tv=SATLiteral(5663))
-5663 4841 0
-5663 4837 4840 0
-5663 4838 0
-5663 -69 4840 0
-5663 -69 4837 0
-5663 -69 4838 0
5663 -4837 -4840 0
5663 69 -4838 -4840 0
5663 69 -4837 -4841 0
c ((1<=(aux601 + aux602 + SATLiteral(69)))=tv=SATLiteral(5664))
-5664 69 -4837 -4840 0
5664 4840 0
5664 4837 0
5664 4838 0
5664 -69 0
5664 -69 4837 0
5664 -69 4838 0
c (((SATLiteral(74) + SATLiteral(87) + SATLiteral(16))<=1)=tv=SATLiteral(5665))
-5665 -87 -16 0
-5665 -74 -16 0
-5665 -74 -87 0
5665 87 16 0
5665 74 16 0
5665 74 87 0
c ((1<=(SATLiteral(74) + SATLiteral(87) + SATLiteral(16)))=tv=SATLiteral(5666))
-5666 74 87 16 0
5666 -16 0
5666 -87 0
5666 -74 0
5666 -74 -87 0
c (((SATLiteral(75) + SATLiteral(88))<=1)=tv=SATLiteral(5667))
-5667 -75 -88 0
5667 88 0
5667 75 0
c ((1<=(SATLiteral(75) + SATLiteral(88)))=tv=SATLiteral(5668))
-5668 75 88 0
5668 -88 0
5668 -75 0
c (((aux603 + aux604 + SATLiteral(89))<=1)=tv=SATLiteral(5669))
-5669 4847 0
-5669 4843 4846 0
-5669 4844 0
-5669 -89 4846 0
-5669 -89 4843 0
-5669 -89 4844 0
5669 -4843 -4846 0
5669 89 -4844 -4846 0
5669 89 -4843 -4847 0
c ((1<=(aux603 + aux604 + SATLiteral(89)))=tv=SATLiteral(5670))
-5670 89 -4843 -4846 0
5670 4846 0
5670 4843 0
5670 4844 0
5670 -89 0
5670 -89 4843 0
5670 -89 4844 0
c (((aux605 + aux606 + aux607)<=1)=tv=SATLiteral(5671))
-5671 4856 0
-5671 4852 4855 0
-5671 4853 0
-5671 4849 4855 0
-5671 4849 4852 0
-5671 4849 4853 0
-5671 4850 0
-5671 4850 4852 0
-5671 4850 4853 0
5671 -4850 -4852 -4855 0
5671 -4849 -4853 -4855 0
5671 -4849 -4852 -4856 0
c ((1<=(aux605 + aux606 + aux607))=tv=SATLiteral(5672))
-5672 -4849 -4852 -4855 0
5672 4855 0
5672 4852 0
5672 4853 0
5672 4849 0
5672 4849 4852 0
5672 4849 4853 0
5672 4850 0
5672 4850 4852 0
5672 4850 4853 0
c (((aux608 + aux609 + SATLiteral(91))<=1)=tv=SATLiteral(5673))
-5673 4862 0
-5673 4858 4861 0
-5673 4859 0
-5673 -91 4861 0
-5673 -91 4858 0
-5673 -91 4859 0
5673 -4858 -4861 0
5673 91 -4859 -4861 0
5673 91 -4858 -4862 0
c ((1<=(aux608 + aux609 + SATLiteral(91)))=tv=SATLiteral(5674))
-5674 91 -4858 -4861 0
5674 4861 0
5674 4858 0
5674 4859 0
5674 -91 0
5674 -91 4858 0
5674 -91 4859 0
c (((aux610 + aux611 + aux612)<=1)=tv=SATLiteral(5675))
-5675 4871 0
-5675 4867 4870 0
-5675 4868 0
-5675 4864 4870 0
-5675 4864 4867 0
-5675 4864 4868 0
-5675 4865 0
-5675 4865 4867 0
-5675 4865 4868 0
5675 -4865 -4867 -4870 0
5675 -4864 -4868 -4870 0
5675 -4864 -4867 -4871 0
c ((1<=(aux610 + aux611 + aux612))=tv=SATLiteral(5676))
-5676 -4864 -4867 -4870 0
5676 4870 0
5676 4867 0
5676 4868 0
5676 4864 0
5676 4864 4867 0
5676 4864 4868 0
5676 4865 0
5676 4865 4867 0
5676 4865 4868 0
c (((aux613 + aux614 + aux615)<=1)=tv=SATLiteral(5677))
-5677 4880 0
-5677 4876 4879 0
-5677 4877 0
-5677 4873 4879 0
-5677 4873 4876 0
-5677 4873 4877 0
-5677 4874 0
-5677 4874 4876 0
-5677 4874 4877 0
5677 -4874 -4876 -4879 0
5677 -4873 -4877 -4879 0
5677 -4873 -4876 -4880 0
c ((1<=(aux613 + aux614 + aux615))=tv=SATLiteral(5678))
-5678 -4873 -4876 -4879 0
5678 4879 0
5678 4876 0
5678 4877 0
5678 4873 0
5678 4873 4876 0
5678 4873 4877 0
5678 4874 0
5678 4874 4876 0
5678 4874 4877 0
c (((aux616 + SATLiteral(108) + SATLiteral(26))<=1)=tv=SATLiteral(5679))
-5679 4883 0
-5679 -26 4882 0
-5679 -108 4882 0
-5679 -108 -26 0
5679 26 -4882 0
5679 108 -4882 0
5679 108 26 -4883 0
c ((1<=(aux616 + SATLiteral(108) + SATLiteral(26)))=tv=SATLiteral(5680))
-5680 108 26 -4882 0
5680 4882 0
5680 -26 0
5680 -108 0
5680 -108 -26 0
c (((aux617 + SATLiteral(109) + SATLiteral(27))<=1)=tv=SATLiteral(5681))
-5681 4886 0
-5681 -27 4885 0
-5681 -109 4885 0
-5681 -109 -27 0
5681 27 -4885 0
5681 109 -4885 0
5681 109 27 -4886 0
c ((1<=(aux617 + SATLiteral(109) + SATLiteral(27)))=tv=SATLiteral(5682))
-5682 109 27 -4885 0
5682 4885 0
5682 -27 0
5682 -109 0
5682 -109 -27 0
c (((aux618 + aux619 + aux620)<=1)=tv=SATLiteral(5683))
-5683 4895 0
-5683 4891 4894 0
-5683 4892 0
-5683 4888 4894 0
-5683 4888 4891 0
-5683 4888 4892 0
-5683 4889 0
-5683 4889 4891 0
-5683 4889 4892 0
5683 -4889 -4891 -4894 0
5683 -4888 -4892 -4894 0
5683 -4888 -4891 -4895 0
c ((1<=(aux618 + aux619 + aux620))=tv=SATLiteral(5684))
-5684 -4888 -4891 -4894 0
5684 4894 0
5684 4891 0
5684 4892 0
5684 4888 0
5684 4888 4891 0
5684 4888 4892 0
5684 4889 0
5684 4889 4891 0
5684 4889 4892 0
c (((aux621 + aux622 + aux623)<=1)=tv=SATLiteral(5685))
-5685 4904 0
-5685 4900 4903 0
-5685 4901 0
-5685 4897 4903 0
-5685 4897 4900 0
-5685 4897 4901 0
-5685 4898 0
-5685 4898 4900 0
-5685 4898 4901 0
5685 -4898 -4900 -4903 0
5685 -4897 -4901 -4903 0
5685 -4897 -4900 -4904 0
c ((1<=(aux621 + aux622 + aux623))=tv=SATLiteral(5686))
-5686 -4897 -4900 -4903 0
5686 4903 0
5686 4900 0
5686 4901 0
5686 4897 0
5686 4897 4900 0
5686 4897 4901 0
5686 4898 0
5686 4898 4900 0
5686 4898 4901 0
c (((aux624 + SATLiteral(102) + SATLiteral(112))<=1)=tv=SATLiteral(5687))
-5687 4907 0
-5687 -112 4906 0
-5687 -102 4906 0
-5687 -102 -112 0
5687 112 -4906 0
5687 102 -4906 0
5687 102 112 -4907 0
c ((1<=(aux624 + SATLiteral(102) + SATLiteral(112)))=tv=SATLiteral(5688))
-5688 102 112 -4906 0
5688 4906 0
5688 -112 0
5688 -102 0
5688 -102 -112 0
c (((aux625 + SATLiteral(113) + SATLiteral(30))<=1)=tv=SATLiteral(5689))
-5689 4910 0
-5689 -30 4909 0
-5689 -113 4909 0
-5689 -113 -30 0
5689 30 -4909 0
5689 113 -4909 0
5689 113 30 -4910 0
c ((1<=(aux625 + SATLiteral(113) + SATLiteral(30)))=tv=SATLiteral(5690))
-5690 113 30 -4909 0
5690 4909 0
5690 -30 0
5690 -113 0
5690 -113 -30 0
c (((SATLiteral(115) + SATLiteral(118))<=1)=tv=SATLiteral(5691))
-5691 -115 -118 0
5691 118 0
5691 115 0
c ((1<=(SATLiteral(115) + SATLiteral(118)))=tv=SATLiteral(5692))
-5692 115 118 0
5692 -118 0
5692 -115 0
c (((aux626 + aux627 + aux629)<=1)=tv=SATLiteral(5693))
-5693 4922 0
-5693 4915 4921 0
-5693 4916 0
-5693 4912 4921 0
-5693 4912 4915 0
-5693 4912 4916 0
-5693 4913 0
-5693 4913 4915 0
-5693 4913 4916 0
5693 -4913 -4915 -4921 0
5693 -4912 -4916 -4921 0
5693 -4912 -4915 -4922 0
c ((1<=(aux626 + aux627 + aux629))=tv=SATLiteral(5694))
-5694 -4912 -4915 -4921 0
5694 4921 0
5694 4915 0
5694 4916 0
5694 4912 0
5694 4912 4915 0
5694 4912 4916 0
5694 4913 0
5694 4913 4915 0
5694 4913 4916 0
c (((aux630 + SATLiteral(151) + SATLiteral(213))<=1)=tv=SATLiteral(5695))
-5695 4927 0
-5695 -213 4926 0
-5695 -151 4926 0
-5695 -151 -213 0
5695 213 -4926 0
5695 151 -4926 0
5695 151 213 -4927 0
c ((1<=(aux630 + SATLiteral(151) + SATLiteral(213)))=tv=SATLiteral(5696))
-5696 151 213 -4926 0
5696 4926 0
5696 -213 0
5696 -151 0
5696 -151 -213 0
c (((aux631 + aux632 + aux633)<=1)=tv=SATLiteral(5697))
-5697 4936 0
-5697 4932 4935 0
-5697 4933 0
-5697 4929 4935 0
-5697 4929 4932 0
-5697 4929 4933 0
-5697 4930 0
-5697 4930 4932 0
-5697 4930 4933 0
5697 -4930 -4932 -4935 0
5697 -4929 -4933 -4935 0
5697 -4929 -4932 -4936 0
c ((1<=(aux631 + aux632 + aux633))=tv=SATLiteral(5698))
-5698 -4929 -4932 -4935 0
5698 4935 0
5698 4932 0
5698 4933 0
5698 4929 0
5698 4929 4932 0
5698 4929 4933 0
5698 4930 0
5698 4930 4932 0
5698 4930 4933 0
c (((aux634 + aux635 + aux636)<=1)=tv=SATLiteral(5699))
-5699 4945 0
-5699 4941 4944 0
-5699 4942 0
-5699 4938 4944 0
-5699 4938 4941 0
-5699 4938 4942 0
-5699 4939 0
-5699 4939 4941 0
-5699 4939 4942 0
5699 -4939 -4941 -4944 0
5699 -4938 -4942 -4944 0
5699 -4938 -4941 -4945 0
c ((1<=(aux634 + aux635 + aux636))=tv=SATLiteral(5700))
-5700 -4938 -4941 -4944 0
5700 4944 0
5700 4941 0
5700 4942 0
5700 4938 0
5700 4938 4941 0
5700 4938 4942 0
5700 4939 0
5700 4939 4941 0
5700 4939 4942 0
c (((aux638 + aux639 + aux641)<=1)=tv=SATLiteral(5701))
-5701 4960 0
-5701 4953 4959 0
-5701 4954 0
-5701 4950 4959 0
-5701 4950 4953 0
-5701 4950 4954 0
-5701 4951 0
-5701 4951 4953 0
-5701 4951 4954 0
5701 -4951 -4953 -4959 0
5701 -4950 -4954 -4959 0
5701 -4950 -4953 -4960 0
c ((1<=(aux638 + aux639 + aux641))=tv=SATLiteral(5702))
-5702 -4950 -4953 -4959 0
5702 4959 0
5702 4953 0
5702 4954 0
5702 4950 0
5702 4950 4953 0
5702 4950 4954 0
5702 4951 0
5702 4951 4953 0
5702 4951 4954 0
c (((aux642 + aux643 + aux644)<=1)=tv=SATLiteral(5703))
-5703 4973 0
-5703 4969 4972 0
-5703 4970 0
-5703 4966 4972 0
-5703 4966 4969 0
-5703 4966 4970 0
-5703 4967 0
-5703 4967 4969 0
-5703 4967 4970 0
5703 -4967 -4969 -4972 0
5703 -4966 -4970 -4972 0
5703 -4966 -4969 -4973 0
c ((1<=(aux642 + aux643 + aux644))=tv=SATLiteral(5704))
-5704 -4966 -4969 -4972 0
5704 4972 0
5704 4969 0
5704 4970 0
5704 4966 0
5704 4966 4969 0
5704 4966 4970 0
5704 4967 0
5704 4967 4969 0
5704 4967 4970 0
c (((aux645 + aux646 + SATLiteral(156))<=1)=tv=SATLiteral(5705))
-5705 4979 0
-5705 4975 4978 0
-5705 4976 0
-5705 -156 4978 0
-5705 -156 4975 0
-5705 -156 4976 0
5705 -4975 -4978 0
5705 156 -4976 -4978 0
5705 156 -4975 -4979 0
c ((1<=(aux645 + aux646 + SATLiteral(156)))=tv=SATLiteral(5706))
-5706 156 -4975 -4978 0
5706 4978 0
5706 4975 0
5706 4976 0
5706 -156 0
5706 -156 4975 0
5706 -156 4976 0
c (((aux647 + SATLiteral(180) + SATLiteral(242))<=1)=tv=SATLiteral(5707))
-5707 4982 0
-5707 -242 4981 0
-5707 -180 4981 0
-5707 -180 -242 0
5707 242 -4981 0
5707 180 -4981 0
5707 180 242 -4982 0
c ((1<=(aux647 + SATLiteral(180) + SATLiteral(242)))=tv=SATLiteral(5708))
-5708 180 242 -4981 0
5708 4981 0
5708 -242 0
5708 -180 0
5708 -180 -242 0
c (((aux648 + aux649 + aux650)<=1)=tv=SATLiteral(5709))
-5709 4991 0
-5709 4987 4990 0
-5709 4988 0
-5709 4984 4990 0
-5709 4984 4987 0
-5709 4984 4988 0
-5709 4985 0
-5709 4985 4987 0
-5709 4985 4988 0
5709 -4985 -4987 -4990 0
5709 -4984 -4988 -4990 0
5709 -4984 -4987 -4991 0
c ((1<=(aux648 + aux649 + aux650))=tv=SATLiteral(5710))
-5710 -4984 -4987 -4990 0
5710 4990 0
5710 4987 0
5710 4988 0
5710 4984 0
5710 4984 4987 0
5710 4984 4988 0
5710 4985 0
5710 4985 4987 0
5710 4985 4988 0
c (((aux651 + SATLiteral(182) + SATLiteral(244))<=1)=tv=SATLiteral(5711))
-5711 4994 0
-5711 -244 4993 0
-5711 -182 4993 0
-5711 -182 -244 0
5711 244 -4993 0
5711 182 -4993 0
5711 182 244 -4994 0
c ((1<=(aux651 + SATLiteral(182) + SATLiteral(244)))=tv=SATLiteral(5712))
-5712 182 244 -4993 0
5712 4993 0
5712 -244 0
5712 -182 0
5712 -182 -244 0
c (((aux652 + aux653 + aux654)<=1)=tv=SATLiteral(5713))
-5713 5003 0
-5713 4999 5002 0
-5713 5000 0
-5713 4996 5002 0
-5713 4996 4999 0
-5713 4996 5000 0
-5713 4997 0
-5713 4997 4999 0
-5713 4997 5000 0
5713 -4997 -4999 -5002 0
5713 -4996 -5000 -5002 0
5713 -4996 -4999 -5003 0
c ((1<=(aux652 + aux653 + aux654))=tv=SATLiteral(5714))
-5714 -4996 -4999 -5002 0
5714 5002 0
5714 4999 0
5714 5000 0
5714 4996 0
5714 4996 4999 0
5714 4996 5000 0
5714 4997 0
5714 4997 4999 0
5714 4997 5000 0
c (((aux655 + aux656 + aux657)<=1)=tv=SATLiteral(5715))
-5715 5012 0
-5715 5008 5011 0
-5715 5009 0
-5715 5005 5011 0
-5715 5005 5008 0
-5715 5005 5009 0
-5715 5006 0
-5715 5006 5008 0
-5715 5006 5009 0
5715 -5006 -5008 -5011 0
5715 -5005 -5009 -5011 0
5715 -5005 -5008 -5012 0
c ((1<=(aux655 + aux656 + aux657))=tv=SATLiteral(5716))
-5716 -5005 -5008 -5011 0
5716 5011 0
5716 5008 0
5716 5009 0
5716 5005 0
5716 5005 5008 0
5716 5005 5009 0
5716 5006 0
5716 5006 5008 0
5716 5006 5009 0
c (((aux659 + aux660 + aux662)<=1)=tv=SATLiteral(5717))
-5717 5027 0
-5717 5020 5026 0
-5717 5021 0
-5717 5017 5026 0
-5717 5017 5020 0
-5717 5017 5021 0
-5717 5018 0
-5717 5018 5020 0
-5717 5018 5021 0
5717 -5018 -5020 -5026 0
5717 -5017 -5021 -5026 0
5717 -5017 -5020 -5027 0
c ((1<=(aux659 + aux660 + aux662))=tv=SATLiteral(5718))
-5718 -5017 -5020 -5026 0
5718 5026 0
5718 5020 0
5718 5021 0
5718 5017 0
5718 5017 5020 0
5718 5017 5021 0
5718 5018 0
5718 5018 5020 0
5718 5018 5021 0
c (((aux663 + aux664 + aux665)<=1)=tv=SATLiteral(5719))
-5719 5040 0
-5719 5036 5039 0
-5719 5037 0
-5719 5033 5039 0
-5719 5033 5036 0
-5719 5033 5037 0
-5719 5034 0
-5719 5034 5036 0
-5719 5034 5037 0
5719 -5034 -5036 -5039 0
5719 -5033 -5037 -5039 0
5719 -5033 -5036 -5040 0
c ((1<=(aux663 + aux664 + aux665))=tv=SATLiteral(5720))
-5720 -5033 -5036 -5039 0
5720 5039 0
5720 5036 0
5720 5037 0
5720 5033 0
5720 5033 5036 0
5720 5033 5037 0
5720 5034 0
5720 5034 5036 0
5720 5034 5037 0
c (((SATLiteral(124) + SATLiteral(127))<=1)=tv=SATLiteral(5721))
-5721 -124 -127 0
5721 127 0
5721 124 0
c ((1<=(SATLiteral(124) + SATLiteral(127)))=tv=SATLiteral(5722))
-5722 124 127 0
5722 -127 0
5722 -124 0
c (((aux666 + SATLiteral(203) + SATLiteral(268))<=1)=tv=SATLiteral(5723))
-5723 5043 0
-5723 -268 5042 0
-5723 -203 5042 0
-5723 -203 -268 0
5723 268 -5042 0
5723 203 -5042 0
5723 203 268 -5043 0
c ((1<=(aux666 + SATLiteral(203) + SATLiteral(268)))=tv=SATLiteral(5724))
-5724 203 268 -5042 0
5724 5042 0
5724 -268 0
5724 -203 0
5724 -203 -268 0
c (((aux667 + SATLiteral(198) + SATLiteral(269))<=1)=tv=SATLiteral(5725))
-5725 5046 0
-5725 -269 5045 0
-5725 -198 5045 0
-5725 -198 -269 0
5725 269 -5045 0
5725 198 -5045 0
5725 198 269 -5046 0
c ((1<=(aux667 + SATLiteral(198) + SATLiteral(269)))=tv=SATLiteral(5726))
-5726 198 269 -5045 0
5726 5045 0
5726 -269 0
5726 -198 0
5726 -198 -269 0
c (((SATLiteral(199) + SATLiteral(204) + SATLiteral(275))<=1)=tv=SATLiteral(5727))
-5727 -204 -275 0
-5727 -199 -275 0
-5727 -199 -204 0
5727 204 275 0
5727 199 275 0
5727 199 204 0
c ((1<=(SATLiteral(199) + SATLiteral(204) + SATLiteral(275)))=tv=SATLiteral(5728))
-5728 199 204 275 0
5728 -275 0
5728 -204 0
5728 -199 0
5728 -199 -204 0
c (((aux668 + aux669 + aux670)<=1)=tv=SATLiteral(5729))
-5729 5055 0
-5729 5051 5054 0
-5729 5052 0
-5729 5048 5054 0
-5729 5048 5051 0
-5729 5048 5052 0
-5729 5049 0
-5729 5049 5051 0
-5729 5049 5052 0
5729 -5049 -5051 -5054 0
5729 -5048 -5052 -5054 0
5729 -5048 -5051 -5055 0
c ((1<=(aux668 + aux669 + aux670))=tv=SATLiteral(5730))
-5730 -5048 -5051 -5054 0
5730 5054 0
5730 5051 0
5730 5052 0
5730 5048 0
5730 5048 5051 0
5730 5048 5052 0
5730 5049 0
5730 5049 5051 0
5730 5049 5052 0
c (((aux671 + aux672 + aux673)<=1)=tv=SATLiteral(5731))
-5731 5064 0
-5731 5060 5063 0
-5731 5061 0
-5731 5057 5063 0
-5731 5057 5060 0
-5731 5057 5061 0
-5731 5058 0
-5731 5058 5060 0
-5731 5058 5061 0
5731 -5058 -5060 -5063 0
5731 -5057 -5061 -5063 0
5731 -5057 -5060 -5064 0
c ((1<=(aux671 + aux672 + aux673))=tv=SATLiteral(5732))
-5732 -5057 -5060 -5063 0
5732 5063 0
5732 5060 0
5732 5061 0
5732 5057 0
5732 5057 5060 0
5732 5057 5061 0
5732 5058 0
5732 5058 5060 0
5732 5058 5061 0
c (((aux674 + aux675 + SATLiteral(207))<=1)=tv=SATLiteral(5733))
-5733 5070 0
-5733 5066 5069 0
-5733 5067 0
-5733 -207 5069 0
-5733 -207 5066 0
-5733 -207 5067 0
5733 -5066 -5069 0
5733 207 -5067 -5069 0
5733 207 -5066 -5070 0
c ((1<=(aux674 + aux675 + SATLiteral(207)))=tv=SATLiteral(5734))
-5734 207 -5066 -5069 0
5734 5069 0
5734 5066 0
5734 5067 0
5734 -207 0
5734 -207 5066 0
5734 -207 5067 0
c (((SATLiteral(447) + SATLiteral(280))<=1)=tv=SATLiteral(5735))
-5735 -447 -280 0
5735 280 0
5735 447 0
c ((1<=(SATLiteral(447) + SATLiteral(280)))=tv=SATLiteral(5736))
-5736 447 280 0
5736 -280 0
5736 -447 0
c (((aux676 + aux677 + aux679)<=1)=tv=SATLiteral(5737))
-5737 5082 0
-5737 5075 5081 0
-5737 5076 0
-5737 5072 5081 0
-5737 5072 5075 0
-5737 5072 5076 0
-5737 5073 0
-5737 5073 5075 0
-5737 5073 5076 0
5737 -5073 -5075 -5081 0
5737 -5072 -5076 -5081 0
5737 -5072 -5075 -5082 0
c ((1<=(aux676 + aux677 + aux679))=tv=SATLiteral(5738))
-5738 -5072 -5075 -5081 0
5738 5081 0
5738 5075 0
5738 5076 0
5738 5072 0
5738 5072 5075 0
5738 5072 5076 0
5738 5073 0
5738 5073 5075 0
5738 5073 5076 0
c (((aux680 + SATLiteral(308) + SATLiteral(374))<=1)=tv=SATLiteral(5739))
-5739 5087 0
-5739 -374 5086 0
-5739 -308 5086 0
-5739 -308 -374 0
5739 374 -5086 0
5739 308 -5086 0
5739 308 374 -5087 0
c ((1<=(aux680 + SATLiteral(308) + SATLiteral(374)))=tv=SATLiteral(5740))
-5740 308 374 -5086 0
5740 5086 0
5740 -374 0
5740 -308 0
5740 -308 -374 0
c (((aux681 + SATLiteral(309) + SATLiteral(375))<=1)=tv=SATLiteral(5741))
-5741 5090 0
-5741 -375 5089 0
-5741 -309 5089 0
-5741 -309 -375 0
5741 375 -5089 0
5741 309 -5089 0
5741 309 375 -5090 0
c ((1<=(aux681 + SATLiteral(309) + SATLiteral(375)))=tv=SATLiteral(5742))
-5742 309 375 -5089 0
5742 5089 0
5742 -375 0
5742 -309 0
5742 -309 -375 0
c (((aux683 + aux686 + aux687)<=1)=tv=SATLiteral(5743))
-5743 5110 0
-5743 5104 5109 0
-5743 5105 0
-5743 5107 0
-5743 5095 5109 0
-5743 5095 5104 0
-5743 5095 5105 0
-5743 5095 5107 0
-5743 5096 0
-5743 5096 5104 0
-5743 5096 5105 0
-5743 5096 5107 0
5743 -5096 -5104 -5109 0
5743 -5095 -5105 -5109 0
5743 -5095 -5104 -5110 0
c ((1<=(aux683 + aux686 + aux687))=tv=SATLiteral(5744))
-5744 -5095 -5104 -5109 0
5744 5109 0
5744 5104 0
5744 5105 0
5744 5107 0
5744 5095 0
5744 5095 5104 0
5744 5095 5105 0
5744 5095 5107 0
5744 5096 0
5744 5096 5104 0
5744 5096 5105 0
5744 5096 5107 0
c (((aux689 + aux692 + aux693)<=1)=tv=SATLiteral(5745))
-5745 5134 0
-5745 5128 5133 0
-5745 5129 0
-5745 5131 0
-5745 5119 5133 0
-5745 5119 5128 0
-5745 5119 5129 0
-5745 5119 5131 0
-5745 5120 0
-5745 5120 5128 0
-5745 5120 5129 0
-5745 5120 5131 0
5745 -5120 -5128 -5133 0
5745 -5119 -5129 -5133 0
5745 -5119 -5128 -5134 0
c ((1<=(aux689 + aux692 + aux693))=tv=SATLiteral(5746))
-5746 -5119 -5128 -5133 0
5746 5133 0
5746 5128 0
5746 5129 0
5746 5131 0
5746 5119 0
5746 5119 5128 0
5746 5119 5129 0
5746 5119 5131 0
5746 5120 0
5746 5120 5128 0
5746 5120 5129 0
5746 5120 5131 0
c (((aux695 + aux696 + aux698)<=1)=tv=SATLiteral(5747))
-5747 5153 0
-5747 5146 5152 0
-5747 5147 0
-5747 5143 5152 0
-5747 5143 5146 0
-5747 5143 5147 0
-5747 5144 0
-5747 5144 5146 0
-5747 5144 5147 0
5747 -5144 -5146 -5152 0
5747 -5143 -5147 -5152 0
5747 -5143 -5146 -5153 0
c ((1<=(aux695 + aux696 + aux698))=tv=SATLiteral(5748))
-5748 -5143 -5146 -5152 0
5748 5152 0
5748 5146 0
5748 5147 0
5748 5143 0
5748 5143 5146 0
5748 5143 5147 0
5748 5144 0
5748 5144 5146 0
5748 5144 5147 0
c (((aux700 + aux701 + aux703)<=1)=tv=SATLiteral(5749))
-5749 5172 0
-5749 5165 5171 0
-5749 5166 0
-5749 5162 5171 0
-5749 5162 5165 0
-5749 5162 5166 0
-5749 5163 0
-5749 5163 5165 0
-5749 5163 5166 0
5749 -5163 -5165 -5171 0
5749 -5162 -5166 -5171 0
5749 -5162 -5165 -5172 0
c ((1<=(aux700 + aux701 + aux703))=tv=SATLiteral(5750))
-5750 -5162 -5165 -5171 0
5750 5171 0
5750 5165 0
5750 5166 0
5750 5162 0
5750 5162 5165 0
5750 5162 5166 0
5750 5163 0
5750 5163 5165 0
5750 5163 5166 0
c (((aux704 + aux705 + aux707)<=1)=tv=SATLiteral(5751))
-5751 5188 0
-5751 5181 5187 0
-5751 5182 0
-5751 5178 5187 0
-5751 5178 5181 0
-5751 5178 5182 0
-5751 5179 0
-5751 5179 5181 0
-5751 5179 5182 0
5751 -5179 -5181 -5187 0
5751 -5178 -5182 -5187 0
5751 -5178 -5181 -5188 0
c ((1<=(aux704 + aux705 + aux707))=tv=SATLiteral(5752))
-5752 -5178 -5181 -5187 0
5752 5187 0
5752 5181 0
5752 5182 0
5752 5178 0
5752 5178 5181 0
5752 5178 5182 0
5752 5179 0
5752 5179 5181 0
5752 5179 5182 0
c (((SATLiteral(321) + SATLiteral(401))<=1)=tv=SATLiteral(5753))
-5753 -321 -401 0
5753 401 0
5753 321 0
c ((1<=(SATLiteral(321) + SATLiteral(401)))=tv=SATLiteral(5754))
-5754 321 401 0
5754 -401 0
5754 -321 0
c (((aux708 + aux709 + aux710)<=1)=tv=SATLiteral(5755))
-5755 5199 0
-5755 5195 5198 0
-5755 5196 0
-5755 5192 5198 0
-5755 5192 5195 0
-5755 5192 5196 0
-5755 5193 0
-5755 5193 5195 0
-5755 5193 5196 0
5755 -5193 -5195 -5198 0
5755 -5192 -5196 -5198 0
5755 -5192 -5195 -5199 0
c ((1<=(aux708 + aux709 + aux710))=tv=SATLiteral(5756))
-5756 -5192 -5195 -5198 0
5756 5198 0
5756 5195 0
5756 5196 0
5756 5192 0
5756 5192 5195 0
5756 5192 5196 0
5756 5193 0
5756 5193 5195 0
5756 5193 5196 0
c (((aux711 + aux712 + aux713)<=1)=tv=SATLiteral(5757))
-5757 5208 0
-5757 5204 5207 0
-5757 5205 0
-5757 5201 5207 0
-5757 5201 5204 0
-5757 5201 5205 0
-5757 5202 0
-5757 5202 5204 0
-5757 5202 5205 0
5757 -5202 -5204 -5207 0
5757 -5201 -5205 -5207 0
5757 -5201 -5204 -5208 0
c ((1<=(aux711 + aux712 + aux713))=tv=SATLiteral(5758))
-5758 -5201 -5204 -5207 0
5758 5207 0
5758 5204 0
5758 5205 0
5758 5201 0
5758 5201 5204 0
5758 5201 5205 0
5758 5202 0
5758 5202 5204 0
5758 5202 5205 0
c (((aux714 + aux715 + aux716)<=1)=tv=SATLiteral(5759))
-5759 5217 0
-5759 5213 5216 0
-5759 5214 0
-5759 5210 5216 0
-5759 5210 5213 0
-5759 5210 5214 0
-5759 5211 0
-5759 5211 5213 0
-5759 5211 5214 0
5759 -5211 -5213 -5216 0
5759 -5210 -5214 -5216 0
5759 -5210 -5213 -5217 0
c ((1<=(aux714 + aux715 + aux716))=tv=SATLiteral(5760))
-5760 -5210 -5213 -5216 0
5760 5216 0
5760 5213 0
5760 5214 0
5760 5210 0
5760 5210 5213 0
5760 5210 5214 0
5760 5211 0
5760 5211 5213 0
5760 5211 5214 0
c (((aux718 + aux719 + aux721)<=1)=tv=SATLiteral(5761))
-5761 5232 0
-5761 5225 5231 0
-5761 5226 0
-5761 5222 5231 0
-5761 5222 5225 0
-5761 5222 5226 0
-5761 5223 0
-5761 5223 5225 0
-5761 5223 5226 0
5761 -5223 -5225 -5231 0
5761 -5222 -5226 -5231 0
5761 -5222 -5225 -5232 0
c ((1<=(aux718 + aux719 + aux721))=tv=SATLiteral(5762))
-5762 -5222 -5225 -5231 0
5762 5231 0
5762 5225 0
5762 5226 0
5762 5222 0
5762 5222 5225 0
5762 5222 5226 0
5762 5223 0
5762 5223 5225 0
5762 5223 5226 0
c (((aux723 + aux724 + aux726)<=1)=tv=SATLiteral(5763))
-5763 5251 0
-5763 5244 5250 0
-5763 5245 0
-5763 5241 5250 0
-5763 5241 5244 0
-5763 5241 5245 0
-5763 5242 0
-5763 5242 5244 0
-5763 5242 5245 0
5763 -5242 -5244 -5250 0
5763 -5241 -5245 -5250 0
5763 -5241 -5244 -5251 0
c ((1<=(aux723 + aux724 + aux726))=tv=SATLiteral(5764))
-5764 -5241 -5244 -5250 0
5764 5250 0
5764 5244 0
5764 5245 0
5764 5241 0
5764 5241 5244 0
5764 5241 5245 0
5764 5242 0
5764 5242 5244 0
5764 5242 5245 0
c (((aux727 + aux728 + aux729)<=1)=tv=SATLiteral(5765))
-5765 5264 0
-5765 5260 5263 0
-5765 5261 0
-5765 5257 5263 0
-5765 5257 5260 0
-5765 5257 5261 0
-5765 5258 0
-5765 5258 5260 0
-5765 5258 5261 0
5765 -5258 -5260 -5263 0
5765 -5257 -5261 -5263 0
5765 -5257 -5260 -5264 0
c ((1<=(aux727 + aux728 + aux729))=tv=SATLiteral(5766))
-5766 -5257 -5260 -5263 0
5766 5263 0
5766 5260 0
5766 5261 0
5766 5257 0
5766 5257 5260 0
5766 5257 5261 0
5766 5258 0
5766 5258 5260 0
5766 5258 5261 0
c (((aux730 + aux731 + aux732)<=1)=tv=SATLiteral(5767))
-5767 5273 0
-5767 5269 5272 0
-5767 5270 0
-5767 5266 5272 0
-5767 5266 5269 0
-5767 5266 5270 0
-5767 5267 0
-5767 5267 5269 0
-5767 5267 5270 0
5767 -5267 -5269 -5272 0
5767 -5266 -5270 -5272 0
5767 -5266 -5269 -5273 0
c ((1<=(aux730 + aux731 + aux732))=tv=SATLiteral(5768))
-5768 -5266 -5269 -5272 0
5768 5272 0
5768 5269 0
5768 5270 0
5768 5266 0
5768 5266 5269 0
5768 5266 5270 0
5768 5267 0
5768 5267 5269 0
5768 5267 5270 0
c (((aux733 + aux734 + aux736)<=1)=tv=SATLiteral(5769))
-5769 5285 0
-5769 5278 5284 0
-5769 5279 0
-5769 5275 5284 0
-5769 5275 5278 0
-5769 5275 5279 0
-5769 5276 0
-5769 5276 5278 0
-5769 5276 5279 0
5769 -5276 -5278 -5284 0
5769 -5275 -5279 -5284 0
5769 -5275 -5278 -5285 0
c ((1<=(aux733 + aux734 + aux736))=tv=SATLiteral(5770))
-5770 -5275 -5278 -5284 0
5770 5284 0
5770 5278 0
5770 5279 0
5770 5275 0
5770 5275 5278 0
5770 5275 5279 0
5770 5276 0
5770 5276 5278 0
5770 5276 5279 0
c (((aux737 + aux738 + SATLiteral(358))<=1)=tv=SATLiteral(5771))
-5771 5293 0
-5771 5289 5292 0
-5771 5290 0
-5771 -358 5292 0
-5771 -358 5289 0
-5771 -358 5290 0
5771 -5289 -5292 0
5771 358 -5290 -5292 0
5771 358 -5289 -5293 0
c ((1<=(aux737 + aux738 + SATLiteral(358)))=tv=SATLiteral(5772))
-5772 358 -5289 -5292 0
5772 5292 0
5772 5289 0
5772 5290 0
5772 -358 0
5772 -358 5289 0
5772 -358 5290 0
c (((SATLiteral(359) + SATLiteral(439))<=1)=tv=SATLiteral(5773))
-5773 -359 -439 0
5773 439 0
5773 359 0
c ((1<=(SATLiteral(359) + SATLiteral(439)))=tv=SATLiteral(5774))
-5774 359 439 0
5774 -439 0
5774 -359 0
c (((aux740 + aux741 + aux743)<=1)=tv=SATLiteral(5775))
-5775 5308 0
-5775 5301 5307 0
-5775 5302 0
-5775 5298 5307 0
-5775 5298 5301 0
-5775 5298 5302 0
-5775 5299 0
-5775 5299 5301 0
-5775 5299 5302 0
5775 -5299 -5301 -5307 0
5775 -5298 -5302 -5307 0
5775 -5298 -5301 -5308 0
c ((1<=(aux740 + aux741 + aux743))=tv=SATLiteral(5776))
-5776 -5298 -5301 -5307 0
5776 5307 0
5776 5301 0
5776 5302 0
5776 5298 0
5776 5298 5301 0
5776 5298 5302 0
5776 5299 0
5776 5299 5301 0
5776 5299 5302 0
c (((SATLiteral(488) + SATLiteral(365) + SATLiteral(444))<=1)=tv=SATLiteral(5777))
-5777 -365 -444 0
-5777 -488 -444 0
-5777 -488 -365 0
5777 365 444 0
5777 488 444 0
5777 488 365 0
c ((1<=(SATLiteral(488) + SATLiteral(365) + SATLiteral(444)))=tv=SATLiteral(5778))
-5778 488 365 444 0
5778 -444 0
5778 -365 0
5778 -488 0
5778 -488 -365 0
c (((aux745 + aux746 + aux748)<=1)=tv=SATLiteral(5779))
-5779 5327 0
-5779 5320 5326 0
-5779 5321 0
-5779 5317 5326 0
-5779 5317 5320 0
-5779 5317 5321 0
-5779 5318 0
-5779 5318 5320 0
-5779 5318 5321 0
5779 -5318 -5320 -5326 0
5779 -5317 -5321 -5326 0
5779 -5317 -5320 -5327 0
c ((1<=(aux745 + aux746 + aux748))=tv=SATLiteral(5780))
-5780 -5317 -5320 -5326 0
5780 5326 0
5780 5320 0
5780 5321 0
5780 5317 0
5780 5317 5320 0
5780 5317 5321 0
5780 5318 0
5780 5318 5320 0
5780 5318 5321 0
c (((aux749 + aux750 + SATLiteral(367))<=1)=tv=SATLiteral(5781))
-5781 5337 0
-5781 5333 5336 0
-5781 5334 0
-5781 -367 5336 0
-5781 -367 5333 0
-5781 -367 5334 0
5781 -5333 -5336 0
5781 367 -5334 -5336 0
5781 367 -5333 -5337 0
c ((1<=(aux749 + aux750 + SATLiteral(367)))=tv=SATLiteral(5782))
-5782 367 -5333 -5336 0
5782 5336 0
5782 5333 0
5782 5334 0
5782 -367 0
5782 -367 5333 0
5782 -367 5334 0
c (((aux751 + aux752 + aux754)<=1)=tv=SATLiteral(5783))
-5783 5349 0
-5783 5342 5348 0
-5783 5343 0
-5783 5339 5348 0
-5783 5339 5342 0
-5783 5339 5343 0
-5783 5340 0
-5783 5340 5342 0
-5783 5340 5343 0
5783 -5340 -5342 -5348 0
5783 -5339 -5343 -5348 0
5783 -5339 -5342 -5349 0
c ((1<=(aux751 + aux752 + aux754))=tv=SATLiteral(5784))
-5784 -5339 -5342 -5348 0
5784 5348 0
5784 5342 0
5784 5343 0
5784 5339 0
5784 5339 5342 0
5784 5339 5343 0
5784 5340 0
5784 5340 5342 0
5784 5340 5343 0
c ((SATLiteral(5353) /\ SATLiteral(5354))=tv=SATLiteral(2516))
2516 -5353 -5354 0
5353 -2516 0
5354 -2516 0
c ((SATLiteral(5355) /\ SATLiteral(5356))=tv=SATLiteral(2517))
2517 -5355 -5356 0
5355 -2517 0
5356 -2517 0
c ((variant_fields_00001_00006_00006 * SATLiteral(-698))=tv=aux2)
-741 -698 2518 0
-741 698 2520 0
-742 -698 2518 0
-742 698 2522 0
-743 -698 2518 0
-743 698 2524 0
-744 -698 2518 0
-744 698 2526 0
-745 -698 2518 0
-745 698 2528 0
-746 -698 2518 0
-746 698 2530 0
-747 -698 2518 0
-747 698 -2529 0
c ((variant_fields_00001_00006_00007 * SATLiteral(-699))=tv=aux3)
-754 -699 2531 0
-754 699 2533 0
-755 -699 2531 0
-755 699 2535 0
-756 -699 2531 0
-756 699 2537 0
-757 -699 2531 0
-757 699 2539 0
-758 -699 2531 0
-758 699 -2538 0
c ((variant_fields_00001_00006_00008 * SATLiteral(-701))=tv=aux4)
-759 -701 2540 0
-759 701 2542 0
-760 -701 2540 0
-760 701 2544 0
-761 -701 2540 0
-761 701 2546 0
-762 -701 2540 0
-762 701 2548 0
-763 -701 2540 0
-763 701 2550 0
-764 -701 2540 0
-764 701 -2549 0
c ((SATLiteral(5357) /\ SATLiteral(5358))=tv=SATLiteral(2551))
2551 -5357 -5358 0
5357 -2551 0
5358 -2551 0
c ((variant_fields_00001_00008_00006 * SATLiteral(-855))=tv=aux6)
-902 -855 2552 0
-902 855 2554 0
-903 -855 2552 0
-903 855 2556 0
-904 -855 2552 0
-904 855 2558 0
-905 -855 2552 0
-905 855 2560 0
-906 -855 2552 0
-906 855 2562 0
-907 -855 2552 0
-907 855 2564 0
-908 -855 2552 0
-908 855 -2563 0
c ((variant_fields_00001_00008_00007 * SATLiteral(-856))=tv=aux7)
-915 -856 2565 0
-915 856 2567 0
-916 -856 2565 0
-916 856 2569 0
-917 -856 2565 0
-917 856 2571 0
-918 -856 2565 0
-918 856 2573 0
-919 -856 2565 0
-919 856 2575 0
-920 -856 2565 0
-920 856 -2574 0
c ((variant_fields_00001_00008_00008 * SATLiteral(-858))=tv=aux8)
-921 -858 2576 0
-921 858 2578 0
-922 -858 2576 0
-922 858 2580 0
-923 -858 2576 0
-923 858 2582 0
-924 -858 2576 0
-924 858 2584 0
-925 -858 2576 0
-925 858 2586 0
-926 -858 2576 0
-926 858 -2585 0
c ((SATLiteral(5359) /\ SATLiteral(5360))=tv=SATLiteral(2587))
2587 -5359 -5360 0
5359 -2587 0
5360 -2587 0
c ((variant_fields_00002_00002_00006 * SATLiteral(-1029))=tv=aux10)
-1056 -1029 2588 0
-1056 1029 2590 0
-1057 -1029 2588 0
-1057 1029 2592 0
-1058 -1029 2588 0
-1058 1029 2594 0
-1059 -1029 2588 0
-1059 1029 2596 0
-1060 -1029 2588 0
-1060 1029 2598 0
-1061 -1029 2588 0
-1061 1029 2600 0
-1062 -1029 2588 0
-1062 1029 -2599 0
c ((variant_fields_00002_00002_00007 * SATLiteral(-1030))=tv=aux11)
-1069 -1030 2601 0
-1069 1030 2603 0
-1070 -1030 2601 0
-1070 1030 2605 0
-1071 -1030 2601 0
-1071 1030 2607 0
-1072 -1030 2601 0
-1072 1030 2609 0
-1073 -1030 2601 0
-1073 1030 2611 0
-1074 -1030 2601 0
-1074 1030 2613 0
-1075 -1030 2601 0
-1075 1030 2615 0
-1076 -1030 2601 0
-1076 1030 -2614 0
c ((SATLiteral(5361) /\ SATLiteral(5362))=tv=SATLiteral(2616))
2616 -5361 -5362 0
5361 -2616 0
5362 -2616 0
c SATLiteral(2617)
2617 0
c ((variant_fields_00002_00006_00005 * SATLiteral(-1280))=tv=aux14)
-1300 -1280 2618 0
-1300 1280 2620 0
-1301 -1280 2618 0
-1301 1280 2622 0
-1302 -1280 2618 0
-1302 1280 2624 0
-1303 -1280 2618 0
-1303 1280 2626 0
-1304 -1280 2618 0
-1304 1280 2628 0
-1305 -1280 2618 0
-1305 1280 2630 0
-1306 -1280 2618 0
-1306 1280 -2629 0
c ((variant_fields_00002_00006_00006 * SATLiteral(-1281))=tv=aux15)
-1313 -1281 2631 0
-1313 1281 2633 0
-1314 -1281 2631 0
-1314 1281 2635 0
-1315 -1281 2631 0
-1315 1281 2637 0
-1316 -1281 2631 0
-1316 1281 2639 0
-1317 -1281 2631 0
-1317 1281 2641 0
-1318 -1281 2631 0
-1318 1281 2643 0
-1319 -1281 2631 0
-1319 1281 -2642 0
c ((SATLiteral(5363) /\ SATLiteral(5364))=tv=SATLiteral(2644))
2644 -5363 -5364 0
5363 -2644 0
5364 -2644 0
c ((SATLiteral(5365) /\ SATLiteral(5366))=tv=SATLiteral(2645))
2645 -5365 -5366 0
5365 -2645 0
5366 -2645 0
c SATLiteral(2646)
2646 0
c SATLiteral(2647)
2647 0
c ((variant_fields_00003_00006_00006 * SATLiteral(1671))=tv=aux20)
-1710 1671 2648 0
-1710 -1671 2650 0
-1711 1671 2648 0
-1711 -1671 2652 0
-1712 1671 2648 0
-1712 -1671 2654 0
-1713 1671 2648 0
-1713 -1671 -2653 0
c ((variant_fields_00003_00006_00007 * SATLiteral(1671))=tv=aux21)
-1714 1671 2655 0
-1714 -1671 2657 0
-1715 1671 2655 0
-1715 -1671 2659 0
-1716 1671 2655 0
-1716 -1671 2661 0
-1717 1671 2655 0
-1717 -1671 2663 0
-1718 1671 2655 0
-1718 -1671 2665 0
-1719 1671 2655 0
-1719 -1671 2667 0
-1720 1671 2655 0
-1720 -1671 -2666 0
c ((SATLiteral(5367) /\ SATLiteral(5368))=tv=SATLiteral(2668))
2668 -5367 -5368 0
5367 -2668 0
5368 -2668 0
c ((variant_fields_00003_00008_00006 * SATLiteral(-1833))=tv=aux23)
-1878 -1833 2669 0
-1878 1833 2671 0
-1879 -1833 2669 0
-1879 1833 2673 0
-1880 -1833 2669 0
-1880 1833 2675 0
-1881 -1833 2669 0
-1881 1833 -2674 0
c ((variant_fields_00003_00008_00007 * SATLiteral(-1834))=tv=aux24)
-1882 -1834 2676 0
-1882 1834 2678 0
-1883 -1834 2676 0
-1883 1834 2680 0
-1884 -1834 2676 0
-1884 1834 2682 0
-1885 -1834 2676 0
-1885 1834 2684 0
-1886 -1834 2676 0
-1886 1834 2686 0
-1887 -1834 2676 0
-1887 1834 2688 0
-1888 -1834 2676 0
-1888 1834 2690 0
-1889 -1834 2676 0
-1889 1834 -2689 0
c ((variant_fields_00003_00008_00008 * SATLiteral(-1836))=tv=aux25)
-1896 -1836 2691 0
-1896 1836 2693 0
-1897 -1836 2691 0
-1897 1836 2695 0
-1898 -1836 2691 0
-1898 1836 2697 0
-1899 -1836 2691 0
-1899 1836 2699 0
-1900 -1836 2691 0
-1900 1836 2701 0
-1901 -1836 2691 0
-1901 1836 2703 0
-1902 -1836 2691 0
-1902 1836 2705 0
-1903 -1836 2691 0
-1903 1836 -2704 0
c ((SATLiteral(5369) /\ SATLiteral(5370))=tv=SATLiteral(2706))
2706 -5369 -5370 0
5369 -2706 0
5370 -2706 0
c ((variant_fields_00004_00002_00006 * SATLiteral(2012))=tv=aux27)
-2061 2012 2707 0
-2061 -2012 2709 0
-2062 2012 2707 0
-2062 -2012 2711 0
-2063 2012 2707 0
-2063 -2012 -2710 0
c ((SATLiteral(5371) /\ SATLiteral(5372))=tv=SATLiteral(2712))
2712 -5371 -5372 0
5371 -2712 0
5372 -2712 0
c ((SATLiteral(5373) /\ SATLiteral(5374))=tv=SATLiteral(2713))
2713 -5373 -5374 0
5373 -2713 0
5374 -2713 0
c ((SATLiteral(5375) /\ SATLiteral(5376))=tv=SATLiteral(2714))
2714 -5375 -5376 0
5375 -2714 0
5376 -2714 0
c ((SATLiteral(5377) /\ SATLiteral(5378))=tv=SATLiteral(2715))
2715 -5377 -5378 0
5377 -2715 0
5378 -2715 0
c ((SATLiteral(5379) /\ SATLiteral(5380))=tv=SATLiteral(2716))
2716 -5379 -5380 0
5379 -2716 0
5380 -2716 0
c ((SATLiteral(5381) /\ SATLiteral(5382))=tv=SATLiteral(2717))
2717 -5381 -5382 0
5381 -2717 0
5382 -2717 0
c ((SATLiteral(5383) /\ SATLiteral(5384))=tv=SATLiteral(2718))
2718 -5383 -5384 0
5383 -2718 0
5384 -2718 0
c ((SATLiteral(5385) /\ SATLiteral(5386))=tv=SATLiteral(2719))
2719 -5385 -5386 0
5385 -2719 0
5386 -2719 0
c ((SATLiteral(5387) /\ SATLiteral(5388))=tv=SATLiteral(2720))
2720 -5387 -5388 0
5387 -2720 0
5388 -2720 0
c ((SATLiteral(5389) /\ SATLiteral(5390))=tv=SATLiteral(2721))
2721 -5389 -5390 0
5389 -2721 0
5390 -2721 0
c ((SATLiteral(5391) /\ SATLiteral(5392))=tv=SATLiteral(2722))
2722 -5391 -5392 0
5391 -2722 0
5392 -2722 0
c ((SATLiteral(5393) /\ SATLiteral(5394))=tv=SATLiteral(2723))
2723 -5393 -5394 0
5393 -2723 0
5394 -2723 0
c ((SATLiteral(5395) /\ SATLiteral(5396))=tv=SATLiteral(2724))
2724 -5395 -5396 0
5395 -2724 0
5396 -2724 0
c ((SATLiteral(5397) /\ SATLiteral(5398))=tv=SATLiteral(2725))
2725 -5397 -5398 0
5397 -2725 0
5398 -2725 0
c ((SATLiteral(5399) /\ SATLiteral(5400))=tv=SATLiteral(2726))
2726 -5399 -5400 0
5399 -2726 0
5400 -2726 0
c ((SATLiteral(5401) /\ SATLiteral(5402))=tv=SATLiteral(2727))
2727 -5401 -5402 0
5401 -2727 0
5402 -2727 0
c ((SATLiteral(5403) /\ SATLiteral(5404))=tv=SATLiteral(2728))
2728 -5403 -5404 0
5403 -2728 0
5404 -2728 0
c ((SATLiteral(5405) /\ SATLiteral(5406))=tv=SATLiteral(2729))
2729 -5405 -5406 0
5405 -2729 0
5406 -2729 0
c ((SATLiteral(5407) /\ SATLiteral(5408))=tv=SATLiteral(2730))
2730 -5407 -5408 0
5407 -2730 0
5408 -2730 0
c ((SATLiteral(5409) /\ SATLiteral(5410))=tv=SATLiteral(2731))
2731 -5409 -5410 0
5409 -2731 0
5410 -2731 0
c ((SATLiteral(5411) /\ SATLiteral(5412))=tv=SATLiteral(2732))
2732 -5411 -5412 0
5411 -2732 0
5412 -2732 0
c ((SATLiteral(5413) /\ SATLiteral(5414))=tv=SATLiteral(2733))
2733 -5413 -5414 0
5413 -2733 0
5414 -2733 0
c ((SATLiteral(5415) /\ SATLiteral(5416))=tv=SATLiteral(2734))
2734 -5415 -5416 0
5415 -2734 0
5416 -2734 0
c ((SATLiteral(5417) /\ SATLiteral(5418))=tv=SATLiteral(2735))
2735 -5417 -5418 0
5417 -2735 0
5418 -2735 0
c ((SATLiteral(5419) /\ SATLiteral(5420))=tv=SATLiteral(2736))
2736 -5419 -5420 0
5419 -2736 0
5420 -2736 0
c ((SATLiteral(5421) /\ SATLiteral(5422))=tv=SATLiteral(2737))
2737 -5421 -5422 0
5421 -2737 0
5422 -2737 0
c ((SATLiteral(5423) /\ SATLiteral(5424))=tv=SATLiteral(2738))
2738 -5423 -5424 0
5423 -2738 0
5424 -2738 0
c ((SATLiteral(5425) /\ SATLiteral(5426))=tv=SATLiteral(2739))
2739 -5425 -5426 0
5425 -2739 0
5426 -2739 0
c ((SATLiteral(5427) /\ SATLiteral(5428))=tv=SATLiteral(2740))
2740 -5427 -5428 0
5427 -2740 0
5428 -2740 0
c ((SATLiteral(5429) /\ SATLiteral(5430))=tv=SATLiteral(2741))
2741 -5429 -5430 0
5429 -2741 0
5430 -2741 0
c ((SATLiteral(5431) /\ SATLiteral(5432))=tv=SATLiteral(2742))
2742 -5431 -5432 0
5431 -2742 0
5432 -2742 0
c ((SATLiteral(5433) /\ SATLiteral(5434))=tv=SATLiteral(2743))
2743 -5433 -5434 0
5433 -2743 0
5434 -2743 0
c ((SATLiteral(5435) /\ SATLiteral(5436))=tv=SATLiteral(2744))
2744 -5435 -5436 0
5435 -2744 0
5436 -2744 0
c ((SATLiteral(5437) /\ SATLiteral(5438))=tv=SATLiteral(2745))
2745 -5437 -5438 0
5437 -2745 0
5438 -2745 0
c ((SATLiteral(5439) /\ SATLiteral(5440))=tv=SATLiteral(2746))
2746 -5439 -5440 0
5439 -2746 0
5440 -2746 0
c ((SATLiteral(5441) /\ SATLiteral(5442))=tv=SATLiteral(2747))
2747 -5441 -5442 0
5441 -2747 0
5442 -2747 0
c ((SATLiteral(5443) /\ SATLiteral(5444))=tv=SATLiteral(2748))
2748 -5443 -5444 0
5443 -2748 0
5444 -2748 0
c ((SATLiteral(5445) /\ SATLiteral(5446))=tv=SATLiteral(2749))
2749 -5445 -5446 0
5445 -2749 0
5446 -2749 0
c ((SATLiteral(5447) /\ SATLiteral(5448))=tv=SATLiteral(2750))
2750 -5447 -5448 0
5447 -2750 0
5448 -2750 0
c ((SATLiteral(5449) /\ SATLiteral(5450))=tv=SATLiteral(2751))
2751 -5449 -5450 0
5449 -2751 0
5450 -2751 0
c ((SATLiteral(5451) /\ SATLiteral(5452))=tv=SATLiteral(2752))
2752 -5451 -5452 0
5451 -2752 0
5452 -2752 0
c ((SATLiteral(5453) /\ SATLiteral(5454))=tv=SATLiteral(2753))
2753 -5453 -5454 0
5453 -2753 0
5454 -2753 0
c ((SATLiteral(5455) /\ SATLiteral(5456))=tv=SATLiteral(2754))
2754 -5455 -5456 0
5455 -2754 0
5456 -2754 0
c ((SATLiteral(5457) /\ SATLiteral(5458))=tv=SATLiteral(2755))
2755 -5457 -5458 0
5457 -2755 0
5458 -2755 0
c ((SATLiteral(5459) /\ SATLiteral(5460))=tv=SATLiteral(2756))
2756 -5459 -5460 0
5459 -2756 0
5460 -2756 0
c ((SATLiteral(5461) /\ SATLiteral(5462))=tv=SATLiteral(2757))
2757 -5461 -5462 0
5461 -2757 0
5462 -2757 0
c ((SATLiteral(5463) /\ SATLiteral(5464))=tv=SATLiteral(2758))
2758 -5463 -5464 0
5463 -2758 0
5464 -2758 0
c ((SATLiteral(5465) /\ SATLiteral(5466))=tv=SATLiteral(2759))
2759 -5465 -5466 0
5465 -2759 0
5466 -2759 0
c ((SATLiteral(5467) /\ SATLiteral(5468))=tv=SATLiteral(2760))
2760 -5467 -5468 0
5467 -2760 0
5468 -2760 0
c ((SATLiteral(5469) /\ SATLiteral(5470))=tv=SATLiteral(2761))
2761 -5469 -5470 0
5469 -2761 0
5470 -2761 0
c ((SATLiteral(5471) /\ SATLiteral(5472))=tv=SATLiteral(2762))
2762 -5471 -5472 0
5471 -2762 0
5472 -2762 0
c ((SATLiteral(5473) /\ SATLiteral(5474))=tv=SATLiteral(2763))
2763 -5473 -5474 0
5473 -2763 0
5474 -2763 0
c ((SATLiteral(5475) /\ SATLiteral(5476))=tv=SATLiteral(2764))
2764 -5475 -5476 0
5475 -2764 0
5476 -2764 0
c ((SATLiteral(5477) /\ SATLiteral(5478))=tv=SATLiteral(2765))
2765 -5477 -5478 0
5477 -2765 0
5478 -2765 0
c ((SATLiteral(5479) /\ SATLiteral(5480))=tv=SATLiteral(2766))
2766 -5479 -5480 0
5479 -2766 0
5480 -2766 0
c ((SATLiteral(5481) /\ SATLiteral(5482))=tv=SATLiteral(2767))
2767 -5481 -5482 0
5481 -2767 0
5482 -2767 0
c ((SATLiteral(5483) /\ SATLiteral(5484))=tv=SATLiteral(2768))
2768 -5483 -5484 0
5483 -2768 0
5484 -2768 0
c ((SATLiteral(5485) /\ SATLiteral(5486))=tv=SATLiteral(2769))
2769 -5485 -5486 0
5485 -2769 0
5486 -2769 0
c ((SATLiteral(5487) /\ SATLiteral(5488))=tv=SATLiteral(2770))
2770 -5487 -5488 0
5487 -2770 0
5488 -2770 0
c ((SATLiteral(5489) /\ SATLiteral(5490))=tv=SATLiteral(2771))
2771 -5489 -5490 0
5489 -2771 0
5490 -2771 0
c ((SATLiteral(5491) /\ SATLiteral(5492))=tv=SATLiteral(2772))
2772 -5491 -5492 0
5491 -2772 0
5492 -2772 0
c ((SATLiteral(5493) /\ SATLiteral(5494))=tv=SATLiteral(2773))
2773 -5493 -5494 0
5493 -2773 0
5494 -2773 0
c ((SATLiteral(5495) /\ SATLiteral(5496))=tv=SATLiteral(2774))
2774 -5495 -5496 0
5495 -2774 0
5496 -2774 0
c ((SATLiteral(5497) /\ SATLiteral(5498))=tv=SATLiteral(2775))
2775 -5497 -5498 0
5497 -2775 0
5498 -2775 0
c ((SATLiteral(5499) /\ SATLiteral(5500))=tv=SATLiteral(2776))
2776 -5499 -5500 0
5499 -2776 0
5500 -2776 0
c ((SATLiteral(5501) /\ SATLiteral(5502))=tv=SATLiteral(2777))
2777 -5501 -5502 0
5501 -2777 0
5502 -2777 0
c ((SATLiteral(5503) /\ SATLiteral(5504))=tv=SATLiteral(2778))
2778 -5503 -5504 0
5503 -2778 0
5504 -2778 0
c ((SATLiteral(5505) /\ SATLiteral(5506))=tv=SATLiteral(2779))
2779 -5505 -5506 0
5505 -2779 0
5506 -2779 0
c ((SATLiteral(5507) /\ SATLiteral(5508))=tv=SATLiteral(2780))
2780 -5507 -5508 0
5507 -2780 0
5508 -2780 0
c ((SATLiteral(5509) /\ SATLiteral(5510))=tv=SATLiteral(2781))
2781 -5509 -5510 0
5509 -2781 0
5510 -2781 0
c ((SATLiteral(5511) /\ SATLiteral(5512))=tv=SATLiteral(2782))
2782 -5511 -5512 0
5511 -2782 0
5512 -2782 0
c ((SATLiteral(5513) /\ SATLiteral(5514))=tv=SATLiteral(2783))
2783 -5513 -5514 0
5513 -2783 0
5514 -2783 0
c ((SATLiteral(5515) /\ SATLiteral(5516))=tv=SATLiteral(2784))
2784 -5515 -5516 0
5515 -2784 0
5516 -2784 0
c ((SATLiteral(5517) /\ SATLiteral(5518))=tv=SATLiteral(2785))
2785 -5517 -5518 0
5517 -2785 0
5518 -2785 0
c ((SATLiteral(5519) /\ SATLiteral(5520))=tv=SATLiteral(2786))
2786 -5519 -5520 0
5519 -2786 0
5520 -2786 0
c ((SATLiteral(5521) /\ SATLiteral(5522))=tv=SATLiteral(2787))
2787 -5521 -5522 0
5521 -2787 0
5522 -2787 0
c ((SATLiteral(5523) /\ SATLiteral(5524))=tv=SATLiteral(2788))
2788 -5523 -5524 0
5523 -2788 0
5524 -2788 0
c ((SATLiteral(5525) /\ SATLiteral(5526))=tv=SATLiteral(2789))
2789 -5525 -5526 0
5525 -2789 0
5526 -2789 0
c ((SATLiteral(5527) /\ SATLiteral(5528))=tv=SATLiteral(2790))
2790 -5527 -5528 0
5527 -2790 0
5528 -2790 0
c ((SATLiteral(5529) /\ SATLiteral(5530))=tv=SATLiteral(2791))
2791 -5529 -5530 0
5529 -2791 0
5530 -2791 0
c ((SATLiteral(5531) /\ SATLiteral(5532))=tv=SATLiteral(2792))
2792 -5531 -5532 0
5531 -2792 0
5532 -2792 0
c ((SATLiteral(5533) /\ SATLiteral(5534))=tv=SATLiteral(2793))
2793 -5533 -5534 0
5533 -2793 0
5534 -2793 0
c ((SATLiteral(5535) /\ SATLiteral(5536))=tv=SATLiteral(2794))
2794 -5535 -5536 0
5535 -2794 0
5536 -2794 0
c ((SATLiteral(5537) /\ SATLiteral(5538))=tv=SATLiteral(2795))
2795 -5537 -5538 0
5537 -2795 0
5538 -2795 0
c ((SATLiteral(5539) /\ SATLiteral(5540))=tv=SATLiteral(2796))
2796 -5539 -5540 0
5539 -2796 0
5540 -2796 0
c ((SATLiteral(5541) /\ SATLiteral(5542))=tv=SATLiteral(2797))
2797 -5541 -5542 0
5541 -2797 0
5542 -2797 0
c ((SATLiteral(5543) /\ SATLiteral(5544))=tv=SATLiteral(2798))
2798 -5543 -5544 0
5543 -2798 0
5544 -2798 0
c ((SATLiteral(5545) /\ SATLiteral(5546))=tv=SATLiteral(2799))
2799 -5545 -5546 0
5545 -2799 0
5546 -2799 0
c ((SATLiteral(5547) /\ SATLiteral(5548))=tv=SATLiteral(2800))
2800 -5547 -5548 0
5547 -2800 0
5548 -2800 0
c ((SATLiteral(5549) /\ SATLiteral(5550))=tv=SATLiteral(2801))
2801 -5549 -5550 0
5549 -2801 0
5550 -2801 0
c ((SATLiteral(5551) /\ SATLiteral(5552))=tv=SATLiteral(2802))
2802 -5551 -5552 0
5551 -2802 0
5552 -2802 0
c ((SATLiteral(5553) /\ SATLiteral(5554))=tv=SATLiteral(2803))
2803 -5553 -5554 0
5553 -2803 0
5554 -2803 0
c ((SATLiteral(5555) /\ SATLiteral(5556))=tv=SATLiteral(2804))
2804 -5555 -5556 0
5555 -2804 0
5556 -2804 0
c ((SATLiteral(5557) /\ SATLiteral(5558))=tv=SATLiteral(2805))
2805 -5557 -5558 0
5557 -2805 0
5558 -2805 0
c ((SATLiteral(5559) /\ SATLiteral(5560))=tv=SATLiteral(2806))
2806 -5559 -5560 0
5559 -2806 0
5560 -2806 0
c ((SATLiteral(5561) /\ SATLiteral(5562))=tv=SATLiteral(2807))
2807 -5561 -5562 0
5561 -2807 0
5562 -2807 0
c ((SATLiteral(5563) /\ SATLiteral(5564))=tv=SATLiteral(2808))
2808 -5563 -5564 0
5563 -2808 0
5564 -2808 0
c ((SATLiteral(5565) /\ SATLiteral(5566))=tv=SATLiteral(2809))
2809 -5565 -5566 0
5565 -2809 0
5566 -2809 0
c ((SATLiteral(5567) /\ SATLiteral(5568))=tv=SATLiteral(2810))
2810 -5567 -5568 0
5567 -2810 0
5568 -2810 0
c ((SATLiteral(5569) /\ SATLiteral(5570))=tv=SATLiteral(2811))
2811 -5569 -5570 0
5569 -2811 0
5570 -2811 0
c ((SATLiteral(5571) /\ SATLiteral(5572))=tv=SATLiteral(2812))
2812 -5571 -5572 0
5571 -2812 0
5572 -2812 0
c ((SATLiteral(5573) /\ SATLiteral(5574))=tv=SATLiteral(2813))
2813 -5573 -5574 0
5573 -2813 0
5574 -2813 0
c ((SATLiteral(5575) /\ SATLiteral(5576))=tv=SATLiteral(2814))
2814 -5575 -5576 0
5575 -2814 0
5576 -2814 0
c ((SATLiteral(5577) /\ SATLiteral(5578))=tv=SATLiteral(2815))
2815 -5577 -5578 0
5577 -2815 0
5578 -2815 0
c ((SATLiteral(5579) /\ SATLiteral(5580))=tv=SATLiteral(2816))
2816 -5579 -5580 0
5579 -2816 0
5580 -2816 0
c ((SATLiteral(5581) /\ SATLiteral(5582))=tv=SATLiteral(2817))
2817 -5581 -5582 0
5581 -2817 0
5582 -2817 0
c ((SATLiteral(5583) /\ SATLiteral(5584))=tv=SATLiteral(2818))
2818 -5583 -5584 0
5583 -2818 0
5584 -2818 0
c ((SATLiteral(5585) /\ SATLiteral(5586))=tv=SATLiteral(2819))
2819 -5585 -5586 0
5585 -2819 0
5586 -2819 0
c ((SATLiteral(5587) /\ SATLiteral(5588))=tv=SATLiteral(2820))
2820 -5587 -5588 0
5587 -2820 0
5588 -2820 0
c ((SATLiteral(5589) /\ SATLiteral(5590))=tv=SATLiteral(2821))
2821 -5589 -5590 0
5589 -2821 0
5590 -2821 0
c ((SATLiteral(5591) /\ SATLiteral(5592))=tv=SATLiteral(2822))
2822 -5591 -5592 0
5591 -2822 0
5592 -2822 0
c ((SATLiteral(5593) /\ SATLiteral(5594))=tv=SATLiteral(2823))
2823 -5593 -5594 0
5593 -2823 0
5594 -2823 0
c ((SATLiteral(5595) /\ SATLiteral(5596))=tv=SATLiteral(2824))
2824 -5595 -5596 0
5595 -2824 0
5596 -2824 0
c ((SATLiteral(5597) /\ SATLiteral(5598))=tv=SATLiteral(2825))
2825 -5597 -5598 0
5597 -2825 0
5598 -2825 0
c ((SATLiteral(5599) /\ SATLiteral(5600))=tv=SATLiteral(2826))
2826 -5599 -5600 0
5599 -2826 0
5600 -2826 0
c ((SATLiteral(5601) /\ SATLiteral(5602))=tv=SATLiteral(2827))
2827 -5601 -5602 0
5601 -2827 0
5602 -2827 0
c ((SATLiteral(5603) /\ SATLiteral(5604))=tv=SATLiteral(2828))
2828 -5603 -5604 0
5603 -2828 0
5604 -2828 0
c ((SATLiteral(5605) /\ SATLiteral(5606))=tv=SATLiteral(2829))
2829 -5605 -5606 0
5605 -2829 0
5606 -2829 0
c ((SATLiteral(5607) /\ SATLiteral(5608))=tv=SATLiteral(2830))
2830 -5607 -5608 0
5607 -2830 0
5608 -2830 0
c ((SATLiteral(5609) /\ SATLiteral(5610))=tv=SATLiteral(2831))
2831 -5609 -5610 0
5609 -2831 0
5610 -2831 0
c ((SATLiteral(5611) /\ SATLiteral(5612))=tv=SATLiteral(2832))
2832 -5611 -5612 0
5611 -2832 0
5612 -2832 0
c ((SATLiteral(5613) /\ SATLiteral(5614))=tv=SATLiteral(2833))
2833 -5613 -5614 0
5613 -2833 0
5614 -2833 0
c ((SATLiteral(5615) /\ SATLiteral(5616))=tv=SATLiteral(2834))
2834 -5615 -5616 0
5615 -2834 0
5616 -2834 0
c ((SATLiteral(5617) /\ SATLiteral(5618))=tv=SATLiteral(2835))
2835 -5617 -5618 0
5617 -2835 0
5618 -2835 0
c ((SATLiteral(5619) /\ SATLiteral(5620))=tv=SATLiteral(2836))
2836 -5619 -5620 0
5619 -2836 0
5620 -2836 0
c ((SATLiteral(5621) /\ SATLiteral(5622))=tv=SATLiteral(2837))
2837 -5621 -5622 0
5621 -2837 0
5622 -2837 0
c ((SATLiteral(5623) /\ SATLiteral(5624))=tv=SATLiteral(2838))
2838 -5623 -5624 0
5623 -2838 0
5624 -2838 0
c ((SATLiteral(5625) /\ SATLiteral(5626))=tv=SATLiteral(2839))
2839 -5625 -5626 0
5625 -2839 0
5626 -2839 0
c ((SATLiteral(5627) /\ SATLiteral(5628))=tv=SATLiteral(2840))
2840 -5627 -5628 0
5627 -2840 0
5628 -2840 0
c ((SATLiteral(5629) /\ SATLiteral(5630))=tv=SATLiteral(2841))
2841 -5629 -5630 0
5629 -2841 0
5630 -2841 0
c ((SATLiteral(5631) /\ SATLiteral(5632))=tv=SATLiteral(2842))
2842 -5631 -5632 0
5631 -2842 0
5632 -2842 0
c ((SATLiteral(5633) /\ SATLiteral(5634))=tv=SATLiteral(2843))
2843 -5633 -5634 0
5633 -2843 0
5634 -2843 0
c ((SATLiteral(5635) /\ SATLiteral(5636))=tv=SATLiteral(2844))
2844 -5635 -5636 0
5635 -2844 0
5636 -2844 0
c ((SATLiteral(5637) /\ SATLiteral(5638))=tv=SATLiteral(2845))
2845 -5637 -5638 0
5637 -2845 0
5638 -2845 0
c ((SATLiteral(5639) /\ SATLiteral(5640))=tv=SATLiteral(2846))
2846 -5639 -5640 0
5639 -2846 0
5640 -2846 0
c ((SATLiteral(5641) /\ SATLiteral(5642))=tv=SATLiteral(2847))
2847 -5641 -5642 0
5641 -2847 0
5642 -2847 0
c ((SATLiteral(5643) /\ SATLiteral(5644))=tv=SATLiteral(2848))
2848 -5643 -5644 0
5643 -2848 0
5644 -2848 0
c ((SATLiteral(5645) /\ SATLiteral(5646))=tv=SATLiteral(2849))
2849 -5645 -5646 0
5645 -2849 0
5646 -2849 0
c ((SATLiteral(5647) /\ SATLiteral(5648))=tv=SATLiteral(2850))
2850 -5647 -5648 0
5647 -2850 0
5648 -2850 0
c ((SATLiteral(5649) /\ SATLiteral(5650))=tv=SATLiteral(2851))
2851 -5649 -5650 0
5649 -2851 0
5650 -2851 0
c ((SATLiteral(5651) /\ SATLiteral(5652))=tv=SATLiteral(2852))
2852 -5651 -5652 0
5651 -2852 0
5652 -2852 0
c ((SATLiteral(5653) /\ SATLiteral(5654))=tv=SATLiteral(2853))
2853 -5653 -5654 0
5653 -2853 0
5654 -2853 0
c ((SATLiteral(5655) /\ SATLiteral(5656))=tv=SATLiteral(2854))
2854 -5655 -5656 0
5655 -2854 0
5656 -2854 0
c ((SATLiteral(5657) /\ SATLiteral(5658))=tv=SATLiteral(2855))
2855 -5657 -5658 0
5657 -2855 0
5658 -2855 0
c ((SATLiteral(5659) /\ SATLiteral(5660))=tv=SATLiteral(2856))
2856 -5659 -5660 0
5659 -2856 0
5660 -2856 0
c ((SATLiteral(5661) /\ SATLiteral(5662))=tv=SATLiteral(2857))
2857 -5661 -5662 0
5661 -2857 0
5662 -2857 0
c ((SATLiteral(5663) /\ SATLiteral(5664))=tv=SATLiteral(2858))
2858 -5663 -5664 0
5663 -2858 0
5664 -2858 0
c ((SATLiteral(5665) /\ SATLiteral(5666))=tv=SATLiteral(2859))
2859 -5665 -5666 0
5665 -2859 0
5666 -2859 0
c ((SATLiteral(5667) /\ SATLiteral(5668))=tv=SATLiteral(2860))
2860 -5667 -5668 0
5667 -2860 0
5668 -2860 0
c ((SATLiteral(5669) /\ SATLiteral(5670))=tv=SATLiteral(2861))
2861 -5669 -5670 0
5669 -2861 0
5670 -2861 0
c ((SATLiteral(5671) /\ SATLiteral(5672))=tv=SATLiteral(2862))
2862 -5671 -5672 0
5671 -2862 0
5672 -2862 0
c ((SATLiteral(5673) /\ SATLiteral(5674))=tv=SATLiteral(2863))
2863 -5673 -5674 0
5673 -2863 0
5674 -2863 0
c ((SATLiteral(5675) /\ SATLiteral(5676))=tv=SATLiteral(2864))
2864 -5675 -5676 0
5675 -2864 0
5676 -2864 0
c ((SATLiteral(5677) /\ SATLiteral(5678))=tv=SATLiteral(2865))
2865 -5677 -5678 0
5677 -2865 0
5678 -2865 0
c ((SATLiteral(5679) /\ SATLiteral(5680))=tv=SATLiteral(2866))
2866 -5679 -5680 0
5679 -2866 0
5680 -2866 0
c ((SATLiteral(5681) /\ SATLiteral(5682))=tv=SATLiteral(2867))
2867 -5681 -5682 0
5681 -2867 0
5682 -2867 0
c ((SATLiteral(5683) /\ SATLiteral(5684))=tv=SATLiteral(2868))
2868 -5683 -5684 0
5683 -2868 0
5684 -2868 0
c ((SATLiteral(5685) /\ SATLiteral(5686))=tv=SATLiteral(2869))
2869 -5685 -5686 0
5685 -2869 0
5686 -2869 0
c ((SATLiteral(5687) /\ SATLiteral(5688))=tv=SATLiteral(2870))
2870 -5687 -5688 0
5687 -2870 0
5688 -2870 0
c ((SATLiteral(5689) /\ SATLiteral(5690))=tv=SATLiteral(2871))
2871 -5689 -5690 0
5689 -2871 0
5690 -2871 0
c ((SATLiteral(5691) /\ SATLiteral(5692))=tv=SATLiteral(2872))
2872 -5691 -5692 0
5691 -2872 0
5692 -2872 0
c ((SATLiteral(5693) /\ SATLiteral(5694))=tv=SATLiteral(2873))
2873 -5693 -5694 0
5693 -2873 0
5694 -2873 0
c ((SATLiteral(5695) /\ SATLiteral(5696))=tv=SATLiteral(2874))
2874 -5695 -5696 0
5695 -2874 0
5696 -2874 0
c ((SATLiteral(5697) /\ SATLiteral(5698))=tv=SATLiteral(2875))
2875 -5697 -5698 0
5697 -2875 0
5698 -2875 0
c ((SATLiteral(5699) /\ SATLiteral(5700))=tv=SATLiteral(2876))
2876 -5699 -5700 0
5699 -2876 0
5700 -2876 0
c ((SATLiteral(5701) /\ SATLiteral(5702))=tv=SATLiteral(2877))
2877 -5701 -5702 0
5701 -2877 0
5702 -2877 0
c ((SATLiteral(5703) /\ SATLiteral(5704))=tv=SATLiteral(2878))
2878 -5703 -5704 0
5703 -2878 0
5704 -2878 0
c ((SATLiteral(5705) /\ SATLiteral(5706))=tv=SATLiteral(2879))
2879 -5705 -5706 0
5705 -2879 0
5706 -2879 0
c ((SATLiteral(5707) /\ SATLiteral(5708))=tv=SATLiteral(2880))
2880 -5707 -5708 0
5707 -2880 0
5708 -2880 0
c ((SATLiteral(5709) /\ SATLiteral(5710))=tv=SATLiteral(2881))
2881 -5709 -5710 0
5709 -2881 0
5710 -2881 0
c ((SATLiteral(5711) /\ SATLiteral(5712))=tv=SATLiteral(2882))
2882 -5711 -5712 0
5711 -2882 0
5712 -2882 0
c ((SATLiteral(5713) /\ SATLiteral(5714))=tv=SATLiteral(2883))
2883 -5713 -5714 0
5713 -2883 0
5714 -2883 0
c ((SATLiteral(5715) /\ SATLiteral(5716))=tv=SATLiteral(2884))
2884 -5715 -5716 0
5715 -2884 0
5716 -2884 0
c ((SATLiteral(5717) /\ SATLiteral(5718))=tv=SATLiteral(2885))
2885 -5717 -5718 0
5717 -2885 0
5718 -2885 0
c ((SATLiteral(5719) /\ SATLiteral(5720))=tv=SATLiteral(2886))
2886 -5719 -5720 0
5719 -2886 0
5720 -2886 0
c ((SATLiteral(5721) /\ SATLiteral(5722))=tv=SATLiteral(2887))
2887 -5721 -5722 0
5721 -2887 0
5722 -2887 0
c ((SATLiteral(5723) /\ SATLiteral(5724))=tv=SATLiteral(2888))
2888 -5723 -5724 0
5723 -2888 0
5724 -2888 0
c ((SATLiteral(5725) /\ SATLiteral(5726))=tv=SATLiteral(2889))
2889 -5725 -5726 0
5725 -2889 0
5726 -2889 0
c ((SATLiteral(5727) /\ SATLiteral(5728))=tv=SATLiteral(2890))
2890 -5727 -5728 0
5727 -2890 0
5728 -2890 0
c ((SATLiteral(5729) /\ SATLiteral(5730))=tv=SATLiteral(2891))
2891 -5729 -5730 0
5729 -2891 0
5730 -2891 0
c ((SATLiteral(5731) /\ SATLiteral(5732))=tv=SATLiteral(2892))
2892 -5731 -5732 0
5731 -2892 0
5732 -2892 0
c ((SATLiteral(5733) /\ SATLiteral(5734))=tv=SATLiteral(2893))
2893 -5733 -5734 0
5733 -2893 0
5734 -2893 0
c ((SATLiteral(5735) /\ SATLiteral(5736))=tv=SATLiteral(2894))
2894 -5735 -5736 0
5735 -2894 0
5736 -2894 0
c ((SATLiteral(5737) /\ SATLiteral(5738))=tv=SATLiteral(2895))
2895 -5737 -5738 0
5737 -2895 0
5738 -2895 0
c ((SATLiteral(5739) /\ SATLiteral(5740))=tv=SATLiteral(2896))
2896 -5739 -5740 0
5739 -2896 0
5740 -2896 0
c ((SATLiteral(5741) /\ SATLiteral(5742))=tv=SATLiteral(2897))
2897 -5741 -5742 0
5741 -2897 0
5742 -2897 0
c ((SATLiteral(5743) /\ SATLiteral(5744))=tv=SATLiteral(2898))
2898 -5743 -5744 0
5743 -2898 0
5744 -2898 0
c ((SATLiteral(5745) /\ SATLiteral(5746))=tv=SATLiteral(2899))
2899 -5745 -5746 0
5745 -2899 0
5746 -2899 0
c ((SATLiteral(5747) /\ SATLiteral(5748))=tv=SATLiteral(2900))
2900 -5747 -5748 0
5747 -2900 0
5748 -2900 0
c ((SATLiteral(5749) /\ SATLiteral(5750))=tv=SATLiteral(2901))
2901 -5749 -5750 0
5749 -2901 0
5750 -2901 0
c ((SATLiteral(5751) /\ SATLiteral(5752))=tv=SATLiteral(2902))
2902 -5751 -5752 0
5751 -2902 0
5752 -2902 0
c ((SATLiteral(5753) /\ SATLiteral(5754))=tv=SATLiteral(2903))
2903 -5753 -5754 0
5753 -2903 0
5754 -2903 0
c ((SATLiteral(5755) /\ SATLiteral(5756))=tv=SATLiteral(2904))
2904 -5755 -5756 0
5755 -2904 0
5756 -2904 0
c ((SATLiteral(5757) /\ SATLiteral(5758))=tv=SATLiteral(2905))
2905 -5757 -5758 0
5757 -2905 0
5758 -2905 0
c ((SATLiteral(5759) /\ SATLiteral(5760))=tv=SATLiteral(2906))
2906 -5759 -5760 0
5759 -2906 0
5760 -2906 0
c ((SATLiteral(5761) /\ SATLiteral(5762))=tv=SATLiteral(2907))
2907 -5761 -5762 0
5761 -2907 0
5762 -2907 0
c ((SATLiteral(5763) /\ SATLiteral(5764))=tv=SATLiteral(2908))
2908 -5763 -5764 0
5763 -2908 0
5764 -2908 0
c ((SATLiteral(5765) /\ SATLiteral(5766))=tv=SATLiteral(2909))
2909 -5765 -5766 0
5765 -2909 0
5766 -2909 0
c ((SATLiteral(5767) /\ SATLiteral(5768))=tv=SATLiteral(2910))
2910 -5767 -5768 0
5767 -2910 0
5768 -2910 0
c ((SATLiteral(5769) /\ SATLiteral(5770))=tv=SATLiteral(2911))
2911 -5769 -5770 0
5769 -2911 0
5770 -2911 0
c ((SATLiteral(5771) /\ SATLiteral(5772))=tv=SATLiteral(2912))
2912 -5771 -5772 0
5771 -2912 0
5772 -2912 0
c ((SATLiteral(5773) /\ SATLiteral(5774))=tv=SATLiteral(2913))
2913 -5773 -5774 0
5773 -2913 0
5774 -2913 0
c ((SATLiteral(5775) /\ SATLiteral(5776))=tv=SATLiteral(2914))
2914 -5775 -5776 0
5775 -2914 0
5776 -2914 0
c ((SATLiteral(5777) /\ SATLiteral(5778))=tv=SATLiteral(2915))
2915 -5777 -5778 0
5777 -2915 0
5778 -2915 0
c ((SATLiteral(5779) /\ SATLiteral(5780))=tv=SATLiteral(2916))
2916 -5779 -5780 0
5779 -2916 0
5780 -2916 0
c ((SATLiteral(5781) /\ SATLiteral(5782))=tv=SATLiteral(2917))
2917 -5781 -5782 0
5781 -2917 0
5782 -2917 0
c ((SATLiteral(5783) /\ SATLiteral(5784))=tv=SATLiteral(2918))
2918 -5783 -5784 0
5783 -2918 0
5784 -2918 0
c (field_00009_00001=variant_fields_00004_00001_00001)
-447 1959 0
-448 1960 0
-449 1961 0
-450 1962 0
-451 1963 0
-452 1964 0
-453 1965 0
-1959 447 0
-1960 448 0
-1961 449 0
-1962 450 0
-1963 451 0
-1964 452 0
-1965 453 0
c (variant_fields_00003_00001_00001=field_00001_00009)
-1465 31 0
-1466 32 0
-1467 33 0
-1468 34 0
-1469 35 0
-1470 36 0
-31 1465 0
-32 1466 0
-33 1467 0
-34 1468 0
-35 1469 0
-36 1470 0
c (variant_fields_00001_00001_00001=field_00001_00001)
-492 2 0
-493 3 0
-494 4 0
-495 5 0
-496 6 0
-2 492 0
-3 493 0
-4 494 0
-5 495 0
-6 496 0
c (variant_fields_00002_00001_00001=field_00001_00001)
-976 2 0
-977 3 0
-978 4 0
-979 5 0
-980 6 0
-2 976 0
-3 977 0
-4 978 0
-5 979 0
-6 980 0
c (field_00008_00001=variant_fields_00004_00001_00002)
-369 1972 0
-370 1973 0
-371 1974 0
-372 1975 0
-1972 369 0
-1973 370 0
-1974 371 0
-1975 372 0
c (variant_fields_00003_00001_00002=field_00001_00008)
-1471 26 0
-1472 27 0
-1473 28 0
-1474 29 0
-1475 30 0
-26 1471 0
-27 1472 0
-28 1473 0
-29 1474 0
-30 1475 0
c (variant_fields_00001_00001_00002=field_00001_00002)
-497 7 0
-498 8 0
-499 9 0
-7 497 0
-8 498 0
-9 499 0
c (variant_fields_00002_00001_00002=field_00002_00001)
-981 37 0
-37 981 0
c (field_00007_00001=variant_fields_00004_00001_00003)
-280 1976 0
-281 1977 0
-282 1978 0
-283 1979 0
-284 1980 0
-285 1981 0
-286 1982 0
-1976 280 0
-1977 281 0
-1978 282 0
-1979 283 0
-1980 284 0
-1981 285 0
-1982 286 0
c (variant_fields_00003_00001_00003=field_00001_00007)
-1476 25 0
-25 1476 0
c (variant_fields_00001_00001_00003=field_00001_00003)
-500 10 0
-501 11 0
-502 12 0
-503 13 0
-504 14 0
-10 500 0
-11 501 0
-12 502 0
-13 503 0
-14 504 0
c (variant_fields_00002_00001_00003=field_00003_00001)
-982 52 0
-983 53 0
-984 54 0
-985 55 0
-986 56 0
-987 57 0
-52 982 0
-53 983 0
-54 984 0
-55 985 0
-56 986 0
-57 987 0
c (field_00006_00001=variant_fields_00004_00001_00004)
-208 1989 0
-209 1990 0
-210 1991 0
-211 1992 0
-1989 208 0
-1990 209 0
-1991 210 0
-1992 211 0
c (variant_fields_00003_00001_00004=field_00001_00006)
-1477 22 0
-1478 23 0
-1479 24 0
-22 1477 0
-23 1478 0
-24 1479 0
c (variant_fields_00001_00001_00004=field_00001_00004)
-505 15 0
-15 505 0
c (variant_fields_00002_00001_00004=field_00004_00001)
-988 114 0
-114 988 0
c (field_00005_00001=variant_fields_00004_00001_00005)
-131 1993 0
-132 1994 0
-133 1995 0
-134 1996 0
-135 1997 0
-136 1998 0
-1993 131 0
-1994 132 0
-1995 133 0
-1996 134 0
-1997 135 0
-1998 136 0
c (variant_fields_00003_00001_00005=field_00001_00005)
-1480 16 0
-1481 17 0
-1482 18 0
-1483 19 0
-1484 20 0
-1485 21 0
-16 1480 0
-17 1481 0
-18 1482 0
-19 1483 0
-20 1484 0
-21 1485 0
c (variant_fields_00001_00001_00005=field_00001_00005)
-506 16 0
-507 17 0
-508 18 0
-509 19 0
-510 20 0
-511 21 0
-16 506 0
-17 507 0
-18 508 0
-19 509 0
-20 510 0
-21 511 0
c (variant_fields_00002_00001_00005=field_00005_00001)
-989 131 0
-990 132 0
-991 133 0
-992 134 0
-993 135 0
-994 136 0
-131 989 0
-132 990 0
-133 991 0
-134 992 0
-135 993 0
-136 994 0
c (field_00004_00001=variant_fields_00004_00001_00006)
-114 1999 0
-1999 114 0
c (variant_fields_00003_00001_00006=field_00001_00004)
-1486 15 0
-15 1486 0
c (variant_fields_00001_00001_00006=field_00001_00006)
-512 22 0
-513 23 0
-514 24 0
-22 512 0
-23 513 0
-24 514 0
c (variant_fields_00002_00001_00006=field_00006_00001)
-995 208 0
-996 209 0
-997 210 0
-998 211 0
-208 995 0
-209 996 0
-210 997 0
-211 998 0
c (field_00003_00001=variant_fields_00004_00001_00007)
-52 2000 0
-53 2001 0
-54 2002 0
-55 2003 0
-56 2004 0
-57 2005 0
-2000 52 0
-2001 53 0
-2002 54 0
-2003 55 0
-2004 56 0
-2005 57 0
c (variant_fields_00003_00001_00007=field_00001_00003)
-1487 10 0
-1488 11 0
-1489 12 0
-1490 13 0
-1491 14 0
-10 1487 0
-11 1488 0
-12 1489 0
-13 1490 0
-14 1491 0
c (variant_fields_00001_00001_00007=field_00001_00007)
-515 25 0
-25 515 0
c (variant_fields_00002_00001_00007=field_00007_00001)
-999 280 0
-1000 281 0
-1001 282 0
-1002 283 0
-1003 284 0
-1004 285 0
-1005 286 0
-280 999 0
-281 1000 0
-282 1001 0
-283 1002 0
-284 1003 0
-285 1004 0
-286 1005 0
c (field_00002_00001=variant_fields_00004_00001_00008)
-37 2006 0
-2006 37 0
c (variant_fields_00003_00001_00008=field_00001_00002)
-1492 7 0
-1493 8 0
-1494 9 0
-7 1492 0
-8 1493 0
-9 1494 0
c (variant_fields_00001_00001_00008=field_00001_00008)
-516 26 0
-517 27 0
-518 28 0
-519 29 0
-520 30 0
-26 516 0
-27 517 0
-28 518 0
-29 519 0
-30 520 0
c (variant_fields_00002_00001_00008=field_00008_00001)
-1012 369 0
-1013 370 0
-1014 371 0
-1015 372 0
-369 1012 0
-370 1013 0
-371 1014 0
-372 1015 0
c (field_00001_00001=variant_fields_00004_00001_00009)
-2 2007 0
-3 2008 0
-4 2009 0
-5 2010 0
-6 2011 0
-2007 2 0
-2008 3 0
-2009 4 0
-2010 5 0
-2011 6 0
c (variant_fields_00003_00001_00009=field_00001_00001)
-1495 2 0
-1496 3 0
-1497 4 0
-1498 5 0
-1499 6 0
-2 1495 0
-3 1496 0
-4 1497 0
-5 1498 0
-6 1499 0
c (variant_fields_00001_00001_00009=field_00001_00009)
-521 31 0
-522 32 0
-523 33 0
-524 34 0
-525 35 0
-526 36 0
-31 521 0
-32 522 0
-33 523 0
-34 524 0
-35 525 0
-36 526 0
c (variant_fields_00002_00001_00009=field_00009_00001)
-1016 447 0
-1017 448 0
-1018 449 0
-1019 450 0
-1020 451 0
-1021 452 0
-1022 453 0
-447 1016 0
-448 1017 0
-449 1018 0
-450 1019 0
-451 1020 0
-452 1021 0
-453 1022 0
c (variant_fields_00004_00002_00001=field_00009_00002)
2012 -460 0
-2012 460 0
460 -2012 0
-460 2012 0
c (variant_fields_00003_00002_00001=field_00002_00009)
-1500 51 0
-51 1500 0
c (variant_fields_00001_00002_00001=field_00002_00001)
-527 37 0
-37 527 0
c (variant_fields_00002_00002_00001=field_00001_00002)
-1029 7 0
-1031 8 0
1030 9 0
-7 1029 0
-8 1031 0
-9 -1030 0
c (field_00008_00002=variant_fields_00004_00002_00002)
-373 2013 0
-374 2015 0
-375 2017 0
-376 2019 0
-377 2021 0
-378 2023 0
-379 2025 0
-380 -2024 0
-2013 373 0
-2015 374 0
-2017 375 0
-2019 376 0
-2021 377 0
-2023 378 0
-2025 379 0
2024 380 0
c (variant_fields_00003_00002_00002=field_00002_00008)
-1501 50 0
-50 1501 0
c (variant_fields_00001_00002_00002=field_00002_00002)
528 -38 0
-528 38 0
38 -528 0
-38 528 0
c (variant_fields_00002_00002_00002=field_00002_00002)
1032 -38 0
-1032 38 0
38 -1032 0
-38 1032 0
c (variant_fields_00004_00002_00003=field_00007_00002)
-2026 293 0
-2028 294 0
-2030 295 0
-2032 296 0
-2034 297 0
-2036 298 0
-2038 299 0
2037 300 0
-293 2026 0
-294 2028 0
-295 2030 0
-296 2032 0
-297 2034 0
-298 2036 0
-299 2038 0
-300 -2037 0
c (variant_fields_00003_00002_00003=field_00002_00007)
-1502 47 0
-1503 48 0
-1504 49 0
-47 1502 0
-48 1503 0
-49 1504 0
c (variant_fields_00001_00002_00003=field_00002_00003)
529 -39 0
-529 39 0
39 -529 0
-39 529 0
c (field_00003_00002=variant_fields_00002_00002_00003)
-58 1033 0
-59 1035 0
-60 1037 0
-61 1039 0
-62 1041 0
-63 -1040 0
-1033 58 0
-1035 59 0
-1037 60 0
-1039 61 0
-1041 62 0
1040 63 0
c (variant_fields_00004_00002_00004=field_00006_00002)
-2039 212 0
-2041 213 0
-2043 214 0
-2045 215 0
-2047 216 0
-2049 217 0
2048 218 0
-212 2039 0
-213 2041 0
-214 2043 0
-215 2045 0
-216 2047 0
-217 2049 0
-218 -2048 0
c (variant_fields_00003_00002_00004=field_00002_00006)
-1505 44 0
-1506 45 0
-1507 46 0
-44 1505 0
-45 1506 0
-46 1507 0
c (variant_fields_00001_00002_00004=field_00002_00004)
-530 40 0
-40 530 0
c (variant_fields_00002_00002_00004=field_00004_00002)
-1042 115 0
-1044 116 0
1043 117 0
-115 1042 0
-116 1044 0
-117 -1043 0
c (variant_fields_00004_00002_00005=field_00005_00002)
-2050 137 0
-2052 138 0
-2054 139 0
-2056 140 0
-2058 141 0
-2060 142 0
2059 143 0
-137 2050 0
-138 2052 0
-139 2054 0
-140 2056 0
-141 2058 0
-142 2060 0
-143 -2059 0
c (variant_fields_00003_00002_00005=field_00002_00005)
-1508 41 0
-1509 42 0
-1510 43 0
-41 1508 0
-42 1509 0
-43 1510 0
c (variant_fields_00001_00002_00005=field_00002_00005)
-531 41 0
-532 42 0
-533 43 0
-41 531 0
-42 532 0
-43 533 0
c (variant_fields_00002_00002_00005=field_00005_00002)
-1045 137 0
-1047 138 0
-1049 139 0
-1051 140 0
-1053 141 0
-1055 142 0
1054 143 0
-137 1045 0
-138 1047 0
-139 1049 0
-140 1051 0
-141 1053 0
-142 1055 0
-143 -1054 0
c (variant_fields_00004_00002_00006=field_00004_00002)
-2061 115 0
-2062 116 0
-2063 117 0
-115 2061 0
-116 2062 0
-117 2063 0
c (variant_fields_00003_00002_00006=field_00002_00004)
-1511 40 0
-40 1511 0
c (variant_fields_00001_00002_00006=field_00002_00006)
-534 44 0
-535 45 0
-536 46 0
-44 534 0
-45 535 0
-46 536 0
c (variant_fields_00002_00002_00006=field_00006_00002)
-1056 212 0
-1057 213 0
-1058 214 0
-1059 215 0
-1060 216 0
-1061 217 0
-1062 218 0
-212 1056 0
-213 1057 0
-214 1058 0
-215 1059 0
-216 1060 0
-217 1061 0
-218 1062 0
c (field_00003_00002=variant_fields_00004_00002_00007)
-58 2064 0
-59 2065 0
-60 2066 0
-61 2067 0
-62 2068 0
-63 2069 0
-2064 58 0
-2065 59 0
-2066 60 0
-2067 61 0
-2068 62 0
-2069 63 0
c (variant_fields_00003_00002_00007=field_00002_00003)
1512 -39 0
-1512 39 0
39 -1512 0
-39 1512 0
c (variant_fields_00001_00002_00007=field_00002_00007)
-537 47 0
-538 48 0
-539 49 0
-47 537 0
-48 538 0
-49 539 0
c (variant_fields_00002_00002_00007=field_00007_00002)
-1069 293 0
-1070 294 0
-1071 295 0
-1072 296 0
-1073 297 0
-1074 298 0
-1075 299 0
-1076 300 0
-293 1069 0
-294 1070 0
-295 1071 0
-296 1072 0
-297 1073 0
-298 1074 0
-299 1075 0
-300 1076 0
c (variant_fields_00004_00002_00008=field_00002_00002)
2070 -38 0
-2070 38 0
38 -2070 0
-38 2070 0
c (variant_fields_00003_00002_00008=field_00002_00002)
1513 -38 0
-1513 38 0
38 -1513 0
-38 1513 0
c (variant_fields_00001_00002_00008=field_00002_00008)
-540 50 0
-50 540 0
c (field_00008_00002=variant_fields_00002_00002_00008)
-373 1083 0
-374 1084 0
-375 1085 0
-376 1086 0
-377 1087 0
-378 1088 0
-379 1089 0
-380 1090 0
-1083 373 0
-1084 374 0
-1085 375 0
-1086 376 0
-1087 377 0
-1088 378 0
-1089 379 0
-1090 380 0
c (variant_fields_00004_00002_00009=field_00001_00002)
-2071 7 0
-2072 8 0
-2073 9 0
-7 2071 0
-8 2072 0
-9 2073 0
c (variant_fields_00003_00002_00009=field_00002_00001)
-1514 37 0
-37 1514 0
c (variant_fields_00001_00002_00009=field_00002_00009)
-541 51 0
-51 541 0
c (variant_fields_00002_00002_00009=field_00009_00002)
1097 -460 0
-1097 460 0
460 -1097 0
-460 1097 0
c (field_00009_00003=variant_fields_00004_00003_00001)
-461 2074 0
-462 2075 0
-463 2076 0
-464 2077 0
-465 2078 0
-466 2079 0
-2074 461 0
-2075 462 0
-2076 463 0
-2077 464 0
-2078 465 0
-2079 466 0
c (field_00003_00009=variant_fields_00003_00003_00001)
-108 1515 0
-109 1516 0
-110 1517 0
-111 1518 0
-112 1519 0
-113 1520 0
-1515 108 0
-1516 109 0
-1517 110 0
-1518 111 0
-1519 112 0
-1520 113 0
c (field_00003_00001=variant_fields_00001_00003_00001)
-52 542 0
-53 543 0
-54 544 0
-55 545 0
-56 546 0
-57 547 0
-542 52 0
-543 53 0
-544 54 0
-545 55 0
-546 56 0
-547 57 0
c (variant_fields_00002_00003_00001=field_00001_00003)
-1098 10 0
-1099 11 0
-1100 12 0
-1101 13 0
-1102 14 0
-10 1098 0
-11 1099 0
-12 1100 0
-13 1101 0
-14 1102 0
c (field_00008_00003=variant_fields_00004_00003_00002)
-387 2080 0
-388 2081 0
-389 2082 0
-390 2083 0
-391 2084 0
-392 2085 0
-393 2086 0
-394 2087 0
-2080 387 0
-2081 388 0
-2082 389 0
-2083 390 0
-2084 391 0
-2085 392 0
-2086 393 0
-2087 394 0
c (field_00003_00008=variant_fields_00003_00003_00002)
-103 1521 0
-104 1522 0
-105 1523 0
-106 1524 0
-107 1525 0
-1521 103 0
-1522 104 0
-1523 105 0
-1524 106 0
-1525 107 0
c (field_00003_00002=variant_fields_00001_00003_00002)
-58 548 0
-59 549 0
-60 550 0
-61 551 0
-62 552 0
-63 553 0
-548 58 0
-549 59 0
-550 60 0
-551 61 0
-552 62 0
-553 63 0
c (variant_fields_00002_00003_00002=field_00002_00003)
1103 -39 0
-1103 39 0
39 -1103 0
-39 1103 0
c (variant_fields_00004_00003_00003=field_00007_00003)
-2094 307 0
-2095 308 0
-2096 309 0
-2097 310 0
-2098 311 0
-2099 312 0
-2100 313 0
-2101 314 0
-307 2094 0
-308 2095 0
-309 2096 0
-310 2097 0
-311 2098 0
-312 2099 0
-313 2100 0
-314 2101 0
c (field_00003_00007=variant_fields_00003_00003_00003)
-100 1526 0
-101 1527 0
-102 1528 0
-1526 100 0
-1527 101 0
-1528 102 0
c (field_00003_00003=variant_fields_00001_00003_00003)
-64 554 0
-65 555 0
-66 556 0
-67 557 0
-68 558 0
-69 559 0
-554 64 0
-555 65 0
-556 66 0
-557 67 0
-558 68 0
-559 69 0
c (field_00003_00003=variant_fields_00002_00003_00003)
-64 1104 0
-65 1105 0
-66 1106 0
-67 1107 0
-68 1108 0
-69 1109 0
-1104 64 0
-1105 65 0
-1106 66 0
-1107 67 0
-1108 68 0
-1109 69 0
c (variant_fields_00004_00003_00004=field_00006_00003)
-2108 225 0
-2109 226 0
-2110 227 0
-2111 228 0
-2112 229 0
-2113 230 0
-2114 231 0
-225 2108 0
-226 2109 0
-227 2110 0
-228 2111 0
-229 2112 0
-230 2113 0
-231 2114 0
c (field_00003_00006=variant_fields_00003_00003_00004)
-87 1529 0
-88 1530 0
-89 1531 0
-90 1532 0
-91 1533 0
-92 1534 0
-93 1535 0
-1529 87 0
-1530 88 0
-1531 89 0
-1532 90 0
-1533 91 0
-1534 92 0
-1535 93 0
c (field_00003_00004=variant_fields_00001_00003_00004)
-70 560 0
-71 561 0
-72 562 0
-73 563 0
-560 70 0
-561 71 0
-562 72 0
-563 73 0
c (field_00004_00003=variant_fields_00002_00003_00004)
-118 1110 0
-119 1111 0
-120 1112 0
-1110 118 0
-1111 119 0
-1112 120 0
c (variant_fields_00004_00003_00005=field_00005_00003)
-2121 150 0
-2122 151 0
-2123 152 0
-2124 153 0
-2125 154 0
-2126 155 0
-2127 156 0
-150 2121 0
-151 2122 0
-152 2123 0
-153 2124 0
-154 2125 0
-155 2126 0
-156 2127 0
c (field_00003_00005=variant_fields_00003_00003_00005)
-74 1542 0
-75 1543 0
-76 1544 0
-77 1545 0
-78 1546 0
-79 1547 0
-80 1548 0
-1542 74 0
-1543 75 0
-1544 76 0
-1545 77 0
-1546 78 0
-1547 79 0
-1548 80 0
c (field_00003_00005=variant_fields_00001_00003_00005)
-74 564 0
-75 565 0
-76 566 0
-77 567 0
-78 568 0
-79 569 0
-80 570 0
-564 74 0
-565 75 0
-566 76 0
-567 77 0
-568 78 0
-569 79 0
-570 80 0
c (variant_fields_00002_00003_00005=field_00005_00003)
-1113 150 0
-1114 151 0
-1115 152 0
-1116 153 0
-1117 154 0
-1118 155 0
-1119 156 0
-150 1113 0
-151 1114 0
-152 1115 0
-153 1116 0
-154 1117 0
-155 1118 0
-156 1119 0
c (field_00004_00003=variant_fields_00004_00003_00006)
-118 2134 0
-119 2135 0
-120 2136 0
-2134 118 0
-2135 119 0
-2136 120 0
c (field_00003_00004=variant_fields_00003_00003_00006)
-70 1555 0
-71 1556 0
-72 1557 0
-73 1558 0
-1555 70 0
-1556 71 0
-1557 72 0
-1558 73 0
c (field_00003_00006=variant_fields_00001_00003_00006)
-87 577 0
-88 578 0
-89 579 0
-90 580 0
-91 581 0
-92 582 0
-93 583 0
-577 87 0
-578 88 0
-579 89 0
-580 90 0
-581 91 0
-582 92 0
-583 93 0
c (variant_fields_00002_00003_00006=field_00006_00003)
-1126 225 0
-1127 226 0
-1128 227 0
-1129 228 0
-1130 229 0
-1131 230 0
-1132 231 0
-225 1126 0
-226 1127 0
-227 1128 0
-228 1129 0
-229 1130 0
-230 1131 0
-231 1132 0
c (field_00003_00003=variant_fields_00004_00003_00007)
-64 2137 0
-65 2138 0
-66 2139 0
-67 2140 0
-68 2141 0
-69 2142 0
-2137 64 0
-2138 65 0
-2139 66 0
-2140 67 0
-2141 68 0
-2142 69 0
c (field_00003_00003=variant_fields_00003_00003_00007)
-64 1559 0
-65 1560 0
-66 1561 0
-67 1562 0
-68 1563 0
-69 1564 0
-1559 64 0
-1560 65 0
-1561 66 0
-1562 67 0
-1563 68 0
-1564 69 0
c (field_00003_00007=variant_fields_00001_00003_00007)
-100 590 0
-101 591 0
-102 592 0
-590 100 0
-591 101 0
-592 102 0
c (variant_fields_00002_00003_00007=field_00007_00003)
-1139 307 0
-1140 308 0
-1141 309 0
-1142 310 0
-1143 311 0
-1144 312 0
-1145 313 0
-1146 314 0
-307 1139 0
-308 1140 0
-309 1141 0
-310 1142 0
-311 1143 0
-312 1144 0
-313 1145 0
-314 1146 0
c (variant_fields_00004_00003_00008=field_00002_00003)
2143 -39 0
-2143 39 0
39 -2143 0
-39 2143 0
c (field_00003_00002=variant_fields_00003_00003_00008)
-58 1565 0
-59 1566 0
-60 1567 0
-61 1568 0
-62 1569 0
-63 1570 0
-1565 58 0
-1566 59 0
-1567 60 0
-1568 61 0
-1569 62 0
-1570 63 0
c (field_00003_00008=variant_fields_00001_00003_00008)
-103 593 0
-104 594 0
-105 595 0
-106 596 0
-107 597 0
-593 103 0
-594 104 0
-595 105 0
-596 106 0
-597 107 0
c (field_00008_00003=variant_fields_00002_00003_00008)
-387 1153 0
-388 1154 0
-389 1155 0
-390 1156 0
-391 1157 0
-392 1158 0
-393 1159 0
-394 1160 0
-1153 387 0
-1154 388 0
-1155 389 0
-1156 390 0
-1157 391 0
-1158 392 0
-1159 393 0
-1160 394 0
c (variant_fields_00004_00003_00009=field_00001_00003)
-2144 10 0
-2145 11 0
-2146 12 0
-2147 13 0
-2148 14 0
-10 2144 0
-11 2145 0
-12 2146 0
-13 2147 0
-14 2148 0
c (field_00003_00001=variant_fields_00003_00003_00009)
-52 1571 0
-53 1572 0
-54 1573 0
-55 1574 0
-56 1575 0
-57 1576 0
-1571 52 0
-1572 53 0
-1573 54 0
-1574 55 0
-1575 56 0
-1576 57 0
c (field_00003_00009=variant_fields_00001_00003_00009)
-108 598 0
-109 599 0
-110 600 0
-111 601 0
-112 602 0
-113 603 0
-598 108 0
-599 109 0
-600 110 0
-601 111 0
-602 112 0
-603 113 0
c (field_00009_00003=variant_fields_00002_00003_00009)
-461 1167 0
-462 1168 0
-463 1169 0
-464 1170 0
-465 1171 0
-466 1172 0
-1167 461 0
-1168 462 0
-1169 463 0
-1170 464 0
-1171 465 0
-1172 466 0
c (field_00009_00004=variant_fields_00004_00004_00001)
-467 2149 0
-2149 467 0
c (field_00004_00009=variant_fields_00003_00004_00001)
-130 1577 0
-1577 130 0
c (field_00004_00001=variant_fields_00001_00004_00001)
-114 604 0
-604 114 0
c (field_00001_00004=variant_fields_00002_00004_00001)
-15 1173 0
-1173 15 0
c (field_00008_00004=variant_fields_00004_00004_00002)
-401 2150 0
-402 2152 0
-403 2154 0
-404 -2153 0
-2150 401 0
-2152 402 0
-2154 403 0
2153 404 0
c (field_00004_00008=variant_fields_00003_00004_00002)
-129 1578 0
-1578 129 0
c (field_00004_00002=variant_fields_00001_00004_00002)
-115 605 0
-116 607 0
-117 -606 0
-605 115 0
-607 116 0
606 117 0
c (variant_fields_00002_00004_00002=field_00002_00004)
-1174 40 0
-40 1174 0
c (variant_fields_00004_00004_00003=field_00007_00004)
-2155 321 0
-2157 322 0
-2159 323 0
2158 324 0
-321 2155 0
-322 2157 0
-323 2159 0
-324 -2158 0
c (field_00004_00007=variant_fields_00003_00004_00003)
-128 1579 0
-1579 128 0
c (field_00004_00003=variant_fields_00001_00004_00003)
-118 608 0
-119 610 0
-120 -609 0
-608 118 0
-610 119 0
609 120 0
c (field_00003_00004=variant_fields_00002_00004_00003)
-70 1175 0
-71 1176 0
-72 1177 0
-73 1178 0
-1175 70 0
-1176 71 0
-1177 72 0
-1178 73 0
c (variant_fields_00004_00004_00004=field_00006_00004)
-2160 238 0
-2161 239 0
-2162 240 0
-2163 241 0
-238 2160 0
-239 2161 0
-240 2162 0
-241 2163 0
c (field_00004_00006=variant_fields_00003_00004_00004)
-125 1580 0
-126 1581 0
-127 1582 0
-1580 125 0
-1581 126 0
-1582 127 0
c (field_00004_00004=variant_fields_00001_00004_00004)
-121 611 0
-611 121 0
c (field_00004_00004=variant_fields_00002_00004_00004)
-121 1179 0
-1179 121 0
c (field_00005_00004=variant_fields_00004_00004_00005)
-163 2164 0
-164 2165 0
-165 2166 0
-166 2167 0
-2164 163 0
-2165 164 0
-2166 165 0
-2167 166 0
c (field_00004_00005=variant_fields_00003_00004_00005)
-122 1583 0
-123 1584 0
-124 1585 0
-1583 122 0
-1584 123 0
-1585 124 0
c (field_00004_00005=variant_fields_00001_00004_00005)
-122 612 0
-123 613 0
-124 614 0
-612 122 0
-613 123 0
-614 124 0
c (field_00005_00004=variant_fields_00002_00004_00005)
-163 1180 0
-164 1181 0
-165 1182 0
-166 1183 0
-1180 163 0
-1181 164 0
-1182 165 0
-1183 166 0
c (field_00004_00004=variant_fields_00004_00004_00006)
-121 2168 0
-2168 121 0
c (field_00004_00004=variant_fields_00003_00004_00006)
-121 1586 0
-1586 121 0
c (field_00004_00006=variant_fields_00001_00004_00006)
-125 615 0
-126 616 0
-127 617 0
-615 125 0
-616 126 0
-617 127 0
c (variant_fields_00002_00004_00006=field_00006_00004)
-1184 238 0
-1185 239 0
-1186 240 0
-1187 241 0
-238 1184 0
-239 1185 0
-240 1186 0
-241 1187 0
c (field_00003_00004=variant_fields_00004_00004_00007)
-70 2169 0
-71 2170 0
-72 2171 0
-73 2172 0
-2169 70 0
-2170 71 0
-2171 72 0
-2172 73 0
c (field_00004_00003=variant_fields_00003_00004_00007)
-118 1587 0
-119 1588 0
-120 1589 0
-1587 118 0
-1588 119 0
-1589 120 0
c (field_00004_00007=variant_fields_00001_00004_00007)
-128 618 0
-618 128 0
c (variant_fields_00002_00004_00007=field_00007_00004)
-1188 321 0
-1189 322 0
-1190 323 0
-1191 324 0
-321 1188 0
-322 1189 0
-323 1190 0
-324 1191 0
c (variant_fields_00004_00004_00008=field_00002_00004)
-2173 40 0
-40 2173 0
c (field_00004_00002=variant_fields_00003_00004_00008)
-115 1590 0
-116 1591 0
-117 1592 0
-1590 115 0
-1591 116 0
-1592 117 0
c (field_00004_00008=variant_fields_00001_00004_00008)
-129 619 0
-619 129 0
c (field_00008_00004=variant_fields_00002_00004_00008)
-401 1192 0
-402 1193 0
-403 1194 0
-404 1195 0
-1192 401 0
-1193 402 0
-1194 403 0
-1195 404 0
c (variant_fields_00004_00004_00009=field_00001_00004)
-2174 15 0
-15 2174 0
c (field_00004_00001=variant_fields_00003_00004_00009)
-114 1593 0
-1593 114 0
c (field_00004_00009=variant_fields_00001_00004_00009)
-130 620 0
-620 130 0
c (field_00009_00004=variant_fields_00002_00004_00009)
-467 1196 0
-1196 467 0
c (field_00009_00005=variant_fields_00004_00005_00001)
-468 2175 0
-469 2176 0
-470 2177 0
-471 2178 0
-472 2179 0
-473 2180 0
-2175 468 0
-2176 469 0
-2177 470 0
-2178 471 0
-2179 472 0
-2180 473 0
c (field_00005_00009=variant_fields_00003_00005_00001)
-203 1594 0
-204 1595 0
-205 1596 0
-206 1597 0
-207 1598 0
-1594 203 0
-1595 204 0
-1596 205 0
-1597 206 0
-1598 207 0
c (field_00005_00001=variant_fields_00001_00005_00001)
-131 621 0
-132 622 0
-133 623 0
-134 624 0
-135 625 0
-136 626 0
-621 131 0
-622 132 0
-623 133 0
-624 134 0
-625 135 0
-626 136 0
c (field_00001_00005=variant_fields_00002_00005_00001)
-16 1197 0
-17 1198 0
-18 1199 0
-19 1200 0
-20 1201 0
-21 1202 0
-1197 16 0
-1198 17 0
-1199 18 0
-1200 19 0
-1201 20 0
-1202 21 0
c (field_00008_00005=variant_fields_00004_00005_00002)
-405 2181 0
-406 2182 0
-407 2183 0
-408 2184 0
-409 2185 0
-410 2186 0
-411 2187 0
-2181 405 0
-2182 406 0
-2183 407 0
-2184 408 0
-2185 409 0
-2186 410 0
-2187 411 0
c (field_00005_00008=variant_fields_00003_00005_00002)
-197 1599 0
-198 1600 0
-199 1601 0
-200 1602 0
-201 1603 0
-202 1604 0
-1599 197 0
-1600 198 0
-1601 199 0
-1602 200 0
-1603 201 0
-1604 202 0
c (field_00005_00002=variant_fields_00001_00005_00002)
-137 627 0
-138 628 0
-139 629 0
-140 630 0
-141 631 0
-142 632 0
-143 633 0
-627 137 0
-628 138 0
-629 139 0
-630 140 0
-631 141 0
-632 142 0
-633 143 0
c (field_00002_00005=variant_fields_00002_00005_00002)
-41 1203 0
-42 1204 0
-43 1205 0
-1203 41 0
-1204 42 0
-1205 43 0
c (variant_fields_00004_00005_00003=field_00007_00005)
-2194 325 0
-2195 326 0
-2196 327 0
-2197 328 0
-2198 329 0
-2199 330 0
-2200 331 0
-325 2194 0
-326 2195 0
-327 2196 0
-328 2197 0
-329 2198 0
-330 2199 0
-331 2200 0
c (field_00005_00007=variant_fields_00003_00005_00003)
-193 1605 0
-194 1606 0
-195 1607 0
-196 1608 0
-1605 193 0
-1606 194 0
-1607 195 0
-1608 196 0
c (field_00005_00003=variant_fields_00001_00005_00003)
-150 640 0
-151 641 0
-152 642 0
-153 643 0
-154 644 0
-155 645 0
-156 646 0
-640 150 0
-641 151 0
-642 152 0
-643 153 0
-644 154 0
-645 155 0
-646 156 0
c (field_00003_00005=variant_fields_00002_00005_00003)
-74 1206 0
-75 1207 0
-76 1208 0
-77 1209 0
-78 1210 0
-79 1211 0
-80 1212 0
-1206 74 0
-1207 75 0
-1208 76 0
-1209 77 0
-1210 78 0
-1211 79 0
-1212 80 0
c (field_00006_00005=variant_fields_00004_00005_00004)
-242 2207 0
-243 2208 0
-244 2209 0
-245 2210 0
-246 2211 0
-247 2212 0
-248 2213 0
-2207 242 0
-2208 243 0
-2209 244 0
-2210 245 0
-2211 246 0
-2212 247 0
-2213 248 0
c (field_00005_00006=variant_fields_00003_00005_00004)
-180 1609 0
-181 1610 0
-182 1611 0
-183 1612 0
-184 1613 0
-185 1614 0
-186 1615 0
-1609 180 0
-1610 181 0
-1611 182 0
-1612 183 0
-1613 184 0
-1614 185 0
-1615 186 0
c (field_00005_00004=variant_fields_00001_00005_00004)
-163 653 0
-164 654 0
-165 655 0
-166 656 0
-653 163 0
-654 164 0
-655 165 0
-656 166 0
c (field_00004_00005=variant_fields_00002_00005_00004)
-122 1219 0
-123 1220 0
-124 1221 0
-1219 122 0
-1220 123 0
-1221 124 0
c (field_00005_00005=variant_fields_00004_00005_00005)
-167 2220 0
-168 2221 0
-169 2222 0
-170 2223 0
-171 2224 0
-172 2225 0
-173 2226 0
-2220 167 0
-2221 168 0
-2222 169 0
-2223 170 0
-2224 171 0
-2225 172 0
-2226 173 0
c (field_00005_00005=variant_fields_00003_00005_00005)
-167 1622 0
-168 1623 0
-169 1624 0
-170 1625 0
-171 1626 0
-172 1627 0
-173 1628 0
-1622 167 0
-1623 168 0
-1624 169 0
-1625 170 0
-1626 171 0
-1627 172 0
-1628 173 0
c (field_00005_00005=variant_fields_00001_00005_00005)
-167 657 0
-168 658 0
-169 659 0
-170 660 0
-171 661 0
-172 662 0
-173 663 0
-657 167 0
-658 168 0
-659 169 0
-660 170 0
-661 171 0
-662 172 0
-663 173 0
c (field_00005_00005=variant_fields_00002_00005_00005)
-167 1222 0
-168 1223 0
-169 1224 0
-170 1225 0
-171 1226 0
-172 1227 0
-173 1228 0
-1222 167 0
-1223 168 0
-1224 169 0
-1225 170 0
-1226 171 0
-1227 172 0
-1228 173 0
c (field_00004_00005=variant_fields_00004_00005_00006)
-122 2233 0
-123 2234 0
-124 2235 0
-2233 122 0
-2234 123 0
-2235 124 0
c (field_00005_00004=variant_fields_00003_00005_00006)
-163 1635 0
-164 1636 0
-165 1637 0
-166 1638 0
-1635 163 0
-1636 164 0
-1637 165 0
-1638 166 0
c (field_00005_00006=variant_fields_00001_00005_00006)
-180 670 0
-181 671 0
-182 672 0
-183 673 0
-184 674 0
-185 675 0
-186 676 0
-670 180 0
-671 181 0
-672 182 0
-673 183 0
-674 184 0
-675 185 0
-676 186 0
c (field_00006_00005=variant_fields_00002_00005_00006)
-242 1235 0
-243 1236 0
-244 1237 0
-245 1238 0
-246 1239 0
-247 1240 0
-248 1241 0
-1235 242 0
-1236 243 0
-1237 244 0
-1238 245 0
-1239 246 0
-1240 247 0
-1241 248 0
c (field_00003_00005=variant_fields_00004_00005_00007)
-74 2236 0
-75 2237 0
-76 2238 0
-77 2239 0
-78 2240 0
-79 2241 0
-80 2242 0
-2236 74 0
-2237 75 0
-2238 76 0
-2239 77 0
-2240 78 0
-2241 79 0
-2242 80 0
c (field_00005_00003=variant_fields_00003_00005_00007)
-150 1639 0
-151 1640 0
-152 1641 0
-153 1642 0
-154 1643 0
-155 1644 0
-156 1645 0
-1639 150 0
-1640 151 0
-1641 152 0
-1642 153 0
-1643 154 0
-1644 155 0
-1645 156 0
c (field_00005_00007=variant_fields_00001_00005_00007)
-193 683 0
-194 684 0
-195 685 0
-196 686 0
-683 193 0
-684 194 0
-685 195 0
-686 196 0
c (variant_fields_00002_00005_00007=field_00007_00005)
-1248 325 0
-1249 326 0
-1250 327 0
-1251 328 0
-1252 329 0
-1253 330 0
-1254 331 0
-325 1248 0
-326 1249 0
-327 1250 0
-328 1251 0
-329 1252 0
-330 1253 0
-331 1254 0
c (variant_fields_00004_00005_00008=field_00002_00005)
-2249 41 0
-2250 42 0
-2251 43 0
-41 2249 0
-42 2250 0
-43 2251 0
c (field_00005_00002=variant_fields_00003_00005_00008)
-137 1652 0
-138 1653 0
-139 1654 0
-140 1655 0
-141 1656 0
-142 1657 0
-143 1658 0
-1652 137 0
-1653 138 0
-1654 139 0
-1655 140 0
-1656 141 0
-1657 142 0
-1658 143 0
c (field_00005_00008=variant_fields_00001_00005_00008)
-197 687 0
-198 688 0
-199 689 0
-200 690 0
-201 691 0
-202 692 0
-687 197 0
-688 198 0
-689 199 0
-690 200 0
-691 201 0
-692 202 0
c (field_00008_00005=variant_fields_00002_00005_00008)
-405 1261 0
-406 1262 0
-407 1263 0
-408 1264 0
-409 1265 0
-410 1266 0
-411 1267 0
-1261 405 0
-1262 406 0
-1263 407 0
-1264 408 0
-1265 409 0
-1266 410 0
-1267 411 0
c (field_00001_00005=variant_fields_00004_00005_00009)
-16 2252 0
-17 2253 0
-18 2254 0
-19 2255 0
-20 2256 0
-21 2257 0
-2252 16 0
-2253 17 0
-2254 18 0
-2255 19 0
-2256 20 0
-2257 21 0
c (field_00005_00001=variant_fields_00003_00005_00009)
-131 1665 0
-132 1666 0
-133 1667 0
-134 1668 0
-135 1669 0
-136 1670 0
-1665 131 0
-1666 132 0
-1667 133 0
-1668 134 0
-1669 135 0
-1670 136 0
c (field_00005_00009=variant_fields_00001_00005_00009)
-203 693 0
-204 694 0
-205 695 0
-206 696 0
-207 697 0
-693 203 0
-694 204 0
-695 205 0
-696 206 0
-697 207 0
c (field_00009_00005=variant_fields_00002_00005_00009)
-468 1274 0
-469 1275 0
-470 1276 0
-471 1277 0
-472 1278 0
-473 1279 0
-1274 468 0
-1275 469 0
-1276 470 0
-1277 471 0
-1278 472 0
-1279 473 0
c (field_00009_00006=variant_fields_00004_00006_00001)
-474 2258 0
-475 2259 0
-476 2260 0
-477 2261 0
-478 2262 0
-479 2263 0
-2258 474 0
-2259 475 0
-2260 476 0
-2261 477 0
-2262 478 0
-2263 479 0
c (variant_fields_00003_00006_00001=field_00006_00009)
1671 -279 0
-1671 279 0
279 -1671 0
-279 1671 0
c (variant_fields_00001_00006_00001=field_00006_00001)
-698 208 0
-700 209 0
-702 210 0
701 211 0
-208 698 0
-209 700 0
-210 702 0
-211 -701 0
c (variant_fields_00002_00006_00001=field_00001_00006)
-1280 22 0
-1282 23 0
1281 24 0
-22 1280 0
-23 1282 0
-24 -1281 0
c (field_00008_00006=variant_fields_00004_00006_00002)
-418 2264 0
-419 2265 0
-420 2266 0
-421 2267 0
-422 2268 0
-423 2269 0
-424 2270 0
-2264 418 0
-2265 419 0
-2266 420 0
-2267 421 0
-2268 422 0
-2269 423 0
-2270 424 0
c (variant_fields_00003_00006_00002=field_00006_00008)
-1672 273 0
-1674 274 0
-1676 275 0
-1678 276 0
-1680 277 0
1679 278 0
-273 1672 0
-274 1674 0
-275 1676 0
-276 1678 0
-277 1680 0
-278 -1679 0
c (variant_fields_00001_00006_00002=field_00006_00002)
-703 212 0
-705 213 0
-707 214 0
-709 215 0
-711 216 0
-713 217 0
712 218 0
-212 703 0
-213 705 0
-214 707 0
-215 709 0
-216 711 0
-217 713 0
-218 -712 0
c (variant_fields_00002_00006_00002=field_00002_00006)
-1283 44 0
-1285 45 0
1284 46 0
-44 1283 0
-45 1285 0
-46 -1284 0
c (field_00007_00006=variant_fields_00004_00006_00003)
-338 2277 0
-339 2278 0
-340 2279 0
-341 2280 0
-342 2281 0
-343 2282 0
-344 2283 0
-2277 338 0
-2278 339 0
-2279 340 0
-2280 341 0
-2281 342 0
-2282 343 0
-2283 344 0
c (variant_fields_00003_00006_00003=field_00006_00007)
-1681 268 0
-1683 269 0
-1685 270 0
-1687 271 0
1686 272 0
-268 1681 0
-269 1683 0
-270 1685 0
-271 1687 0
-272 -1686 0
c (variant_fields_00001_00006_00003=field_00006_00003)
-714 225 0
-716 226 0
-718 227 0
-720 228 0
-722 229 0
-724 230 0
723 231 0
-225 714 0
-226 716 0
-227 718 0
-228 720 0
-229 722 0
-230 724 0
-231 -723 0
c (field_00003_00006=variant_fields_00002_00006_00003)
-87 1286 0
-88 1288 0
-89 1290 0
-90 1292 0
-91 1294 0
-92 1296 0
-93 -1295 0
-1286 87 0
-1288 88 0
-1290 89 0
-1292 90 0
-1294 91 0
-1296 92 0
1295 93 0
c (field_00006_00006=variant_fields_00004_00006_00004)
-255 2290 0
-256 2291 0
-257 2292 0
-258 2293 0
-259 2294 0
-260 2295 0
-261 2296 0
-2290 255 0
-2291 256 0
-2292 257 0
-2293 258 0
-2294 259 0
-2295 260 0
-2296 261 0
c (variant_fields_00003_00006_00004=field_00006_00006)
-1688 255 0
-1690 256 0
-1692 257 0
-1694 258 0
-1696 259 0
-1698 260 0
1697 261 0
-255 1688 0
-256 1690 0
-257 1692 0
-258 1694 0
-259 1696 0
-260 1698 0
-261 -1697 0
c (variant_fields_00001_00006_00004=field_00006_00004)
-725 238 0
-727 239 0
-729 240 0
728 241 0
-238 725 0
-239 727 0
-240 729 0
-241 -728 0
c (variant_fields_00002_00006_00004=field_00004_00006)
-1297 125 0
-1299 126 0
1298 127 0
-125 1297 0
-126 1299 0
-127 -1298 0
c (field_00005_00006=variant_fields_00004_00006_00005)
-180 2303 0
-181 2304 0
-182 2305 0
-183 2306 0
-184 2307 0
-185 2308 0
-186 2309 0
-2303 180 0
-2304 181 0
-2305 182 0
-2306 183 0
-2307 184 0
-2308 185 0
-2309 186 0
c (variant_fields_00003_00006_00005=field_00006_00005)
-1699 242 0
-1701 243 0
-1703 244 0
-1705 245 0
-1707 246 0
-1709 247 0
1708 248 0
-242 1699 0
-243 1701 0
-244 1703 0
-245 1705 0
-246 1707 0
-247 1709 0
-248 -1708 0
c (variant_fields_00001_00006_00005=field_00006_00005)
-730 242 0
-732 243 0
-734 244 0
-736 245 0
-738 246 0
-740 247 0
739 248 0
-242 730 0
-243 732 0
-244 734 0
-245 736 0
-246 738 0
-247 740 0
-248 -739 0
c (variant_fields_00002_00006_00005=field_00005_00006)
-1300 180 0
-1301 181 0
-1302 182 0
-1303 183 0
-1304 184 0
-1305 185 0
-1306 186 0
-180 1300 0
-181 1301 0
-182 1302 0
-183 1303 0
-184 1304 0
-185 1305 0
-186 1306 0
c (field_00004_00006=variant_fields_00004_00006_00006)
-125 2316 0
-126 2317 0
-127 2318 0
-2316 125 0
-2317 126 0
-2318 127 0
c (variant_fields_00003_00006_00006=field_00006_00004)
-1710 238 0
-1711 239 0
-1712 240 0
-1713 241 0
-238 1710 0
-239 1711 0
-240 1712 0
-241 1713 0
c (variant_fields_00001_00006_00006=field_00006_00006)
-741 255 0
-742 256 0
-743 257 0
-744 258 0
-745 259 0
-746 260 0
-747 261 0
-255 741 0
-256 742 0
-257 743 0
-258 744 0
-259 745 0
-260 746 0
-261 747 0
c (variant_fields_00002_00006_00006=field_00006_00006)
-1313 255 0
-1314 256 0
-1315 257 0
-1316 258 0
-1317 259 0
-1318 260 0
-1319 261 0
-255 1313 0
-256 1314 0
-257 1315 0
-258 1316 0
-259 1317 0
-260 1318 0
-261 1319 0
c (field_00003_00006=variant_fields_00004_00006_00007)
-87 2319 0
-88 2320 0
-89 2321 0
-90 2322 0
-91 2323 0
-92 2324 0
-93 2325 0
-2319 87 0
-2320 88 0
-2321 89 0
-2322 90 0
-2323 91 0
-2324 92 0
-2325 93 0
c (variant_fields_00003_00006_00007=field_00006_00003)
-1714 225 0
-1715 226 0
-1716 227 0
-1717 228 0
-1718 229 0
-1719 230 0
-1720 231 0
-225 1714 0
-226 1715 0
-227 1716 0
-228 1717 0
-229 1718 0
-230 1719 0
-231 1720 0
c (variant_fields_00001_00006_00007=field_00006_00007)
-754 268 0
-755 269 0
-756 270 0
-757 271 0
-758 272 0
-268 754 0
-269 755 0
-270 756 0
-271 757 0
-272 758 0
c (variant_fields_00002_00006_00007=field_00007_00006)
-1326 338 0
-1327 339 0
-1328 340 0
-1329 341 0
-1330 342 0
-1331 343 0
-1332 344 0
-338 1326 0
-339 1327 0
-340 1328 0
-341 1329 0
-342 1330 0
-343 1331 0
-344 1332 0
c (field_00002_00006=variant_fields_00004_00006_00008)
-44 2332 0
-45 2333 0
-46 2334 0
-2332 44 0
-2333 45 0
-2334 46 0
c (variant_fields_00003_00006_00008=field_00006_00002)
-1727 212 0
-1728 213 0
-1729 214 0
-1730 215 0
-1731 216 0
-1732 217 0
-1733 218 0
-212 1727 0
-213 1728 0
-214 1729 0
-215 1730 0
-216 1731 0
-217 1732 0
-218 1733 0
c (variant_fields_00001_00006_00008=field_00006_00008)
-759 273 0
-760 274 0
-761 275 0
-762 276 0
-763 277 0
-764 278 0
-273 759 0
-274 760 0
-275 761 0
-276 762 0
-277 763 0
-278 764 0
c (variant_fields_00002_00006_00008=field_00008_00006)
-1339 418 0
-1340 419 0
-1341 420 0
-1342 421 0
-1343 422 0
-1344 423 0
-1345 424 0
-418 1339 0
-419 1340 0
-420 1341 0
-421 1342 0
-422 1343 0
-423 1344 0
-424 1345 0
c (field_00001_00006=variant_fields_00004_00006_00009)
-22 2335 0
-23 2336 0
-24 2337 0
-2335 22 0
-2336 23 0
-2337 24 0
c (variant_fields_00003_00006_00009=field_00006_00001)
-1740 208 0
-1741 209 0
-1742 210 0
-1743 211 0
-208 1740 0
-209 1741 0
-210 1742 0
-211 1743 0
c (variant_fields_00001_00006_00009=field_00006_00009)
765 -279 0
-765 279 0
279 -765 0
-279 765 0
c (variant_fields_00002_00006_00009=field_00009_00006)
-1352 474 0
-1353 475 0
-1354 476 0
-1355 477 0
-1356 478 0
-1357 479 0
-474 1352 0
-475 1353 0
-476 1354 0
-477 1355 0
-478 1356 0
-479 1357 0
c (variant_fields_00004_00007_00001=field_00009_00007)
-2338 480 0
-480 2338 0
c (variant_fields_00003_00007_00001=field_00007_00009)
-1744 363 0
-1745 364 0
-1746 365 0
-1747 366 0
-1748 367 0
-1749 368 0
-363 1744 0
-364 1745 0
-365 1746 0
-366 1747 0
-367 1748 0
-368 1749 0
c (variant_fields_00001_00007_00001=field_00007_00001)
-766 280 0
-767 281 0
-768 282 0
-769 283 0
-770 284 0
-771 285 0
-772 286 0
-280 766 0
-281 767 0
-282 768 0
-283 769 0
-284 770 0
-285 771 0
-286 772 0
c (variant_fields_00002_00007_00001=field_00001_00007)
-1358 25 0
-25 1358 0
c (field_00008_00007=variant_fields_00004_00007_00002)
-431 2339 0
-432 2341 0
-433 2343 0
-434 2345 0
-435 2347 0
-436 -2346 0
-2339 431 0
-2341 432 0
-2343 433 0
-2345 434 0
-2347 435 0
2346 436 0
c (variant_fields_00003_00007_00002=field_00007_00008)
-1750 357 0
-1751 358 0
-1752 359 0
-1753 360 0
-1754 361 0
-1755 362 0
-357 1750 0
-358 1751 0
-359 1752 0
-360 1753 0
-361 1754 0
-362 1755 0
c (variant_fields_00001_00007_00002=field_00007_00002)
-779 293 0
-780 294 0
-781 295 0
-782 296 0
-783 297 0
-784 298 0
-785 299 0
-786 300 0
-293 779 0
-294 780 0
-295 781 0
-296 782 0
-297 783 0
-298 784 0
-299 785 0
-300 786 0
c (variant_fields_00002_00007_00002=field_00002_00007)
-1359 47 0
-1361 48 0
1360 49 0
-47 1359 0
-48 1361 0
-49 -1360 0
c (variant_fields_00004_00007_00003=field_00007_00007)
-2348 351 0
-2350 352 0
-2352 353 0
-2354 354 0
-2356 355 0
2355 356 0
-351 2348 0
-352 2350 0
-353 2352 0
-354 2354 0
-355 2356 0
-356 -2355 0
c (variant_fields_00003_00007_00003=field_00007_00007)
-1756 351 0
-1757 352 0
-1758 353 0
-1759 354 0
-1760 355 0
-1761 356 0
-351 1756 0
-352 1757 0
-353 1758 0
-354 1759 0
-355 1760 0
-356 1761 0
c (variant_fields_00001_00007_00003=field_00007_00003)
-793 307 0
-794 308 0
-795 309 0
-796 310 0
-797 311 0
-798 312 0
-799 313 0
-800 314 0
-307 793 0
-308 794 0
-309 795 0
-310 796 0
-311 797 0
-312 798 0
-313 799 0
-314 800 0
c (field_00003_00007=variant_fields_00002_00007_00003)
-100 1362 0
-101 1364 0
-102 -1363 0
-1362 100 0
-1364 101 0
1363 102 0
c (variant_fields_00004_00007_00004=field_00006_00007)
-2357 268 0
-2359 269 0
-2361 270 0
-2363 271 0
2362 272 0
-268 2357 0
-269 2359 0
-270 2361 0
-271 2363 0
-272 -2362 0
c (variant_fields_00003_00007_00004=field_00007_00006)
-1762 338 0
-1763 339 0
-1764 340 0
-1765 341 0
-1766 342 0
-1767 343 0
-1768 344 0
-338 1762 0
-339 1763 0
-340 1764 0
-341 1765 0
-342 1766 0
-343 1767 0
-344 1768 0
c (variant_fields_00001_00007_00004=field_00007_00004)
-807 321 0
-808 322 0
-809 323 0
-810 324 0
-321 807 0
-322 808 0
-323 809 0
-324 810 0
c (field_00004_00007=variant_fields_00002_00007_00004)
-128 1365 0
-1365 128 0
c (variant_fields_00004_00007_00005=field_00005_00007)
-2364 193 0
-2365 194 0
-2366 195 0
-2367 196 0
-193 2364 0
-194 2365 0
-195 2366 0
-196 2367 0
c (variant_fields_00003_00007_00005=field_00007_00005)
-1775 325 0
-1776 326 0
-1777 327 0
-1778 328 0
-1779 329 0
-1780 330 0
-1781 331 0
-325 1775 0
-326 1776 0
-327 1777 0
-328 1778 0
-329 1779 0
-330 1780 0
-331 1781 0
c (variant_fields_00001_00007_00005=field_00007_00005)
-811 325 0
-812 326 0
-813 327 0
-814 328 0
-815 329 0
-816 330 0
-817 331 0
-325 811 0
-326 812 0
-327 813 0
-328 814 0
-329 815 0
-330 816 0
-331 817 0
c (variant_fields_00002_00007_00005=field_00005_00007)
-1366 193 0
-1367 194 0
-1368 195 0
-1369 196 0
-193 1366 0
-194 1367 0
-195 1368 0
-196 1369 0
c (variant_fields_00004_00007_00006=field_00004_00007)
-2368 128 0
-128 2368 0
c (variant_fields_00003_00007_00006=field_00007_00004)
-1788 321 0
-1789 322 0
-1790 323 0
-1791 324 0
-321 1788 0
-322 1789 0
-323 1790 0
-324 1791 0
c (variant_fields_00001_00007_00006=field_00007_00006)
-824 338 0
-825 339 0
-826 340 0
-827 341 0
-828 342 0
-829 343 0
-830 344 0
-338 824 0
-339 825 0
-340 826 0
-341 827 0
-342 828 0
-343 829 0
-344 830 0
c (variant_fields_00002_00007_00006=field_00006_00007)
-1370 268 0
-1371 269 0
-1372 270 0
-1373 271 0
-1374 272 0
-268 1370 0
-269 1371 0
-270 1372 0
-271 1373 0
-272 1374 0
c (field_00003_00007=variant_fields_00004_00007_00007)
-100 2369 0
-101 2370 0
-102 2371 0
-2369 100 0
-2370 101 0
-2371 102 0
c (variant_fields_00003_00007_00007=field_00007_00003)
-1792 307 0
-1793 308 0
-1794 309 0
-1795 310 0
-1796 311 0
-1797 312 0
-1798 313 0
-1799 314 0
-307 1792 0
-308 1793 0
-309 1794 0
-310 1795 0
-311 1796 0
-312 1797 0
-313 1798 0
-314 1799 0
c (variant_fields_00001_00007_00007=field_00007_00007)
-837 351 0
-838 352 0
-839 353 0
-840 354 0
-841 355 0
-842 356 0
-351 837 0
-352 838 0
-353 839 0
-354 840 0
-355 841 0
-356 842 0
c (variant_fields_00002_00007_00007=field_00007_00007)
-1375 351 0
-1376 352 0
-1377 353 0
-1378 354 0
-1379 355 0
-1380 356 0
-351 1375 0
-352 1376 0
-353 1377 0
-354 1378 0
-355 1379 0
-356 1380 0
c (variant_fields_00004_00007_00008=field_00002_00007)
-2372 47 0
-2373 48 0
-2374 49 0
-47 2372 0
-48 2373 0
-49 2374 0
c (variant_fields_00003_00007_00008=field_00007_00002)
-1806 293 0
-1807 294 0
-1808 295 0
-1809 296 0
-1810 297 0
-1811 298 0
-1812 299 0
-1813 300 0
-293 1806 0
-294 1807 0
-295 1808 0
-296 1809 0
-297 1810 0
-298 1811 0
-299 1812 0
-300 1813 0
c (variant_fields_00001_00007_00008=field_00007_00008)
-843 357 0
-844 358 0
-845 359 0
-846 360 0
-847 361 0
-848 362 0
-357 843 0
-358 844 0
-359 845 0
-360 846 0
-361 847 0
-362 848 0
c (field_00008_00007=variant_fields_00002_00007_00008)
-431 1381 0
-432 1382 0
-433 1383 0
-434 1384 0
-435 1385 0
-436 1386 0
-1381 431 0
-1382 432 0
-1383 433 0
-1384 434 0
-1385 435 0
-1386 436 0
c (variant_fields_00004_00007_00009=field_00001_00007)
-2375 25 0
-25 2375 0
c (variant_fields_00003_00007_00009=field_00007_00001)
-1820 280 0
-1821 281 0
-1822 282 0
-1823 283 0
-1824 284 0
-1825 285 0
-1826 286 0
-280 1820 0
-281 1821 0
-282 1822 0
-283 1823 0
-284 1824 0
-285 1825 0
-286 1826 0
c (variant_fields_00001_00007_00009=field_00007_00009)
-849 363 0
-850 364 0
-851 365 0
-852 366 0
-853 367 0
-854 368 0
-363 849 0
-364 850 0
-365 851 0
-366 852 0
-367 853 0
-368 854 0
c (variant_fields_00002_00007_00009=field_00009_00007)
-1387 480 0
-480 1387 0
c (field_00009_00008=variant_fields_00004_00008_00001)
-481 2376 0
-482 2377 0
-483 2378 0
-484 2379 0
-485 2380 0
-2376 481 0
-2377 482 0
-2378 483 0
-2379 484 0
-2380 485 0
c (field_00008_00009=variant_fields_00003_00008_00001)
-443 1833 0
-444 1835 0
-445 1837 0
-446 -1836 0
-1833 443 0
-1835 444 0
-1837 445 0
1836 446 0
c (field_00008_00001=variant_fields_00001_00008_00001)
-369 855 0
-370 857 0
-371 859 0
-372 -858 0
-855 369 0
-857 370 0
-859 371 0
858 372 0
c (variant_fields_00002_00008_00001=field_00001_00008)
-1388 26 0
-1389 27 0
-1390 28 0
-1391 29 0
-1392 30 0
-26 1388 0
-27 1389 0
-28 1390 0
-29 1391 0
-30 1392 0
c (field_00008_00008=variant_fields_00004_00008_00002)
-437 2381 0
-438 2382 0
-439 2383 0
-440 2384 0
-441 2385 0
-442 2386 0
-2381 437 0
-2382 438 0
-2383 439 0
-2384 440 0
-2385 441 0
-2386 442 0
c (field_00008_00008=variant_fields_00003_00008_00002)
-437 1838 0
-438 1840 0
-439 1842 0
-440 1844 0
-441 1846 0
-442 -1845 0
-1838 437 0
-1840 438 0
-1842 439 0
-1844 440 0
-1846 441 0
1845 442 0
c (field_00008_00002=variant_fields_00001_00008_00002)
-373 860 0
-374 862 0
-375 864 0
-376 866 0
-377 868 0
-378 870 0
-379 872 0
-380 -871 0
-860 373 0
-862 374 0
-864 375 0
-866 376 0
-868 377 0
-870 378 0
-872 379 0
871 380 0
c (variant_fields_00002_00008_00002=field_00002_00008)
-1393 50 0
-50 1393 0
c (variant_fields_00004_00008_00003=field_00007_00008)
-2387 357 0
-2388 358 0
-2389 359 0
-2390 360 0
-2391 361 0
-2392 362 0
-357 2387 0
-358 2388 0
-359 2389 0
-360 2390 0
-361 2391 0
-362 2392 0
c (field_00008_00007=variant_fields_00003_00008_00003)
-431 1847 0
-432 1849 0
-433 1851 0
-434 1853 0
-435 1855 0
-436 -1854 0
-1847 431 0
-1849 432 0
-1851 433 0
-1853 434 0
-1855 435 0
1854 436 0
c (field_00008_00003=variant_fields_00001_00008_00003)
-387 873 0
-388 875 0
-389 877 0
-390 879 0
-391 881 0
-392 883 0
-393 885 0
-394 -884 0
-873 387 0
-875 388 0
-877 389 0
-879 390 0
-881 391 0
-883 392 0
-885 393 0
884 394 0
c (field_00003_00008=variant_fields_00002_00008_00003)
-103 1394 0
-104 1395 0
-105 1396 0
-106 1397 0
-107 1398 0
-1394 103 0
-1395 104 0
-1396 105 0
-1397 106 0
-1398 107 0
c (variant_fields_00004_00008_00004=field_00006_00008)
-2393 273 0
-2394 274 0
-2395 275 0
-2396 276 0
-2397 277 0
-2398 278 0
-273 2393 0
-274 2394 0
-275 2395 0
-276 2396 0
-277 2397 0
-278 2398 0
c (field_00008_00006=variant_fields_00003_00008_00004)
-418 1856 0
-419 1858 0
-420 1860 0
-421 1862 0
-422 1864 0
-423 1866 0
-424 -1865 0
-1856 418 0
-1858 419 0
-1860 420 0
-1862 421 0
-1864 422 0
-1866 423 0
1865 424 0
c (field_00008_00004=variant_fields_00001_00008_00004)
-401 886 0
-402 888 0
-403 890 0
-404 -889 0
-886 401 0
-888 402 0
-890 403 0
889 404 0
c (field_00004_00008=variant_fields_00002_00008_00004)
-129 1399 0
-1399 129 0
c (variant_fields_00004_00008_00005=field_00005_00008)
-2399 197 0
-2400 198 0
-2401 199 0
-2402 200 0
-2403 201 0
-2404 202 0
-197 2399 0
-198 2400 0
-199 2401 0
-200 2402 0
-201 2403 0
-202 2404 0
c (field_00008_00005=variant_fields_00003_00008_00005)
-405 1867 0
-406 1869 0
-407 1871 0
-408 1873 0
-409 1875 0
-410 1877 0
-411 -1876 0
-1867 405 0
-1869 406 0
-1871 407 0
-1873 408 0
-1875 409 0
-1877 410 0
1876 411 0
c (field_00008_00005=variant_fields_00001_00008_00005)
-405 891 0
-406 893 0
-407 895 0
-408 897 0
-409 899 0
-410 901 0
-411 -900 0
-891 405 0
-893 406 0
-895 407 0
-897 408 0
-899 409 0
-901 410 0
900 411 0
c (field_00005_00008=variant_fields_00002_00008_00005)
-197 1400 0
-198 1401 0
-199 1402 0
-200 1403 0
-201 1404 0
-202 1405 0
-1400 197 0
-1401 198 0
-1402 199 0
-1403 200 0
-1404 201 0
-1405 202 0
c (field_00004_00008=variant_fields_00004_00008_00006)
-129 2405 0
-2405 129 0
c (field_00008_00004=variant_fields_00003_00008_00006)
-401 1878 0
-402 1879 0
-403 1880 0
-404 1881 0
-1878 401 0
-1879 402 0
-1880 403 0
-1881 404 0
c (field_00008_00006=variant_fields_00001_00008_00006)
-418 902 0
-419 903 0
-420 904 0
-421 905 0
-422 906 0
-423 907 0
-424 908 0
-902 418 0
-903 419 0
-904 420 0
-905 421 0
-906 422 0
-907 423 0
-908 424 0
c (variant_fields_00002_00008_00006=field_00006_00008)
-1406 273 0
-1407 274 0
-1408 275 0
-1409 276 0
-1410 277 0
-1411 278 0
-273 1406 0
-274 1407 0
-275 1408 0
-276 1409 0
-277 1410 0
-278 1411 0
c (field_00003_00008=variant_fields_00004_00008_00007)
-103 2406 0
-104 2407 0
-105 2408 0
-106 2409 0
-107 2410 0
-2406 103 0
-2407 104 0
-2408 105 0
-2409 106 0
-2410 107 0
c (field_00008_00003=variant_fields_00003_00008_00007)
-387 1882 0
-388 1883 0
-389 1884 0
-390 1885 0
-391 1886 0
-392 1887 0
-393 1888 0
-394 1889 0
-1882 387 0
-1883 388 0
-1884 389 0
-1885 390 0
-1886 391 0
-1887 392 0
-1888 393 0
-1889 394 0
c (field_00008_00007=variant_fields_00001_00008_00007)
-431 915 0
-432 916 0
-433 917 0
-434 918 0
-435 919 0
-436 920 0
-915 431 0
-916 432 0
-917 433 0
-918 434 0
-919 435 0
-920 436 0
c (variant_fields_00002_00008_00007=field_00007_00008)
-1412 357 0
-1413 358 0
-1414 359 0
-1415 360 0
-1416 361 0
-1417 362 0
-357 1412 0
-358 1413 0
-359 1414 0
-360 1415 0
-361 1416 0
-362 1417 0
c (variant_fields_00004_00008_00008=field_00002_00008)
-2411 50 0
-50 2411 0
c (field_00008_00002=variant_fields_00003_00008_00008)
-373 1896 0
-374 1897 0
-375 1898 0
-376 1899 0
-377 1900 0
-378 1901 0
-379 1902 0
-380 1903 0
-1896 373 0
-1897 374 0
-1898 375 0
-1899 376 0
-1900 377 0
-1901 378 0
-1902 379 0
-1903 380 0
c (field_00008_00008=variant_fields_00001_00008_00008)
-437 921 0
-438 922 0
-439 923 0
-440 924 0
-441 925 0
-442 926 0
-921 437 0
-922 438 0
-923 439 0
-924 440 0
-925 441 0
-926 442 0
c (field_00008_00008=variant_fields_00002_00008_00008)
-437 1418 0
-438 1419 0
-439 1420 0
-440 1421 0
-441 1422 0
-442 1423 0
-1418 437 0
-1419 438 0
-1420 439 0
-1421 440 0
-1422 441 0
-1423 442 0
c (variant_fields_00004_00008_00009=field_00001_00008)
-2412 26 0
-2413 27 0
-2414 28 0
-2415 29 0
-2416 30 0
-26 2412 0
-27 2413 0
-28 2414 0
-29 2415 0
-30 2416 0
c (field_00008_00001=variant_fields_00003_00008_00009)
-369 1910 0
-370 1911 0
-371 1912 0
-372 1913 0
-1910 369 0
-1911 370 0
-1912 371 0
-1913 372 0
c (field_00008_00009=variant_fields_00001_00008_00009)
-443 927 0
-444 928 0
-445 929 0
-446 930 0
-927 443 0
-928 444 0
-929 445 0
-930 446 0
c (field_00009_00008=variant_fields_00002_00008_00009)
-481 1424 0
-482 1425 0
-483 1426 0
-484 1427 0
-485 1428 0
-1424 481 0
-1425 482 0
-1426 483 0
-1427 484 0
-1428 485 0
c (field_00009_00009=variant_fields_00004_00009_00001)
-486 2417 0
-487 2418 0
-488 2419 0
-489 2420 0
-490 2421 0
-491 2422 0
-2417 486 0
-2418 487 0
-2419 488 0
-2420 489 0
-2421 490 0
-2422 491 0
c (field_00009_00009=variant_fields_00003_00009_00001)
-486 1914 0
-487 1915 0
-488 1916 0
-489 1917 0
-490 1918 0
-491 1919 0
-1914 486 0
-1915 487 0
-1916 488 0
-1917 489 0
-1918 490 0
-1919 491 0
c (field_00009_00001=variant_fields_00001_00009_00001)
-447 931 0
-448 932 0
-449 933 0
-450 934 0
-451 935 0
-452 936 0
-453 937 0
-931 447 0
-932 448 0
-933 449 0
-934 450 0
-935 451 0
-936 452 0
-937 453 0
c (field_00001_00009=variant_fields_00002_00009_00001)
-31 1429 0
-32 1430 0
-33 1431 0
-34 1432 0
-35 1433 0
-36 1434 0
-1429 31 0
-1430 32 0
-1431 33 0
-1432 34 0
-1433 35 0
-1434 36 0
c (field_00008_00009=variant_fields_00004_00009_00002)
-443 2423 0
-444 2424 0
-445 2425 0
-446 2426 0
-2423 443 0
-2424 444 0
-2425 445 0
-2426 446 0
c (field_00009_00008=variant_fields_00003_00009_00002)
-481 1920 0
-482 1921 0
-483 1922 0
-484 1923 0
-485 1924 0
-1920 481 0
-1921 482 0
-1922 483 0
-1923 484 0
-1924 485 0
c (field_00009_00002=variant_fields_00001_00009_00002)
460 -944 0
-460 944 0
944 -460 0
-944 460 0
c (variant_fields_00002_00009_00002=field_00002_00009)
-1435 51 0
-51 1435 0
c (variant_fields_00004_00009_00003=field_00007_00009)
-2427 363 0
-2428 364 0
-2429 365 0
-2430 366 0
-2431 367 0
-2432 368 0
-363 2427 0
-364 2428 0
-365 2429 0
-366 2430 0
-367 2431 0
-368 2432 0
c (field_00009_00007=variant_fields_00003_00009_00003)
-480 1925 0
-1925 480 0
c (field_00009_00003=variant_fields_00001_00009_00003)
-461 945 0
-462 946 0
-463 947 0
-464 948 0
-465 949 0
-466 950 0
-945 461 0
-946 462 0
-947 463 0
-948 464 0
-949 465 0
-950 466 0
c (field_00003_00009=variant_fields_00002_00009_00003)
-108 1436 0
-109 1437 0
-110 1438 0
-111 1439 0
-112 1440 0
-113 1441 0
-1436 108 0
-1437 109 0
-1438 110 0
-1439 111 0
-1440 112 0
-1441 113 0
c (variant_fields_00004_00009_00004=field_00006_00009)
2433 -279 0
-2433 279 0
279 -2433 0
-279 2433 0
c (field_00009_00006=variant_fields_00003_00009_00004)
-474 1926 0
-475 1927 0
-476 1928 0
-477 1929 0
-478 1930 0
-479 1931 0
-1926 474 0
-1927 475 0
-1928 476 0
-1929 477 0
-1930 478 0
-1931 479 0
c (field_00009_00004=variant_fields_00001_00009_00004)
-467 951 0
-951 467 0
c (field_00004_00009=variant_fields_00002_00009_00004)
-130 1442 0
-1442 130 0
c (field_00005_00009=variant_fields_00004_00009_00005)
-203 2434 0
-204 2435 0
-205 2436 0
-206 2437 0
-207 2438 0
-2434 203 0
-2435 204 0
-2436 205 0
-2437 206 0
-2438 207 0
c (field_00009_00005=variant_fields_00003_00009_00005)
-468 1932 0
-469 1933 0
-470 1934 0
-471 1935 0
-472 1936 0
-473 1937 0
-1932 468 0
-1933 469 0
-1934 470 0
-1935 471 0
-1936 472 0
-1937 473 0
c (field_00009_00005=variant_fields_00001_00009_00005)
-468 952 0
-469 953 0
-470 954 0
-471 955 0
-472 956 0
-473 957 0
-952 468 0
-953 469 0
-954 470 0
-955 471 0
-956 472 0
-957 473 0
c (field_00005_00009=variant_fields_00002_00009_00005)
-203 1443 0
-204 1444 0
-205 1445 0
-206 1446 0
-207 1447 0
-1443 203 0
-1444 204 0
-1445 205 0
-1446 206 0
-1447 207 0
c (field_00004_00009=variant_fields_00004_00009_00006)
-130 2439 0
-2439 130 0
c (field_00009_00004=variant_fields_00003_00009_00006)
-467 1938 0
-1938 467 0
c (field_00009_00006=variant_fields_00001_00009_00006)
-474 958 0
-475 959 0
-476 960 0
-477 961 0
-478 962 0
-479 963 0
-958 474 0
-959 475 0
-960 476 0
-961 477 0
-962 478 0
-963 479 0
c (field_00006_00009=variant_fields_00002_00009_00006)
279 -1448 0
-279 1448 0
1448 -279 0
-1448 279 0
c (field_00003_00009=variant_fields_00004_00009_00007)
-108 2440 0
-109 2441 0
-110 2442 0
-111 2443 0
-112 2444 0
-113 2445 0
-2440 108 0
-2441 109 0
-2442 110 0
-2443 111 0
-2444 112 0
-2445 113 0
c (field_00009_00003=variant_fields_00003_00009_00007)
-461 1939 0
-462 1940 0
-463 1941 0
-464 1942 0
-465 1943 0
-466 1944 0
-1939 461 0
-1940 462 0
-1941 463 0
-1942 464 0
-1943 465 0
-1944 466 0
c (field_00009_00007=variant_fields_00001_00009_00007)
-480 964 0
-964 480 0
c (variant_fields_00002_00009_00007=field_00007_00009)
-1449 363 0
-1450 364 0
-1451 365 0
-1452 366 0
-1453 367 0
-1454 368 0
-363 1449 0
-364 1450 0
-365 1451 0
-366 1452 0
-367 1453 0
-368 1454 0
c (variant_fields_00004_00009_00008=field_00002_00009)
-2446 51 0
-51 2446 0
c (field_00009_00002=variant_fields_00003_00009_00008)
460 -1945 0
-460 1945 0
1945 -460 0
-1945 460 0
c (field_00009_00008=variant_fields_00001_00009_00008)
-481 965 0
-482 966 0
-483 967 0
-484 968 0
-485 969 0
-965 481 0
-966 482 0
-967 483 0
-968 484 0
-969 485 0
c (field_00008_00009=variant_fields_00002_00009_00008)
-443 1455 0
-444 1456 0
-445 1457 0
-446 1458 0
-1455 443 0
-1456 444 0
-1457 445 0
-1458 446 0
c (variant_fields_00004_00009_00009=field_00001_00009)
-2447 31 0
-2448 32 0
-2449 33 0
-2450 34 0
-2451 35 0
-2452 36 0
-31 2447 0
-32 2448 0
-33 2449 0
-34 2450 0
-35 2451 0
-36 2452 0
c (field_00009_00001=variant_fields_00003_00009_00009)
-447 1946 0
-448 1947 0
-449 1948 0
-450 1949 0
-451 1950 0
-452 1951 0
-453 1952 0
-1946 447 0
-1947 448 0
-1948 449 0
-1949 450 0
-1950 451 0
-1951 452 0
-1952 453 0
c (field_00009_00009=variant_fields_00001_00009_00009)
-486 970 0
-487 971 0
-488 972 0
-489 973 0
-490 974 0
-491 975 0
-970 486 0
-971 487 0
-972 488 0
-973 489 0
-974 490 0
-975 491 0
c (field_00009_00009=variant_fields_00002_00009_00009)
-486 1459 0
-487 1460 0
-488 1461 0
-489 1462 0
-490 1463 0
-491 1464 0
-1459 486 0
-1460 487 0
-1461 488 0
-1462 489 0
-1463 490 0
-1464 491 0
c (SATLiteral(2481) -> SATLiteral(2516))
-2481 2516 0
c (SATLiteral(2483) -> SATLiteral(2517))
-2483 2517 0
c (SATLiteral(2485) -> SATLiteral(2551))
-2485 2551 0
c (SATLiteral(2487) -> SATLiteral(2587))
-2487 2587 0
c (SATLiteral(2490) -> SATLiteral(2616))
-2490 2616 0
c (SATLiteral(2492) -> SATLiteral(2617))
-2492 2617 0
c (SATLiteral(2494) -> SATLiteral(2644))
-2494 2644 0
c (SATLiteral(2495) -> SATLiteral(2645))
-2495 2645 0
c (SATLiteral(2499) -> SATLiteral(2646))
-2499 2646 0
c (SATLiteral(2501) -> SATLiteral(2647))
-2501 2647 0
c (SATLiteral(2503) -> SATLiteral(2668))
-2503 2668 0
c (SATLiteral(2505) -> SATLiteral(2706))
-2505 2706 0
c (SATLiteral(2508) -> SATLiteral(2712))
-2508 2712 0
c (SATLiteral(2510) -> SATLiteral(2713))
-2510 2713 0
c (SATLiteral(2513) -> SATLiteral(2714))
-2513 2714 0
c SATLiteral(2462)
2462 0
c SATLiteral(2463)
2463 0
c SATLiteral(2464)
2464 0
c SATLiteral(2465)
2465 0
c SATLiteral(2466)
2466 0
c SATLiteral(2467)
2467 0
c SATLiteral(2468)
2468 0
c SATLiteral(2469)
2469 0
c SATLiteral(2470)
2470 0
c SATLiteral(2480)
2480 0
c SATLiteral(2481)
2481 0
c SATLiteral(2482)
2482 0
c SATLiteral(2483)
2483 0
c SATLiteral(2484)
2484 0
c SATLiteral(2485)
2485 0
c SATLiteral(2486)
2486 0
c SATLiteral(2487)
2487 0
c SATLiteral(2488)
2488 0
c SATLiteral(2489)
2489 0
c SATLiteral(2490)
2490 0
c SATLiteral(2491)
2491 0
c SATLiteral(2492)
2492 0
c SATLiteral(2493)
2493 0
c SATLiteral(2494)
2494 0
c SATLiteral(2495)
2495 0
c SATLiteral(2496)
2496 0
c SATLiteral(2497)
2497 0
c SATLiteral(2498)
2498 0
c SATLiteral(2499)
2499 0
c SATLiteral(2500)
2500 0
c SATLiteral(2501)
2501 0
c SATLiteral(2502)
2502 0
c SATLiteral(2503)
2503 0
c SATLiteral(2504)
2504 0
c SATLiteral(2505)
2505 0
c SATLiteral(2506)
2506 0
c SATLiteral(2507)
2507 0
c SATLiteral(2508)
2508 0
c SATLiteral(2509)
2509 0
c SATLiteral(2510)
2510 0
c SATLiteral(2511)
2511 0
c SATLiteral(2512)
2512 0
c SATLiteral(2513)
2513 0
c SATLiteral(2514)
2514 0
c SATLiteral(2515)
2515 0
c SATLiteral(2471)
2471 0
c SATLiteral(2472)
2472 0
c SATLiteral(2473)
2473 0
c SATLiteral(2474)
2474 0
c SATLiteral(2475)
2475 0
c SATLiteral(2476)
2476 0
c SATLiteral(2477)
2477 0
c SATLiteral(2478)
2478 0
c SATLiteral(2479)
2479 0
c SATLiteral(2453)
2453 0
c SATLiteral(2454)
2454 0
c SATLiteral(2455)
2455 0
c SATLiteral(2456)
2456 0
c SATLiteral(2457)
2457 0
c SATLiteral(2458)
2458 0
c SATLiteral(2459)
2459 0
c SATLiteral(2460)
2460 0
c SATLiteral(2461)
2461 0
c (SATLiteral(2453) -> SATLiteral(2715))
-2453 2715 0
c (SATLiteral(2453) -> SATLiteral(2716))
-2453 2716 0
c (SATLiteral(2453) -> SATLiteral(2717))
-2453 2717 0
c (SATLiteral(2453) -> SATLiteral(2718))
-2453 2718 0
c (SATLiteral(2453) -> SATLiteral(2719))
-2453 2719 0
c (SATLiteral(2453) -> SATLiteral(2720))
-2453 2720 0
c (SATLiteral(2453) -> SATLiteral(2721))
-2453 2721 0
c (SATLiteral(2454) -> SATLiteral(2722))
-2454 2722 0
c (SATLiteral(2454) -> SATLiteral(2723))
-2454 2723 0
c (SATLiteral(2454) -> SATLiteral(2724))
-2454 2724 0
c (SATLiteral(2454) -> SATLiteral(2725))
-2454 2725 0
c (SATLiteral(2454) -> SATLiteral(2726))
-2454 2726 0
c (SATLiteral(2454) -> SATLiteral(2727))
-2454 2727 0
c (SATLiteral(2454) -> SATLiteral(2728))
-2454 2728 0
c (SATLiteral(2454) -> SATLiteral(2729))
-2454 2729 0
c (SATLiteral(2454) -> SATLiteral(2730))
-2454 2730 0
c (SATLiteral(2455) -> SATLiteral(2731))
-2455 2731 0
c (SATLiteral(2455) -> SATLiteral(2732))
-2455 2732 0
c (SATLiteral(2455) -> SATLiteral(2733))
-2455 2733 0
c (SATLiteral(2455) -> SATLiteral(2734))
-2455 2734 0
c (SATLiteral(2455) -> SATLiteral(2735))
-2455 2735 0
c (SATLiteral(2455) -> SATLiteral(2736))
-2455 2736 0
c (SATLiteral(2455) -> SATLiteral(2737))
-2455 2737 0
c (SATLiteral(2455) -> SATLiteral(2738))
-2455 2738 0
c (SATLiteral(2455) -> SATLiteral(2739))
-2455 2739 0
c (SATLiteral(2456) -> SATLiteral(2740))
-2456 2740 0
c (SATLiteral(2456) -> SATLiteral(2741))
-2456 2741 0
c (SATLiteral(2456) -> SATLiteral(2742))
-2456 2742 0
c (SATLiteral(2456) -> SATLiteral(2743))
-2456 2743 0
c (SATLiteral(2456) -> SATLiteral(2744))
-2456 2744 0
c (SATLiteral(2457) -> SATLiteral(2745))
-2457 2745 0
c (SATLiteral(2457) -> SATLiteral(2746))
-2457 2746 0
c (SATLiteral(2457) -> SATLiteral(2747))
-2457 2747 0
c (SATLiteral(2457) -> SATLiteral(2748))
-2457 2748 0
c (SATLiteral(2457) -> SATLiteral(2749))
-2457 2749 0
c (SATLiteral(2457) -> SATLiteral(2750))
-2457 2750 0
c (SATLiteral(2457) -> SATLiteral(2751))
-2457 2751 0
c (SATLiteral(2457) -> SATLiteral(2752))
-2457 2752 0
c (SATLiteral(2457) -> SATLiteral(2753))
-2457 2753 0
c (SATLiteral(2458) -> SATLiteral(2754))
-2458 2754 0
c (SATLiteral(2458) -> SATLiteral(2755))
-2458 2755 0
c (SATLiteral(2458) -> SATLiteral(2756))
-2458 2756 0
c (SATLiteral(2458) -> SATLiteral(2757))
-2458 2757 0
c (SATLiteral(2458) -> SATLiteral(2758))
-2458 2758 0
c (SATLiteral(2458) -> SATLiteral(2759))
-2458 2759 0
c (SATLiteral(2458) -> SATLiteral(2760))
-2458 2760 0
c (SATLiteral(2458) -> SATLiteral(2761))
-2458 2761 0
c (SATLiteral(2458) -> SATLiteral(2762))
-2458 2762 0
c (SATLiteral(2459) -> SATLiteral(2763))
-2459 2763 0
c (SATLiteral(2459) -> SATLiteral(2764))
-2459 2764 0
c (SATLiteral(2459) -> SATLiteral(2765))
-2459 2765 0
c (SATLiteral(2459) -> SATLiteral(2766))
-2459 2766 0
c (SATLiteral(2459) -> SATLiteral(2767))
-2459 2767 0
c (SATLiteral(2459) -> SATLiteral(2768))
-2459 2768 0
c (SATLiteral(2460) -> SATLiteral(2769))
-2460 2769 0
c (SATLiteral(2460) -> SATLiteral(2770))
-2460 2770 0
c (SATLiteral(2460) -> SATLiteral(2771))
-2460 2771 0
c (SATLiteral(2460) -> SATLiteral(2772))
-2460 2772 0
c (SATLiteral(2460) -> SATLiteral(2773))
-2460 2773 0
c (SATLiteral(2460) -> SATLiteral(2774))
-2460 2774 0
c (SATLiteral(2460) -> SATLiteral(2775))
-2460 2775 0
c (SATLiteral(2461) -> SATLiteral(2776))
-2461 2776 0
c (SATLiteral(2461) -> SATLiteral(2777))
-2461 2777 0
c (SATLiteral(2461) -> SATLiteral(2778))
-2461 2778 0
c (SATLiteral(2461) -> SATLiteral(2779))
-2461 2779 0
c (SATLiteral(2461) -> SATLiteral(2780))
-2461 2780 0
c (SATLiteral(2461) -> SATLiteral(2781))
-2461 2781 0
c (SATLiteral(2461) -> SATLiteral(2782))
-2461 2782 0
c (SATLiteral(2462) -> SATLiteral(2783))
-2462 2783 0
c (SATLiteral(2462) -> SATLiteral(2784))
-2462 2784 0
c (SATLiteral(2462) -> SATLiteral(2785))
-2462 2785 0
c (SATLiteral(2462) -> SATLiteral(2786))
-2462 2786 0
c (SATLiteral(2462) -> SATLiteral(2787))
-2462 2787 0
c (SATLiteral(2462) -> SATLiteral(2788))
-2462 2788 0
c (SATLiteral(2462) -> SATLiteral(2789))
-2462 2789 0
c (SATLiteral(2463) -> SATLiteral(2790))
-2463 2790 0
c (SATLiteral(2463) -> SATLiteral(2791))
-2463 2791 0
c (SATLiteral(2463) -> SATLiteral(2792))
-2463 2792 0
c (SATLiteral(2463) -> SATLiteral(2793))
-2463 2793 0
c (SATLiteral(2463) -> SATLiteral(2794))
-2463 2794 0
c (SATLiteral(2464) -> SATLiteral(2795))
-2464 2795 0
c (SATLiteral(2464) -> SATLiteral(2796))
-2464 2796 0
c (SATLiteral(2464) -> SATLiteral(2797))
-2464 2797 0
c (SATLiteral(2464) -> SATLiteral(2798))
-2464 2798 0
c (SATLiteral(2464) -> SATLiteral(2799))
-2464 2799 0
c (SATLiteral(2464) -> SATLiteral(2800))
-2464 2800 0
c (SATLiteral(2464) -> SATLiteral(2801))
-2464 2801 0
c (SATLiteral(2464) -> SATLiteral(2802))
-2464 2802 0
c (SATLiteral(2464) -> SATLiteral(2803))
-2464 2803 0
c (SATLiteral(2465) -> SATLiteral(2804))
-2465 2804 0
c (SATLiteral(2465) -> SATLiteral(2805))
-2465 2805 0
c (SATLiteral(2465) -> SATLiteral(2806))
-2465 2806 0
c (SATLiteral(2465) -> SATLiteral(2807))
-2465 2807 0
c (SATLiteral(2466) -> SATLiteral(2808))
-2466 2808 0
c (SATLiteral(2466) -> SATLiteral(2809))
-2466 2809 0
c (SATLiteral(2466) -> SATLiteral(2810))
-2466 2810 0
c (SATLiteral(2466) -> SATLiteral(2811))
-2466 2811 0
c (SATLiteral(2466) -> SATLiteral(2812))
-2466 2812 0
c (SATLiteral(2466) -> SATLiteral(2813))
-2466 2813 0
c (SATLiteral(2466) -> SATLiteral(2814))
-2466 2814 0
c (SATLiteral(2466) -> SATLiteral(2815))
-2466 2815 0
c (SATLiteral(2466) -> SATLiteral(2816))
-2466 2816 0
c (SATLiteral(2467) -> SATLiteral(2817))
-2467 2817 0
c (SATLiteral(2467) -> SATLiteral(2818))
-2467 2818 0
c (SATLiteral(2467) -> SATLiteral(2819))
-2467 2819 0
c (SATLiteral(2467) -> SATLiteral(2820))
-2467 2820 0
c (SATLiteral(2467) -> SATLiteral(2821))
-2467 2821 0
c (SATLiteral(2467) -> SATLiteral(2822))
-2467 2822 0
c (SATLiteral(2467) -> SATLiteral(2823))
-2467 2823 0
c (SATLiteral(2467) -> SATLiteral(2824))
-2467 2824 0
c (SATLiteral(2467) -> SATLiteral(2825))
-2467 2825 0
c (SATLiteral(2468) -> SATLiteral(2826))
-2468 2826 0
c (SATLiteral(2468) -> SATLiteral(2827))
-2468 2827 0
c (SATLiteral(2468) -> SATLiteral(2828))
-2468 2828 0
c (SATLiteral(2468) -> SATLiteral(2829))
-2468 2829 0
c (SATLiteral(2468) -> SATLiteral(2830))
-2468 2830 0
c (SATLiteral(2468) -> SATLiteral(2831))
-2468 2831 0
c (SATLiteral(2468) -> SATLiteral(2832))
-2468 2832 0
c (SATLiteral(2468) -> SATLiteral(2833))
-2468 2833 0
c (SATLiteral(2468) -> SATLiteral(2834))
-2468 2834 0
c (SATLiteral(2469) -> SATLiteral(2835))
-2469 2835 0
c (SATLiteral(2469) -> SATLiteral(2836))
-2469 2836 0
c (SATLiteral(2469) -> SATLiteral(2837))
-2469 2837 0
c (SATLiteral(2469) -> SATLiteral(2838))
-2469 2838 0
c (SATLiteral(2469) -> SATLiteral(2839))
-2469 2839 0
c (SATLiteral(2469) -> SATLiteral(2840))
-2469 2840 0
c (SATLiteral(2469) -> SATLiteral(2841))
-2469 2841 0
c (SATLiteral(2469) -> SATLiteral(2842))
-2469 2842 0
c (SATLiteral(2469) -> SATLiteral(2843))
-2469 2843 0
c (SATLiteral(2470) -> SATLiteral(2844))
-2470 2844 0
c (SATLiteral(2470) -> SATLiteral(2845))
-2470 2845 0
c (SATLiteral(2470) -> SATLiteral(2846))
-2470 2846 0
c (SATLiteral(2470) -> SATLiteral(2847))
-2470 2847 0
c (SATLiteral(2470) -> SATLiteral(2848))
-2470 2848 0
c (SATLiteral(2470) -> SATLiteral(2849))
-2470 2849 0
c (SATLiteral(2470) -> SATLiteral(2850))
-2470 2850 0
c (SATLiteral(2471) -> SATLiteral(2851))
-2471 2851 0
c (SATLiteral(2471) -> SATLiteral(2852))
-2471 2852 0
c (SATLiteral(2471) -> SATLiteral(2853))
-2471 2853 0
c (SATLiteral(2471) -> SATLiteral(2854))
-2471 2854 0
c (SATLiteral(2471) -> SATLiteral(2855))
-2471 2855 0
c (SATLiteral(2471) -> SATLiteral(2856))
-2471 2856 0
c (SATLiteral(2471) -> SATLiteral(2857))
-2471 2857 0
c (SATLiteral(2471) -> SATLiteral(2858))
-2471 2858 0
c (SATLiteral(2472) -> SATLiteral(2859))
-2472 2859 0
c (SATLiteral(2472) -> SATLiteral(2860))
-2472 2860 0
c (SATLiteral(2472) -> SATLiteral(2861))
-2472 2861 0
c (SATLiteral(2472) -> SATLiteral(2862))
-2472 2862 0
c (SATLiteral(2472) -> SATLiteral(2863))
-2472 2863 0
c (SATLiteral(2472) -> SATLiteral(2864))
-2472 2864 0
c (SATLiteral(2472) -> SATLiteral(2865))
-2472 2865 0
c (SATLiteral(2473) -> SATLiteral(2866))
-2473 2866 0
c (SATLiteral(2473) -> SATLiteral(2867))
-2473 2867 0
c (SATLiteral(2473) -> SATLiteral(2868))
-2473 2868 0
c (SATLiteral(2473) -> SATLiteral(2869))
-2473 2869 0
c (SATLiteral(2473) -> SATLiteral(2870))
-2473 2870 0
c (SATLiteral(2473) -> SATLiteral(2871))
-2473 2871 0
c (SATLiteral(2474) -> SATLiteral(2872))
-2474 2872 0
c (SATLiteral(2474) -> SATLiteral(2873))
-2474 2873 0
c (SATLiteral(2474) -> SATLiteral(2874))
-2474 2874 0
c (SATLiteral(2474) -> SATLiteral(2875))
-2474 2875 0
c (SATLiteral(2474) -> SATLiteral(2876))
-2474 2876 0
c (SATLiteral(2474) -> SATLiteral(2877))
-2474 2877 0
c (SATLiteral(2474) -> SATLiteral(2878))
-2474 2878 0
c (SATLiteral(2474) -> SATLiteral(2879))
-2474 2879 0
c (SATLiteral(2475) -> SATLiteral(2880))
-2475 2880 0
c (SATLiteral(2475) -> SATLiteral(2881))
-2475 2881 0
c (SATLiteral(2475) -> SATLiteral(2882))
-2475 2882 0
c (SATLiteral(2475) -> SATLiteral(2883))
-2475 2883 0
c (SATLiteral(2475) -> SATLiteral(2884))
-2475 2884 0
c (SATLiteral(2475) -> SATLiteral(2885))
-2475 2885 0
c (SATLiteral(2475) -> SATLiteral(2886))
-2475 2886 0
c (SATLiteral(2475) -> SATLiteral(2887))
-2475 2887 0
c (SATLiteral(2476) -> SATLiteral(2888))
-2476 2888 0
c (SATLiteral(2476) -> SATLiteral(2889))
-2476 2889 0
c (SATLiteral(2476) -> SATLiteral(2890))
-2476 2890 0
c (SATLiteral(2476) -> SATLiteral(2891))
-2476 2891 0
c (SATLiteral(2476) -> SATLiteral(2892))
-2476 2892 0
c (SATLiteral(2476) -> SATLiteral(2893))
-2476 2893 0
c (SATLiteral(2477) -> SATLiteral(2894))
-2477 2894 0
c (SATLiteral(2477) -> SATLiteral(2895))
-2477 2895 0
c (SATLiteral(2477) -> SATLiteral(2896))
-2477 2896 0
c (SATLiteral(2477) -> SATLiteral(2897))
-2477 2897 0
c (SATLiteral(2477) -> SATLiteral(2898))
-2477 2898 0
c (SATLiteral(2477) -> SATLiteral(2899))
-2477 2899 0
c (SATLiteral(2477) -> SATLiteral(2900))
-2477 2900 0
c (SATLiteral(2477) -> SATLiteral(2901))
-2477 2901 0
c (SATLiteral(2477) -> SATLiteral(2902))
-2477 2902 0
c (SATLiteral(2478) -> SATLiteral(2903))
-2478 2903 0
c (SATLiteral(2478) -> SATLiteral(2904))
-2478 2904 0
c (SATLiteral(2478) -> SATLiteral(2905))
-2478 2905 0
c (SATLiteral(2478) -> SATLiteral(2906))
-2478 2906 0
c (SATLiteral(2478) -> SATLiteral(2907))
-2478 2907 0
c (SATLiteral(2478) -> SATLiteral(2908))
-2478 2908 0
c (SATLiteral(2478) -> SATLiteral(2909))
-2478 2909 0
c (SATLiteral(2478) -> SATLiteral(2910))
-2478 2910 0
c (SATLiteral(2479) -> SATLiteral(2911))
-2479 2911 0
c (SATLiteral(2479) -> SATLiteral(2912))
-2479 2912 0
c (SATLiteral(2479) -> SATLiteral(2913))
-2479 2913 0
c (SATLiteral(2479) -> SATLiteral(2914))
-2479 2914 0
c (SATLiteral(2479) -> SATLiteral(2915))
-2479 2915 0
c (SATLiteral(2479) -> SATLiteral(2916))
-2479 2916 0
c (SATLiteral(2479) -> SATLiteral(2917))
-2479 2917 0
c (SATLiteral(2479) -> SATLiteral(2918))
-2479 2918 0
c (( - aux265 + shift(variant_fields_00004_00007_00001, -4) + shift(variant_fields_00004_00007_00004, -1))<=0)
-3704 2362 0
-3702 2360 0
-3700 2358 0
-3699 2357 0
c (0<=( - aux265 + shift(variant_fields_00004_00007_00001, -4) + shift(variant_fields_00004_00007_00004, -1)))
3699 -2357 0
3700 -2358 0
3702 -2360 0
3704 -2362 0
c ((SATLiteral(448) - aux266 + SATLiteral(52))<=0)
-52 -3706 0
-448 -3706 0
-448 -52 -3707 0
c (0<=(SATLiteral(448) - aux266 + SATLiteral(52)))
52 3707 0
448 3707 0
448 52 3706 0
c (( - aux288 + SATLiteral(294) + SATLiteral(213))<=0)
-213 -3780 0
-294 -3780 0
-294 -213 -3781 0
c (0<=( - aux288 + SATLiteral(294) + SATLiteral(213)))
213 3781 0
294 3781 0
294 213 3780 0
c (( - aux309 + SATLiteral(308) + SATLiteral(226))<=0)
-226 -3851 0
-308 -3851 0
-308 -226 -3852 0
c (0<=( - aux309 + SATLiteral(308) + SATLiteral(226)))
226 3852 0
308 3852 0
308 226 3851 0
c (( - aux337 + SATLiteral(167) + SATLiteral(242))<=0)
-242 -3947 0
-167 -3947 0
-167 -242 -3948 0
c (0<=( - aux337 + SATLiteral(167) + SATLiteral(242)))
242 3948 0
167 3948 0
167 242 3947 0
c ((SATLiteral(124) - aux362 + SATLiteral(411))<=0)
-411 -4034 0
-124 -4034 0
-124 -411 -4035 0
c (0<=(SATLiteral(124) - aux362 + SATLiteral(411)))
411 4035 0
124 4035 0
124 411 4034 0
c ((SATLiteral(127) - aux385 + SATLiteral(424))<=0)
-424 -4111 0
-127 -4111 0
-127 -424 -4112 0
c (0<=(SATLiteral(127) - aux385 + SATLiteral(424)))
424 4112 0
127 4112 0
127 424 4111 0
c (( - aux386 + SATLiteral(352) + SATLiteral(269))<=0)
-269 -4114 0
-352 -4114 0
-352 -269 -4115 0
c (0<=( - aux386 + SATLiteral(352) + SATLiteral(269)))
269 4115 0
352 4115 0
352 269 4114 0
c (( - aux393 + SATLiteral(49) + SATLiteral(435))<=0)
-435 -4135 0
-49 -4135 0
-49 -435 -4136 0
c (0<=( - aux393 + SATLiteral(49) + SATLiteral(435)))
435 4136 0
49 4136 0
49 435 4135 0
c (( - aux394 + SATLiteral(356) + SATLiteral(272))<=0)
-272 -4138 0
-356 -4138 0
-356 -272 -4139 0
c (0<=( - aux394 + SATLiteral(356) + SATLiteral(272)))
272 4139 0
356 4139 0
356 272 4138 0
c (( - aux401 + SATLiteral(199) + SATLiteral(275))<=0)
-275 -4161 0
-199 -4161 0
-199 -275 -4162 0
c (0<=( - aux401 + SATLiteral(199) + SATLiteral(275)))
275 4162 0
199 4162 0
199 275 4161 0
c (( - aux428 + SATLiteral(17) + SATLiteral(32))<=0)
-32 -4252 0
-17 -4252 0
-17 -32 -4253 0
c (0<=( - aux428 + SATLiteral(17) + SATLiteral(32)))
32 4253 0
17 4253 0
17 32 4252 0
c (( - aux438 + SATLiteral(5) + SATLiteral(35))<=0)
-35 -4284 0
-5 -4284 0
-5 -35 -4285 0
c (0<=( - aux438 + SATLiteral(5) + SATLiteral(35)))
35 4285 0
5 4285 0
5 35 4284 0
c (( - aux439 + SATLiteral(6) + SATLiteral(36))<=0)
-36 -4287 0
-6 -4287 0
-6 -36 -4288 0
c (0<=( - aux439 + SATLiteral(6) + SATLiteral(36)))
36 4288 0
6 4288 0
6 36 4287 0
c (( - aux440 + SATLiteral(74) + SATLiteral(108))<=0)
-108 -4290 0
-74 -4290 0
-74 -108 -4291 0
c (0<=( - aux440 + SATLiteral(74) + SATLiteral(108)))
108 4291 0
74 4291 0
74 108 4290 0
c ((SATLiteral(116) + SATLiteral(125) - aux464)<=0)
-125 -4376 0
-116 -4376 0
-116 -125 -4377 0
c (0<=(SATLiteral(116) + SATLiteral(125) - aux464))
125 4377 0
116 4377 0
116 125 4376 0
c ((SATLiteral(117) + SATLiteral(126) - aux465)<=0)
-126 -4379 0
-117 -4379 0
-117 -126 -4380 0
c (0<=(SATLiteral(117) + SATLiteral(126) - aux465))
126 4380 0
117 4380 0
117 126 4379 0
c (( - aux466 + SATLiteral(167) + SATLiteral(203))<=0)
-203 -4382 0
-167 -4382 0
-167 -203 -4383 0
c (0<=( - aux466 + SATLiteral(167) + SATLiteral(203)))
203 4383 0
167 4383 0
167 203 4382 0
c (( - aux471 + SATLiteral(138) + SATLiteral(182))<=0)
-182 -4399 0
-138 -4399 0
-138 -182 -4400 0
c (0<=( - aux471 + SATLiteral(138) + SATLiteral(182)))
182 4400 0
138 4400 0
138 182 4399 0
c (( - aux492 + SATLiteral(242) + SATLiteral(273))<=0)
-273 -4468 0
-242 -4468 0
-242 -273 -4469 0
c (0<=( - aux492 + SATLiteral(242) + SATLiteral(273)))
273 4469 0
242 4469 0
242 273 4468 0
c (( - aux496 + SATLiteral(213) + SATLiteral(257))<=0)
-257 -4480 0
-213 -4480 0
-213 -257 -4481 0
c (0<=( - aux496 + SATLiteral(213) + SATLiteral(257)))
257 4481 0
213 4481 0
213 257 4480 0
c (( - aux497 + SATLiteral(238) + SATLiteral(275))<=0)
-275 -4483 0
-238 -4483 0
-238 -275 -4484 0
c (0<=( - aux497 + SATLiteral(238) + SATLiteral(275)))
275 4484 0
238 4484 0
238 275 4483 0
c (( - aux513 + SATLiteral(218) + SATLiteral(278))<=0)
-278 -4537 0
-218 -4537 0
-218 -278 -4538 0
c (0<=( - aux513 + SATLiteral(218) + SATLiteral(278)))
278 4538 0
218 4538 0
218 278 4537 0
c (( - aux616 + SATLiteral(103) + SATLiteral(31))<=0)
-31 -4882 0
-103 -4882 0
-103 -31 -4883 0
c (0<=( - aux616 + SATLiteral(103) + SATLiteral(31)))
31 4883 0
103 4883 0
103 31 4882 0
c (( - aux617 + SATLiteral(104) + SATLiteral(32))<=0)
-32 -4885 0
-104 -4885 0
-104 -32 -4886 0
c (0<=( - aux617 + SATLiteral(104) + SATLiteral(32)))
32 4886 0
104 4886 0
104 32 4885 0
c (( - aux624 + SATLiteral(49) + SATLiteral(35))<=0)
-35 -4906 0
-49 -4906 0
-49 -35 -4907 0
c (0<=( - aux624 + SATLiteral(49) + SATLiteral(35)))
35 4907 0
49 4907 0
49 35 4906 0
c (( - aux625 + SATLiteral(107) + SATLiteral(36))<=0)
-36 -4909 0
-107 -4909 0
-107 -36 -4910 0
c (0<=( - aux625 + SATLiteral(107) + SATLiteral(36)))
36 4910 0
107 4910 0
107 36 4909 0
c (( - aux630 + SATLiteral(138) + SATLiteral(226))<=0)
-226 -4926 0
-138 -4926 0
-138 -226 -4927 0
c (0<=( - aux630 + SATLiteral(138) + SATLiteral(226)))
226 4927 0
138 4927 0
138 226 4926 0
c (( - aux647 + SATLiteral(167) + SATLiteral(255))<=0)
-255 -4981 0
-167 -4981 0
-167 -255 -4982 0
c (0<=( - aux647 + SATLiteral(167) + SATLiteral(255)))
255 4982 0
167 4982 0
167 255 4981 0
c (( - aux651 + SATLiteral(169) + SATLiteral(257))<=0)
-257 -4993 0
-169 -4993 0
-169 -257 -4994 0
c (0<=( - aux651 + SATLiteral(169) + SATLiteral(257)))
257 4994 0
169 4994 0
169 257 4993 0
c (( - aux666 + SATLiteral(197) + SATLiteral(273))<=0)
-273 -5042 0
-197 -5042 0
-197 -273 -5043 0
c (0<=( - aux666 + SATLiteral(197) + SATLiteral(273)))
273 5043 0
197 5043 0
197 273 5042 0
c (( - aux667 + SATLiteral(193) + SATLiteral(274))<=0)
-274 -5045 0
-193 -5045 0
-193 -274 -5046 0
c (0<=( - aux667 + SATLiteral(193) + SATLiteral(274)))
274 5046 0
193 5046 0
193 274 5045 0
c (( - aux680 + SATLiteral(294) + SATLiteral(388))<=0)
-388 -5086 0
-294 -5086 0
-294 -388 -5087 0
c (0<=( - aux680 + SATLiteral(294) + SATLiteral(388)))
388 5087 0
294 5087 0
294 388 5086 0
c (( - aux681 + SATLiteral(295) + SATLiteral(389))<=0)
-389 -5089 0
-295 -5089 0
-295 -389 -5090 0
c (0<=( - aux681 + SATLiteral(295) + SATLiteral(389)))
389 5090 0
295 5090 0
295 389 5089 0
c (( - aux236 + shift(variant_fields_00001_00006_00001, -5) + shift(variant_fields_00001_00006_00004, -4))<=0)
725 -2921 0
726 -2923 0
728 -2925 0
698 -2920 0
698 725 -2923 0
698 726 -2925 0
698 728 -2927 0
699 -2921 0
699 725 -2925 0
699 726 -2927 0
699 728 -2929 0
701 -2923 0
701 725 -2927 0
701 726 -2929 0
701 728 -2931 0
c (0<=( - aux236 + shift(variant_fields_00001_00006_00001, -5) + shift(variant_fields_00001_00006_00004, -4)))
-728 2931 0
-726 2929 0
-725 2925 0
-701 2931 0
-701 -728 2929 0
-701 -726 2927 0
-701 -725 2923 0
-699 2929 0
-699 -728 2927 0
-699 -726 2925 0
-699 -725 2921 0
-698 2927 0
-698 -728 2925 0
-698 -726 2923 0
-698 -725 2920 0
c (( - aux237 + shift(variant_fields_00001_00006_00002, -2) + aux3)<=0)
703 -2933 0
704 -2936 0
706 -2938 0
708 -2940 0
710 -2942 0
712 -2944 0
2531 -2933 0
2531 703 -2934 0
2531 704 -2938 0
2531 706 -2940 0
2531 708 -2942 0
2531 710 -2944 0
2531 712 -2946 0
2532 -2934 0
2532 703 -2936 0
2532 704 -2940 0
2532 706 -2942 0
2532 708 -2944 0
2532 710 -2946 0
2532 712 -2948 0
2534 -2940 0
2534 703 -2942 0
2534 704 -2946 0
2534 706 -2948 0
2534 708 -2950 0
2534 710 -2952 0
2534 712 -2954 0
2536 -2944 0
2536 703 -2946 0
2536 704 -2950 0
2536 706 -2952 0
2536 708 -2954 0
2536 710 -2956 0
2536 712 -2958 0
2538 -2948 0
2538 703 -2950 0
2538 704 -2954 0
2538 706 -2956 0
2538 708 -2958 0
2538 710 -2960 0
2538 712 -2962 0
c (0<=( - aux237 + shift(variant_fields_00001_00006_00002, -2) + aux3))
-712 2962 0
-710 2960 0
-708 2958 0
-706 2956 0
-704 2952 0
-703 2950 0
-2538 2960 0
-2538 -712 2958 0
-2538 -710 2956 0
-2538 -708 2954 0
-2538 -706 2952 0
-2538 -704 2948 0
-2538 -703 2946 0
-2536 2956 0
-2536 -712 2954 0
-2536 -710 2952 0
-2536 -708 2950 0
-2536 -706 2948 0
-2536 -704 2944 0
-2536 -703 2942 0
-2534 2950 0
-2534 -712 2948 0
-2534 -710 2946 0
-2534 -708 2944 0
-2534 -706 2942 0
-2534 -704 2938 0
-2534 -703 2936 0
-2532 2948 0
-2532 -712 2946 0
-2532 -710 2944 0
-2532 -708 2942 0
-2532 -706 2940 0
-2532 -704 2936 0
-2532 -703 2934 0
-2531 2946 0
-2531 -712 2944 0
-2531 -710 2942 0
-2531 -708 2940 0
-2531 -706 2938 0
-2531 -704 2934 0
-2531 -703 2933 0
c (( - aux238 + shift(variant_fields_00001_00006_00003, -2) + shift(variant_fields_00001_00006_00005, -1))<=0)
730 -2964 0
731 -2965 0
733 -2967 0
735 -2971 0
737 -2973 0
739 -2975 0
714 -2964 0
714 730 -2965 0
714 731 -2967 0
714 733 -2969 0
714 735 -2973 0
714 737 -2975 0
714 739 -2977 0
715 -2967 0
715 730 -2969 0
715 731 -2971 0
715 733 -2973 0
715 735 -2977 0
715 737 -2979 0
715 739 -2981 0
717 -2969 0
717 730 -2971 0
717 731 -2973 0
717 733 -2975 0
717 735 -2979 0
717 737 -2981 0
717 739 -2983 0
719 -2971 0
719 730 -2973 0
719 731 -2975 0
719 733 -2977 0
719 735 -2981 0
719 737 -2983 0
719 739 -2985 0
721 -2973 0
721 730 -2975 0
721 731 -2977 0
721 733 -2979 0
721 735 -2983 0
721 737 -2985 0
721 739 -2987 0
723 -2975 0
723 730 -2977 0
723 731 -2979 0
723 733 -2981 0
723 735 -2985 0
723 737 -2987 0
723 739 -2989 0
c (0<=( - aux238 + shift(variant_fields_00001_00006_00003, -2) + shift(variant_fields_00001_00006_00005, -1)))
-739 2989 0
-737 2987 0
-735 2983 0
-733 2981 0
-731 2979 0
-730 2977 0
-723 2989 0
-723 -739 2987 0
-723 -737 2985 0
-723 -735 2981 0
-723 -733 2979 0
-723 -731 2977 0
-723 -730 2975 0
-721 2987 0
-721 -739 2985 0
-721 -737 2983 0
-721 -735 2979 0
-721 -733 2977 0
-721 -731 2975 0
-721 -730 2973 0
-719 2985 0
-719 -739 2983 0
-719 -737 2981 0
-719 -735 2977 0
-719 -733 2975 0
-719 -731 2973 0
-719 -730 2971 0
-717 2983 0
-717 -739 2981 0
-717 -737 2979 0
-717 -735 2975 0
-717 -733 2973 0
-717 -731 2971 0
-717 -730 2969 0
-715 2979 0
-715 -739 2977 0
-715 -737 2975 0
-715 -735 2971 0
-715 -733 2969 0
-715 -731 2967 0
-715 -730 2965 0
-714 2977 0
-714 -739 2975 0
-714 -737 2973 0
-714 -735 2969 0
-714 -733 2967 0
-714 -731 2965 0
-714 -730 2964 0
c ((aux236 - aux239 + aux4)<=0)
2920 -2991 0
2921 -2992 0
2923 -2994 0
2925 -2996 0
2927 -2998 0
2929 -3000 0
2931 -3002 0
2540 -2991 0
2540 2920 -2992 0
2540 2921 -2994 0
2540 2923 -2996 0
2540 2925 -2998 0
2540 2927 -3000 0
2540 2929 -3002 0
2540 2931 -3004 0
2541 -2992 0
2541 2920 -2994 0
2541 2921 -2996 0
2541 2923 -2998 0
2541 2925 -3000 0
2541 2927 -3002 0
2541 2929 -3004 0
2541 2931 -3006 0
2543 -2996 0
2543 2920 -2998 0
2543 2921 -3000 0
2543 2923 -3002 0
2543 2925 -3004 0
2543 2927 -3006 0
2543 2929 -3008 0
2543 2931 -3010 0
2545 -2998 0
2545 2920 -3000 0
2545 2921 -3002 0
2545 2923 -3004 0
2545 2925 -3006 0
2545 2927 -3008 0
2545 2929 -3010 0
2545 2931 -3012 0
2547 -3002 0
2547 2920 -3004 0
2547 2921 -3006 0
2547 2923 -3008 0
2547 2925 -3010 0
2547 2927 -3012 0
2547 2929 -3014 0
2547 2931 -3016 0
2549 -3006 0
2549 2920 -3008 0
2549 2921 -3010 0
2549 2923 -3012 0
2549 2925 -3014 0
2549 2927 -3016 0
2549 2929 -3018 0
2549 2931 -3020 0
c (0<=(aux236 - aux239 + aux4))
-2931 3020 0
-2929 3018 0
-2927 3016 0
-2925 3014 0
-2923 3012 0
-2921 3010 0
-2920 3008 0
-2549 3018 0
-2549 -2931 3016 0
-2549 -2929 3014 0
-2549 -2927 3012 0
-2549 -2925 3010 0
-2549 -2923 3008 0
-2549 -2921 3006 0
-2549 -2920 3004 0
-2547 3014 0
-2547 -2931 3012 0
-2547 -2929 3010 0
-2547 -2927 3008 0
-2547 -2925 3006 0
-2547 -2923 3004 0
-2547 -2921 3002 0
-2547 -2920 3000 0
-2545 3012 0
-2545 -2931 3010 0
-2545 -2929 3008 0
-2545 -2927 3006 0
-2545 -2925 3004 0
-2545 -2923 3002 0
-2545 -2921 3000 0
-2545 -2920 2998 0
-2543 3008 0
-2543 -2931 3006 0
-2543 -2929 3004 0
-2543 -2927 3002 0
-2543 -2925 3000 0
-2543 -2923 2998 0
-2543 -2921 2996 0
-2543 -2920 2994 0
-2541 3006 0
-2541 -2931 3004 0
-2541 -2929 3002 0
-2541 -2927 3000 0
-2541 -2925 2998 0
-2541 -2923 2996 0
-2541 -2921 2994 0
-2541 -2920 2992 0
-2540 3004 0
-2540 -2931 3002 0
-2540 -2929 3000 0
-2540 -2927 2998 0
-2540 -2925 2996 0
-2540 -2923 2994 0
-2540 -2921 2992 0
-2540 -2920 2991 0
c ((aux238 - aux240 + aux2)<=0)
2964 -3022 0
2965 -3023 0
2967 -3025 0
2969 -3027 0
2971 -3029 0
2973 -3031 0
2975 -3033 0
2977 -3035 0
2979 -3037 0
2981 -3039 0
2983 -3041 0
2985 -3043 0
2987 -3045 0
2989 -3047 0
2518 -3022 0
2518 2964 -3023 0
2518 2965 -3025 0
2518 2967 -3027 0
2518 2969 -3029 0
2518 2971 -3031 0
2518 2973 -3033 0
2518 2975 -3035 0
2518 2977 -3037 0
2518 2979 -3039 0
2518 2981 -3041 0
2518 2983 -3043 0
2518 2985 -3045 0
2518 2987 -3047 0
2518 2989 -3049 0
2519 -3023 0
2519 2964 -3025 0
2519 2965 -3027 0
2519 2967 -3029 0
2519 2969 -3031 0
2519 2971 -3033 0
2519 2973 -3035 0
2519 2975 -3037 0
2519 2977 -3039 0
2519 2979 -3041 0
2519 2981 -3043 0
2519 2983 -3045 0
2519 2985 -3047 0
2519 2987 -3049 0
2519 2989 -3051 0
2521 -3025 0
2521 2964 -3027 0
2521 2965 -3029 0
2521 2967 -3031 0
2521 2969 -3033 0
2521 2971 -3035 0
2521 2973 -3037 0
2521 2975 -3039 0
2521 2977 -3041 0
2521 2979 -3043 0
2521 2981 -3045 0
2521 2983 -3047 0
2521 2985 -3049 0
2521 2987 -3051 0
2521 2989 -3053 0
2523 -3027 0
2523 2964 -3029 0
2523 2965 -3031 0
2523 2967 -3033 0
2523 2969 -3035 0
2523 2971 -3037 0
2523 2973 -3039 0
2523 2975 -3041 0
2523 2977 -3043 0
2523 2979 -3045 0
2523 2981 -3047 0
2523 2983 -3049 0
2523 2985 -3051 0
2523 2987 -3053 0
2523 2989 -3055 0
2525 -3031 0
2525 2964 -3033 0
2525 2965 -3035 0
2525 2967 -3037 0
2525 2969 -3039 0
2525 2971 -3041 0
2525 2973 -3043 0
2525 2975 -3045 0
2525 2977 -3047 0
2525 2979 -3049 0
2525 2981 -3051 0
2525 2983 -3053 0
2525 2985 -3055 0
2525 2987 -3057 0
2525 2989 -3059 0
2527 -3033 0
2527 2964 -3035 0
2527 2965 -3037 0
2527 2967 -3039 0
2527 2969 -3041 0
2527 2971 -3043 0
2527 2973 -3045 0
2527 2975 -3047 0
2527 2977 -3049 0
2527 2979 -3051 0
2527 2981 -3053 0
2527 2983 -3055 0
2527 2985 -3057 0
2527 2987 -3059 0
2527 2989 -3061 0
2529 -3035 0
2529 2964 -3037 0
2529 2965 -3039 0
2529 2967 -3041 0
2529 2969 -3043 0
2529 2971 -3045 0
2529 2973 -3047 0
2529 2975 -3049 0
2529 2977 -3051 0
2529 2979 -3053 0
2529 2981 -3055 0
2529 2983 -3057 0
2529 2985 -3059 0
2529 2987 -3061 0
2529 2989 -3063 0
c (0<=(aux238 - aux240 + aux2))
-2989 3063 0
-2987 3061 0
-2985 3059 0
-2983 3057 0
-2981 3055 0
-2979 3053 0
-2977 3051 0
-2975 3049 0
-2973 3047 0
-2971 3045 0
-2969 3043 0
-2967 3041 0
-2965 3039 0
-2964 3037 0
-2529 3063 0
-2529 -2989 3061 0
-2529 -2987 3059 0
-2529 -2985 3057 0
-2529 -2983 3055 0
-2529 -2981 3053 0
-2529 -2979 3051 0
-2529 -2977 3049 0
-2529 -2975 3047 0
-2529 -2973 3045 0
-2529 -2971 3043 0
-2529 -2969 3041 0
-2529 -2967 3039 0
-2529 -2965 3037 0
-2529 -2964 3035 0
-2527 3061 0
-2527 -2989 3059 0
-2527 -2987 3057 0
-2527 -2985 3055 0
-2527 -2983 3053 0
-2527 -2981 3051 0
-2527 -2979 3049 0
-2527 -2977 3047 0
-2527 -2975 3045 0
-2527 -2973 3043 0
-2527 -2971 3041 0
-2527 -2969 3039 0
-2527 -2967 3037 0
-2527 -2965 3035 0
-2527 -2964 3033 0
-2525 3057 0
-2525 -2989 3055 0
-2525 -2987 3053 0
-2525 -2985 3051 0
-2525 -2983 3049 0
-2525 -2981 3047 0
-2525 -2979 3045 0
-2525 -2977 3043 0
-2525 -2975 3041 0
-2525 -2973 3039 0
-2525 -2971 3037 0
-2525 -2969 3035 0
-2525 -2967 3033 0
-2525 -2965 3031 0
-2525 -2964 3029 0
-2523 3055 0
-2523 -2989 3053 0
-2523 -2987 3051 0
-2523 -2985 3049 0
-2523 -2983 3047 0
-2523 -2981 3045 0
-2523 -2979 3043 0
-2523 -2977 3041 0
-2523 -2975 3039 0
-2523 -2973 3037 0
-2523 -2971 3035 0
-2523 -2969 3033 0
-2523 -2967 3031 0
-2523 -2965 3029 0
-2523 -2964 3027 0
-2521 3053 0
-2521 -2989 3051 0
-2521 -2987 3049 0
-2521 -2985 3047 0
-2521 -2983 3045 0
-2521 -2981 3043 0
-2521 -2979 3041 0
-2521 -2977 3039 0
-2521 -2975 3037 0
-2521 -2973 3035 0
-2521 -2971 3033 0
-2521 -2969 3031 0
-2521 -2967 3029 0
-2521 -2965 3027 0
-2521 -2964 3025 0
-2519 3051 0
-2519 -2989 3049 0
-2519 -2987 3047 0
-2519 -2985 3045 0
-2519 -2983 3043 0
-2519 -2981 3041 0
-2519 -2979 3039 0
-2519 -2977 3037 0
-2519 -2975 3035 0
-2519 -2973 3033 0
-2519 -2971 3031 0
-2519 -2969 3029 0
-2519 -2967 3027 0
-2519 -2965 3025 0
-2519 -2964 3023 0
-2518 3049 0
-2518 -2989 3047 0
-2518 -2987 3045 0
-2518 -2985 3043 0
-2518 -2983 3041 0
-2518 -2981 3039 0
-2518 -2979 3037 0
-2518 -2977 3035 0
-2518 -2975 3033 0
-2518 -2973 3031 0
-2518 -2971 3029 0
-2518 -2969 3027 0
-2518 -2967 3025 0
-2518 -2965 3023 0
-2518 -2964 3022 0
c (( - aux241 + shift(variant_fields_00001_00008_00001, -5) + shift(variant_fields_00001_00008_00004, -1))<=0)
886 -3068 0
887 -3072 0
889 -3074 0
855 -3065 0
855 886 -3070 0
855 887 -3074 0
855 889 -3076 0
856 -3066 0
856 886 -3072 0
856 887 -3076 0
856 889 -3078 0
858 -3068 0
858 886 -3074 0
858 887 -3078 0
858 889 -3080 0
c (0<=( - aux241 + shift(variant_fields_00001_00008_00001, -5) + shift(variant_fields_00001_00008_00004, -1)))
-889 3080 0
-887 3076 0
-886 3070 0
-858 3080 0
-858 -889 3078 0
-858 -887 3074 0
-858 -886 3068 0
-856 3078 0
-856 -889 3076 0
-856 -887 3072 0
-856 -886 3066 0
-855 3076 0
-855 -889 3074 0
-855 -887 3070 0
-855 -886 3065 0
c (( - aux242 + shift(variant_fields_00001_00008_00005, -2) + aux7)<=0)
2565 -3082 0
2566 -3083 0
2568 -3089 0
2570 -3093 0
2572 -3095 0
2574 -3097 0
891 -3083 0
891 2565 -3085 0
891 2566 -3087 0
891 2568 -3093 0
891 2570 -3097 0
891 2572 -3099 0
891 2574 -3101 0
892 -3085 0
892 2565 -3087 0
892 2566 -3089 0
892 2568 -3095 0
892 2570 -3099 0
892 2572 -3101 0
892 2574 -3103 0
894 -3087 0
894 2565 -3089 0
894 2566 -3091 0
894 2568 -3097 0
894 2570 -3101 0
894 2572 -3103 0
894 2574 -3105 0
896 -3089 0
896 2565 -3091 0
896 2566 -3093 0
896 2568 -3099 0
896 2570 -3103 0
896 2572 -3105 0
896 2574 -3107 0
898 -3091 0
898 2565 -3093 0
898 2566 -3095 0
898 2568 -3101 0
898 2570 -3105 0
898 2572 -3107 0
898 2574 -3109 0
900 -3093 0
900 2565 -3095 0
900 2566 -3097 0
900 2568 -3103 0
900 2570 -3107 0
900 2572 -3109 0
900 2574 -3111 0
c (0<=( - aux242 + shift(variant_fields_00001_00008_00005, -2) + aux7))
-2574 3111 0
-2572 3109 0
-2570 3105 0
-2568 3099 0
-2566 3097 0
-2565 3095 0
-900 3111 0
-900 -2574 3109 0
-900 -2572 3107 0
-900 -2570 3103 0
-900 -2568 3097 0
-900 -2566 3095 0
-900 -2565 3093 0
-898 3109 0
-898 -2574 3107 0
-898 -2572 3105 0
-898 -2570 3101 0
-898 -2568 3095 0
-898 -2566 3093 0
-898 -2565 3091 0
-896 3107 0
-896 -2574 3105 0
-896 -2572 3103 0
-896 -2570 3099 0
-896 -2568 3093 0
-896 -2566 3091 0
-896 -2565 3089 0
-894 3105 0
-894 -2574 3103 0
-894 -2572 3101 0
-894 -2570 3097 0
-894 -2568 3091 0
-894 -2566 3089 0
-894 -2565 3087 0
-892 3103 0
-892 -2574 3101 0
-892 -2572 3099 0
-892 -2570 3095 0
-892 -2568 3089 0
-892 -2566 3087 0
-892 -2565 3085 0
-891 3099 0
-891 -2574 3097 0
-891 -2572 3095 0
-891 -2570 3091 0
-891 -2568 3085 0
-891 -2566 3083 0
-891 -2565 3082 0
c (( - aux243 + shift(variant_fields_00001_00008_00002, -2) + aux8)<=0)
860 -3113 0
861 -3114 0
863 -3116 0
865 -3118 0
867 -3120 0
869 -3122 0
871 -3124 0
2576 -3113 0
2576 860 -3114 0
2576 861 -3116 0
2576 863 -3118 0
2576 865 -3120 0
2576 867 -3122 0
2576 869 -3124 0
2576 871 -3126 0
2577 -3114 0
2577 860 -3116 0
2577 861 -3118 0
2577 863 -3120 0
2577 865 -3122 0
2577 867 -3124 0
2577 869 -3126 0
2577 871 -3128 0
2579 -3116 0
2579 860 -3118 0
2579 861 -3120 0
2579 863 -3122 0
2579 865 -3124 0
2579 867 -3126 0
2579 869 -3128 0
2579 871 -3130 0
2581 -3120 0
2581 860 -3122 0
2581 861 -3124 0
2581 863 -3126 0
2581 865 -3128 0
2581 867 -3130 0
2581 869 -3132 0
2581 871 -3134 0
2583 -3124 0
2583 860 -3126 0
2583 861 -3128 0
2583 863 -3130 0
2583 865 -3132 0
2583 867 -3134 0
2583 869 -3136 0
2583 871 -3138 0
2585 -3128 0
2585 860 -3130 0
2585 861 -3132 0
2585 863 -3134 0
2585 865 -3136 0
2585 867 -3138 0
2585 869 -3140 0
2585 871 -3142 0
c (0<=( - aux243 + shift(variant_fields_00001_00008_00002, -2) + aux8))
-871 3142 0
-869 3140 0
-867 3138 0
-865 3136 0
-863 3134 0
-861 3132 0
-860 3130 0
-2585 3140 0
-2585 -871 3138 0
-2585 -869 3136 0
-2585 -867 3134 0
-2585 -865 3132 0
-2585 -863 3130 0
-2585 -861 3128 0
-2585 -860 3126 0
-2583 3136 0
-2583 -871 3134 0
-2583 -869 3132 0
-2583 -867 3130 0
-2583 -865 3128 0
-2583 -863 3126 0
-2583 -861 3124 0
-2583 -860 3122 0
-2581 3132 0
-2581 -871 3130 0
-2581 -869 3128 0
-2581 -867 3126 0
-2581 -865 3124 0
-2581 -863 3122 0
-2581 -861 3120 0
-2581 -860 3118 0
-2579 3130 0
-2579 -871 3128 0
-2579 -869 3126 0
-2579 -867 3124 0
-2579 -865 3122 0
-2579 -863 3120 0
-2579 -861 3118 0
-2579 -860 3116 0
-2577 3128 0
-2577 -871 3126 0
-2577 -869 3124 0
-2577 -867 3122 0
-2577 -865 3120 0
-2577 -863 3118 0
-2577 -861 3116 0
-2577 -860 3114 0
-2576 3126 0
-2576 -871 3124 0
-2576 -869 3122 0
-2576 -867 3120 0
-2576 -865 3118 0
-2576 -863 3116 0
-2576 -861 3114 0
-2576 -860 3113 0
c (( - aux244 + shift(variant_fields_00001_00008_00003, -2) + aux6)<=0)
2552 -3145 0
2553 -3149 0
2555 -3151 0
2557 -3153 0
2559 -3155 0
2561 -3157 0
2563 -3159 0
873 -3144 0
873 2552 -3147 0
873 2553 -3151 0
873 2555 -3153 0
873 2557 -3155 0
873 2559 -3157 0
873 2561 -3159 0
873 2563 -3161 0
874 -3145 0
874 2552 -3149 0
874 2553 -3153 0
874 2555 -3155 0
874 2557 -3157 0
874 2559 -3159 0
874 2561 -3161 0
874 2563 -3163 0
876 -3147 0
876 2552 -3151 0
876 2553 -3155 0
876 2555 -3157 0
876 2557 -3159 0
876 2559 -3161 0
876 2561 -3163 0
876 2563 -3165 0
878 -3149 0
878 2552 -3153 0
878 2553 -3157 0
878 2555 -3159 0
878 2557 -3161 0
878 2559 -3163 0
878 2561 -3165 0
878 2563 -3167 0
880 -3151 0
880 2552 -3155 0
880 2553 -3159 0
880 2555 -3161 0
880 2557 -3163 0
880 2559 -3165 0
880 2561 -3167 0
880 2563 -3169 0
882 -3153 0
882 2552 -3157 0
882 2553 -3161 0
882 2555 -3163 0
882 2557 -3165 0
882 2559 -3167 0
882 2561 -3169 0
882 2563 -3171 0
884 -3155 0
884 2552 -3159 0
884 2553 -3163 0
884 2555 -3165 0
884 2557 -3167 0
884 2559 -3169 0
884 2561 -3171 0
884 2563 -3173 0
c (0<=( - aux244 + shift(variant_fields_00001_00008_00003, -2) + aux6))
-2563 3173 0
-2561 3171 0
-2559 3169 0
-2557 3167 0
-2555 3165 0
-2553 3161 0
-2552 3157 0
-884 3173 0
-884 -2563 3171 0
-884 -2561 3169 0
-884 -2559 3167 0
-884 -2557 3165 0
-884 -2555 3163 0
-884 -2553 3159 0
-884 -2552 3155 0
-882 3171 0
-882 -2563 3169 0
-882 -2561 3167 0
-882 -2559 3165 0
-882 -2557 3163 0
-882 -2555 3161 0
-882 -2553 3157 0
-882 -2552 3153 0
-880 3169 0
-880 -2563 3167 0
-880 -2561 3165 0
-880 -2559 3163 0
-880 -2557 3161 0
-880 -2555 3159 0
-880 -2553 3155 0
-880 -2552 3151 0
-878 3167 0
-878 -2563 3165 0
-878 -2561 3163 0
-878 -2559 3161 0
-878 -2557 3159 0
-878 -2555 3157 0
-878 -2553 3153 0
-878 -2552 3149 0
-876 3165 0
-876 -2563 3163 0
-876 -2561 3161 0
-876 -2559 3159 0
-876 -2557 3157 0
-876 -2555 3155 0
-876 -2553 3151 0
-876 -2552 3147 0
-874 3163 0
-874 -2563 3161 0
-874 -2561 3159 0
-874 -2559 3157 0
-874 -2557 3155 0
-874 -2555 3153 0
-874 -2553 3149 0
-874 -2552 3145 0
-873 3161 0
-873 -2563 3159 0
-873 -2561 3157 0
-873 -2559 3155 0
-873 -2557 3153 0
-873 -2555 3151 0
-873 -2553 3147 0
-873 -2552 3144 0
c ((aux241 + aux244 - aux245)<=0)
3144 -3175 0
3145 -3176 0
3147 -3178 0
3149 -3180 0
3151 -3182 0
3153 -3184 0
3155 -3186 0
3157 -3188 0
3159 -3190 0
3161 -3192 0
3163 -3194 0
3165 -3196 0
3167 -3198 0
3169 -3200 0
3171 -3202 0
3173 -3204 0
3065 -3175 0
3065 3144 -3176 0
3065 3145 -3178 0
3065 3147 -3180 0
3065 3149 -3182 0
3065 3151 -3184 0
3065 3153 -3186 0
3065 3155 -3188 0
3065 3157 -3190 0
3065 3159 -3192 0
3065 3161 -3194 0
3065 3163 -3196 0
3065 3165 -3198 0
3065 3167 -3200 0
3065 3169 -3202 0
3065 3171 -3204 0
3065 3173 -3206 0
3066 -3176 0
3066 3144 -3178 0
3066 3145 -3180 0
3066 3147 -3182 0
3066 3149 -3184 0
3066 3151 -3186 0
3066 3153 -3188 0
3066 3155 -3190 0
3066 3157 -3192 0
3066 3159 -3194 0
3066 3161 -3196 0
3066 3163 -3198 0
3066 3165 -3200 0
3066 3167 -3202 0
3066 3169 -3204 0
3066 3171 -3206 0
3066 3173 -3208 0
3068 -3178 0
3068 3144 -3180 0
3068 3145 -3182 0
3068 3147 -3184 0
3068 3149 -3186 0
3068 3151 -3188 0
3068 3153 -3190 0
3068 3155 -3192 0
3068 3157 -3194 0
3068 3159 -3196 0
3068 3161 -3198 0
3068 3163 -3200 0
3068 3165 -3202 0
3068 3167 -3204 0
3068 3169 -3206 0
3068 3171 -3208 0
3068 3173 -3210 0
3070 -3180 0
3070 3144 -3182 0
3070 3145 -3184 0
3070 3147 -3186 0
3070 3149 -3188 0
3070 3151 -3190 0
3070 3153 -3192 0
3070 3155 -3194 0
3070 3157 -3196 0
3070 3159 -3198 0
3070 3161 -3200 0
3070 3163 -3202 0
3070 3165 -3204 0
3070 3167 -3206 0
3070 3169 -3208 0
3070 3171 -3210 0
3070 3173 -3212 0
3072 -3182 0
3072 3144 -3184 0
3072 3145 -3186 0
3072 3147 -3188 0
3072 3149 -3190 0
3072 3151 -3192 0
3072 3153 -3194 0
3072 3155 -3196 0
3072 3157 -3198 0
3072 3159 -3200 0
3072 3161 -3202 0
3072 3163 -3204 0
3072 3165 -3206 0
3072 3167 -3208 0
3072 3169 -3210 0
3072 3171 -3212 0
3072 3173 -3214 0
3074 -3184 0
3074 3144 -3186 0
3074 3145 -3188 0
3074 3147 -3190 0
3074 3149 -3192 0
3074 3151 -3194 0
3074 3153 -3196 0
3074 3155 -3198 0
3074 3157 -3200 0
3074 3159 -3202 0
3074 3161 -3204 0
3074 3163 -3206 0
3074 3165 -3208 0
3074 3167 -3210 0
3074 3169 -3212 0
3074 3171 -3214 0
3074 3173 -3216 0
3076 -3186 0
3076 3144 -3188 0
3076 3145 -3190 0
3076 3147 -3192 0
3076 3149 -3194 0
3076 3151 -3196 0
3076 3153 -3198 0
3076 3155 -3200 0
3076 3157 -3202 0
3076 3159 -3204 0
3076 3161 -3206 0
3076 3163 -3208 0
3076 3165 -3210 0
3076 3167 -3212 0
3076 3169 -3214 0
3076 3171 -3216 0
3076 3173 -3218 0
3078 -3188 0
3078 3144 -3190 0
3078 3145 -3192 0
3078 3147 -3194 0
3078 3149 -3196 0
3078 3151 -3198 0
3078 3153 -3200 0
3078 3155 -3202 0
3078 3157 -3204 0
3078 3159 -3206 0
3078 3161 -3208 0
3078 3163 -3210 0
3078 3165 -3212 0
3078 3167 -3214 0
3078 3169 -3216 0
3078 3171 -3218 0
3078 3173 -3220 0
3080 -3190 0
3080 3144 -3192 0
3080 3145 -3194 0
3080 3147 -3196 0
3080 3149 -3198 0
3080 3151 -3200 0
3080 3153 -3202 0
3080 3155 -3204 0
3080 3157 -3206 0
3080 3159 -3208 0
3080 3161 -3210 0
3080 3163 -3212 0
3080 3165 -3214 0
3080 3167 -3216 0
3080 3169 -3218 0
3080 3171 -3220 0
3080 3173 -3222 0
c (0<=(aux241 + aux244 - aux245))
-3173 3222 0
-3171 3220 0
-3169 3218 0
-3167 3216 0
-3165 3214 0
-3163 3212 0
-3161 3210 0
-3159 3208 0
-3157 3206 0
-3155 3204 0
-3153 3202 0
-3151 3200 0
-3149 3198 0
-3147 3196 0
-3145 3194 0
-3144 3192 0
-3080 3222 0
-3080 -3173 3220 0
-3080 -3171 3218 0
-3080 -3169 3216 0
-3080 -3167 3214 0
-3080 -3165 3212 0
-3080 -3163 3210 0
-3080 -3161 3208 0
-3080 -3159 3206 0
-3080 -3157 3204 0
-3080 -3155 3202 0
-3080 -3153 3200 0
-3080 -3151 3198 0
-3080 -3149 3196 0
-3080 -3147 3194 0
-3080 -3145 3192 0
-3080 -3144 3190 0
-3078 3220 0
-3078 -3173 3218 0
-3078 -3171 3216 0
-3078 -3169 3214 0
-3078 -3167 3212 0
-3078 -3165 3210 0
-3078 -3163 3208 0
-3078 -3161 3206 0
-3078 -3159 3204 0
-3078 -3157 3202 0
-3078 -3155 3200 0
-3078 -3153 3198 0
-3078 -3151 3196 0
-3078 -3149 3194 0
-3078 -3147 3192 0
-3078 -3145 3190 0
-3078 -3144 3188 0
-3076 3218 0
-3076 -3173 3216 0
-3076 -3171 3214 0
-3076 -3169 3212 0
-3076 -3167 3210 0
-3076 -3165 3208 0
-3076 -3163 3206 0
-3076 -3161 3204 0
-3076 -3159 3202 0
-3076 -3157 3200 0
-3076 -3155 3198 0
-3076 -3153 3196 0
-3076 -3151 3194 0
-3076 -3149 3192 0
-3076 -3147 3190 0
-3076 -3145 3188 0
-3076 -3144 3186 0
-3074 3216 0
-3074 -3173 3214 0
-3074 -3171 3212 0
-3074 -3169 3210 0
-3074 -3167 3208 0
-3074 -3165 3206 0
-3074 -3163 3204 0
-3074 -3161 3202 0
-3074 -3159 3200 0
-3074 -3157 3198 0
-3074 -3155 3196 0
-3074 -3153 3194 0
-3074 -3151 3192 0
-3074 -3149 3190 0
-3074 -3147 3188 0
-3074 -3145 3186 0
-3074 -3144 3184 0
-3072 3214 0
-3072 -3173 3212 0
-3072 -3171 3210 0
-3072 -3169 3208 0
-3072 -3167 3206 0
-3072 -3165 3204 0
-3072 -3163 3202 0
-3072 -3161 3200 0
-3072 -3159 3198 0
-3072 -3157 3196 0
-3072 -3155 3194 0
-3072 -3153 3192 0
-3072 -3151 3190 0
-3072 -3149 3188 0
-3072 -3147 3186 0
-3072 -3145 3184 0
-3072 -3144 3182 0
-3070 3212 0
-3070 -3173 3210 0
-3070 -3171 3208 0
-3070 -3169 3206 0
-3070 -3167 3204 0
-3070 -3165 3202 0
-3070 -3163 3200 0
-3070 -3161 3198 0
-3070 -3159 3196 0
-3070 -3157 3194 0
-3070 -3155 3192 0
-3070 -3153 3190 0
-3070 -3151 3188 0
-3070 -3149 3186 0
-3070 -3147 3184 0
-3070 -3145 3182 0
-3070 -3144 3180 0
-3068 3210 0
-3068 -3173 3208 0
-3068 -3171 3206 0
-3068 -3169 3204 0
-3068 -3167 3202 0
-3068 -3165 3200 0
-3068 -3163 3198 0
-3068 -3161 3196 0
-3068 -3159 3194 0
-3068 -3157 3192 0
-3068 -3155 3190 0
-3068 -3153 3188 0
-3068 -3151 3186 0
-3068 -3149 3184 0
-3068 -3147 3182 0
-3068 -3145 3180 0
-3068 -3144 3178 0
-3066 3208 0
-3066 -3173 3206 0
-3066 -3171 3204 0
-3066 -3169 3202 0
-3066 -3167 3200 0
-3066 -3165 3198 0
-3066 -3163 3196 0
-3066 -3161 3194 0
-3066 -3159 3192 0
-3066 -3157 3190 0
-3066 -3155 3188 0
-3066 -3153 3186 0
-3066 -3151 3184 0
-3066 -3149 3182 0
-3066 -3147 3180 0
-3066 -3145 3178 0
-3066 -3144 3176 0
-3065 3206 0
-3065 -3173 3204 0
-3065 -3171 3202 0
-3065 -3169 3200 0
-3065 -3167 3198 0
-3065 -3165 3196 0
-3065 -3163 3194 0
-3065 -3161 3192 0
-3065 -3159 3190 0
-3065 -3157 3188 0
-3065 -3155 3186 0
-3065 -3153 3184 0
-3065 -3151 3182 0
-3065 -3149 3180 0
-3065 -3147 3178 0
-3065 -3145 3176 0
-3065 -3144 3175 0
c (( - aux246 + shift(variant_fields_00002_00002_00001, -5) + shift(variant_fields_00002_00002_00002, -1))<=0)
1029 -3224 0
1030 -3225 0
-1032 -3227 0
-1032 1029 -3229 0
-1032 1030 -3231 0
c (0<=( - aux246 + shift(variant_fields_00002_00002_00001, -5) + shift(variant_fields_00002_00002_00002, -1)))
-1030 3231 0
-1029 3229 0
1032 3227 0
1032 -1030 3225 0
1032 -1029 3224 0
c ((aux246 - aux247 + shift(variant_fields_00002_00002_00004, -1))<=0)
3224 -3233 0
3225 -3234 0
3227 -3236 0
3229 -3238 0
3231 -3240 0
1042 -3233 0
1042 3224 -3234 0
1042 3225 -3236 0
1042 3227 -3238 0
1042 3229 -3240 0
1042 3231 -3242 0
1043 -3242 0
1043 3224 -3244 0
1043 3225 -3246 0
1043 3227 -3248 0
1043 3229 -3250 0
1043 3231 -3252 0
c (0<=(aux246 - aux247 + shift(variant_fields_00002_00002_00004, -1)))
-3231 3252 0
-3229 3250 0
-3227 3248 0
-3225 3246 0
-3224 3244 0
-1043 3244 0
-1043 -3231 3242 0
-1043 -3229 3240 0
-1043 -3227 3238 0
-1043 -3225 3236 0
-1043 -3224 3234 0
-1042 3242 0
-1042 -3231 3240 0
-1042 -3229 3238 0
-1042 -3227 3236 0
-1042 -3225 3234 0
-1042 -3224 3233 0
c (( - aux248 + shift(variant_fields_00002_00002_00003, -2) + shift(variant_fields_00002_00002_00005, -2))<=0)
1045 -3254 0
1046 -3255 0
1048 -3257 0
1050 -3259 0
1052 -3261 0
1054 -3263 0
1033 -3255 0
1033 1045 -3257 0
1033 1046 -3261 0
1033 1048 -3263 0
1033 1050 -3265 0
1033 1052 -3267 0
1033 1054 -3269 0
1034 -3257 0
1034 1045 -3259 0
1034 1046 -3263 0
1034 1048 -3265 0
1034 1050 -3267 0
1034 1052 -3269 0
1034 1054 -3271 0
1036 -3259 0
1036 1045 -3261 0
1036 1046 -3265 0
1036 1048 -3267 0
1036 1050 -3269 0
1036 1052 -3271 0
1036 1054 -3273 0
1038 -3261 0
1038 1045 -3263 0
1038 1046 -3267 0
1038 1048 -3269 0
1038 1050 -3271 0
1038 1052 -3273 0
1038 1054 -3275 0
1040 -3263 0
1040 1045 -3265 0
1040 1046 -3269 0
1040 1048 -3271 0
1040 1050 -3273 0
1040 1052 -3275 0
1040 1054 -3277 0
c (0<=( - aux248 + shift(variant_fields_00002_00002_00003, -2) + shift(variant_fields_00002_00002_00005, -2)))
-1054 3277 0
-1052 3275 0
-1050 3273 0
-1048 3271 0
-1046 3267 0
-1045 3265 0
-1040 3277 0
-1040 -1054 3275 0
-1040 -1052 3273 0
-1040 -1050 3271 0
-1040 -1048 3269 0
-1040 -1046 3265 0
-1040 -1045 3263 0
-1038 3275 0
-1038 -1054 3273 0
-1038 -1052 3271 0
-1038 -1050 3269 0
-1038 -1048 3267 0
-1038 -1046 3263 0
-1038 -1045 3261 0
-1036 3273 0
-1036 -1054 3271 0
-1036 -1052 3269 0
-1036 -1050 3267 0
-1036 -1048 3265 0
-1036 -1046 3261 0
-1036 -1045 3259 0
-1034 3271 0
-1034 -1054 3269 0
-1034 -1052 3267 0
-1034 -1050 3265 0
-1034 -1048 3263 0
-1034 -1046 3259 0
-1034 -1045 3257 0
-1033 3265 0
-1033 -1054 3263 0
-1033 -1052 3261 0
-1033 -1050 3259 0
-1033 -1048 3257 0
-1033 -1046 3255 0
-1033 -1045 3254 0
c (( - aux249 + aux10 + aux11)<=0)
2601 -3279 0
2602 -3280 0
2604 -3282 0
2606 -3284 0
2608 -3286 0
2610 -3288 0
2612 -3290 0
2614 -3292 0
2588 -3279 0
2588 2601 -3282 0
2588 2602 -3284 0
2588 2604 -3286 0
2588 2606 -3288 0
2588 2608 -3290 0
2588 2610 -3292 0
2588 2612 -3294 0
2588 2614 -3296 0
2589 -3280 0
2589 2601 -3284 0
2589 2602 -3286 0
2589 2604 -3288 0
2589 2606 -3290 0
2589 2608 -3292 0
2589 2610 -3294 0
2589 2612 -3296 0
2589 2614 -3298 0
2591 -3284 0
2591 2601 -3288 0
2591 2602 -3290 0
2591 2604 -3292 0
2591 2606 -3294 0
2591 2608 -3296 0
2591 2610 -3298 0
2591 2612 -3300 0
2591 2614 -3302 0
2593 -3286 0
2593 2601 -3290 0
2593 2602 -3292 0
2593 2604 -3294 0
2593 2606 -3296 0
2593 2608 -3298 0
2593 2610 -3300 0
2593 2612 -3302 0
2593 2614 -3304 0
2595 -3288 0
2595 2601 -3292 0
2595 2602 -3294 0
2595 2604 -3296 0
2595 2606 -3298 0
2595 2608 -3300 0
2595 2610 -3302 0
2595 2612 -3304 0
2595 2614 -3306 0
2597 -3290 0
2597 2601 -3294 0
2597 2602 -3296 0
2597 2604 -3298 0
2597 2606 -3300 0
2597 2608 -3302 0
2597 2610 -3304 0
2597 2612 -3306 0
2597 2614 -3308 0
2599 -3292 0
2599 2601 -3296 0
2599 2602 -3298 0
2599 2604 -3300 0
2599 2606 -3302 0
2599 2608 -3304 0
2599 2610 -3306 0
2599 2612 -3308 0
2599 2614 -3310 0
c (0<=( - aux249 + aux10 + aux11))
-2614 3310 0
-2612 3308 0
-2610 3306 0
-2608 3304 0
-2606 3302 0
-2604 3300 0
-2602 3298 0
-2601 3294 0
-2599 3310 0
-2599 -2614 3308 0
-2599 -2612 3306 0
-2599 -2610 3304 0
-2599 -2608 3302 0
-2599 -2606 3300 0
-2599 -2604 3298 0
-2599 -2602 3296 0
-2599 -2601 3292 0
-2597 3308 0
-2597 -2614 3306 0
-2597 -2612 3304 0
-2597 -2610 3302 0
-2597 -2608 3300 0
-2597 -2606 3298 0
-2597 -2604 3296 0
-2597 -2602 3294 0
-2597 -2601 3290 0
-2595 3306 0
-2595 -2614 3304 0
-2595 -2612 3302 0
-2595 -2610 3300 0
-2595 -2608 3298 0
-2595 -2606 3296 0
-2595 -2604 3294 0
-2595 -2602 3292 0
-2595 -2601 3288 0
-2593 3304 0
-2593 -2614 3302 0
-2593 -2612 3300 0
-2593 -2610 3298 0
-2593 -2608 3296 0
-2593 -2606 3294 0
-2593 -2604 3292 0
-2593 -2602 3290 0
-2593 -2601 3286 0
-2591 3300 0
-2591 -2614 3298 0
-2591 -2612 3296 0
-2591 -2610 3294 0
-2591 -2608 3292 0
-2591 -2606 3290 0
-2591 -2604 3288 0
-2591 -2602 3286 0
-2591 -2601 3282 0
-2589 3298 0
-2589 -2614 3296 0
-2589 -2612 3294 0
-2589 -2610 3292 0
-2589 -2608 3290 0
-2589 -2606 3288 0
-2589 -2604 3286 0
-2589 -2602 3284 0
-2589 -2601 3280 0
-2588 3294 0
-2588 -2614 3292 0
-2588 -2612 3290 0
-2588 -2610 3288 0
-2588 -2608 3286 0
-2588 -2606 3284 0
-2588 -2604 3282 0
-2588 -2602 3280 0
-2588 -2601 3279 0
c (( - aux250 + shift(variant_fields_00002_00006_00001, -4) + shift(variant_fields_00002_00006_00002, -5))<=0)
1283 -3313 0
1284 -3315 0
1280 -3312 0
1280 1283 -3315 0
1280 1284 -3317 0
1281 -3313 0
1281 1283 -3317 0
1281 1284 -3319 0
c (0<=( - aux250 + shift(variant_fields_00002_00006_00001, -4) + shift(variant_fields_00002_00006_00002, -5)))
-1284 3319 0
-1283 3315 0
-1281 3319 0
-1281 -1284 3317 0
-1281 -1283 3313 0
-1280 3317 0
-1280 -1284 3315 0
-1280 -1283 3312 0
c ((aux250 - aux251 + shift(variant_fields_00002_00006_00004, -2))<=0)
3312 -3321 0
3313 -3322 0
3315 -3324 0
3317 -3326 0
3319 -3328 0
1297 -3328 0
1297 3312 -3330 0
1297 3313 -3332 0
1297 3315 -3334 0
1297 3317 -3336 0
1297 3319 -3338 0
1298 -3332 0
1298 3312 -3334 0
1298 3313 -3336 0
1298 3315 -3338 0
1298 3317 -3340 0
1298 3319 -3342 0
c (0<=(aux250 - aux251 + shift(variant_fields_00002_00006_00004, -2)))
-3319 3342 0
-3317 3340 0
-3315 3338 0
-3313 3336 0
-3312 3334 0
-1298 3340 0
-1298 -3319 3338 0
-1298 -3317 3336 0
-1298 -3315 3334 0
-1298 -3313 3332 0
-1298 -3312 3330 0
-1297 3330 0
-1297 -3319 3328 0
-1297 -3317 3326 0
-1297 -3315 3324 0
-1297 -3313 3322 0
-1297 -3312 3321 0
c (( - aux252 + shift(variant_fields_00002_00006_00003, -1) + aux14)<=0)
2618 -3344 0
2619 -3345 0
2621 -3347 0
2623 -3349 0
2625 -3353 0
2627 -3355 0
2629 -3357 0
1286 -3345 0
1286 2618 -3347 0
1286 2619 -3349 0
1286 2621 -3351 0
1286 2623 -3353 0
1286 2625 -3357 0
1286 2627 -3359 0
1286 2629 -3361 0
1287 -3347 0
1287 2618 -3349 0
1287 2619 -3351 0
1287 2621 -3353 0
1287 2623 -3355 0
1287 2625 -3359 0
1287 2627 -3361 0
1287 2629 -3363 0
1289 -3349 0
1289 2618 -3351 0
1289 2619 -3353 0
1289 2621 -3355 0
1289 2623 -3357 0
1289 2625 -3361 0
1289 2627 -3363 0
1289 2629 -3365 0
1291 -3351 0
1291 2618 -3353 0
1291 2619 -3355 0
1291 2621 -3357 0
1291 2623 -3359 0
1291 2625 -3363 0
1291 2627 -3365 0
1291 2629 -3367 0
1293 -3353 0
1293 2618 -3355 0
1293 2619 -3357 0
1293 2621 -3359 0
1293 2623 -3361 0
1293 2625 -3365 0
1293 2627 -3367 0
1293 2629 -3369 0
1295 -3355 0
1295 2618 -3357 0
1295 2619 -3359 0
1295 2621 -3361 0
1295 2623 -3363 0
1295 2625 -3367 0
1295 2627 -3369 0
1295 2629 -3371 0
c (0<=( - aux252 + shift(variant_fields_00002_00006_00003, -1) + aux14))
-2629 3371 0
-2627 3369 0
-2625 3365 0
-2623 3363 0
-2621 3361 0
-2619 3359 0
-2618 3357 0
-1295 3371 0
-1295 -2629 3369 0
-1295 -2627 3367 0
-1295 -2625 3363 0
-1295 -2623 3361 0
-1295 -2621 3359 0
-1295 -2619 3357 0
-1295 -2618 3355 0
-1293 3369 0
-1293 -2629 3367 0
-1293 -2627 3365 0
-1293 -2625 3361 0
-1293 -2623 3359 0
-1293 -2621 3357 0
-1293 -2619 3355 0
-1293 -2618 3353 0
-1291 3367 0
-1291 -2629 3365 0
-1291 -2627 3363 0
-1291 -2625 3359 0
-1291 -2623 3357 0
-1291 -2621 3355 0
-1291 -2619 3353 0
-1291 -2618 3351 0
-1289 3365 0
-1289 -2629 3363 0
-1289 -2627 3361 0
-1289 -2625 3357 0
-1289 -2623 3355 0
-1289 -2621 3353 0
-1289 -2619 3351 0
-1289 -2618 3349 0
-1287 3363 0
-1287 -2629 3361 0
-1287 -2627 3359 0
-1287 -2625 3355 0
-1287 -2623 3353 0
-1287 -2621 3351 0
-1287 -2619 3349 0
-1287 -2618 3347 0
-1286 3359 0
-1286 -2629 3357 0
-1286 -2627 3355 0
-1286 -2625 3351 0
-1286 -2623 3349 0
-1286 -2621 3347 0
-1286 -2619 3345 0
-1286 -2618 3344 0
c (( - aux253 + shift(variant_fields_00003_00006_00001, -5) + shift(variant_fields_00003_00006_00003, -1))<=0)
1681 -3373 0
1682 -3378 0
1684 -3380 0
1686 -3382 0
-1671 -3374 0
-1671 1681 -3376 0
-1671 1682 -3380 0
-1671 1684 -3382 0
-1671 1686 -3384 0
c (0<=( - aux253 + shift(variant_fields_00003_00006_00001, -5) + shift(variant_fields_00003_00006_00003, -1)))
-1686 3384 0
-1684 3382 0
-1682 3378 0
-1681 3376 0
1671 3384 0
1671 -1686 3382 0
1671 -1684 3380 0
1671 -1682 3374 0
1671 -1681 3373 0
c (( - aux254 + shift(variant_fields_00003_00006_00002, -1) + aux20)<=0)
1672 -3386 0
1673 -3387 0
1675 -3389 0
1677 -3393 0
1679 -3397 0
2648 -3389 0
2648 1672 -3391 0
2648 1673 -3395 0
2648 1675 -3397 0
2648 1677 -3401 0
2648 1679 -3405 0
2649 -3393 0
2649 1672 -3395 0
2649 1673 -3399 0
2649 1675 -3401 0
2649 1677 -3405 0
2649 1679 -3409 0
2651 -3395 0
2651 1672 -3397 0
2651 1673 -3401 0
2651 1675 -3403 0
2651 1677 -3407 0
2651 1679 -3411 0
2653 -3397 0
2653 1672 -3399 0
2653 1673 -3403 0
2653 1675 -3405 0
2653 1677 -3409 0
2653 1679 -3413 0
c (0<=( - aux254 + shift(variant_fields_00003_00006_00002, -1) + aux20))
-1679 3411 0
-1677 3407 0
-1675 3405 0
-1673 3401 0
-1672 3399 0
-2653 3413 0
-2653 -1679 3409 0
-2653 -1677 3405 0
-2653 -1675 3403 0
-2653 -1673 3399 0
-2653 -1672 3397 0
-2651 3411 0
-2651 -1679 3407 0
-2651 -1677 3403 0
-2651 -1675 3401 0
-2651 -1673 3397 0
-2651 -1672 3395 0
-2649 3407 0
-2649 -1679 3403 0
-2649 -1677 3399 0
-2649 -1675 3397 0
-2649 -1673 3393 0
-2649 -1672 3391 0
-2648 3399 0
-2648 -1679 3395 0
-2648 -1677 3391 0
-2648 -1675 3389 0
-2648 -1673 3387 0
-2648 -1672 3386 0
c (( - aux255 + shift(variant_fields_00003_00006_00004, -1) + shift(variant_fields_00003_00006_00005, -1))<=0)
1699 -3415 0
1700 -3416 0
1702 -3418 0
1704 -3422 0
1706 -3424 0
1708 -3426 0
1688 -3415 0
1688 1699 -3416 0
1688 1700 -3418 0
1688 1702 -3420 0
1688 1704 -3424 0
1688 1706 -3426 0
1688 1708 -3428 0
1689 -3416 0
1689 1699 -3418 0
1689 1700 -3420 0
1689 1702 -3422 0
1689 1704 -3426 0
1689 1706 -3428 0
1689 1708 -3430 0
1691 -3418 0
1691 1699 -3420 0
1691 1700 -3422 0
1691 1702 -3424 0
1691 1704 -3428 0
1691 1706 -3430 0
1691 1708 -3432 0
1693 -3422 0
1693 1699 -3424 0
1693 1700 -3426 0
1693 1702 -3428 0
1693 1704 -3432 0
1693 1706 -3434 0
1693 1708 -3436 0
1695 -3424 0
1695 1699 -3426 0
1695 1700 -3428 0
1695 1702 -3430 0
1695 1704 -3434 0
1695 1706 -3436 0
1695 1708 -3438 0
1697 -3426 0
1697 1699 -3428 0
1697 1700 -3430 0
1697 1702 -3432 0
1697 1704 -3436 0
1697 1706 -3438 0
1697 1708 -3440 0
c (0<=( - aux255 + shift(variant_fields_00003_00006_00004, -1) + shift(variant_fields_00003_00006_00005, -1)))
-1708 3440 0
-1706 3438 0
-1704 3434 0
-1702 3432 0
-1700 3430 0
-1699 3428 0
-1697 3440 0
-1697 -1708 3438 0
-1697 -1706 3436 0
-1697 -1704 3432 0
-1697 -1702 3430 0
-1697 -1700 3428 0
-1697 -1699 3426 0
-1695 3438 0
-1695 -1708 3436 0
-1695 -1706 3434 0
-1695 -1704 3430 0
-1695 -1702 3428 0
-1695 -1700 3426 0
-1695 -1699 3424 0
-1693 3434 0
-1693 -1708 3432 0
-1693 -1706 3430 0
-1693 -1704 3426 0
-1693 -1702 3424 0
-1693 -1700 3422 0
-1693 -1699 3420 0
-1691 3432 0
-1691 -1708 3430 0
-1691 -1706 3428 0
-1691 -1704 3424 0
-1691 -1702 3422 0
-1691 -1700 3420 0
-1691 -1699 3418 0
-1689 3430 0
-1689 -1708 3428 0
-1689 -1706 3426 0
-1689 -1704 3422 0
-1689 -1702 3420 0
-1689 -1700 3418 0
-1689 -1699 3416 0
-1688 3428 0
-1688 -1708 3426 0
-1688 -1706 3424 0
-1688 -1704 3420 0
-1688 -1702 3418 0
-1688 -1700 3416 0
-1688 -1699 3415 0
c ((aux253 - aux256 + aux21)<=0)
2655 -3443 0
2656 -3445 0
2658 -3449 0
2660 -3451 0
2662 -3453 0
2664 -3455 0
2666 -3457 0
3373 -3442 0
3373 2655 -3445 0
3373 2656 -3447 0
3373 2658 -3451 0
3373 2660 -3453 0
3373 2662 -3455 0
3373 2664 -3457 0
3373 2666 -3459 0
3374 -3443 0
3374 2655 -3447 0
3374 2656 -3449 0
3374 2658 -3453 0
3374 2660 -3455 0
3374 2662 -3457 0
3374 2664 -3459 0
3374 2666 -3461 0
3376 -3445 0
3376 2655 -3449 0
3376 2656 -3451 0
3376 2658 -3455 0
3376 2660 -3457 0
3376 2662 -3459 0
3376 2664 -3461 0
3376 2666 -3463 0
3378 -3447 0
3378 2655 -3451 0
3378 2656 -3453 0
3378 2658 -3457 0
3378 2660 -3459 0
3378 2662 -3461 0
3378 2664 -3463 0
3378 2666 -3465 0
3380 -3451 0
3380 2655 -3455 0
3380 2656 -3457 0
3380 2658 -3461 0
3380 2660 -3463 0
3380 2662 -3465 0
3380 2664 -3467 0
3380 2666 -3469 0
3382 -3455 0
3382 2655 -3459 0
3382 2656 -3461 0
3382 2658 -3465 0
3382 2660 -3467 0
3382 2662 -3469 0
3382 2664 -3471 0
3382 2666 -3473 0
3384 -3459 0
3384 2655 -3463 0
3384 2656 -3465 0
3384 2658 -3469 0
3384 2660 -3471 0
3384 2662 -3473 0
3384 2664 -3475 0
3384 2666 -3477 0
c (0<=(aux253 - aux256 + aux21))
-2666 3477 0
-2664 3475 0
-2662 3473 0
-2660 3471 0
-2658 3467 0
-2656 3465 0
-2655 3461 0
-3384 3475 0
-3384 -2666 3473 0
-3384 -2664 3471 0
-3384 -2662 3469 0
-3384 -2660 3467 0
-3384 -2658 3463 0
-3384 -2656 3461 0
-3384 -2655 3457 0
-3382 3471 0
-3382 -2666 3469 0
-3382 -2664 3467 0
-3382 -2662 3465 0
-3382 -2660 3463 0
-3382 -2658 3459 0
-3382 -2656 3457 0
-3382 -2655 3453 0
-3380 3467 0
-3380 -2666 3465 0
-3380 -2664 3463 0
-3380 -2662 3461 0
-3380 -2660 3459 0
-3380 -2658 3455 0
-3380 -2656 3453 0
-3380 -2655 3449 0
-3378 3465 0
-3378 -2666 3463 0
-3378 -2664 3461 0
-3378 -2662 3459 0
-3378 -2660 3457 0
-3378 -2658 3453 0
-3378 -2656 3451 0
-3378 -2655 3447 0
-3376 3463 0
-3376 -2666 3461 0
-3376 -2664 3459 0
-3376 -2662 3457 0
-3376 -2660 3455 0
-3376 -2658 3451 0
-3376 -2656 3449 0
-3376 -2655 3445 0
-3374 3461 0
-3374 -2666 3459 0
-3374 -2664 3457 0
-3374 -2662 3455 0
-3374 -2660 3453 0
-3374 -2658 3449 0
-3374 -2656 3447 0
-3374 -2655 3443 0
-3373 3459 0
-3373 -2666 3457 0
-3373 -2664 3455 0
-3373 -2662 3453 0
-3373 -2660 3451 0
-3373 -2658 3447 0
-3373 -2656 3445 0
-3373 -2655 3442 0
c (( - aux257 + aux23 + shift(variant_fields_00003_00008_00001, -5))<=0)
2669 -3479 0
2670 -3484 0
2672 -3488 0
2674 -3490 0
1833 -3479 0
1833 2669 -3480 0
1833 2670 -3486 0
1833 2672 -3490 0
1833 2674 -3492 0
1834 -3480 0
1834 2669 -3482 0
1834 2670 -3488 0
1834 2672 -3492 0
1834 2674 -3494 0
1836 -3482 0
1836 2669 -3484 0
1836 2670 -3490 0
1836 2672 -3494 0
1836 2674 -3496 0
c (0<=( - aux257 + aux23 + shift(variant_fields_00003_00008_00001, -5)))
-2674 3496 0
-2672 3492 0
-2670 3486 0
-2669 3484 0
-1836 3496 0
-1836 -2674 3494 0
-1836 -2672 3490 0
-1836 -2670 3484 0
-1836 -2669 3482 0
-1834 3494 0
-1834 -2674 3492 0
-1834 -2672 3488 0
-1834 -2670 3482 0
-1834 -2669 3480 0
-1833 3492 0
-1833 -2674 3490 0
-1833 -2672 3486 0
-1833 -2670 3480 0
-1833 -2669 3479 0
c (( - aux258 + shift(variant_fields_00003_00008_00002, -1) + shift(variant_fields_00003_00008_00003, -1))<=0)
1847 -3498 0
1848 -3503 0
1850 -3507 0
1852 -3509 0
1854 -3511 0
1838 -3498 0
1838 1847 -3499 0
1838 1848 -3505 0
1838 1850 -3509 0
1838 1852 -3511 0
1838 1854 -3513 0
1839 -3499 0
1839 1847 -3501 0
1839 1848 -3507 0
1839 1850 -3511 0
1839 1852 -3513 0
1839 1854 -3515 0
1841 -3503 0
1841 1847 -3505 0
1841 1848 -3511 0
1841 1850 -3515 0
1841 1852 -3517 0
1841 1854 -3519 0
1843 -3507 0
1843 1847 -3509 0
1843 1848 -3515 0
1843 1850 -3519 0
1843 1852 -3521 0
1843 1854 -3523 0
1845 -3511 0
1845 1847 -3513 0
1845 1848 -3519 0
1845 1850 -3523 0
1845 1852 -3525 0
1845 1854 -3527 0
c (0<=( - aux258 + shift(variant_fields_00003_00008_00002, -1) + shift(variant_fields_00003_00008_00003, -1)))
-1854 3527 0
-1852 3525 0
-1850 3521 0
-1848 3515 0
-1847 3513 0
-1845 3525 0
-1845 -1854 3523 0
-1845 -1852 3521 0
-1845 -1850 3517 0
-1845 -1848 3511 0
-1845 -1847 3509 0
-1843 3521 0
-1843 -1854 3519 0
-1843 -1852 3517 0
-1843 -1850 3513 0
-1843 -1848 3507 0
-1843 -1847 3505 0
-1841 3517 0
-1841 -1854 3515 0
-1841 -1852 3513 0
-1841 -1850 3509 0
-1841 -1848 3503 0
-1841 -1847 3501 0
-1839 3515 0
-1839 -1854 3513 0
-1839 -1852 3511 0
-1839 -1850 3507 0
-1839 -1848 3501 0
-1839 -1847 3499 0
-1838 3513 0
-1838 -1854 3511 0
-1838 -1852 3509 0
-1838 -1850 3505 0
-1838 -1848 3499 0
-1838 -1847 3498 0
c (( - aux259 + shift(variant_fields_00003_00008_00004, -2) + shift(variant_fields_00003_00008_00005, -2))<=0)
1867 -3529 0
1868 -3530 0
1870 -3532 0
1872 -3534 0
1874 -3536 0
1876 -3538 0
1856 -3529 0
1856 1867 -3532 0
1856 1868 -3534 0
1856 1870 -3536 0
1856 1872 -3538 0
1856 1874 -3540 0
1856 1876 -3542 0
1857 -3530 0
1857 1867 -3534 0
1857 1868 -3536 0
1857 1870 -3538 0
1857 1872 -3540 0
1857 1874 -3542 0
1857 1876 -3544 0
1859 -3532 0
1859 1867 -3536 0
1859 1868 -3538 0
1859 1870 -3540 0
1859 1872 -3542 0
1859 1874 -3544 0
1859 1876 -3546 0
1861 -3534 0
1861 1867 -3538 0
1861 1868 -3540 0
1861 1870 -3542 0
1861 1872 -3544 0
1861 1874 -3546 0
1861 1876 -3548 0
1863 -3536 0
1863 1867 -3540 0
1863 1868 -3542 0
1863 1870 -3544 0
1863 1872 -3546 0
1863 1874 -3548 0
1863 1876 -3550 0
1865 -3538 0
1865 1867 -3542 0
1865 1868 -3544 0
1865 1870 -3546 0
1865 1872 -3548 0
1865 1874 -3550 0
1865 1876 -3552 0
c (0<=( - aux259 + shift(variant_fields_00003_00008_00004, -2) + shift(variant_fields_00003_00008_00005, -2)))
-1876 3552 0
-1874 3550 0
-1872 3548 0
-1870 3546 0
-1868 3544 0
-1867 3540 0
-1865 3552 0
-1865 -1876 3550 0
-1865 -1874 3548 0
-1865 -1872 3546 0
-1865 -1870 3544 0
-1865 -1868 3542 0
-1865 -1867 3538 0
-1863 3550 0
-1863 -1876 3548 0
-1863 -1874 3546 0
-1863 -1872 3544 0
-1863 -1870 3542 0
-1863 -1868 3540 0
-1863 -1867 3536 0
-1861 3548 0
-1861 -1876 3546 0
-1861 -1874 3544 0
-1861 -1872 3542 0
-1861 -1870 3540 0
-1861 -1868 3538 0
-1861 -1867 3534 0
-1859 3546 0
-1859 -1876 3544 0
-1859 -1874 3542 0
-1859 -1872 3540 0
-1859 -1870 3538 0
-1859 -1868 3536 0
-1859 -1867 3532 0
-1857 3544 0
-1857 -1876 3542 0
-1857 -1874 3540 0
-1857 -1872 3538 0
-1857 -1870 3536 0
-1857 -1868 3534 0
-1857 -1867 3530 0
-1856 3540 0
-1856 -1876 3538 0
-1856 -1874 3536 0
-1856 -1872 3534 0
-1856 -1870 3532 0
-1856 -1868 3530 0
-1856 -1867 3529 0
c (( - aux260 + aux24 + aux25)<=0)
2691 -3554 0
2692 -3555 0
2694 -3557 0
2696 -3559 0
2698 -3561 0
2700 -3563 0
2702 -3565 0
2704 -3567 0
2676 -3554 0
2676 2691 -3557 0
2676 2692 -3559 0
2676 2694 -3561 0
2676 2696 -3563 0
2676 2698 -3565 0
2676 2700 -3567 0
2676 2702 -3569 0
2676 2704 -3571 0
2677 -3555 0
2677 2691 -3559 0
2677 2692 -3561 0
2677 2694 -3563 0
2677 2696 -3565 0
2677 2698 -3567 0
2677 2700 -3569 0
2677 2702 -3571 0
2677 2704 -3573 0
2679 -3557 0
2679 2691 -3561 0
2679 2692 -3563 0
2679 2694 -3565 0
2679 2696 -3567 0
2679 2698 -3569 0
2679 2700 -3571 0
2679 2702 -3573 0
2679 2704 -3575 0
2681 -3559 0
2681 2691 -3563 0
2681 2692 -3565 0
2681 2694 -3567 0
2681 2696 -3569 0
2681 2698 -3571 0
2681 2700 -3573 0
2681 2702 -3575 0
2681 2704 -3577 0
2683 -3561 0
2683 2691 -3565 0
2683 2692 -3567 0
2683 2694 -3569 0
2683 2696 -3571 0
2683 2698 -3573 0
2683 2700 -3575 0
2683 2702 -3577 0
2683 2704 -3579 0
2685 -3563 0
2685 2691 -3567 0
2685 2692 -3569 0
2685 2694 -3571 0
2685 2696 -3573 0
2685 2698 -3575 0
2685 2700 -3577 0
2685 2702 -3579 0
2685 2704 -3581 0
2687 -3565 0
2687 2691 -3569 0
2687 2692 -3571 0
2687 2694 -3573 0
2687 2696 -3575 0
2687 2698 -3577 0
2687 2700 -3579 0
2687 2702 -3581 0
2687 2704 -3583 0
2689 -3567 0
2689 2691 -3571 0
2689 2692 -3573 0
2689 2694 -3575 0
2689 2696 -3577 0
2689 2698 -3579 0
2689 2700 -3581 0
2689 2702 -3583 0
2689 2704 -3585 0
c (0<=( - aux260 + aux24 + aux25))
-2704 3585 0
-2702 3583 0
-2700 3581 0
-2698 3579 0
-2696 3577 0
-2694 3575 0
-2692 3573 0
-2691 3569 0
-2689 3585 0
-2689 -2704 3583 0
-2689 -2702 3581 0
-2689 -2700 3579 0
-2689 -2698 3577 0
-2689 -2696 3575 0
-2689 -2694 3573 0
-2689 -2692 3571 0
-2689 -2691 3567 0
-2687 3583 0
-2687 -2704 3581 0
-2687 -2702 3579 0
-2687 -2700 3577 0
-2687 -2698 3575 0
-2687 -2696 3573 0
-2687 -2694 3571 0
-2687 -2692 3569 0
-2687 -2691 3565 0
-2685 3581 0
-2685 -2704 3579 0
-2685 -2702 3577 0
-2685 -2700 3575 0
-2685 -2698 3573 0
-2685 -2696 3571 0
-2685 -2694 3569 0
-2685 -2692 3567 0
-2685 -2691 3563 0
-2683 3579 0
-2683 -2704 3577 0
-2683 -2702 3575 0
-2683 -2700 3573 0
-2683 -2698 3571 0
-2683 -2696 3569 0
-2683 -2694 3567 0
-2683 -2692 3565 0
-2683 -2691 3561 0
-2681 3577 0
-2681 -2704 3575 0
-2681 -2702 3573 0
-2681 -2700 3571 0
-2681 -2698 3569 0
-2681 -2696 3567 0
-2681 -2694 3565 0
-2681 -2692 3563 0
-2681 -2691 3559 0
-2679 3575 0
-2679 -2704 3573 0
-2679 -2702 3571 0
-2679 -2700 3569 0
-2679 -2698 3567 0
-2679 -2696 3565 0
-2679 -2694 3563 0
-2679 -2692 3561 0
-2679 -2691 3557 0
-2677 3573 0
-2677 -2704 3571 0
-2677 -2702 3569 0
-2677 -2700 3567 0
-2677 -2698 3565 0
-2677 -2696 3563 0
-2677 -2694 3561 0
-2677 -2692 3559 0
-2677 -2691 3555 0
-2676 3569 0
-2676 -2704 3567 0
-2676 -2702 3565 0
-2676 -2700 3563 0
-2676 -2698 3561 0
-2676 -2696 3559 0
-2676 -2694 3557 0
-2676 -2692 3555 0
-2676 -2691 3554 0
c ((aux257 + aux259 - aux261)<=0)
3529 -3588 0
3530 -3590 0
3532 -3592 0
3534 -3594 0
3536 -3596 0
3538 -3598 0
3540 -3600 0
3542 -3602 0
3544 -3604 0
3546 -3606 0
3548 -3608 0
3550 -3610 0
3552 -3612 0
3479 -3587 0
3479 3529 -3590 0
3479 3530 -3592 0
3479 3532 -3594 0
3479 3534 -3596 0
3479 3536 -3598 0
3479 3538 -3600 0
3479 3540 -3602 0
3479 3542 -3604 0
3479 3544 -3606 0
3479 3546 -3608 0
3479 3548 -3610 0
3479 3550 -3612 0
3479 3552 -3614 0
3480 -3588 0
3480 3529 -3592 0
3480 3530 -3594 0
3480 3532 -3596 0
3480 3534 -3598 0
3480 3536 -3600 0
3480 3538 -3602 0
3480 3540 -3604 0
3480 3542 -3606 0
3480 3544 -3608 0
3480 3546 -3610 0
3480 3548 -3612 0
3480 3550 -3614 0
3480 3552 -3616 0
3482 -3590 0
3482 3529 -3594 0
3482 3530 -3596 0
3482 3532 -3598 0
3482 3534 -3600 0
3482 3536 -3602 0
3482 3538 -3604 0
3482 3540 -3606 0
3482 3542 -3608 0
3482 3544 -3610 0
3482 3546 -3612 0
3482 3548 -3614 0
3482 3550 -3616 0
3482 3552 -3618 0
3484 -3592 0
3484 3529 -3596 0
3484 3530 -3598 0
3484 3532 -3600 0
3484 3534 -3602 0
3484 3536 -3604 0
3484 3538 -3606 0
3484 3540 -3608 0
3484 3542 -3610 0
3484 3544 -3612 0
3484 3546 -3614 0
3484 3548 -3616 0
3484 3550 -3618 0
3484 3552 -3620 0
3486 -3594 0
3486 3529 -3598 0
3486 3530 -3600 0
3486 3532 -3602 0
3486 3534 -3604 0
3486 3536 -3606 0
3486 3538 -3608 0
3486 3540 -3610 0
3486 3542 -3612 0
3486 3544 -3614 0
3486 3546 -3616 0
3486 3548 -3618 0
3486 3550 -3620 0
3486 3552 -3622 0
3488 -3596 0
3488 3529 -3600 0
3488 3530 -3602 0
3488 3532 -3604 0
3488 3534 -3606 0
3488 3536 -3608 0
3488 3538 -3610 0
3488 3540 -3612 0
3488 3542 -3614 0
3488 3544 -3616 0
3488 3546 -3618 0
3488 3548 -3620 0
3488 3550 -3622 0
3488 3552 -3624 0
3490 -3598 0
3490 3529 -3602 0
3490 3530 -3604 0
3490 3532 -3606 0
3490 3534 -3608 0
3490 3536 -3610 0
3490 3538 -3612 0
3490 3540 -3614 0
3490 3542 -3616 0
3490 3544 -3618 0
3490 3546 -3620 0
3490 3548 -3622 0
3490 3550 -3624 0
3490 3552 -3626 0
3492 -3600 0
3492 3529 -3604 0
3492 3530 -3606 0
3492 3532 -3608 0
3492 3534 -3610 0
3492 3536 -3612 0
3492 3538 -3614 0
3492 3540 -3616 0
3492 3542 -3618 0
3492 3544 -3620 0
3492 3546 -3622 0
3492 3548 -3624 0
3492 3550 -3626 0
3492 3552 -3628 0
3494 -3602 0
3494 3529 -3606 0
3494 3530 -3608 0
3494 3532 -3610 0
3494 3534 -3612 0
3494 3536 -3614 0
3494 3538 -3616 0
3494 3540 -3618 0
3494 3542 -3620 0
3494 3544 -3622 0
3494 3546 -3624 0
3494 3548 -3626 0
3494 3550 -3628 0
3494 3552 -3630 0
3496 -3604 0
3496 3529 -3608 0
3496 3530 -3610 0
3496 3532 -3612 0
3496 3534 -3614 0
3496 3536 -3616 0
3496 3538 -3618 0
3496 3540 -3620 0
3496 3542 -3622 0
3496 3544 -3624 0
3496 3546 -3626 0
3496 3548 -3628 0
3496 3550 -3630 0
3496 3552 -3632 0
c (0<=(aux257 + aux259 - aux261))
-3552 3632 0
-3550 3630 0
-3548 3628 0
-3546 3626 0
-3544 3624 0
-3542 3622 0
-3540 3620 0
-3538 3618 0
-3536 3616 0
-3534 3614 0
-3532 3612 0
-3530 3610 0
-3529 3606 0
-3496 3632 0
-3496 -3552 3630 0
-3496 -3550 3628 0
-3496 -3548 3626 0
-3496 -3546 3624 0
-3496 -3544 3622 0
-3496 -3542 3620 0
-3496 -3540 3618 0
-3496 -3538 3616 0
-3496 -3536 3614 0
-3496 -3534 3612 0
-3496 -3532 3610 0
-3496 -3530 3608 0
-3496 -3529 3604 0
-3494 3630 0
-3494 -3552 3628 0
-3494 -3550 3626 0
-3494 -3548 3624 0
-3494 -3546 3622 0
-3494 -3544 3620 0
-3494 -3542 3618 0
-3494 -3540 3616 0
-3494 -3538 3614 0
-3494 -3536 3612 0
-3494 -3534 3610 0
-3494 -3532 3608 0
-3494 -3530 3606 0
-3494 -3529 3602 0
-3492 3628 0
-3492 -3552 3626 0
-3492 -3550 3624 0
-3492 -3548 3622 0
-3492 -3546 3620 0
-3492 -3544 3618 0
-3492 -3542 3616 0
-3492 -3540 3614 0
-3492 -3538 3612 0
-3492 -3536 3610 0
-3492 -3534 3608 0
-3492 -3532 3606 0
-3492 -3530 3604 0
-3492 -3529 3600 0
-3490 3626 0
-3490 -3552 3624 0
-3490 -3550 3622 0
-3490 -3548 3620 0
-3490 -3546 3618 0
-3490 -3544 3616 0
-3490 -3542 3614 0
-3490 -3540 3612 0
-3490 -3538 3610 0
-3490 -3536 3608 0
-3490 -3534 3606 0
-3490 -3532 3604 0
-3490 -3530 3602 0
-3490 -3529 3598 0
-3488 3624 0
-3488 -3552 3622 0
-3488 -3550 3620 0
-3488 -3548 3618 0
-3488 -3546 3616 0
-3488 -3544 3614 0
-3488 -3542 3612 0
-3488 -3540 3610 0
-3488 -3538 3608 0
-3488 -3536 3606 0
-3488 -3534 3604 0
-3488 -3532 3602 0
-3488 -3530 3600 0
-3488 -3529 3596 0
-3486 3622 0
-3486 -3552 3620 0
-3486 -3550 3618 0
-3486 -3548 3616 0
-3486 -3546 3614 0
-3486 -3544 3612 0
-3486 -3542 3610 0
-3486 -3540 3608 0
-3486 -3538 3606 0
-3486 -3536 3604 0
-3486 -3534 3602 0
-3486 -3532 3600 0
-3486 -3530 3598 0
-3486 -3529 3594 0
-3484 3620 0
-3484 -3552 3618 0
-3484 -3550 3616 0
-3484 -3548 3614 0
-3484 -3546 3612 0
-3484 -3544 3610 0
-3484 -3542 3608 0
-3484 -3540 3606 0
-3484 -3538 3604 0
-3484 -3536 3602 0
-3484 -3534 3600 0
-3484 -3532 3598 0
-3484 -3530 3596 0
-3484 -3529 3592 0
-3482 3618 0
-3482 -3552 3616 0
-3482 -3550 3614 0
-3482 -3548 3612 0
-3482 -3546 3610 0
-3482 -3544 3608 0
-3482 -3542 3606 0
-3482 -3540 3604 0
-3482 -3538 3602 0
-3482 -3536 3600 0
-3482 -3534 3598 0
-3482 -3532 3596 0
-3482 -3530 3594 0
-3482 -3529 3590 0
-3480 3616 0
-3480 -3552 3614 0
-3480 -3550 3612 0
-3480 -3548 3610 0
-3480 -3546 3608 0
-3480 -3544 3606 0
-3480 -3542 3604 0
-3480 -3540 3602 0
-3480 -3538 3600 0
-3480 -3536 3598 0
-3480 -3534 3596 0
-3480 -3532 3594 0
-3480 -3530 3592 0
-3480 -3529 3588 0
-3479 3614 0
-3479 -3552 3612 0
-3479 -3550 3610 0
-3479 -3548 3608 0
-3479 -3546 3606 0
-3479 -3544 3604 0
-3479 -3542 3602 0
-3479 -3540 3600 0
-3479 -3538 3598 0
-3479 -3536 3596 0
-3479 -3534 3594 0
-3479 -3532 3592 0
-3479 -3530 3590 0
-3479 -3529 3587 0
c (( - aux262 + shift(variant_fields_00004_00002_00001, -5) + aux27)<=0)
2707 -3634 0
2708 -3635 0
2710 -3639 0
-2012 -3634 0
-2012 2707 -3635 0
-2012 2708 -3637 0
-2012 2710 -3641 0
c (0<=( - aux262 + shift(variant_fields_00004_00002_00001, -5) + aux27))
-2710 3639 0
-2708 3637 0
-2707 3635 0
2012 3641 0
2012 -2710 3637 0
2012 -2708 3635 0
2012 -2707 3634 0
c ((aux262 - aux263 + shift(variant_fields_00004_00002_00004, -2))<=0)
2039 -3643 0
2040 -3646 0
2042 -3648 0
2044 -3650 0
2046 -3652 0
2048 -3654 0
3634 -3643 0
3634 2039 -3644 0
3634 2040 -3648 0
3634 2042 -3650 0
3634 2044 -3652 0
3634 2046 -3654 0
3634 2048 -3656 0
3635 -3644 0
3635 2039 -3646 0
3635 2040 -3650 0
3635 2042 -3652 0
3635 2044 -3654 0
3635 2046 -3656 0
3635 2048 -3658 0
3637 -3646 0
3637 2039 -3648 0
3637 2040 -3652 0
3637 2042 -3654 0
3637 2044 -3656 0
3637 2046 -3658 0
3637 2048 -3660 0
3639 -3654 0
3639 2039 -3656 0
3639 2040 -3660 0
3639 2042 -3662 0
3639 2044 -3664 0
3639 2046 -3666 0
3639 2048 -3668 0
3641 -3656 0
3641 2039 -3658 0
3641 2040 -3662 0
3641 2042 -3664 0
3641 2044 -3666 0
3641 2046 -3668 0
3641 2048 -3670 0
c (0<=(aux262 - aux263 + shift(variant_fields_00004_00002_00004, -2)))
-2048 3670 0
-2046 3668 0
-2044 3666 0
-2042 3664 0
-2040 3660 0
-2039 3658 0
-3641 3670 0
-3641 -2048 3668 0
-3641 -2046 3666 0
-3641 -2044 3664 0
-3641 -2042 3662 0
-3641 -2040 3658 0
-3641 -2039 3656 0
-3639 3662 0
-3639 -2048 3660 0
-3639 -2046 3658 0
-3639 -2044 3656 0
-3639 -2042 3654 0
-3639 -2040 3650 0
-3639 -2039 3648 0
-3637 3660 0
-3637 -2048 3658 0
-3637 -2046 3656 0
-3637 -2044 3654 0
-3637 -2042 3652 0
-3637 -2040 3648 0
-3637 -2039 3646 0
-3635 3658 0
-3635 -2048 3656 0
-3635 -2046 3654 0
-3635 -2044 3652 0
-3635 -2042 3650 0
-3635 -2040 3646 0
-3635 -2039 3644 0
-3634 3656 0
-3634 -2048 3654 0
-3634 -2046 3652 0
-3634 -2044 3650 0
-3634 -2042 3648 0
-3634 -2040 3644 0
-3634 -2039 3643 0
c (( - aux264 + shift(variant_fields_00004_00002_00002, -2) + shift(variant_fields_00004_00002_00005, -2))<=0)
2013 -3672 0
2014 -3673 0
2016 -3675 0
2018 -3677 0
2020 -3679 0
2022 -3681 0
2024 -3683 0
2050 -3672 0
2050 2013 -3673 0
2050 2014 -3675 0
2050 2016 -3677 0
2050 2018 -3679 0
2050 2020 -3681 0
2050 2022 -3683 0
2050 2024 -3685 0
2051 -3675 0
2051 2013 -3677 0
2051 2014 -3679 0
2051 2016 -3681 0
2051 2018 -3683 0
2051 2020 -3685 0
2051 2022 -3687 0
2051 2024 -3689 0
2053 -3677 0
2053 2013 -3679 0
2053 2014 -3681 0
2053 2016 -3683 0
2053 2018 -3685 0
2053 2020 -3687 0
2053 2022 -3689 0
2053 2024 -3691 0
2055 -3679 0
2055 2013 -3681 0
2055 2014 -3683 0
2055 2016 -3685 0
2055 2018 -3687 0
2055 2020 -3689 0
2055 2022 -3691 0
2055 2024 -3693 0
2057 -3681 0
2057 2013 -3683 0
2057 2014 -3685 0
2057 2016 -3687 0
2057 2018 -3689 0
2057 2020 -3691 0
2057 2022 -3693 0
2057 2024 -3695 0
2059 -3683 0
2059 2013 -3685 0
2059 2014 -3687 0
2059 2016 -3689 0
2059 2018 -3691 0
2059 2020 -3693 0
2059 2022 -3695 0
2059 2024 -3697 0
c (0<=( - aux264 + shift(variant_fields_00004_00002_00002, -2) + shift(variant_fields_00004_00002_00005, -2)))
-2024 3697 0
-2022 3695 0
-2020 3693 0
-2018 3691 0
-2016 3689 0
-2014 3687 0
-2013 3685 0
-2059 3697 0
-2059 -2024 3695 0
-2059 -2022 3693 0
-2059 -2020 3691 0
-2059 -2018 3689 0
-2059 -2016 3687 0
-2059 -2014 3685 0
-2059 -2013 3683 0
-2057 3695 0
-2057 -2024 3693 0
-2057 -2022 3691 0
-2057 -2020 3689 0
-2057 -2018 3687 0
-2057 -2016 3685 0
-2057 -2014 3683 0
-2057 -2013 3681 0
-2055 3693 0
-2055 -2024 3691 0
-2055 -2022 3689 0
-2055 -2020 3687 0
-2055 -2018 3685 0
-2055 -2016 3683 0
-2055 -2014 3681 0
-2055 -2013 3679 0
-2053 3691 0
-2053 -2024 3689 0
-2053 -2022 3687 0
-2053 -2020 3685 0
-2053 -2018 3683 0
-2053 -2016 3681 0
-2053 -2014 3679 0
-2053 -2013 3677 0
-2051 3687 0
-2051 -2024 3685 0
-2051 -2022 3683 0
-2051 -2020 3681 0
-2051 -2018 3679 0
-2051 -2016 3677 0
-2051 -2014 3675 0
-2051 -2013 3673 0
-2050 3685 0
-2050 -2024 3683 0
-2050 -2022 3681 0
-2050 -2020 3679 0
-2050 -2018 3677 0
-2050 -2016 3675 0
-2050 -2014 3673 0
-2050 -2013 3672 0
c ((SATLiteral(449) - aux267 + SATLiteral(208))<=0)
-208 -3709 0
-449 -3709 0
-449 -208 -3710 0
c (0<=(SATLiteral(449) - aux267 + SATLiteral(208)))
208 3710 0
449 3710 0
449 208 3709 0
c (( - aux268 + SATLiteral(282) + SATLiteral(2))<=0)
-2 -3712 0
-282 -3712 0
-282 -2 -3713 0
c (0<=( - aux268 + SATLiteral(282) + SATLiteral(2)))
2 3713 0
282 3713 0
282 2 3712 0
c (( - aux269 + SATLiteral(53) + SATLiteral(369))<=0)
-369 -3715 0
-53 -3715 0
-53 -369 -3716 0
c (0<=( - aux269 + SATLiteral(53) + SATLiteral(369)))
369 3716 0
53 3716 0
53 369 3715 0
c ((aux269 - aux270 + SATLiteral(132))<=0)
3715 -3718 0
3716 -3719 0
-132 -3718 0
-132 3715 -3719 0
-132 3716 -3721 0
c (0<=(aux269 - aux270 + SATLiteral(132)))
-3716 3721 0
-3715 3719 0
132 3721 0
132 -3716 3719 0
132 -3715 3718 0
c ((SATLiteral(450) - aux271 + SATLiteral(209))<=0)
-209 -3723 0
-450 -3723 0
-450 -209 -3724 0
c (0<=(SATLiteral(450) - aux271 + SATLiteral(209)))
209 3724 0
450 3724 0
450 209 3723 0
c (( - aux272 + SATLiteral(283) + SATLiteral(3))<=0)
-3 -3726 0
-283 -3726 0
-283 -3 -3727 0
c (0<=( - aux272 + SATLiteral(283) + SATLiteral(3)))
3 3727 0
283 3727 0
283 3 3726 0
c (( - aux273 + SATLiteral(54) + SATLiteral(370))<=0)
-370 -3729 0
-54 -3729 0
-54 -370 -3730 0
c (0<=( - aux273 + SATLiteral(54) + SATLiteral(370)))
370 3730 0
54 3730 0
54 370 3729 0
c ((aux273 - aux274 + SATLiteral(133))<=0)
3729 -3732 0
3730 -3733 0
-133 -3732 0
-133 3729 -3733 0
-133 3730 -3735 0
c (0<=(aux273 - aux274 + SATLiteral(133)))
-3730 3735 0
-3729 3733 0
133 3735 0
133 -3730 3733 0
133 -3729 3732 0
c ((SATLiteral(451) - aux275 + SATLiteral(210))<=0)
-210 -3737 0
-451 -3737 0
-451 -210 -3738 0
c (0<=(SATLiteral(451) - aux275 + SATLiteral(210)))
210 3738 0
451 3738 0
451 210 3737 0
c (( - aux276 + SATLiteral(284) + SATLiteral(4))<=0)
-4 -3740 0
-284 -3740 0
-284 -4 -3741 0
c (0<=( - aux276 + SATLiteral(284) + SATLiteral(4)))
4 3741 0
284 3741 0
284 4 3740 0
c (( - aux277 + SATLiteral(55) + SATLiteral(371))<=0)
-371 -3743 0
-55 -3743 0
-55 -371 -3744 0
c (0<=( - aux277 + SATLiteral(55) + SATLiteral(371)))
371 3744 0
55 3744 0
55 371 3743 0
c ((aux277 - aux278 + SATLiteral(134))<=0)
3743 -3746 0
3744 -3747 0
-134 -3746 0
-134 3743 -3747 0
-134 3744 -3749 0
c (0<=(aux277 - aux278 + SATLiteral(134)))
-3744 3749 0
-3743 3747 0
134 3749 0
134 -3744 3747 0
134 -3743 3746 0
c ((SATLiteral(452) - aux279 + SATLiteral(211))<=0)
-211 -3751 0
-452 -3751 0
-452 -211 -3752 0
c (0<=(SATLiteral(452) - aux279 + SATLiteral(211)))
211 3752 0
452 3752 0
452 211 3751 0
c (( - aux280 + SATLiteral(285) + SATLiteral(5))<=0)
-5 -3754 0
-285 -3754 0
-285 -5 -3755 0
c (0<=( - aux280 + SATLiteral(285) + SATLiteral(5)))
5 3755 0
285 3755 0
285 5 3754 0
c (( - aux281 + SATLiteral(56) + SATLiteral(372))<=0)
-372 -3757 0
-56 -3757 0
-56 -372 -3758 0
c (0<=( - aux281 + SATLiteral(56) + SATLiteral(372)))
372 3758 0
56 3758 0
56 372 3757 0
c ((aux281 - aux282 + SATLiteral(135))<=0)
3757 -3760 0
3758 -3761 0
-135 -3760 0
-135 3757 -3761 0
-135 3758 -3763 0
c (0<=(aux281 - aux282 + SATLiteral(135)))
-3758 3763 0
-3757 3761 0
135 3763 0
135 -3758 3761 0
135 -3757 3760 0
c ((SATLiteral(453) - aux283 + SATLiteral(6))<=0)
-6 -3765 0
-453 -3765 0
-453 -6 -3766 0
c (0<=(SATLiteral(453) - aux283 + SATLiteral(6)))
6 3766 0
453 3766 0
453 6 3765 0
c (( - aux284 + SATLiteral(286) + SATLiteral(57))<=0)
-57 -3768 0
-286 -3768 0
-286 -57 -3769 0
c (0<=( - aux284 + SATLiteral(286) + SATLiteral(57)))
57 3769 0
286 3769 0
286 57 3768 0
c ((SATLiteral(116) - aux285 + SATLiteral(212))<=0)
-212 -3771 0
-116 -3771 0
-116 -212 -3772 0
c (0<=(SATLiteral(116) - aux285 + SATLiteral(212)))
212 3772 0
116 3772 0
116 212 3771 0
c (( - aux286 + SATLiteral(293) + SATLiteral(373))<=0)
-373 -3774 0
-293 -3774 0
-293 -373 -3775 0
c (0<=( - aux286 + SATLiteral(293) + SATLiteral(373)))
373 3775 0
293 3775 0
293 373 3774 0
c (( - aux287 + SATLiteral(137) + SATLiteral(58))<=0)
-58 -3777 0
-137 -3777 0
-137 -58 -3778 0
c (0<=( - aux287 + SATLiteral(137) + SATLiteral(58)))
58 3778 0
137 3778 0
137 58 3777 0
c ((SATLiteral(-460) - aux289 + SATLiteral(214))<=0)
-214 -3783 0
460 -3783 0
460 -214 -3784 0
c (0<=(SATLiteral(-460) - aux289 + SATLiteral(214)))
214 3784 0
-460 3784 0
-460 214 3783 0
c (( - aux290 + SATLiteral(296) + SATLiteral(7))<=0)
-7 -3786 0
-296 -3786 0
-296 -7 -3787 0
c (0<=( - aux290 + SATLiteral(296) + SATLiteral(7)))
7 3787 0
296 3787 0
296 7 3786 0
c (( - aux291 + SATLiteral(59) + SATLiteral(376))<=0)
-376 -3789 0
-59 -3789 0
-59 -376 -3790 0
c (0<=( - aux291 + SATLiteral(59) + SATLiteral(376)))
376 3790 0
59 3790 0
59 376 3789 0
c ((aux291 - aux292 + SATLiteral(139))<=0)
3789 -3792 0
3790 -3793 0
-139 -3792 0
-139 3789 -3793 0
-139 3790 -3795 0
c (0<=(aux291 - aux292 + SATLiteral(139)))
-3790 3795 0
-3789 3793 0
139 3795 0
139 -3790 3793 0
139 -3789 3792 0
c ((SATLiteral(460) - aux293 + SATLiteral(215))<=0)
-215 -3797 0
-460 -3797 0
-460 -215 -3798 0
c (0<=(SATLiteral(460) - aux293 + SATLiteral(215)))
215 3798 0
460 3798 0
460 215 3797 0
c (( - aux294 + SATLiteral(297) + SATLiteral(8))<=0)
-8 -3800 0
-297 -3800 0
-297 -8 -3801 0
c (0<=( - aux294 + SATLiteral(297) + SATLiteral(8)))
8 3801 0
297 3801 0
297 8 3800 0
c (( - aux295 + SATLiteral(60) + SATLiteral(377))<=0)
-377 -3803 0
-60 -3803 0
-60 -377 -3804 0
c (0<=( - aux295 + SATLiteral(60) + SATLiteral(377)))
377 3804 0
60 3804 0
60 377 3803 0
c ((aux295 - aux296 + SATLiteral(140))<=0)
3803 -3806 0
3804 -3807 0
-140 -3806 0
-140 3803 -3807 0
-140 3804 -3809 0
c (0<=(aux295 - aux296 + SATLiteral(140)))
-3804 3809 0
-3803 3807 0
140 3809 0
140 -3804 3807 0
140 -3803 3806 0
c ((SATLiteral(117) - aux297 + SATLiteral(216))<=0)
-216 -3811 0
-117 -3811 0
-117 -216 -3812 0
c (0<=(SATLiteral(117) - aux297 + SATLiteral(216)))
216 3812 0
117 3812 0
117 216 3811 0
c (( - aux298 + SATLiteral(298) + SATLiteral(9))<=0)
-9 -3814 0
-298 -3814 0
-298 -9 -3815 0
c (0<=( - aux298 + SATLiteral(298) + SATLiteral(9)))
9 3815 0
298 3815 0
298 9 3814 0
c (( - aux299 + SATLiteral(61) + SATLiteral(378))<=0)
-378 -3817 0
-61 -3817 0
-61 -378 -3818 0
c (0<=( - aux299 + SATLiteral(61) + SATLiteral(378)))
378 3818 0
61 3818 0
61 378 3817 0
c ((aux299 - aux300 + SATLiteral(141))<=0)
3817 -3820 0
3818 -3821 0
-141 -3820 0
-141 3817 -3821 0
-141 3818 -3823 0
c (0<=(aux299 - aux300 + SATLiteral(141)))
-3818 3823 0
-3817 3821 0
141 3823 0
141 -3818 3821 0
141 -3817 3820 0
c (( - aux301 + SATLiteral(299) + SATLiteral(217))<=0)
-217 -3825 0
-299 -3825 0
-299 -217 -3826 0
c (0<=( - aux301 + SATLiteral(299) + SATLiteral(217)))
217 3826 0
299 3826 0
299 217 3825 0
c (( - aux302 + SATLiteral(142) + SATLiteral(379))<=0)
-379 -3828 0
-142 -3828 0
-142 -379 -3829 0
c (0<=( - aux302 + SATLiteral(142) + SATLiteral(379)))
379 3829 0
142 3829 0
142 379 3828 0
c (( - aux303 + SATLiteral(300) + SATLiteral(218))<=0)
-218 -3831 0
-300 -3831 0
-300 -218 -3832 0
c (0<=( - aux303 + SATLiteral(300) + SATLiteral(218)))
218 3832 0
300 3832 0
300 218 3831 0
c (( - aux304 + SATLiteral(143) + SATLiteral(380))<=0)
-380 -3834 0
-143 -3834 0
-143 -380 -3835 0
c (0<=( - aux304 + SATLiteral(143) + SATLiteral(380)))
380 3835 0
143 3835 0
143 380 3834 0
c ((SATLiteral(119) - aux305 + SATLiteral(225))<=0)
-225 -3837 0
-119 -3837 0
-119 -225 -3838 0
c (0<=(SATLiteral(119) - aux305 + SATLiteral(225)))
225 3838 0
119 3838 0
119 225 3837 0
c ((SATLiteral(461) - aux306 + SATLiteral(387))<=0)
-387 -3840 0
-461 -3840 0
-461 -387 -3841 0
c (0<=(SATLiteral(461) - aux306 + SATLiteral(387)))
387 3841 0
461 3841 0
461 387 3840 0
c (( - aux307 + SATLiteral(150) + SATLiteral(64))<=0)
-64 -3843 0
-150 -3843 0
-150 -64 -3844 0
c (0<=( - aux307 + SATLiteral(150) + SATLiteral(64)))
64 3844 0
150 3844 0
150 64 3843 0
c ((aux307 - aux308 + SATLiteral(307))<=0)
3843 -3846 0
3844 -3847 0
-307 -3846 0
-307 3843 -3847 0
-307 3844 -3849 0
c (0<=(aux307 - aux308 + SATLiteral(307)))
-3844 3849 0
-3843 3847 0
307 3849 0
307 -3844 3847 0
307 -3843 3846 0
c ((SATLiteral(462) - aux310 + SATLiteral(227))<=0)
-227 -3854 0
-462 -3854 0
-462 -227 -3855 0
c (0<=(SATLiteral(462) - aux310 + SATLiteral(227)))
227 3855 0
462 3855 0
462 227 3854 0
c (( - aux311 + SATLiteral(310) + SATLiteral(10))<=0)
-10 -3857 0
-310 -3857 0
-310 -10 -3858 0
c (0<=( - aux311 + SATLiteral(310) + SATLiteral(10)))
10 3858 0
310 3858 0
310 10 3857 0
c (( - aux312 + SATLiteral(65) + SATLiteral(390))<=0)
-390 -3860 0
-65 -3860 0
-65 -390 -3861 0
c (0<=( - aux312 + SATLiteral(65) + SATLiteral(390)))
390 3861 0
65 3861 0
65 390 3860 0
c ((aux312 - aux313 + SATLiteral(152))<=0)
3860 -3863 0
3861 -3864 0
-152 -3863 0
-152 3860 -3864 0
-152 3861 -3866 0
c (0<=(aux312 - aux313 + SATLiteral(152)))
-3861 3866 0
-3860 3864 0
152 3866 0
152 -3861 3864 0
152 -3860 3863 0
c ((SATLiteral(463) - aux314 + SATLiteral(228))<=0)
-228 -3868 0
-463 -3868 0
-463 -228 -3869 0
c (0<=(SATLiteral(463) - aux314 + SATLiteral(228)))
228 3869 0
463 3869 0
463 228 3868 0
c (( - aux315 + SATLiteral(311) + SATLiteral(11))<=0)
-11 -3871 0
-311 -3871 0
-311 -11 -3872 0
c (0<=( - aux315 + SATLiteral(311) + SATLiteral(11)))
11 3872 0
311 3872 0
311 11 3871 0
c (( - aux316 + SATLiteral(66) + SATLiteral(391))<=0)
-391 -3874 0
-66 -3874 0
-66 -391 -3875 0
c (0<=( - aux316 + SATLiteral(66) + SATLiteral(391)))
391 3875 0
66 3875 0
66 391 3874 0
c ((aux316 - aux317 + SATLiteral(153))<=0)
3874 -3877 0
3875 -3878 0
-153 -3877 0
-153 3874 -3878 0
-153 3875 -3880 0
c (0<=(aux316 - aux317 + SATLiteral(153)))
-3875 3880 0
-3874 3878 0
153 3880 0
153 -3875 3878 0
153 -3874 3877 0
c ((SATLiteral(120) - aux318 + SATLiteral(229))<=0)
-229 -3882 0
-120 -3882 0
-120 -229 -3883 0
c (0<=(SATLiteral(120) - aux318 + SATLiteral(229)))
229 3883 0
120 3883 0
120 229 3882 0
c ((SATLiteral(464) - aux319 + SATLiteral(12))<=0)
-12 -3885 0
-464 -3885 0
-464 -12 -3886 0
c (0<=(SATLiteral(464) - aux319 + SATLiteral(12)))
12 3886 0
464 3886 0
464 12 3885 0
c (( - aux320 + SATLiteral(154) + SATLiteral(392))<=0)
-392 -3888 0
-154 -3888 0
-154 -392 -3889 0
c (0<=( - aux320 + SATLiteral(154) + SATLiteral(392)))
392 3889 0
154 3889 0
154 392 3888 0
c (( - aux321 + SATLiteral(312) + SATLiteral(67))<=0)
-67 -3891 0
-312 -3891 0
-312 -67 -3892 0
c (0<=( - aux321 + SATLiteral(312) + SATLiteral(67)))
67 3892 0
312 3892 0
312 67 3891 0
c ((aux318 + aux321 - aux322)<=0)
3891 -3894 0
3892 -3895 0
3882 -3894 0
3882 3891 -3895 0
3882 3892 -3897 0
3883 -3895 0
3883 3891 -3897 0
3883 3892 -3899 0
c (0<=(aux318 + aux321 - aux322))
-3892 3899 0
-3891 3897 0
-3883 3899 0
-3883 -3892 3897 0
-3883 -3891 3895 0
-3882 3897 0
-3882 -3892 3895 0
-3882 -3891 3894 0
c ((SATLiteral(465) - aux323 + SATLiteral(230))<=0)
-230 -3901 0
-465 -3901 0
-465 -230 -3902 0
c (0<=(SATLiteral(465) - aux323 + SATLiteral(230)))
230 3902 0
465 3902 0
465 230 3901 0
c (( - aux324 + SATLiteral(313) + SATLiteral(13))<=0)
-13 -3904 0
-313 -3904 0
-313 -13 -3905 0
c (0<=( - aux324 + SATLiteral(313) + SATLiteral(13)))
13 3905 0
313 3905 0
313 13 3904 0
c (( - aux325 + SATLiteral(68) + SATLiteral(393))<=0)
-393 -3907 0
-68 -3907 0
-68 -393 -3908 0
c (0<=( - aux325 + SATLiteral(68) + SATLiteral(393)))
393 3908 0
68 3908 0
68 393 3907 0
c ((aux325 - aux326 + SATLiteral(155))<=0)
3907 -3910 0
3908 -3911 0
-155 -3910 0
-155 3907 -3911 0
-155 3908 -3913 0
c (0<=(aux325 - aux326 + SATLiteral(155)))
-3908 3913 0
-3907 3911 0
155 3913 0
155 -3908 3911 0
155 -3907 3910 0
c ((SATLiteral(466) - aux327 + SATLiteral(231))<=0)
-231 -3915 0
-466 -3915 0
-466 -231 -3916 0
c (0<=(SATLiteral(466) - aux327 + SATLiteral(231)))
231 3916 0
466 3916 0
466 231 3915 0
c (( - aux328 + SATLiteral(314) + SATLiteral(14))<=0)
-14 -3918 0
-314 -3918 0
-314 -14 -3919 0
c (0<=( - aux328 + SATLiteral(314) + SATLiteral(14)))
14 3919 0
314 3919 0
314 14 3918 0
c (( - aux329 + SATLiteral(69) + SATLiteral(394))<=0)
-394 -3921 0
-69 -3921 0
-69 -394 -3922 0
c (0<=( - aux329 + SATLiteral(69) + SATLiteral(394)))
394 3922 0
69 3922 0
69 394 3921 0
c ((aux329 - aux330 + SATLiteral(156))<=0)
3921 -3924 0
3922 -3925 0
-156 -3924 0
-156 3921 -3925 0
-156 3922 -3927 0
c (0<=(aux329 - aux330 + SATLiteral(156)))
-3922 3927 0
-3921 3925 0
156 3927 0
156 -3922 3925 0
156 -3921 3924 0
c (( - aux331 + SATLiteral(322) + SATLiteral(238))<=0)
-238 -3929 0
-322 -3929 0
-322 -238 -3930 0
c (0<=( - aux331 + SATLiteral(322) + SATLiteral(238)))
238 3930 0
322 3930 0
322 238 3929 0
c (( - aux332 + SATLiteral(163) + SATLiteral(402))<=0)
-402 -3932 0
-163 -3932 0
-163 -402 -3933 0
c (0<=( - aux332 + SATLiteral(163) + SATLiteral(402)))
402 3933 0
163 3933 0
163 402 3932 0
c (( - aux333 + SATLiteral(323) + SATLiteral(239))<=0)
-239 -3935 0
-323 -3935 0
-323 -239 -3936 0
c (0<=( - aux333 + SATLiteral(323) + SATLiteral(239)))
239 3936 0
323 3936 0
323 239 3935 0
c (( - aux334 + SATLiteral(164) + SATLiteral(403))<=0)
-403 -3938 0
-164 -3938 0
-164 -403 -3939 0
c (0<=( - aux334 + SATLiteral(164) + SATLiteral(403)))
403 3939 0
164 3939 0
164 403 3938 0
c (( - aux335 + SATLiteral(324) + SATLiteral(240))<=0)
-240 -3941 0
-324 -3941 0
-324 -240 -3942 0
c (0<=( - aux335 + SATLiteral(324) + SATLiteral(240)))
240 3942 0
324 3942 0
324 240 3941 0
c (( - aux336 + SATLiteral(165) + SATLiteral(404))<=0)
-404 -3944 0
-165 -3944 0
-165 -404 -3945 0
c (0<=( - aux336 + SATLiteral(165) + SATLiteral(404)))
404 3945 0
165 3945 0
165 404 3944 0
c ((SATLiteral(122) - aux338 + SATLiteral(243))<=0)
-243 -3950 0
-122 -3950 0
-122 -243 -3951 0
c (0<=(SATLiteral(122) - aux338 + SATLiteral(243)))
243 3951 0
122 3951 0
122 243 3950 0
c ((SATLiteral(468) - aux339 + SATLiteral(405))<=0)
-405 -3953 0
-468 -3953 0
-468 -405 -3954 0
c (0<=(SATLiteral(468) - aux339 + SATLiteral(405)))
405 3954 0
468 3954 0
468 405 3953 0
c (( - aux340 + SATLiteral(325) + SATLiteral(168))<=0)
-168 -3956 0
-325 -3956 0
-325 -168 -3957 0
c (0<=( - aux340 + SATLiteral(325) + SATLiteral(168)))
168 3957 0
325 3957 0
325 168 3956 0
c (( - aux341 + SATLiteral(326) + SATLiteral(245))<=0)
-245 -3959 0
-326 -3959 0
-326 -245 -3960 0
c (0<=( - aux341 + SATLiteral(326) + SATLiteral(245)))
245 3960 0
326 3960 0
326 245 3959 0
c (( - aux342 + SATLiteral(170) + SATLiteral(17))<=0)
-17 -3962 0
-170 -3962 0
-170 -17 -3963 0
c (0<=( - aux342 + SATLiteral(170) + SATLiteral(17)))
17 3963 0
170 3963 0
170 17 3962 0
c (( - aux343 + SATLiteral(76) + SATLiteral(406))<=0)
-406 -3965 0
-76 -3965 0
-76 -406 -3966 0
c (0<=( - aux343 + SATLiteral(76) + SATLiteral(406)))
406 3966 0
76 3966 0
76 406 3965 0
c ((SATLiteral(469) - aux344 + SATLiteral(18))<=0)
-18 -3968 0
-469 -3968 0
-469 -18 -3969 0
c (0<=(SATLiteral(469) - aux344 + SATLiteral(18)))
18 3969 0
469 3969 0
469 18 3968 0
c (( - aux345 + SATLiteral(41) + SATLiteral(407))<=0)
-407 -3971 0
-41 -3971 0
-41 -407 -3972 0
c (0<=( - aux345 + SATLiteral(41) + SATLiteral(407)))
407 3972 0
41 3972 0
41 407 3971 0
c (( - aux346 + SATLiteral(327) + SATLiteral(77))<=0)
-77 -3974 0
-327 -3974 0
-327 -77 -3975 0
c (0<=( - aux346 + SATLiteral(327) + SATLiteral(77)))
77 3975 0
327 3975 0
327 77 3974 0
c ((SATLiteral(470) - aux347 + SATLiteral(246))<=0)
-246 -3977 0
-470 -3977 0
-470 -246 -3978 0
c (0<=(SATLiteral(470) - aux347 + SATLiteral(246)))
246 3978 0
470 3978 0
470 246 3977 0
c (( - aux348 + SATLiteral(328) + SATLiteral(19))<=0)
-19 -3980 0
-328 -3980 0
-328 -19 -3981 0
c (0<=( - aux348 + SATLiteral(328) + SATLiteral(19)))
19 3981 0
328 3981 0
328 19 3980 0
c (( - aux349 + SATLiteral(78) + SATLiteral(408))<=0)
-408 -3983 0
-78 -3983 0
-78 -408 -3984 0
c (0<=( - aux349 + SATLiteral(78) + SATLiteral(408)))
408 3984 0
78 3984 0
78 408 3983 0
c ((aux349 - aux350 + SATLiteral(171))<=0)
3983 -3986 0
3984 -3987 0
-171 -3986 0
-171 3983 -3987 0
-171 3984 -3989 0
c (0<=(aux349 - aux350 + SATLiteral(171)))
-3984 3989 0
-3983 3987 0
171 3989 0
171 -3984 3987 0
171 -3983 3986 0
c ((SATLiteral(123) - aux351 + SATLiteral(247))<=0)
-247 -3991 0
-123 -3991 0
-123 -247 -3992 0
c (0<=(SATLiteral(123) - aux351 + SATLiteral(247)))
247 3992 0
123 3992 0
123 247 3991 0
c ((SATLiteral(471) - aux352 + SATLiteral(20))<=0)
-20 -3994 0
-471 -3994 0
-471 -20 -3995 0
c (0<=(SATLiteral(471) - aux352 + SATLiteral(20)))
20 3995 0
471 3995 0
471 20 3994 0
c (( - aux353 + SATLiteral(329) + SATLiteral(409))<=0)
-409 -3997 0
-329 -3997 0
-329 -409 -3998 0
c (0<=( - aux353 + SATLiteral(329) + SATLiteral(409)))
409 3998 0
329 3998 0
329 409 3997 0
c (( - aux354 + SATLiteral(172) + SATLiteral(79))<=0)
-79 -4000 0
-172 -4000 0
-172 -79 -4001 0
c (0<=( - aux354 + SATLiteral(172) + SATLiteral(79)))
79 4001 0
172 4001 0
172 79 4000 0
c ((aux354 - aux355 + SATLiteral(42))<=0)
4000 -4003 0
4001 -4004 0
-42 -4003 0
-42 4000 -4004 0
-42 4001 -4006 0
c (0<=(aux354 - aux355 + SATLiteral(42)))
-4001 4006 0
-4000 4004 0
42 4006 0
42 -4001 4004 0
42 -4000 4003 0
c ((aux351 + aux353 - aux356)<=0)
3997 -4008 0
3998 -4009 0
3991 -4008 0
3991 3997 -4009 0
3991 3998 -4011 0
3992 -4009 0
3992 3997 -4011 0
3992 3998 -4013 0
c (0<=(aux351 + aux353 - aux356))
-3998 4013 0
-3997 4011 0
-3992 4013 0
-3992 -3998 4011 0
-3992 -3997 4009 0
-3991 4011 0
-3991 -3998 4009 0
-3991 -3997 4008 0
c ((SATLiteral(472) - aux357 + SATLiteral(248))<=0)
-248 -4015 0
-472 -4015 0
-472 -248 -4016 0
c (0<=(SATLiteral(472) - aux357 + SATLiteral(248)))
248 4016 0
472 4016 0
472 248 4015 0
c (( - aux358 + SATLiteral(43) + SATLiteral(21))<=0)
-21 -4018 0
-43 -4018 0
-43 -21 -4019 0
c (0<=( - aux358 + SATLiteral(43) + SATLiteral(21)))
21 4019 0
43 4019 0
43 21 4018 0
c (( - aux359 + SATLiteral(173) + SATLiteral(410))<=0)
-410 -4021 0
-173 -4021 0
-173 -410 -4022 0
c (0<=( - aux359 + SATLiteral(173) + SATLiteral(410)))
410 4022 0
173 4022 0
173 410 4021 0
c (( - aux360 + SATLiteral(330) + SATLiteral(80))<=0)
-80 -4024 0
-330 -4024 0
-330 -80 -4025 0
c (0<=( - aux360 + SATLiteral(330) + SATLiteral(80)))
80 4025 0
330 4025 0
330 80 4024 0
c ((aux357 + aux360 - aux361)<=0)
4024 -4027 0
4025 -4028 0
4015 -4027 0
4015 4024 -4028 0
4015 4025 -4030 0
4016 -4028 0
4016 4024 -4030 0
4016 4025 -4032 0
c (0<=(aux357 + aux360 - aux361))
-4025 4032 0
-4024 4030 0
-4016 4032 0
-4016 -4025 4030 0
-4016 -4024 4028 0
-4015 4030 0
-4015 -4025 4028 0
-4015 -4024 4027 0
c ((SATLiteral(125) - aux363 + SATLiteral(256))<=0)
-256 -4037 0
-125 -4037 0
-125 -256 -4038 0
c (0<=(SATLiteral(125) - aux363 + SATLiteral(256)))
256 4038 0
125 4038 0
125 256 4037 0
c ((SATLiteral(474) - aux364 + SATLiteral(418))<=0)
-418 -4040 0
-474 -4040 0
-474 -418 -4041 0
c (0<=(SATLiteral(474) - aux364 + SATLiteral(418)))
418 4041 0
474 4041 0
474 418 4040 0
c (( - aux365 + SATLiteral(338) + SATLiteral(181))<=0)
-181 -4043 0
-338 -4043 0
-338 -181 -4044 0
c (0<=( - aux365 + SATLiteral(338) + SATLiteral(181)))
181 4044 0
338 4044 0
338 181 4043 0
c (( - aux366 + SATLiteral(339) + SATLiteral(258))<=0)
-258 -4046 0
-339 -4046 0
-339 -258 -4047 0
c (0<=( - aux366 + SATLiteral(339) + SATLiteral(258)))
258 4047 0
339 4047 0
339 258 4046 0
c (( - aux367 + SATLiteral(183) + SATLiteral(22))<=0)
-22 -4049 0
-183 -4049 0
-183 -22 -4050 0
c (0<=( - aux367 + SATLiteral(183) + SATLiteral(22)))
22 4050 0
183 4050 0
183 22 4049 0
c (( - aux368 + SATLiteral(89) + SATLiteral(419))<=0)
-419 -4052 0
-89 -4052 0
-89 -419 -4053 0
c (0<=( - aux368 + SATLiteral(89) + SATLiteral(419)))
419 4053 0
89 4053 0
89 419 4052 0
c ((SATLiteral(475) - aux369 + SATLiteral(23))<=0)
-23 -4055 0
-475 -4055 0
-475 -23 -4056 0
c (0<=(SATLiteral(475) - aux369 + SATLiteral(23)))
23 4056 0
475 4056 0
475 23 4055 0
c (( - aux370 + SATLiteral(44) + SATLiteral(420))<=0)
-420 -4058 0
-44 -4058 0
-44 -420 -4059 0
c (0<=( - aux370 + SATLiteral(44) + SATLiteral(420)))
420 4059 0
44 4059 0
44 420 4058 0
c (( - aux371 + SATLiteral(340) + SATLiteral(90))<=0)
-90 -4061 0
-340 -4061 0
-340 -90 -4062 0
c (0<=( - aux371 + SATLiteral(340) + SATLiteral(90)))
90 4062 0
340 4062 0
340 90 4061 0
c ((SATLiteral(476) - aux372 + SATLiteral(259))<=0)
-259 -4064 0
-476 -4064 0
-476 -259 -4065 0
c (0<=(SATLiteral(476) - aux372 + SATLiteral(259)))
259 4065 0
476 4065 0
476 259 4064 0
c (( - aux373 + SATLiteral(341) + SATLiteral(24))<=0)
-24 -4067 0
-341 -4067 0
-341 -24 -4068 0
c (0<=( - aux373 + SATLiteral(341) + SATLiteral(24)))
24 4068 0
341 4068 0
341 24 4067 0
c (( - aux374 + SATLiteral(91) + SATLiteral(421))<=0)
-421 -4070 0
-91 -4070 0
-91 -421 -4071 0
c (0<=( - aux374 + SATLiteral(91) + SATLiteral(421)))
421 4071 0
91 4071 0
91 421 4070 0
c ((aux374 - aux375 + SATLiteral(184))<=0)
4070 -4073 0
4071 -4074 0
-184 -4073 0
-184 4070 -4074 0
-184 4071 -4076 0
c (0<=(aux374 - aux375 + SATLiteral(184)))
-4071 4076 0
-4070 4074 0
184 4076 0
184 -4071 4074 0
184 -4070 4073 0
c ((SATLiteral(126) - aux376 + SATLiteral(260))<=0)
-260 -4078 0
-126 -4078 0
-126 -260 -4079 0
c (0<=(SATLiteral(126) - aux376 + SATLiteral(260)))
260 4079 0
126 4079 0
126 260 4078 0
c ((SATLiteral(477) - aux377 + SATLiteral(422))<=0)
-422 -4081 0
-477 -4081 0
-477 -422 -4082 0
c (0<=(SATLiteral(477) - aux377 + SATLiteral(422)))
422 4082 0
477 4082 0
477 422 4081 0
c (( - aux378 + SATLiteral(342) + SATLiteral(92))<=0)
-92 -4084 0
-342 -4084 0
-342 -92 -4085 0
c (0<=( - aux378 + SATLiteral(342) + SATLiteral(92)))
92 4085 0
342 4085 0
342 92 4084 0
c (( - aux379 + SATLiteral(45) + SATLiteral(185))<=0)
-185 -4087 0
-45 -4087 0
-45 -185 -4088 0
c (0<=( - aux379 + SATLiteral(45) + SATLiteral(185)))
185 4088 0
45 4088 0
45 185 4087 0
c ((aux376 + aux379 - aux380)<=0)
4087 -4090 0
4088 -4091 0
4078 -4090 0
4078 4087 -4091 0
4078 4088 -4093 0
4079 -4091 0
4079 4087 -4093 0
4079 4088 -4095 0
c (0<=(aux376 + aux379 - aux380))
-4088 4095 0
-4087 4093 0
-4079 4095 0
-4079 -4088 4093 0
-4079 -4087 4091 0
-4078 4093 0
-4078 -4088 4091 0
-4078 -4087 4090 0
c ((SATLiteral(478) - aux381 + SATLiteral(261))<=0)
-261 -4097 0
-478 -4097 0
-478 -261 -4098 0
c (0<=(SATLiteral(478) - aux381 + SATLiteral(261)))
261 4098 0
478 4098 0
478 261 4097 0
c (( - aux382 + SATLiteral(46) + SATLiteral(423))<=0)
-423 -4100 0
-46 -4100 0
-46 -423 -4101 0
c (0<=( - aux382 + SATLiteral(46) + SATLiteral(423)))
423 4101 0
46 4101 0
46 423 4100 0
c (( - aux383 + SATLiteral(186) + SATLiteral(93))<=0)
-93 -4103 0
-186 -4103 0
-186 -93 -4104 0
c (0<=( - aux383 + SATLiteral(186) + SATLiteral(93)))
93 4104 0
186 4104 0
186 93 4103 0
c ((aux383 - aux384 + SATLiteral(343))<=0)
4103 -4106 0
4104 -4107 0
-343 -4106 0
-343 4103 -4107 0
-343 4104 -4109 0
c (0<=(aux383 - aux384 + SATLiteral(343)))
-4104 4109 0
-4103 4107 0
343 4109 0
343 -4104 4107 0
343 -4103 4106 0
c (( - aux387 + SATLiteral(47) + SATLiteral(270))<=0)
-270 -4117 0
-47 -4117 0
-47 -270 -4118 0
c (0<=( - aux387 + SATLiteral(47) + SATLiteral(270)))
270 4118 0
47 4118 0
47 270 4117 0
c (( - aux388 + SATLiteral(353) + SATLiteral(433))<=0)
-433 -4120 0
-353 -4120 0
-353 -433 -4121 0
c (0<=( - aux388 + SATLiteral(353) + SATLiteral(433)))
433 4121 0
353 4121 0
353 433 4120 0
c (( - aux389 + SATLiteral(194) + SATLiteral(100))<=0)
-100 -4123 0
-194 -4123 0
-194 -100 -4124 0
c (0<=( - aux389 + SATLiteral(194) + SATLiteral(100)))
100 4124 0
194 4124 0
194 100 4123 0
c (( - aux390 + SATLiteral(48) + SATLiteral(271))<=0)
-271 -4126 0
-48 -4126 0
-48 -271 -4127 0
c (0<=( - aux390 + SATLiteral(48) + SATLiteral(271)))
271 4127 0
48 4127 0
48 271 4126 0
c (( - aux391 + SATLiteral(354) + SATLiteral(434))<=0)
-434 -4129 0
-354 -4129 0
-354 -434 -4130 0
c (0<=( - aux391 + SATLiteral(354) + SATLiteral(434)))
434 4130 0
354 4130 0
354 434 4129 0
c (( - aux392 + SATLiteral(195) + SATLiteral(101))<=0)
-101 -4132 0
-195 -4132 0
-195 -101 -4133 0
c (0<=( - aux392 + SATLiteral(195) + SATLiteral(101)))
101 4133 0
195 4133 0
195 101 4132 0
c ((SATLiteral(481) - aux395 + SATLiteral(273))<=0)
-273 -4141 0
-481 -4141 0
-481 -273 -4142 0
c (0<=(SATLiteral(481) - aux395 + SATLiteral(273)))
273 4142 0
481 4142 0
481 273 4141 0
c (( - aux396 + SATLiteral(357) + SATLiteral(26))<=0)
-26 -4144 0
-357 -4144 0
-357 -26 -4145 0
c (0<=( - aux396 + SATLiteral(357) + SATLiteral(26)))
26 4145 0
357 4145 0
357 26 4144 0
c (( - aux397 + SATLiteral(103) + SATLiteral(437))<=0)
-437 -4147 0
-103 -4147 0
-103 -437 -4148 0
c (0<=( - aux397 + SATLiteral(103) + SATLiteral(437)))
437 4148 0
103 4148 0
103 437 4147 0
c ((aux397 - aux398 + SATLiteral(197))<=0)
4147 -4150 0
4148 -4151 0
-197 -4150 0
-197 4147 -4151 0
-197 4148 -4153 0
c (0<=(aux397 - aux398 + SATLiteral(197)))
-4148 4153 0
-4147 4151 0
197 4153 0
197 -4148 4151 0
197 -4147 4150 0
c ((SATLiteral(482) - aux399 + SATLiteral(274))<=0)
-274 -4155 0
-482 -4155 0
-482 -274 -4156 0
c (0<=(SATLiteral(482) - aux399 + SATLiteral(274)))
274 4156 0
482 4156 0
482 274 4155 0
c (( - aux400 + SATLiteral(358) + SATLiteral(438))<=0)
-438 -4158 0
-358 -4158 0
-358 -438 -4159 0
c (0<=( - aux400 + SATLiteral(358) + SATLiteral(438)))
438 4159 0
358 4159 0
358 438 4158 0
c ((SATLiteral(483) - aux402 + SATLiteral(276))<=0)
-276 -4164 0
-483 -4164 0
-483 -276 -4165 0
c (0<=(SATLiteral(483) - aux402 + SATLiteral(276)))
276 4165 0
483 4165 0
483 276 4164 0
c (( - aux403 + SATLiteral(360) + SATLiteral(28))<=0)
-28 -4167 0
-360 -4167 0
-360 -28 -4168 0
c (0<=( - aux403 + SATLiteral(360) + SATLiteral(28)))
28 4168 0
360 4168 0
360 28 4167 0
c (( - aux404 + SATLiteral(105) + SATLiteral(440))<=0)
-440 -4170 0
-105 -4170 0
-105 -440 -4171 0
c (0<=( - aux404 + SATLiteral(105) + SATLiteral(440)))
440 4171 0
105 4171 0
105 440 4170 0
c ((aux404 - aux405 + SATLiteral(200))<=0)
4170 -4173 0
4171 -4174 0
-200 -4173 0
-200 4170 -4174 0
-200 4171 -4176 0
c (0<=(aux404 - aux405 + SATLiteral(200)))
-4171 4176 0
-4170 4174 0
200 4176 0
200 -4171 4174 0
200 -4170 4173 0
c ((SATLiteral(484) - aux406 + SATLiteral(277))<=0)
-277 -4178 0
-484 -4178 0
-484 -277 -4179 0
c (0<=(SATLiteral(484) - aux406 + SATLiteral(277)))
277 4179 0
484 4179 0
484 277 4178 0
c (( - aux407 + SATLiteral(361) + SATLiteral(29))<=0)
-29 -4181 0
-361 -4181 0
-361 -29 -4182 0
c (0<=( - aux407 + SATLiteral(361) + SATLiteral(29)))
29 4182 0
361 4182 0
361 29 4181 0
c (( - aux408 + SATLiteral(106) + SATLiteral(441))<=0)
-441 -4184 0
-106 -4184 0
-106 -441 -4185 0
c (0<=( - aux408 + SATLiteral(106) + SATLiteral(441)))
441 4185 0
106 4185 0
106 441 4184 0
c ((aux408 - aux409 + SATLiteral(201))<=0)
4184 -4187 0
4185 -4188 0
-201 -4187 0
-201 4184 -4188 0
-201 4185 -4190 0
c (0<=(aux408 - aux409 + SATLiteral(201)))
-4185 4190 0
-4184 4188 0
201 4190 0
201 -4185 4188 0
201 -4184 4187 0
c ((SATLiteral(485) - aux410 + SATLiteral(278))<=0)
-278 -4192 0
-485 -4192 0
-485 -278 -4193 0
c (0<=(SATLiteral(485) - aux410 + SATLiteral(278)))
278 4193 0
485 4193 0
485 278 4192 0
c (( - aux411 + SATLiteral(362) + SATLiteral(30))<=0)
-30 -4195 0
-362 -4195 0
-362 -30 -4196 0
c (0<=( - aux411 + SATLiteral(362) + SATLiteral(30)))
30 4196 0
362 4196 0
362 30 4195 0
c (( - aux412 + SATLiteral(107) + SATLiteral(442))<=0)
-442 -4198 0
-107 -4198 0
-107 -442 -4199 0
c (0<=( - aux412 + SATLiteral(107) + SATLiteral(442)))
442 4199 0
107 4199 0
107 442 4198 0
c ((aux412 - aux413 + SATLiteral(202))<=0)
4198 -4201 0
4199 -4202 0
-202 -4201 0
-202 4198 -4202 0
-202 4199 -4204 0
c (0<=(aux412 - aux413 + SATLiteral(202)))
-4199 4204 0
-4198 4202 0
202 4204 0
202 -4199 4202 0
202 -4198 4201 0
c ((SATLiteral(486) - aux414 + SATLiteral(31))<=0)
-31 -4206 0
-486 -4206 0
-486 -31 -4207 0
c (0<=(SATLiteral(486) - aux414 + SATLiteral(31)))
31 4207 0
486 4207 0
486 31 4206 0
c (( - aux415 + SATLiteral(363) + SATLiteral(108))<=0)
-108 -4209 0
-363 -4209 0
-363 -108 -4210 0
c (0<=( - aux415 + SATLiteral(363) + SATLiteral(108)))
108 4210 0
363 4210 0
363 108 4209 0
c ((SATLiteral(487) - aux416 + SATLiteral(-279))<=0)
279 -4212 0
-487 -4212 0
-487 279 -4213 0
c (0<=(SATLiteral(487) - aux416 + SATLiteral(-279)))
-279 4213 0
487 4213 0
487 -279 4212 0
c (( - aux417 + SATLiteral(364) + SATLiteral(33))<=0)
-33 -4215 0
-364 -4215 0
-364 -33 -4216 0
c (0<=( - aux417 + SATLiteral(364) + SATLiteral(33)))
33 4216 0
364 4216 0
364 33 4215 0
c (( - aux418 + SATLiteral(110) + SATLiteral(443))<=0)
-443 -4218 0
-110 -4218 0
-110 -443 -4219 0
c (0<=( - aux418 + SATLiteral(110) + SATLiteral(443)))
443 4219 0
110 4219 0
110 443 4218 0
c ((aux418 - aux419 + SATLiteral(205))<=0)
4218 -4221 0
4219 -4222 0
-205 -4221 0
-205 4218 -4222 0
-205 4219 -4224 0
c (0<=(aux418 - aux419 + SATLiteral(205)))
-4219 4224 0
-4218 4222 0
205 4224 0
205 -4219 4222 0
205 -4218 4221 0
c ((SATLiteral(489) - aux420 + SATLiteral(279))<=0)
-279 -4226 0
-489 -4226 0
-489 -279 -4227 0
c (0<=(SATLiteral(489) - aux420 + SATLiteral(279)))
279 4227 0
489 4227 0
489 279 4226 0
c (( - aux421 + SATLiteral(366) + SATLiteral(34))<=0)
-34 -4229 0
-366 -4229 0
-366 -34 -4230 0
c (0<=( - aux421 + SATLiteral(366) + SATLiteral(34)))
34 4230 0
366 4230 0
366 34 4229 0
c (( - aux422 + SATLiteral(111) + SATLiteral(445))<=0)
-445 -4232 0
-111 -4232 0
-111 -445 -4233 0
c (0<=( - aux422 + SATLiteral(111) + SATLiteral(445)))
445 4233 0
111 4233 0
111 445 4232 0
c ((aux422 - aux423 + SATLiteral(206))<=0)
4232 -4235 0
4233 -4236 0
-206 -4235 0
-206 4232 -4236 0
-206 4233 -4238 0
c (0<=(aux422 - aux423 + SATLiteral(206)))
-4233 4238 0
-4232 4236 0
206 4238 0
206 -4233 4236 0
206 -4232 4235 0
c ((SATLiteral(490) - aux424 + SATLiteral(35))<=0)
-35 -4240 0
-490 -4240 0
-490 -35 -4241 0
c (0<=(SATLiteral(490) - aux424 + SATLiteral(35)))
35 4241 0
490 4241 0
490 35 4240 0
c (( - aux425 + SATLiteral(367) + SATLiteral(446))<=0)
-446 -4243 0
-367 -4243 0
-367 -446 -4244 0
c (0<=( - aux425 + SATLiteral(367) + SATLiteral(446)))
446 4244 0
367 4244 0
367 446 4243 0
c ((SATLiteral(491) - aux426 + SATLiteral(36))<=0)
-36 -4246 0
-491 -4246 0
-491 -36 -4247 0
c (0<=(SATLiteral(491) - aux426 + SATLiteral(36)))
36 4247 0
491 4247 0
491 36 4246 0
c (( - aux427 + SATLiteral(368) + SATLiteral(113))<=0)
-113 -4249 0
-368 -4249 0
-368 -113 -4250 0
c (0<=( - aux427 + SATLiteral(368) + SATLiteral(113)))
113 4250 0
368 4250 0
368 113 4249 0
c (( - aux429 + SATLiteral(2) + SATLiteral(33))<=0)
-33 -4255 0
-2 -4255 0
-2 -33 -4256 0
c (0<=( - aux429 + SATLiteral(2) + SATLiteral(33)))
33 4256 0
2 4256 0
2 33 4255 0
c (( - aux430 + SATLiteral(7) + SATLiteral(28))<=0)
-28 -4258 0
-7 -4258 0
-7 -28 -4259 0
c (0<=( - aux430 + SATLiteral(7) + SATLiteral(28)))
28 4259 0
7 4259 0
7 28 4258 0
c (( - aux431 + SATLiteral(18) + SATLiteral(23))<=0)
-23 -4261 0
-18 -4261 0
-18 -23 -4262 0
c (0<=( - aux431 + SATLiteral(18) + SATLiteral(23)))
23 4262 0
18 4262 0
18 23 4261 0
c ((aux431 - aux432 + SATLiteral(10))<=0)
4261 -4264 0
4262 -4265 0
-10 -4264 0
-10 4261 -4265 0
-10 4262 -4267 0
c (0<=(aux431 - aux432 + SATLiteral(10)))
-4262 4267 0
-4261 4265 0
10 4267 0
10 -4262 4265 0
10 -4261 4264 0
c (( - aux433 + SATLiteral(3) + SATLiteral(24))<=0)
-24 -4269 0
-3 -4269 0
-3 -24 -4270 0
c (0<=( - aux433 + SATLiteral(3) + SATLiteral(24)))
24 4270 0
3 4270 0
3 24 4269 0
c (( - aux434 + SATLiteral(8) + SATLiteral(19))<=0)
-19 -4272 0
-8 -4272 0
-8 -19 -4273 0
c (0<=( - aux434 + SATLiteral(8) + SATLiteral(19)))
19 4273 0
8 4273 0
8 19 4272 0
c (( - aux435 + SATLiteral(4) + SATLiteral(34))<=0)
-34 -4275 0
-4 -4275 0
-4 -34 -4276 0
c (0<=( - aux435 + SATLiteral(4) + SATLiteral(34)))
34 4276 0
4 4276 0
4 34 4275 0
c (( - aux436 + SATLiteral(9) + SATLiteral(29))<=0)
-29 -4278 0
-9 -4278 0
-9 -29 -4279 0
c (0<=( - aux436 + SATLiteral(9) + SATLiteral(29)))
29 4279 0
9 4279 0
9 29 4278 0
c (( - aux437 + SATLiteral(12) + SATLiteral(20))<=0)
-20 -4281 0
-12 -4281 0
-12 -20 -4282 0
c (0<=( - aux437 + SATLiteral(12) + SATLiteral(20)))
20 4282 0
12 4282 0
12 20 4281 0
c (( - aux441 + SATLiteral(70) + SATLiteral(109))<=0)
-109 -4293 0
-70 -4293 0
-70 -109 -4294 0
c (0<=( - aux441 + SATLiteral(70) + SATLiteral(109)))
109 4294 0
70 4294 0
70 109 4293 0
c (( - aux442 + SATLiteral(76) + SATLiteral(104))<=0)
-104 -4296 0
-76 -4296 0
-76 -104 -4297 0
c (0<=( - aux442 + SATLiteral(76) + SATLiteral(104)))
104 4297 0
76 4297 0
76 104 4296 0
c (( - aux443 + SATLiteral(53) + SATLiteral(110))<=0)
-110 -4299 0
-53 -4299 0
-53 -110 -4300 0
c (0<=( - aux443 + SATLiteral(53) + SATLiteral(110)))
110 4300 0
53 4300 0
53 110 4299 0
c (( - aux444 + SATLiteral(59) + SATLiteral(105))<=0)
-105 -4302 0
-59 -4302 0
-59 -105 -4303 0
c (0<=( - aux444 + SATLiteral(59) + SATLiteral(105)))
105 4303 0
59 4303 0
59 105 4302 0
c (( - aux445 + SATLiteral(77) + SATLiteral(100))<=0)
-100 -4305 0
-77 -4305 0
-77 -100 -4306 0
c (0<=( - aux445 + SATLiteral(77) + SATLiteral(100)))
100 4306 0
77 4306 0
77 100 4305 0
c (( - aux446 + SATLiteral(65) + SATLiteral(90))<=0)
-90 -4308 0
-65 -4308 0
-65 -90 -4309 0
c (0<=( - aux446 + SATLiteral(65) + SATLiteral(90)))
90 4309 0
65 4309 0
65 90 4308 0
c ((aux443 + aux446 - aux447)<=0)
4308 -4311 0
4309 -4312 0
4299 -4311 0
4299 4308 -4312 0
4299 4309 -4314 0
4300 -4312 0
4300 4308 -4314 0
4300 4309 -4316 0
c (0<=(aux443 + aux446 - aux447))
-4309 4316 0
-4308 4314 0
-4300 4316 0
-4300 -4309 4314 0
-4300 -4308 4312 0
-4299 4314 0
-4299 -4309 4312 0
-4299 -4308 4311 0
c (( - aux448 + SATLiteral(54) + SATLiteral(91))<=0)
-91 -4318 0
-54 -4318 0
-54 -91 -4319 0
c (0<=( - aux448 + SATLiteral(54) + SATLiteral(91)))
91 4319 0
54 4319 0
54 91 4318 0
c (( - aux449 + SATLiteral(60) + SATLiteral(78))<=0)
-78 -4321 0
-60 -4321 0
-60 -78 -4322 0
c (0<=( - aux449 + SATLiteral(60) + SATLiteral(78)))
78 4322 0
60 4322 0
60 78 4321 0
c (( - aux450 + SATLiteral(66) + SATLiteral(71))<=0)
-71 -4324 0
-66 -4324 0
-66 -71 -4325 0
c (0<=( - aux450 + SATLiteral(66) + SATLiteral(71)))
71 4325 0
66 4325 0
66 71 4324 0
c (( - aux451 + SATLiteral(55) + SATLiteral(111))<=0)
-111 -4327 0
-55 -4327 0
-55 -111 -4328 0
c (0<=( - aux451 + SATLiteral(55) + SATLiteral(111)))
111 4328 0
55 4328 0
55 111 4327 0
c (( - aux452 + SATLiteral(61) + SATLiteral(106))<=0)
-106 -4330 0
-61 -4330 0
-61 -106 -4331 0
c (0<=( - aux452 + SATLiteral(61) + SATLiteral(106)))
106 4331 0
61 4331 0
61 106 4330 0
c (( - aux453 + SATLiteral(72) + SATLiteral(101))<=0)
-101 -4333 0
-72 -4333 0
-72 -101 -4334 0
c (0<=( - aux453 + SATLiteral(72) + SATLiteral(101)))
101 4334 0
72 4334 0
72 101 4333 0
c (( - aux454 + SATLiteral(79) + SATLiteral(92))<=0)
-92 -4336 0
-79 -4336 0
-79 -92 -4337 0
c (0<=( - aux454 + SATLiteral(79) + SATLiteral(92)))
92 4337 0
79 4337 0
79 92 4336 0
c ((aux454 - aux455 + SATLiteral(67))<=0)
4336 -4339 0
4337 -4340 0
-67 -4339 0
-67 4336 -4340 0
-67 4337 -4342 0
c (0<=(aux454 - aux455 + SATLiteral(67)))
-4337 4342 0
-4336 4340 0
67 4342 0
67 -4337 4340 0
67 -4336 4339 0
c ((aux451 + aux453 - aux456)<=0)
4333 -4344 0
4334 -4345 0
4327 -4344 0
4327 4333 -4345 0
4327 4334 -4347 0
4328 -4345 0
4328 4333 -4347 0
4328 4334 -4349 0
c (0<=(aux451 + aux453 - aux456))
-4334 4349 0
-4333 4347 0
-4328 4349 0
-4328 -4334 4347 0
-4328 -4333 4345 0
-4327 4347 0
-4327 -4334 4345 0
-4327 -4333 4344 0
c (( - aux457 + SATLiteral(56) + SATLiteral(112))<=0)
-112 -4351 0
-56 -4351 0
-56 -112 -4352 0
c (0<=( - aux457 + SATLiteral(56) + SATLiteral(112)))
112 4352 0
56 4352 0
56 112 4351 0
c (( - aux458 + SATLiteral(62) + SATLiteral(102))<=0)
-102 -4354 0
-62 -4354 0
-62 -102 -4355 0
c (0<=( - aux458 + SATLiteral(62) + SATLiteral(102)))
102 4355 0
62 4355 0
62 102 4354 0
c (( - aux459 + SATLiteral(73) + SATLiteral(93))<=0)
-93 -4357 0
-73 -4357 0
-73 -93 -4358 0
c (0<=( - aux459 + SATLiteral(73) + SATLiteral(93)))
93 4358 0
73 4358 0
73 93 4357 0
c (( - aux460 + SATLiteral(68) + SATLiteral(80))<=0)
-80 -4360 0
-68 -4360 0
-68 -80 -4361 0
c (0<=( - aux460 + SATLiteral(68) + SATLiteral(80)))
80 4361 0
68 4361 0
68 80 4360 0
c ((aux457 + aux460 - aux461)<=0)
4360 -4363 0
4361 -4364 0
4351 -4363 0
4351 4360 -4364 0
4351 4361 -4366 0
4352 -4364 0
4352 4360 -4366 0
4352 4361 -4368 0
c (0<=(aux457 + aux460 - aux461))
-4361 4368 0
-4360 4366 0
-4352 4368 0
-4352 -4361 4366 0
-4352 -4360 4364 0
-4351 4366 0
-4351 -4361 4364 0
-4351 -4360 4363 0
c (( - aux462 + SATLiteral(57) + SATLiteral(113))<=0)
-113 -4370 0
-57 -4370 0
-57 -113 -4371 0
c (0<=( - aux462 + SATLiteral(57) + SATLiteral(113)))
113 4371 0
57 4371 0
57 113 4370 0
c (( - aux463 + SATLiteral(63) + SATLiteral(107))<=0)
-107 -4373 0
-63 -4373 0
-63 -107 -4374 0
c (0<=( - aux463 + SATLiteral(63) + SATLiteral(107)))
107 4374 0
63 4374 0
63 107 4373 0
c (( - aux467 + SATLiteral(131) + SATLiteral(198))<=0)
-198 -4385 0
-131 -4385 0
-131 -198 -4386 0
c (0<=( - aux467 + SATLiteral(131) + SATLiteral(198)))
198 4386 0
131 4386 0
131 198 4385 0
c (( - aux468 + SATLiteral(137) + SATLiteral(193))<=0)
-193 -4388 0
-137 -4388 0
-137 -193 -4389 0
c (0<=( - aux468 + SATLiteral(137) + SATLiteral(193)))
193 4389 0
137 4389 0
137 193 4388 0
c (( - aux469 + SATLiteral(168) + SATLiteral(181))<=0)
-181 -4391 0
-168 -4391 0
-168 -181 -4392 0
c (0<=( - aux469 + SATLiteral(168) + SATLiteral(181)))
181 4392 0
168 4392 0
168 181 4391 0
c ((aux469 - aux470 + SATLiteral(150))<=0)
4391 -4394 0
4392 -4395 0
-150 -4394 0
-150 4391 -4395 0
-150 4392 -4397 0
c (0<=(aux469 - aux470 + SATLiteral(150)))
-4392 4397 0
-4391 4395 0
150 4397 0
150 -4392 4395 0
150 -4391 4394 0
c (( - aux472 + SATLiteral(163) + SATLiteral(204))<=0)
-204 -4402 0
-163 -4402 0
-163 -204 -4403 0
c (0<=( - aux472 + SATLiteral(163) + SATLiteral(204)))
204 4403 0
163 4403 0
163 204 4402 0
c (( - aux473 + SATLiteral(170) + SATLiteral(199))<=0)
-199 -4405 0
-170 -4405 0
-170 -199 -4406 0
c (0<=( - aux473 + SATLiteral(170) + SATLiteral(199)))
199 4406 0
170 4406 0
170 199 4405 0
c (( - aux474 + SATLiteral(132) + SATLiteral(205))<=0)
-205 -4408 0
-132 -4408 0
-132 -205 -4409 0
c (0<=( - aux474 + SATLiteral(132) + SATLiteral(205)))
205 4409 0
132 4409 0
132 205 4408 0
c (( - aux475 + SATLiteral(139) + SATLiteral(200))<=0)
-200 -4411 0
-139 -4411 0
-139 -200 -4412 0
c (0<=( - aux475 + SATLiteral(139) + SATLiteral(200)))
200 4412 0
139 4412 0
139 200 4411 0
c (( - aux476 + SATLiteral(152) + SATLiteral(194))<=0)
-194 -4414 0
-152 -4414 0
-152 -194 -4415 0
c (0<=( - aux476 + SATLiteral(152) + SATLiteral(194)))
194 4415 0
152 4415 0
152 194 4414 0
c (( - aux477 + SATLiteral(133) + SATLiteral(184))<=0)
-184 -4417 0
-133 -4417 0
-133 -184 -4418 0
c (0<=( - aux477 + SATLiteral(133) + SATLiteral(184)))
184 4418 0
133 4418 0
133 184 4417 0
c (( - aux478 + SATLiteral(140) + SATLiteral(171))<=0)
-171 -4420 0
-140 -4420 0
-140 -171 -4421 0
c (0<=( - aux478 + SATLiteral(140) + SATLiteral(171)))
171 4421 0
140 4421 0
140 171 4420 0
c (( - aux479 + SATLiteral(153) + SATLiteral(164))<=0)
-164 -4423 0
-153 -4423 0
-153 -164 -4424 0
c (0<=( - aux479 + SATLiteral(153) + SATLiteral(164)))
164 4424 0
153 4424 0
153 164 4423 0
c (( - aux480 + SATLiteral(134) + SATLiteral(206))<=0)
-206 -4426 0
-134 -4426 0
-134 -206 -4427 0
c (0<=( - aux480 + SATLiteral(134) + SATLiteral(206)))
206 4427 0
134 4427 0
134 206 4426 0
c (( - aux481 + SATLiteral(141) + SATLiteral(201))<=0)
-201 -4429 0
-141 -4429 0
-141 -201 -4430 0
c (0<=( - aux481 + SATLiteral(141) + SATLiteral(201)))
201 4430 0
141 4430 0
141 201 4429 0
c (( - aux482 + SATLiteral(165) + SATLiteral(195))<=0)
-195 -4432 0
-165 -4432 0
-165 -195 -4433 0
c (0<=( - aux482 + SATLiteral(165) + SATLiteral(195)))
195 4433 0
165 4433 0
165 195 4432 0
c (( - aux483 + SATLiteral(172) + SATLiteral(185))<=0)
-185 -4435 0
-172 -4435 0
-172 -185 -4436 0
c (0<=( - aux483 + SATLiteral(172) + SATLiteral(185)))
185 4436 0
172 4436 0
172 185 4435 0
c ((aux483 - aux484 + SATLiteral(154))<=0)
4435 -4438 0
4436 -4439 0
-154 -4438 0
-154 4435 -4439 0
-154 4436 -4441 0
c (0<=(aux483 - aux484 + SATLiteral(154)))
-4436 4441 0
-4435 4439 0
154 4441 0
154 -4436 4439 0
154 -4435 4438 0
c ((aux480 + aux482 - aux485)<=0)
4432 -4443 0
4433 -4444 0
4426 -4443 0
4426 4432 -4444 0
4426 4433 -4446 0
4427 -4444 0
4427 4432 -4446 0
4427 4433 -4448 0
c (0<=(aux480 + aux482 - aux485))
-4433 4448 0
-4432 4446 0
-4427 4448 0
-4427 -4433 4446 0
-4427 -4432 4444 0
-4426 4446 0
-4426 -4433 4444 0
-4426 -4432 4443 0
c (( - aux486 + SATLiteral(135) + SATLiteral(186))<=0)
-186 -4450 0
-135 -4450 0
-135 -186 -4451 0
c (0<=( - aux486 + SATLiteral(135) + SATLiteral(186)))
186 4451 0
135 4451 0
135 186 4450 0
c (( - aux487 + SATLiteral(142) + SATLiteral(173))<=0)
-173 -4453 0
-142 -4453 0
-142 -173 -4454 0
c (0<=( - aux487 + SATLiteral(142) + SATLiteral(173)))
173 4454 0
142 4454 0
142 173 4453 0
c (( - aux488 + SATLiteral(155) + SATLiteral(166))<=0)
-166 -4456 0
-155 -4456 0
-155 -166 -4457 0
c (0<=( - aux488 + SATLiteral(155) + SATLiteral(166)))
166 4457 0
155 4457 0
155 166 4456 0
c (( - aux489 + SATLiteral(136) + SATLiteral(207))<=0)
-207 -4459 0
-136 -4459 0
-136 -207 -4460 0
c (0<=( - aux489 + SATLiteral(136) + SATLiteral(207)))
207 4460 0
136 4460 0
136 207 4459 0
c (( - aux490 + SATLiteral(143) + SATLiteral(202))<=0)
-202 -4462 0
-143 -4462 0
-143 -202 -4463 0
c (0<=( - aux490 + SATLiteral(143) + SATLiteral(202)))
202 4463 0
143 4463 0
143 202 4462 0
c (( - aux491 + SATLiteral(156) + SATLiteral(196))<=0)
-196 -4465 0
-156 -4465 0
-156 -196 -4466 0
c (0<=( - aux491 + SATLiteral(156) + SATLiteral(196)))
196 4466 0
156 4466 0
156 196 4465 0
c (( - aux493 + SATLiteral(212) + SATLiteral(274))<=0)
-274 -4471 0
-212 -4471 0
-212 -274 -4472 0
c (0<=( - aux493 + SATLiteral(212) + SATLiteral(274)))
274 4472 0
212 4472 0
212 274 4471 0
c (( - aux494 + SATLiteral(225) + SATLiteral(269))<=0)
-269 -4474 0
-225 -4474 0
-225 -269 -4475 0
c (0<=( - aux494 + SATLiteral(225) + SATLiteral(269)))
269 4475 0
225 4475 0
225 269 4474 0
c (( - aux495 + SATLiteral(243) + SATLiteral(256))<=0)
-256 -4477 0
-243 -4477 0
-243 -256 -4478 0
c (0<=( - aux495 + SATLiteral(243) + SATLiteral(256)))
256 4478 0
243 4478 0
243 256 4477 0
c (( - aux498 + SATLiteral(208) + SATLiteral(-279))<=0)
279 -4486 0
-208 -4486 0
-208 279 -4487 0
c (0<=( - aux498 + SATLiteral(208) + SATLiteral(-279)))
-279 4487 0
208 4487 0
208 -279 4486 0
c (( - aux499 + SATLiteral(214) + SATLiteral(276))<=0)
-276 -4489 0
-214 -4489 0
-214 -276 -4490 0
c (0<=( - aux499 + SATLiteral(214) + SATLiteral(276)))
276 4490 0
214 4490 0
214 276 4489 0
c (( - aux500 + SATLiteral(227) + SATLiteral(270))<=0)
-270 -4492 0
-227 -4492 0
-227 -270 -4493 0
c (0<=( - aux500 + SATLiteral(227) + SATLiteral(270)))
270 4493 0
227 4493 0
227 270 4492 0
c (( - aux501 + SATLiteral(209) + SATLiteral(259))<=0)
-259 -4495 0
-209 -4495 0
-209 -259 -4496 0
c (0<=( - aux501 + SATLiteral(209) + SATLiteral(259)))
259 4496 0
209 4496 0
209 259 4495 0
c (( - aux502 + SATLiteral(215) + SATLiteral(246))<=0)
-246 -4498 0
-215 -4498 0
-215 -246 -4499 0
c (0<=( - aux502 + SATLiteral(215) + SATLiteral(246)))
246 4499 0
215 4499 0
215 246 4498 0
c (( - aux503 + SATLiteral(228) + SATLiteral(239))<=0)
-239 -4501 0
-228 -4501 0
-228 -239 -4502 0
c (0<=( - aux503 + SATLiteral(228) + SATLiteral(239)))
239 4502 0
228 4502 0
228 239 4501 0
c (( - aux504 + SATLiteral(210) + SATLiteral(279))<=0)
-279 -4504 0
-210 -4504 0
-210 -279 -4505 0
c (0<=( - aux504 + SATLiteral(210) + SATLiteral(279)))
279 4505 0
210 4505 0
210 279 4504 0
c (( - aux505 + SATLiteral(216) + SATLiteral(277))<=0)
-277 -4507 0
-216 -4507 0
-216 -277 -4508 0
c (0<=( - aux505 + SATLiteral(216) + SATLiteral(277)))
277 4508 0
216 4508 0
216 277 4507 0
c (( - aux506 + SATLiteral(240) + SATLiteral(271))<=0)
-271 -4510 0
-240 -4510 0
-240 -271 -4511 0
c (0<=( - aux506 + SATLiteral(240) + SATLiteral(271)))
271 4511 0
240 4511 0
240 271 4510 0
c (( - aux507 + SATLiteral(247) + SATLiteral(260))<=0)
-260 -4513 0
-247 -4513 0
-247 -260 -4514 0
c (0<=( - aux507 + SATLiteral(247) + SATLiteral(260)))
260 4514 0
247 4514 0
247 260 4513 0
c ((aux507 - aux508 + SATLiteral(229))<=0)
4513 -4516 0
4514 -4517 0
-229 -4516 0
-229 4513 -4517 0
-229 4514 -4519 0
c (0<=(aux507 - aux508 + SATLiteral(229)))
-4514 4519 0
-4513 4517 0
229 4519 0
229 -4514 4517 0
229 -4513 4516 0
c ((aux504 + aux506 - aux509)<=0)
4510 -4521 0
4511 -4522 0
4504 -4521 0
4504 4510 -4522 0
4504 4511 -4524 0
4505 -4522 0
4505 4510 -4524 0
4505 4511 -4526 0
c (0<=(aux504 + aux506 - aux509))
-4511 4526 0
-4510 4524 0
-4505 4526 0
-4505 -4511 4524 0
-4505 -4510 4522 0
-4504 4524 0
-4504 -4511 4522 0
-4504 -4510 4521 0
c (( - aux510 + SATLiteral(211) + SATLiteral(261))<=0)
-261 -4528 0
-211 -4528 0
-211 -261 -4529 0
c (0<=( - aux510 + SATLiteral(211) + SATLiteral(261)))
261 4529 0
211 4529 0
211 261 4528 0
c (( - aux511 + SATLiteral(217) + SATLiteral(248))<=0)
-248 -4531 0
-217 -4531 0
-217 -248 -4532 0
c (0<=( - aux511 + SATLiteral(217) + SATLiteral(248)))
248 4532 0
217 4532 0
217 248 4531 0
c (( - aux512 + SATLiteral(230) + SATLiteral(241))<=0)
-241 -4534 0
-230 -4534 0
-230 -241 -4535 0
c (0<=( - aux512 + SATLiteral(230) + SATLiteral(241)))
241 4535 0
230 4535 0
230 241 4534 0
c (( - aux514 + SATLiteral(280) + SATLiteral(363))<=0)
-363 -4540 0
-280 -4540 0
-280 -363 -4541 0
c (0<=( - aux514 + SATLiteral(280) + SATLiteral(363)))
363 4541 0
280 4541 0
280 363 4540 0
c (( - aux515 + SATLiteral(321) + SATLiteral(357))<=0)
-357 -4543 0
-321 -4543 0
-321 -357 -4544 0
c (0<=( - aux515 + SATLiteral(321) + SATLiteral(357)))
357 4544 0
321 4544 0
321 357 4543 0
c (( - aux516 + SATLiteral(281) + SATLiteral(358))<=0)
-358 -4546 0
-281 -4546 0
-281 -358 -4547 0
c (0<=( - aux516 + SATLiteral(281) + SATLiteral(358)))
358 4547 0
281 4547 0
281 358 4546 0
c (( - aux517 + SATLiteral(293) + SATLiteral(352))<=0)
-352 -4549 0
-293 -4549 0
-293 -352 -4550 0
c (0<=( - aux517 + SATLiteral(293) + SATLiteral(352)))
352 4550 0
293 4550 0
293 352 4549 0
c (( - aux518 + SATLiteral(325) + SATLiteral(338))<=0)
-338 -4552 0
-325 -4552 0
-325 -338 -4553 0
c (0<=( - aux518 + SATLiteral(325) + SATLiteral(338)))
338 4553 0
325 4553 0
325 338 4552 0
c ((aux518 - aux519 + SATLiteral(307))<=0)
4552 -4555 0
4553 -4556 0
-307 -4555 0
-307 4552 -4556 0
-307 4553 -4558 0
c (0<=(aux518 - aux519 + SATLiteral(307)))
-4553 4558 0
-4552 4556 0
307 4558 0
307 -4553 4556 0
307 -4552 4555 0
c (( - aux520 + SATLiteral(295) + SATLiteral(339))<=0)
-339 -4560 0
-295 -4560 0
-295 -339 -4561 0
c (0<=( - aux520 + SATLiteral(295) + SATLiteral(339)))
339 4561 0
295 4561 0
295 339 4560 0
c (( - aux521 + SATLiteral(309) + SATLiteral(326))<=0)
-326 -4563 0
-309 -4563 0
-309 -326 -4564 0
c (0<=( - aux521 + SATLiteral(309) + SATLiteral(326)))
326 4564 0
309 4564 0
309 326 4563 0
c (( - aux522 + SATLiteral(282) + SATLiteral(364))<=0)
-364 -4566 0
-282 -4566 0
-282 -364 -4567 0
c (0<=( - aux522 + SATLiteral(282) + SATLiteral(364)))
364 4567 0
282 4567 0
282 364 4566 0
c (( - aux523 + SATLiteral(296) + SATLiteral(360))<=0)
-360 -4569 0
-296 -4569 0
-296 -360 -4570 0
c (0<=( - aux523 + SATLiteral(296) + SATLiteral(360)))
360 4570 0
296 4570 0
296 360 4569 0
c (( - aux524 + SATLiteral(327) + SATLiteral(353))<=0)
-353 -4572 0
-327 -4572 0
-327 -353 -4573 0
c (0<=( - aux524 + SATLiteral(327) + SATLiteral(353)))
353 4573 0
327 4573 0
327 353 4572 0
c (( - aux525 + SATLiteral(310) + SATLiteral(340))<=0)
-340 -4575 0
-310 -4575 0
-310 -340 -4576 0
c (0<=( - aux525 + SATLiteral(310) + SATLiteral(340)))
340 4576 0
310 4576 0
310 340 4575 0
c ((aux522 + aux525 - aux526)<=0)
4575 -4578 0
4576 -4579 0
4566 -4578 0
4566 4575 -4579 0
4566 4576 -4581 0
4567 -4579 0
4567 4575 -4581 0
4567 4576 -4583 0
c (0<=(aux522 + aux525 - aux526))
-4576 4583 0
-4575 4581 0
-4567 4583 0
-4567 -4576 4581 0
-4567 -4575 4579 0
-4566 4581 0
-4566 -4576 4579 0
-4566 -4575 4578 0
c (( - aux527 + SATLiteral(283) + SATLiteral(365))<=0)
-365 -4585 0
-283 -4585 0
-283 -365 -4586 0
c (0<=( - aux527 + SATLiteral(283) + SATLiteral(365)))
365 4586 0
283 4586 0
283 365 4585 0
c (( - aux528 + SATLiteral(297) + SATLiteral(341))<=0)
-341 -4588 0
-297 -4588 0
-297 -341 -4589 0
c (0<=( - aux528 + SATLiteral(297) + SATLiteral(341)))
341 4589 0
297 4589 0
297 341 4588 0
c (( - aux529 + SATLiteral(323) + SATLiteral(328))<=0)
-328 -4591 0
-323 -4591 0
-323 -328 -4592 0
c (0<=( - aux529 + SATLiteral(323) + SATLiteral(328)))
328 4592 0
323 4592 0
323 328 4591 0
c ((aux529 - aux530 + SATLiteral(311))<=0)
4591 -4594 0
4592 -4595 0
-311 -4594 0
-311 4591 -4595 0
-311 4592 -4597 0
c (0<=(aux529 - aux530 + SATLiteral(311)))
-4592 4597 0
-4591 4595 0
311 4597 0
311 -4592 4595 0
311 -4591 4594 0
c (( - aux531 + SATLiteral(284) + SATLiteral(366))<=0)
-366 -4599 0
-284 -4599 0
-284 -366 -4600 0
c (0<=( - aux531 + SATLiteral(284) + SATLiteral(366)))
366 4600 0
284 4600 0
284 366 4599 0
c (( - aux532 + SATLiteral(298) + SATLiteral(361))<=0)
-361 -4602 0
-298 -4602 0
-298 -361 -4603 0
c (0<=( - aux532 + SATLiteral(298) + SATLiteral(361)))
361 4603 0
298 4603 0
298 361 4602 0
c (( - aux533 + SATLiteral(324) + SATLiteral(354))<=0)
-354 -4605 0
-324 -4605 0
-324 -354 -4606 0
c (0<=( - aux533 + SATLiteral(324) + SATLiteral(354)))
354 4606 0
324 4606 0
324 354 4605 0
c (( - aux534 + SATLiteral(329) + SATLiteral(342))<=0)
-342 -4608 0
-329 -4608 0
-329 -342 -4609 0
c (0<=( - aux534 + SATLiteral(329) + SATLiteral(342)))
342 4609 0
329 4609 0
329 342 4608 0
c ((aux534 - aux535 + SATLiteral(312))<=0)
4608 -4611 0
4609 -4612 0
-312 -4611 0
-312 4608 -4612 0
-312 4609 -4614 0
c (0<=(aux534 - aux535 + SATLiteral(312)))
-4609 4614 0
-4608 4612 0
312 4614 0
312 -4609 4612 0
312 -4608 4611 0
c ((aux531 + aux533 - aux536)<=0)
4605 -4616 0
4606 -4617 0
4599 -4616 0
4599 4605 -4617 0
4599 4606 -4619 0
4600 -4617 0
4600 4605 -4619 0
4600 4606 -4621 0
c (0<=(aux531 + aux533 - aux536))
-4606 4621 0
-4605 4619 0
-4600 4621 0
-4600 -4606 4619 0
-4600 -4605 4617 0
-4599 4619 0
-4599 -4606 4617 0
-4599 -4605 4616 0
c (( - aux537 + SATLiteral(285) + SATLiteral(367))<=0)
-367 -4623 0
-285 -4623 0
-285 -367 -4624 0
c (0<=( - aux537 + SATLiteral(285) + SATLiteral(367)))
367 4624 0
285 4624 0
285 367 4623 0
c (( - aux538 + SATLiteral(299) + SATLiteral(355))<=0)
-355 -4626 0
-299 -4626 0
-299 -355 -4627 0
c (0<=( - aux538 + SATLiteral(299) + SATLiteral(355)))
355 4627 0
299 4627 0
299 355 4626 0
c (( - aux539 + SATLiteral(330) + SATLiteral(343))<=0)
-343 -4629 0
-330 -4629 0
-330 -343 -4630 0
c (0<=( - aux539 + SATLiteral(330) + SATLiteral(343)))
343 4630 0
330 4630 0
330 343 4629 0
c ((aux539 - aux540 + SATLiteral(313))<=0)
4629 -4632 0
4630 -4633 0
-313 -4632 0
-313 4629 -4633 0
-313 4630 -4635 0
c (0<=(aux539 - aux540 + SATLiteral(313)))
-4630 4635 0
-4629 4633 0
313 4635 0
313 -4630 4633 0
313 -4629 4632 0
c (( - aux541 + SATLiteral(286) + SATLiteral(368))<=0)
-368 -4637 0
-286 -4637 0
-286 -368 -4638 0
c (0<=( - aux541 + SATLiteral(286) + SATLiteral(368)))
368 4638 0
286 4638 0
286 368 4637 0
c (( - aux542 + SATLiteral(300) + SATLiteral(362))<=0)
-362 -4640 0
-300 -4640 0
-300 -362 -4641 0
c (0<=( - aux542 + SATLiteral(300) + SATLiteral(362)))
362 4641 0
300 4641 0
300 362 4640 0
c (( - aux543 + SATLiteral(331) + SATLiteral(356))<=0)
-356 -4643 0
-331 -4643 0
-331 -356 -4644 0
c (0<=( - aux543 + SATLiteral(331) + SATLiteral(356)))
356 4644 0
331 4644 0
331 356 4643 0
c (( - aux544 + SATLiteral(314) + SATLiteral(344))<=0)
-344 -4646 0
-314 -4646 0
-314 -344 -4647 0
c (0<=( - aux544 + SATLiteral(314) + SATLiteral(344)))
344 4647 0
314 4647 0
314 344 4646 0
c ((aux541 + aux544 - aux545)<=0)
4646 -4649 0
4647 -4650 0
4637 -4649 0
4637 4646 -4650 0
4637 4647 -4652 0
4638 -4650 0
4638 4646 -4652 0
4638 4647 -4654 0
c (0<=(aux541 + aux544 - aux545))
-4647 4654 0
-4646 4652 0
-4638 4654 0
-4638 -4647 4652 0
-4638 -4646 4650 0
-4637 4652 0
-4637 -4647 4650 0
-4637 -4646 4649 0
c (( - aux546 + SATLiteral(373) + SATLiteral(438))<=0)
-438 -4656 0
-373 -4656 0
-373 -438 -4657 0
c (0<=( - aux546 + SATLiteral(373) + SATLiteral(438)))
438 4657 0
373 4657 0
373 438 4656 0
c (( - aux547 + SATLiteral(387) + SATLiteral(432))<=0)
-432 -4659 0
-387 -4659 0
-387 -432 -4660 0
c (0<=( - aux547 + SATLiteral(387) + SATLiteral(432)))
432 4660 0
387 4660 0
387 432 4659 0
c (( - aux548 + SATLiteral(405) + SATLiteral(418))<=0)
-418 -4662 0
-405 -4662 0
-405 -418 -4663 0
c (0<=( - aux548 + SATLiteral(405) + SATLiteral(418)))
418 4663 0
405 4663 0
405 418 4662 0
c (( - aux549 + SATLiteral(375) + SATLiteral(419))<=0)
-419 -4665 0
-375 -4665 0
-375 -419 -4666 0
c (0<=( - aux549 + SATLiteral(375) + SATLiteral(419)))
419 4666 0
375 4666 0
375 419 4665 0
c (( - aux550 + SATLiteral(389) + SATLiteral(406))<=0)
-406 -4668 0
-389 -4668 0
-389 -406 -4669 0
c (0<=( - aux550 + SATLiteral(389) + SATLiteral(406)))
406 4669 0
389 4669 0
389 406 4668 0
c (( - aux551 + SATLiteral(369) + SATLiteral(443))<=0)
-443 -4671 0
-369 -4671 0
-369 -443 -4672 0
c (0<=( - aux551 + SATLiteral(369) + SATLiteral(443)))
443 4672 0
369 4672 0
369 443 4671 0
c (( - aux552 + SATLiteral(376) + SATLiteral(440))<=0)
-440 -4674 0
-376 -4674 0
-376 -440 -4675 0
c (0<=( - aux552 + SATLiteral(376) + SATLiteral(440)))
440 4675 0
376 4675 0
376 440 4674 0
c (( - aux553 + SATLiteral(407) + SATLiteral(433))<=0)
-433 -4677 0
-407 -4677 0
-407 -433 -4678 0
c (0<=( - aux553 + SATLiteral(407) + SATLiteral(433)))
433 4678 0
407 4678 0
407 433 4677 0
c (( - aux554 + SATLiteral(390) + SATLiteral(420))<=0)
-420 -4680 0
-390 -4680 0
-390 -420 -4681 0
c (0<=( - aux554 + SATLiteral(390) + SATLiteral(420)))
420 4681 0
390 4681 0
390 420 4680 0
c ((aux551 + aux554 - aux555)<=0)
4680 -4683 0
4681 -4684 0
4671 -4683 0
4671 4680 -4684 0
4671 4681 -4686 0
4672 -4684 0
4672 4680 -4686 0
4672 4681 -4688 0
c (0<=(aux551 + aux554 - aux555))
-4681 4688 0
-4680 4686 0
-4672 4688 0
-4672 -4681 4686 0
-4672 -4680 4684 0
-4671 4686 0
-4671 -4681 4684 0
-4671 -4680 4683 0
c (( - aux556 + SATLiteral(370) + SATLiteral(444))<=0)
-444 -4690 0
-370 -4690 0
-370 -444 -4691 0
c (0<=( - aux556 + SATLiteral(370) + SATLiteral(444)))
444 4691 0
370 4691 0
370 444 4690 0
c (( - aux557 + SATLiteral(377) + SATLiteral(421))<=0)
-421 -4693 0
-377 -4693 0
-377 -421 -4694 0
c (0<=( - aux557 + SATLiteral(377) + SATLiteral(421)))
421 4694 0
377 4694 0
377 421 4693 0
c (( - aux558 + SATLiteral(403) + SATLiteral(408))<=0)
-408 -4696 0
-403 -4696 0
-403 -408 -4697 0
c (0<=( - aux558 + SATLiteral(403) + SATLiteral(408)))
408 4697 0
403 4697 0
403 408 4696 0
c ((aux558 - aux559 + SATLiteral(391))<=0)
4696 -4699 0
4697 -4700 0
-391 -4699 0
-391 4696 -4700 0
-391 4697 -4702 0
c (0<=(aux558 - aux559 + SATLiteral(391)))
-4697 4702 0
-4696 4700 0
391 4702 0
391 -4697 4700 0
391 -4696 4699 0
c (( - aux560 + SATLiteral(371) + SATLiteral(445))<=0)
-445 -4704 0
-371 -4704 0
-371 -445 -4705 0
c (0<=( - aux560 + SATLiteral(371) + SATLiteral(445)))
445 4705 0
371 4705 0
371 445 4704 0
c (( - aux561 + SATLiteral(378) + SATLiteral(441))<=0)
-441 -4707 0
-378 -4707 0
-378 -441 -4708 0
c (0<=( - aux561 + SATLiteral(378) + SATLiteral(441)))
441 4708 0
378 4708 0
378 441 4707 0
c (( - aux562 + SATLiteral(404) + SATLiteral(434))<=0)
-434 -4710 0
-404 -4710 0
-404 -434 -4711 0
c (0<=( - aux562 + SATLiteral(404) + SATLiteral(434)))
434 4711 0
404 4711 0
404 434 4710 0
c (( - aux563 + SATLiteral(409) + SATLiteral(422))<=0)
-422 -4713 0
-409 -4713 0
-409 -422 -4714 0
c (0<=( - aux563 + SATLiteral(409) + SATLiteral(422)))
422 4714 0
409 4714 0
409 422 4713 0
c ((aux563 - aux564 + SATLiteral(392))<=0)
4713 -4716 0
4714 -4717 0
-392 -4716 0
-392 4713 -4717 0
-392 4714 -4719 0
c (0<=(aux563 - aux564 + SATLiteral(392)))
-4714 4719 0
-4713 4717 0
392 4719 0
392 -4714 4717 0
392 -4713 4716 0
c ((aux560 + aux562 - aux565)<=0)
4710 -4721 0
4711 -4722 0
4704 -4721 0
4704 4710 -4722 0
4704 4711 -4724 0
4705 -4722 0
4705 4710 -4724 0
4705 4711 -4726 0
c (0<=(aux560 + aux562 - aux565))
-4711 4726 0
-4710 4724 0
-4705 4726 0
-4705 -4711 4724 0
-4705 -4710 4722 0
-4704 4724 0
-4704 -4711 4722 0
-4704 -4710 4721 0
c (( - aux566 + SATLiteral(372) + SATLiteral(446))<=0)
-446 -4728 0
-372 -4728 0
-372 -446 -4729 0
c (0<=( - aux566 + SATLiteral(372) + SATLiteral(446)))
446 4729 0
372 4729 0
372 446 4728 0
c (( - aux567 + SATLiteral(379) + SATLiteral(435))<=0)
-435 -4731 0
-379 -4731 0
-379 -435 -4732 0
c (0<=( - aux567 + SATLiteral(379) + SATLiteral(435)))
435 4732 0
379 4732 0
379 435 4731 0
c (( - aux568 + SATLiteral(410) + SATLiteral(423))<=0)
-423 -4734 0
-410 -4734 0
-410 -423 -4735 0
c (0<=( - aux568 + SATLiteral(410) + SATLiteral(423)))
423 4735 0
410 4735 0
410 423 4734 0
c ((aux568 - aux569 + SATLiteral(393))<=0)
4734 -4737 0
4735 -4738 0
-393 -4737 0
-393 4734 -4738 0
-393 4735 -4740 0
c (0<=(aux568 - aux569 + SATLiteral(393)))
-4735 4740 0
-4734 4738 0
393 4740 0
393 -4735 4738 0
393 -4734 4737 0
c (( - aux570 + SATLiteral(380) + SATLiteral(442))<=0)
-442 -4742 0
-380 -4742 0
-380 -442 -4743 0
c (0<=( - aux570 + SATLiteral(380) + SATLiteral(442)))
442 4743 0
380 4743 0
380 442 4742 0
c (( - aux571 + SATLiteral(394) + SATLiteral(436))<=0)
-436 -4745 0
-394 -4745 0
-394 -436 -4746 0
c (0<=( - aux571 + SATLiteral(394) + SATLiteral(436)))
436 4746 0
394 4746 0
394 436 4745 0
c (( - aux572 + SATLiteral(411) + SATLiteral(424))<=0)
-424 -4748 0
-411 -4748 0
-411 -424 -4749 0
c (0<=( - aux572 + SATLiteral(411) + SATLiteral(424)))
424 4749 0
411 4749 0
411 424 4748 0
c ((SATLiteral(448) + SATLiteral(482) - aux573)<=0)
-482 -4751 0
-448 -4751 0
-448 -482 -4752 0
c (0<=(SATLiteral(448) + SATLiteral(482) - aux573))
482 4752 0
448 4752 0
448 482 4751 0
c ((SATLiteral(461) + SATLiteral(474) - aux574)<=0)
-474 -4754 0
-461 -4754 0
-461 -474 -4755 0
c (0<=(SATLiteral(461) + SATLiteral(474) - aux574))
474 4755 0
461 4755 0
461 474 4754 0
c ((SATLiteral(449) + SATLiteral(487) - aux575)<=0)
-487 -4757 0
-449 -4757 0
-449 -487 -4758 0
c (0<=(SATLiteral(449) + SATLiteral(487) - aux575))
487 4758 0
449 4758 0
449 487 4757 0
c ((SATLiteral(-460) + SATLiteral(483) - aux576)<=0)
-483 -4760 0
460 -4760 0
460 -483 -4761 0
c (0<=(SATLiteral(-460) + SATLiteral(483) - aux576))
483 4761 0
-460 4761 0
-460 483 4760 0
c ((SATLiteral(469) + SATLiteral(475) - aux577)<=0)
-475 -4763 0
-469 -4763 0
-469 -475 -4764 0
c (0<=(SATLiteral(469) + SATLiteral(475) - aux577))
475 4764 0
469 4764 0
469 475 4763 0
c ((SATLiteral(462) + aux577 - aux578)<=0)
4763 -4766 0
4764 -4767 0
-462 -4766 0
-462 4763 -4767 0
-462 4764 -4769 0
c (0<=(SATLiteral(462) + aux577 - aux578))
-4764 4769 0
-4763 4767 0
462 4769 0
462 -4764 4767 0
462 -4763 4766 0
c ((SATLiteral(450) + SATLiteral(488) - aux579)<=0)
-488 -4771 0
-450 -4771 0
-450 -488 -4772 0
c (0<=(SATLiteral(450) + SATLiteral(488) - aux579))
488 4772 0
450 4772 0
450 488 4771 0
c ((SATLiteral(460) + SATLiteral(476) - aux580)<=0)
-476 -4774 0
-460 -4774 0
-460 -476 -4775 0
c (0<=(SATLiteral(460) + SATLiteral(476) - aux580))
476 4775 0
460 4775 0
460 476 4774 0
c ((SATLiteral(463) + SATLiteral(470) - aux581)<=0)
-470 -4777 0
-463 -4777 0
-463 -470 -4778 0
c (0<=(SATLiteral(463) + SATLiteral(470) - aux581))
470 4778 0
463 4778 0
463 470 4777 0
c ((SATLiteral(451) + SATLiteral(489) - aux582)<=0)
-489 -4780 0
-451 -4780 0
-451 -489 -4781 0
c (0<=(SATLiteral(451) + SATLiteral(489) - aux582))
489 4781 0
451 4781 0
451 489 4780 0
c ((SATLiteral(464) + SATLiteral(484) - aux583)<=0)
-484 -4783 0
-464 -4783 0
-464 -484 -4784 0
c (0<=(SATLiteral(464) + SATLiteral(484) - aux583))
484 4784 0
464 4784 0
464 484 4783 0
c ((SATLiteral(471) + SATLiteral(477) - aux584)<=0)
-477 -4786 0
-471 -4786 0
-471 -477 -4787 0
c (0<=(SATLiteral(471) + SATLiteral(477) - aux584))
477 4787 0
471 4787 0
471 477 4786 0
c ((SATLiteral(452) + SATLiteral(490) - aux585)<=0)
-490 -4789 0
-452 -4789 0
-452 -490 -4790 0
c (0<=(SATLiteral(452) + SATLiteral(490) - aux585))
490 4790 0
452 4790 0
452 490 4789 0
c ((SATLiteral(465) + SATLiteral(478) - aux586)<=0)
-478 -4792 0
-465 -4792 0
-465 -478 -4793 0
c (0<=(SATLiteral(465) + SATLiteral(478) - aux586))
478 4793 0
465 4793 0
465 478 4792 0
c ((SATLiteral(453) + SATLiteral(491) - aux587)<=0)
-491 -4795 0
-453 -4795 0
-453 -491 -4796 0
c (0<=(SATLiteral(453) + SATLiteral(491) - aux587))
491 4796 0
453 4796 0
453 491 4795 0
c ((SATLiteral(466) + SATLiteral(485) - aux588)<=0)
-485 -4798 0
-466 -4798 0
-466 -485 -4799 0
c (0<=(SATLiteral(466) + SATLiteral(485) - aux588))
485 4799 0
466 4799 0
466 485 4798 0
c ((SATLiteral(473) + SATLiteral(479) - aux589)<=0)
-479 -4801 0
-473 -4801 0
-473 -479 -4802 0
c (0<=(SATLiteral(473) + SATLiteral(479) - aux589))
479 4802 0
473 4802 0
473 479 4801 0
c (( - aux590 + SATLiteral(53) + SATLiteral(10))<=0)
-10 -4804 0
-53 -4804 0
-53 -10 -4805 0
c (0<=( - aux590 + SATLiteral(53) + SATLiteral(10)))
10 4805 0
53 4805 0
53 10 4804 0
c (( - aux591 + SATLiteral(59) + SATLiteral(7))<=0)
-7 -4807 0
-59 -4807 0
-59 -7 -4808 0
c (0<=( - aux591 + SATLiteral(59) + SATLiteral(7)))
7 4808 0
59 4808 0
59 7 4807 0
c (( - aux592 + SATLiteral(65) + SATLiteral(2))<=0)
-2 -4810 0
-65 -4810 0
-65 -2 -4811 0
c (0<=( - aux592 + SATLiteral(65) + SATLiteral(2)))
2 4811 0
65 4811 0
65 2 4810 0
c (( - aux593 + SATLiteral(54) + SATLiteral(11))<=0)
-11 -4813 0
-54 -4813 0
-54 -11 -4814 0
c (0<=( - aux593 + SATLiteral(54) + SATLiteral(11)))
11 4814 0
54 4814 0
54 11 4813 0
c (( - aux594 + SATLiteral(60) + SATLiteral(8))<=0)
-8 -4816 0
-60 -4816 0
-60 -8 -4817 0
c (0<=( - aux594 + SATLiteral(60) + SATLiteral(8)))
8 4817 0
60 4817 0
60 8 4816 0
c (( - aux595 + SATLiteral(66) + SATLiteral(3))<=0)
-3 -4819 0
-66 -4819 0
-66 -3 -4820 0
c (0<=( - aux595 + SATLiteral(66) + SATLiteral(3)))
3 4820 0
66 4820 0
66 3 4819 0
c (( - aux596 + SATLiteral(55) + SATLiteral(12))<=0)
-12 -4822 0
-55 -4822 0
-55 -12 -4823 0
c (0<=( - aux596 + SATLiteral(55) + SATLiteral(12)))
12 4823 0
55 4823 0
55 12 4822 0
c (( - aux597 + SATLiteral(61) + SATLiteral(9))<=0)
-9 -4825 0
-61 -4825 0
-61 -9 -4826 0
c (0<=( - aux597 + SATLiteral(61) + SATLiteral(9)))
9 4826 0
61 4826 0
61 9 4825 0
c (( - aux598 + SATLiteral(67) + SATLiteral(4))<=0)
-4 -4828 0
-67 -4828 0
-67 -4 -4829 0
c (0<=( - aux598 + SATLiteral(67) + SATLiteral(4)))
4 4829 0
67 4829 0
67 4 4828 0
c (( - aux599 + SATLiteral(56) + SATLiteral(13))<=0)
-13 -4831 0
-56 -4831 0
-56 -13 -4832 0
c (0<=( - aux599 + SATLiteral(56) + SATLiteral(13)))
13 4832 0
56 4832 0
56 13 4831 0
c (( - aux600 + SATLiteral(62) + SATLiteral(5))<=0)
-5 -4834 0
-62 -4834 0
-62 -5 -4835 0
c (0<=( - aux600 + SATLiteral(62) + SATLiteral(5)))
5 4835 0
62 4835 0
62 5 4834 0
c (( - aux601 + SATLiteral(57) + SATLiteral(14))<=0)
-14 -4837 0
-57 -4837 0
-57 -14 -4838 0
c (0<=( - aux601 + SATLiteral(57) + SATLiteral(14)))
14 4838 0
57 4838 0
57 14 4837 0
c (( - aux602 + SATLiteral(63) + SATLiteral(6))<=0)
-6 -4840 0
-63 -4840 0
-63 -6 -4841 0
c (0<=( - aux602 + SATLiteral(63) + SATLiteral(6)))
6 4841 0
63 4841 0
63 6 4840 0
c (( - aux603 + SATLiteral(70) + SATLiteral(22))<=0)
-22 -4843 0
-70 -4843 0
-70 -22 -4844 0
c (0<=( - aux603 + SATLiteral(70) + SATLiteral(22)))
22 4844 0
70 4844 0
70 22 4843 0
c (( - aux604 + SATLiteral(76) + SATLiteral(17))<=0)
-17 -4846 0
-76 -4846 0
-76 -17 -4847 0
c (0<=( - aux604 + SATLiteral(76) + SATLiteral(17)))
17 4847 0
76 4847 0
76 17 4846 0
c (( - aux605 + SATLiteral(41) + SATLiteral(23))<=0)
-23 -4849 0
-41 -4849 0
-41 -23 -4850 0
c (0<=( - aux605 + SATLiteral(41) + SATLiteral(23)))
23 4850 0
41 4850 0
41 23 4849 0
c (( - aux606 + SATLiteral(44) + SATLiteral(18))<=0)
-18 -4852 0
-44 -4852 0
-44 -18 -4853 0
c (0<=( - aux606 + SATLiteral(44) + SATLiteral(18)))
18 4853 0
44 4853 0
44 18 4852 0
c (( - aux607 + SATLiteral(77) + SATLiteral(90))<=0)
-90 -4855 0
-77 -4855 0
-77 -90 -4856 0
c (0<=( - aux607 + SATLiteral(77) + SATLiteral(90)))
90 4856 0
77 4856 0
77 90 4855 0
c (( - aux608 + SATLiteral(71) + SATLiteral(24))<=0)
-24 -4858 0
-71 -4858 0
-71 -24 -4859 0
c (0<=( - aux608 + SATLiteral(71) + SATLiteral(24)))
24 4859 0
71 4859 0
71 24 4858 0
c (( - aux609 + SATLiteral(78) + SATLiteral(19))<=0)
-19 -4861 0
-78 -4861 0
-78 -19 -4862 0
c (0<=( - aux609 + SATLiteral(78) + SATLiteral(19)))
19 4862 0
78 4862 0
78 19 4861 0
c (( - aux610 + SATLiteral(42) + SATLiteral(20))<=0)
-20 -4864 0
-42 -4864 0
-42 -20 -4865 0
c (0<=( - aux610 + SATLiteral(42) + SATLiteral(20)))
20 4865 0
42 4865 0
42 20 4864 0
c (( - aux611 + SATLiteral(45) + SATLiteral(92))<=0)
-92 -4867 0
-45 -4867 0
-45 -92 -4868 0
c (0<=( - aux611 + SATLiteral(45) + SATLiteral(92)))
92 4868 0
45 4868 0
45 92 4867 0
c (( - aux612 + SATLiteral(72) + SATLiteral(79))<=0)
-79 -4870 0
-72 -4870 0
-72 -79 -4871 0
c (0<=( - aux612 + SATLiteral(72) + SATLiteral(79)))
79 4871 0
72 4871 0
72 79 4870 0
c (( - aux613 + SATLiteral(43) + SATLiteral(21))<=0)
-21 -4873 0
-43 -4873 0
-43 -21 -4874 0
c (0<=( - aux613 + SATLiteral(43) + SATLiteral(21)))
21 4874 0
43 4874 0
43 21 4873 0
c (( - aux614 + SATLiteral(46) + SATLiteral(93))<=0)
-93 -4876 0
-46 -4876 0
-46 -93 -4877 0
c (0<=( - aux614 + SATLiteral(46) + SATLiteral(93)))
93 4877 0
46 4877 0
46 93 4876 0
c (( - aux615 + SATLiteral(73) + SATLiteral(80))<=0)
-80 -4879 0
-73 -4879 0
-73 -80 -4880 0
c (0<=( - aux615 + SATLiteral(73) + SATLiteral(80)))
80 4880 0
73 4880 0
73 80 4879 0
c (( - aux618 + SATLiteral(47) + SATLiteral(33))<=0)
-33 -4888 0
-47 -4888 0
-47 -33 -4889 0
c (0<=( - aux618 + SATLiteral(47) + SATLiteral(33)))
33 4889 0
47 4889 0
47 33 4888 0
c (( - aux619 + SATLiteral(100) + SATLiteral(28))<=0)
-28 -4891 0
-100 -4891 0
-100 -28 -4892 0
c (0<=( - aux619 + SATLiteral(100) + SATLiteral(28)))
28 4892 0
100 4892 0
100 28 4891 0
c (( - aux620 + SATLiteral(105) + SATLiteral(110))<=0)
-110 -4894 0
-105 -4894 0
-105 -110 -4895 0
c (0<=( - aux620 + SATLiteral(105) + SATLiteral(110)))
110 4895 0
105 4895 0
105 110 4894 0
c (( - aux621 + SATLiteral(48) + SATLiteral(34))<=0)
-34 -4897 0
-48 -4897 0
-48 -34 -4898 0
c (0<=( - aux621 + SATLiteral(48) + SATLiteral(34)))
34 4898 0
48 4898 0
48 34 4897 0
c (( - aux622 + SATLiteral(101) + SATLiteral(29))<=0)
-29 -4900 0
-101 -4900 0
-101 -29 -4901 0
c (0<=( - aux622 + SATLiteral(101) + SATLiteral(29)))
29 4901 0
101 4901 0
101 29 4900 0
c (( - aux623 + SATLiteral(106) + SATLiteral(111))<=0)
-111 -4903 0
-106 -4903 0
-106 -111 -4904 0
c (0<=( - aux623 + SATLiteral(106) + SATLiteral(111)))
111 4904 0
106 4904 0
106 111 4903 0
c ((SATLiteral(116) - aux626 + SATLiteral(225))<=0)
-225 -4912 0
-116 -4912 0
-116 -225 -4913 0
c (0<=(SATLiteral(116) - aux626 + SATLiteral(225)))
225 4913 0
116 4913 0
116 225 4912 0
c ((SATLiteral(119) - aux627 + SATLiteral(212))<=0)
-212 -4915 0
-119 -4915 0
-119 -212 -4916 0
c (0<=(SATLiteral(119) - aux627 + SATLiteral(212)))
212 4916 0
119 4916 0
119 212 4915 0
c (( - aux628 + SATLiteral(137) + SATLiteral(150))<=0)
-150 -4918 0
-137 -4918 0
-137 -150 -4919 0
c (0<=( - aux628 + SATLiteral(137) + SATLiteral(150)))
150 4919 0
137 4919 0
137 150 4918 0
c ((aux628 - aux629 + SATLiteral(131))<=0)
4918 -4921 0
4919 -4922 0
-131 -4921 0
-131 4918 -4922 0
-131 4919 -4924 0
c (0<=(aux628 - aux629 + SATLiteral(131)))
-4919 4924 0
-4918 4922 0
131 4924 0
131 -4919 4922 0
131 -4918 4921 0
c (( - aux631 + SATLiteral(132) + SATLiteral(227))<=0)
-227 -4929 0
-132 -4929 0
-132 -227 -4930 0
c (0<=( - aux631 + SATLiteral(132) + SATLiteral(227)))
227 4930 0
132 4930 0
132 227 4929 0
c (( - aux632 + SATLiteral(139) + SATLiteral(214))<=0)
-214 -4932 0
-139 -4932 0
-139 -214 -4933 0
c (0<=( - aux632 + SATLiteral(139) + SATLiteral(214)))
214 4933 0
139 4933 0
139 214 4932 0
c (( - aux633 + SATLiteral(152) + SATLiteral(208))<=0)
-208 -4935 0
-152 -4935 0
-152 -208 -4936 0
c (0<=( - aux633 + SATLiteral(152) + SATLiteral(208)))
208 4936 0
152 4936 0
152 208 4935 0
c (( - aux634 + SATLiteral(133) + SATLiteral(228))<=0)
-228 -4938 0
-133 -4938 0
-133 -228 -4939 0
c (0<=( - aux634 + SATLiteral(133) + SATLiteral(228)))
228 4939 0
133 4939 0
133 228 4938 0
c (( - aux635 + SATLiteral(140) + SATLiteral(215))<=0)
-215 -4941 0
-140 -4941 0
-140 -215 -4942 0
c (0<=( - aux635 + SATLiteral(140) + SATLiteral(215)))
215 4942 0
140 4942 0
140 215 4941 0
c (( - aux636 + SATLiteral(153) + SATLiteral(209))<=0)
-209 -4944 0
-153 -4944 0
-153 -209 -4945 0
c (0<=( - aux636 + SATLiteral(153) + SATLiteral(209)))
209 4945 0
153 4945 0
153 209 4944 0
c ((SATLiteral(117) - aux637 + SATLiteral(229))<=0)
-229 -4947 0
-117 -4947 0
-117 -229 -4948 0
c (0<=(SATLiteral(117) - aux637 + SATLiteral(229)))
229 4948 0
117 4948 0
117 229 4947 0
c ((SATLiteral(120) - aux638 + SATLiteral(216))<=0)
-216 -4950 0
-120 -4950 0
-120 -216 -4951 0
c (0<=(SATLiteral(120) - aux638 + SATLiteral(216)))
216 4951 0
120 4951 0
120 216 4950 0
c (( - aux639 + SATLiteral(141) + SATLiteral(210))<=0)
-210 -4953 0
-141 -4953 0
-141 -210 -4954 0
c (0<=( - aux639 + SATLiteral(141) + SATLiteral(210)))
210 4954 0
141 4954 0
141 210 4953 0
c (( - aux640 + SATLiteral(134) + SATLiteral(154))<=0)
-154 -4956 0
-134 -4956 0
-134 -154 -4957 0
c (0<=( - aux640 + SATLiteral(134) + SATLiteral(154)))
154 4957 0
134 4957 0
134 154 4956 0
c ((aux637 + aux640 - aux641)<=0)
4956 -4959 0
4957 -4960 0
4947 -4959 0
4947 4956 -4960 0
4947 4957 -4962 0
4948 -4960 0
4948 4956 -4962 0
4948 4957 -4964 0
c (0<=(aux637 + aux640 - aux641))
-4957 4964 0
-4956 4962 0
-4948 4964 0
-4948 -4957 4962 0
-4948 -4956 4960 0
-4947 4962 0
-4947 -4957 4960 0
-4947 -4956 4959 0
c (( - aux642 + SATLiteral(135) + SATLiteral(230))<=0)
-230 -4966 0
-135 -4966 0
-135 -230 -4967 0
c (0<=( - aux642 + SATLiteral(135) + SATLiteral(230)))
230 4967 0
135 4967 0
135 230 4966 0
c (( - aux643 + SATLiteral(142) + SATLiteral(217))<=0)
-217 -4969 0
-142 -4969 0
-142 -217 -4970 0
c (0<=( - aux643 + SATLiteral(142) + SATLiteral(217)))
217 4970 0
142 4970 0
142 217 4969 0
c (( - aux644 + SATLiteral(155) + SATLiteral(211))<=0)
-211 -4972 0
-155 -4972 0
-155 -211 -4973 0
c (0<=( - aux644 + SATLiteral(155) + SATLiteral(211)))
211 4973 0
155 4973 0
155 211 4972 0
c (( - aux645 + SATLiteral(136) + SATLiteral(231))<=0)
-231 -4975 0
-136 -4975 0
-136 -231 -4976 0
c (0<=( - aux645 + SATLiteral(136) + SATLiteral(231)))
231 4976 0
136 4976 0
136 231 4975 0
c (( - aux646 + SATLiteral(143) + SATLiteral(218))<=0)
-218 -4978 0
-143 -4978 0
-143 -218 -4979 0
c (0<=( - aux646 + SATLiteral(143) + SATLiteral(218)))
218 4979 0
143 4979 0
143 218 4978 0
c ((SATLiteral(122) - aux648 + SATLiteral(256))<=0)
-256 -4984 0
-122 -4984 0
-122 -256 -4985 0
c (0<=(SATLiteral(122) - aux648 + SATLiteral(256)))
256 4985 0
122 4985 0
122 256 4984 0
c ((SATLiteral(125) - aux649 + SATLiteral(243))<=0)
-243 -4987 0
-125 -4987 0
-125 -243 -4988 0
c (0<=(SATLiteral(125) - aux649 + SATLiteral(243)))
243 4988 0
125 4988 0
125 243 4987 0
c (( - aux650 + SATLiteral(168) + SATLiteral(181))<=0)
-181 -4990 0
-168 -4990 0
-168 -181 -4991 0
c (0<=( - aux650 + SATLiteral(168) + SATLiteral(181)))
181 4991 0
168 4991 0
168 181 4990 0
c (( - aux652 + SATLiteral(163) + SATLiteral(258))<=0)
-258 -4996 0
-163 -4996 0
-163 -258 -4997 0
c (0<=( - aux652 + SATLiteral(163) + SATLiteral(258)))
258 4997 0
163 4997 0
163 258 4996 0
c (( - aux653 + SATLiteral(170) + SATLiteral(245))<=0)
-245 -4999 0
-170 -4999 0
-170 -245 -5000 0
c (0<=( - aux653 + SATLiteral(170) + SATLiteral(245)))
245 5000 0
170 5000 0
170 245 4999 0
c (( - aux654 + SATLiteral(183) + SATLiteral(238))<=0)
-238 -5002 0
-183 -5002 0
-183 -238 -5003 0
c (0<=( - aux654 + SATLiteral(183) + SATLiteral(238)))
238 5003 0
183 5003 0
183 238 5002 0
c (( - aux655 + SATLiteral(164) + SATLiteral(259))<=0)
-259 -5005 0
-164 -5005 0
-164 -259 -5006 0
c (0<=( - aux655 + SATLiteral(164) + SATLiteral(259)))
259 5006 0
164 5006 0
164 259 5005 0
c (( - aux656 + SATLiteral(171) + SATLiteral(246))<=0)
-246 -5008 0
-171 -5008 0
-171 -246 -5009 0
c (0<=( - aux656 + SATLiteral(171) + SATLiteral(246)))
246 5009 0
171 5009 0
171 246 5008 0
c (( - aux657 + SATLiteral(184) + SATLiteral(239))<=0)
-239 -5011 0
-184 -5011 0
-184 -239 -5012 0
c (0<=( - aux657 + SATLiteral(184) + SATLiteral(239)))
239 5012 0
184 5012 0
184 239 5011 0
c ((SATLiteral(123) - aux658 + SATLiteral(260))<=0)
-260 -5014 0
-123 -5014 0
-123 -260 -5015 0
c (0<=(SATLiteral(123) - aux658 + SATLiteral(260)))
260 5015 0
123 5015 0
123 260 5014 0
c ((SATLiteral(126) - aux659 + SATLiteral(247))<=0)
-247 -5017 0
-126 -5017 0
-126 -247 -5018 0
c (0<=(SATLiteral(126) - aux659 + SATLiteral(247)))
247 5018 0
126 5018 0
126 247 5017 0
c (( - aux660 + SATLiteral(172) + SATLiteral(240))<=0)
-240 -5020 0
-172 -5020 0
-172 -240 -5021 0
c (0<=( - aux660 + SATLiteral(172) + SATLiteral(240)))
240 5021 0
172 5021 0
172 240 5020 0
c (( - aux661 + SATLiteral(165) + SATLiteral(185))<=0)
-185 -5023 0
-165 -5023 0
-165 -185 -5024 0
c (0<=( - aux661 + SATLiteral(165) + SATLiteral(185)))
185 5024 0
165 5024 0
165 185 5023 0
c ((aux658 + aux661 - aux662)<=0)
5023 -5026 0
5024 -5027 0
5014 -5026 0
5014 5023 -5027 0
5014 5024 -5029 0
5015 -5027 0
5015 5023 -5029 0
5015 5024 -5031 0
c (0<=(aux658 + aux661 - aux662))
-5024 5031 0
-5023 5029 0
-5015 5031 0
-5015 -5024 5029 0
-5015 -5023 5027 0
-5014 5029 0
-5014 -5024 5027 0
-5014 -5023 5026 0
c (( - aux663 + SATLiteral(166) + SATLiteral(261))<=0)
-261 -5033 0
-166 -5033 0
-166 -261 -5034 0
c (0<=( - aux663 + SATLiteral(166) + SATLiteral(261)))
261 5034 0
166 5034 0
166 261 5033 0
c (( - aux664 + SATLiteral(173) + SATLiteral(248))<=0)
-248 -5036 0
-173 -5036 0
-173 -248 -5037 0
c (0<=( - aux664 + SATLiteral(173) + SATLiteral(248)))
248 5037 0
173 5037 0
173 248 5036 0
c (( - aux665 + SATLiteral(186) + SATLiteral(241))<=0)
-241 -5039 0
-186 -5039 0
-186 -241 -5040 0
c (0<=( - aux665 + SATLiteral(186) + SATLiteral(241)))
241 5040 0
186 5040 0
186 241 5039 0
c (( - aux668 + SATLiteral(194) + SATLiteral(-279))<=0)
279 -5048 0
-194 -5048 0
-194 279 -5049 0
c (0<=( - aux668 + SATLiteral(194) + SATLiteral(-279)))
-279 5049 0
194 5049 0
194 -279 5048 0
c (( - aux669 + SATLiteral(200) + SATLiteral(276))<=0)
-276 -5051 0
-200 -5051 0
-200 -276 -5052 0
c (0<=( - aux669 + SATLiteral(200) + SATLiteral(276)))
276 5052 0
200 5052 0
200 276 5051 0
c (( - aux670 + SATLiteral(205) + SATLiteral(270))<=0)
-270 -5054 0
-205 -5054 0
-205 -270 -5055 0
c (0<=( - aux670 + SATLiteral(205) + SATLiteral(270)))
270 5055 0
205 5055 0
205 270 5054 0
c (( - aux671 + SATLiteral(195) + SATLiteral(279))<=0)
-279 -5057 0
-195 -5057 0
-195 -279 -5058 0
c (0<=( - aux671 + SATLiteral(195) + SATLiteral(279)))
279 5058 0
195 5058 0
195 279 5057 0
c (( - aux672 + SATLiteral(201) + SATLiteral(277))<=0)
-277 -5060 0
-201 -5060 0
-201 -277 -5061 0
c (0<=( - aux672 + SATLiteral(201) + SATLiteral(277)))
277 5061 0
201 5061 0
201 277 5060 0
c (( - aux673 + SATLiteral(206) + SATLiteral(271))<=0)
-271 -5063 0
-206 -5063 0
-206 -271 -5064 0
c (0<=( - aux673 + SATLiteral(206) + SATLiteral(271)))
271 5064 0
206 5064 0
206 271 5063 0
c (( - aux674 + SATLiteral(196) + SATLiteral(278))<=0)
-278 -5066 0
-196 -5066 0
-196 -278 -5067 0
c (0<=( - aux674 + SATLiteral(196) + SATLiteral(278)))
278 5067 0
196 5067 0
196 278 5066 0
c (( - aux675 + SATLiteral(202) + SATLiteral(272))<=0)
-272 -5069 0
-202 -5069 0
-202 -272 -5070 0
c (0<=( - aux675 + SATLiteral(202) + SATLiteral(272)))
272 5070 0
202 5070 0
202 272 5069 0
c ((SATLiteral(448) - aux676 + SATLiteral(387))<=0)
-387 -5072 0
-448 -5072 0
-448 -387 -5073 0
c (0<=(SATLiteral(448) - aux676 + SATLiteral(387)))
387 5073 0
448 5073 0
448 387 5072 0
c ((SATLiteral(461) - aux677 + SATLiteral(373))<=0)
-373 -5075 0
-461 -5075 0
-461 -373 -5076 0
c (0<=(SATLiteral(461) - aux677 + SATLiteral(373)))
373 5076 0
461 5076 0
461 373 5075 0
c (( - aux678 + SATLiteral(293) + SATLiteral(307))<=0)
-307 -5078 0
-293 -5078 0
-293 -307 -5079 0
c (0<=( - aux678 + SATLiteral(293) + SATLiteral(307)))
307 5079 0
293 5079 0
293 307 5078 0
c ((aux678 - aux679 + SATLiteral(281))<=0)
5078 -5081 0
5079 -5082 0
-281 -5081 0
-281 5078 -5082 0
-281 5079 -5084 0
c (0<=(aux678 - aux679 + SATLiteral(281)))
-5079 5084 0
-5078 5082 0
281 5084 0
281 -5079 5082 0
281 -5078 5081 0
c ((SATLiteral(449) - aux682 + SATLiteral(390))<=0)
-390 -5092 0
-449 -5092 0
-449 -390 -5093 0
c (0<=(SATLiteral(449) - aux682 + SATLiteral(390)))
390 5093 0
449 5093 0
449 390 5092 0
c ((SATLiteral(-460) - aux683 + SATLiteral(376))<=0)
-376 -5095 0
460 -5095 0
460 -376 -5096 0
c (0<=(SATLiteral(-460) - aux683 + SATLiteral(376)))
376 5096 0
-460 5096 0
-460 376 5095 0
c (( - aux684 + SATLiteral(282) + SATLiteral(369))<=0)
-369 -5098 0
-282 -5098 0
-282 -369 -5099 0
c (0<=( - aux684 + SATLiteral(282) + SATLiteral(369)))
369 5099 0
282 5099 0
282 369 5098 0
c (( - aux685 + SATLiteral(296) + SATLiteral(310))<=0)
-310 -5101 0
-296 -5101 0
-296 -310 -5102 0
c (0<=( - aux685 + SATLiteral(296) + SATLiteral(310)))
310 5102 0
296 5102 0
296 310 5101 0
c ((SATLiteral(462) + aux685 - aux686)<=0)
5101 -5104 0
5102 -5105 0
-462 -5104 0
-462 5101 -5105 0
-462 5102 -5107 0
c (0<=(SATLiteral(462) + aux685 - aux686))
-5102 5107 0
-5101 5105 0
462 5107 0
462 -5102 5105 0
462 -5101 5104 0
c ((aux682 + aux684 - aux687)<=0)
5098 -5109 0
5099 -5110 0
5092 -5109 0
5092 5098 -5110 0
5092 5099 -5112 0
5093 -5110 0
5093 5098 -5112 0
5093 5099 -5114 0
c (0<=(aux682 + aux684 - aux687))
-5099 5114 0
-5098 5112 0
-5093 5114 0
-5093 -5099 5112 0
-5093 -5098 5110 0
-5092 5112 0
-5092 -5099 5110 0
-5092 -5098 5109 0
c ((SATLiteral(450) - aux688 + SATLiteral(391))<=0)
-391 -5116 0
-450 -5116 0
-450 -391 -5117 0
c (0<=(SATLiteral(450) - aux688 + SATLiteral(391)))
391 5117 0
450 5117 0
450 391 5116 0
c ((SATLiteral(460) - aux689 + SATLiteral(377))<=0)
-377 -5119 0
-460 -5119 0
-460 -377 -5120 0
c (0<=(SATLiteral(460) - aux689 + SATLiteral(377)))
377 5120 0
460 5120 0
460 377 5119 0
c (( - aux690 + SATLiteral(283) + SATLiteral(370))<=0)
-370 -5122 0
-283 -5122 0
-283 -370 -5123 0
c (0<=( - aux690 + SATLiteral(283) + SATLiteral(370)))
370 5123 0
283 5123 0
283 370 5122 0
c (( - aux691 + SATLiteral(297) + SATLiteral(311))<=0)
-311 -5125 0
-297 -5125 0
-297 -311 -5126 0
c (0<=( - aux691 + SATLiteral(297) + SATLiteral(311)))
311 5126 0
297 5126 0
297 311 5125 0
c ((SATLiteral(463) + aux691 - aux692)<=0)
5125 -5128 0
5126 -5129 0
-463 -5128 0
-463 5125 -5129 0
-463 5126 -5131 0
c (0<=(SATLiteral(463) + aux691 - aux692))
-5126 5131 0
-5125 5129 0
463 5131 0
463 -5126 5129 0
463 -5125 5128 0
c ((aux688 + aux690 - aux693)<=0)
5122 -5133 0
5123 -5134 0
5116 -5133 0
5116 5122 -5134 0
5116 5123 -5136 0
5117 -5134 0
5117 5122 -5136 0
5117 5123 -5138 0
c (0<=(aux688 + aux690 - aux693))
-5123 5138 0
-5122 5136 0
-5117 5138 0
-5117 -5123 5136 0
-5117 -5122 5134 0
-5116 5136 0
-5116 -5123 5134 0
-5116 -5122 5133 0
c ((SATLiteral(451) - aux694 + SATLiteral(392))<=0)
-392 -5140 0
-451 -5140 0
-451 -392 -5141 0
c (0<=(SATLiteral(451) - aux694 + SATLiteral(392)))
392 5141 0
451 5141 0
451 392 5140 0
c ((SATLiteral(464) - aux695 + SATLiteral(378))<=0)
-378 -5143 0
-464 -5143 0
-464 -378 -5144 0
c (0<=(SATLiteral(464) - aux695 + SATLiteral(378)))
378 5144 0
464 5144 0
464 378 5143 0
c (( - aux696 + SATLiteral(298) + SATLiteral(371))<=0)
-371 -5146 0
-298 -5146 0
-298 -371 -5147 0
c (0<=( - aux696 + SATLiteral(298) + SATLiteral(371)))
371 5147 0
298 5147 0
298 371 5146 0
c (( - aux697 + SATLiteral(284) + SATLiteral(312))<=0)
-312 -5149 0
-284 -5149 0
-284 -312 -5150 0
c (0<=( - aux697 + SATLiteral(284) + SATLiteral(312)))
312 5150 0
284 5150 0
284 312 5149 0
c ((aux694 + aux697 - aux698)<=0)
5149 -5152 0
5150 -5153 0
5140 -5152 0
5140 5149 -5153 0
5140 5150 -5155 0
5141 -5153 0
5141 5149 -5155 0
5141 5150 -5157 0
c (0<=(aux694 + aux697 - aux698))
-5150 5157 0
-5149 5155 0
-5141 5157 0
-5141 -5150 5155 0
-5141 -5149 5153 0
-5140 5155 0
-5140 -5150 5153 0
-5140 -5149 5152 0
c ((SATLiteral(452) - aux699 + SATLiteral(393))<=0)
-393 -5159 0
-452 -5159 0
-452 -393 -5160 0
c (0<=(SATLiteral(452) - aux699 + SATLiteral(393)))
393 5160 0
452 5160 0
452 393 5159 0
c ((SATLiteral(465) - aux700 + SATLiteral(379))<=0)
-379 -5162 0
-465 -5162 0
-465 -379 -5163 0
c (0<=(SATLiteral(465) - aux700 + SATLiteral(379)))
379 5163 0
465 5163 0
465 379 5162 0
c (( - aux701 + SATLiteral(299) + SATLiteral(372))<=0)
-372 -5165 0
-299 -5165 0
-299 -372 -5166 0
c (0<=( - aux701 + SATLiteral(299) + SATLiteral(372)))
372 5166 0
299 5166 0
299 372 5165 0
c (( - aux702 + SATLiteral(285) + SATLiteral(313))<=0)
-313 -5168 0
-285 -5168 0
-285 -313 -5169 0
c (0<=( - aux702 + SATLiteral(285) + SATLiteral(313)))
313 5169 0
285 5169 0
285 313 5168 0
c ((aux699 + aux702 - aux703)<=0)
5168 -5171 0
5169 -5172 0
5159 -5171 0
5159 5168 -5172 0
5159 5169 -5174 0
5160 -5172 0
5160 5168 -5174 0
5160 5169 -5176 0
c (0<=(aux699 + aux702 - aux703))
-5169 5176 0
-5168 5174 0
-5160 5176 0
-5160 -5169 5174 0
-5160 -5168 5172 0
-5159 5174 0
-5159 -5169 5172 0
-5159 -5168 5171 0
c ((SATLiteral(453) - aux704 + SATLiteral(394))<=0)
-394 -5178 0
-453 -5178 0
-453 -394 -5179 0
c (0<=(SATLiteral(453) - aux704 + SATLiteral(394)))
394 5179 0
453 5179 0
453 394 5178 0
c ((SATLiteral(466) - aux705 + SATLiteral(380))<=0)
-380 -5181 0
-466 -5181 0
-466 -380 -5182 0
c (0<=(SATLiteral(466) - aux705 + SATLiteral(380)))
380 5182 0
466 5182 0
466 380 5181 0
c (( - aux706 + SATLiteral(300) + SATLiteral(314))<=0)
-314 -5184 0
-300 -5184 0
-300 -314 -5185 0
c (0<=( - aux706 + SATLiteral(300) + SATLiteral(314)))
314 5185 0
300 5185 0
300 314 5184 0
c ((aux706 - aux707 + SATLiteral(286))<=0)
5184 -5187 0
5185 -5188 0
-286 -5187 0
-286 5184 -5188 0
-286 5185 -5190 0
c (0<=(aux706 - aux707 + SATLiteral(286)))
-5185 5190 0
-5184 5188 0
286 5190 0
286 -5185 5188 0
286 -5184 5187 0
c ((SATLiteral(468) - aux708 + SATLiteral(418))<=0)
-418 -5192 0
-468 -5192 0
-468 -418 -5193 0
c (0<=(SATLiteral(468) - aux708 + SATLiteral(418)))
418 5193 0
468 5193 0
468 418 5192 0
c ((SATLiteral(474) - aux709 + SATLiteral(405))<=0)
-405 -5195 0
-474 -5195 0
-474 -405 -5196 0
c (0<=(SATLiteral(474) - aux709 + SATLiteral(405)))
405 5196 0
474 5196 0
474 405 5195 0
c (( - aux710 + SATLiteral(325) + SATLiteral(338))<=0)
-338 -5198 0
-325 -5198 0
-325 -338 -5199 0
c (0<=( - aux710 + SATLiteral(325) + SATLiteral(338)))
338 5199 0
325 5199 0
325 338 5198 0
c (( - aux711 + SATLiteral(322) + SATLiteral(419))<=0)
-419 -5201 0
-322 -5201 0
-322 -419 -5202 0
c (0<=( - aux711 + SATLiteral(322) + SATLiteral(419)))
419 5202 0
322 5202 0
322 419 5201 0
c (( - aux712 + SATLiteral(326) + SATLiteral(406))<=0)
-406 -5204 0
-326 -5204 0
-326 -406 -5205 0
c (0<=( - aux712 + SATLiteral(326) + SATLiteral(406)))
406 5205 0
326 5205 0
326 406 5204 0
c (( - aux713 + SATLiteral(339) + SATLiteral(402))<=0)
-402 -5207 0
-339 -5207 0
-339 -402 -5208 0
c (0<=( - aux713 + SATLiteral(339) + SATLiteral(402)))
402 5208 0
339 5208 0
339 402 5207 0
c ((SATLiteral(469) - aux714 + SATLiteral(420))<=0)
-420 -5210 0
-469 -5210 0
-469 -420 -5211 0
c (0<=(SATLiteral(469) - aux714 + SATLiteral(420)))
420 5211 0
469 5211 0
469 420 5210 0
c ((SATLiteral(475) - aux715 + SATLiteral(407))<=0)
-407 -5213 0
-475 -5213 0
-475 -407 -5214 0
c (0<=(SATLiteral(475) - aux715 + SATLiteral(407)))
407 5214 0
475 5214 0
475 407 5213 0
c (( - aux716 + SATLiteral(327) + SATLiteral(340))<=0)
-340 -5216 0
-327 -5216 0
-327 -340 -5217 0
c (0<=( - aux716 + SATLiteral(327) + SATLiteral(340)))
340 5217 0
327 5217 0
327 340 5216 0
c ((SATLiteral(470) - aux717 + SATLiteral(421))<=0)
-421 -5219 0
-470 -5219 0
-470 -421 -5220 0
c (0<=(SATLiteral(470) - aux717 + SATLiteral(421)))
421 5220 0
470 5220 0
470 421 5219 0
c ((SATLiteral(476) - aux718 + SATLiteral(408))<=0)
-408 -5222 0
-476 -5222 0
-476 -408 -5223 0
c (0<=(SATLiteral(476) - aux718 + SATLiteral(408)))
408 5223 0
476 5223 0
476 408 5222 0
c (( - aux719 + SATLiteral(328) + SATLiteral(403))<=0)
-403 -5225 0
-328 -5225 0
-328 -403 -5226 0
c (0<=( - aux719 + SATLiteral(328) + SATLiteral(403)))
403 5226 0
328 5226 0
328 403 5225 0
c (( - aux720 + SATLiteral(323) + SATLiteral(341))<=0)
-341 -5228 0
-323 -5228 0
-323 -341 -5229 0
c (0<=( - aux720 + SATLiteral(323) + SATLiteral(341)))
341 5229 0
323 5229 0
323 341 5228 0
c ((aux717 + aux720 - aux721)<=0)
5228 -5231 0
5229 -5232 0
5219 -5231 0
5219 5228 -5232 0
5219 5229 -5234 0
5220 -5232 0
5220 5228 -5234 0
5220 5229 -5236 0
c (0<=(aux717 + aux720 - aux721))
-5229 5236 0
-5228 5234 0
-5220 5236 0
-5220 -5229 5234 0
-5220 -5228 5232 0
-5219 5234 0
-5219 -5229 5232 0
-5219 -5228 5231 0
c ((SATLiteral(471) - aux722 + SATLiteral(422))<=0)
-422 -5238 0
-471 -5238 0
-471 -422 -5239 0
c (0<=(SATLiteral(471) - aux722 + SATLiteral(422)))
422 5239 0
471 5239 0
471 422 5238 0
c ((SATLiteral(477) - aux723 + SATLiteral(409))<=0)
-409 -5241 0
-477 -5241 0
-477 -409 -5242 0
c (0<=(SATLiteral(477) - aux723 + SATLiteral(409)))
409 5242 0
477 5242 0
477 409 5241 0
c (( - aux724 + SATLiteral(329) + SATLiteral(404))<=0)
-404 -5244 0
-329 -5244 0
-329 -404 -5245 0
c (0<=( - aux724 + SATLiteral(329) + SATLiteral(404)))
404 5245 0
329 5245 0
329 404 5244 0
c (( - aux725 + SATLiteral(324) + SATLiteral(342))<=0)
-342 -5247 0
-324 -5247 0
-324 -342 -5248 0
c (0<=( - aux725 + SATLiteral(324) + SATLiteral(342)))
342 5248 0
324 5248 0
324 342 5247 0
c ((aux722 + aux725 - aux726)<=0)
5247 -5250 0
5248 -5251 0
5238 -5250 0
5238 5247 -5251 0
5238 5248 -5253 0
5239 -5251 0
5239 5247 -5253 0
5239 5248 -5255 0
c (0<=(aux722 + aux725 - aux726))
-5248 5255 0
-5247 5253 0
-5239 5255 0
-5239 -5248 5253 0
-5239 -5247 5251 0
-5238 5253 0
-5238 -5248 5251 0
-5238 -5247 5250 0
c ((SATLiteral(472) - aux727 + SATLiteral(423))<=0)
-423 -5257 0
-472 -5257 0
-472 -423 -5258 0
c (0<=(SATLiteral(472) - aux727 + SATLiteral(423)))
423 5258 0
472 5258 0
472 423 5257 0
c ((SATLiteral(478) - aux728 + SATLiteral(410))<=0)
-410 -5260 0
-478 -5260 0
-478 -410 -5261 0
c (0<=(SATLiteral(478) - aux728 + SATLiteral(410)))
410 5261 0
478 5261 0
478 410 5260 0
c (( - aux729 + SATLiteral(330) + SATLiteral(343))<=0)
-343 -5263 0
-330 -5263 0
-330 -343 -5264 0
c (0<=( - aux729 + SATLiteral(330) + SATLiteral(343)))
343 5264 0
330 5264 0
330 343 5263 0
c ((SATLiteral(473) - aux730 + SATLiteral(424))<=0)
-424 -5266 0
-473 -5266 0
-473 -424 -5267 0
c (0<=(SATLiteral(473) - aux730 + SATLiteral(424)))
424 5267 0
473 5267 0
473 424 5266 0
c ((SATLiteral(479) - aux731 + SATLiteral(411))<=0)
-411 -5269 0
-479 -5269 0
-479 -411 -5270 0
c (0<=(SATLiteral(479) - aux731 + SATLiteral(411)))
411 5270 0
479 5270 0
479 411 5269 0
c (( - aux732 + SATLiteral(331) + SATLiteral(344))<=0)
-344 -5272 0
-331 -5272 0
-331 -344 -5273 0
c (0<=( - aux732 + SATLiteral(331) + SATLiteral(344)))
344 5273 0
331 5273 0
331 344 5272 0
c ((SATLiteral(481) - aux733 + SATLiteral(437))<=0)
-437 -5275 0
-481 -5275 0
-481 -437 -5276 0
c (0<=(SATLiteral(481) - aux733 + SATLiteral(437)))
437 5276 0
481 5276 0
481 437 5275 0
c ((SATLiteral(486) - aux734 + SATLiteral(431))<=0)
-431 -5278 0
-486 -5278 0
-486 -431 -5279 0
c (0<=(SATLiteral(486) - aux734 + SATLiteral(431)))
431 5279 0
486 5279 0
486 431 5278 0
c (( - aux735 + SATLiteral(357) + SATLiteral(363))<=0)
-363 -5281 0
-357 -5281 0
-357 -363 -5282 0
c (0<=( - aux735 + SATLiteral(357) + SATLiteral(363)))
363 5282 0
357 5282 0
357 363 5281 0
c ((aux735 - aux736 + SATLiteral(351))<=0)
5281 -5284 0
5282 -5285 0
-351 -5284 0
-351 5281 -5285 0
-351 5282 -5287 0
c (0<=(aux735 - aux736 + SATLiteral(351)))
-5282 5287 0
-5281 5285 0
351 5287 0
351 -5282 5285 0
351 -5281 5284 0
c ((SATLiteral(482) - aux737 + SATLiteral(438))<=0)
-438 -5289 0
-482 -5289 0
-482 -438 -5290 0
c (0<=(SATLiteral(482) - aux737 + SATLiteral(438)))
438 5290 0
482 5290 0
482 438 5289 0
c (( - aux738 + SATLiteral(352) + SATLiteral(432))<=0)
-432 -5292 0
-352 -5292 0
-352 -432 -5293 0
c (0<=( - aux738 + SATLiteral(352) + SATLiteral(432)))
432 5293 0
352 5293 0
352 432 5292 0
c ((SATLiteral(483) - aux739 + SATLiteral(443))<=0)
-443 -5295 0
-483 -5295 0
-483 -443 -5296 0
c (0<=(SATLiteral(483) - aux739 + SATLiteral(443)))
443 5296 0
483 5296 0
483 443 5295 0
c ((SATLiteral(487) - aux740 + SATLiteral(440))<=0)
-440 -5298 0
-487 -5298 0
-487 -440 -5299 0
c (0<=(SATLiteral(487) - aux740 + SATLiteral(440)))
440 5299 0
487 5299 0
487 440 5298 0
c (( - aux741 + SATLiteral(360) + SATLiteral(433))<=0)
-433 -5301 0
-360 -5301 0
-360 -433 -5302 0
c (0<=( - aux741 + SATLiteral(360) + SATLiteral(433)))
433 5302 0
360 5302 0
360 433 5301 0
c (( - aux742 + SATLiteral(353) + SATLiteral(364))<=0)
-364 -5304 0
-353 -5304 0
-353 -364 -5305 0
c (0<=( - aux742 + SATLiteral(353) + SATLiteral(364)))
364 5305 0
353 5305 0
353 364 5304 0
c ((aux739 + aux742 - aux743)<=0)
5304 -5307 0
5305 -5308 0
5295 -5307 0
5295 5304 -5308 0
5295 5305 -5310 0
5296 -5308 0
5296 5304 -5310 0
5296 5305 -5312 0
c (0<=(aux739 + aux742 - aux743))
-5305 5312 0
-5304 5310 0
-5296 5312 0
-5296 -5305 5310 0
-5296 -5304 5308 0
-5295 5310 0
-5295 -5305 5308 0
-5295 -5304 5307 0
c ((SATLiteral(484) - aux744 + SATLiteral(445))<=0)
-445 -5314 0
-484 -5314 0
-484 -445 -5315 0
c (0<=(SATLiteral(484) - aux744 + SATLiteral(445)))
445 5315 0
484 5315 0
484 445 5314 0
c ((SATLiteral(489) - aux745 + SATLiteral(441))<=0)
-441 -5317 0
-489 -5317 0
-489 -441 -5318 0
c (0<=(SATLiteral(489) - aux745 + SATLiteral(441)))
441 5318 0
489 5318 0
489 441 5317 0
c (( - aux746 + SATLiteral(361) + SATLiteral(434))<=0)
-434 -5320 0
-361 -5320 0
-361 -434 -5321 0
c (0<=( - aux746 + SATLiteral(361) + SATLiteral(434)))
434 5321 0
361 5321 0
361 434 5320 0
c (( - aux747 + SATLiteral(354) + SATLiteral(366))<=0)
-366 -5323 0
-354 -5323 0
-354 -366 -5324 0
c (0<=( - aux747 + SATLiteral(354) + SATLiteral(366)))
366 5324 0
354 5324 0
354 366 5323 0
c ((aux744 + aux747 - aux748)<=0)
5323 -5326 0
5324 -5327 0
5314 -5326 0
5314 5323 -5327 0
5314 5324 -5329 0
5315 -5327 0
5315 5323 -5329 0
5315 5324 -5331 0
c (0<=(aux744 + aux747 - aux748))
-5324 5331 0
-5323 5329 0
-5315 5331 0
-5315 -5324 5329 0
-5315 -5323 5327 0
-5314 5329 0
-5314 -5324 5327 0
-5314 -5323 5326 0
c ((SATLiteral(490) - aux749 + SATLiteral(446))<=0)
-446 -5333 0
-490 -5333 0
-490 -446 -5334 0
c (0<=(SATLiteral(490) - aux749 + SATLiteral(446)))
446 5334 0
490 5334 0
490 446 5333 0
c (( - aux750 + SATLiteral(355) + SATLiteral(435))<=0)
-435 -5336 0
-355 -5336 0
-355 -435 -5337 0
c (0<=( - aux750 + SATLiteral(355) + SATLiteral(435)))
435 5337 0
355 5337 0
355 435 5336 0
c ((SATLiteral(485) - aux751 + SATLiteral(442))<=0)
-442 -5339 0
-485 -5339 0
-485 -442 -5340 0
c (0<=(SATLiteral(485) - aux751 + SATLiteral(442)))
442 5340 0
485 5340 0
485 442 5339 0
c ((SATLiteral(491) - aux752 + SATLiteral(436))<=0)
-436 -5342 0
-491 -5342 0
-491 -436 -5343 0
c (0<=(SATLiteral(491) - aux752 + SATLiteral(436)))
436 5343 0
491 5343 0
491 436 5342 0
c (( - aux753 + SATLiteral(362) + SATLiteral(368))<=0)
-368 -5345 0
-362 -5345 0
-362 -368 -5346 0
c (0<=( - aux753 + SATLiteral(362) + SATLiteral(368)))
368 5346 0
362 5346 0
362 368 5345 0
c ((aux753 - aux754 + SATLiteral(356))<=0)
5345 -5348 0
5346 -5349 0
-356 -5348 0
-356 5345 -5349 0
-356 5346 -5351 0
c (0<=(aux753 - aux754 + SATLiteral(356)))
-5346 5351 0
-5345 5349 0
356 5351 0
356 -5346 5349 0
356 -5345 5348 0
